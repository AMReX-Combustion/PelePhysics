#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  O
1  H
2  C
3  N
*/

// Species
#define NC12H26_ID 0
#define H_ID 1
#define O_ID 2
#define OH_ID 3
#define HO2_ID 4
#define H2_ID 5
#define H2O_ID 6
#define H2O2_ID 7
#define O2_ID 8
#define CH2_ID 9
#define CH2D_ID 10
#define CH3_ID 11
#define CH4_ID 12
#define HCO_ID 13
#define CH2O_ID 14
#define CH3O_ID 15
#define CO_ID 16
#define CO2_ID 17
#define C2H2_ID 18
#define C2H3_ID 19
#define C2H4_ID 20
#define C2H5_ID 21
#define C2H6_ID 22
#define CH2CHO_ID 23
#define aC3H5_ID 24
#define C3H6_ID 25
#define nC3H7_ID 26
#define C2H3CHO_ID 27
#define C4H7_ID 28
#define C4H81_ID 29
#define pC4H9_ID 30
#define C5H9_ID 31
#define C5H10_ID 32
#define PXC5H11_ID 33
#define C6H12_ID 34
#define PXC6H13_ID 35
#define C7H14_ID 36
#define PXC7H15_ID 37
#define C8H16_ID 38
#define PXC8H17_ID 39
#define C9H18_ID 40
#define PXC9H19_ID 41
#define C10H20_ID 42
#define PXC10H21_ID 43
#define PXC12H25_ID 44
#define SXC12H25_ID 45
#define S3XC12H25_ID 46
#define C12H24_ID 47
#define C12H25O2_ID 48
#define C12OOH_ID 49
#define O2C12H24OOH_ID 50
#define OC12H23OOH_ID 51
#define N2_ID 52

#define NUM_ELEMENTS 4
#define NUM_SPECIES 53
#define NUM_IONS 0
#define NUM_REACTIONS 268

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 53;
  ii = 268;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[53] = {
  0.0058706117177410, // NC12H26
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0712910814857061, // CH2
  0.0712910814857061, // CH2*
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0332557366145660, // C2H6
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0232077792476038, // nC3H7
  0.0178367579908676, // C2H3CHO
  0.0181488203266788, // C4H7
  0.0178227703714265, // C4H81
  0.0175082288675678, // pC4H9
  0.0144661275623128, // C5H9
  0.0142582162971412, // C5H10
  0.0140561966743039, // PXC5H11
  0.0118818469142844, // C6H12
  0.0117412234354820, // PXC6H13
  0.0101844402122437, // C7H14
  0.0100809500287307, // PXC7H15
  0.0089113851857133, // C8H16
  0.0088320497421041, // PXC8H17
  0.0079212312761896, // C9H18
  0.0078584844126962, // PXC9H19
  0.0071291081485706, // C10H20
  0.0070782428969833, // PXC10H21
  0.0059055583114828, // PXC12H25
  0.0059055583114828, // SXC12H25
  0.0059055583114828, // S3XC12H25
  0.0059409234571422, // C12H24
  0.0049669696518154, // C12H25O2
  0.0049669696518154, // C12OOH
  0.0042858122471371, // O2C12H24OOH
  0.0046227596950828, // OC12H23OOH
  0.0356964374955379, // N2
};
const amrex::Real h_global_imw[53] = {
  0.0058706117177410, // NC12H26
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0712910814857061, // CH2
  0.0712910814857061, // CH2*
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0332557366145660, // C2H6
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0232077792476038, // nC3H7
  0.0178367579908676, // C2H3CHO
  0.0181488203266788, // C4H7
  0.0178227703714265, // C4H81
  0.0175082288675678, // pC4H9
  0.0144661275623128, // C5H9
  0.0142582162971412, // C5H10
  0.0140561966743039, // PXC5H11
  0.0118818469142844, // C6H12
  0.0117412234354820, // PXC6H13
  0.0101844402122437, // C7H14
  0.0100809500287307, // PXC7H15
  0.0089113851857133, // C8H16
  0.0088320497421041, // PXC8H17
  0.0079212312761896, // C9H18
  0.0078584844126962, // PXC9H19
  0.0071291081485706, // C10H20
  0.0070782428969833, // PXC10H21
  0.0059055583114828, // PXC12H25
  0.0059055583114828, // SXC12H25
  0.0059055583114828, // S3XC12H25
  0.0059409234571422, // C12H24
  0.0049669696518154, // C12H25O2
  0.0049669696518154, // C12OOH
  0.0042858122471371, // O2C12H24OOH
  0.0046227596950828, // OC12H23OOH
  0.0356964374955379, // N2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[53] = {
  170.340000, // NC12H26
  1.008000,   // H
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  2.016000,   // H2
  18.015000,  // H2O
  34.014000,  // H2O2
  31.998000,  // O2
  14.027000,  // CH2
  14.027000,  // CH2*
  15.035000,  // CH3
  16.043000,  // CH4
  29.018000,  // HCO
  30.026000,  // CH2O
  31.034000,  // CH3O
  28.010000,  // CO
  44.009000,  // CO2
  26.038000,  // C2H2
  27.046000,  // C2H3
  28.054000,  // C2H4
  29.062000,  // C2H5
  30.070000,  // C2H6
  43.045000,  // CH2CHO
  41.073000,  // aC3H5
  42.081000,  // C3H6
  43.089000,  // nC3H7
  56.064000,  // C2H3CHO
  55.100000,  // C4H7
  56.108000,  // C4H81
  57.116000,  // pC4H9
  69.127000,  // C5H9
  70.135000,  // C5H10
  71.143000,  // PXC5H11
  84.162000,  // C6H12
  85.170000,  // PXC6H13
  98.189000,  // C7H14
  99.197000,  // PXC7H15
  112.216000, // C8H16
  113.224000, // PXC8H17
  126.243000, // C9H18
  127.251000, // PXC9H19
  140.270000, // C10H20
  141.278000, // PXC10H21
  169.332000, // PXC12H25
  169.332000, // SXC12H25
  169.332000, // S3XC12H25
  168.324000, // C12H24
  201.330000, // C12H25O2
  201.330000, // C12OOH
  233.328000, // O2C12H24OOH
  216.321000, // OC12H23OOH
  28.014000,  // N2
};
const amrex::Real h_global_mw[53] = {
  170.340000, // NC12H26
  1.008000,   // H
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  2.016000,   // H2
  18.015000,  // H2O
  34.014000,  // H2O2
  31.998000,  // O2
  14.027000,  // CH2
  14.027000,  // CH2*
  15.035000,  // CH3
  16.043000,  // CH4
  29.018000,  // HCO
  30.026000,  // CH2O
  31.034000,  // CH3O
  28.010000,  // CO
  44.009000,  // CO2
  26.038000,  // C2H2
  27.046000,  // C2H3
  28.054000,  // C2H4
  29.062000,  // C2H5
  30.070000,  // C2H6
  43.045000,  // CH2CHO
  41.073000,  // aC3H5
  42.081000,  // C3H6
  43.089000,  // nC3H7
  56.064000,  // C2H3CHO
  55.100000,  // C4H7
  56.108000,  // C4H81
  57.116000,  // pC4H9
  69.127000,  // C5H9
  70.135000,  // C5H10
  71.143000,  // PXC5H11
  84.162000,  // C6H12
  85.170000,  // PXC6H13
  98.189000,  // C7H14
  99.197000,  // PXC7H15
  112.216000, // C8H16
  113.224000, // PXC8H17
  126.243000, // C9H18
  127.251000, // PXC9H19
  140.270000, // C10H20
  141.278000, // PXC10H21
  169.332000, // PXC12H25
  169.332000, // SXC12H25
  169.332000, // S3XC12H25
  168.324000, // C12H24
  201.330000, // C12H25O2
  201.330000, // C12OOH
  233.328000, // O2C12H24OOH
  216.321000, // OC12H23OOH
  28.014000,  // N2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0058706117177410;  // NC12H26
  imw_new[1] = 0.9920634920634921;  // H
  imw_new[2] = 0.0625039064941559;  // O
  imw_new[3] = 0.0587993179279120;  // OH
  imw_new[4] = 0.0302975216627280;  // HO2
  imw_new[5] = 0.4960317460317460;  // H2
  imw_new[6] = 0.0555092978073827;  // H2O
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0312519532470779;  // O2
  imw_new[9] = 0.0712910814857061;  // CH2
  imw_new[10] = 0.0712910814857061; // CH2*
  imw_new[11] = 0.0665114732291320; // CH3
  imw_new[12] = 0.0623324814560868; // CH4
  imw_new[13] = 0.0344613688055690; // HCO
  imw_new[14] = 0.0333044694598015; // CH2O
  imw_new[15] = 0.0322227234645872; // CH3O
  imw_new[16] = 0.0357015351660121; // CO
  imw_new[17] = 0.0227226249176305; // CO2
  imw_new[18] = 0.0384054074813734; // C2H2
  imw_new[19] = 0.0369740442209569; // C2H3
  imw_new[20] = 0.0356455407428531; // C2H4
  imw_new[21] = 0.0344091941366733; // C2H5
  imw_new[22] = 0.0332557366145660; // C2H6
  imw_new[23] = 0.0232315019165989; // CH2CHO
  imw_new[24] = 0.0243468945535997; // aC3H5
  imw_new[25] = 0.0237636938285687; // C3H6
  imw_new[26] = 0.0232077792476038; // nC3H7
  imw_new[27] = 0.0178367579908676; // C2H3CHO
  imw_new[28] = 0.0181488203266788; // C4H7
  imw_new[29] = 0.0178227703714265; // C4H81
  imw_new[30] = 0.0175082288675678; // pC4H9
  imw_new[31] = 0.0144661275623128; // C5H9
  imw_new[32] = 0.0142582162971412; // C5H10
  imw_new[33] = 0.0140561966743039; // PXC5H11
  imw_new[34] = 0.0118818469142844; // C6H12
  imw_new[35] = 0.0117412234354820; // PXC6H13
  imw_new[36] = 0.0101844402122437; // C7H14
  imw_new[37] = 0.0100809500287307; // PXC7H15
  imw_new[38] = 0.0089113851857133; // C8H16
  imw_new[39] = 0.0088320497421041; // PXC8H17
  imw_new[40] = 0.0079212312761896; // C9H18
  imw_new[41] = 0.0078584844126962; // PXC9H19
  imw_new[42] = 0.0071291081485706; // C10H20
  imw_new[43] = 0.0070782428969833; // PXC10H21
  imw_new[44] = 0.0059055583114828; // PXC12H25
  imw_new[45] = 0.0059055583114828; // SXC12H25
  imw_new[46] = 0.0059055583114828; // S3XC12H25
  imw_new[47] = 0.0059409234571422; // C12H24
  imw_new[48] = 0.0049669696518154; // C12H25O2
  imw_new[49] = 0.0049669696518154; // C12OOH
  imw_new[50] = 0.0042858122471371; // O2C12H24OOH
  imw_new[51] = 0.0046227596950828; // OC12H23OOH
  imw_new[52] = 0.0356964374955379; // N2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 170.340000;  // NC12H26
  mw_new[1] = 1.008000;    // H
  mw_new[2] = 15.999000;   // O
  mw_new[3] = 17.007000;   // OH
  mw_new[4] = 33.006000;   // HO2
  mw_new[5] = 2.016000;    // H2
  mw_new[6] = 18.015000;   // H2O
  mw_new[7] = 34.014000;   // H2O2
  mw_new[8] = 31.998000;   // O2
  mw_new[9] = 14.027000;   // CH2
  mw_new[10] = 14.027000;  // CH2*
  mw_new[11] = 15.035000;  // CH3
  mw_new[12] = 16.043000;  // CH4
  mw_new[13] = 29.018000;  // HCO
  mw_new[14] = 30.026000;  // CH2O
  mw_new[15] = 31.034000;  // CH3O
  mw_new[16] = 28.010000;  // CO
  mw_new[17] = 44.009000;  // CO2
  mw_new[18] = 26.038000;  // C2H2
  mw_new[19] = 27.046000;  // C2H3
  mw_new[20] = 28.054000;  // C2H4
  mw_new[21] = 29.062000;  // C2H5
  mw_new[22] = 30.070000;  // C2H6
  mw_new[23] = 43.045000;  // CH2CHO
  mw_new[24] = 41.073000;  // aC3H5
  mw_new[25] = 42.081000;  // C3H6
  mw_new[26] = 43.089000;  // nC3H7
  mw_new[27] = 56.064000;  // C2H3CHO
  mw_new[28] = 55.100000;  // C4H7
  mw_new[29] = 56.108000;  // C4H81
  mw_new[30] = 57.116000;  // pC4H9
  mw_new[31] = 69.127000;  // C5H9
  mw_new[32] = 70.135000;  // C5H10
  mw_new[33] = 71.143000;  // PXC5H11
  mw_new[34] = 84.162000;  // C6H12
  mw_new[35] = 85.170000;  // PXC6H13
  mw_new[36] = 98.189000;  // C7H14
  mw_new[37] = 99.197000;  // PXC7H15
  mw_new[38] = 112.216000; // C8H16
  mw_new[39] = 113.224000; // PXC8H17
  mw_new[40] = 126.243000; // C9H18
  mw_new[41] = 127.251000; // PXC9H19
  mw_new[42] = 140.270000; // C10H20
  mw_new[43] = 141.278000; // PXC10H21
  mw_new[44] = 169.332000; // PXC12H25
  mw_new[45] = 169.332000; // SXC12H25
  mw_new[46] = 169.332000; // S3XC12H25
  mw_new[47] = 168.324000; // C12H24
  mw_new[48] = 201.330000; // C12H25O2
  mw_new[49] = 201.330000; // C12OOH
  mw_new[50] = 233.328000; // O2C12H24OOH
  mw_new[51] = 216.321000; // OC12H23OOH
  mw_new[52] = 28.014000;  // N2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -3.62181594e+00 + 1.47237711e-01 * tc[1] -
                 9.43970271e-05 * tc[2] + 3.07441268e-08 * tc[3] -
                 4.03602230e-12 * tc[4];
    // species 47: C12H24
    species[47] = -3.96342681e+00 + 1.43992360e-01 * tc[1] -
                  9.61384015e-05 * tc[2] + 3.30174473e-08 * tc[3] -
                  4.62398190e-12 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = +3.75095037e+01 + 5.63550048e-02 * tc[1] -
                 1.91493200e-05 * tc[2] + 2.96024862e-09 * tc[3] -
                 1.71244150e-13 * tc[4];
    // species 47: C12H24
    species[47] = +3.64002111e+01 + 5.26230753e-02 * tc[1] -
                  1.78624319e-05 * tc[2] + 2.75949863e-09 * tc[3] -
                  1.59562499e-13 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: OH
    species[3] = +3.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 4: HO2
    species[4] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 5: H2
    species[5] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 6: H2O
    species[6] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: O2
    species[8] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: CH2
    species[9] = +2.76267867e+00 + 9.68872143e-04 * tc[1] +
                 2.79489841e-06 * tc[2] - 3.85091153e-09 * tc[3] +
                 1.68741719e-12 * tc[4];
    // species 10: CH2*
    species[10] = +3.19860411e+00 - 2.36661419e-03 * tc[1] +
                  8.23296220e-06 * tc[2] - 6.68815981e-09 * tc[3] +
                  1.94314737e-12 * tc[4];
    // species 11: CH3
    species[11] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                  5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                  2.54385734e-12 * tc[4];
    // species 12: CH4
    species[12] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 13: HCO
    species[13] = +3.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 14: CH2O
    species[14] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 15: CH3O
    species[15] = +2.71180502e+00 - 2.80463306e-03 * tc[1] +
                  3.76550971e-05 * tc[2] - 4.73072089e-08 * tc[3] +
                  1.86588420e-11 * tc[4];
    // species 16: CO
    species[16] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 17: CO2
    species[17] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 18: C2H2
    species[18] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 19: C2H3
    species[19] = +2.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 20: C2H4
    species[20] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 21: C2H5
    species[21] = +3.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 22: C2H6
    species[22] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 23: CH2CHO
    species[23] = +2.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 24: aC3H5
    species[24] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 25: C3H6
    species[25] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 26: nC3H7
    species[26] = +4.91173000e-02 + 2.60089730e-02 * tc[1] +
                  2.35425160e-06 * tc[2] - 1.95951320e-08 * tc[3] +
                  9.37202070e-12 * tc[4];
    // species 27: C2H3CHO
    species[27] = +2.71349800e-01 + 2.62310540e-02 * tc[1] -
                  9.29123050e-06 * tc[2] - 4.78372720e-09 * tc[3] +
                  3.34805430e-12 * tc[4];
    // species 28: C4H7
    species[28] = -2.55505680e-01 + 3.96788570e-02 * tc[1] -
                  2.28980860e-05 * tc[2] + 2.13529730e-09 * tc[3] +
                  2.30963750e-12 * tc[4];
    // species 29: C4H81
    species[29] = +1.81138000e-01 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 30: pC4H9
    species[30] = +2.08704200e-01 + 3.82974970e-02 * tc[1] -
                  7.26605090e-06 * tc[2] - 1.54285470e-08 * tc[3] +
                  8.68594350e-12 * tc[4];
    // species 31: C5H9
    species[31] = -3.41901110e+00 + 4.04303890e-02 * tc[1] +
                  6.78023390e-06 * tc[2] - 3.37247420e-08 * tc[3] +
                  1.51167130e-11 * tc[4];
    // species 48: C12H25O2
    species[48] = +4.31404000e+00 + 8.93873000e-02 * tc[1] +
                  1.45351000e-05 * tc[2] - 7.49250000e-08 * tc[3] +
                  3.35325000e-11 * tc[4];
    // species 49: C12OOH
    species[49] = +4.15231000e+00 + 9.97913000e-02 * tc[1] -
                  1.80635000e-05 * tc[2] - 4.18435000e-08 * tc[3] +
                  2.22786000e-11 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = -5.18028000e-01 + 1.45020000e-01 * tc[1] -
                  9.99308000e-05 * tc[2] + 2.60422000e-08 * tc[3] +
                  1.19358000e-12 * tc[4];
    // species 51: OC12H23OOH
    species[51] = +7.80733000e+00 + 6.50623000e-02 * tc[1] +
                  6.95058000e-05 * tc[2] - 1.26905000e-07 * tc[3] +
                  5.10991000e-11 * tc[4];
    // species 52: N2
    species[52] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: OH
    species[3] = +1.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 4: HO2
    species[4] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 5: H2
    species[5] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 6: H2O
    species[6] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: O2
    species[8] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: CH2
    species[9] = +1.87410113e+00 + 3.65639292e-03 * tc[1] -
                 1.40894597e-06 * tc[2] + 2.60179549e-10 * tc[3] -
                 1.87727567e-14 * tc[4];
    // species 10: CH2*
    species[10] = +1.29203842e+00 + 4.65588637e-03 * tc[1] -
                  2.01191947e-06 * tc[2] + 4.17906000e-10 * tc[3] -
                  3.39716365e-14 * tc[4];
    // species 11: CH3
    species[11] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                  2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                  4.67154394e-14 * tc[4];
    // species 12: CH4
    species[12] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 13: HCO
    species[13] = +1.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 14: CH2O
    species[14] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 15: CH3O
    species[15] = +3.75779238e+00 + 7.44142474e-03 * tc[1] -
                  2.69705176e-06 * tc[2] + 4.38090504e-10 * tc[3] -
                  2.63537098e-14 * tc[4];
    // species 16: CO
    species[16] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 17: CO2
    species[17] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 18: C2H2
    species[18] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 19: C2H3
    species[19] = +2.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 20: C2H4
    species[20] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 21: C2H5
    species[21] = +9.54656420e-01 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 22: C2H6
    species[22] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 23: CH2CHO
    species[23] = +4.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 24: aC3H5
    species[24] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 25: C3H6
    species[25] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 26: nC3H7
    species[26] = +6.70974790e+00 + 1.60314850e-02 * tc[1] -
                  5.27202380e-06 * tc[2] + 7.58883520e-10 * tc[3] -
                  3.88627190e-14 * tc[4];
    // species 27: C2H3CHO
    species[27] = +4.81118680e+00 + 1.71142560e-02 * tc[1] -
                  7.48341610e-06 * tc[2] + 1.42522490e-09 * tc[3] -
                  9.17468410e-14 * tc[4];
    // species 28: C4H7
    species[28] = +6.01348350e+00 + 2.26345580e-02 * tc[1] -
                  9.25454700e-06 * tc[2] + 1.68079270e-09 * tc[3] -
                  1.04086170e-13 * tc[4];
    // species 29: C4H81
    species[29] = +1.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 30: pC4H9
    species[30] = +7.68223950e+00 + 2.36910710e-02 * tc[1] -
                  7.59488650e-06 * tc[2] + 6.64271360e-10 * tc[3] +
                  5.48451360e-14 * tc[4];
    // species 31: C5H9
    species[31] = +9.13864000e+00 + 2.27141380e-02 * tc[1] -
                  7.79104630e-06 * tc[2] + 1.18765220e-09 * tc[3] -
                  6.59324480e-14 * tc[4];
    // species 48: C12H25O2
    species[48] = +2.74782000e+01 + 5.37539000e-02 * tc[1] -
                  1.68186000e-05 * tc[2] + 2.51367000e-09 * tc[3] -
                  1.47208000e-13 * tc[4];
    // species 49: C12OOH
    species[49] = +2.82019000e+01 + 5.15917000e-02 * tc[1] -
                  1.57327000e-05 * tc[2] + 2.30306000e-09 * tc[3] -
                  1.32640000e-13 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = +3.40907000e+01 + 5.10590000e-02 * tc[1] -
                  1.54345000e-05 * tc[2] + 2.24627000e-09 * tc[3] -
                  1.28901000e-13 * tc[4];
    // species 51: OC12H23OOH
    species[51] = +2.26731000e+01 + 6.16392000e-02 * tc[1] -
                  2.09836000e-05 * tc[2] + 3.33166000e-09 * tc[3] -
                  2.03590000e-13 * tc[4];
    // species 52: N2
    species[52] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -2.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 34: C6H12
    species[34] = -2.35275205e+00 + 6.98655426e-02 * tc[1] -
                  4.59408022e-05 * tc[2] + 1.56967343e-08 * tc[3] -
                  2.21296175e-12 * tc[4];
    // species 36: C7H14
    species[36] = -2.67720549e+00 + 8.24611601e-02 * tc[1] -
                  5.46504108e-05 * tc[2] + 1.87862303e-08 * tc[3] -
                  2.65737983e-12 * tc[4];
    // species 38: C8H16
    species[38] = -2.89226915e+00 + 9.46066357e-02 * tc[1] -
                  6.27385521e-05 * tc[2] + 2.15158309e-08 * tc[3] -
                  3.02718683e-12 * tc[4];
    // species 40: C9H18
    species[40] = -3.16108263e+00 + 1.06958297e-01 * tc[1] -
                  7.10973244e-05 * tc[2] + 2.43971077e-08 * tc[3] -
                  3.42771547e-12 * tc[4];
    // species 42: C10H20
    species[42] = -3.42901688e+00 + 1.19305598e-01 * tc[1] -
                  7.94489025e-05 * tc[2] + 2.72736596e-08 * tc[3] -
                  3.82718373e-12 * tc[4];
  } else {
    // species 32: C5H10
    species[32] = +1.35851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
    // species 34: C6H12
    species[34] = +1.68337529e+01 + 2.67377658e-02 * tc[1] -
                  9.10036773e-06 * tc[2] + 1.40819768e-09 * tc[3] -
                  8.15124244e-14 * tc[4];
    // species 36: C7H14
    species[36] = +2.00898039e+01 + 3.10607878e-02 * tc[1] -
                  1.05644793e-05 * tc[2] + 1.63405780e-09 * tc[3] -
                  9.45598219e-14 * tc[4];
    // species 38: C8H16
    species[38] = +2.33540125e+01 + 3.53666462e-02 * tc[1] -
                  1.20208388e-05 * tc[2] + 1.85855053e-09 * tc[3] -
                  1.07522262e-13 * tc[4];
    // species 40: C9H18
    species[40] = +2.66142176e+01 + 3.96825287e-02 * tc[1] -
                  1.34819446e-05 * tc[2] + 2.08390452e-09 * tc[3] -
                  1.20539294e-13 * tc[4];
    // species 42: C10H20
    species[42] = +2.98753903e+01 + 4.39971526e-02 * tc[1] -
                  1.49425530e-05 * tc[2] + 2.30917678e-09 * tc[3] -
                  1.33551477e-13 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = -9.47561592e-01 + 5.60796958e-02 * tc[1] -
                  3.31545803e-05 * tc[2] + 9.77533781e-09 * tc[3] -
                  1.14009660e-12 * tc[4];
    // species 35: PXC6H13
    species[35] = -1.20487147e+00 + 6.83801272e-02 * tc[1] -
                  4.14447912e-05 * tc[2] + 1.26155802e-08 * tc[3] -
                  1.53120058e-12 * tc[4];
    // species 37: PXC7H15
    species[37] = -1.49957041e+00 + 8.08826467e-02 * tc[1] -
                  5.00532754e-05 * tc[2] + 1.56549308e-08 * tc[3] -
                  1.96616227e-12 * tc[4];
    // species 39: PXC8H17
    species[39] = -1.77275944e+00 + 9.32549705e-02 * tc[1] -
                  5.84447245e-05 * tc[2] + 1.85570214e-08 * tc[3] -
                  2.37127483e-12 * tc[4];
    // species 41: PXC9H19
    species[41] = -2.04387292e+00 + 1.05617283e-01 * tc[1] -
                  6.68199971e-05 * tc[2] + 2.14486166e-08 * tc[3] -
                  2.77404275e-12 * tc[4];
    // species 43: PXC10H21
    species[43] = -2.31358348e+00 + 1.17972813e-01 * tc[1] -
                  7.51843079e-05 * tc[2] + 2.43331106e-08 * tc[3] -
                  3.17522852e-12 * tc[4];
    // species 44: PXC12H25
    species[44] = -2.85028741e+00 + 1.42670708e-01 * tc[1] -
                  9.18916555e-05 * tc[2] + 3.00883392e-08 * tc[3] -
                  3.97454300e-12 * tc[4];
  } else {
    // species 33: PXC5H11
    species[33] = +1.42977446e+01 + 2.39735310e-02 * tc[1] -
                  8.18392948e-06 * tc[2] + 1.26883076e-09 * tc[3] -
                  7.35409055e-14 * tc[4];
    // species 35: PXC6H13
    species[35] = +1.75385470e+01 + 2.83107962e-02 * tc[1] -
                  9.65307246e-06 * tc[2] + 1.49547585e-09 * tc[3] -
                  8.66336064e-14 * tc[4];
    // species 37: PXC7H15
    species[37] = +2.07940709e+01 + 3.26280243e-02 * tc[1] -
                  1.11138244e-05 * tc[2] + 1.72067148e-09 * tc[3] -
                  9.96366999e-14 * tc[4];
    // species 39: PXC8H17
    species[39] = +2.40510356e+01 + 3.69480162e-02 * tc[1] -
                  1.25765264e-05 * tc[2] + 1.94628409e-09 * tc[3] -
                  1.12668898e-13 * tc[4];
    // species 41: PXC9H19
    species[41] = +2.73097514e+01 + 4.12657344e-02 * tc[1] -
                  1.40383289e-05 * tc[2] + 2.17174871e-09 * tc[3] -
                  1.25692307e-13 * tc[4];
    // species 43: PXC10H21
    species[43] = +3.05697160e+01 + 4.55818403e-02 * tc[1] -
                  1.54994965e-05 * tc[2] + 2.39710933e-09 * tc[3] -
                  1.38709559e-13 * tc[4];
    // species 44: PXC12H25
    species[44] = +3.70921885e+01 + 5.42107848e-02 * tc[1] -
                  1.84205517e-05 * tc[2] + 2.84762173e-09 * tc[3] -
                  1.64731748e-13 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -2.36787089e+00 + 1.37355348e-01 * tc[1] -
                  8.24076158e-05 * tc[2] + 2.36421562e-08 * tc[3] -
                  2.47435932e-12 * tc[4];
    // species 46: S3XC12H25
    species[46] = -2.36787089e+00 + 1.37355348e-01 * tc[1] -
                  8.24076158e-05 * tc[2] + 2.36421562e-08 * tc[3] -
                  2.47435932e-12 * tc[4];
  } else {
    // species 45: SXC12H25
    species[45] = +3.69688268e+01 + 5.38719464e-02 * tc[1] -
                  1.82171263e-05 * tc[2] + 2.80774503e-09 * tc[3] -
                  1.62108420e-13 * tc[4];
    // species 46: S3XC12H25
    species[46] = +3.69688268e+01 + 5.38719464e-02 * tc[1] -
                  1.82171263e-05 * tc[2] + 2.80774503e-09 * tc[3] -
                  1.62108420e-13 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 + 1.47237711e-01 * tc[1] -
                 9.43970271e-05 * tc[2] + 3.07441268e-08 * tc[3] -
                 4.03602230e-12 * tc[4];
    // species 47: C12H24
    species[47] = -2.96342681e+00 + 1.43992360e-01 * tc[1] -
                  9.61384015e-05 * tc[2] + 3.30174473e-08 * tc[3] -
                  4.62398190e-12 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 + 5.63550048e-02 * tc[1] -
                 1.91493200e-05 * tc[2] + 2.96024862e-09 * tc[3] -
                 1.71244150e-13 * tc[4];
    // species 47: C12H24
    species[47] = +3.74002111e+01 + 5.26230753e-02 * tc[1] -
                  1.78624319e-05 * tc[2] + 2.75949863e-09 * tc[3] -
                  1.59562499e-13 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: OH
    species[3] = +4.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 4: HO2
    species[4] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 5: H2
    species[5] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 6: H2O
    species[6] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: O2
    species[8] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: CH2
    species[9] = +3.76267867e+00 + 9.68872143e-04 * tc[1] +
                 2.79489841e-06 * tc[2] - 3.85091153e-09 * tc[3] +
                 1.68741719e-12 * tc[4];
    // species 10: CH2*
    species[10] = +4.19860411e+00 - 2.36661419e-03 * tc[1] +
                  8.23296220e-06 * tc[2] - 6.68815981e-09 * tc[3] +
                  1.94314737e-12 * tc[4];
    // species 11: CH3
    species[11] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                  5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                  2.54385734e-12 * tc[4];
    // species 12: CH4
    species[12] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 13: HCO
    species[13] = +4.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 14: CH2O
    species[14] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 15: CH3O
    species[15] = +3.71180502e+00 - 2.80463306e-03 * tc[1] +
                  3.76550971e-05 * tc[2] - 4.73072089e-08 * tc[3] +
                  1.86588420e-11 * tc[4];
    // species 16: CO
    species[16] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 17: CO2
    species[17] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 18: C2H2
    species[18] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 19: C2H3
    species[19] = +3.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 20: C2H4
    species[20] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 21: C2H5
    species[21] = +4.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 22: C2H6
    species[22] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 23: CH2CHO
    species[23] = +3.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 24: aC3H5
    species[24] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 25: C3H6
    species[25] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 26: nC3H7
    species[26] = +1.04911730e+00 + 2.60089730e-02 * tc[1] +
                  2.35425160e-06 * tc[2] - 1.95951320e-08 * tc[3] +
                  9.37202070e-12 * tc[4];
    // species 27: C2H3CHO
    species[27] = +1.27134980e+00 + 2.62310540e-02 * tc[1] -
                  9.29123050e-06 * tc[2] - 4.78372720e-09 * tc[3] +
                  3.34805430e-12 * tc[4];
    // species 28: C4H7
    species[28] = +7.44494320e-01 + 3.96788570e-02 * tc[1] -
                  2.28980860e-05 * tc[2] + 2.13529730e-09 * tc[3] +
                  2.30963750e-12 * tc[4];
    // species 29: C4H81
    species[29] = +1.18113800e+00 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 30: pC4H9
    species[30] = +1.20870420e+00 + 3.82974970e-02 * tc[1] -
                  7.26605090e-06 * tc[2] - 1.54285470e-08 * tc[3] +
                  8.68594350e-12 * tc[4];
    // species 31: C5H9
    species[31] = -2.41901110e+00 + 4.04303890e-02 * tc[1] +
                  6.78023390e-06 * tc[2] - 3.37247420e-08 * tc[3] +
                  1.51167130e-11 * tc[4];
    // species 48: C12H25O2
    species[48] = +5.31404000e+00 + 8.93873000e-02 * tc[1] +
                  1.45351000e-05 * tc[2] - 7.49250000e-08 * tc[3] +
                  3.35325000e-11 * tc[4];
    // species 49: C12OOH
    species[49] = +5.15231000e+00 + 9.97913000e-02 * tc[1] -
                  1.80635000e-05 * tc[2] - 4.18435000e-08 * tc[3] +
                  2.22786000e-11 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = +4.81972000e-01 + 1.45020000e-01 * tc[1] -
                  9.99308000e-05 * tc[2] + 2.60422000e-08 * tc[3] +
                  1.19358000e-12 * tc[4];
    // species 51: OC12H23OOH
    species[51] = +8.80733000e+00 + 6.50623000e-02 * tc[1] +
                  6.95058000e-05 * tc[2] - 1.26905000e-07 * tc[3] +
                  5.10991000e-11 * tc[4];
    // species 52: N2
    species[52] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: OH
    species[3] = +2.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 4: HO2
    species[4] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 5: H2
    species[5] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 6: H2O
    species[6] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: O2
    species[8] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: CH2
    species[9] = +2.87410113e+00 + 3.65639292e-03 * tc[1] -
                 1.40894597e-06 * tc[2] + 2.60179549e-10 * tc[3] -
                 1.87727567e-14 * tc[4];
    // species 10: CH2*
    species[10] = +2.29203842e+00 + 4.65588637e-03 * tc[1] -
                  2.01191947e-06 * tc[2] + 4.17906000e-10 * tc[3] -
                  3.39716365e-14 * tc[4];
    // species 11: CH3
    species[11] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                  2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                  4.67154394e-14 * tc[4];
    // species 12: CH4
    species[12] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 13: HCO
    species[13] = +2.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 14: CH2O
    species[14] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 15: CH3O
    species[15] = +4.75779238e+00 + 7.44142474e-03 * tc[1] -
                  2.69705176e-06 * tc[2] + 4.38090504e-10 * tc[3] -
                  2.63537098e-14 * tc[4];
    // species 16: CO
    species[16] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 17: CO2
    species[17] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 18: C2H2
    species[18] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 19: C2H3
    species[19] = +3.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 20: C2H4
    species[20] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 21: C2H5
    species[21] = +1.95465642e+00 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 22: C2H6
    species[22] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 23: CH2CHO
    species[23] = +5.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 24: aC3H5
    species[24] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 25: C3H6
    species[25] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 26: nC3H7
    species[26] = +7.70974790e+00 + 1.60314850e-02 * tc[1] -
                  5.27202380e-06 * tc[2] + 7.58883520e-10 * tc[3] -
                  3.88627190e-14 * tc[4];
    // species 27: C2H3CHO
    species[27] = +5.81118680e+00 + 1.71142560e-02 * tc[1] -
                  7.48341610e-06 * tc[2] + 1.42522490e-09 * tc[3] -
                  9.17468410e-14 * tc[4];
    // species 28: C4H7
    species[28] = +7.01348350e+00 + 2.26345580e-02 * tc[1] -
                  9.25454700e-06 * tc[2] + 1.68079270e-09 * tc[3] -
                  1.04086170e-13 * tc[4];
    // species 29: C4H81
    species[29] = +2.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 30: pC4H9
    species[30] = +8.68223950e+00 + 2.36910710e-02 * tc[1] -
                  7.59488650e-06 * tc[2] + 6.64271360e-10 * tc[3] +
                  5.48451360e-14 * tc[4];
    // species 31: C5H9
    species[31] = +1.01386400e+01 + 2.27141380e-02 * tc[1] -
                  7.79104630e-06 * tc[2] + 1.18765220e-09 * tc[3] -
                  6.59324480e-14 * tc[4];
    // species 48: C12H25O2
    species[48] = +2.84782000e+01 + 5.37539000e-02 * tc[1] -
                  1.68186000e-05 * tc[2] + 2.51367000e-09 * tc[3] -
                  1.47208000e-13 * tc[4];
    // species 49: C12OOH
    species[49] = +2.92019000e+01 + 5.15917000e-02 * tc[1] -
                  1.57327000e-05 * tc[2] + 2.30306000e-09 * tc[3] -
                  1.32640000e-13 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = +3.50907000e+01 + 5.10590000e-02 * tc[1] -
                  1.54345000e-05 * tc[2] + 2.24627000e-09 * tc[3] -
                  1.28901000e-13 * tc[4];
    // species 51: OC12H23OOH
    species[51] = +2.36731000e+01 + 6.16392000e-02 * tc[1] -
                  2.09836000e-05 * tc[2] + 3.33166000e-09 * tc[3] -
                  2.03590000e-13 * tc[4];
    // species 52: N2
    species[52] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -1.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 34: C6H12
    species[34] = -1.35275205e+00 + 6.98655426e-02 * tc[1] -
                  4.59408022e-05 * tc[2] + 1.56967343e-08 * tc[3] -
                  2.21296175e-12 * tc[4];
    // species 36: C7H14
    species[36] = -1.67720549e+00 + 8.24611601e-02 * tc[1] -
                  5.46504108e-05 * tc[2] + 1.87862303e-08 * tc[3] -
                  2.65737983e-12 * tc[4];
    // species 38: C8H16
    species[38] = -1.89226915e+00 + 9.46066357e-02 * tc[1] -
                  6.27385521e-05 * tc[2] + 2.15158309e-08 * tc[3] -
                  3.02718683e-12 * tc[4];
    // species 40: C9H18
    species[40] = -2.16108263e+00 + 1.06958297e-01 * tc[1] -
                  7.10973244e-05 * tc[2] + 2.43971077e-08 * tc[3] -
                  3.42771547e-12 * tc[4];
    // species 42: C10H20
    species[42] = -2.42901688e+00 + 1.19305598e-01 * tc[1] -
                  7.94489025e-05 * tc[2] + 2.72736596e-08 * tc[3] -
                  3.82718373e-12 * tc[4];
  } else {
    // species 32: C5H10
    species[32] = +1.45851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
    // species 34: C6H12
    species[34] = +1.78337529e+01 + 2.67377658e-02 * tc[1] -
                  9.10036773e-06 * tc[2] + 1.40819768e-09 * tc[3] -
                  8.15124244e-14 * tc[4];
    // species 36: C7H14
    species[36] = +2.10898039e+01 + 3.10607878e-02 * tc[1] -
                  1.05644793e-05 * tc[2] + 1.63405780e-09 * tc[3] -
                  9.45598219e-14 * tc[4];
    // species 38: C8H16
    species[38] = +2.43540125e+01 + 3.53666462e-02 * tc[1] -
                  1.20208388e-05 * tc[2] + 1.85855053e-09 * tc[3] -
                  1.07522262e-13 * tc[4];
    // species 40: C9H18
    species[40] = +2.76142176e+01 + 3.96825287e-02 * tc[1] -
                  1.34819446e-05 * tc[2] + 2.08390452e-09 * tc[3] -
                  1.20539294e-13 * tc[4];
    // species 42: C10H20
    species[42] = +3.08753903e+01 + 4.39971526e-02 * tc[1] -
                  1.49425530e-05 * tc[2] + 2.30917678e-09 * tc[3] -
                  1.33551477e-13 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +5.24384081e-02 + 5.60796958e-02 * tc[1] -
                  3.31545803e-05 * tc[2] + 9.77533781e-09 * tc[3] -
                  1.14009660e-12 * tc[4];
    // species 35: PXC6H13
    species[35] = -2.04871465e-01 + 6.83801272e-02 * tc[1] -
                  4.14447912e-05 * tc[2] + 1.26155802e-08 * tc[3] -
                  1.53120058e-12 * tc[4];
    // species 37: PXC7H15
    species[37] = -4.99570406e-01 + 8.08826467e-02 * tc[1] -
                  5.00532754e-05 * tc[2] + 1.56549308e-08 * tc[3] -
                  1.96616227e-12 * tc[4];
    // species 39: PXC8H17
    species[39] = -7.72759438e-01 + 9.32549705e-02 * tc[1] -
                  5.84447245e-05 * tc[2] + 1.85570214e-08 * tc[3] -
                  2.37127483e-12 * tc[4];
    // species 41: PXC9H19
    species[41] = -1.04387292e+00 + 1.05617283e-01 * tc[1] -
                  6.68199971e-05 * tc[2] + 2.14486166e-08 * tc[3] -
                  2.77404275e-12 * tc[4];
    // species 43: PXC10H21
    species[43] = -1.31358348e+00 + 1.17972813e-01 * tc[1] -
                  7.51843079e-05 * tc[2] + 2.43331106e-08 * tc[3] -
                  3.17522852e-12 * tc[4];
    // species 44: PXC12H25
    species[44] = -1.85028741e+00 + 1.42670708e-01 * tc[1] -
                  9.18916555e-05 * tc[2] + 3.00883392e-08 * tc[3] -
                  3.97454300e-12 * tc[4];
  } else {
    // species 33: PXC5H11
    species[33] = +1.52977446e+01 + 2.39735310e-02 * tc[1] -
                  8.18392948e-06 * tc[2] + 1.26883076e-09 * tc[3] -
                  7.35409055e-14 * tc[4];
    // species 35: PXC6H13
    species[35] = +1.85385470e+01 + 2.83107962e-02 * tc[1] -
                  9.65307246e-06 * tc[2] + 1.49547585e-09 * tc[3] -
                  8.66336064e-14 * tc[4];
    // species 37: PXC7H15
    species[37] = +2.17940709e+01 + 3.26280243e-02 * tc[1] -
                  1.11138244e-05 * tc[2] + 1.72067148e-09 * tc[3] -
                  9.96366999e-14 * tc[4];
    // species 39: PXC8H17
    species[39] = +2.50510356e+01 + 3.69480162e-02 * tc[1] -
                  1.25765264e-05 * tc[2] + 1.94628409e-09 * tc[3] -
                  1.12668898e-13 * tc[4];
    // species 41: PXC9H19
    species[41] = +2.83097514e+01 + 4.12657344e-02 * tc[1] -
                  1.40383289e-05 * tc[2] + 2.17174871e-09 * tc[3] -
                  1.25692307e-13 * tc[4];
    // species 43: PXC10H21
    species[43] = +3.15697160e+01 + 4.55818403e-02 * tc[1] -
                  1.54994965e-05 * tc[2] + 2.39710933e-09 * tc[3] -
                  1.38709559e-13 * tc[4];
    // species 44: PXC12H25
    species[44] = +3.80921885e+01 + 5.42107848e-02 * tc[1] -
                  1.84205517e-05 * tc[2] + 2.84762173e-09 * tc[3] -
                  1.64731748e-13 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -1.36787089e+00 + 1.37355348e-01 * tc[1] -
                  8.24076158e-05 * tc[2] + 2.36421562e-08 * tc[3] -
                  2.47435932e-12 * tc[4];
    // species 46: S3XC12H25
    species[46] = -1.36787089e+00 + 1.37355348e-01 * tc[1] -
                  8.24076158e-05 * tc[2] + 2.36421562e-08 * tc[3] -
                  2.47435932e-12 * tc[4];
  } else {
    // species 45: SXC12H25
    species[45] = +3.79688268e+01 + 5.38719464e-02 * tc[1] -
                  1.82171263e-05 * tc[2] + 2.80774503e-09 * tc[3] -
                  1.62108420e-13 * tc[4];
    // species 46: S3XC12H25
    species[46] = +3.79688268e+01 + 5.38719464e-02 * tc[1] -
                  1.82171263e-05 * tc[2] + 2.80774503e-09 * tc[3] -
                  1.62108420e-13 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -4.006542530000000e+04 * invT - 5.272127854000000e+01 +
                 2.621815940000000e+00 * tc[0] - 7.361885550000000e-02 * tc[1] +
                 1.573283785000000e-05 * tc[2] - 2.562010566666667e-09 * tc[3] +
                 2.018011150000000e-13 * tc[4];
    // species 47: C12H24
    species[47] = -2.463452990000000e+04 * invT - 5.587931381000000e+01 +
                  2.963426810000000e+00 * tc[0] -
                  7.199618000000001e-02 * tc[1] +
                  1.602306691666667e-05 * tc[2] -
                  2.751453941666667e-09 * tc[3] + 2.311990950000000e-13 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = -5.488434650000000e+04 * invT + 2.111804257000000e+02 -
                 3.850950370000000e+01 * tc[0] - 2.817750240000000e-02 * tc[1] +
                 3.191553333333333e-06 * tc[2] - 2.466873850000000e-10 * tc[3] +
                 8.562207500000000e-15 * tc[4];
    // species 47: C12H24
    species[47] = -3.894059620000000e+04 * invT + 2.022928741000000e+02 -
                  3.740021110000000e+01 * tc[0] -
                  2.631153765000000e-02 * tc[1] +
                  2.977071983333333e-06 * tc[2] -
                  2.299582191666667e-10 * tc[3] + 7.978124949999999e-15 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 3: OH
    species[3] = +3.381538120000000e+03 * invT + 4.815738570000000e+00 -
                 4.125305610000000e+00 * tc[0] + 1.612724695000000e-03 * tc[1] -
                 1.087941151666667e-06 * tc[2] + 4.832113691666666e-10 * tc[3] -
                 1.031186895000000e-13 * tc[4];
    // species 4: HO2
    species[4] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 5: H2
    species[5] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 6: H2O
    species[6] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 8: O2
    species[8] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 9: CH2
    species[9] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 10: CH2*
    species[10] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                  4.198604110000000e+00 * tc[0] +
                  1.183307095000000e-03 * tc[1] -
                  1.372160366666667e-06 * tc[2] +
                  5.573466508333334e-10 * tc[3] - 9.715736850000000e-14 * tc[4];
    // species 11: CH3
    species[11] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                  3.673590400000000e+00 * tc[0] -
                  1.005475875000000e-03 * tc[1] -
                  9.550364266666668e-07 * tc[2] +
                  5.725978541666666e-10 * tc[3] - 1.271928670000000e-13 * tc[4];
    // species 12: CH4
    species[12] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                  5.149876130000000e+00 * tc[0] +
                  6.835489400000000e-03 * tc[1] -
                  8.196676650000000e-06 * tc[2] +
                  4.039525216666667e-09 * tc[3] - 8.334697800000000e-13 * tc[4];
    // species 13: HCO
    species[13] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                  4.221185840000000e+00 * tc[0] +
                  1.621962660000000e-03 * tc[1] -
                  2.296657433333333e-06 * tc[2] +
                  1.109534108333333e-09 * tc[3] - 2.168844325000000e-13 * tc[4];
    // species 14: CH2O
    species[14] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 15: CH3O
    species[15] = +1.295697600000000e+03 * invT - 2.860603620000000e+00 -
                  3.711805020000000e+00 * tc[0] +
                  1.402316530000000e-03 * tc[1] -
                  6.275849516666667e-06 * tc[2] +
                  3.942267408333333e-09 * tc[3] - 9.329421000000001e-13 * tc[4];
    // species 16: CO
    species[16] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 17: CO2
    species[17] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 19: C2H3
    species[19] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                  3.212466450000000e+00 * tc[0] -
                  7.573958100000000e-04 * tc[1] -
                  4.320156866666666e-06 * tc[2] +
                  2.980482058333333e-09 * tc[3] - 7.357543650000000e-13 * tc[4];
    // species 20: C2H4
    species[20] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 21: C2H5
    species[21] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                  4.306465680000000e+00 * tc[0] +
                  2.093294460000000e-03 * tc[1] -
                  8.285713450000000e-06 * tc[2] +
                  4.992721716666666e-09 * tc[3] - 1.152545020000000e-12 * tc[4];
    // species 22: C2H6
    species[22] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 23: CH2CHO
    species[23] = +6.200000000000000e+01 * invT - 6.162391100000001e+00 -
                  3.409062400000000e+00 * tc[0] -
                  5.369287000000000e-03 * tc[1] -
                  3.152487500000000e-07 * tc[2] +
                  5.965485916666667e-10 * tc[3] - 1.433692550000000e-13 * tc[4];
    // species 24: aC3H5
    species[24] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 25: C3H6
    species[25] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 26: nC3H7
    species[26] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                  1.049117300000000e+00 * tc[0] -
                  1.300448650000000e-02 * tc[1] -
                  3.923752666666667e-07 * tc[2] +
                  1.632927666666667e-09 * tc[3] - 4.686010350000000e-13 * tc[4];
    // species 27: C2H3CHO
    species[27] = -9.335734399999999e+03 * invT - 1.822672720000000e+01 -
                  1.271349800000000e+00 * tc[0] -
                  1.311552700000000e-02 * tc[1] +
                  1.548538416666667e-06 * tc[2] +
                  3.986439333333333e-10 * tc[3] - 1.674027150000000e-13 * tc[4];
    // species 28: C4H7
    species[28] = +2.265332800000000e+04 * invT - 2.269338368000000e+01 -
                  7.444943200000000e-01 * tc[0] -
                  1.983942850000000e-02 * tc[1] +
                  3.816347666666667e-06 * tc[2] -
                  1.779414416666667e-10 * tc[3] - 1.154818750000000e-13 * tc[4];
    // species 29: C4H81
    species[29] = -1.790400400000000e+03 * invT - 1.988133100000000e+01 -
                  1.181138000000000e+00 * tc[0] -
                  1.542669000000000e-02 * tc[1] -
                  8.477541166666667e-07 * tc[2] +
                  2.054574000000000e-09 * tc[3] - 5.555096499999999e-13 * tc[4];
    // species 30: pC4H9
    species[30] = +7.322104000000000e+03 * invT - 2.096056380000000e+01 -
                  1.208704200000000e+00 * tc[0] -
                  1.914874850000000e-02 * tc[1] +
                  1.211008483333333e-06 * tc[2] +
                  1.285712250000000e-09 * tc[3] - 4.342971750000000e-13 * tc[4];
    // species 31: C5H9
    species[31] = +2.812188700000000e+03 * invT - 3.887825510000000e+01 +
                  2.419011100000000e+00 * tc[0] -
                  2.021519450000000e-02 * tc[1] -
                  1.130038983333333e-06 * tc[2] +
                  2.810395166666667e-09 * tc[3] - 7.558356500000001e-13 * tc[4];
    // species 48: C12H25O2
    species[48] = -2.989180000000000e+04 * invT - 1.166006000000000e+01 -
                  5.314040000000000e+00 * tc[0] -
                  4.469365000000000e-02 * tc[1] -
                  2.422516666666667e-06 * tc[2] +
                  6.243750000000000e-09 * tc[3] - 1.676625000000000e-12 * tc[4];
    // species 49: C12OOH
    species[49] = -2.383800000000000e+04 * invT - 1.420029000000000e+01 -
                  5.152310000000000e+00 * tc[0] -
                  4.989565000000000e-02 * tc[1] +
                  3.010583333333333e-06 * tc[2] +
                  3.486958333333333e-09 * tc[3] - 1.113930000000000e-12 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = -4.168750000000000e+04 * invT - 4.086092800000000e+01 -
                  4.819720000000000e-01 * tc[0] -
                  7.251000000000001e-02 * tc[1] +
                  1.665513333333333e-05 * tc[2] -
                  2.170183333333333e-09 * tc[3] - 5.967900000000001e-14 * tc[4];
    // species 51: OC12H23OOH
    species[51] = -6.653610000000001e+04 * invT + 1.965780000000001e+00 -
                  8.807330000000000e+00 * tc[0] -
                  3.253115000000000e-02 * tc[1] -
                  1.158430000000000e-05 * tc[2] +
                  1.057541666666667e-08 * tc[3] - 2.554955000000000e-12 * tc[4];
    // species 52: N2
    species[52] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041202000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427000000000e-13 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 3: OH
    species[3] = +3.718857740000000e+03 * invT - 2.836911870000000e+00 -
                 2.864728860000000e+00 * tc[0] - 5.282522400000000e-04 * tc[1] +
                 4.318045966666667e-08 * tc[2] - 2.543488950000000e-12 * tc[3] +
                 6.659793800000000e-17 * tc[4];
    // species 4: HO2
    species[4] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 5: H2
    species[5] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 6: H2O
    species[6] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 8: O2
    species[8] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 9: CH2
    species[9] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 10: CH2*
    species[10] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                  2.292038420000000e+00 * tc[0] -
                  2.327943185000000e-03 * tc[1] +
                  3.353199116666667e-07 * tc[2] -
                  3.482550000000000e-11 * tc[3] + 1.698581825000000e-15 * tc[4];
    // species 11: CH3
    species[11] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                  2.285717720000000e+00 * tc[0] -
                  3.619950185000000e-03 * tc[1] +
                  4.978572466666667e-07 * tc[2] -
                  4.964038700000000e-11 * tc[3] + 2.335771970000000e-15 * tc[4];
    // species 12: CH4
    species[12] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                  7.485149500000000e-02 * tc[0] -
                  6.695473350000000e-03 * tc[1] +
                  9.554763483333333e-07 * tc[2] -
                  1.019104458333333e-10 * tc[3] + 5.090761500000000e-15 * tc[4];
    // species 13: HCO
    species[13] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                  2.772174380000000e+00 * tc[0] -
                  2.478477630000000e-03 * tc[1] +
                  4.140760216666667e-07 * tc[2] -
                  4.909681483333334e-11 * tc[3] + 2.667543555000000e-15 * tc[4];
    // species 14: CH2O
    species[14] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 15: CH3O
    species[15] = +3.781119400000000e+02 * invT + 6.724592660000000e+00 -
                  4.757792380000000e+00 * tc[0] -
                  3.720712370000000e-03 * tc[1] +
                  4.495086266666666e-07 * tc[2] -
                  3.650754200000000e-11 * tc[3] + 1.317685490000000e-15 * tc[4];
    // species 16: CO
    species[16] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 17: CO2
    species[17] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 19: C2H3
    species[19] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                  3.016724000000000e+00 * tc[0] -
                  5.165114600000000e-03 * tc[1] +
                  7.801372483333333e-07 * tc[2] -
                  8.480274000000000e-11 * tc[3] + 4.313035205000000e-15 * tc[4];
    // species 20: C2H4
    species[20] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 21: C2H5
    species[21] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                  1.954656420000000e+00 * tc[0] -
                  8.698636100000001e-03 * tc[1] +
                  1.330344446666667e-06 * tc[2] -
                  1.460147408333333e-10 * tc[3] + 7.482078800000000e-15 * tc[4];
    // species 22: C2H6
    species[22] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 23: CH2CHO
    species[23] = -9.695000000000000e+02 * invT + 1.100775780000000e+01 -
                  5.975669900000000e+00 * tc[0] -
                  4.065295700000000e-03 * tc[1] +
                  4.572707500000000e-07 * tc[2] -
                  3.391920083333333e-11 * tc[3] + 1.088008550000000e-15 * tc[4];
    // species 24: aC3H5
    species[24] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 25: C3H6
    species[25] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 26: nC3H7
    species[26] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                  7.709747900000000e+00 * tc[0] -
                  8.015742500000001e-03 * tc[1] +
                  8.786706333333332e-07 * tc[2] -
                  6.324029333333334e-11 * tc[3] + 1.943135950000000e-15 * tc[4];
    // species 27: C2H3CHO
    species[27] = -1.078405400000000e+04 * invT + 1.066998720000000e+01 -
                  5.811186800000000e+00 * tc[0] -
                  8.557128000000001e-03 * tc[1] +
                  1.247236016666667e-06 * tc[2] -
                  1.187687416666667e-10 * tc[3] + 4.587342050000000e-15 * tc[4];
    // species 28: C4H7
    species[28] = +2.095500800000000e+04 * invT + 1.590279150000000e+01 -
                  7.013483500000000e+00 * tc[0] -
                  1.131727900000000e-02 * tc[1] +
                  1.542424500000000e-06 * tc[2] -
                  1.400660583333333e-10 * tc[3] + 5.204308500000000e-15 * tc[4];
    // species 29: C4H81
    species[29] = -2.139723100000000e+03 * invT - 1.348961690000000e+01 -
                  2.053584100000000e+00 * tc[0] -
                  1.717525350000000e-02 * tc[1] +
                  2.647199500000000e-06 * tc[2] -
                  2.757471833333334e-10 * tc[3] + 1.268052250000000e-14 * tc[4];
    // species 30: pC4H9
    species[30] = +4.964405800000000e+03 * invT + 2.657398650000000e+01 -
                  8.682239500000000e+00 * tc[0] -
                  1.184553550000000e-02 * tc[1] +
                  1.265814416666667e-06 * tc[2] -
                  5.535594666666666e-11 * tc[3] - 2.742256800000000e-15 * tc[4];
    // species 31: C5H9
    species[31] = -1.721835900000000e+03 * invT + 4.326452500000000e+01 -
                  1.013864000000000e+01 * tc[0] -
                  1.135706900000000e-02 * tc[1] +
                  1.298507716666667e-06 * tc[2] -
                  9.897101666666667e-11 * tc[3] + 3.296622400000000e-15 * tc[4];
    // species 48: C12H25O2
    species[48] = -3.741180000000000e+04 * invT + 1.375992000000000e+02 -
                  2.847820000000000e+01 * tc[0] -
                  2.687695000000000e-02 * tc[1] +
                  2.803100000000000e-06 * tc[2] -
                  2.094725000000000e-10 * tc[3] + 7.360400000000000e-15 * tc[4];
    // species 49: C12OOH
    species[49] = -3.111920000000000e+04 * invT + 1.380569000000000e+02 -
                  2.920190000000000e+01 * tc[0] -
                  2.579585000000000e-02 * tc[1] +
                  2.622116666666667e-06 * tc[2] -
                  1.919216666666667e-10 * tc[3] + 6.632000000000000e-15 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = -5.126750000000000e+04 * invT + 1.728407000000000e+02 -
                  3.509070000000000e+01 * tc[0] -
                  2.552950000000000e-02 * tc[1] +
                  2.572416666666666e-06 * tc[2] -
                  1.871891666666667e-10 * tc[3] + 6.445050000000000e-15 * tc[4];
    // species 51: OC12H23OOH
    species[51] = -7.182580000000000e+04 * invT + 1.014393000000000e+02 -
                  2.367310000000000e+01 * tc[0] -
                  3.081960000000000e-02 * tc[1] +
                  3.497266666666667e-06 * tc[2] -
                  2.776383333333333e-10 * tc[3] + 1.017950000000000e-14 * tc[4];
    // species 52: N2
    species[52] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439884000000000e-04 * tc[1] +
                  9.474600000000001e-08 * tc[2] -
                  8.414198333333333e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -4.465466660000000e+03 * invT - 3.333621381000000e+01 +
                  1.062234810000000e+00 * tc[0] -
                  2.871091470000000e-02 * tc[1] +
                  6.241448166666667e-06 * tc[2] -
                  1.061374908333333e-09 * tc[3] + 8.980489449999999e-14 * tc[4];
    // species 34: C6H12
    species[34] = -7.343686170000000e+03 * invT - 3.666482115000000e+01 +
                  1.352752050000000e+00 * tc[0] -
                  3.493277130000000e-02 * tc[1] +
                  7.656800366666667e-06 * tc[2] -
                  1.308061191666667e-09 * tc[3] + 1.106480875000000e-13 * tc[4];
    // species 36: C7H14
    species[36] = -1.021686010000000e+04 * invT - 4.018400869000000e+01 +
                  1.677205490000000e+00 * tc[0] -
                  4.123058005000000e-02 * tc[1] +
                  9.108401800000000e-06 * tc[2] -
                  1.565519191666667e-09 * tc[3] + 1.328689915000000e-13 * tc[4];
    // species 38: C8H16
    species[38] = -1.310745590000000e+04 * invT - 4.308016725000000e+01 +
                  1.892269150000000e+00 * tc[0] -
                  4.730331785000000e-02 * tc[1] +
                  1.045642535000000e-05 * tc[2] -
                  1.792985908333333e-09 * tc[3] + 1.513593415000000e-13 * tc[4];
    // species 40: C9H18
    species[40] = -1.598908470000000e+04 * invT - 4.628559543000000e+01 +
                  2.161082630000000e+00 * tc[0] -
                  5.347914850000000e-02 * tc[1] +
                  1.184955406666667e-05 * tc[2] -
                  2.033092308333333e-09 * tc[3] + 1.713857735000000e-13 * tc[4];
    // species 42: C10H20
    species[42] = -1.887083650000000e+04 * invT - 4.948615518000000e+01 +
                  2.429016880000000e+00 * tc[0] -
                  5.965279900000000e-02 * tc[1] +
                  1.324148375000000e-05 * tc[2] -
                  2.272804966666667e-09 * tc[3] + 1.913591865000000e-13 * tc[4];
  } else {
    // species 32: C5H10
    species[32] = -1.008982050000000e+04 * invT + 6.695354750000000e+01 -
                  1.458515390000000e+01 * tc[0] -
                  1.120362355000000e-02 * tc[1] +
                  1.272246708333333e-06 * tc[2] -
                  9.849080500000001e-11 * tc[3] + 3.421925695000000e-15 * tc[4];
    // species 34: C6H12
    species[34] = -1.420628600000000e+04 * invT + 8.621563800000001e+01 -
                  1.783375290000000e+01 * tc[0] -
                  1.336888290000000e-02 * tc[1] +
                  1.516727955000000e-06 * tc[2] -
                  1.173498066666667e-10 * tc[3] + 4.075621220000000e-15 * tc[4];
    // species 36: C7H14
    species[36] = -1.832600650000000e+04 * invT + 1.055289147000000e+02 -
                  2.108980390000000e+01 * tc[0] -
                  1.553039390000000e-02 * tc[1] +
                  1.760746550000000e-06 * tc[2] -
                  1.361714833333333e-10 * tc[3] + 4.727991095000000e-15 * tc[4];
    // species 38: C8H16
    species[38] = -2.244856740000000e+04 * invT + 1.248917285000000e+02 -
                  2.435401250000000e+01 * tc[0] -
                  1.768332310000000e-02 * tc[1] +
                  2.003473133333334e-06 * tc[2] -
                  1.548792108333333e-10 * tc[3] + 5.376113100000000e-15 * tc[4];
    // species 40: C9H18
    species[40] = -2.657090610000000e+04 * invT + 1.442328406000000e+02 -
                  2.761421760000000e+01 * tc[0] -
                  1.984126435000000e-02 * tc[1] +
                  2.246990766666667e-06 * tc[2] -
                  1.736587100000000e-10 * tc[3] + 6.026964700000000e-15 * tc[4];
    // species 42: C10H20
    species[42] = -3.069373070000000e+04 * invT + 1.635805623000000e+02 -
                  3.087539030000000e+01 * tc[0] -
                  2.199857630000000e-02 * tc[1] +
                  2.490425500000000e-06 * tc[2] -
                  1.924313983333333e-10 * tc[3] + 6.677573850000000e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +4.716114600000000e+03 * invT - 2.867142819190000e+01 -
                  5.243840810000000e-02 * tc[0] -
                  2.803984790000000e-02 * tc[1] +
                  5.525763383333334e-06 * tc[2] -
                  8.146114841666667e-10 * tc[3] + 5.700483000000000e-14 * tc[4];
    // species 35: PXC6H13
    species[35] = +1.832803930000000e+03 * invT - 3.181238076500000e+01 +
                  2.048714650000000e-01 * tc[0] -
                  3.419006360000000e-02 * tc[1] +
                  6.907465199999999e-06 * tc[2] -
                  1.051298350000000e-09 * tc[3] + 7.656002899999999e-14 * tc[4];
    // species 37: PXC7H15
    species[37] = -1.045902230000000e+03 * invT - 3.515597150599999e+01 +
                  4.995704060000000e-01 * tc[0] -
                  4.044132335000000e-02 * tc[1] +
                  8.342212566666667e-06 * tc[2] -
                  1.304577566666667e-09 * tc[3] + 9.830811350000000e-14 * tc[4];
    // species 39: PXC8H17
    species[39] = -3.926895110000000e+03 * invT - 3.838582253800000e+01 +
                  7.727594380000000e-01 * tc[0] -
                  4.662748525000000e-02 * tc[1] +
                  9.740787416666667e-06 * tc[2] -
                  1.546418450000000e-09 * tc[3] + 1.185637415000000e-13 * tc[4];
    // species 41: PXC9H19
    species[41] = -6.808185120000000e+03 * invT - 4.339577212000000e+01 +
                  1.043872920000000e+00 * tc[0] -
                  5.280864150000000e-02 * tc[1] +
                  1.113666618333333e-05 * tc[2] -
                  1.787384716666667e-09 * tc[3] + 1.387021375000000e-13 * tc[4];
    // species 43: PXC10H21
    species[43] = -9.689675499999999e+03 * invT - 4.481462868000000e+01 +
                  1.313583480000000e+00 * tc[0] -
                  5.898640650000000e-02 * tc[1] +
                  1.253071798333333e-05 * tc[2] -
                  2.027759216666667e-09 * tc[3] + 1.587614260000000e-13 * tc[4];
    // species 44: PXC12H25
    species[44] = -1.545304350000000e+04 * invT - 5.122052951000000e+01 +
                  1.850287410000000e+00 * tc[0] -
                  7.133535400000000e-02 * tc[1] +
                  1.531527591666667e-05 * tc[2] -
                  2.507361600000000e-09 * tc[3] + 1.987271500000000e-13 * tc[4];
  } else {
    // species 33: PXC5H11
    species[33] = -9.807123070000000e+02 * invT + 6.978067390000000e+01 -
                  1.529774460000000e+01 * tc[0] -
                  1.198676550000000e-02 * tc[1] +
                  1.363988246666667e-06 * tc[2] -
                  1.057358966666667e-10 * tc[3] + 3.677045275000000e-15 * tc[4];
    // species 35: PXC6H13
    species[35] = -5.092990410000000e+03 * invT + 8.898764130000001e+01 -
                  1.853854700000000e+01 * tc[0] -
                  1.415539810000000e-02 * tc[1] +
                  1.608845410000000e-06 * tc[2] -
                  1.246229875000000e-10 * tc[3] + 4.331680320000000e-15 * tc[4];
    // species 37: PXC7H15
    species[37] = -9.209382210000000e+03 * invT + 1.082895020000000e+02 -
                  2.179407090000000e+01 * tc[0] -
                  1.631401215000000e-02 * tc[1] +
                  1.852304066666667e-06 * tc[2] -
                  1.433892900000000e-10 * tc[3] + 4.981834995000000e-15 * tc[4];
    // species 39: PXC8H17
    species[39] = -1.333005350000000e+04 * invT + 1.276084196000000e+02 -
                  2.505103560000000e+01 * tc[0] -
                  1.847400810000000e-02 * tc[1] +
                  2.096087733333333e-06 * tc[2] -
                  1.621903408333333e-10 * tc[3] + 5.633444900000000e-15 * tc[4];
    // species 41: PXC9H19
    species[41] = -1.745160300000000e+04 * invT + 1.451476484000000e+02 -
                  2.830975140000000e+01 * tc[0] -
                  2.063286720000000e-02 * tc[1] +
                  2.339721483333333e-06 * tc[2] -
                  1.809790591666667e-10 * tc[3] + 6.284615349999999e-15 * tc[4];
    // species 43: PXC10H21
    species[43] = -2.157378320000000e+04 * invT + 1.662787020000000e+02 -
                  3.156971600000000e+01 * tc[0] -
                  2.279092015000000e-02 * tc[1] +
                  2.583249416666667e-06 * tc[2] -
                  1.997591108333333e-10 * tc[3] + 6.935477950000000e-15 * tc[4];
    // species 44: PXC12H25
    species[44] = -2.981943750000000e+04 * invT + 2.049749225000000e+02 -
                  3.809218850000000e+01 * tc[0] -
                  2.710539240000000e-02 * tc[1] +
                  3.070091950000000e-06 * tc[2] -
                  2.373018108333333e-10 * tc[3] + 8.236587400000000e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -1.676605390000000e+04 * invT - 4.972006039000000e+01 +
                  1.367870890000000e+00 * tc[0] -
                  6.867767399999999e-02 * tc[1] +
                  1.373460263333333e-05 * tc[2] -
                  1.970179683333333e-09 * tc[3] + 1.237179660000000e-13 * tc[4];
    // species 46: S3XC12H25
    species[46] = -1.676605390000000e+04 * invT - 4.972006039000000e+01 +
                  1.367870890000000e+00 * tc[0] -
                  6.867767399999999e-02 * tc[1] +
                  1.373460263333333e-05 * tc[2] -
                  1.970179683333333e-09 * tc[3] + 1.237179660000000e-13 * tc[4];
  } else {
    // species 45: SXC12H25
    species[45] = -3.121449880000000e+04 * invT + 2.037747598000000e+02 -
                  3.796882680000000e+01 * tc[0] -
                  2.693597320000000e-02 * tc[1] +
                  3.036187716666667e-06 * tc[2] -
                  2.339787525000000e-10 * tc[3] + 8.105421000000000e-15 * tc[4];
    // species 46: S3XC12H25
    species[46] = -3.121449880000000e+04 * invT + 2.037747598000000e+02 -
                  3.796882680000000e+01 * tc[0] -
                  2.693597320000000e-02 * tc[1] +
                  3.036187716666667e-06 * tc[2] -
                  2.339787525000000e-10 * tc[3] + 8.105421000000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -4.00654253e+04 * invT - 5.37212785e+01 +
                 2.62181594e+00 * tc[0] - 7.36188555e-02 * tc[1] +
                 1.57328378e-05 * tc[2] - 2.56201057e-09 * tc[3] +
                 2.01801115e-13 * tc[4];
    // species 47: C12H24
    species[47] = -2.46345299e+04 * invT - 5.68793138e+01 +
                  2.96342681e+00 * tc[0] - 7.19961800e-02 * tc[1] +
                  1.60230669e-05 * tc[2] - 2.75145394e-09 * tc[3] +
                  2.31199095e-13 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = -5.48843465e+04 * invT + 2.10180426e+02 -
                 3.85095037e+01 * tc[0] - 2.81775024e-02 * tc[1] +
                 3.19155333e-06 * tc[2] - 2.46687385e-10 * tc[3] +
                 8.56220750e-15 * tc[4];
    // species 47: C12H24
    species[47] = -3.89405962e+04 * invT + 2.01292874e+02 -
                  3.74002111e+01 * tc[0] - 2.63115377e-02 * tc[1] +
                  2.97707198e-06 * tc[2] - 2.29958219e-10 * tc[3] +
                  7.97812495e-15 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 3: OH
    species[3] = +3.38153812e+03 * invT + 3.81573857e+00 -
                 4.12530561e+00 * tc[0] + 1.61272470e-03 * tc[1] -
                 1.08794115e-06 * tc[2] + 4.83211369e-10 * tc[3] -
                 1.03118689e-13 * tc[4];
    // species 4: HO2
    species[4] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 5: H2
    species[5] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 6: H2O
    species[6] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 8: O2
    species[8] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 9: CH2
    species[9] = +4.60040401e+04 * invT + 1.20014682e+00 -
                 3.76267867e+00 * tc[0] - 4.84436072e-04 * tc[1] -
                 4.65816402e-07 * tc[2] + 3.20909294e-10 * tc[3] -
                 8.43708595e-14 * tc[4];
    // species 10: CH2*
    species[10] = +5.04968163e+04 * invT + 3.96772308e+00 -
                  4.19860411e+00 * tc[0] + 1.18330710e-03 * tc[1] -
                  1.37216037e-06 * tc[2] + 5.57346651e-10 * tc[3] -
                  9.71573685e-14 * tc[4];
    // species 11: CH3
    species[11] = +1.64449988e+04 * invT + 1.06902607e+00 -
                  3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                  9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                  1.27192867e-13 * tc[4];
    // species 12: CH4
    species[12] = -1.02466476e+04 * invT + 8.79117989e+00 -
                  5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                  8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                  8.33469780e-13 * tc[4];
    // species 13: HCO
    species[13] = +3.83956496e+03 * invT - 1.73186590e-01 -
                  4.22118584e+00 * tc[0] + 1.62196266e-03 * tc[1] -
                  2.29665743e-06 * tc[2] + 1.10953411e-09 * tc[3] -
                  2.16884432e-13 * tc[4];
    // species 14: CH2O
    species[14] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 15: CH3O
    species[15] = +1.29569760e+03 * invT - 3.86060362e+00 -
                  3.71180502e+00 * tc[0] + 1.40231653e-03 * tc[1] -
                  6.27584952e-06 * tc[2] + 3.94226741e-09 * tc[3] -
                  9.32942100e-13 * tc[4];
    // species 16: CO
    species[16] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 17: CO2
    species[17] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 19: C2H3
    species[19] = +3.48598468e+04 * invT - 6.29807380e+00 -
                  3.21246645e+00 * tc[0] - 7.57395810e-04 * tc[1] -
                  4.32015687e-06 * tc[2] + 2.98048206e-09 * tc[3] -
                  7.35754365e-13 * tc[4];
    // species 20: C2H4
    species[20] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 21: C2H5
    species[21] = +1.28416265e+04 * invT - 1.40074356e+00 -
                  4.30646568e+00 * tc[0] + 2.09329446e-03 * tc[1] -
                  8.28571345e-06 * tc[2] + 4.99272172e-09 * tc[3] -
                  1.15254502e-12 * tc[4];
    // species 22: C2H6
    species[22] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 23: CH2CHO
    species[23] = +6.20000000e+01 * invT - 7.16239110e+00 -
                  3.40906240e+00 * tc[0] - 5.36928700e-03 * tc[1] -
                  3.15248750e-07 * tc[2] + 5.96548592e-10 * tc[3] -
                  1.43369255e-13 * tc[4];
    // species 24: aC3H5
    species[24] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 25: C3H6
    species[25] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 26: nC3H7
    species[26] = +1.03123460e+04 * invT - 2.10869167e+01 -
                  1.04911730e+00 * tc[0] - 1.30044865e-02 * tc[1] -
                  3.92375267e-07 * tc[2] + 1.63292767e-09 * tc[3] -
                  4.68601035e-13 * tc[4];
    // species 27: C2H3CHO
    species[27] = -9.33573440e+03 * invT - 1.92267272e+01 -
                  1.27134980e+00 * tc[0] - 1.31155270e-02 * tc[1] +
                  1.54853842e-06 * tc[2] + 3.98643933e-10 * tc[3] -
                  1.67402715e-13 * tc[4];
    // species 28: C4H7
    species[28] = +2.26533280e+04 * invT - 2.36933837e+01 -
                  7.44494320e-01 * tc[0] - 1.98394285e-02 * tc[1] +
                  3.81634767e-06 * tc[2] - 1.77941442e-10 * tc[3] -
                  1.15481875e-13 * tc[4];
    // species 29: C4H81
    species[29] = -1.79040040e+03 * invT - 2.08813310e+01 -
                  1.18113800e+00 * tc[0] - 1.54266900e-02 * tc[1] -
                  8.47754117e-07 * tc[2] + 2.05457400e-09 * tc[3] -
                  5.55509650e-13 * tc[4];
    // species 30: pC4H9
    species[30] = +7.32210400e+03 * invT - 2.19605638e+01 -
                  1.20870420e+00 * tc[0] - 1.91487485e-02 * tc[1] +
                  1.21100848e-06 * tc[2] + 1.28571225e-09 * tc[3] -
                  4.34297175e-13 * tc[4];
    // species 31: C5H9
    species[31] = +2.81218870e+03 * invT - 3.98782551e+01 +
                  2.41901110e+00 * tc[0] - 2.02151945e-02 * tc[1] -
                  1.13003898e-06 * tc[2] + 2.81039517e-09 * tc[3] -
                  7.55835650e-13 * tc[4];
    // species 48: C12H25O2
    species[48] = -2.98918000e+04 * invT - 1.26600600e+01 -
                  5.31404000e+00 * tc[0] - 4.46936500e-02 * tc[1] -
                  2.42251667e-06 * tc[2] + 6.24375000e-09 * tc[3] -
                  1.67662500e-12 * tc[4];
    // species 49: C12OOH
    species[49] = -2.38380000e+04 * invT - 1.52002900e+01 -
                  5.15231000e+00 * tc[0] - 4.98956500e-02 * tc[1] +
                  3.01058333e-06 * tc[2] + 3.48695833e-09 * tc[3] -
                  1.11393000e-12 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = -4.16875000e+04 * invT - 4.18609280e+01 -
                  4.81972000e-01 * tc[0] - 7.25100000e-02 * tc[1] +
                  1.66551333e-05 * tc[2] - 2.17018333e-09 * tc[3] -
                  5.96790000e-14 * tc[4];
    // species 51: OC12H23OOH
    species[51] = -6.65361000e+04 * invT + 9.65780000e-01 -
                  8.80733000e+00 * tc[0] - 3.25311500e-02 * tc[1] -
                  1.15843000e-05 * tc[2] + 1.05754167e-08 * tc[3] -
                  2.55495500e-12 * tc[4];
    // species 52: N2
    species[52] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242700e-13 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 3: OH
    species[3] = +3.71885774e+03 * invT - 3.83691187e+00 -
                 2.86472886e+00 * tc[0] - 5.28252240e-04 * tc[1] +
                 4.31804597e-08 * tc[2] - 2.54348895e-12 * tc[3] +
                 6.65979380e-17 * tc[4];
    // species 4: HO2
    species[4] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 5: H2
    species[5] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 6: H2O
    species[6] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 8: O2
    species[8] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 9: CH2
    species[9] = +4.62636040e+04 * invT - 4.29709211e+00 -
                 2.87410113e+00 * tc[0] - 1.82819646e-03 * tc[1] +
                 2.34824328e-07 * tc[2] - 2.16816291e-11 * tc[3] +
                 9.38637835e-16 * tc[4];
    // species 10: CH2*
    species[10] = +5.09259997e+04 * invT - 7.33446327e+00 -
                  2.29203842e+00 * tc[0] - 2.32794318e-03 * tc[1] +
                  3.35319912e-07 * tc[2] - 3.48255000e-11 * tc[3] +
                  1.69858182e-15 * tc[4];
    // species 11: CH3
    species[11] = +1.67755843e+04 * invT - 7.19435407e+00 -
                  2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                  4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                  2.33577197e-15 * tc[4];
    // species 12: CH4
    species[12] = -9.46834459e+03 * invT - 1.93624665e+01 -
                  7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                  9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                  5.09076150e-15 * tc[4];
    // species 13: HCO
    species[13] = +4.01191815e+03 * invT - 8.02617054e+00 -
                  2.77217438e+00 * tc[0] - 2.47847763e-03 * tc[1] +
                  4.14076022e-07 * tc[2] - 4.90968148e-11 * tc[3] +
                  2.66754356e-15 * tc[4];
    // species 14: CH2O
    species[14] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 15: CH3O
    species[15] = +3.78111940e+02 * invT + 5.72459266e+00 -
                  4.75779238e+00 * tc[0] - 3.72071237e-03 * tc[1] +
                  4.49508627e-07 * tc[2] - 3.65075420e-11 * tc[3] +
                  1.31768549e-15 * tc[4];
    // species 16: CO
    species[16] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 17: CO2
    species[17] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 19: C2H3
    species[19] = +3.46128739e+04 * invT - 5.77059978e+00 -
                  3.01672400e+00 * tc[0] - 5.16511460e-03 * tc[1] +
                  7.80137248e-07 * tc[2] - 8.48027400e-11 * tc[3] +
                  4.31303520e-15 * tc[4];
    // species 20: C2H4
    species[20] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 21: C2H5
    species[21] = +1.28575200e+04 * invT - 1.25077779e+01 -
                  1.95465642e+00 * tc[0] - 8.69863610e-03 * tc[1] +
                  1.33034445e-06 * tc[2] - 1.46014741e-10 * tc[3] +
                  7.48207880e-15 * tc[4];
    // species 22: C2H6
    species[22] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 23: CH2CHO
    species[23] = -9.69500000e+02 * invT + 1.00077578e+01 -
                  5.97566990e+00 * tc[0] - 4.06529570e-03 * tc[1] +
                  4.57270750e-07 * tc[2] - 3.39192008e-11 * tc[3] +
                  1.08800855e-15 * tc[4];
    // species 24: aC3H5
    species[24] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 25: C3H6
    species[25] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 26: nC3H7
    species[26] = +7.97622360e+03 * invT + 2.22250449e+01 -
                  7.70974790e+00 * tc[0] - 8.01574250e-03 * tc[1] +
                  8.78670633e-07 * tc[2] - 6.32402933e-11 * tc[3] +
                  1.94313595e-15 * tc[4];
    // species 27: C2H3CHO
    species[27] = -1.07840540e+04 * invT + 9.66998720e+00 -
                  5.81118680e+00 * tc[0] - 8.55712800e-03 * tc[1] +
                  1.24723602e-06 * tc[2] - 1.18768742e-10 * tc[3] +
                  4.58734205e-15 * tc[4];
    // species 28: C4H7
    species[28] = +2.09550080e+04 * invT + 1.49027915e+01 -
                  7.01348350e+00 * tc[0] - 1.13172790e-02 * tc[1] +
                  1.54242450e-06 * tc[2] - 1.40066058e-10 * tc[3] +
                  5.20430850e-15 * tc[4];
    // species 29: C4H81
    species[29] = -2.13972310e+03 * invT - 1.44896169e+01 -
                  2.05358410e+00 * tc[0] - 1.71752535e-02 * tc[1] +
                  2.64719950e-06 * tc[2] - 2.75747183e-10 * tc[3] +
                  1.26805225e-14 * tc[4];
    // species 30: pC4H9
    species[30] = +4.96440580e+03 * invT + 2.55739865e+01 -
                  8.68223950e+00 * tc[0] - 1.18455355e-02 * tc[1] +
                  1.26581442e-06 * tc[2] - 5.53559467e-11 * tc[3] -
                  2.74225680e-15 * tc[4];
    // species 31: C5H9
    species[31] = -1.72183590e+03 * invT + 4.22645250e+01 -
                  1.01386400e+01 * tc[0] - 1.13570690e-02 * tc[1] +
                  1.29850772e-06 * tc[2] - 9.89710167e-11 * tc[3] +
                  3.29662240e-15 * tc[4];
    // species 48: C12H25O2
    species[48] = -3.74118000e+04 * invT + 1.36599200e+02 -
                  2.84782000e+01 * tc[0] - 2.68769500e-02 * tc[1] +
                  2.80310000e-06 * tc[2] - 2.09472500e-10 * tc[3] +
                  7.36040000e-15 * tc[4];
    // species 49: C12OOH
    species[49] = -3.11192000e+04 * invT + 1.37056900e+02 -
                  2.92019000e+01 * tc[0] - 2.57958500e-02 * tc[1] +
                  2.62211667e-06 * tc[2] - 1.91921667e-10 * tc[3] +
                  6.63200000e-15 * tc[4];
    // species 50: O2C12H24OOH
    species[50] = -5.12675000e+04 * invT + 1.71840700e+02 -
                  3.50907000e+01 * tc[0] - 2.55295000e-02 * tc[1] +
                  2.57241667e-06 * tc[2] - 1.87189167e-10 * tc[3] +
                  6.44505000e-15 * tc[4];
    // species 51: OC12H23OOH
    species[51] = -7.18258000e+04 * invT + 1.00439300e+02 -
                  2.36731000e+01 * tc[0] - 3.08196000e-02 * tc[1] +
                  3.49726667e-06 * tc[2] - 2.77638333e-10 * tc[3] +
                  1.01795000e-14 * tc[4];
    // species 52: N2
    species[52] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                  9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -4.46546666e+03 * invT - 3.43362138e+01 +
                  1.06223481e+00 * tc[0] - 2.87109147e-02 * tc[1] +
                  6.24144817e-06 * tc[2] - 1.06137491e-09 * tc[3] +
                  8.98048945e-14 * tc[4];
    // species 34: C6H12
    species[34] = -7.34368617e+03 * invT - 3.76648212e+01 +
                  1.35275205e+00 * tc[0] - 3.49327713e-02 * tc[1] +
                  7.65680037e-06 * tc[2] - 1.30806119e-09 * tc[3] +
                  1.10648088e-13 * tc[4];
    // species 36: C7H14
    species[36] = -1.02168601e+04 * invT - 4.11840087e+01 +
                  1.67720549e+00 * tc[0] - 4.12305800e-02 * tc[1] +
                  9.10840180e-06 * tc[2] - 1.56551919e-09 * tc[3] +
                  1.32868991e-13 * tc[4];
    // species 38: C8H16
    species[38] = -1.31074559e+04 * invT - 4.40801672e+01 +
                  1.89226915e+00 * tc[0] - 4.73033178e-02 * tc[1] +
                  1.04564254e-05 * tc[2] - 1.79298591e-09 * tc[3] +
                  1.51359342e-13 * tc[4];
    // species 40: C9H18
    species[40] = -1.59890847e+04 * invT - 4.72855954e+01 +
                  2.16108263e+00 * tc[0] - 5.34791485e-02 * tc[1] +
                  1.18495541e-05 * tc[2] - 2.03309231e-09 * tc[3] +
                  1.71385773e-13 * tc[4];
    // species 42: C10H20
    species[42] = -1.88708365e+04 * invT - 5.04861552e+01 +
                  2.42901688e+00 * tc[0] - 5.96527990e-02 * tc[1] +
                  1.32414838e-05 * tc[2] - 2.27280497e-09 * tc[3] +
                  1.91359186e-13 * tc[4];
  } else {
    // species 32: C5H10
    species[32] = -1.00898205e+04 * invT + 6.59535475e+01 -
                  1.45851539e+01 * tc[0] - 1.12036235e-02 * tc[1] +
                  1.27224671e-06 * tc[2] - 9.84908050e-11 * tc[3] +
                  3.42192569e-15 * tc[4];
    // species 34: C6H12
    species[34] = -1.42062860e+04 * invT + 8.52156380e+01 -
                  1.78337529e+01 * tc[0] - 1.33688829e-02 * tc[1] +
                  1.51672796e-06 * tc[2] - 1.17349807e-10 * tc[3] +
                  4.07562122e-15 * tc[4];
    // species 36: C7H14
    species[36] = -1.83260065e+04 * invT + 1.04528915e+02 -
                  2.10898039e+01 * tc[0] - 1.55303939e-02 * tc[1] +
                  1.76074655e-06 * tc[2] - 1.36171483e-10 * tc[3] +
                  4.72799110e-15 * tc[4];
    // species 38: C8H16
    species[38] = -2.24485674e+04 * invT + 1.23891728e+02 -
                  2.43540125e+01 * tc[0] - 1.76833231e-02 * tc[1] +
                  2.00347313e-06 * tc[2] - 1.54879211e-10 * tc[3] +
                  5.37611310e-15 * tc[4];
    // species 40: C9H18
    species[40] = -2.65709061e+04 * invT + 1.43232841e+02 -
                  2.76142176e+01 * tc[0] - 1.98412643e-02 * tc[1] +
                  2.24699077e-06 * tc[2] - 1.73658710e-10 * tc[3] +
                  6.02696470e-15 * tc[4];
    // species 42: C10H20
    species[42] = -3.06937307e+04 * invT + 1.62580562e+02 -
                  3.08753903e+01 * tc[0] - 2.19985763e-02 * tc[1] +
                  2.49042550e-06 * tc[2] - 1.92431398e-10 * tc[3] +
                  6.67757385e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +4.71611460e+03 * invT - 2.96714282e+01 -
                  5.24384081e-02 * tc[0] - 2.80398479e-02 * tc[1] +
                  5.52576338e-06 * tc[2] - 8.14611484e-10 * tc[3] +
                  5.70048300e-14 * tc[4];
    // species 35: PXC6H13
    species[35] = +1.83280393e+03 * invT - 3.28123808e+01 +
                  2.04871465e-01 * tc[0] - 3.41900636e-02 * tc[1] +
                  6.90746520e-06 * tc[2] - 1.05129835e-09 * tc[3] +
                  7.65600290e-14 * tc[4];
    // species 37: PXC7H15
    species[37] = -1.04590223e+03 * invT - 3.61559715e+01 +
                  4.99570406e-01 * tc[0] - 4.04413234e-02 * tc[1] +
                  8.34221257e-06 * tc[2] - 1.30457757e-09 * tc[3] +
                  9.83081135e-14 * tc[4];
    // species 39: PXC8H17
    species[39] = -3.92689511e+03 * invT - 3.93858225e+01 +
                  7.72759438e-01 * tc[0] - 4.66274853e-02 * tc[1] +
                  9.74078742e-06 * tc[2] - 1.54641845e-09 * tc[3] +
                  1.18563742e-13 * tc[4];
    // species 41: PXC9H19
    species[41] = -6.80818512e+03 * invT - 4.43957721e+01 +
                  1.04387292e+00 * tc[0] - 5.28086415e-02 * tc[1] +
                  1.11366662e-05 * tc[2] - 1.78738472e-09 * tc[3] +
                  1.38702138e-13 * tc[4];
    // species 43: PXC10H21
    species[43] = -9.68967550e+03 * invT - 4.58146287e+01 +
                  1.31358348e+00 * tc[0] - 5.89864065e-02 * tc[1] +
                  1.25307180e-05 * tc[2] - 2.02775922e-09 * tc[3] +
                  1.58761426e-13 * tc[4];
    // species 44: PXC12H25
    species[44] = -1.54530435e+04 * invT - 5.22205295e+01 +
                  1.85028741e+00 * tc[0] - 7.13353540e-02 * tc[1] +
                  1.53152759e-05 * tc[2] - 2.50736160e-09 * tc[3] +
                  1.98727150e-13 * tc[4];
  } else {
    // species 33: PXC5H11
    species[33] = -9.80712307e+02 * invT + 6.87806739e+01 -
                  1.52977446e+01 * tc[0] - 1.19867655e-02 * tc[1] +
                  1.36398825e-06 * tc[2] - 1.05735897e-10 * tc[3] +
                  3.67704528e-15 * tc[4];
    // species 35: PXC6H13
    species[35] = -5.09299041e+03 * invT + 8.79876413e+01 -
                  1.85385470e+01 * tc[0] - 1.41553981e-02 * tc[1] +
                  1.60884541e-06 * tc[2] - 1.24622988e-10 * tc[3] +
                  4.33168032e-15 * tc[4];
    // species 37: PXC7H15
    species[37] = -9.20938221e+03 * invT + 1.07289502e+02 -
                  2.17940709e+01 * tc[0] - 1.63140122e-02 * tc[1] +
                  1.85230407e-06 * tc[2] - 1.43389290e-10 * tc[3] +
                  4.98183499e-15 * tc[4];
    // species 39: PXC8H17
    species[39] = -1.33300535e+04 * invT + 1.26608420e+02 -
                  2.50510356e+01 * tc[0] - 1.84740081e-02 * tc[1] +
                  2.09608773e-06 * tc[2] - 1.62190341e-10 * tc[3] +
                  5.63344490e-15 * tc[4];
    // species 41: PXC9H19
    species[41] = -1.74516030e+04 * invT + 1.44147648e+02 -
                  2.83097514e+01 * tc[0] - 2.06328672e-02 * tc[1] +
                  2.33972148e-06 * tc[2] - 1.80979059e-10 * tc[3] +
                  6.28461535e-15 * tc[4];
    // species 43: PXC10H21
    species[43] = -2.15737832e+04 * invT + 1.65278702e+02 -
                  3.15697160e+01 * tc[0] - 2.27909202e-02 * tc[1] +
                  2.58324942e-06 * tc[2] - 1.99759111e-10 * tc[3] +
                  6.93547795e-15 * tc[4];
    // species 44: PXC12H25
    species[44] = -2.98194375e+04 * invT + 2.03974922e+02 -
                  3.80921885e+01 * tc[0] - 2.71053924e-02 * tc[1] +
                  3.07009195e-06 * tc[2] - 2.37301811e-10 * tc[3] +
                  8.23658740e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -1.67660539e+04 * invT - 5.07200604e+01 +
                  1.36787089e+00 * tc[0] - 6.86776740e-02 * tc[1] +
                  1.37346026e-05 * tc[2] - 1.97017968e-09 * tc[3] +
                  1.23717966e-13 * tc[4];
    // species 46: S3XC12H25
    species[46] = -1.67660539e+04 * invT - 5.07200604e+01 +
                  1.36787089e+00 * tc[0] - 6.86776740e-02 * tc[1] +
                  1.37346026e-05 * tc[2] - 1.97017968e-09 * tc[3] +
                  1.23717966e-13 * tc[4];
  } else {
    // species 45: SXC12H25
    species[45] = -3.12144988e+04 * invT + 2.02774760e+02 -
                  3.79688268e+01 * tc[0] - 2.69359732e-02 * tc[1] +
                  3.03618772e-06 * tc[2] - 2.33978752e-10 * tc[3] +
                  8.10542100e-15 * tc[4];
    // species 46: S3XC12H25
    species[46] = -3.12144988e+04 * invT + 2.02774760e+02 -
                  3.79688268e+01 * tc[0] - 2.69359732e-02 * tc[1] +
                  3.03618772e-06 * tc[2] - 2.33978752e-10 * tc[3] +
                  8.10542100e-15 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -3.62181594e+00 + 7.36188555e-02 * tc[1] -
                 3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
                 8.07204460e-13 * tc[4] - 4.00654253e+04 * invT;
    // species 47: C12H24
    species[47] = -3.96342681e+00 + 7.19961800e-02 * tc[1] -
                  3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
                  9.24796380e-13 * tc[4] - 2.46345299e+04 * invT;
  } else {
    // species 0: NC12H26
    species[0] = +3.75095037e+01 + 2.81775024e-02 * tc[1] -
                 6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
                 3.42488300e-14 * tc[4] - 5.48843465e+04 * invT;
    // species 47: C12H24
    species[47] = +3.64002111e+01 + 2.63115377e-02 * tc[1] -
                  5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
                  3.19124998e-14 * tc[4] - 3.89405962e+04 * invT;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: OH
    species[3] = +3.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 4: HO2
    species[4] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 5: H2
    species[5] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 6: H2O
    species[6] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: O2
    species[8] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: CH2
    species[9] = +2.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 10: CH2*
    species[10] = +3.19860411e+00 - 1.18330710e-03 * tc[1] +
                  2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                  3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 11: CH3
    species[11] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                  1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                  5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 12: CH4
    species[12] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 13: HCO
    species[13] = +3.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 14: CH2O
    species[14] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 15: CH3O
    species[15] = +2.71180502e+00 - 1.40231653e-03 * tc[1] +
                  1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
                  3.73176840e-12 * tc[4] + 1.29569760e+03 * invT;
    // species 16: CO
    species[16] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 17: CO2
    species[17] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 18: C2H2
    species[18] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 19: C2H3
    species[19] = +2.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 20: C2H4
    species[20] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 21: C2H5
    species[21] = +3.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 22: C2H6
    species[22] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 23: CH2CHO
    species[23] = +2.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 24: aC3H5
    species[24] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 25: C3H6
    species[25] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 26: nC3H7
    species[26] = +4.91173000e-02 + 1.30044865e-02 * tc[1] +
                  7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                  1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
    // species 27: C2H3CHO
    species[27] = +2.71349800e-01 + 1.31155270e-02 * tc[1] -
                  3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
                  6.69610860e-13 * tc[4] - 9.33573440e+03 * invT;
    // species 28: C4H7
    species[28] = -2.55505680e-01 + 1.98394285e-02 * tc[1] -
                  7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
                  4.61927500e-13 * tc[4] + 2.26533280e+04 * invT;
    // species 29: C4H81
    species[29] = +1.81138000e-01 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 30: pC4H9
    species[30] = +2.08704200e-01 + 1.91487485e-02 * tc[1] -
                  2.42201697e-06 * tc[2] - 3.85713675e-09 * tc[3] +
                  1.73718870e-12 * tc[4] + 7.32210400e+03 * invT;
    // species 31: C5H9
    species[31] = -3.41901110e+00 + 2.02151945e-02 * tc[1] +
                  2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
                  3.02334260e-12 * tc[4] + 2.81218870e+03 * invT;
    // species 48: C12H25O2
    species[48] = +4.31404000e+00 + 4.46936500e-02 * tc[1] +
                  4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
                  6.70650000e-12 * tc[4] - 2.98918000e+04 * invT;
    // species 49: C12OOH
    species[49] = +4.15231000e+00 + 4.98956500e-02 * tc[1] -
                  6.02116667e-06 * tc[2] - 1.04608750e-08 * tc[3] +
                  4.45572000e-12 * tc[4] - 2.38380000e+04 * invT;
    // species 50: O2C12H24OOH
    species[50] = -5.18028000e-01 + 7.25100000e-02 * tc[1] -
                  3.33102667e-05 * tc[2] + 6.51055000e-09 * tc[3] +
                  2.38716000e-13 * tc[4] - 4.16875000e+04 * invT;
    // species 51: OC12H23OOH
    species[51] = +7.80733000e+00 + 3.25311500e-02 * tc[1] +
                  2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
                  1.02198200e-11 * tc[4] - 6.65361000e+04 * invT;
    // species 52: N2
    species[52] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: OH
    species[3] = +1.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 4: HO2
    species[4] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 5: H2
    species[5] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 6: H2O
    species[6] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: O2
    species[8] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: CH2
    species[9] = +1.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 10: CH2*
    species[10] = +1.29203842e+00 + 2.32794318e-03 * tc[1] -
                  6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                  6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 11: CH3
    species[11] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                  9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                  9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 12: CH4
    species[12] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 13: HCO
    species[13] = +1.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 14: CH2O
    species[14] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 15: CH3O
    species[15] = +3.75779238e+00 + 3.72071237e-03 * tc[1] -
                  8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
                  5.27074196e-15 * tc[4] + 3.78111940e+02 * invT;
    // species 16: CO
    species[16] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 17: CO2
    species[17] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 18: C2H2
    species[18] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 19: C2H3
    species[19] = +2.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 20: C2H4
    species[20] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 21: C2H5
    species[21] = +9.54656420e-01 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 22: C2H6
    species[22] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 23: CH2CHO
    species[23] = +4.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 24: aC3H5
    species[24] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 25: C3H6
    species[25] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 26: nC3H7
    species[26] = +6.70974790e+00 + 8.01574250e-03 * tc[1] -
                  1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                  7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
    // species 27: C2H3CHO
    species[27] = +4.81118680e+00 + 8.55712800e-03 * tc[1] -
                  2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
                  1.83493682e-14 * tc[4] - 1.07840540e+04 * invT;
    // species 28: C4H7
    species[28] = +6.01348350e+00 + 1.13172790e-02 * tc[1] -
                  3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
                  2.08172340e-14 * tc[4] + 2.09550080e+04 * invT;
    // species 29: C4H81
    species[29] = +1.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 30: pC4H9
    species[30] = +7.68223950e+00 + 1.18455355e-02 * tc[1] -
                  2.53162883e-06 * tc[2] + 1.66067840e-10 * tc[3] +
                  1.09690272e-14 * tc[4] + 4.96440580e+03 * invT;
    // species 31: C5H9
    species[31] = +9.13864000e+00 + 1.13570690e-02 * tc[1] -
                  2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
                  1.31864896e-14 * tc[4] - 1.72183590e+03 * invT;
    // species 48: C12H25O2
    species[48] = +2.74782000e+01 + 2.68769500e-02 * tc[1] -
                  5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
                  2.94416000e-14 * tc[4] - 3.74118000e+04 * invT;
    // species 49: C12OOH
    species[49] = +2.82019000e+01 + 2.57958500e-02 * tc[1] -
                  5.24423333e-06 * tc[2] + 5.75765000e-10 * tc[3] -
                  2.65280000e-14 * tc[4] - 3.11192000e+04 * invT;
    // species 50: O2C12H24OOH
    species[50] = +3.40907000e+01 + 2.55295000e-02 * tc[1] -
                  5.14483333e-06 * tc[2] + 5.61567500e-10 * tc[3] -
                  2.57802000e-14 * tc[4] - 5.12675000e+04 * invT;
    // species 51: OC12H23OOH
    species[51] = +2.26731000e+01 + 3.08196000e-02 * tc[1] -
                  6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
                  4.07180000e-14 * tc[4] - 7.18258000e+04 * invT;
    // species 52: N2
    species[52] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -2.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 34: C6H12
    species[34] = -2.35275205e+00 + 3.49327713e-02 * tc[1] -
                  1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
                  4.42592350e-13 * tc[4] - 7.34368617e+03 * invT;
    // species 36: C7H14
    species[36] = -2.67720549e+00 + 4.12305800e-02 * tc[1] -
                  1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
                  5.31475966e-13 * tc[4] - 1.02168601e+04 * invT;
    // species 38: C8H16
    species[38] = -2.89226915e+00 + 4.73033178e-02 * tc[1] -
                  2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
                  6.05437366e-13 * tc[4] - 1.31074559e+04 * invT;
    // species 40: C9H18
    species[40] = -3.16108263e+00 + 5.34791485e-02 * tc[1] -
                  2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
                  6.85543094e-13 * tc[4] - 1.59890847e+04 * invT;
    // species 42: C10H20
    species[42] = -3.42901688e+00 + 5.96527990e-02 * tc[1] -
                  2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
                  7.65436746e-13 * tc[4] - 1.88708365e+04 * invT;
  } else {
    // species 32: C5H10
    species[32] = +1.35851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
    // species 34: C6H12
    species[34] = +1.68337529e+01 + 1.33688829e-02 * tc[1] -
                  3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
                  1.63024849e-14 * tc[4] - 1.42062860e+04 * invT;
    // species 36: C7H14
    species[36] = +2.00898039e+01 + 1.55303939e-02 * tc[1] -
                  3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
                  1.89119644e-14 * tc[4] - 1.83260065e+04 * invT;
    // species 38: C8H16
    species[38] = +2.33540125e+01 + 1.76833231e-02 * tc[1] -
                  4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
                  2.15044524e-14 * tc[4] - 2.24485674e+04 * invT;
    // species 40: C9H18
    species[40] = +2.66142176e+01 + 1.98412643e-02 * tc[1] -
                  4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
                  2.41078588e-14 * tc[4] - 2.65709061e+04 * invT;
    // species 42: C10H20
    species[42] = +2.98753903e+01 + 2.19985763e-02 * tc[1] -
                  4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
                  2.67102954e-14 * tc[4] - 3.06937307e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = -9.47561592e-01 + 2.80398479e-02 * tc[1] -
                  1.10515268e-05 * tc[2] + 2.44383445e-09 * tc[3] -
                  2.28019320e-13 * tc[4] + 4.71611460e+03 * invT;
    // species 35: PXC6H13
    species[35] = -1.20487147e+00 + 3.41900636e-02 * tc[1] -
                  1.38149304e-05 * tc[2] + 3.15389505e-09 * tc[3] -
                  3.06240116e-13 * tc[4] + 1.83280393e+03 * invT;
    // species 37: PXC7H15
    species[37] = -1.49957041e+00 + 4.04413234e-02 * tc[1] -
                  1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
                  3.93232454e-13 * tc[4] - 1.04590223e+03 * invT;
    // species 39: PXC8H17
    species[39] = -1.77275944e+00 + 4.66274853e-02 * tc[1] -
                  1.94815748e-05 * tc[2] + 4.63925535e-09 * tc[3] -
                  4.74254966e-13 * tc[4] - 3.92689511e+03 * invT;
    // species 41: PXC9H19
    species[41] = -2.04387292e+00 + 5.28086415e-02 * tc[1] -
                  2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
                  5.54808550e-13 * tc[4] - 6.80818512e+03 * invT;
    // species 43: PXC10H21
    species[43] = -2.31358348e+00 + 5.89864065e-02 * tc[1] -
                  2.50614360e-05 * tc[2] + 6.08327765e-09 * tc[3] -
                  6.35045704e-13 * tc[4] - 9.68967550e+03 * invT;
    // species 44: PXC12H25
    species[44] = -2.85028741e+00 + 7.13353540e-02 * tc[1] -
                  3.06305518e-05 * tc[2] + 7.52208480e-09 * tc[3] -
                  7.94908600e-13 * tc[4] - 1.54530435e+04 * invT;
  } else {
    // species 33: PXC5H11
    species[33] = +1.42977446e+01 + 1.19867655e-02 * tc[1] -
                  2.72797649e-06 * tc[2] + 3.17207690e-10 * tc[3] -
                  1.47081811e-14 * tc[4] - 9.80712307e+02 * invT;
    // species 35: PXC6H13
    species[35] = +1.75385470e+01 + 1.41553981e-02 * tc[1] -
                  3.21769082e-06 * tc[2] + 3.73868963e-10 * tc[3] -
                  1.73267213e-14 * tc[4] - 5.09299041e+03 * invT;
    // species 37: PXC7H15
    species[37] = +2.07940709e+01 + 1.63140122e-02 * tc[1] -
                  3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
                  1.99273400e-14 * tc[4] - 9.20938221e+03 * invT;
    // species 39: PXC8H17
    species[39] = +2.40510356e+01 + 1.84740081e-02 * tc[1] -
                  4.19217547e-06 * tc[2] + 4.86571022e-10 * tc[3] -
                  2.25337796e-14 * tc[4] - 1.33300535e+04 * invT;
    // species 41: PXC9H19
    species[41] = +2.73097514e+01 + 2.06328672e-02 * tc[1] -
                  4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
                  2.51384614e-14 * tc[4] - 1.74516030e+04 * invT;
    // species 43: PXC10H21
    species[43] = +3.05697160e+01 + 2.27909202e-02 * tc[1] -
                  5.16649883e-06 * tc[2] + 5.99277332e-10 * tc[3] -
                  2.77419118e-14 * tc[4] - 2.15737832e+04 * invT;
    // species 44: PXC12H25
    species[44] = +3.70921885e+01 + 2.71053924e-02 * tc[1] -
                  6.14018390e-06 * tc[2] + 7.11905433e-10 * tc[3] -
                  3.29463496e-14 * tc[4] - 2.98194375e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -2.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
    // species 46: S3XC12H25
    species[46] = -2.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
  } else {
    // species 45: SXC12H25
    species[45] = +3.69688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
    // species 46: S3XC12H25
    species[46] = +3.69688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 + 7.36188555e-02 * tc[1] -
                 3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
                 8.07204460e-13 * tc[4] - 4.00654253e+04 * invT;
    // species 47: C12H24
    species[47] = -2.96342681e+00 + 7.19961800e-02 * tc[1] -
                  3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
                  9.24796380e-13 * tc[4] - 2.46345299e+04 * invT;
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 + 2.81775024e-02 * tc[1] -
                 6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
                 3.42488300e-14 * tc[4] - 5.48843465e+04 * invT;
    // species 47: C12H24
    species[47] = +3.74002111e+01 + 2.63115377e-02 * tc[1] -
                  5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
                  3.19124998e-14 * tc[4] - 3.89405962e+04 * invT;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: OH
    species[3] = +4.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 4: HO2
    species[4] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 5: H2
    species[5] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 6: H2O
    species[6] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: O2
    species[8] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: CH2
    species[9] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 10: CH2*
    species[10] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                  2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                  3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 11: CH3
    species[11] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                  1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                  5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 12: CH4
    species[12] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 13: HCO
    species[13] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 14: CH2O
    species[14] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 15: CH3O
    species[15] = +3.71180502e+00 - 1.40231653e-03 * tc[1] +
                  1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
                  3.73176840e-12 * tc[4] + 1.29569760e+03 * invT;
    // species 16: CO
    species[16] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 17: CO2
    species[17] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 18: C2H2
    species[18] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 19: C2H3
    species[19] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 20: C2H4
    species[20] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 21: C2H5
    species[21] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 22: C2H6
    species[22] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 23: CH2CHO
    species[23] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 24: aC3H5
    species[24] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 25: C3H6
    species[25] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 26: nC3H7
    species[26] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                  7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                  1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
    // species 27: C2H3CHO
    species[27] = +1.27134980e+00 + 1.31155270e-02 * tc[1] -
                  3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
                  6.69610860e-13 * tc[4] - 9.33573440e+03 * invT;
    // species 28: C4H7
    species[28] = +7.44494320e-01 + 1.98394285e-02 * tc[1] -
                  7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
                  4.61927500e-13 * tc[4] + 2.26533280e+04 * invT;
    // species 29: C4H81
    species[29] = +1.18113800e+00 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 30: pC4H9
    species[30] = +1.20870420e+00 + 1.91487485e-02 * tc[1] -
                  2.42201697e-06 * tc[2] - 3.85713675e-09 * tc[3] +
                  1.73718870e-12 * tc[4] + 7.32210400e+03 * invT;
    // species 31: C5H9
    species[31] = -2.41901110e+00 + 2.02151945e-02 * tc[1] +
                  2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
                  3.02334260e-12 * tc[4] + 2.81218870e+03 * invT;
    // species 48: C12H25O2
    species[48] = +5.31404000e+00 + 4.46936500e-02 * tc[1] +
                  4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
                  6.70650000e-12 * tc[4] - 2.98918000e+04 * invT;
    // species 49: C12OOH
    species[49] = +5.15231000e+00 + 4.98956500e-02 * tc[1] -
                  6.02116667e-06 * tc[2] - 1.04608750e-08 * tc[3] +
                  4.45572000e-12 * tc[4] - 2.38380000e+04 * invT;
    // species 50: O2C12H24OOH
    species[50] = +4.81972000e-01 + 7.25100000e-02 * tc[1] -
                  3.33102667e-05 * tc[2] + 6.51055000e-09 * tc[3] +
                  2.38716000e-13 * tc[4] - 4.16875000e+04 * invT;
    // species 51: OC12H23OOH
    species[51] = +8.80733000e+00 + 3.25311500e-02 * tc[1] +
                  2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
                  1.02198200e-11 * tc[4] - 6.65361000e+04 * invT;
    // species 52: N2
    species[52] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: OH
    species[3] = +2.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 4: HO2
    species[4] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 5: H2
    species[5] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 6: H2O
    species[6] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: O2
    species[8] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: CH2
    species[9] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 10: CH2*
    species[10] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                  6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                  6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 11: CH3
    species[11] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                  9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                  9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 12: CH4
    species[12] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 13: HCO
    species[13] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 14: CH2O
    species[14] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 15: CH3O
    species[15] = +4.75779238e+00 + 3.72071237e-03 * tc[1] -
                  8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
                  5.27074196e-15 * tc[4] + 3.78111940e+02 * invT;
    // species 16: CO
    species[16] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 17: CO2
    species[17] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 18: C2H2
    species[18] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 19: C2H3
    species[19] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 20: C2H4
    species[20] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 21: C2H5
    species[21] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 22: C2H6
    species[22] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 23: CH2CHO
    species[23] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 24: aC3H5
    species[24] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 25: C3H6
    species[25] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 26: nC3H7
    species[26] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                  1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                  7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
    // species 27: C2H3CHO
    species[27] = +5.81118680e+00 + 8.55712800e-03 * tc[1] -
                  2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
                  1.83493682e-14 * tc[4] - 1.07840540e+04 * invT;
    // species 28: C4H7
    species[28] = +7.01348350e+00 + 1.13172790e-02 * tc[1] -
                  3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
                  2.08172340e-14 * tc[4] + 2.09550080e+04 * invT;
    // species 29: C4H81
    species[29] = +2.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 30: pC4H9
    species[30] = +8.68223950e+00 + 1.18455355e-02 * tc[1] -
                  2.53162883e-06 * tc[2] + 1.66067840e-10 * tc[3] +
                  1.09690272e-14 * tc[4] + 4.96440580e+03 * invT;
    // species 31: C5H9
    species[31] = +1.01386400e+01 + 1.13570690e-02 * tc[1] -
                  2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
                  1.31864896e-14 * tc[4] - 1.72183590e+03 * invT;
    // species 48: C12H25O2
    species[48] = +2.84782000e+01 + 2.68769500e-02 * tc[1] -
                  5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
                  2.94416000e-14 * tc[4] - 3.74118000e+04 * invT;
    // species 49: C12OOH
    species[49] = +2.92019000e+01 + 2.57958500e-02 * tc[1] -
                  5.24423333e-06 * tc[2] + 5.75765000e-10 * tc[3] -
                  2.65280000e-14 * tc[4] - 3.11192000e+04 * invT;
    // species 50: O2C12H24OOH
    species[50] = +3.50907000e+01 + 2.55295000e-02 * tc[1] -
                  5.14483333e-06 * tc[2] + 5.61567500e-10 * tc[3] -
                  2.57802000e-14 * tc[4] - 5.12675000e+04 * invT;
    // species 51: OC12H23OOH
    species[51] = +2.36731000e+01 + 3.08196000e-02 * tc[1] -
                  6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
                  4.07180000e-14 * tc[4] - 7.18258000e+04 * invT;
    // species 52: N2
    species[52] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -1.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 34: C6H12
    species[34] = -1.35275205e+00 + 3.49327713e-02 * tc[1] -
                  1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
                  4.42592350e-13 * tc[4] - 7.34368617e+03 * invT;
    // species 36: C7H14
    species[36] = -1.67720549e+00 + 4.12305800e-02 * tc[1] -
                  1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
                  5.31475966e-13 * tc[4] - 1.02168601e+04 * invT;
    // species 38: C8H16
    species[38] = -1.89226915e+00 + 4.73033178e-02 * tc[1] -
                  2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
                  6.05437366e-13 * tc[4] - 1.31074559e+04 * invT;
    // species 40: C9H18
    species[40] = -2.16108263e+00 + 5.34791485e-02 * tc[1] -
                  2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
                  6.85543094e-13 * tc[4] - 1.59890847e+04 * invT;
    // species 42: C10H20
    species[42] = -2.42901688e+00 + 5.96527990e-02 * tc[1] -
                  2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
                  7.65436746e-13 * tc[4] - 1.88708365e+04 * invT;
  } else {
    // species 32: C5H10
    species[32] = +1.45851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
    // species 34: C6H12
    species[34] = +1.78337529e+01 + 1.33688829e-02 * tc[1] -
                  3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
                  1.63024849e-14 * tc[4] - 1.42062860e+04 * invT;
    // species 36: C7H14
    species[36] = +2.10898039e+01 + 1.55303939e-02 * tc[1] -
                  3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
                  1.89119644e-14 * tc[4] - 1.83260065e+04 * invT;
    // species 38: C8H16
    species[38] = +2.43540125e+01 + 1.76833231e-02 * tc[1] -
                  4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
                  2.15044524e-14 * tc[4] - 2.24485674e+04 * invT;
    // species 40: C9H18
    species[40] = +2.76142176e+01 + 1.98412643e-02 * tc[1] -
                  4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
                  2.41078588e-14 * tc[4] - 2.65709061e+04 * invT;
    // species 42: C10H20
    species[42] = +3.08753903e+01 + 2.19985763e-02 * tc[1] -
                  4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
                  2.67102954e-14 * tc[4] - 3.06937307e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +5.24384081e-02 + 2.80398479e-02 * tc[1] -
                  1.10515268e-05 * tc[2] + 2.44383445e-09 * tc[3] -
                  2.28019320e-13 * tc[4] + 4.71611460e+03 * invT;
    // species 35: PXC6H13
    species[35] = -2.04871465e-01 + 3.41900636e-02 * tc[1] -
                  1.38149304e-05 * tc[2] + 3.15389505e-09 * tc[3] -
                  3.06240116e-13 * tc[4] + 1.83280393e+03 * invT;
    // species 37: PXC7H15
    species[37] = -4.99570406e-01 + 4.04413234e-02 * tc[1] -
                  1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
                  3.93232454e-13 * tc[4] - 1.04590223e+03 * invT;
    // species 39: PXC8H17
    species[39] = -7.72759438e-01 + 4.66274853e-02 * tc[1] -
                  1.94815748e-05 * tc[2] + 4.63925535e-09 * tc[3] -
                  4.74254966e-13 * tc[4] - 3.92689511e+03 * invT;
    // species 41: PXC9H19
    species[41] = -1.04387292e+00 + 5.28086415e-02 * tc[1] -
                  2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
                  5.54808550e-13 * tc[4] - 6.80818512e+03 * invT;
    // species 43: PXC10H21
    species[43] = -1.31358348e+00 + 5.89864065e-02 * tc[1] -
                  2.50614360e-05 * tc[2] + 6.08327765e-09 * tc[3] -
                  6.35045704e-13 * tc[4] - 9.68967550e+03 * invT;
    // species 44: PXC12H25
    species[44] = -1.85028741e+00 + 7.13353540e-02 * tc[1] -
                  3.06305518e-05 * tc[2] + 7.52208480e-09 * tc[3] -
                  7.94908600e-13 * tc[4] - 1.54530435e+04 * invT;
  } else {
    // species 33: PXC5H11
    species[33] = +1.52977446e+01 + 1.19867655e-02 * tc[1] -
                  2.72797649e-06 * tc[2] + 3.17207690e-10 * tc[3] -
                  1.47081811e-14 * tc[4] - 9.80712307e+02 * invT;
    // species 35: PXC6H13
    species[35] = +1.85385470e+01 + 1.41553981e-02 * tc[1] -
                  3.21769082e-06 * tc[2] + 3.73868963e-10 * tc[3] -
                  1.73267213e-14 * tc[4] - 5.09299041e+03 * invT;
    // species 37: PXC7H15
    species[37] = +2.17940709e+01 + 1.63140122e-02 * tc[1] -
                  3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
                  1.99273400e-14 * tc[4] - 9.20938221e+03 * invT;
    // species 39: PXC8H17
    species[39] = +2.50510356e+01 + 1.84740081e-02 * tc[1] -
                  4.19217547e-06 * tc[2] + 4.86571022e-10 * tc[3] -
                  2.25337796e-14 * tc[4] - 1.33300535e+04 * invT;
    // species 41: PXC9H19
    species[41] = +2.83097514e+01 + 2.06328672e-02 * tc[1] -
                  4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
                  2.51384614e-14 * tc[4] - 1.74516030e+04 * invT;
    // species 43: PXC10H21
    species[43] = +3.15697160e+01 + 2.27909202e-02 * tc[1] -
                  5.16649883e-06 * tc[2] + 5.99277332e-10 * tc[3] -
                  2.77419118e-14 * tc[4] - 2.15737832e+04 * invT;
    // species 44: PXC12H25
    species[44] = +3.80921885e+01 + 2.71053924e-02 * tc[1] -
                  6.14018390e-06 * tc[2] + 7.11905433e-10 * tc[3] -
                  3.29463496e-14 * tc[4] - 2.98194375e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -1.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
    // species 46: S3XC12H25
    species[46] = -1.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
  } else {
    // species 45: SXC12H25
    species[45] = +3.79688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
    // species 46: S3XC12H25
    species[46] = +3.79688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 * tc[0] + 1.47237711e-01 * tc[1] -
                 4.71985136e-05 * tc[2] + 1.02480423e-08 * tc[3] -
                 1.00900558e-12 * tc[4] + 5.00994626e+01;
    // species 47: C12H24
    species[47] = -2.96342681e+00 * tc[0] + 1.43992360e-01 * tc[1] -
                  4.80692008e-05 * tc[2] + 1.10058158e-08 * tc[3] -
                  1.15599547e-12 * tc[4] + 5.29158870e+01;
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 * tc[0] + 5.63550048e-02 * tc[1] -
                 9.57466000e-06 * tc[2] + 9.86749540e-10 * tc[3] -
                 4.28110375e-14 * tc[4] - 1.72670922e+02;
    // species 47: C12H24
    species[47] = +3.74002111e+01 * tc[0] + 5.26230753e-02 * tc[1] -
                  8.93121595e-06 * tc[2] + 9.19832877e-10 * tc[3] -
                  3.98906247e-14 * tc[4] - 1.64892663e+02;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 3: OH
    species[3] = +4.12530561e+00 * tc[0] - 3.22544939e-03 * tc[1] +
                 3.26382346e-06 * tc[2] - 1.93284548e-09 * tc[3] +
                 5.15593447e-13 * tc[4] - 6.90432960e-01;
    // species 4: HO2
    species[4] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 5: H2
    species[5] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 6: H2O
    species[6] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 8: O2
    species[8] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 9: CH2
    species[9] = +3.76267867e+00 * tc[0] + 9.68872143e-04 * tc[1] +
                 1.39744921e-06 * tc[2] - 1.28363718e-09 * tc[3] +
                 4.21854298e-13 * tc[4] + 1.56253185e+00;
    // species 10: CH2*
    species[10] = +4.19860411e+00 * tc[0] - 2.36661419e-03 * tc[1] +
                  4.11648110e-06 * tc[2] - 2.22938660e-09 * tc[3] +
                  4.85786843e-13 * tc[4] - 7.69118967e-01;
    // species 11: CH3
    species[11] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                  2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                  6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 12: CH4
    species[12] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                  2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                  4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 13: HCO
    species[13] = +4.22118584e+00 * tc[0] - 3.24392532e-03 * tc[1] +
                  6.88997230e-06 * tc[2] - 4.43813643e-09 * tc[3] +
                  1.08442216e-12 * tc[4] + 3.39437243e+00;
    // species 14: CH2O
    species[14] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 15: CH3O
    species[15] = +3.71180502e+00 * tc[0] - 2.80463306e-03 * tc[1] +
                  1.88275486e-05 * tc[2] - 1.57690696e-08 * tc[3] +
                  4.66471050e-12 * tc[4] + 6.57240864e+00;
    // species 16: CO
    species[16] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 17: CO2
    species[17] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 18: C2H2
    species[18] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 19: C2H3
    species[19] = +3.21246645e+00 * tc[0] + 1.51479162e-03 * tc[1] +
                  1.29604706e-05 * tc[2] - 1.19219282e-08 * tc[3] +
                  3.67877182e-12 * tc[4] + 8.51054025e+00;
    // species 20: C2H4
    species[20] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 21: C2H5
    species[21] = +4.30646568e+00 * tc[0] - 4.18658892e-03 * tc[1] +
                  2.48571403e-05 * tc[2] - 1.99708869e-08 * tc[3] +
                  5.76272510e-12 * tc[4] + 4.70720924e+00;
    // species 22: C2H6
    species[22] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 23: CH2CHO
    species[23] = +3.40906240e+00 * tc[0] + 1.07385740e-02 * tc[1] +
                  9.45746250e-07 * tc[2] - 2.38619437e-09 * tc[3] +
                  7.16846275e-13 * tc[4] + 9.57145350e+00;
    // species 24: aC3H5
    species[24] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 25: C3H6
    species[25] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 26: nC3H7
    species[26] = +1.04911730e+00 * tc[0] + 2.60089730e-02 * tc[1] +
                  1.17712580e-06 * tc[2] - 6.53171067e-09 * tc[3] +
                  2.34300518e-12 * tc[4] + 2.11360340e+01;
    // species 27: C2H3CHO
    species[27] = +1.27134980e+00 * tc[0] + 2.62310540e-02 * tc[1] -
                  4.64561525e-06 * tc[2] - 1.59457573e-09 * tc[3] +
                  8.37013575e-13 * tc[4] + 1.94980770e+01;
    // species 28: C4H7
    species[28] = +7.44494320e-01 * tc[0] + 3.96788570e-02 * tc[1] -
                  1.14490430e-05 * tc[2] + 7.11765767e-10 * tc[3] +
                  5.77409375e-13 * tc[4] + 2.34378780e+01;
    // species 29: C4H81
    species[29] = +1.18113800e+00 * tc[0] + 3.08533800e-02 * tc[1] +
                  2.54326235e-06 * tc[2] - 8.21829600e-09 * tc[3] +
                  2.77754825e-12 * tc[4] + 2.10624690e+01;
    // species 30: pC4H9
    species[30] = +1.20870420e+00 * tc[0] + 3.82974970e-02 * tc[1] -
                  3.63302545e-06 * tc[2] - 5.14284900e-09 * tc[3] +
                  2.17148588e-12 * tc[4] + 2.21692680e+01;
    // species 31: C5H9
    species[31] = -2.41901110e+00 * tc[0] + 4.04303890e-02 * tc[1] +
                  3.39011695e-06 * tc[2] - 1.12415807e-08 * tc[3] +
                  3.77917825e-12 * tc[4] + 3.64592440e+01;
    // species 48: C12H25O2
    species[48] = +5.31404000e+00 * tc[0] + 8.93873000e-02 * tc[1] +
                  7.26755000e-06 * tc[2] - 2.49750000e-08 * tc[3] +
                  8.38312500e-12 * tc[4] + 1.69741000e+01;
    // species 49: C12OOH
    species[49] = +5.15231000e+00 * tc[0] + 9.97913000e-02 * tc[1] -
                  9.03175000e-06 * tc[2] - 1.39478333e-08 * tc[3] +
                  5.56965000e-12 * tc[4] + 1.93526000e+01;
    // species 50: O2C12H24OOH
    species[50] = +4.81972000e-01 * tc[0] + 1.45020000e-01 * tc[1] -
                  4.99654000e-05 * tc[2] + 8.68073333e-09 * tc[3] +
                  2.98395000e-13 * tc[4] + 4.13429000e+01;
    // species 51: OC12H23OOH
    species[51] = +8.80733000e+00 * tc[0] + 6.50623000e-02 * tc[1] +
                  3.47529000e-05 * tc[2] - 4.23016667e-08 * tc[3] +
                  1.27747750e-11 * tc[4] + 6.84155000e+00;
    // species 52: N2
    species[52] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213500e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 3: OH
    species[3] = +2.86472886e+00 * tc[0] + 1.05650448e-03 * tc[1] -
                 1.29541379e-07 * tc[2] + 1.01739558e-11 * tc[3] -
                 3.32989690e-16 * tc[4] + 5.70164073e+00;
    // species 4: HO2
    species[4] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 5: H2
    species[5] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 6: H2O
    species[6] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 8: O2
    species[8] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 9: CH2
    species[9] = +2.87410113e+00 * tc[0] + 3.65639292e-03 * tc[1] -
                 7.04472985e-07 * tc[2] + 8.67265163e-11 * tc[3] -
                 4.69318918e-15 * tc[4] + 6.17119324e+00;
    // species 10: CH2*
    species[10] = +2.29203842e+00 * tc[0] + 4.65588637e-03 * tc[1] -
                  1.00595973e-06 * tc[2] + 1.39302000e-10 * tc[3] -
                  8.49290912e-15 * tc[4] + 8.62650169e+00;
    // species 11: CH3
    species[11] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                  1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                  1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 12: CH4
    species[12] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                  2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                  2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 13: HCO
    species[13] = +2.77217438e+00 * tc[0] + 4.95695526e-03 * tc[1] -
                  1.24222806e-06 * tc[2] + 1.96387259e-10 * tc[3] -
                  1.33377178e-14 * tc[4] + 9.79834492e+00;
    // species 14: CH2O
    species[14] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 15: CH3O
    species[15] = +4.75779238e+00 * tc[0] + 7.44142474e-03 * tc[1] -
                  1.34852588e-06 * tc[2] + 1.46030168e-10 * tc[3] -
                  6.58842745e-15 * tc[4] - 1.96680028e+00;
    // species 16: CO
    species[16] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 17: CO2
    species[17] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 18: C2H2
    species[18] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 19: C2H3
    species[19] = +3.01672400e+00 * tc[0] + 1.03302292e-02 * tc[1] -
                  2.34041174e-06 * tc[2] + 3.39210960e-10 * tc[3] -
                  2.15651760e-14 * tc[4] + 7.78732378e+00;
    // species 20: C2H4
    species[20] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 21: C2H5
    species[21] = +1.95465642e+00 * tc[0] + 1.73972722e-02 * tc[1] -
                  3.99103334e-06 * tc[2] + 5.84058963e-10 * tc[3] -
                  3.74103940e-14 * tc[4] + 1.34624343e+01;
    // species 22: C2H6
    species[22] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 23: CH2CHO
    species[23] = +5.97566990e+00 * tc[0] + 8.13059140e-03 * tc[1] -
                  1.37181225e-06 * tc[2] + 1.35676803e-10 * tc[3] -
                  5.44004275e-15 * tc[4] - 5.03208790e+00;
    // species 24: aC3H5
    species[24] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 25: C3H6
    species[25] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 26: nC3H7
    species[26] = +7.70974790e+00 * tc[0] + 1.60314850e-02 * tc[1] -
                  2.63601190e-06 * tc[2] + 2.52961173e-10 * tc[3] -
                  9.71567975e-15 * tc[4] - 1.55152970e+01;
    // species 27: C2H3CHO
    species[27] = +5.81118680e+00 * tc[0] + 1.71142560e-02 * tc[1] -
                  3.74170805e-06 * tc[2] + 4.75074967e-10 * tc[3] -
                  2.29367102e-14 * tc[4] - 4.85880040e+00;
    // species 28: C4H7
    species[28] = +7.01348350e+00 * tc[0] + 2.26345580e-02 * tc[1] -
                  4.62727350e-06 * tc[2] + 5.60264233e-10 * tc[3] -
                  2.60215425e-14 * tc[4] - 8.88930800e+00;
    // species 29: C4H81
    species[29] = +2.05358410e+00 * tc[0] + 3.43505070e-02 * tc[1] -
                  7.94159850e-06 * tc[2] + 1.10298873e-09 * tc[3] -
                  6.34026125e-14 * tc[4] + 1.55432010e+01;
    // species 30: pC4H9
    species[30] = +8.68223950e+00 * tc[0] + 2.36910710e-02 * tc[1] -
                  3.79744325e-06 * tc[2] + 2.21423787e-10 * tc[3] +
                  1.37112840e-14 * tc[4] - 1.78917470e+01;
    // species 31: C5H9
    species[31] = +1.01386400e+01 * tc[0] + 2.27141380e-02 * tc[1] -
                  3.89552315e-06 * tc[2] + 3.95884067e-10 * tc[3] -
                  1.64831120e-14 * tc[4] - 3.31258850e+01;
    // species 48: C12H25O2
    species[48] = +2.84782000e+01 * tc[0] + 5.37539000e-02 * tc[1] -
                  8.40930000e-06 * tc[2] + 8.37890000e-10 * tc[3] -
                  3.68020000e-14 * tc[4] - 1.09121000e+02;
    // species 49: C12OOH
    species[49] = +2.92019000e+01 * tc[0] + 5.15917000e-02 * tc[1] -
                  7.86635000e-06 * tc[2] + 7.67686667e-10 * tc[3] -
                  3.31600000e-14 * tc[4] - 1.08855000e+02;
    // species 50: O2C12H24OOH
    species[50] = +3.50907000e+01 * tc[0] + 5.10590000e-02 * tc[1] -
                  7.71725000e-06 * tc[2] + 7.48756667e-10 * tc[3] -
                  3.22252500e-14 * tc[4] - 1.37750000e+02;
    // species 51: OC12H23OOH
    species[51] = +2.36731000e+01 * tc[0] + 6.16392000e-02 * tc[1] -
                  1.04918000e-05 * tc[2] + 1.11055333e-09 * tc[3] -
                  5.08975000e-14 * tc[4] - 7.77662000e+01;
    // species 52: N2
    species[52] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                  2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = -1.06223481e+00 * tc[0] + 5.74218294e-02 * tc[1] -
                  1.87243445e-05 * tc[2] + 4.24549963e-09 * tc[3] -
                  4.49024472e-13 * tc[4] + 3.22739790e+01;
    // species 34: C6H12
    species[34] = -1.35275205e+00 * tc[0] + 6.98655426e-02 * tc[1] -
                  2.29704011e-05 * tc[2] + 5.23224477e-09 * tc[3] -
                  5.53240438e-13 * tc[4] + 3.53120691e+01;
    // species 36: C7H14
    species[36] = -1.67720549e+00 * tc[0] + 8.24611601e-02 * tc[1] -
                  2.73252054e-05 * tc[2] + 6.26207677e-09 * tc[3] -
                  6.64344957e-13 * tc[4] + 3.85068032e+01;
    // species 38: C8H16
    species[38] = -1.89226915e+00 * tc[0] + 9.46066357e-02 * tc[1] -
                  3.13692761e-05 * tc[2] + 7.17194363e-09 * tc[3] -
                  7.56796708e-13 * tc[4] + 4.11878981e+01;
    // species 40: C9H18
    species[40] = -2.16108263e+00 * tc[0] + 1.06958297e-01 * tc[1] -
                  3.55486622e-05 * tc[2] + 8.13236923e-09 * tc[3] -
                  8.56928867e-13 * tc[4] + 4.41245128e+01;
    // species 42: C10H20
    species[42] = -2.42901688e+00 * tc[0] + 1.19305598e-01 * tc[1] -
                  3.97244513e-05 * tc[2] + 9.09121987e-09 * tc[3] -
                  9.56795932e-13 * tc[4] + 4.70571383e+01;
  } else {
    // species 32: C5H10
    species[32] = +1.45851539e+01 * tc[0] + 2.24072471e-02 * tc[1] -
                  3.81674012e-06 * tc[2] + 3.93963220e-10 * tc[3] -
                  1.71096285e-14 * tc[4] - 5.23683936e+01;
    // species 34: C6H12
    species[34] = +1.78337529e+01 * tc[0] + 2.67377658e-02 * tc[1] -
                  4.55018387e-06 * tc[2] + 4.69399227e-10 * tc[3] -
                  2.03781061e-14 * tc[4] - 6.83818851e+01;
    // species 36: C7H14
    species[36] = +2.10898039e+01 * tc[0] + 3.10607878e-02 * tc[1] -
                  5.28223965e-06 * tc[2] + 5.44685933e-10 * tc[3] -
                  2.36399555e-14 * tc[4] - 8.44391108e+01;
    // species 38: C8H16
    species[38] = +2.43540125e+01 * tc[0] + 3.53666462e-02 * tc[1] -
                  6.01041940e-06 * tc[2] + 6.19516843e-10 * tc[3] -
                  2.68805655e-14 * tc[4] - 1.00537716e+02;
    // species 40: C9H18
    species[40] = +2.76142176e+01 * tc[0] + 3.96825287e-02 * tc[1] -
                  6.74097230e-06 * tc[2] + 6.94634840e-10 * tc[3] -
                  3.01348235e-14 * tc[4] - 1.16618623e+02;
    // species 42: C10H20
    species[42] = +3.08753903e+01 * tc[0] + 4.39971526e-02 * tc[1] -
                  7.47127650e-06 * tc[2] + 7.69725593e-10 * tc[3] -
                  3.33878693e-14 * tc[4] - 1.32705172e+02;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +5.24384081e-02 * tc[0] + 5.60796958e-02 * tc[1] -
                  1.65772902e-05 * tc[2] + 3.25844594e-09 * tc[3] -
                  2.85024150e-13 * tc[4] + 2.87238666e+01;
    // species 35: PXC6H13
    species[35] = -2.04871465e-01 * tc[0] + 6.83801272e-02 * tc[1] -
                  2.07223956e-05 * tc[2] + 4.20519340e-09 * tc[3] -
                  3.82800145e-13 * tc[4] + 3.16075093e+01;
    // species 37: PXC7H15
    species[37] = -4.99570406e-01 * tc[0] + 8.08826467e-02 * tc[1] -
                  2.50266377e-05 * tc[2] + 5.21831027e-09 * tc[3] -
                  4.91540568e-13 * tc[4] + 3.46564011e+01;
    // species 39: PXC8H17
    species[39] = -7.72759438e-01 * tc[0] + 9.32549705e-02 * tc[1] -
                  2.92223622e-05 * tc[2] + 6.18567380e-09 * tc[3] -
                  5.92818708e-13 * tc[4] + 3.76130631e+01;
    // species 41: PXC9H19
    species[41] = -1.04387292e+00 * tc[0] + 1.05617283e-01 * tc[1] -
                  3.34099986e-05 * tc[2] + 7.14953887e-09 * tc[3] -
                  6.93510688e-13 * tc[4] + 4.23518992e+01;
    // species 43: PXC10H21
    species[43] = -1.31358348e+00 * tc[0] + 1.17972813e-01 * tc[1] -
                  3.75921540e-05 * tc[2] + 8.11103687e-09 * tc[3] -
                  7.93807130e-13 * tc[4] + 4.35010452e+01;
    // species 44: PXC12H25
    species[44] = -1.85028741e+00 * tc[0] + 1.42670708e-01 * tc[1] -
                  4.59458278e-05 * tc[2] + 1.00294464e-08 * tc[3] -
                  9.93635750e-13 * tc[4] + 4.93702421e+01;
  } else {
    // species 33: PXC5H11
    species[33] = +1.52977446e+01 * tc[0] + 2.39735310e-02 * tc[1] -
                  4.09196474e-06 * tc[2] + 4.22943587e-10 * tc[3] -
                  1.83852264e-14 * tc[4] - 5.44829293e+01;
    // species 35: PXC6H13
    species[35] = +1.85385470e+01 * tc[0] + 2.83107962e-02 * tc[1] -
                  4.82653623e-06 * tc[2] + 4.98491950e-10 * tc[3] -
                  2.16584016e-14 * tc[4] - 7.04490943e+01;
    // species 37: PXC7H15
    species[37] = +2.17940709e+01 * tc[0] + 3.26280243e-02 * tc[1] -
                  5.55691220e-06 * tc[2] + 5.73557160e-10 * tc[3] -
                  2.49091750e-14 * tc[4] - 8.64954311e+01;
    // species 39: PXC8H17
    species[39] = +2.50510356e+01 * tc[0] + 3.69480162e-02 * tc[1] -
                  6.28826320e-06 * tc[2] + 6.48761363e-10 * tc[3] -
                  2.81672245e-14 * tc[4] - 1.02557384e+02;
    // species 41: PXC9H19
    species[41] = +2.83097514e+01 * tc[0] + 4.12657344e-02 * tc[1] -
                  7.01916445e-06 * tc[2] + 7.23916237e-10 * tc[3] -
                  3.14230767e-14 * tc[4] - 1.16837897e+02;
    // species 43: PXC10H21
    species[43] = +3.15697160e+01 * tc[0] + 4.55818403e-02 * tc[1] -
                  7.74974825e-06 * tc[2] + 7.99036443e-10 * tc[3] -
                  3.46773898e-14 * tc[4] - 1.34708986e+02;
    // species 44: PXC12H25
    species[44] = +3.80921885e+01 * tc[0] + 5.42107848e-02 * tc[1] -
                  9.21027585e-06 * tc[2] + 9.49207243e-10 * tc[3] -
                  4.11829370e-14 * tc[4] - 1.66882734e+02;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = -1.36787089e+00 * tc[0] + 1.37355348e-01 * tc[1] -
                  4.12038079e-05 * tc[2] + 7.88071873e-09 * tc[3] -
                  6.18589830e-13 * tc[4] + 4.83521895e+01;
    // species 46: S3XC12H25
    species[46] = -1.36787089e+00 * tc[0] + 1.37355348e-01 * tc[1] -
                  4.12038079e-05 * tc[2] + 7.88071873e-09 * tc[3] -
                  6.18589830e-13 * tc[4] + 4.83521895e+01;
  } else {
    // species 45: SXC12H25
    species[45] = +3.79688268e+01 * tc[0] + 5.38719464e-02 * tc[1] -
                  9.10856315e-06 * tc[2] + 9.35915010e-10 * tc[3] -
                  4.05271050e-14 * tc[4] - 1.65805933e+02;
    // species 46: S3XC12H25
    species[46] = +3.79688268e+01 * tc[0] + 5.38719464e-02 * tc[1] -
                  9.10856315e-06 * tc[2] + 9.35915010e-10 * tc[3] -
                  4.05271050e-14 * tc[4] - 1.65805933e+02;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[53];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 53; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result +=
      y[0] *
      (-2.62181594e+00 + 1.47237711e-01 * tc[1] - 9.43970271e-05 * tc[2] +
       3.07441268e-08 * tc[3] - 4.03602230e-12 * tc[4]) *
      0.0058706117177410;
    // species 47: C12H24
    result +=
      y[47] *
      (-2.96342681e+00 + 1.43992360e-01 * tc[1] - 9.61384015e-05 * tc[2] +
       3.30174473e-08 * tc[3] - 4.62398190e-12 * tc[4]) *
      0.0059409234571422;
  } else {
    // species 0: NC12H26
    result +=
      y[0] *
      (+3.85095037e+01 + 5.63550048e-02 * tc[1] - 1.91493200e-05 * tc[2] +
       2.96024862e-09 * tc[3] - 1.71244150e-13 * tc[4]) *
      0.0058706117177410;
    // species 47: C12H24
    result +=
      y[47] *
      (+3.74002111e+01 + 5.26230753e-02 * tc[1] - 1.78624319e-05 * tc[2] +
       2.75949863e-09 * tc[3] - 1.59562499e-13 * tc[4]) *
      0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result +=
      y[1] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+4.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: CH2
    result +=
      y[9] *
      (+3.76267867e+00 + 9.68872143e-04 * tc[1] + 2.79489841e-06 * tc[2] -
       3.85091153e-09 * tc[3] + 1.68741719e-12 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2*
    result +=
      y[10] *
      (+4.19860411e+00 - 2.36661419e-03 * tc[1] + 8.23296220e-06 * tc[2] -
       6.68815981e-09 * tc[3] + 1.94314737e-12 * tc[4]) *
      0.0712910814857061;
    // species 11: CH3
    result +=
      y[11] *
      (+3.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 12: CH4
    result +=
      y[12] *
      (+5.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 13: HCO
    result +=
      y[13] *
      (+4.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 14: CH2O
    result +=
      y[14] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 15: CH3O
    result +=
      y[15] *
      (+3.71180502e+00 - 2.80463306e-03 * tc[1] + 3.76550971e-05 * tc[2] -
       4.73072089e-08 * tc[3] + 1.86588420e-11 * tc[4]) *
      0.0322227234645872;
    // species 16: CO
    result +=
      y[16] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+3.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+4.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 23: CH2CHO
    result +=
      y[23] *
      (+3.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 24: aC3H5
    result +=
      y[24] *
      (+1.36318350e+00 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 25: C3H6
    result +=
      y[25] *
      (+1.49330700e+00 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 26: nC3H7
    result +=
      y[26] *
      (+1.04911730e+00 + 2.60089730e-02 * tc[1] + 2.35425160e-06 * tc[2] -
       1.95951320e-08 * tc[3] + 9.37202070e-12 * tc[4]) *
      0.0232077792476038;
    // species 27: C2H3CHO
    result +=
      y[27] *
      (+1.27134980e+00 + 2.62310540e-02 * tc[1] - 9.29123050e-06 * tc[2] -
       4.78372720e-09 * tc[3] + 3.34805430e-12 * tc[4]) *
      0.0178367579908676;
    // species 28: C4H7
    result +=
      y[28] *
      (+7.44494320e-01 + 3.96788570e-02 * tc[1] - 2.28980860e-05 * tc[2] +
       2.13529730e-09 * tc[3] + 2.30963750e-12 * tc[4]) *
      0.0181488203266788;
    // species 29: C4H81
    result +=
      y[29] *
      (+1.18113800e+00 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 30: pC4H9
    result +=
      y[30] *
      (+1.20870420e+00 + 3.82974970e-02 * tc[1] - 7.26605090e-06 * tc[2] -
       1.54285470e-08 * tc[3] + 8.68594350e-12 * tc[4]) *
      0.0175082288675678;
    // species 31: C5H9
    result +=
      y[31] *
      (-2.41901110e+00 + 4.04303890e-02 * tc[1] + 6.78023390e-06 * tc[2] -
       3.37247420e-08 * tc[3] + 1.51167130e-11 * tc[4]) *
      0.0144661275623128;
    // species 48: C12H25O2
    result +=
      y[48] *
      (+5.31404000e+00 + 8.93873000e-02 * tc[1] + 1.45351000e-05 * tc[2] -
       7.49250000e-08 * tc[3] + 3.35325000e-11 * tc[4]) *
      0.0049669696518154;
    // species 49: C12OOH
    result +=
      y[49] *
      (+5.15231000e+00 + 9.97913000e-02 * tc[1] - 1.80635000e-05 * tc[2] -
       4.18435000e-08 * tc[3] + 2.22786000e-11 * tc[4]) *
      0.0049669696518154;
    // species 50: O2C12H24OOH
    result +=
      y[50] *
      (+4.81972000e-01 + 1.45020000e-01 * tc[1] - 9.99308000e-05 * tc[2] +
       2.60422000e-08 * tc[3] + 1.19358000e-12 * tc[4]) *
      0.0042858122471371;
    // species 51: OC12H23OOH
    result +=
      y[51] *
      (+8.80733000e+00 + 6.50623000e-02 * tc[1] + 6.95058000e-05 * tc[2] -
       1.26905000e-07 * tc[3] + 5.10991000e-11 * tc[4]) *
      0.0046227596950828;
    // species 52: N2
    result +=
      y[52] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 1: H
    result +=
      y[1] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+2.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: CH2
    result +=
      y[9] *
      (+2.87410113e+00 + 3.65639292e-03 * tc[1] - 1.40894597e-06 * tc[2] +
       2.60179549e-10 * tc[3] - 1.87727567e-14 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2*
    result +=
      y[10] *
      (+2.29203842e+00 + 4.65588637e-03 * tc[1] - 2.01191947e-06 * tc[2] +
       4.17906000e-10 * tc[3] - 3.39716365e-14 * tc[4]) *
      0.0712910814857061;
    // species 11: CH3
    result +=
      y[11] *
      (+2.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 12: CH4
    result +=
      y[12] *
      (+7.48514950e-02 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 13: HCO
    result +=
      y[13] *
      (+2.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 14: CH2O
    result +=
      y[14] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 15: CH3O
    result +=
      y[15] *
      (+4.75779238e+00 + 7.44142474e-03 * tc[1] - 2.69705176e-06 * tc[2] +
       4.38090504e-10 * tc[3] - 2.63537098e-14 * tc[4]) *
      0.0322227234645872;
    // species 16: CO
    result +=
      y[16] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+3.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+1.95465642e+00 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 23: CH2CHO
    result +=
      y[23] *
      (+5.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 24: aC3H5
    result +=
      y[24] *
      (+6.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 25: C3H6
    result +=
      y[25] *
      (+6.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 26: nC3H7
    result +=
      y[26] *
      (+7.70974790e+00 + 1.60314850e-02 * tc[1] - 5.27202380e-06 * tc[2] +
       7.58883520e-10 * tc[3] - 3.88627190e-14 * tc[4]) *
      0.0232077792476038;
    // species 27: C2H3CHO
    result +=
      y[27] *
      (+5.81118680e+00 + 1.71142560e-02 * tc[1] - 7.48341610e-06 * tc[2] +
       1.42522490e-09 * tc[3] - 9.17468410e-14 * tc[4]) *
      0.0178367579908676;
    // species 28: C4H7
    result +=
      y[28] *
      (+7.01348350e+00 + 2.26345580e-02 * tc[1] - 9.25454700e-06 * tc[2] +
       1.68079270e-09 * tc[3] - 1.04086170e-13 * tc[4]) *
      0.0181488203266788;
    // species 29: C4H81
    result +=
      y[29] *
      (+2.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 30: pC4H9
    result +=
      y[30] *
      (+8.68223950e+00 + 2.36910710e-02 * tc[1] - 7.59488650e-06 * tc[2] +
       6.64271360e-10 * tc[3] + 5.48451360e-14 * tc[4]) *
      0.0175082288675678;
    // species 31: C5H9
    result +=
      y[31] *
      (+1.01386400e+01 + 2.27141380e-02 * tc[1] - 7.79104630e-06 * tc[2] +
       1.18765220e-09 * tc[3] - 6.59324480e-14 * tc[4]) *
      0.0144661275623128;
    // species 48: C12H25O2
    result +=
      y[48] *
      (+2.84782000e+01 + 5.37539000e-02 * tc[1] - 1.68186000e-05 * tc[2] +
       2.51367000e-09 * tc[3] - 1.47208000e-13 * tc[4]) *
      0.0049669696518154;
    // species 49: C12OOH
    result +=
      y[49] *
      (+2.92019000e+01 + 5.15917000e-02 * tc[1] - 1.57327000e-05 * tc[2] +
       2.30306000e-09 * tc[3] - 1.32640000e-13 * tc[4]) *
      0.0049669696518154;
    // species 50: O2C12H24OOH
    result +=
      y[50] *
      (+3.50907000e+01 + 5.10590000e-02 * tc[1] - 1.54345000e-05 * tc[2] +
       2.24627000e-09 * tc[3] - 1.28901000e-13 * tc[4]) *
      0.0042858122471371;
    // species 51: OC12H23OOH
    result +=
      y[51] *
      (+2.36731000e+01 + 6.16392000e-02 * tc[1] - 2.09836000e-05 * tc[2] +
       3.33166000e-09 * tc[3] - 2.03590000e-13 * tc[4]) *
      0.0046227596950828;
    // species 52: N2
    result +=
      y[52] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 32: C5H10
    result +=
      y[32] *
      (-1.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 34: C6H12
    result +=
      y[34] *
      (-1.35275205e+00 + 6.98655426e-02 * tc[1] - 4.59408022e-05 * tc[2] +
       1.56967343e-08 * tc[3] - 2.21296175e-12 * tc[4]) *
      0.0118818469142844;
    // species 36: C7H14
    result +=
      y[36] *
      (-1.67720549e+00 + 8.24611601e-02 * tc[1] - 5.46504108e-05 * tc[2] +
       1.87862303e-08 * tc[3] - 2.65737983e-12 * tc[4]) *
      0.0101844402122437;
    // species 38: C8H16
    result +=
      y[38] *
      (-1.89226915e+00 + 9.46066357e-02 * tc[1] - 6.27385521e-05 * tc[2] +
       2.15158309e-08 * tc[3] - 3.02718683e-12 * tc[4]) *
      0.0089113851857133;
    // species 40: C9H18
    result +=
      y[40] *
      (-2.16108263e+00 + 1.06958297e-01 * tc[1] - 7.10973244e-05 * tc[2] +
       2.43971077e-08 * tc[3] - 3.42771547e-12 * tc[4]) *
      0.0079212312761896;
    // species 42: C10H20
    result +=
      y[42] *
      (-2.42901688e+00 + 1.19305598e-01 * tc[1] - 7.94489025e-05 * tc[2] +
       2.72736596e-08 * tc[3] - 3.82718373e-12 * tc[4]) *
      0.0071291081485706;
  } else {
    // species 32: C5H10
    result +=
      y[32] *
      (+1.45851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
    // species 34: C6H12
    result +=
      y[34] *
      (+1.78337529e+01 + 2.67377658e-02 * tc[1] - 9.10036773e-06 * tc[2] +
       1.40819768e-09 * tc[3] - 8.15124244e-14 * tc[4]) *
      0.0118818469142844;
    // species 36: C7H14
    result +=
      y[36] *
      (+2.10898039e+01 + 3.10607878e-02 * tc[1] - 1.05644793e-05 * tc[2] +
       1.63405780e-09 * tc[3] - 9.45598219e-14 * tc[4]) *
      0.0101844402122437;
    // species 38: C8H16
    result +=
      y[38] *
      (+2.43540125e+01 + 3.53666462e-02 * tc[1] - 1.20208388e-05 * tc[2] +
       1.85855053e-09 * tc[3] - 1.07522262e-13 * tc[4]) *
      0.0089113851857133;
    // species 40: C9H18
    result +=
      y[40] *
      (+2.76142176e+01 + 3.96825287e-02 * tc[1] - 1.34819446e-05 * tc[2] +
       2.08390452e-09 * tc[3] - 1.20539294e-13 * tc[4]) *
      0.0079212312761896;
    // species 42: C10H20
    result +=
      y[42] *
      (+3.08753903e+01 + 4.39971526e-02 * tc[1] - 1.49425530e-05 * tc[2] +
       2.30917678e-09 * tc[3] - 1.33551477e-13 * tc[4]) *
      0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 33: PXC5H11
    result +=
      y[33] *
      (+5.24384081e-02 + 5.60796958e-02 * tc[1] - 3.31545803e-05 * tc[2] +
       9.77533781e-09 * tc[3] - 1.14009660e-12 * tc[4]) *
      0.0140561966743039;
    // species 35: PXC6H13
    result +=
      y[35] *
      (-2.04871465e-01 + 6.83801272e-02 * tc[1] - 4.14447912e-05 * tc[2] +
       1.26155802e-08 * tc[3] - 1.53120058e-12 * tc[4]) *
      0.0117412234354820;
    // species 37: PXC7H15
    result +=
      y[37] *
      (-4.99570406e-01 + 8.08826467e-02 * tc[1] - 5.00532754e-05 * tc[2] +
       1.56549308e-08 * tc[3] - 1.96616227e-12 * tc[4]) *
      0.0100809500287307;
    // species 39: PXC8H17
    result +=
      y[39] *
      (-7.72759438e-01 + 9.32549705e-02 * tc[1] - 5.84447245e-05 * tc[2] +
       1.85570214e-08 * tc[3] - 2.37127483e-12 * tc[4]) *
      0.0088320497421041;
    // species 41: PXC9H19
    result +=
      y[41] *
      (-1.04387292e+00 + 1.05617283e-01 * tc[1] - 6.68199971e-05 * tc[2] +
       2.14486166e-08 * tc[3] - 2.77404275e-12 * tc[4]) *
      0.0078584844126962;
    // species 43: PXC10H21
    result +=
      y[43] *
      (-1.31358348e+00 + 1.17972813e-01 * tc[1] - 7.51843079e-05 * tc[2] +
       2.43331106e-08 * tc[3] - 3.17522852e-12 * tc[4]) *
      0.0070782428969833;
    // species 44: PXC12H25
    result +=
      y[44] *
      (-1.85028741e+00 + 1.42670708e-01 * tc[1] - 9.18916555e-05 * tc[2] +
       3.00883392e-08 * tc[3] - 3.97454300e-12 * tc[4]) *
      0.0059055583114828;
  } else {
    // species 33: PXC5H11
    result +=
      y[33] *
      (+1.52977446e+01 + 2.39735310e-02 * tc[1] - 8.18392948e-06 * tc[2] +
       1.26883076e-09 * tc[3] - 7.35409055e-14 * tc[4]) *
      0.0140561966743039;
    // species 35: PXC6H13
    result +=
      y[35] *
      (+1.85385470e+01 + 2.83107962e-02 * tc[1] - 9.65307246e-06 * tc[2] +
       1.49547585e-09 * tc[3] - 8.66336064e-14 * tc[4]) *
      0.0117412234354820;
    // species 37: PXC7H15
    result +=
      y[37] *
      (+2.17940709e+01 + 3.26280243e-02 * tc[1] - 1.11138244e-05 * tc[2] +
       1.72067148e-09 * tc[3] - 9.96366999e-14 * tc[4]) *
      0.0100809500287307;
    // species 39: PXC8H17
    result +=
      y[39] *
      (+2.50510356e+01 + 3.69480162e-02 * tc[1] - 1.25765264e-05 * tc[2] +
       1.94628409e-09 * tc[3] - 1.12668898e-13 * tc[4]) *
      0.0088320497421041;
    // species 41: PXC9H19
    result +=
      y[41] *
      (+2.83097514e+01 + 4.12657344e-02 * tc[1] - 1.40383289e-05 * tc[2] +
       2.17174871e-09 * tc[3] - 1.25692307e-13 * tc[4]) *
      0.0078584844126962;
    // species 43: PXC10H21
    result +=
      y[43] *
      (+3.15697160e+01 + 4.55818403e-02 * tc[1] - 1.54994965e-05 * tc[2] +
       2.39710933e-09 * tc[3] - 1.38709559e-13 * tc[4]) *
      0.0070782428969833;
    // species 44: PXC12H25
    result +=
      y[44] *
      (+3.80921885e+01 + 5.42107848e-02 * tc[1] - 1.84205517e-05 * tc[2] +
       2.84762173e-09 * tc[3] - 1.64731748e-13 * tc[4]) *
      0.0059055583114828;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 45: SXC12H25
    result +=
      y[45] *
      (-1.36787089e+00 + 1.37355348e-01 * tc[1] - 8.24076158e-05 * tc[2] +
       2.36421562e-08 * tc[3] - 2.47435932e-12 * tc[4]) *
      0.0059055583114828;
    // species 46: S3XC12H25
    result +=
      y[46] *
      (-1.36787089e+00 + 1.37355348e-01 * tc[1] - 8.24076158e-05 * tc[2] +
       2.36421562e-08 * tc[3] - 2.47435932e-12 * tc[4]) *
      0.0059055583114828;
  } else {
    // species 45: SXC12H25
    result +=
      y[45] *
      (+3.79688268e+01 + 5.38719464e-02 * tc[1] - 1.82171263e-05 * tc[2] +
       2.80774503e-09 * tc[3] - 1.62108420e-13 * tc[4]) *
      0.0059055583114828;
    // species 46: S3XC12H25
    result +=
      y[46] *
      (+3.79688268e+01 + 5.38719464e-02 * tc[1] - 1.82171263e-05 * tc[2] +
       2.80774503e-09 * tc[3] - 1.62108420e-13 * tc[4]) *
      0.0059055583114828;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[53];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 53; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result +=
      y[0] *
      (-3.62181594e+00 + 1.47237711e-01 * tc[1] - 9.43970271e-05 * tc[2] +
       3.07441268e-08 * tc[3] - 4.03602230e-12 * tc[4]) *
      0.0058706117177410;
    // species 47: C12H24
    result +=
      y[47] *
      (-3.96342681e+00 + 1.43992360e-01 * tc[1] - 9.61384015e-05 * tc[2] +
       3.30174473e-08 * tc[3] - 4.62398190e-12 * tc[4]) *
      0.0059409234571422;
  } else {
    // species 0: NC12H26
    result +=
      y[0] *
      (+3.75095037e+01 + 5.63550048e-02 * tc[1] - 1.91493200e-05 * tc[2] +
       2.96024862e-09 * tc[3] - 1.71244150e-13 * tc[4]) *
      0.0058706117177410;
    // species 47: C12H24
    result +=
      y[47] *
      (+3.64002111e+01 + 5.26230753e-02 * tc[1] - 1.78624319e-05 * tc[2] +
       2.75949863e-09 * tc[3] - 1.59562499e-13 * tc[4]) *
      0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result +=
      y[1] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+3.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: CH2
    result +=
      y[9] *
      (+2.76267867e+00 + 9.68872143e-04 * tc[1] + 2.79489841e-06 * tc[2] -
       3.85091153e-09 * tc[3] + 1.68741719e-12 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2*
    result +=
      y[10] *
      (+3.19860411e+00 - 2.36661419e-03 * tc[1] + 8.23296220e-06 * tc[2] -
       6.68815981e-09 * tc[3] + 1.94314737e-12 * tc[4]) *
      0.0712910814857061;
    // species 11: CH3
    result +=
      y[11] *
      (+2.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 12: CH4
    result +=
      y[12] *
      (+4.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 13: HCO
    result +=
      y[13] *
      (+3.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 14: CH2O
    result +=
      y[14] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 15: CH3O
    result +=
      y[15] *
      (+2.71180502e+00 - 2.80463306e-03 * tc[1] + 3.76550971e-05 * tc[2] -
       4.73072089e-08 * tc[3] + 1.86588420e-11 * tc[4]) *
      0.0322227234645872;
    // species 16: CO
    result +=
      y[16] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+2.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+3.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 23: CH2CHO
    result +=
      y[23] *
      (+2.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 24: aC3H5
    result +=
      y[24] *
      (+3.63183500e-01 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 25: C3H6
    result +=
      y[25] *
      (+4.93307000e-01 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 26: nC3H7
    result +=
      y[26] *
      (+4.91173000e-02 + 2.60089730e-02 * tc[1] + 2.35425160e-06 * tc[2] -
       1.95951320e-08 * tc[3] + 9.37202070e-12 * tc[4]) *
      0.0232077792476038;
    // species 27: C2H3CHO
    result +=
      y[27] *
      (+2.71349800e-01 + 2.62310540e-02 * tc[1] - 9.29123050e-06 * tc[2] -
       4.78372720e-09 * tc[3] + 3.34805430e-12 * tc[4]) *
      0.0178367579908676;
    // species 28: C4H7
    result +=
      y[28] *
      (-2.55505680e-01 + 3.96788570e-02 * tc[1] - 2.28980860e-05 * tc[2] +
       2.13529730e-09 * tc[3] + 2.30963750e-12 * tc[4]) *
      0.0181488203266788;
    // species 29: C4H81
    result +=
      y[29] *
      (+1.81138000e-01 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 30: pC4H9
    result +=
      y[30] *
      (+2.08704200e-01 + 3.82974970e-02 * tc[1] - 7.26605090e-06 * tc[2] -
       1.54285470e-08 * tc[3] + 8.68594350e-12 * tc[4]) *
      0.0175082288675678;
    // species 31: C5H9
    result +=
      y[31] *
      (-3.41901110e+00 + 4.04303890e-02 * tc[1] + 6.78023390e-06 * tc[2] -
       3.37247420e-08 * tc[3] + 1.51167130e-11 * tc[4]) *
      0.0144661275623128;
    // species 48: C12H25O2
    result +=
      y[48] *
      (+4.31404000e+00 + 8.93873000e-02 * tc[1] + 1.45351000e-05 * tc[2] -
       7.49250000e-08 * tc[3] + 3.35325000e-11 * tc[4]) *
      0.0049669696518154;
    // species 49: C12OOH
    result +=
      y[49] *
      (+4.15231000e+00 + 9.97913000e-02 * tc[1] - 1.80635000e-05 * tc[2] -
       4.18435000e-08 * tc[3] + 2.22786000e-11 * tc[4]) *
      0.0049669696518154;
    // species 50: O2C12H24OOH
    result +=
      y[50] *
      (-5.18028000e-01 + 1.45020000e-01 * tc[1] - 9.99308000e-05 * tc[2] +
       2.60422000e-08 * tc[3] + 1.19358000e-12 * tc[4]) *
      0.0042858122471371;
    // species 51: OC12H23OOH
    result +=
      y[51] *
      (+7.80733000e+00 + 6.50623000e-02 * tc[1] + 6.95058000e-05 * tc[2] -
       1.26905000e-07 * tc[3] + 5.10991000e-11 * tc[4]) *
      0.0046227596950828;
    // species 52: N2
    result +=
      y[52] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 1: H
    result +=
      y[1] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+1.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: CH2
    result +=
      y[9] *
      (+1.87410113e+00 + 3.65639292e-03 * tc[1] - 1.40894597e-06 * tc[2] +
       2.60179549e-10 * tc[3] - 1.87727567e-14 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2*
    result +=
      y[10] *
      (+1.29203842e+00 + 4.65588637e-03 * tc[1] - 2.01191947e-06 * tc[2] +
       4.17906000e-10 * tc[3] - 3.39716365e-14 * tc[4]) *
      0.0712910814857061;
    // species 11: CH3
    result +=
      y[11] *
      (+1.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 12: CH4
    result +=
      y[12] *
      (-9.25148505e-01 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 13: HCO
    result +=
      y[13] *
      (+1.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 14: CH2O
    result +=
      y[14] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 15: CH3O
    result +=
      y[15] *
      (+3.75779238e+00 + 7.44142474e-03 * tc[1] - 2.69705176e-06 * tc[2] +
       4.38090504e-10 * tc[3] - 2.63537098e-14 * tc[4]) *
      0.0322227234645872;
    // species 16: CO
    result +=
      y[16] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+2.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+9.54656420e-01 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 23: CH2CHO
    result +=
      y[23] *
      (+4.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 24: aC3H5
    result +=
      y[24] *
      (+5.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 25: C3H6
    result +=
      y[25] *
      (+5.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 26: nC3H7
    result +=
      y[26] *
      (+6.70974790e+00 + 1.60314850e-02 * tc[1] - 5.27202380e-06 * tc[2] +
       7.58883520e-10 * tc[3] - 3.88627190e-14 * tc[4]) *
      0.0232077792476038;
    // species 27: C2H3CHO
    result +=
      y[27] *
      (+4.81118680e+00 + 1.71142560e-02 * tc[1] - 7.48341610e-06 * tc[2] +
       1.42522490e-09 * tc[3] - 9.17468410e-14 * tc[4]) *
      0.0178367579908676;
    // species 28: C4H7
    result +=
      y[28] *
      (+6.01348350e+00 + 2.26345580e-02 * tc[1] - 9.25454700e-06 * tc[2] +
       1.68079270e-09 * tc[3] - 1.04086170e-13 * tc[4]) *
      0.0181488203266788;
    // species 29: C4H81
    result +=
      y[29] *
      (+1.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 30: pC4H9
    result +=
      y[30] *
      (+7.68223950e+00 + 2.36910710e-02 * tc[1] - 7.59488650e-06 * tc[2] +
       6.64271360e-10 * tc[3] + 5.48451360e-14 * tc[4]) *
      0.0175082288675678;
    // species 31: C5H9
    result +=
      y[31] *
      (+9.13864000e+00 + 2.27141380e-02 * tc[1] - 7.79104630e-06 * tc[2] +
       1.18765220e-09 * tc[3] - 6.59324480e-14 * tc[4]) *
      0.0144661275623128;
    // species 48: C12H25O2
    result +=
      y[48] *
      (+2.74782000e+01 + 5.37539000e-02 * tc[1] - 1.68186000e-05 * tc[2] +
       2.51367000e-09 * tc[3] - 1.47208000e-13 * tc[4]) *
      0.0049669696518154;
    // species 49: C12OOH
    result +=
      y[49] *
      (+2.82019000e+01 + 5.15917000e-02 * tc[1] - 1.57327000e-05 * tc[2] +
       2.30306000e-09 * tc[3] - 1.32640000e-13 * tc[4]) *
      0.0049669696518154;
    // species 50: O2C12H24OOH
    result +=
      y[50] *
      (+3.40907000e+01 + 5.10590000e-02 * tc[1] - 1.54345000e-05 * tc[2] +
       2.24627000e-09 * tc[3] - 1.28901000e-13 * tc[4]) *
      0.0042858122471371;
    // species 51: OC12H23OOH
    result +=
      y[51] *
      (+2.26731000e+01 + 6.16392000e-02 * tc[1] - 2.09836000e-05 * tc[2] +
       3.33166000e-09 * tc[3] - 2.03590000e-13 * tc[4]) *
      0.0046227596950828;
    // species 52: N2
    result +=
      y[52] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 32: C5H10
    result +=
      y[32] *
      (-2.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 34: C6H12
    result +=
      y[34] *
      (-2.35275205e+00 + 6.98655426e-02 * tc[1] - 4.59408022e-05 * tc[2] +
       1.56967343e-08 * tc[3] - 2.21296175e-12 * tc[4]) *
      0.0118818469142844;
    // species 36: C7H14
    result +=
      y[36] *
      (-2.67720549e+00 + 8.24611601e-02 * tc[1] - 5.46504108e-05 * tc[2] +
       1.87862303e-08 * tc[3] - 2.65737983e-12 * tc[4]) *
      0.0101844402122437;
    // species 38: C8H16
    result +=
      y[38] *
      (-2.89226915e+00 + 9.46066357e-02 * tc[1] - 6.27385521e-05 * tc[2] +
       2.15158309e-08 * tc[3] - 3.02718683e-12 * tc[4]) *
      0.0089113851857133;
    // species 40: C9H18
    result +=
      y[40] *
      (-3.16108263e+00 + 1.06958297e-01 * tc[1] - 7.10973244e-05 * tc[2] +
       2.43971077e-08 * tc[3] - 3.42771547e-12 * tc[4]) *
      0.0079212312761896;
    // species 42: C10H20
    result +=
      y[42] *
      (-3.42901688e+00 + 1.19305598e-01 * tc[1] - 7.94489025e-05 * tc[2] +
       2.72736596e-08 * tc[3] - 3.82718373e-12 * tc[4]) *
      0.0071291081485706;
  } else {
    // species 32: C5H10
    result +=
      y[32] *
      (+1.35851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
    // species 34: C6H12
    result +=
      y[34] *
      (+1.68337529e+01 + 2.67377658e-02 * tc[1] - 9.10036773e-06 * tc[2] +
       1.40819768e-09 * tc[3] - 8.15124244e-14 * tc[4]) *
      0.0118818469142844;
    // species 36: C7H14
    result +=
      y[36] *
      (+2.00898039e+01 + 3.10607878e-02 * tc[1] - 1.05644793e-05 * tc[2] +
       1.63405780e-09 * tc[3] - 9.45598219e-14 * tc[4]) *
      0.0101844402122437;
    // species 38: C8H16
    result +=
      y[38] *
      (+2.33540125e+01 + 3.53666462e-02 * tc[1] - 1.20208388e-05 * tc[2] +
       1.85855053e-09 * tc[3] - 1.07522262e-13 * tc[4]) *
      0.0089113851857133;
    // species 40: C9H18
    result +=
      y[40] *
      (+2.66142176e+01 + 3.96825287e-02 * tc[1] - 1.34819446e-05 * tc[2] +
       2.08390452e-09 * tc[3] - 1.20539294e-13 * tc[4]) *
      0.0079212312761896;
    // species 42: C10H20
    result +=
      y[42] *
      (+2.98753903e+01 + 4.39971526e-02 * tc[1] - 1.49425530e-05 * tc[2] +
       2.30917678e-09 * tc[3] - 1.33551477e-13 * tc[4]) *
      0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 33: PXC5H11
    result +=
      y[33] *
      (-9.47561592e-01 + 5.60796958e-02 * tc[1] - 3.31545803e-05 * tc[2] +
       9.77533781e-09 * tc[3] - 1.14009660e-12 * tc[4]) *
      0.0140561966743039;
    // species 35: PXC6H13
    result +=
      y[35] *
      (-1.20487147e+00 + 6.83801272e-02 * tc[1] - 4.14447912e-05 * tc[2] +
       1.26155802e-08 * tc[3] - 1.53120058e-12 * tc[4]) *
      0.0117412234354820;
    // species 37: PXC7H15
    result +=
      y[37] *
      (-1.49957041e+00 + 8.08826467e-02 * tc[1] - 5.00532754e-05 * tc[2] +
       1.56549308e-08 * tc[3] - 1.96616227e-12 * tc[4]) *
      0.0100809500287307;
    // species 39: PXC8H17
    result +=
      y[39] *
      (-1.77275944e+00 + 9.32549705e-02 * tc[1] - 5.84447245e-05 * tc[2] +
       1.85570214e-08 * tc[3] - 2.37127483e-12 * tc[4]) *
      0.0088320497421041;
    // species 41: PXC9H19
    result +=
      y[41] *
      (-2.04387292e+00 + 1.05617283e-01 * tc[1] - 6.68199971e-05 * tc[2] +
       2.14486166e-08 * tc[3] - 2.77404275e-12 * tc[4]) *
      0.0078584844126962;
    // species 43: PXC10H21
    result +=
      y[43] *
      (-2.31358348e+00 + 1.17972813e-01 * tc[1] - 7.51843079e-05 * tc[2] +
       2.43331106e-08 * tc[3] - 3.17522852e-12 * tc[4]) *
      0.0070782428969833;
    // species 44: PXC12H25
    result +=
      y[44] *
      (-2.85028741e+00 + 1.42670708e-01 * tc[1] - 9.18916555e-05 * tc[2] +
       3.00883392e-08 * tc[3] - 3.97454300e-12 * tc[4]) *
      0.0059055583114828;
  } else {
    // species 33: PXC5H11
    result +=
      y[33] *
      (+1.42977446e+01 + 2.39735310e-02 * tc[1] - 8.18392948e-06 * tc[2] +
       1.26883076e-09 * tc[3] - 7.35409055e-14 * tc[4]) *
      0.0140561966743039;
    // species 35: PXC6H13
    result +=
      y[35] *
      (+1.75385470e+01 + 2.83107962e-02 * tc[1] - 9.65307246e-06 * tc[2] +
       1.49547585e-09 * tc[3] - 8.66336064e-14 * tc[4]) *
      0.0117412234354820;
    // species 37: PXC7H15
    result +=
      y[37] *
      (+2.07940709e+01 + 3.26280243e-02 * tc[1] - 1.11138244e-05 * tc[2] +
       1.72067148e-09 * tc[3] - 9.96366999e-14 * tc[4]) *
      0.0100809500287307;
    // species 39: PXC8H17
    result +=
      y[39] *
      (+2.40510356e+01 + 3.69480162e-02 * tc[1] - 1.25765264e-05 * tc[2] +
       1.94628409e-09 * tc[3] - 1.12668898e-13 * tc[4]) *
      0.0088320497421041;
    // species 41: PXC9H19
    result +=
      y[41] *
      (+2.73097514e+01 + 4.12657344e-02 * tc[1] - 1.40383289e-05 * tc[2] +
       2.17174871e-09 * tc[3] - 1.25692307e-13 * tc[4]) *
      0.0078584844126962;
    // species 43: PXC10H21
    result +=
      y[43] *
      (+3.05697160e+01 + 4.55818403e-02 * tc[1] - 1.54994965e-05 * tc[2] +
       2.39710933e-09 * tc[3] - 1.38709559e-13 * tc[4]) *
      0.0070782428969833;
    // species 44: PXC12H25
    result +=
      y[44] *
      (+3.70921885e+01 + 5.42107848e-02 * tc[1] - 1.84205517e-05 * tc[2] +
       2.84762173e-09 * tc[3] - 1.64731748e-13 * tc[4]) *
      0.0059055583114828;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 45: SXC12H25
    result +=
      y[45] *
      (-2.36787089e+00 + 1.37355348e-01 * tc[1] - 8.24076158e-05 * tc[2] +
       2.36421562e-08 * tc[3] - 2.47435932e-12 * tc[4]) *
      0.0059055583114828;
    // species 46: S3XC12H25
    result +=
      y[46] *
      (-2.36787089e+00 + 1.37355348e-01 * tc[1] - 8.24076158e-05 * tc[2] +
       2.36421562e-08 * tc[3] - 2.47435932e-12 * tc[4]) *
      0.0059055583114828;
  } else {
    // species 45: SXC12H25
    result +=
      y[45] *
      (+3.69688268e+01 + 5.38719464e-02 * tc[1] - 1.82171263e-05 * tc[2] +
       2.80774503e-09 * tc[3] - 1.62108420e-13 * tc[4]) *
      0.0059055583114828;
    // species 46: S3XC12H25
    result +=
      y[46] *
      (+3.69688268e+01 + 5.38719464e-02 * tc[1] - 1.82171263e-05 * tc[2] +
       2.80774503e-09 * tc[3] - 1.62108420e-13 * tc[4]) *
      0.0059055583114828;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[53];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 53; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result += y[0] *
              (-2.62181594e+00 + 7.36188555e-02 * tc[1] -
               3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
               8.07204460e-13 * tc[4] - 4.00654253e+04 * invT) *
              0.0058706117177410;
    // species 47: C12H24
    result += y[47] *
              (-2.96342681e+00 + 7.19961800e-02 * tc[1] -
               3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
               9.24796380e-13 * tc[4] - 2.46345299e+04 * invT) *
              0.0059409234571422;
  } else {
    // species 0: NC12H26
    result += y[0] *
              (+3.85095037e+01 + 2.81775024e-02 * tc[1] -
               6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
               3.42488300e-14 * tc[4] - 5.48843465e+04 * invT) *
              0.0058706117177410;
    // species 47: C12H24
    result += y[47] *
              (+3.74002111e+01 + 2.63115377e-02 * tc[1] -
               5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
               3.19124998e-14 * tc[4] - 3.89405962e+04 * invT) *
              0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result += y[1] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+4.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+4.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: CH2
    result += y[9] *
              (+3.76267867e+00 + 4.84436072e-04 * tc[1] +
               9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
               3.37483438e-13 * tc[4] + 4.60040401e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2*
    result += y[10] *
              (+4.19860411e+00 - 1.18330710e-03 * tc[1] +
               2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
               3.88629474e-13 * tc[4] + 5.04968163e+04 * invT) *
              0.0712910814857061;
    // species 11: CH3
    result += y[11] *
              (+3.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 12: CH4
    result += y[12] *
              (+5.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 13: HCO
    result += y[13] *
              (+4.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 14: CH2O
    result += y[14] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 15: CH3O
    result += y[15] *
              (+3.71180502e+00 - 1.40231653e-03 * tc[1] +
               1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
               3.73176840e-12 * tc[4] + 1.29569760e+03 * invT) *
              0.0322227234645872;
    // species 16: CO
    result += y[16] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+3.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+4.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 23: CH2CHO
    result += y[23] *
              (+3.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 24: aC3H5
    result += y[24] *
              (+1.36318350e+00 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 25: C3H6
    result += y[25] *
              (+1.49330700e+00 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 26: nC3H7
    result += y[26] *
              (+1.04911730e+00 + 1.30044865e-02 * tc[1] +
               7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
               1.87440414e-12 * tc[4] + 1.03123460e+04 * invT) *
              0.0232077792476038;
    // species 27: C2H3CHO
    result += y[27] *
              (+1.27134980e+00 + 1.31155270e-02 * tc[1] -
               3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
               6.69610860e-13 * tc[4] - 9.33573440e+03 * invT) *
              0.0178367579908676;
    // species 28: C4H7
    result += y[28] *
              (+7.44494320e-01 + 1.98394285e-02 * tc[1] -
               7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
               4.61927500e-13 * tc[4] + 2.26533280e+04 * invT) *
              0.0181488203266788;
    // species 29: C4H81
    result += y[29] *
              (+1.18113800e+00 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 30: pC4H9
    result += y[30] *
              (+1.20870420e+00 + 1.91487485e-02 * tc[1] -
               2.42201697e-06 * tc[2] - 3.85713675e-09 * tc[3] +
               1.73718870e-12 * tc[4] + 7.32210400e+03 * invT) *
              0.0175082288675678;
    // species 31: C5H9
    result += y[31] *
              (-2.41901110e+00 + 2.02151945e-02 * tc[1] +
               2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
               3.02334260e-12 * tc[4] + 2.81218870e+03 * invT) *
              0.0144661275623128;
    // species 48: C12H25O2
    result += y[48] *
              (+5.31404000e+00 + 4.46936500e-02 * tc[1] +
               4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
               6.70650000e-12 * tc[4] - 2.98918000e+04 * invT) *
              0.0049669696518154;
    // species 49: C12OOH
    result += y[49] *
              (+5.15231000e+00 + 4.98956500e-02 * tc[1] -
               6.02116667e-06 * tc[2] - 1.04608750e-08 * tc[3] +
               4.45572000e-12 * tc[4] - 2.38380000e+04 * invT) *
              0.0049669696518154;
    // species 50: O2C12H24OOH
    result += y[50] *
              (+4.81972000e-01 + 7.25100000e-02 * tc[1] -
               3.33102667e-05 * tc[2] + 6.51055000e-09 * tc[3] +
               2.38716000e-13 * tc[4] - 4.16875000e+04 * invT) *
              0.0042858122471371;
    // species 51: OC12H23OOH
    result += y[51] *
              (+8.80733000e+00 + 3.25311500e-02 * tc[1] +
               2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
               1.02198200e-11 * tc[4] - 6.65361000e+04 * invT) *
              0.0046227596950828;
    // species 52: N2
    result += y[52] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 1: H
    result += y[1] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+2.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+4.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: CH2
    result += y[9] *
              (+2.87410113e+00 + 1.82819646e-03 * tc[1] -
               4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
               3.75455134e-15 * tc[4] + 4.62636040e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2*
    result += y[10] *
              (+2.29203842e+00 + 2.32794318e-03 * tc[1] -
               6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
               6.79432730e-15 * tc[4] + 5.09259997e+04 * invT) *
              0.0712910814857061;
    // species 11: CH3
    result += y[11] *
              (+2.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 12: CH4
    result += y[12] *
              (+7.48514950e-02 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 13: HCO
    result += y[13] *
              (+2.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 14: CH2O
    result += y[14] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 15: CH3O
    result += y[15] *
              (+4.75779238e+00 + 3.72071237e-03 * tc[1] -
               8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
               5.27074196e-15 * tc[4] + 3.78111940e+02 * invT) *
              0.0322227234645872;
    // species 16: CO
    result += y[16] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+3.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+1.95465642e+00 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 23: CH2CHO
    result += y[23] *
              (+5.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 24: aC3H5
    result += y[24] *
              (+6.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 25: C3H6
    result += y[25] *
              (+6.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 26: nC3H7
    result += y[26] *
              (+7.70974790e+00 + 8.01574250e-03 * tc[1] -
               1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
               7.77254380e-15 * tc[4] + 7.97622360e+03 * invT) *
              0.0232077792476038;
    // species 27: C2H3CHO
    result += y[27] *
              (+5.81118680e+00 + 8.55712800e-03 * tc[1] -
               2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
               1.83493682e-14 * tc[4] - 1.07840540e+04 * invT) *
              0.0178367579908676;
    // species 28: C4H7
    result += y[28] *
              (+7.01348350e+00 + 1.13172790e-02 * tc[1] -
               3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
               2.08172340e-14 * tc[4] + 2.09550080e+04 * invT) *
              0.0181488203266788;
    // species 29: C4H81
    result += y[29] *
              (+2.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 30: pC4H9
    result += y[30] *
              (+8.68223950e+00 + 1.18455355e-02 * tc[1] -
               2.53162883e-06 * tc[2] + 1.66067840e-10 * tc[3] +
               1.09690272e-14 * tc[4] + 4.96440580e+03 * invT) *
              0.0175082288675678;
    // species 31: C5H9
    result += y[31] *
              (+1.01386400e+01 + 1.13570690e-02 * tc[1] -
               2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
               1.31864896e-14 * tc[4] - 1.72183590e+03 * invT) *
              0.0144661275623128;
    // species 48: C12H25O2
    result += y[48] *
              (+2.84782000e+01 + 2.68769500e-02 * tc[1] -
               5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
               2.94416000e-14 * tc[4] - 3.74118000e+04 * invT) *
              0.0049669696518154;
    // species 49: C12OOH
    result += y[49] *
              (+2.92019000e+01 + 2.57958500e-02 * tc[1] -
               5.24423333e-06 * tc[2] + 5.75765000e-10 * tc[3] -
               2.65280000e-14 * tc[4] - 3.11192000e+04 * invT) *
              0.0049669696518154;
    // species 50: O2C12H24OOH
    result += y[50] *
              (+3.50907000e+01 + 2.55295000e-02 * tc[1] -
               5.14483333e-06 * tc[2] + 5.61567500e-10 * tc[3] -
               2.57802000e-14 * tc[4] - 5.12675000e+04 * invT) *
              0.0042858122471371;
    // species 51: OC12H23OOH
    result += y[51] *
              (+2.36731000e+01 + 3.08196000e-02 * tc[1] -
               6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
               4.07180000e-14 * tc[4] - 7.18258000e+04 * invT) *
              0.0046227596950828;
    // species 52: N2
    result += y[52] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 32: C5H10
    result += y[32] *
              (-1.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 34: C6H12
    result += y[34] *
              (-1.35275205e+00 + 3.49327713e-02 * tc[1] -
               1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
               4.42592350e-13 * tc[4] - 7.34368617e+03 * invT) *
              0.0118818469142844;
    // species 36: C7H14
    result += y[36] *
              (-1.67720549e+00 + 4.12305800e-02 * tc[1] -
               1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
               5.31475966e-13 * tc[4] - 1.02168601e+04 * invT) *
              0.0101844402122437;
    // species 38: C8H16
    result += y[38] *
              (-1.89226915e+00 + 4.73033178e-02 * tc[1] -
               2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
               6.05437366e-13 * tc[4] - 1.31074559e+04 * invT) *
              0.0089113851857133;
    // species 40: C9H18
    result += y[40] *
              (-2.16108263e+00 + 5.34791485e-02 * tc[1] -
               2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
               6.85543094e-13 * tc[4] - 1.59890847e+04 * invT) *
              0.0079212312761896;
    // species 42: C10H20
    result += y[42] *
              (-2.42901688e+00 + 5.96527990e-02 * tc[1] -
               2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
               7.65436746e-13 * tc[4] - 1.88708365e+04 * invT) *
              0.0071291081485706;
  } else {
    // species 32: C5H10
    result += y[32] *
              (+1.45851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
    // species 34: C6H12
    result += y[34] *
              (+1.78337529e+01 + 1.33688829e-02 * tc[1] -
               3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
               1.63024849e-14 * tc[4] - 1.42062860e+04 * invT) *
              0.0118818469142844;
    // species 36: C7H14
    result += y[36] *
              (+2.10898039e+01 + 1.55303939e-02 * tc[1] -
               3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
               1.89119644e-14 * tc[4] - 1.83260065e+04 * invT) *
              0.0101844402122437;
    // species 38: C8H16
    result += y[38] *
              (+2.43540125e+01 + 1.76833231e-02 * tc[1] -
               4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
               2.15044524e-14 * tc[4] - 2.24485674e+04 * invT) *
              0.0089113851857133;
    // species 40: C9H18
    result += y[40] *
              (+2.76142176e+01 + 1.98412643e-02 * tc[1] -
               4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
               2.41078588e-14 * tc[4] - 2.65709061e+04 * invT) *
              0.0079212312761896;
    // species 42: C10H20
    result += y[42] *
              (+3.08753903e+01 + 2.19985763e-02 * tc[1] -
               4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
               2.67102954e-14 * tc[4] - 3.06937307e+04 * invT) *
              0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 33: PXC5H11
    result += y[33] *
              (+5.24384081e-02 + 2.80398479e-02 * tc[1] -
               1.10515268e-05 * tc[2] + 2.44383445e-09 * tc[3] -
               2.28019320e-13 * tc[4] + 4.71611460e+03 * invT) *
              0.0140561966743039;
    // species 35: PXC6H13
    result += y[35] *
              (-2.04871465e-01 + 3.41900636e-02 * tc[1] -
               1.38149304e-05 * tc[2] + 3.15389505e-09 * tc[3] -
               3.06240116e-13 * tc[4] + 1.83280393e+03 * invT) *
              0.0117412234354820;
    // species 37: PXC7H15
    result += y[37] *
              (-4.99570406e-01 + 4.04413234e-02 * tc[1] -
               1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
               3.93232454e-13 * tc[4] - 1.04590223e+03 * invT) *
              0.0100809500287307;
    // species 39: PXC8H17
    result += y[39] *
              (-7.72759438e-01 + 4.66274853e-02 * tc[1] -
               1.94815748e-05 * tc[2] + 4.63925535e-09 * tc[3] -
               4.74254966e-13 * tc[4] - 3.92689511e+03 * invT) *
              0.0088320497421041;
    // species 41: PXC9H19
    result += y[41] *
              (-1.04387292e+00 + 5.28086415e-02 * tc[1] -
               2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
               5.54808550e-13 * tc[4] - 6.80818512e+03 * invT) *
              0.0078584844126962;
    // species 43: PXC10H21
    result += y[43] *
              (-1.31358348e+00 + 5.89864065e-02 * tc[1] -
               2.50614360e-05 * tc[2] + 6.08327765e-09 * tc[3] -
               6.35045704e-13 * tc[4] - 9.68967550e+03 * invT) *
              0.0070782428969833;
    // species 44: PXC12H25
    result += y[44] *
              (-1.85028741e+00 + 7.13353540e-02 * tc[1] -
               3.06305518e-05 * tc[2] + 7.52208480e-09 * tc[3] -
               7.94908600e-13 * tc[4] - 1.54530435e+04 * invT) *
              0.0059055583114828;
  } else {
    // species 33: PXC5H11
    result += y[33] *
              (+1.52977446e+01 + 1.19867655e-02 * tc[1] -
               2.72797649e-06 * tc[2] + 3.17207690e-10 * tc[3] -
               1.47081811e-14 * tc[4] - 9.80712307e+02 * invT) *
              0.0140561966743039;
    // species 35: PXC6H13
    result += y[35] *
              (+1.85385470e+01 + 1.41553981e-02 * tc[1] -
               3.21769082e-06 * tc[2] + 3.73868963e-10 * tc[3] -
               1.73267213e-14 * tc[4] - 5.09299041e+03 * invT) *
              0.0117412234354820;
    // species 37: PXC7H15
    result += y[37] *
              (+2.17940709e+01 + 1.63140122e-02 * tc[1] -
               3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
               1.99273400e-14 * tc[4] - 9.20938221e+03 * invT) *
              0.0100809500287307;
    // species 39: PXC8H17
    result += y[39] *
              (+2.50510356e+01 + 1.84740081e-02 * tc[1] -
               4.19217547e-06 * tc[2] + 4.86571022e-10 * tc[3] -
               2.25337796e-14 * tc[4] - 1.33300535e+04 * invT) *
              0.0088320497421041;
    // species 41: PXC9H19
    result += y[41] *
              (+2.83097514e+01 + 2.06328672e-02 * tc[1] -
               4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
               2.51384614e-14 * tc[4] - 1.74516030e+04 * invT) *
              0.0078584844126962;
    // species 43: PXC10H21
    result += y[43] *
              (+3.15697160e+01 + 2.27909202e-02 * tc[1] -
               5.16649883e-06 * tc[2] + 5.99277332e-10 * tc[3] -
               2.77419118e-14 * tc[4] - 2.15737832e+04 * invT) *
              0.0070782428969833;
    // species 44: PXC12H25
    result += y[44] *
              (+3.80921885e+01 + 2.71053924e-02 * tc[1] -
               6.14018390e-06 * tc[2] + 7.11905433e-10 * tc[3] -
               3.29463496e-14 * tc[4] - 2.98194375e+04 * invT) *
              0.0059055583114828;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 45: SXC12H25
    result += y[45] *
              (-1.36787089e+00 + 6.86776740e-02 * tc[1] -
               2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
               4.94871864e-13 * tc[4] - 1.67660539e+04 * invT) *
              0.0059055583114828;
    // species 46: S3XC12H25
    result += y[46] *
              (-1.36787089e+00 + 6.86776740e-02 * tc[1] -
               2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
               4.94871864e-13 * tc[4] - 1.67660539e+04 * invT) *
              0.0059055583114828;
  } else {
    // species 45: SXC12H25
    result += y[45] *
              (+3.79688268e+01 + 2.69359732e-02 * tc[1] -
               6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
               3.24216840e-14 * tc[4] - 3.12144988e+04 * invT) *
              0.0059055583114828;
    // species 46: S3XC12H25
    result += y[46] *
              (+3.79688268e+01 + 2.69359732e-02 * tc[1] -
               6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
               3.24216840e-14 * tc[4] - 3.12144988e+04 * invT) *
              0.0059055583114828;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[53];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 53; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result += y[0] *
              (-3.62181594e+00 + 7.36188555e-02 * tc[1] -
               3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
               8.07204460e-13 * tc[4] - 4.00654253e+04 * invT) *
              0.0058706117177410;
    // species 47: C12H24
    result += y[47] *
              (-3.96342681e+00 + 7.19961800e-02 * tc[1] -
               3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
               9.24796380e-13 * tc[4] - 2.46345299e+04 * invT) *
              0.0059409234571422;
  } else {
    // species 0: NC12H26
    result += y[0] *
              (+3.75095037e+01 + 2.81775024e-02 * tc[1] -
               6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
               3.42488300e-14 * tc[4] - 5.48843465e+04 * invT) *
              0.0058706117177410;
    // species 47: C12H24
    result += y[47] *
              (+3.64002111e+01 + 2.63115377e-02 * tc[1] -
               5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
               3.19124998e-14 * tc[4] - 3.89405962e+04 * invT) *
              0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result += y[1] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+3.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: CH2
    result += y[9] *
              (+2.76267867e+00 + 4.84436072e-04 * tc[1] +
               9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
               3.37483438e-13 * tc[4] + 4.60040401e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2*
    result += y[10] *
              (+3.19860411e+00 - 1.18330710e-03 * tc[1] +
               2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
               3.88629474e-13 * tc[4] + 5.04968163e+04 * invT) *
              0.0712910814857061;
    // species 11: CH3
    result += y[11] *
              (+2.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 12: CH4
    result += y[12] *
              (+4.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 13: HCO
    result += y[13] *
              (+3.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 14: CH2O
    result += y[14] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 15: CH3O
    result += y[15] *
              (+2.71180502e+00 - 1.40231653e-03 * tc[1] +
               1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
               3.73176840e-12 * tc[4] + 1.29569760e+03 * invT) *
              0.0322227234645872;
    // species 16: CO
    result += y[16] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+2.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+3.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 23: CH2CHO
    result += y[23] *
              (+2.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 24: aC3H5
    result += y[24] *
              (+3.63183500e-01 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 25: C3H6
    result += y[25] *
              (+4.93307000e-01 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 26: nC3H7
    result += y[26] *
              (+4.91173000e-02 + 1.30044865e-02 * tc[1] +
               7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
               1.87440414e-12 * tc[4] + 1.03123460e+04 * invT) *
              0.0232077792476038;
    // species 27: C2H3CHO
    result += y[27] *
              (+2.71349800e-01 + 1.31155270e-02 * tc[1] -
               3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
               6.69610860e-13 * tc[4] - 9.33573440e+03 * invT) *
              0.0178367579908676;
    // species 28: C4H7
    result += y[28] *
              (-2.55505680e-01 + 1.98394285e-02 * tc[1] -
               7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
               4.61927500e-13 * tc[4] + 2.26533280e+04 * invT) *
              0.0181488203266788;
    // species 29: C4H81
    result += y[29] *
              (+1.81138000e-01 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 30: pC4H9
    result += y[30] *
              (+2.08704200e-01 + 1.91487485e-02 * tc[1] -
               2.42201697e-06 * tc[2] - 3.85713675e-09 * tc[3] +
               1.73718870e-12 * tc[4] + 7.32210400e+03 * invT) *
              0.0175082288675678;
    // species 31: C5H9
    result += y[31] *
              (-3.41901110e+00 + 2.02151945e-02 * tc[1] +
               2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
               3.02334260e-12 * tc[4] + 2.81218870e+03 * invT) *
              0.0144661275623128;
    // species 48: C12H25O2
    result += y[48] *
              (+4.31404000e+00 + 4.46936500e-02 * tc[1] +
               4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
               6.70650000e-12 * tc[4] - 2.98918000e+04 * invT) *
              0.0049669696518154;
    // species 49: C12OOH
    result += y[49] *
              (+4.15231000e+00 + 4.98956500e-02 * tc[1] -
               6.02116667e-06 * tc[2] - 1.04608750e-08 * tc[3] +
               4.45572000e-12 * tc[4] - 2.38380000e+04 * invT) *
              0.0049669696518154;
    // species 50: O2C12H24OOH
    result += y[50] *
              (-5.18028000e-01 + 7.25100000e-02 * tc[1] -
               3.33102667e-05 * tc[2] + 6.51055000e-09 * tc[3] +
               2.38716000e-13 * tc[4] - 4.16875000e+04 * invT) *
              0.0042858122471371;
    // species 51: OC12H23OOH
    result += y[51] *
              (+7.80733000e+00 + 3.25311500e-02 * tc[1] +
               2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
               1.02198200e-11 * tc[4] - 6.65361000e+04 * invT) *
              0.0046227596950828;
    // species 52: N2
    result += y[52] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 1: H
    result += y[1] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+1.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: CH2
    result += y[9] *
              (+1.87410113e+00 + 1.82819646e-03 * tc[1] -
               4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
               3.75455134e-15 * tc[4] + 4.62636040e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2*
    result += y[10] *
              (+1.29203842e+00 + 2.32794318e-03 * tc[1] -
               6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
               6.79432730e-15 * tc[4] + 5.09259997e+04 * invT) *
              0.0712910814857061;
    // species 11: CH3
    result += y[11] *
              (+1.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 12: CH4
    result += y[12] *
              (-9.25148505e-01 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 13: HCO
    result += y[13] *
              (+1.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 14: CH2O
    result += y[14] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 15: CH3O
    result += y[15] *
              (+3.75779238e+00 + 3.72071237e-03 * tc[1] -
               8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
               5.27074196e-15 * tc[4] + 3.78111940e+02 * invT) *
              0.0322227234645872;
    // species 16: CO
    result += y[16] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+2.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+9.54656420e-01 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 23: CH2CHO
    result += y[23] *
              (+4.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 24: aC3H5
    result += y[24] *
              (+5.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 25: C3H6
    result += y[25] *
              (+5.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 26: nC3H7
    result += y[26] *
              (+6.70974790e+00 + 8.01574250e-03 * tc[1] -
               1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
               7.77254380e-15 * tc[4] + 7.97622360e+03 * invT) *
              0.0232077792476038;
    // species 27: C2H3CHO
    result += y[27] *
              (+4.81118680e+00 + 8.55712800e-03 * tc[1] -
               2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
               1.83493682e-14 * tc[4] - 1.07840540e+04 * invT) *
              0.0178367579908676;
    // species 28: C4H7
    result += y[28] *
              (+6.01348350e+00 + 1.13172790e-02 * tc[1] -
               3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
               2.08172340e-14 * tc[4] + 2.09550080e+04 * invT) *
              0.0181488203266788;
    // species 29: C4H81
    result += y[29] *
              (+1.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 30: pC4H9
    result += y[30] *
              (+7.68223950e+00 + 1.18455355e-02 * tc[1] -
               2.53162883e-06 * tc[2] + 1.66067840e-10 * tc[3] +
               1.09690272e-14 * tc[4] + 4.96440580e+03 * invT) *
              0.0175082288675678;
    // species 31: C5H9
    result += y[31] *
              (+9.13864000e+00 + 1.13570690e-02 * tc[1] -
               2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
               1.31864896e-14 * tc[4] - 1.72183590e+03 * invT) *
              0.0144661275623128;
    // species 48: C12H25O2
    result += y[48] *
              (+2.74782000e+01 + 2.68769500e-02 * tc[1] -
               5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
               2.94416000e-14 * tc[4] - 3.74118000e+04 * invT) *
              0.0049669696518154;
    // species 49: C12OOH
    result += y[49] *
              (+2.82019000e+01 + 2.57958500e-02 * tc[1] -
               5.24423333e-06 * tc[2] + 5.75765000e-10 * tc[3] -
               2.65280000e-14 * tc[4] - 3.11192000e+04 * invT) *
              0.0049669696518154;
    // species 50: O2C12H24OOH
    result += y[50] *
              (+3.40907000e+01 + 2.55295000e-02 * tc[1] -
               5.14483333e-06 * tc[2] + 5.61567500e-10 * tc[3] -
               2.57802000e-14 * tc[4] - 5.12675000e+04 * invT) *
              0.0042858122471371;
    // species 51: OC12H23OOH
    result += y[51] *
              (+2.26731000e+01 + 3.08196000e-02 * tc[1] -
               6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
               4.07180000e-14 * tc[4] - 7.18258000e+04 * invT) *
              0.0046227596950828;
    // species 52: N2
    result += y[52] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 32: C5H10
    result += y[32] *
              (-2.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 34: C6H12
    result += y[34] *
              (-2.35275205e+00 + 3.49327713e-02 * tc[1] -
               1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
               4.42592350e-13 * tc[4] - 7.34368617e+03 * invT) *
              0.0118818469142844;
    // species 36: C7H14
    result += y[36] *
              (-2.67720549e+00 + 4.12305800e-02 * tc[1] -
               1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
               5.31475966e-13 * tc[4] - 1.02168601e+04 * invT) *
              0.0101844402122437;
    // species 38: C8H16
    result += y[38] *
              (-2.89226915e+00 + 4.73033178e-02 * tc[1] -
               2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
               6.05437366e-13 * tc[4] - 1.31074559e+04 * invT) *
              0.0089113851857133;
    // species 40: C9H18
    result += y[40] *
              (-3.16108263e+00 + 5.34791485e-02 * tc[1] -
               2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
               6.85543094e-13 * tc[4] - 1.59890847e+04 * invT) *
              0.0079212312761896;
    // species 42: C10H20
    result += y[42] *
              (-3.42901688e+00 + 5.96527990e-02 * tc[1] -
               2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
               7.65436746e-13 * tc[4] - 1.88708365e+04 * invT) *
              0.0071291081485706;
  } else {
    // species 32: C5H10
    result += y[32] *
              (+1.35851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
    // species 34: C6H12
    result += y[34] *
              (+1.68337529e+01 + 1.33688829e-02 * tc[1] -
               3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
               1.63024849e-14 * tc[4] - 1.42062860e+04 * invT) *
              0.0118818469142844;
    // species 36: C7H14
    result += y[36] *
              (+2.00898039e+01 + 1.55303939e-02 * tc[1] -
               3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
               1.89119644e-14 * tc[4] - 1.83260065e+04 * invT) *
              0.0101844402122437;
    // species 38: C8H16
    result += y[38] *
              (+2.33540125e+01 + 1.76833231e-02 * tc[1] -
               4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
               2.15044524e-14 * tc[4] - 2.24485674e+04 * invT) *
              0.0089113851857133;
    // species 40: C9H18
    result += y[40] *
              (+2.66142176e+01 + 1.98412643e-02 * tc[1] -
               4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
               2.41078588e-14 * tc[4] - 2.65709061e+04 * invT) *
              0.0079212312761896;
    // species 42: C10H20
    result += y[42] *
              (+2.98753903e+01 + 2.19985763e-02 * tc[1] -
               4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
               2.67102954e-14 * tc[4] - 3.06937307e+04 * invT) *
              0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 33: PXC5H11
    result += y[33] *
              (-9.47561592e-01 + 2.80398479e-02 * tc[1] -
               1.10515268e-05 * tc[2] + 2.44383445e-09 * tc[3] -
               2.28019320e-13 * tc[4] + 4.71611460e+03 * invT) *
              0.0140561966743039;
    // species 35: PXC6H13
    result += y[35] *
              (-1.20487147e+00 + 3.41900636e-02 * tc[1] -
               1.38149304e-05 * tc[2] + 3.15389505e-09 * tc[3] -
               3.06240116e-13 * tc[4] + 1.83280393e+03 * invT) *
              0.0117412234354820;
    // species 37: PXC7H15
    result += y[37] *
              (-1.49957041e+00 + 4.04413234e-02 * tc[1] -
               1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
               3.93232454e-13 * tc[4] - 1.04590223e+03 * invT) *
              0.0100809500287307;
    // species 39: PXC8H17
    result += y[39] *
              (-1.77275944e+00 + 4.66274853e-02 * tc[1] -
               1.94815748e-05 * tc[2] + 4.63925535e-09 * tc[3] -
               4.74254966e-13 * tc[4] - 3.92689511e+03 * invT) *
              0.0088320497421041;
    // species 41: PXC9H19
    result += y[41] *
              (-2.04387292e+00 + 5.28086415e-02 * tc[1] -
               2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
               5.54808550e-13 * tc[4] - 6.80818512e+03 * invT) *
              0.0078584844126962;
    // species 43: PXC10H21
    result += y[43] *
              (-2.31358348e+00 + 5.89864065e-02 * tc[1] -
               2.50614360e-05 * tc[2] + 6.08327765e-09 * tc[3] -
               6.35045704e-13 * tc[4] - 9.68967550e+03 * invT) *
              0.0070782428969833;
    // species 44: PXC12H25
    result += y[44] *
              (-2.85028741e+00 + 7.13353540e-02 * tc[1] -
               3.06305518e-05 * tc[2] + 7.52208480e-09 * tc[3] -
               7.94908600e-13 * tc[4] - 1.54530435e+04 * invT) *
              0.0059055583114828;
  } else {
    // species 33: PXC5H11
    result += y[33] *
              (+1.42977446e+01 + 1.19867655e-02 * tc[1] -
               2.72797649e-06 * tc[2] + 3.17207690e-10 * tc[3] -
               1.47081811e-14 * tc[4] - 9.80712307e+02 * invT) *
              0.0140561966743039;
    // species 35: PXC6H13
    result += y[35] *
              (+1.75385470e+01 + 1.41553981e-02 * tc[1] -
               3.21769082e-06 * tc[2] + 3.73868963e-10 * tc[3] -
               1.73267213e-14 * tc[4] - 5.09299041e+03 * invT) *
              0.0117412234354820;
    // species 37: PXC7H15
    result += y[37] *
              (+2.07940709e+01 + 1.63140122e-02 * tc[1] -
               3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
               1.99273400e-14 * tc[4] - 9.20938221e+03 * invT) *
              0.0100809500287307;
    // species 39: PXC8H17
    result += y[39] *
              (+2.40510356e+01 + 1.84740081e-02 * tc[1] -
               4.19217547e-06 * tc[2] + 4.86571022e-10 * tc[3] -
               2.25337796e-14 * tc[4] - 1.33300535e+04 * invT) *
              0.0088320497421041;
    // species 41: PXC9H19
    result += y[41] *
              (+2.73097514e+01 + 2.06328672e-02 * tc[1] -
               4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
               2.51384614e-14 * tc[4] - 1.74516030e+04 * invT) *
              0.0078584844126962;
    // species 43: PXC10H21
    result += y[43] *
              (+3.05697160e+01 + 2.27909202e-02 * tc[1] -
               5.16649883e-06 * tc[2] + 5.99277332e-10 * tc[3] -
               2.77419118e-14 * tc[4] - 2.15737832e+04 * invT) *
              0.0070782428969833;
    // species 44: PXC12H25
    result += y[44] *
              (+3.70921885e+01 + 2.71053924e-02 * tc[1] -
               6.14018390e-06 * tc[2] + 7.11905433e-10 * tc[3] -
               3.29463496e-14 * tc[4] - 2.98194375e+04 * invT) *
              0.0059055583114828;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 45: SXC12H25
    result += y[45] *
              (-2.36787089e+00 + 6.86776740e-02 * tc[1] -
               2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
               4.94871864e-13 * tc[4] - 1.67660539e+04 * invT) *
              0.0059055583114828;
    // species 46: S3XC12H25
    result += y[46] *
              (-2.36787089e+00 + 6.86776740e-02 * tc[1] -
               2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
               4.94871864e-13 * tc[4] - 1.67660539e+04 * invT) *
              0.0059055583114828;
  } else {
    // species 45: SXC12H25
    result += y[45] *
              (+3.69688268e+01 + 2.69359732e-02 * tc[1] -
               6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
               3.24216840e-14 * tc[4] - 3.12144988e+04 * invT) *
              0.0059055583114828;
    // species 46: S3XC12H25
    result += y[46] *
              (+3.69688268e+01 + 2.69359732e-02 * tc[1] -
               6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
               3.24216840e-14 * tc[4] - 3.12144988e+04 * invT) *
              0.0059055583114828;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[53]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 53; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[53]; //  temporary storage
  amrex::Real x[53];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (170.340000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (17.007000 * YOW);
  x[4] = y[4] / (33.006000 * YOW);
  x[5] = y[5] / (2.016000 * YOW);
  x[6] = y[6] / (18.015000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (31.998000 * YOW);
  x[9] = y[9] / (14.027000 * YOW);
  x[10] = y[10] / (14.027000 * YOW);
  x[11] = y[11] / (15.035000 * YOW);
  x[12] = y[12] / (16.043000 * YOW);
  x[13] = y[13] / (29.018000 * YOW);
  x[14] = y[14] / (30.026000 * YOW);
  x[15] = y[15] / (31.034000 * YOW);
  x[16] = y[16] / (28.010000 * YOW);
  x[17] = y[17] / (44.009000 * YOW);
  x[18] = y[18] / (26.038000 * YOW);
  x[19] = y[19] / (27.046000 * YOW);
  x[20] = y[20] / (28.054000 * YOW);
  x[21] = y[21] / (29.062000 * YOW);
  x[22] = y[22] / (30.070000 * YOW);
  x[23] = y[23] / (43.045000 * YOW);
  x[24] = y[24] / (41.073000 * YOW);
  x[25] = y[25] / (42.081000 * YOW);
  x[26] = y[26] / (43.089000 * YOW);
  x[27] = y[27] / (56.064000 * YOW);
  x[28] = y[28] / (55.100000 * YOW);
  x[29] = y[29] / (56.108000 * YOW);
  x[30] = y[30] / (57.116000 * YOW);
  x[31] = y[31] / (69.127000 * YOW);
  x[32] = y[32] / (70.135000 * YOW);
  x[33] = y[33] / (71.143000 * YOW);
  x[34] = y[34] / (84.162000 * YOW);
  x[35] = y[35] / (85.170000 * YOW);
  x[36] = y[36] / (98.189000 * YOW);
  x[37] = y[37] / (99.197000 * YOW);
  x[38] = y[38] / (112.216000 * YOW);
  x[39] = y[39] / (113.224000 * YOW);
  x[40] = y[40] / (126.243000 * YOW);
  x[41] = y[41] / (127.251000 * YOW);
  x[42] = y[42] / (140.270000 * YOW);
  x[43] = y[43] / (141.278000 * YOW);
  x[44] = y[44] / (169.332000 * YOW);
  x[45] = y[45] / (169.332000 * YOW);
  x[46] = y[46] / (169.332000 * YOW);
  x[47] = y[47] / (168.324000 * YOW);
  x[48] = y[48] / (201.330000 * YOW);
  x[49] = y[49] / (201.330000 * YOW);
  x[50] = y[50] / (233.328000 * YOW);
  x[51] = y[51] / (216.321000 * YOW);
  x[52] = y[52] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 53; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 170.340000;                 // NC12H26
  XW += x[1] * 1.008000;                   // H
  XW += x[2] * 15.999000;                  // O
  XW += x[3] * 17.007000;                  // OH
  XW += x[4] * 33.006000;                  // HO2
  XW += x[5] * 2.016000;                   // H2
  XW += x[6] * 18.015000;                  // H2O
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 31.998000;                  // O2
  XW += x[9] * 14.027000;                  // CH2
  XW += x[10] * 14.027000;                 // CH2*
  XW += x[11] * 15.035000;                 // CH3
  XW += x[12] * 16.043000;                 // CH4
  XW += x[13] * 29.018000;                 // HCO
  XW += x[14] * 30.026000;                 // CH2O
  XW += x[15] * 31.034000;                 // CH3O
  XW += x[16] * 28.010000;                 // CO
  XW += x[17] * 44.009000;                 // CO2
  XW += x[18] * 26.038000;                 // C2H2
  XW += x[19] * 27.046000;                 // C2H3
  XW += x[20] * 28.054000;                 // C2H4
  XW += x[21] * 29.062000;                 // C2H5
  XW += x[22] * 30.070000;                 // C2H6
  XW += x[23] * 43.045000;                 // CH2CHO
  XW += x[24] * 41.073000;                 // aC3H5
  XW += x[25] * 42.081000;                 // C3H6
  XW += x[26] * 43.089000;                 // nC3H7
  XW += x[27] * 56.064000;                 // C2H3CHO
  XW += x[28] * 55.100000;                 // C4H7
  XW += x[29] * 56.108000;                 // C4H81
  XW += x[30] * 57.116000;                 // pC4H9
  XW += x[31] * 69.127000;                 // C5H9
  XW += x[32] * 70.135000;                 // C5H10
  XW += x[33] * 71.143000;                 // PXC5H11
  XW += x[34] * 84.162000;                 // C6H12
  XW += x[35] * 85.170000;                 // PXC6H13
  XW += x[36] * 98.189000;                 // C7H14
  XW += x[37] * 99.197000;                 // PXC7H15
  XW += x[38] * 112.216000;                // C8H16
  XW += x[39] * 113.224000;                // PXC8H17
  XW += x[40] * 126.243000;                // C9H18
  XW += x[41] * 127.251000;                // PXC9H19
  XW += x[42] * 140.270000;                // C10H20
  XW += x[43] * 141.278000;                // PXC10H21
  XW += x[44] * 169.332000;                // PXC12H25
  XW += x[45] * 169.332000;                // SXC12H25
  XW += x[46] * 169.332000;                // S3XC12H25
  XW += x[47] * 168.324000;                // C12H24
  XW += x[48] * 201.330000;                // C12H25O2
  XW += x[49] * 201.330000;                // C12OOH
  XW += x[50] * 233.328000;                // O2C12H24OOH
  XW += x[51] * 216.321000;                // OC12H23OOH
  XW += x[52] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 14.027000;   // CH2
  W += c[10] * 14.027000;  // CH2*
  W += c[11] * 15.035000;  // CH3
  W += c[12] * 16.043000;  // CH4
  W += c[13] * 29.018000;  // HCO
  W += c[14] * 30.026000;  // CH2O
  W += c[15] * 31.034000;  // CH3O
  W += c[16] * 28.010000;  // CO
  W += c[17] * 44.009000;  // CO2
  W += c[18] * 26.038000;  // C2H2
  W += c[19] * 27.046000;  // C2H3
  W += c[20] * 28.054000;  // C2H4
  W += c[21] * 29.062000;  // C2H5
  W += c[22] * 30.070000;  // C2H6
  W += c[23] * 43.045000;  // CH2CHO
  W += c[24] * 41.073000;  // aC3H5
  W += c[25] * 42.081000;  // C3H6
  W += c[26] * 43.089000;  // nC3H7
  W += c[27] * 56.064000;  // C2H3CHO
  W += c[28] * 55.100000;  // C4H7
  W += c[29] * 56.108000;  // C4H81
  W += c[30] * 57.116000;  // pC4H9
  W += c[31] * 69.127000;  // C5H9
  W += c[32] * 70.135000;  // C5H10
  W += c[33] * 71.143000;  // PXC5H11
  W += c[34] * 84.162000;  // C6H12
  W += c[35] * 85.170000;  // PXC6H13
  W += c[36] * 98.189000;  // C7H14
  W += c[37] * 99.197000;  // PXC7H15
  W += c[38] * 112.216000; // C8H16
  W += c[39] * 113.224000; // PXC8H17
  W += c[40] * 126.243000; // C9H18
  W += c[41] * 127.251000; // PXC9H19
  W += c[42] * 140.270000; // C10H20
  W += c[43] * 141.278000; // PXC10H21
  W += c[44] * 169.332000; // PXC12H25
  W += c[45] * 169.332000; // SXC12H25
  W += c[46] * 169.332000; // S3XC12H25
  W += c[47] * 168.324000; // C12H24
  W += c[48] * 201.330000; // C12H25O2
  W += c[49] * 201.330000; // C12OOH
  W += c[50] * 233.328000; // O2C12H24OOH
  W += c[51] * 216.321000; // OC12H23OOH
  W += c[52] * 28.014000;  // N2

  for (int id = 0; id < 53; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 170.340000;                   // NC12H26
  XW += x[1] * 1.008000;                     // H
  XW += x[2] * 15.999000;                    // O
  XW += x[3] * 17.007000;                    // OH
  XW += x[4] * 33.006000;                    // HO2
  XW += x[5] * 2.016000;                     // H2
  XW += x[6] * 18.015000;                    // H2O
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 31.998000;                    // O2
  XW += x[9] * 14.027000;                    // CH2
  XW += x[10] * 14.027000;                   // CH2*
  XW += x[11] * 15.035000;                   // CH3
  XW += x[12] * 16.043000;                   // CH4
  XW += x[13] * 29.018000;                   // HCO
  XW += x[14] * 30.026000;                   // CH2O
  XW += x[15] * 31.034000;                   // CH3O
  XW += x[16] * 28.010000;                   // CO
  XW += x[17] * 44.009000;                   // CO2
  XW += x[18] * 26.038000;                   // C2H2
  XW += x[19] * 27.046000;                   // C2H3
  XW += x[20] * 28.054000;                   // C2H4
  XW += x[21] * 29.062000;                   // C2H5
  XW += x[22] * 30.070000;                   // C2H6
  XW += x[23] * 43.045000;                   // CH2CHO
  XW += x[24] * 41.073000;                   // aC3H5
  XW += x[25] * 42.081000;                   // C3H6
  XW += x[26] * 43.089000;                   // nC3H7
  XW += x[27] * 56.064000;                   // C2H3CHO
  XW += x[28] * 55.100000;                   // C4H7
  XW += x[29] * 56.108000;                   // C4H81
  XW += x[30] * 57.116000;                   // pC4H9
  XW += x[31] * 69.127000;                   // C5H9
  XW += x[32] * 70.135000;                   // C5H10
  XW += x[33] * 71.143000;                   // PXC5H11
  XW += x[34] * 84.162000;                   // C6H12
  XW += x[35] * 85.170000;                   // PXC6H13
  XW += x[36] * 98.189000;                   // C7H14
  XW += x[37] * 99.197000;                   // PXC7H15
  XW += x[38] * 112.216000;                  // C8H16
  XW += x[39] * 113.224000;                  // PXC8H17
  XW += x[40] * 126.243000;                  // C9H18
  XW += x[41] * 127.251000;                  // PXC9H19
  XW += x[42] * 140.270000;                  // C10H20
  XW += x[43] * 141.278000;                  // PXC10H21
  XW += x[44] * 169.332000;                  // PXC12H25
  XW += x[45] * 169.332000;                  // SXC12H25
  XW += x[46] * 169.332000;                  // S3XC12H25
  XW += x[47] * 168.324000;                  // C12H24
  XW += x[48] * 201.330000;                  // C12H25O2
  XW += x[49] * 201.330000;                  // C12OOH
  XW += x[50] * 233.328000;                  // O2C12H24OOH
  XW += x[51] * 216.321000;                  // OC12H23OOH
  XW += x[52] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 14.027000;   // CH2
  W += c[10] * 14.027000;  // CH2*
  W += c[11] * 15.035000;  // CH3
  W += c[12] * 16.043000;  // CH4
  W += c[13] * 29.018000;  // HCO
  W += c[14] * 30.026000;  // CH2O
  W += c[15] * 31.034000;  // CH3O
  W += c[16] * 28.010000;  // CO
  W += c[17] * 44.009000;  // CO2
  W += c[18] * 26.038000;  // C2H2
  W += c[19] * 27.046000;  // C2H3
  W += c[20] * 28.054000;  // C2H4
  W += c[21] * 29.062000;  // C2H5
  W += c[22] * 30.070000;  // C2H6
  W += c[23] * 43.045000;  // CH2CHO
  W += c[24] * 41.073000;  // aC3H5
  W += c[25] * 42.081000;  // C3H6
  W += c[26] * 43.089000;  // nC3H7
  W += c[27] * 56.064000;  // C2H3CHO
  W += c[28] * 55.100000;  // C4H7
  W += c[29] * 56.108000;  // C4H81
  W += c[30] * 57.116000;  // pC4H9
  W += c[31] * 69.127000;  // C5H9
  W += c[32] * 70.135000;  // C5H10
  W += c[33] * 71.143000;  // PXC5H11
  W += c[34] * 84.162000;  // C6H12
  W += c[35] * 85.170000;  // PXC6H13
  W += c[36] * 98.189000;  // C7H14
  W += c[37] * 99.197000;  // PXC7H15
  W += c[38] * 112.216000; // C8H16
  W += c[39] * 113.224000; // PXC8H17
  W += c[40] * 126.243000; // C9H18
  W += c[41] * 127.251000; // PXC9H19
  W += c[42] * 140.270000; // C10H20
  W += c[43] * 141.278000; // PXC10H21
  W += c[44] * 169.332000; // PXC12H25
  W += c[45] * 169.332000; // SXC12H25
  W += c[46] * 169.332000; // S3XC12H25
  W += c[47] * 168.324000; // C12H24
  W += c[48] * 201.330000; // C12H25O2
  W += c[49] * 201.330000; // C12OOH
  W += c[50] * 233.328000; // O2C12H24OOH
  W += c[51] * 216.321000; // OC12H23OOH
  W += c[52] * 28.014000;  // N2

  for (int id = 0; id < 53; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 14.027000;   // CH2
  XW += x[10] * 14.027000;  // CH2*
  XW += x[11] * 15.035000;  // CH3
  XW += x[12] * 16.043000;  // CH4
  XW += x[13] * 29.018000;  // HCO
  XW += x[14] * 30.026000;  // CH2O
  XW += x[15] * 31.034000;  // CH3O
  XW += x[16] * 28.010000;  // CO
  XW += x[17] * 44.009000;  // CO2
  XW += x[18] * 26.038000;  // C2H2
  XW += x[19] * 27.046000;  // C2H3
  XW += x[20] * 28.054000;  // C2H4
  XW += x[21] * 29.062000;  // C2H5
  XW += x[22] * 30.070000;  // C2H6
  XW += x[23] * 43.045000;  // CH2CHO
  XW += x[24] * 41.073000;  // aC3H5
  XW += x[25] * 42.081000;  // C3H6
  XW += x[26] * 43.089000;  // nC3H7
  XW += x[27] * 56.064000;  // C2H3CHO
  XW += x[28] * 55.100000;  // C4H7
  XW += x[29] * 56.108000;  // C4H81
  XW += x[30] * 57.116000;  // pC4H9
  XW += x[31] * 69.127000;  // C5H9
  XW += x[32] * 70.135000;  // C5H10
  XW += x[33] * 71.143000;  // PXC5H11
  XW += x[34] * 84.162000;  // C6H12
  XW += x[35] * 85.170000;  // PXC6H13
  XW += x[36] * 98.189000;  // C7H14
  XW += x[37] * 99.197000;  // PXC7H15
  XW += x[38] * 112.216000; // C8H16
  XW += x[39] * 113.224000; // PXC8H17
  XW += x[40] * 126.243000; // C9H18
  XW += x[41] * 127.251000; // PXC9H19
  XW += x[42] * 140.270000; // C10H20
  XW += x[43] * 141.278000; // PXC10H21
  XW += x[44] * 169.332000; // PXC12H25
  XW += x[45] * 169.332000; // SXC12H25
  XW += x[46] * 169.332000; // S3XC12H25
  XW += x[47] * 168.324000; // C12H24
  XW += x[48] * 201.330000; // C12H25O2
  XW += x[49] * 201.330000; // C12OOH
  XW += x[50] * 233.328000; // O2C12H24OOH
  XW += x[51] * 216.321000; // OC12H23OOH
  XW += x[52] * 28.014000;  // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 14.027000;   // CH2
  W += c[10] * 14.027000;  // CH2*
  W += c[11] * 15.035000;  // CH3
  W += c[12] * 16.043000;  // CH4
  W += c[13] * 29.018000;  // HCO
  W += c[14] * 30.026000;  // CH2O
  W += c[15] * 31.034000;  // CH3O
  W += c[16] * 28.010000;  // CO
  W += c[17] * 44.009000;  // CO2
  W += c[18] * 26.038000;  // C2H2
  W += c[19] * 27.046000;  // C2H3
  W += c[20] * 28.054000;  // C2H4
  W += c[21] * 29.062000;  // C2H5
  W += c[22] * 30.070000;  // C2H6
  W += c[23] * 43.045000;  // CH2CHO
  W += c[24] * 41.073000;  // aC3H5
  W += c[25] * 42.081000;  // C3H6
  W += c[26] * 43.089000;  // nC3H7
  W += c[27] * 56.064000;  // C2H3CHO
  W += c[28] * 55.100000;  // C4H7
  W += c[29] * 56.108000;  // C4H81
  W += c[30] * 57.116000;  // pC4H9
  W += c[31] * 69.127000;  // C5H9
  W += c[32] * 70.135000;  // C5H10
  W += c[33] * 71.143000;  // PXC5H11
  W += c[34] * 84.162000;  // C6H12
  W += c[35] * 85.170000;  // PXC6H13
  W += c[36] * 98.189000;  // C7H14
  W += c[37] * 99.197000;  // PXC7H15
  W += c[38] * 112.216000; // C8H16
  W += c[39] * 113.224000; // PXC8H17
  W += c[40] * 126.243000; // C9H18
  W += c[41] * 127.251000; // PXC9H19
  W += c[42] * 140.270000; // C10H20
  W += c[43] * 141.278000; // PXC10H21
  W += c[44] * 169.332000; // PXC12H25
  W += c[45] * 169.332000; // SXC12H25
  W += c[46] * 169.332000; // S3XC12H25
  W += c[47] * 168.324000; // C12H24
  W += c[48] * 201.330000; // C12H25O2
  W += c[49] * 201.330000; // C12OOH
  W += c[50] * 233.328000; // O2C12H24OOH
  W += c[51] * 216.321000; // OC12H23OOH
  W += c[52] * 28.014000;  // N2

  for (int id = 0; id < 53; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 53; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 53; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 53; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 53; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 53; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 14.027000;   // CH2
  XW += x[10] * 14.027000;  // CH2*
  XW += x[11] * 15.035000;  // CH3
  XW += x[12] * 16.043000;  // CH4
  XW += x[13] * 29.018000;  // HCO
  XW += x[14] * 30.026000;  // CH2O
  XW += x[15] * 31.034000;  // CH3O
  XW += x[16] * 28.010000;  // CO
  XW += x[17] * 44.009000;  // CO2
  XW += x[18] * 26.038000;  // C2H2
  XW += x[19] * 27.046000;  // C2H3
  XW += x[20] * 28.054000;  // C2H4
  XW += x[21] * 29.062000;  // C2H5
  XW += x[22] * 30.070000;  // C2H6
  XW += x[23] * 43.045000;  // CH2CHO
  XW += x[24] * 41.073000;  // aC3H5
  XW += x[25] * 42.081000;  // C3H6
  XW += x[26] * 43.089000;  // nC3H7
  XW += x[27] * 56.064000;  // C2H3CHO
  XW += x[28] * 55.100000;  // C4H7
  XW += x[29] * 56.108000;  // C4H81
  XW += x[30] * 57.116000;  // pC4H9
  XW += x[31] * 69.127000;  // C5H9
  XW += x[32] * 70.135000;  // C5H10
  XW += x[33] * 71.143000;  // PXC5H11
  XW += x[34] * 84.162000;  // C6H12
  XW += x[35] * 85.170000;  // PXC6H13
  XW += x[36] * 98.189000;  // C7H14
  XW += x[37] * 99.197000;  // PXC7H15
  XW += x[38] * 112.216000; // C8H16
  XW += x[39] * 113.224000; // PXC8H17
  XW += x[40] * 126.243000; // C9H18
  XW += x[41] * 127.251000; // PXC9H19
  XW += x[42] * 140.270000; // C10H20
  XW += x[43] * 141.278000; // PXC10H21
  XW += x[44] * 169.332000; // PXC12H25
  XW += x[45] * 169.332000; // SXC12H25
  XW += x[46] * 169.332000; // S3XC12H25
  XW += x[47] * 168.324000; // C12H24
  XW += x[48] * 201.330000; // C12H25O2
  XW += x[49] * 201.330000; // C12OOH
  XW += x[50] * 233.328000; // O2C12H24OOH
  XW += x[51] * 216.321000; // OC12H23OOH
  XW += x[52] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 170.340000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 17.007000 * XWinv;
  y[4] = x[4] * 33.006000 * XWinv;
  y[5] = x[5] * 2.016000 * XWinv;
  y[6] = x[6] * 18.015000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 31.998000 * XWinv;
  y[9] = x[9] * 14.027000 * XWinv;
  y[10] = x[10] * 14.027000 * XWinv;
  y[11] = x[11] * 15.035000 * XWinv;
  y[12] = x[12] * 16.043000 * XWinv;
  y[13] = x[13] * 29.018000 * XWinv;
  y[14] = x[14] * 30.026000 * XWinv;
  y[15] = x[15] * 31.034000 * XWinv;
  y[16] = x[16] * 28.010000 * XWinv;
  y[17] = x[17] * 44.009000 * XWinv;
  y[18] = x[18] * 26.038000 * XWinv;
  y[19] = x[19] * 27.046000 * XWinv;
  y[20] = x[20] * 28.054000 * XWinv;
  y[21] = x[21] * 29.062000 * XWinv;
  y[22] = x[22] * 30.070000 * XWinv;
  y[23] = x[23] * 43.045000 * XWinv;
  y[24] = x[24] * 41.073000 * XWinv;
  y[25] = x[25] * 42.081000 * XWinv;
  y[26] = x[26] * 43.089000 * XWinv;
  y[27] = x[27] * 56.064000 * XWinv;
  y[28] = x[28] * 55.100000 * XWinv;
  y[29] = x[29] * 56.108000 * XWinv;
  y[30] = x[30] * 57.116000 * XWinv;
  y[31] = x[31] * 69.127000 * XWinv;
  y[32] = x[32] * 70.135000 * XWinv;
  y[33] = x[33] * 71.143000 * XWinv;
  y[34] = x[34] * 84.162000 * XWinv;
  y[35] = x[35] * 85.170000 * XWinv;
  y[36] = x[36] * 98.189000 * XWinv;
  y[37] = x[37] * 99.197000 * XWinv;
  y[38] = x[38] * 112.216000 * XWinv;
  y[39] = x[39] * 113.224000 * XWinv;
  y[40] = x[40] * 126.243000 * XWinv;
  y[41] = x[41] * 127.251000 * XWinv;
  y[42] = x[42] * 140.270000 * XWinv;
  y[43] = x[43] * 141.278000 * XWinv;
  y[44] = x[44] * 169.332000 * XWinv;
  y[45] = x[45] * 169.332000 * XWinv;
  y[46] = x[46] * 169.332000 * XWinv;
  y[47] = x[47] * 168.324000 * XWinv;
  y[48] = x[48] * 201.330000 * XWinv;
  y[49] = x[49] * 201.330000 * XWinv;
  y[50] = x[50] * 233.328000 * XWinv;
  y[51] = x[51] * 216.321000 * XWinv;
  y[52] = x[52] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 53; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 14.027000;   // CH2
  XW += x[10] * 14.027000;  // CH2*
  XW += x[11] * 15.035000;  // CH3
  XW += x[12] * 16.043000;  // CH4
  XW += x[13] * 29.018000;  // HCO
  XW += x[14] * 30.026000;  // CH2O
  XW += x[15] * 31.034000;  // CH3O
  XW += x[16] * 28.010000;  // CO
  XW += x[17] * 44.009000;  // CO2
  XW += x[18] * 26.038000;  // C2H2
  XW += x[19] * 27.046000;  // C2H3
  XW += x[20] * 28.054000;  // C2H4
  XW += x[21] * 29.062000;  // C2H5
  XW += x[22] * 30.070000;  // C2H6
  XW += x[23] * 43.045000;  // CH2CHO
  XW += x[24] * 41.073000;  // aC3H5
  XW += x[25] * 42.081000;  // C3H6
  XW += x[26] * 43.089000;  // nC3H7
  XW += x[27] * 56.064000;  // C2H3CHO
  XW += x[28] * 55.100000;  // C4H7
  XW += x[29] * 56.108000;  // C4H81
  XW += x[30] * 57.116000;  // pC4H9
  XW += x[31] * 69.127000;  // C5H9
  XW += x[32] * 70.135000;  // C5H10
  XW += x[33] * 71.143000;  // PXC5H11
  XW += x[34] * 84.162000;  // C6H12
  XW += x[35] * 85.170000;  // PXC6H13
  XW += x[36] * 98.189000;  // C7H14
  XW += x[37] * 99.197000;  // PXC7H15
  XW += x[38] * 112.216000; // C8H16
  XW += x[39] * 113.224000; // PXC8H17
  XW += x[40] * 126.243000; // C9H18
  XW += x[41] * 127.251000; // PXC9H19
  XW += x[42] * 140.270000; // C10H20
  XW += x[43] * 141.278000; // PXC10H21
  XW += x[44] * 169.332000; // PXC12H25
  XW += x[45] * 169.332000; // SXC12H25
  XW += x[46] * 169.332000; // S3XC12H25
  XW += x[47] * 168.324000; // C12H24
  XW += x[48] * 201.330000; // C12H25O2
  XW += x[49] * 201.330000; // C12OOH
  XW += x[50] * 233.328000; // O2C12H24OOH
  XW += x[51] * 216.321000; // OC12H23OOH
  XW += x[52] * 28.014000;  // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 53; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 53; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 53; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 170.340000;  // NC12H26
  CW += c[1] * 1.008000;    // H
  CW += c[2] * 15.999000;   // O
  CW += c[3] * 17.007000;   // OH
  CW += c[4] * 33.006000;   // HO2
  CW += c[5] * 2.016000;    // H2
  CW += c[6] * 18.015000;   // H2O
  CW += c[7] * 34.014000;   // H2O2
  CW += c[8] * 31.998000;   // O2
  CW += c[9] * 14.027000;   // CH2
  CW += c[10] * 14.027000;  // CH2*
  CW += c[11] * 15.035000;  // CH3
  CW += c[12] * 16.043000;  // CH4
  CW += c[13] * 29.018000;  // HCO
  CW += c[14] * 30.026000;  // CH2O
  CW += c[15] * 31.034000;  // CH3O
  CW += c[16] * 28.010000;  // CO
  CW += c[17] * 44.009000;  // CO2
  CW += c[18] * 26.038000;  // C2H2
  CW += c[19] * 27.046000;  // C2H3
  CW += c[20] * 28.054000;  // C2H4
  CW += c[21] * 29.062000;  // C2H5
  CW += c[22] * 30.070000;  // C2H6
  CW += c[23] * 43.045000;  // CH2CHO
  CW += c[24] * 41.073000;  // aC3H5
  CW += c[25] * 42.081000;  // C3H6
  CW += c[26] * 43.089000;  // nC3H7
  CW += c[27] * 56.064000;  // C2H3CHO
  CW += c[28] * 55.100000;  // C4H7
  CW += c[29] * 56.108000;  // C4H81
  CW += c[30] * 57.116000;  // pC4H9
  CW += c[31] * 69.127000;  // C5H9
  CW += c[32] * 70.135000;  // C5H10
  CW += c[33] * 71.143000;  // PXC5H11
  CW += c[34] * 84.162000;  // C6H12
  CW += c[35] * 85.170000;  // PXC6H13
  CW += c[36] * 98.189000;  // C7H14
  CW += c[37] * 99.197000;  // PXC7H15
  CW += c[38] * 112.216000; // C8H16
  CW += c[39] * 113.224000; // PXC8H17
  CW += c[40] * 126.243000; // C9H18
  CW += c[41] * 127.251000; // PXC9H19
  CW += c[42] * 140.270000; // C10H20
  CW += c[43] * 141.278000; // PXC10H21
  CW += c[44] * 169.332000; // PXC12H25
  CW += c[45] * 169.332000; // SXC12H25
  CW += c[46] * 169.332000; // S3XC12H25
  CW += c[47] * 168.324000; // C12H24
  CW += c[48] * 201.330000; // C12H25O2
  CW += c[49] * 201.330000; // C12OOH
  CW += c[50] * 233.328000; // O2C12H24OOH
  CW += c[51] * 216.321000; // OC12H23OOH
  CW += c[52] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 170.340000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 17.007000 * CWinv;
  y[4] = c[4] * 33.006000 * CWinv;
  y[5] = c[5] * 2.016000 * CWinv;
  y[6] = c[6] * 18.015000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 31.998000 * CWinv;
  y[9] = c[9] * 14.027000 * CWinv;
  y[10] = c[10] * 14.027000 * CWinv;
  y[11] = c[11] * 15.035000 * CWinv;
  y[12] = c[12] * 16.043000 * CWinv;
  y[13] = c[13] * 29.018000 * CWinv;
  y[14] = c[14] * 30.026000 * CWinv;
  y[15] = c[15] * 31.034000 * CWinv;
  y[16] = c[16] * 28.010000 * CWinv;
  y[17] = c[17] * 44.009000 * CWinv;
  y[18] = c[18] * 26.038000 * CWinv;
  y[19] = c[19] * 27.046000 * CWinv;
  y[20] = c[20] * 28.054000 * CWinv;
  y[21] = c[21] * 29.062000 * CWinv;
  y[22] = c[22] * 30.070000 * CWinv;
  y[23] = c[23] * 43.045000 * CWinv;
  y[24] = c[24] * 41.073000 * CWinv;
  y[25] = c[25] * 42.081000 * CWinv;
  y[26] = c[26] * 43.089000 * CWinv;
  y[27] = c[27] * 56.064000 * CWinv;
  y[28] = c[28] * 55.100000 * CWinv;
  y[29] = c[29] * 56.108000 * CWinv;
  y[30] = c[30] * 57.116000 * CWinv;
  y[31] = c[31] * 69.127000 * CWinv;
  y[32] = c[32] * 70.135000 * CWinv;
  y[33] = c[33] * 71.143000 * CWinv;
  y[34] = c[34] * 84.162000 * CWinv;
  y[35] = c[35] * 85.170000 * CWinv;
  y[36] = c[36] * 98.189000 * CWinv;
  y[37] = c[37] * 99.197000 * CWinv;
  y[38] = c[38] * 112.216000 * CWinv;
  y[39] = c[39] * 113.224000 * CWinv;
  y[40] = c[40] * 126.243000 * CWinv;
  y[41] = c[41] * 127.251000 * CWinv;
  y[42] = c[42] * 140.270000 * CWinv;
  y[43] = c[43] * 141.278000 * CWinv;
  y[44] = c[44] * 169.332000 * CWinv;
  y[45] = c[45] * 169.332000 * CWinv;
  y[46] = c[46] * 169.332000 * CWinv;
  y[47] = c[47] * 168.324000 * CWinv;
  y[48] = c[48] * 201.330000 * CWinv;
  y[49] = c[49] * 201.330000 * CWinv;
  y[50] = c[50] * 233.328000 * CWinv;
  y[51] = c[51] * 216.321000 * CWinv;
  y[52] = c[52] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 4.881098167284983e+05;  // NC12H26
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 4.888847308845322e+06;  // OH
  cvms[4] *= 2.519076112874398e+06;  // HO2
  cvms[5] *= 4.124237409798234e+07;  // H2
  cvms[6] *= 4.615299815794193e+06;  // H2O
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 2.598431970171023e+06;  // O2
  cvms[9] *= 5.927470320206203e+06;  // CH2
  cvms[10] *= 5.927470320206203e+06; // CH2*
  cvms[11] *= 5.530071578419182e+06; // CH3
  cvms[12] *= 5.182610869633635e+06; // CH4
  cvms[13] *= 2.865277627042952e+06; // HCO
  cvms[14] *= 2.769087663409458e+06; // CH2O
  cvms[15] *= 2.679146297013998e+06; // CH3O
  cvms[16] *= 2.968390795484913e+06; // CO
  cvms[17] *= 1.889264154639560e+06; // CO2
  cvms[18] *= 3.193203248388218e+06; // C2H2
  cvms[19] *= 3.074193085170909e+06; // C2H3
  cvms[20] *= 2.963735160103101e+06; // C2H4
  cvms[21] *= 2.860939583701480e+06; // C2H5
  cvms[22] *= 2.765035789209591e+06; // C2H6
  cvms[23] *= 1.931574542491170e+06; // CH2CHO
  cvms[24] *= 2.024313446340233e+06; // aC3H5
  cvms[25] *= 1.975823440068734e+06; // C3H6
  cvms[26] *= 1.929602130045543e+06; // nC3H7
  cvms[27] *= 1.483030575441146e+06; // C2H3CHO
  cvms[28] *= 1.508976881697503e+06; // C4H7
  cvms[29] *= 1.481867580051551e+06; // C4H81
  cvms[30] *= 1.455715144294635e+06; // pC4H9
  cvms[31] *= 1.202780768462864e+06; // C5H9
  cvms[32] *= 1.185494064041241e+06; // C5H10
  cvms[33] *= 1.168697218019094e+06; // PXC5H11
  cvms[34] *= 9.879117200343669e+05; // C6H12
  cvms[35] *= 9.762196334569965e+05; // PXC6H13
  cvms[36] *= 8.467814743151718e+05; // C7H14
  cvms[37] *= 8.381768216935230e+05; // PXC7H15
  cvms[38] *= 7.409337900257753e+05; // C8H16
  cvms[39] *= 7.343374742239490e+05; // PXC8H17
  cvms[40] *= 6.586078133562447e+05; // C9H18
  cvms[41] *= 6.533907488470221e+05; // PXC9H19
  cvms[42] *= 5.927470320206203e+05; // C10H20
  cvms[43] *= 5.885178596917596e+05; // PXC10H21
  cvms[44] *= 4.910154382014764e+05; // PXC12H25
  cvms[45] *= 4.910154382014764e+05; // SXC12H25
  cvms[46] *= 4.910154382014764e+05; // S3XC12H25
  cvms[47] *= 4.939558600171835e+05; // C12H24
  cvms[48] *= 4.129768349552099e+05; // C12H25O2
  cvms[49] *= 4.129768349552099e+05; // C12OOH
  cvms[50] *= 3.563422571724457e+05; // O2C12H24OOH
  cvms[51] *= 3.843576267747116e+05; // OC12H23OOH
  cvms[52] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 4.881098167284983e+05;  // NC12H26
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 4.888847308845322e+06;  // OH
  cpms[4] *= 2.519076112874398e+06;  // HO2
  cpms[5] *= 4.124237409798234e+07;  // H2
  cpms[6] *= 4.615299815794193e+06;  // H2O
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 2.598431970171023e+06;  // O2
  cpms[9] *= 5.927470320206203e+06;  // CH2
  cpms[10] *= 5.927470320206203e+06; // CH2*
  cpms[11] *= 5.530071578419182e+06; // CH3
  cpms[12] *= 5.182610869633635e+06; // CH4
  cpms[13] *= 2.865277627042952e+06; // HCO
  cpms[14] *= 2.769087663409458e+06; // CH2O
  cpms[15] *= 2.679146297013998e+06; // CH3O
  cpms[16] *= 2.968390795484913e+06; // CO
  cpms[17] *= 1.889264154639560e+06; // CO2
  cpms[18] *= 3.193203248388218e+06; // C2H2
  cpms[19] *= 3.074193085170909e+06; // C2H3
  cpms[20] *= 2.963735160103101e+06; // C2H4
  cpms[21] *= 2.860939583701480e+06; // C2H5
  cpms[22] *= 2.765035789209591e+06; // C2H6
  cpms[23] *= 1.931574542491170e+06; // CH2CHO
  cpms[24] *= 2.024313446340233e+06; // aC3H5
  cpms[25] *= 1.975823440068734e+06; // C3H6
  cpms[26] *= 1.929602130045543e+06; // nC3H7
  cpms[27] *= 1.483030575441146e+06; // C2H3CHO
  cpms[28] *= 1.508976881697503e+06; // C4H7
  cpms[29] *= 1.481867580051551e+06; // C4H81
  cpms[30] *= 1.455715144294635e+06; // pC4H9
  cpms[31] *= 1.202780768462864e+06; // C5H9
  cpms[32] *= 1.185494064041241e+06; // C5H10
  cpms[33] *= 1.168697218019094e+06; // PXC5H11
  cpms[34] *= 9.879117200343669e+05; // C6H12
  cpms[35] *= 9.762196334569965e+05; // PXC6H13
  cpms[36] *= 8.467814743151718e+05; // C7H14
  cpms[37] *= 8.381768216935230e+05; // PXC7H15
  cpms[38] *= 7.409337900257753e+05; // C8H16
  cpms[39] *= 7.343374742239490e+05; // PXC8H17
  cpms[40] *= 6.586078133562447e+05; // C9H18
  cpms[41] *= 6.533907488470221e+05; // PXC9H19
  cpms[42] *= 5.927470320206203e+05; // C10H20
  cpms[43] *= 5.885178596917596e+05; // PXC10H21
  cpms[44] *= 4.910154382014764e+05; // PXC12H25
  cpms[45] *= 4.910154382014764e+05; // SXC12H25
  cpms[46] *= 4.910154382014764e+05; // S3XC12H25
  cpms[47] *= 4.939558600171835e+05; // C12H24
  cpms[48] *= 4.129768349552099e+05; // C12H25O2
  cpms[49] *= 4.129768349552099e+05; // C12OOH
  cpms[50] *= 3.563422571724457e+05; // O2C12H24OOH
  cpms[51] *= 3.843576267747116e+05; // OC12H23OOH
  cpms[52] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 53; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 53; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 4.881098167284983e+05;  // NC12H26
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 4.888847308845322e+06;  // OH
  sms[4] *= 2.519076112874398e+06;  // HO2
  sms[5] *= 4.124237409798234e+07;  // H2
  sms[6] *= 4.615299815794193e+06;  // H2O
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 2.598431970171023e+06;  // O2
  sms[9] *= 5.927470320206203e+06;  // CH2
  sms[10] *= 5.927470320206203e+06; // CH2*
  sms[11] *= 5.530071578419182e+06; // CH3
  sms[12] *= 5.182610869633635e+06; // CH4
  sms[13] *= 2.865277627042952e+06; // HCO
  sms[14] *= 2.769087663409458e+06; // CH2O
  sms[15] *= 2.679146297013998e+06; // CH3O
  sms[16] *= 2.968390795484913e+06; // CO
  sms[17] *= 1.889264154639560e+06; // CO2
  sms[18] *= 3.193203248388218e+06; // C2H2
  sms[19] *= 3.074193085170909e+06; // C2H3
  sms[20] *= 2.963735160103101e+06; // C2H4
  sms[21] *= 2.860939583701480e+06; // C2H5
  sms[22] *= 2.765035789209591e+06; // C2H6
  sms[23] *= 1.931574542491170e+06; // CH2CHO
  sms[24] *= 2.024313446340233e+06; // aC3H5
  sms[25] *= 1.975823440068734e+06; // C3H6
  sms[26] *= 1.929602130045543e+06; // nC3H7
  sms[27] *= 1.483030575441146e+06; // C2H3CHO
  sms[28] *= 1.508976881697503e+06; // C4H7
  sms[29] *= 1.481867580051551e+06; // C4H81
  sms[30] *= 1.455715144294635e+06; // pC4H9
  sms[31] *= 1.202780768462864e+06; // C5H9
  sms[32] *= 1.185494064041241e+06; // C5H10
  sms[33] *= 1.168697218019094e+06; // PXC5H11
  sms[34] *= 9.879117200343669e+05; // C6H12
  sms[35] *= 9.762196334569965e+05; // PXC6H13
  sms[36] *= 8.467814743151718e+05; // C7H14
  sms[37] *= 8.381768216935230e+05; // PXC7H15
  sms[38] *= 7.409337900257753e+05; // C8H16
  sms[39] *= 7.343374742239490e+05; // PXC8H17
  sms[40] *= 6.586078133562447e+05; // C9H18
  sms[41] *= 6.533907488470221e+05; // PXC9H19
  sms[42] *= 5.927470320206203e+05; // C10H20
  sms[43] *= 5.885178596917596e+05; // PXC10H21
  sms[44] *= 4.910154382014764e+05; // PXC12H25
  sms[45] *= 4.910154382014764e+05; // SXC12H25
  sms[46] *= 4.910154382014764e+05; // S3XC12H25
  sms[47] *= 4.939558600171835e+05; // C12H24
  sms[48] *= 4.129768349552099e+05; // C12H25O2
  sms[49] *= 4.129768349552099e+05; // C12OOH
  sms[50] *= 3.563422571724457e+05; // O2C12H24OOH
  sms[51] *= 3.843576267747116e+05; // OC12H23OOH
  sms[52] *= 2.967966951578939e+06; // N2
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* /*sc_qss*/,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 4: H + O2 (+M) <=> HO2 (+M)
  qf[0] = sc[1] * sc[8];
  qr[0] = sc[4];

  // reaction 17: 2 OH (+M) <=> H2O2 (+M)
  qf[1] = (sc[3] * sc[3]);
  qr[1] = sc[7];

  // reaction 37: CO + H2 (+M) <=> CH2O (+M)
  qf[2] = sc[5] * sc[16];
  qr[2] = sc[14];

  // reaction 38: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc[13];
  qr[3] = sc[14];

  // reaction 39: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc[9];
  qr[4] = sc[11];

  // reaction 58: CH2O + H (+M) <=> CH3O (+M)
  qf[5] = sc[1] * sc[14];
  qr[5] = sc[15];

  // reaction 64: CH3 + H (+M) <=> CH4 (+M)
  qf[6] = sc[1] * sc[11];
  qr[6] = sc[12];

  // reaction 77: 2 CH3 (+M) <=> C2H6 (+M)
  qf[7] = (sc[11] * sc[11]);
  qr[7] = sc[22];

  // reaction 90: C2H3 (+M) <=> C2H2 + H (+M)
  qf[8] = sc[19];
  qr[8] = sc[1] * sc[18];

  // reaction 95: C2H3 + H (+M) <=> C2H4 (+M)
  qf[9] = sc[1] * sc[19];
  qr[9] = sc[20];

  // reaction 107: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[10] = sc[11] * sc[19];
  qr[10] = sc[25];

  // reaction 113: C2H4 + H (+M) <=> C2H5 (+M)
  qf[11] = sc[1] * sc[20];
  qr[11] = sc[21];

  // reaction 126: C2H5 + H (+M) <=> C2H6 (+M)
  qf[12] = sc[1] * sc[21];
  qr[12] = sc[22];

  // reaction 134: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  qf[13] = sc[19] * sc[21];
  qr[13] = sc[29];

  // reaction 141: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[14] = sc[1] * sc[24];
  qr[14] = sc[25];

  // reaction 148: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  qf[15] = sc[11] * sc[24];
  qr[15] = sc[29];

  // reaction 149: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[16] = sc[1] * sc[25];
  qr[16] = sc[26];

  // reaction 168: C4H7 + H (+M) <=> C4H81 (+M)
  qf[17] = sc[1] * sc[28];
  qr[17] = sc[29];

  // reaction 172: C4H81 + H (+M) <=> pC4H9 (+M)
  qf[18] = sc[1] * sc[29];
  qr[18] = sc[30];

  // reaction 192: C5H10 + H (+M) <=> PXC5H11 (+M)
  qf[19] = sc[1] * sc[32];
  qr[19] = sc[33];

  // reaction 196: C6H12 + H (+M) <=> PXC6H13 (+M)
  qf[20] = sc[1] * sc[34];
  qr[20] = sc[35];

  // reaction 200: C7H14 + H (+M) <=> PXC7H15 (+M)
  qf[21] = sc[1] * sc[36];
  qr[21] = sc[37];

  // reaction 204: C8H16 + H (+M) <=> PXC8H17 (+M)
  qf[22] = sc[1] * sc[38];
  qr[22] = sc[39];

  // reaction 208: C9H18 + H (+M) <=> PXC9H19 (+M)
  qf[23] = sc[1] * sc[40];
  qr[23] = sc[41];

  // reaction 212: C10H20 + H (+M) <=> PXC10H21 (+M)
  qf[24] = sc[1] * sc[42];
  qr[24] = sc[43];

  // reaction 28: CO + O (+M) <=> CO2 (+M)
  qf[25] = sc[2] * sc[16];
  qr[25] = sc[17];

  // reaction 18: 2 H + M <=> H2 + M
  qf[26] = (sc[1] * sc[1]);
  qr[26] = sc[5];

  // reaction 19: H + OH + M <=> H2O + M
  qf[27] = sc[1] * sc[3];
  qr[27] = sc[6];

  // reaction 20: 2 O + M <=> O2 + M
  qf[28] = (sc[2] * sc[2]);
  qr[28] = sc[8];

  // reaction 21: 2 H + H2 <=> H2 + H2
  qf[29] = (sc[1] * sc[1]) * sc[5];
  qr[29] = (sc[5] * sc[5]);

  // reaction 22: 2 H + H2O <=> H2 + H2O
  qf[30] = (sc[1] * sc[1]) * sc[6];
  qr[30] = sc[5] * sc[6];

  // reaction 23: 2 H + CO2 <=> H2 + CO2
  qf[31] = (sc[1] * sc[1]) * sc[17];
  qr[31] = sc[5] * sc[17];

  // reaction 24: H + O + M <=> OH + M
  qf[32] = sc[1] * sc[2];
  qr[32] = sc[3];

  // reaction 30: HCO + M <=> CO + H + M
  qf[33] = sc[13];
  qr[33] = sc[1] * sc[16];

  // reaction 36: HCO + H2O <=> CO + H + H2O
  qf[34] = sc[6] * sc[13];
  qr[34] = sc[1] * sc[6] * sc[16];

  // reaction 0: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[8];
  qr[35] = sc[2] * sc[3];

  // reaction 1: H2 + O <=> H + OH
  qf[36] = sc[2] * sc[5];
  qr[36] = sc[1] * sc[3];

  // reaction 2: H2 + OH <=> H + H2O
  qf[37] = sc[3] * sc[5];
  qr[37] = sc[1] * sc[6];

  // reaction 3: 2 OH <=> H2O + O
  qf[38] = (sc[3] * sc[3]);
  qr[38] = sc[2] * sc[6];

  // reaction 5: H + HO2 <=> 2 OH
  qf[39] = sc[1] * sc[4];
  qr[39] = (sc[3] * sc[3]);

  // reaction 6: H2 + O2 <=> H + HO2
  qf[40] = sc[5] * sc[8];
  qr[40] = sc[1] * sc[4];

  // reaction 7: HO2 + OH <=> H2O + O2
  qf[41] = sc[3] * sc[4];
  qr[41] = sc[6] * sc[8];

  // reaction 8: H + HO2 <=> H2O + O
  qf[42] = sc[1] * sc[4];
  qr[42] = sc[2] * sc[6];

  // reaction 9: HO2 + O <=> O2 + OH
  qf[43] = sc[2] * sc[4];
  qr[43] = sc[3] * sc[8];

  // reaction 10: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[4] * sc[4]);
  qr[44] = sc[7] * sc[8];

  // reaction 11: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[4] * sc[4]);
  qr[45] = sc[7] * sc[8];

  // reaction 12: H + H2O2 <=> H2O + OH
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[3] * sc[6];

  // reaction 13: H + H2O2 <=> H2 + HO2
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 14: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[3] * sc[4];

  // reaction 15: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[3] * sc[7];
  qr[49] = sc[4] * sc[6];

  // reaction 16: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[3] * sc[7];
  qr[50] = sc[4] * sc[6];

  // reaction 25: CO + OH <=> CO2 + H
  qf[51] = sc[3] * sc[16];
  qr[51] = sc[1] * sc[17];

  // reaction 26: CO + OH <=> CO2 + H
  qf[52] = sc[3] * sc[16];
  qr[52] = sc[1] * sc[17];

  // reaction 27: CO + HO2 <=> CO2 + OH
  qf[53] = sc[4] * sc[16];
  qr[53] = sc[3] * sc[17];

  // reaction 29: CO + O2 <=> CO2 + O
  qf[54] = sc[8] * sc[16];
  qr[54] = sc[2] * sc[17];

  // reaction 31: H + HCO <=> CO + H2
  qf[55] = sc[1] * sc[13];
  qr[55] = sc[5] * sc[16];

  // reaction 32: HCO + O <=> CO + OH
  qf[56] = sc[2] * sc[13];
  qr[56] = sc[3] * sc[16];

  // reaction 33: HCO + O <=> CO2 + H
  qf[57] = sc[2] * sc[13];
  qr[57] = sc[1] * sc[17];

  // reaction 34: HCO + OH <=> CO + H2O
  qf[58] = sc[3] * sc[13];
  qr[58] = sc[6] * sc[16];

  // reaction 35: HCO + O2 <=> CO + HO2
  qf[59] = sc[8] * sc[13];
  qr[59] = sc[4] * sc[16];

  // reaction 40: CH2 + O <=> H + HCO
  qf[60] = sc[2] * sc[9];
  qr[60] = sc[1] * sc[13];

  // reaction 41: CH2 + OH <=> CH2O + H
  qf[61] = sc[3] * sc[9];
  qr[61] = sc[1] * sc[14];

  // reaction 42: CH2 + H2 <=> CH3 + H
  qf[62] = sc[5] * sc[9];
  qr[62] = sc[1] * sc[11];

  // reaction 43: CH2 + O2 <=> HCO + OH
  qf[63] = sc[8] * sc[9];
  qr[63] = sc[3] * sc[13];

  // reaction 44: CH2 + O2 <=> CO2 + 2 H
  qf[64] = sc[8] * sc[9];
  qr[64] = (sc[1] * sc[1]) * sc[17];

  // reaction 45: CH2 + HO2 <=> CH2O + OH
  qf[65] = sc[4] * sc[9];
  qr[65] = sc[3] * sc[14];

  // reaction 46: 2 CH2 <=> C2H2 + H2
  qf[66] = (sc[9] * sc[9]);
  qr[66] = sc[5] * sc[18];

  // reaction 47: CH2* + N2 <=> CH2 + N2
  qf[67] = sc[10] * sc[52];
  qr[67] = sc[9] * sc[52];

  // reaction 48: CH2* + O <=> CO + H2
  qf[68] = sc[2] * sc[10];
  qr[68] = sc[5] * sc[16];

  // reaction 49: CH2* + O <=> H + HCO
  qf[69] = sc[2] * sc[10];
  qr[69] = sc[1] * sc[13];

  // reaction 50: CH2* + OH <=> CH2O + H
  qf[70] = sc[3] * sc[10];
  qr[70] = sc[1] * sc[14];

  // reaction 51: CH2* + H2 <=> CH3 + H
  qf[71] = sc[5] * sc[10];
  qr[71] = sc[1] * sc[11];

  // reaction 52: CH2* + O2 <=> CO + H + OH
  qf[72] = sc[8] * sc[10];
  qr[72] = sc[1] * sc[3] * sc[16];

  // reaction 53: CH2* + O2 <=> CO + H2O
  qf[73] = sc[8] * sc[10];
  qr[73] = sc[6] * sc[16];

  // reaction 54: CH2* + H2O <=> CH2 + H2O
  qf[74] = sc[6] * sc[10];
  qr[74] = sc[6] * sc[9];

  // reaction 55: CH2* + CO <=> CH2 + CO
  qf[75] = sc[10] * sc[16];
  qr[75] = sc[9] * sc[16];

  // reaction 56: CH2* + CO2 <=> CH2 + CO2
  qf[76] = sc[10] * sc[17];
  qr[76] = sc[9] * sc[17];

  // reaction 57: CH2* + CO2 <=> CH2O + CO
  qf[77] = sc[10] * sc[17];
  qr[77] = sc[14] * sc[16];

  // reaction 59: CH2O + H <=> H2 + HCO
  qf[78] = sc[1] * sc[14];
  qr[78] = sc[5] * sc[13];

  // reaction 60: CH2O + O <=> HCO + OH
  qf[79] = sc[2] * sc[14];
  qr[79] = sc[3] * sc[13];

  // reaction 61: CH2O + OH <=> H2O + HCO
  qf[80] = sc[3] * sc[14];
  qr[80] = sc[6] * sc[13];

  // reaction 62: CH2O + O2 <=> HCO + HO2
  qf[81] = sc[8] * sc[14];
  qr[81] = sc[4] * sc[13];

  // reaction 63: CH2O + HO2 <=> H2O2 + HCO
  qf[82] = sc[4] * sc[14];
  qr[82] = sc[7] * sc[13];

  // reaction 65: CH3 + O <=> CH2O + H
  qf[83] = sc[2] * sc[11];
  qr[83] = sc[1] * sc[14];

  // reaction 66: CH3 + OH <=> CH2 + H2O
  qf[84] = sc[3] * sc[11];
  qr[84] = sc[6] * sc[9];

  // reaction 67: CH3 + OH <=> CH2* + H2O
  qf[85] = sc[3] * sc[11];
  qr[85] = sc[6] * sc[10];

  // reaction 68: CH3 + O2 <=> CH3O + O
  qf[86] = sc[8] * sc[11];
  qr[86] = sc[2] * sc[15];

  // reaction 69: CH3 + O2 <=> CH2O + OH
  qf[87] = sc[8] * sc[11];
  qr[87] = sc[3] * sc[14];

  // reaction 70: CH3 + HO2 <=> CH4 + O2
  qf[88] = sc[4] * sc[11];
  qr[88] = sc[8] * sc[12];

  // reaction 71: CH3 + HO2 <=> CH3O + OH
  qf[89] = sc[4] * sc[11];
  qr[89] = sc[3] * sc[15];

  // reaction 72: CH3 + H2O2 <=> CH4 + HO2
  qf[90] = sc[7] * sc[11];
  qr[90] = sc[4] * sc[12];

  // reaction 73: CH3 + HCO <=> CH4 + CO
  qf[91] = sc[11] * sc[13];
  qr[91] = sc[12] * sc[16];

  // reaction 74: CH2O + CH3 <=> CH4 + HCO
  qf[92] = sc[11] * sc[14];
  qr[92] = sc[12] * sc[13];

  // reaction 75: CH2 + CH3 <=> C2H4 + H
  qf[93] = sc[9] * sc[11];
  qr[93] = sc[1] * sc[20];

  // reaction 76: CH2* + CH3 <=> C2H4 + H
  qf[94] = sc[10] * sc[11];
  qr[94] = sc[1] * sc[20];

  // reaction 78: 2 CH3 <=> C2H5 + H
  qf[95] = (sc[11] * sc[11]);
  qr[95] = sc[1] * sc[21];

  // reaction 79: CH3O + H <=> CH2O + H2
  qf[96] = sc[1] * sc[15];
  qr[96] = sc[5] * sc[14];

  // reaction 80: CH3O + H <=> CH3 + OH
  qf[97] = sc[1] * sc[15];
  qr[97] = sc[3] * sc[11];

  // reaction 81: CH3O + H <=> CH2* + H2O
  qf[98] = sc[1] * sc[15];
  qr[98] = sc[6] * sc[10];

  // reaction 82: CH3O + O <=> CH2O + OH
  qf[99] = sc[2] * sc[15];
  qr[99] = sc[3] * sc[14];

  // reaction 83: CH3O + OH <=> CH2O + H2O
  qf[100] = sc[3] * sc[15];
  qr[100] = sc[6] * sc[14];

  // reaction 84: CH3O + O2 <=> CH2O + HO2
  qf[101] = sc[8] * sc[15];
  qr[101] = sc[4] * sc[14];

  // reaction 85: CH4 + H <=> CH3 + H2
  qf[102] = sc[1] * sc[12];
  qr[102] = sc[5] * sc[11];

  // reaction 86: CH4 + O <=> CH3 + OH
  qf[103] = sc[2] * sc[12];
  qr[103] = sc[3] * sc[11];

  // reaction 87: CH4 + OH <=> CH3 + H2O
  qf[104] = sc[3] * sc[12];
  qr[104] = sc[6] * sc[11];

  // reaction 88: CH2 + CH4 <=> 2 CH3
  qf[105] = sc[9] * sc[12];
  qr[105] = (sc[11] * sc[11]);

  // reaction 89: CH2* + CH4 <=> 2 CH3
  qf[106] = sc[10] * sc[12];
  qr[106] = (sc[11] * sc[11]);

  // reaction 91: C2H2 + O <=> CH2 + CO
  qf[107] = sc[2] * sc[18];
  qr[107] = sc[9] * sc[16];

  // reaction 92: C2H2 + OH <=> CH3 + CO
  qf[108] = sc[3] * sc[18];
  qr[108] = sc[11] * sc[16];

  // reaction 93: C2H2 + HCO <=> C2H3 + CO
  qf[109] = sc[13] * sc[18];
  qr[109] = sc[16] * sc[19];

  // reaction 94: C2H2 + CH3 <=> aC3H5
  qf[110] = sc[11] * sc[18];
  qr[110] = sc[24];

  // reaction 96: C2H3 + H <=> C2H2 + H2
  qf[111] = sc[1] * sc[19];
  qr[111] = sc[5] * sc[18];

  // reaction 97: C2H3 + O <=> CH3 + CO
  qf[112] = sc[2] * sc[19];
  qr[112] = sc[11] * sc[16];

  // reaction 98: C2H3 + OH <=> C2H2 + H2O
  qf[113] = sc[3] * sc[19];
  qr[113] = sc[6] * sc[18];

  // reaction 99: C2H3 + O2 <=> C2H2 + HO2
  qf[114] = sc[8] * sc[19];
  qr[114] = sc[4] * sc[18];

  // reaction 100: C2H3 + O2 <=> CH2CHO + O
  qf[115] = sc[8] * sc[19];
  qr[115] = sc[2] * sc[23];

  // reaction 101: C2H3 + O2 <=> CH2O + HCO
  qf[116] = sc[8] * sc[19];
  qr[116] = sc[13] * sc[14];

  // reaction 102: C2H3 + HO2 <=> CH2CHO + OH
  qf[117] = sc[4] * sc[19];
  qr[117] = sc[3] * sc[23];

  // reaction 103: C2H3 + H2O2 <=> C2H4 + HO2
  qf[118] = sc[7] * sc[19];
  qr[118] = sc[4] * sc[20];

  // reaction 104: C2H3 + HCO <=> C2H4 + CO
  qf[119] = sc[13] * sc[19];
  qr[119] = sc[16] * sc[20];

  // reaction 105: C2H3 + HCO <=> C2H3CHO
  qf[120] = sc[13] * sc[19];
  qr[120] = sc[27];

  // reaction 106: C2H3 + CH3 <=> C2H2 + CH4
  qf[121] = sc[11] * sc[19];
  qr[121] = sc[12] * sc[18];

  // reaction 108: C2H3 + CH3 <=> H + aC3H5
  qf[122] = sc[11] * sc[19];
  qr[122] = sc[1] * sc[24];

  // reaction 109: 2 C2H3 <=> C2H2 + C2H4
  qf[123] = (sc[19] * sc[19]);
  qr[123] = sc[18] * sc[20];

  // reaction 110: CH2CHO <=> CH3 + CO
  qf[124] = sc[23];
  qr[124] = sc[11] * sc[16];

  // reaction 111: CH2CHO + H <=> CH3 + HCO
  qf[125] = sc[1] * sc[23];
  qr[125] = sc[11] * sc[13];

  // reaction 112: CH2CHO + O2 <=> CH2O + CO + OH
  qf[126] = sc[8] * sc[23];
  qr[126] = sc[3] * sc[14] * sc[16];

  // reaction 114: C2H4 + H <=> C2H3 + H2
  qf[127] = sc[1] * sc[20];
  qr[127] = sc[5] * sc[19];

  // reaction 115: C2H4 + O <=> C2H3 + OH
  qf[128] = sc[2] * sc[20];
  qr[128] = sc[3] * sc[19];

  // reaction 116: C2H4 + O <=> CH3 + HCO
  qf[129] = sc[2] * sc[20];
  qr[129] = sc[11] * sc[13];

  // reaction 117: C2H4 + O <=> CH2 + CH2O
  qf[130] = sc[2] * sc[20];
  qr[130] = sc[9] * sc[14];

  // reaction 118: C2H4 + OH <=> C2H3 + H2O
  qf[131] = sc[3] * sc[20];
  qr[131] = sc[6] * sc[19];

  // reaction 119: C2H4 + HCO <=> C2H5 + CO
  qf[132] = sc[13] * sc[20];
  qr[132] = sc[16] * sc[21];

  // reaction 120: C2H4 + CH2 <=> H + aC3H5
  qf[133] = sc[9] * sc[20];
  qr[133] = sc[1] * sc[24];

  // reaction 121: C2H4 + CH2* <=> H + aC3H5
  qf[134] = sc[10] * sc[20];
  qr[134] = sc[1] * sc[24];

  // reaction 122: C2H4 + CH3 <=> C2H3 + CH4
  qf[135] = sc[11] * sc[20];
  qr[135] = sc[12] * sc[19];

  // reaction 123: nC3H7 <=> C2H4 + CH3
  qf[136] = sc[26];
  qr[136] = sc[11] * sc[20];

  // reaction 124: C2H4 + O2 <=> C2H3 + HO2
  qf[137] = sc[8] * sc[20];
  qr[137] = sc[4] * sc[19];

  // reaction 125: C2H3 + C2H4 <=> C4H7
  qf[138] = sc[19] * sc[20];
  qr[138] = sc[28];

  // reaction 127: C2H5 + H <=> C2H4 + H2
  qf[139] = sc[1] * sc[21];
  qr[139] = sc[5] * sc[20];

  // reaction 128: C2H5 + O <=> CH2O + CH3
  qf[140] = sc[2] * sc[21];
  qr[140] = sc[11] * sc[14];

  // reaction 129: C2H5 + O2 <=> C2H4 + HO2
  qf[141] = sc[8] * sc[21];
  qr[141] = sc[4] * sc[20];

  // reaction 130: C2H5 + HO2 <=> C2H6 + O2
  qf[142] = sc[4] * sc[21];
  qr[142] = sc[8] * sc[22];

  // reaction 131: C2H5 + HO2 <=> C2H4 + H2O2
  qf[143] = sc[4] * sc[21];
  qr[143] = sc[7] * sc[20];

  // reaction 132: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[144] = sc[4] * sc[21];
  qr[144] = sc[3] * sc[11] * sc[14];

  // reaction 133: C2H5 + H2O2 <=> C2H6 + HO2
  qf[145] = sc[7] * sc[21];
  qr[145] = sc[4] * sc[22];

  // reaction 135: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[146] = sc[19] * sc[21];
  qr[146] = sc[11] * sc[24];

  // reaction 136: C2H6 + H <=> C2H5 + H2
  qf[147] = sc[1] * sc[22];
  qr[147] = sc[5] * sc[21];

  // reaction 137: C2H6 + O <=> C2H5 + OH
  qf[148] = sc[2] * sc[22];
  qr[148] = sc[3] * sc[21];

  // reaction 138: C2H6 + OH <=> C2H5 + H2O
  qf[149] = sc[3] * sc[22];
  qr[149] = sc[6] * sc[21];

  // reaction 139: C2H6 + CH2* <=> C2H5 + CH3
  qf[150] = sc[10] * sc[22];
  qr[150] = sc[11] * sc[21];

  // reaction 140: C2H6 + CH3 <=> C2H5 + CH4
  qf[151] = sc[11] * sc[22];
  qr[151] = sc[12] * sc[21];

  // reaction 142: O + aC3H5 <=> C2H3CHO + H
  qf[152] = sc[2] * sc[24];
  qr[152] = sc[1] * sc[27];

  // reaction 143: OH + aC3H5 <=> C2H3CHO + 2 H
  qf[153] = sc[3] * sc[24];
  qr[153] = (sc[1] * sc[1]) * sc[27];

  // reaction 144: O2 + aC3H5 <=> C2H3CHO + OH
  qf[154] = sc[8] * sc[24];
  qr[154] = sc[3] * sc[27];

  // reaction 145: HO2 + aC3H5 <=> C3H6 + O2
  qf[155] = sc[4] * sc[24];
  qr[155] = sc[8] * sc[25];

  // reaction 146: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[156] = sc[4] * sc[24];
  qr[156] = sc[3] * sc[14] * sc[19];

  // reaction 147: HCO + aC3H5 <=> C3H6 + CO
  qf[157] = sc[13] * sc[24];
  qr[157] = sc[16] * sc[25];

  // reaction 150: C3H6 + H <=> C2H4 + CH3
  qf[158] = sc[1] * sc[25];
  qr[158] = sc[11] * sc[20];

  // reaction 151: C3H6 + H <=> H2 + aC3H5
  qf[159] = sc[1] * sc[25];
  qr[159] = sc[5] * sc[24];

  // reaction 152: C3H6 + O <=> C2H3CHO + 2 H
  qf[160] = sc[2] * sc[25];
  qr[160] = (sc[1] * sc[1]) * sc[27];

  // reaction 153: C3H6 + O <=> C2H5 + HCO
  qf[161] = sc[2] * sc[25];
  qr[161] = sc[13] * sc[21];

  // reaction 154: C3H6 + O <=> OH + aC3H5
  qf[162] = sc[2] * sc[25];
  qr[162] = sc[3] * sc[24];

  // reaction 155: C3H6 + OH <=> H2O + aC3H5
  qf[163] = sc[3] * sc[25];
  qr[163] = sc[6] * sc[24];

  // reaction 156: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[164] = sc[4] * sc[25];
  qr[164] = sc[7] * sc[24];

  // reaction 157: C3H6 + CH3 <=> CH4 + aC3H5
  qf[165] = sc[11] * sc[25];
  qr[165] = sc[12] * sc[24];

  // reaction 158: C2H3CHO + H <=> C2H4 + HCO
  qf[166] = sc[1] * sc[27];
  qr[166] = sc[13] * sc[20];

  // reaction 159: C2H3CHO + O <=> C2H3 + CO + OH
  qf[167] = sc[2] * sc[27];
  qr[167] = sc[3] * sc[16] * sc[19];

  // reaction 160: C2H3CHO + OH <=> C2H3 + CO + H2O
  qf[168] = sc[3] * sc[27];
  qr[168] = sc[6] * sc[16] * sc[19];

  // reaction 161: H + nC3H7 <=> C2H5 + CH3
  qf[169] = sc[1] * sc[26];
  qr[169] = sc[11] * sc[21];

  // reaction 162: H + nC3H7 <=> C3H6 + H2
  qf[170] = sc[1] * sc[26];
  qr[170] = sc[5] * sc[25];

  // reaction 163: O + nC3H7 <=> C2H5 + CH2O
  qf[171] = sc[2] * sc[26];
  qr[171] = sc[14] * sc[21];

  // reaction 164: OH + nC3H7 <=> C3H6 + H2O
  qf[172] = sc[3] * sc[26];
  qr[172] = sc[6] * sc[25];

  // reaction 165: O2 + nC3H7 <=> C3H6 + HO2
  qf[173] = sc[8] * sc[26];
  qr[173] = sc[4] * sc[25];

  // reaction 166: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[174] = sc[4] * sc[26];
  qr[174] = sc[3] * sc[14] * sc[21];

  // reaction 167: CH3 + nC3H7 <=> C3H6 + CH4
  qf[175] = sc[11] * sc[26];
  qr[175] = sc[12] * sc[25];

  // reaction 169: C4H7 + H <=> CH3 + aC3H5
  qf[176] = sc[1] * sc[28];
  qr[176] = sc[11] * sc[24];

  // reaction 170: C4H7 + HO2 <=> CH2O + OH + aC3H5
  qf[177] = sc[4] * sc[28];
  qr[177] = sc[3] * sc[14] * sc[24];

  // reaction 171: C4H7 + HCO <=> C4H81 + CO
  qf[178] = sc[13] * sc[28];
  qr[178] = sc[16] * sc[29];

  // reaction 173: C4H81 + H <=> C2H4 + C2H5
  qf[179] = sc[1] * sc[29];
  qr[179] = sc[20] * sc[21];

  // reaction 174: C4H81 + H <=> C3H6 + CH3
  qf[180] = sc[1] * sc[29];
  qr[180] = sc[11] * sc[25];

  // reaction 175: C4H81 + H <=> C4H7 + H2
  qf[181] = sc[1] * sc[29];
  qr[181] = sc[5] * sc[28];

  // reaction 176: C4H81 + O <=> HCO + nC3H7
  qf[182] = sc[2] * sc[29];
  qr[182] = sc[13] * sc[26];

  // reaction 177: C4H81 + O <=> C4H7 + OH
  qf[183] = sc[2] * sc[29];
  qr[183] = sc[3] * sc[28];

  // reaction 178: C4H81 + O <=> C4H7 + OH
  qf[184] = sc[2] * sc[29];
  qr[184] = sc[3] * sc[28];

  // reaction 179: C4H81 + OH <=> C4H7 + H2O
  qf[185] = sc[3] * sc[29];
  qr[185] = sc[6] * sc[28];

  // reaction 180: C4H81 + O2 <=> C4H7 + HO2
  qf[186] = sc[8] * sc[29];
  qr[186] = sc[4] * sc[28];

  // reaction 181: C4H81 + HO2 <=> C4H7 + H2O2
  qf[187] = sc[4] * sc[29];
  qr[187] = sc[7] * sc[28];

  // reaction 182: C4H81 + CH3 <=> C4H7 + CH4
  qf[188] = sc[11] * sc[29];
  qr[188] = sc[12] * sc[28];

  // reaction 183: H + pC4H9 <=> 2 C2H5
  qf[189] = sc[1] * sc[30];
  qr[189] = (sc[21] * sc[21]);

  // reaction 184: H + pC4H9 <=> C4H81 + H2
  qf[190] = sc[1] * sc[30];
  qr[190] = sc[5] * sc[29];

  // reaction 185: O + pC4H9 <=> CH2O + nC3H7
  qf[191] = sc[2] * sc[30];
  qr[191] = sc[14] * sc[26];

  // reaction 186: OH + pC4H9 <=> C4H81 + H2O
  qf[192] = sc[3] * sc[30];
  qr[192] = sc[6] * sc[29];

  // reaction 187: O2 + pC4H9 <=> C4H81 + HO2
  qf[193] = sc[8] * sc[30];
  qr[193] = sc[4] * sc[29];

  // reaction 188: HO2 + pC4H9 <=> CH2O + OH + nC3H7
  qf[194] = sc[4] * sc[30];
  qr[194] = sc[3] * sc[14] * sc[26];

  // reaction 189: CH3 + pC4H9 <=> C4H81 + CH4
  qf[195] = sc[11] * sc[30];
  qr[195] = sc[12] * sc[29];

  // reaction 190: C5H9 => C2H4 + aC3H5
  qf[196] = sc[31];
  qr[196] = 0.0;

  // reaction 191: C5H9 => C2H3 + C3H6
  qf[197] = sc[31];
  qr[197] = 0.0;

  // reaction 193: C5H10 + H <=> C2H4 + nC3H7
  qf[198] = sc[1] * sc[32];
  qr[198] = sc[20] * sc[26];

  // reaction 194: C5H10 + H <=> C2H5 + C3H6
  qf[199] = sc[1] * sc[32];
  qr[199] = sc[21] * sc[25];

  // reaction 195: C2H4 + nC3H7 <=> PXC5H11
  qf[200] = sc[20] * sc[26];
  qr[200] = sc[33];

  // reaction 197: C6H12 + H <=> C2H4 + pC4H9
  qf[201] = sc[1] * sc[34];
  qr[201] = sc[20] * sc[30];

  // reaction 198: C6H12 + H <=> C3H6 + nC3H7
  qf[202] = sc[1] * sc[34];
  qr[202] = sc[25] * sc[26];

  // reaction 199: C2H4 + pC4H9 <=> PXC6H13
  qf[203] = sc[20] * sc[30];
  qr[203] = sc[35];

  // reaction 201: C7H14 + H <=> C2H4 + PXC5H11
  qf[204] = sc[1] * sc[36];
  qr[204] = sc[20] * sc[33];

  // reaction 202: C7H14 + H <=> C3H6 + pC4H9
  qf[205] = sc[1] * sc[36];
  qr[205] = sc[25] * sc[30];

  // reaction 203: C2H4 + PXC5H11 <=> PXC7H15
  qf[206] = sc[20] * sc[33];
  qr[206] = sc[37];

  // reaction 205: C8H16 + H <=> C2H4 + PXC6H13
  qf[207] = sc[1] * sc[38];
  qr[207] = sc[20] * sc[35];

  // reaction 206: C8H16 + H <=> C3H6 + PXC5H11
  qf[208] = sc[1] * sc[38];
  qr[208] = sc[25] * sc[33];

  // reaction 207: C2H4 + PXC6H13 <=> PXC8H17
  qf[209] = sc[20] * sc[35];
  qr[209] = sc[39];

  // reaction 209: C9H18 + H <=> C2H4 + PXC7H15
  qf[210] = sc[1] * sc[40];
  qr[210] = sc[20] * sc[37];

  // reaction 210: C9H18 + H <=> C3H6 + PXC6H13
  qf[211] = sc[1] * sc[40];
  qr[211] = sc[25] * sc[35];

  // reaction 211: C2H4 + PXC7H15 <=> PXC9H19
  qf[212] = sc[20] * sc[37];
  qr[212] = sc[41];

  // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
  qf[213] = sc[1] * sc[42];
  qr[213] = sc[20] * sc[39];

  // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
  qf[214] = sc[1] * sc[42];
  qr[214] = sc[25] * sc[37];

  // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
  qf[215] = sc[20] * sc[39];
  qr[215] = sc[43];

  // reaction 216: C12H24 <=> C5H9 + PXC7H15
  qf[216] = sc[47];
  qr[216] = sc[31] * sc[37];

  // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
  qf[217] = sc[20] * sc[43];
  qr[217] = sc[44];

  // reaction 218: PXC12H25 <=> S3XC12H25
  qf[218] = sc[44];
  qr[218] = sc[46];

  // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
  qf[219] = sc[25] * sc[41];
  qr[219] = sc[45];

  // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
  qf[220] = sc[29] * sc[39];
  qr[220] = sc[45];

  // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
  qf[221] = sc[32] * sc[37];
  qr[221] = sc[46];

  // reaction 222: C10H20 + C2H5 <=> S3XC12H25
  qf[222] = sc[21] * sc[42];
  qr[222] = sc[46];

  // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
  qf[223] = sc[34] * sc[35];
  qr[223] = sc[46];

  // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
  qf[224] = sc[26] * sc[40];
  qr[224] = sc[46];

  // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
  qf[225] = sc[33] * sc[36];
  qr[225] = sc[46];

  // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
  qf[226] = sc[30] * sc[38];
  qr[226] = sc[46];

  // reaction 227: C2H5 + PXC10H21 <=> NC12H26
  qf[227] = sc[21] * sc[43];
  qr[227] = sc[0];

  // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
  qf[228] = sc[26] * sc[41];
  qr[228] = sc[0];

  // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
  qf[229] = sc[30] * sc[39];
  qr[229] = sc[0];

  // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
  qf[230] = sc[33] * sc[37];
  qr[230] = sc[0];

  // reaction 231: 2 PXC6H13 <=> NC12H26
  qf[231] = (sc[35] * sc[35]);
  qr[231] = sc[0];

  // reaction 232: H + NC12H26 <=> H2 + PXC12H25
  qf[232] = sc[0] * sc[1];
  qr[232] = sc[5] * sc[44];

  // reaction 233: H + NC12H26 <=> H2 + SXC12H25
  qf[233] = sc[0] * sc[1];
  qr[233] = sc[5] * sc[45];

  // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
  qf[234] = sc[0] * sc[1];
  qr[234] = sc[5] * sc[46];

  // reaction 235: NC12H26 + O <=> OH + PXC12H25
  qf[235] = sc[0] * sc[2];
  qr[235] = sc[3] * sc[44];

  // reaction 236: NC12H26 + O <=> OH + SXC12H25
  qf[236] = sc[0] * sc[2];
  qr[236] = sc[3] * sc[45];

  // reaction 237: NC12H26 + O <=> OH + S3XC12H25
  qf[237] = sc[0] * sc[2];
  qr[237] = sc[3] * sc[46];

  // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
  qf[238] = sc[0] * sc[3];
  qr[238] = sc[6] * sc[44];

  // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
  qf[239] = sc[0] * sc[3];
  qr[239] = sc[6] * sc[45];

  // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
  qf[240] = sc[0] * sc[3];
  qr[240] = sc[6] * sc[46];

  // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
  qf[241] = sc[0] * sc[8];
  qr[241] = sc[4] * sc[44];

  // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
  qf[242] = sc[0] * sc[8];
  qr[242] = sc[4] * sc[45];

  // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
  qf[243] = sc[0] * sc[8];
  qr[243] = sc[4] * sc[46];

  // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
  qf[244] = sc[0] * sc[4];
  qr[244] = sc[7] * sc[44];

  // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
  qf[245] = sc[0] * sc[4];
  qr[245] = sc[7] * sc[45];

  // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
  qf[246] = sc[0] * sc[4];
  qr[246] = sc[7] * sc[46];

  // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
  qf[247] = sc[0] * sc[11];
  qr[247] = sc[12] * sc[44];

  // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
  qf[248] = sc[0] * sc[11];
  qr[248] = sc[12] * sc[45];

  // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
  qf[249] = sc[0] * sc[11];
  qr[249] = sc[12] * sc[46];

  // reaction 250: O2 + PXC12H25 => C12H25O2
  qf[250] = sc[8] * sc[44];
  qr[250] = 0.0;

  // reaction 251: C12H25O2 => O2 + PXC12H25
  qf[251] = sc[48];
  qr[251] = 0.0;

  // reaction 252: O2 + SXC12H25 => C12H25O2
  qf[252] = sc[8] * sc[45];
  qr[252] = 0.0;

  // reaction 253: C12H25O2 => O2 + SXC12H25
  qf[253] = sc[48];
  qr[253] = 0.0;

  // reaction 254: O2 + S3XC12H25 => C12H25O2
  qf[254] = sc[8] * sc[46];
  qr[254] = 0.0;

  // reaction 255: C12H25O2 => O2 + S3XC12H25
  qf[255] = sc[48];
  qr[255] = 0.0;

  // reaction 256: C12H25O2 => C12OOH
  qf[256] = sc[48];
  qr[256] = 0.0;

  // reaction 257: C12OOH => C12H25O2
  qf[257] = sc[49];
  qr[257] = 0.0;

  // reaction 258: O2 + PXC12H25 => C12H24 + HO2
  qf[258] = sc[8] * sc[44];
  qr[258] = 0.0;

  // reaction 259: C12H24 + HO2 => O2 + PXC12H25
  qf[259] = sc[4] * sc[47];
  qr[259] = 0.0;

  // reaction 260: O2 + SXC12H25 => C12H24 + HO2
  qf[260] = sc[8] * sc[45];
  qr[260] = 0.0;

  // reaction 261: C12H24 + HO2 => O2 + SXC12H25
  qf[261] = sc[4] * sc[47];
  qr[261] = 0.0;

  // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
  qf[262] = sc[8] * sc[46];
  qr[262] = 0.0;

  // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
  qf[263] = sc[4] * sc[47];
  qr[263] = 0.0;

  // reaction 264: C12OOH + O2 => O2C12H24OOH
  qf[264] = sc[8] * sc[49];
  qr[264] = 0.0;

  // reaction 265: O2C12H24OOH => C12OOH + O2
  qf[265] = sc[50];
  qr[265] = 0.0;

  // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
  qf[266] = sc[50];
  qr[266] = sc[3] * sc[51];

  // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  qf[267] = sc[51];
  qr[267] = 0.0;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 53; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[53];
  gibbs(g_RT, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  H + O2 <=> O + OH
  k_f = 97560000 * exp(-(7468.87259020676) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8]));
  // reaction 1:  H2 + O <=> H + OH
  k_f = 0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5]));
  // reaction 2:  H2 + OH <=> H + H2O
  k_f = 102.4 * exp((1.6) * tc[0] - (1659.74946449039) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6]));
  // reaction 3:  2 OH <=> H2O + O
  k_f = 0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6]));
  // reaction 4:  H + O2 (+M) <=> HO2 (+M)
  k_f = 5116000 * exp((0.44) * tc[0]);
  Corr = mixture + (10.89) * sc[6] + (-0.15) * sc[8] +
         (0.0900000000000001) * sc[16] + (1.18) * sc[17];
  redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10((0.5) * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[8])) * (refC);
  // reaction 5:  H + HO2 <=> 2 OH
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4]));
  // reaction 6:  H2 + O2 <=> H + HO2
  k_f = 0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8]));
  // reaction 7:  HO2 + OH <=> H2O + O2
  k_f = 28910000 * exp(-(-252.569476734047) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8]));
  // reaction 8:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6]));
  // reaction 9:  HO2 + O <=> O2 + OH
  k_f = 40000000;
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8]));
  // reaction 10:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]));
  // reaction 11:  2 HO2 <=> H2O2 + O2
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]));
  // reaction 12:  H + H2O2 <=> H2O + OH
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7]));
  // reaction 13:  H + H2O2 <=> H2 + HO2
  k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 14:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7]));
  // reaction 15:  H2O2 + OH <=> H2O + HO2
  k_f = 2000000 * exp(-(214.873516298615) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 16:  H2O2 + OH <=> H2O + HO2
  k_f = 2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 17:  2 OH (+M) <=> H2O2 (+M)
  k_f = 111000000 * exp((-0.37) * tc[0]);
  Corr = mixture + sc[5] + (5) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  redP = Corr / k_f * 201000 * exp(-0.584 * tc[0] - (-1153.87581469022) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC);
  // reaction 18:  2 H + M <=> H2 + M
  k_f = 1780000 * exp((-1) * tc[0]);
  Corr = mixture + (-1) * sc[5] + (-1) * sc[6] + (-1) * sc[17];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 19:  H + OH + M <=> H2O + M
  k_f = 44000000000 * exp((-2) * tc[0]);
  Corr = mixture + sc[5] + (5.3) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 20:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr =
    mixture + (1.4) * sc[5] + (14.4) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[8])) * (refC);
  // reaction 21:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 22:  2 H + H2O <=> H2 + H2O
  k_f = 56240000 * exp((-1.25) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 23:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 24:  H + O + M <=> OH + M
  k_f = 9428000 * exp((-1) * tc[0]);
  Corr = mixture + sc[5] + (11) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC);
  // reaction 25:  CO + OH <=> CO2 + H
  k_f = 0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]));
  // reaction 26:  CO + OH <=> CO2 + H
  k_f = 5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]));
  // reaction 27:  CO + HO2 <=> CO2 + OH
  k_f = 0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[16] - g_RT[17]));
  // reaction 28:  CO + O (+M) <=> CO2 (+M)
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  Corr = mixture + sc[5] + (11) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  redP =
    Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[2] + g_RT[16] - g_RT[17])) * (refC);
  // reaction 29:  CO + O2 <=> CO2 + O
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[16] - g_RT[17]));
  // reaction 30:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[5] + (-1) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[16])) * (refCinv);
  // reaction 31:  H + HCO <=> CO + H2
  k_f = 120000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[16]));
  // reaction 32:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[13] - g_RT[16]));
  // reaction 33:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[17]));
  // reaction 34:  HCO + OH <=> CO + H2O
  k_f = 30200000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[13] - g_RT[16]));
  // reaction 35:  HCO + O2 <=> CO + HO2
  k_f = 12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[13] - g_RT[16]));
  // reaction 36:  HCO + H2O <=> CO + H + H2O
  k_f = 2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[16])) * (refCinv);
  // reaction 37:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[5] - g_RT[14] + g_RT[16])) * (refC);
  // reaction 38:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] + g_RT[13] - g_RT[14])) * (refC);
  // reaction 39:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] + g_RT[9] - g_RT[11])) * (refC);
  // reaction 40:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[13]));
  // reaction 41:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[9] - g_RT[14]));
  // reaction 42:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[9] - g_RT[11]));
  // reaction 43:  CH2 + O2 <=> HCO + OH
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[13]));
  // reaction 44:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-2.000000 * g_RT[1] + g_RT[8] + g_RT[9] - g_RT[17])) *
            (refCinv);
  // reaction 45:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT[14]));
  // reaction 46:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[5] + 2.000000 * g_RT[9] - g_RT[18]));
  // reaction 47:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[52] - g_RT[52]));
  // reaction 48:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[10] - g_RT[16]));
  // reaction 49:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[10] - g_RT[13]));
  // reaction 50:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[10] - g_RT[14]));
  // reaction 51:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[10] - g_RT[11]));
  // reaction 52:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[8] + g_RT[10] - g_RT[16])) *
            (refCinv);
  // reaction 53:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[6] + g_RT[8] + g_RT[10] - g_RT[16]));
  // reaction 54:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[6] - g_RT[6] - g_RT[9] + g_RT[10]));
  // reaction 55:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[16] - g_RT[16]));
  // reaction 56:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[17] - g_RT[17]));
  // reaction 57:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[10] - g_RT[14] - g_RT[16] + g_RT[17]));
  // reaction 58:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT[15])) * (refC);
  // reaction 59:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[13] + g_RT[14]));
  // reaction 60:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[13] + g_RT[14]));
  // reaction 61:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT[14]));
  // reaction 62:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[13] + g_RT[14]));
  // reaction 63:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14]));
  // reaction 64:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[11] - g_RT[12])) * (refC);
  // reaction 65:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[11] - g_RT[14]));
  // reaction 66:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[11]));
  // reaction 67:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT[11]));
  // reaction 68:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[11] - g_RT[15]));
  // reaction 69:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[11] - g_RT[14]));
  // reaction 70:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[11] - g_RT[12]));
  // reaction 71:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[15]));
  // reaction 72:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[11] - g_RT[12]));
  // reaction 73:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[13] - g_RT[16]));
  // reaction 74:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[13] + g_RT[14]));
  // reaction 75:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[1] + g_RT[9] + g_RT[11] - g_RT[20]));
  // reaction 76:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(-g_RT[1] + g_RT[10] + g_RT[11] - g_RT[20]));
  // reaction 77:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(2.000000 * g_RT[11] - g_RT[22])) * (refC);
  // reaction 78:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[11] - g_RT[21]));
  // reaction 79:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT[15]));
  // reaction 80:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[11] + g_RT[15]));
  // reaction 81:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[1] - g_RT[6] - g_RT[10] + g_RT[15]));
  // reaction 82:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[14] + g_RT[15]));
  // reaction 83:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[15]));
  // reaction 84:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT[15]));
  // reaction 85:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT[12]));
  // reaction 86:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT[12]));
  // reaction 87:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[12]));
  // reaction 88:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(g_RT[9] - 2.000000 * g_RT[11] + g_RT[12]));
  // reaction 89:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[10] - 2.000000 * g_RT[11] + g_RT[12]));
  // reaction 90:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[18] + g_RT[19])) * (refCinv);
  // reaction 91:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[16] + g_RT[18]));
  // reaction 92:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[16] + g_RT[18]));
  // reaction 93:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[18] - g_RT[19]));
  // reaction 94:  C2H2 + CH3 <=> aC3H5
  k_f = 2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[11] + g_RT[18] - g_RT[24])) * (refC);
  // reaction 95:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 96:  C2H3 + H <=> C2H2 + H2
  k_f = 90000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19]));
  // reaction 97:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT[16] + g_RT[19]));
  // reaction 98:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19]));
  // reaction 99:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[18] + g_RT[19]));
  // reaction 100:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[19] - g_RT[23]));
  // reaction 101:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(g_RT[8] - g_RT[13] - g_RT[14] + g_RT[19]));
  // reaction 102:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[19] - g_RT[23]));
  // reaction 103:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[19] - g_RT[20]));
  // reaction 104:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[19] - g_RT[20]));
  // reaction 105:  C2H3 + HCO <=> C2H3CHO
  k_f = 18000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(g_RT[13] + g_RT[19] - g_RT[27])) * (refC);
  // reaction 106:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[18] + g_RT[19]));
  // reaction 107:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(g_RT[11] + g_RT[19] - g_RT[25])) * (refC);
  // reaction 108:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[1] + g_RT[11] + g_RT[19] - g_RT[24]));
  // reaction 109:  2 C2H3 <=> C2H2 + C2H4
  k_f = 960000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20]));
  // reaction 110:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[23])) * (refCinv);
  // reaction 111:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[13] + g_RT[23]));
  // reaction 112:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[14] - g_RT[16] + g_RT[23])) *
             (refCinv);
  // reaction 113:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 4715000 * exp(-(380.059419015673) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.24) * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
    0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT[21])) * (refC);
  // reaction 114:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT[20]));
  // reaction 115:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[19] + g_RT[20]));
  // reaction 116:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT[13] + g_RT[20]));
  // reaction 117:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[14] + g_RT[20]));
  // reaction 118:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT[20]));
  // reaction 119:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[20] - g_RT[21]));
  // reaction 120:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(-g_RT[1] + g_RT[9] + g_RT[20] - g_RT[24]));
  // reaction 121:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[1] + g_RT[10] + g_RT[20] - g_RT[24]));
  // reaction 122:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[19] + g_RT[20]));
  // reaction 123:  nC3H7 <=> C2H4 + CH3
  k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(-g_RT[11] - g_RT[20] + g_RT[26])) * (refCinv);
  // reaction 124:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT[20]));
  // reaction 125:  C2H3 + C2H4 <=> C4H7
  k_f = 7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[19] + g_RT[20] - g_RT[28])) * (refC);
  // reaction 126:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] + g_RT[21] - g_RT[22])) * (refC);
  // reaction 127:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[20] + g_RT[21]));
  // reaction 128:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT[14] + g_RT[21]));
  // reaction 129:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[20] + g_RT[21]));
  // reaction 130:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[21] - g_RT[22]));
  // reaction 131:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[20] + g_RT[21]));
  // reaction 132:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[14] + g_RT[21])) *
             (refCinv);
  // reaction 133:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[21] - g_RT[22]));
  // reaction 134:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
  k_f = 15000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - (4521.1501339225) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.802) * exp(-tc[1] * 0.000439000834101585) +
    0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[19] + g_RT[21] - g_RT[29])) * (refC);
  // reaction 135:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(-g_RT[11] + g_RT[19] + g_RT[21] - g_RT[24]));
  // reaction 136:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22]));
  // reaction 137:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22]));
  // reaction 138:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22]));
  // reaction 139:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22]));
  // reaction 140:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[21] + g_RT[22]));
  // reaction 141:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] + g_RT[24] - g_RT[25])) * (refC);
  // reaction 142:  O + aC3H5 <=> C2H3CHO + H
  k_f = 60000000;
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[24] - g_RT[27]));
  // reaction 143:  OH + aC3H5 <=> C2H3CHO + 2 H
  k_f = 4.2e+26 * exp((-5.16) * tc[0] - (15159.905274033) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] + g_RT[24] - g_RT[27])) *
             (refCinv);
  // reaction 144:  O2 + aC3H5 <=> C2H3CHO + OH
  k_f = 18200000 * exp((-0.41) * tc[0] - (11503.0297636301) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[24] - g_RT[27]));
  // reaction 145:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[24] - g_RT[25]));
  // reaction 146:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[19] + g_RT[24])) *
             (refCinv);
  // reaction 147:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[24] - g_RT[25]));
  // reaction 148:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
  k_f = 100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - (3145.1041612795) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.896) * exp(-tc[1] * 0.00062266500622665) +
    0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(g_RT[11] + g_RT[24] - g_RT[29])) * (refC);
  // reaction 149:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[25] - g_RT[26])) * (refC);
  // reaction 150:  C3H6 + H <=> C2H4 + CH3
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[20] + g_RT[25]));
  // reaction 151:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[24] + g_RT[25]));
  // reaction 152:  C3H6 + O <=> C2H3CHO + 2 H
  k_f = 40 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(-2.000000 * g_RT[1] + g_RT[2] + g_RT[25] - g_RT[27])) *
             (refCinv);
  // reaction 153:  C3H6 + O <=> C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] - g_RT[13] - g_RT[21] + g_RT[25]));
  // reaction 154:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[24] + g_RT[25]));
  // reaction 155:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[24] + g_RT[25]));
  // reaction 156:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25]));
  // reaction 157:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[24] + g_RT[25]));
  // reaction 158:  C2H3CHO + H <=> C2H4 + HCO
  k_f = 108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(g_RT[1] - g_RT[13] - g_RT[20] + g_RT[27]));
  // reaction 159:  C2H3CHO + O <=> C2H3 + CO + OH
  k_f = 30000000 * exp(-(1781.38699694871) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[16] - g_RT[19] + g_RT[27])) *
             (refCinv);
  // reaction 160:  C2H3CHO + OH <=> C2H3 + CO + H2O
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[16] - g_RT[19] + g_RT[27])) *
             (refCinv);
  // reaction 161:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[21] + g_RT[26]));
  // reaction 162:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[25] + g_RT[26]));
  // reaction 163:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[2] - g_RT[14] - g_RT[21] + g_RT[26]));
  // reaction 164:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[25] + g_RT[26]));
  // reaction 165:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[25] + g_RT[26]));
  // reaction 166:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[21] + g_RT[26])) *
             (refCinv);
  // reaction 167:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[25] + g_RT[26]));
  // reaction 168:  C4H7 + H (+M) <=> C4H81 (+M)
  k_f = 36000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 3.01e+36 * exp(-9.32 * tc[0] - (2935.56474163841) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.502) * exp(-tc[1] * 0.00076103500761035) +
    0.498 * exp(-tc[1] * 0.00076103500761035) + exp(-50000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] + g_RT[28] - g_RT[29])) * (refC);
  // reaction 169:  C4H7 + H <=> CH3 + aC3H5
  k_f = 2e+15 * exp((-2) * tc[0] - (5535.38332385192) * invT);
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[24] + g_RT[28]));
  // reaction 170:  C4H7 + HO2 <=> CH2O + OH + aC3H5
  k_f = 24000000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[24] + g_RT[28])) *
             (refCinv);
  // reaction 171:  C4H7 + HCO <=> C4H81 + CO
  k_f = 60000000;
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[28] - g_RT[29]));
  // reaction 172:  C4H81 + H (+M) <=> pC4H9 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[29] - g_RT[30])) * (refC);
  // reaction 173:  C4H81 + H <=> C2H4 + C2H5
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[21] + g_RT[29]));
  // reaction 174:  C4H81 + H <=> C3H6 + CH3
  k_f = 3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[25] + g_RT[29]));
  // reaction 175:  C4H81 + H <=> C4H7 + H2
  k_f = 0.65 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[28] + g_RT[29]));
  // reaction 176:  C4H81 + O <=> HCO + nC3H7
  k_f = 330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[13] - g_RT[26] + g_RT[29]));
  // reaction 177:  C4H81 + O <=> C4H7 + OH
  k_f = 15000000 * exp(-(2898.52799503519) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]));
  // reaction 178:  C4H81 + O <=> C4H7 + OH
  k_f = 26000000 * exp(-(2249.3784961471) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]));
  // reaction 179:  C4H81 + OH <=> C4H7 + H2O
  k_f = 0.0007 * exp((2.66) * tc[0] - (265.195182879087) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[28] + g_RT[29]));
  // reaction 180:  C4H81 + O2 <=> C4H7 + HO2
  k_f = 20000000 * exp(-(25628.8247894344) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[28] + g_RT[29]));
  // reaction 181:  C4H81 + HO2 <=> C4H7 + H2O2
  k_f = 1000000 * exp(-(7216.12698763968) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29]));
  // reaction 182:  C4H81 + CH3 <=> C4H7 + CH4
  k_f = 4.5e-07 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[28] + g_RT[29]));
  // reaction 183:  H + pC4H9 <=> 2 C2H5
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[21] + g_RT[30]));
  // reaction 184:  H + pC4H9 <=> C4H81 + H2
  k_f = 1800000;
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[29] + g_RT[30]));
  // reaction 185:  O + pC4H9 <=> CH2O + nC3H7
  k_f = 96000000;
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(g_RT[2] - g_RT[14] - g_RT[26] + g_RT[30]));
  // reaction 186:  OH + pC4H9 <=> C4H81 + H2O
  k_f = 24000000;
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[29] + g_RT[30]));
  // reaction 187:  O2 + pC4H9 <=> C4H81 + HO2
  k_f = 270000;
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[29] + g_RT[30]));
  // reaction 188:  HO2 + pC4H9 <=> CH2O + OH + nC3H7
  k_f = 24000000;
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[26] + g_RT[30])) *
             (refCinv);
  // reaction 189:  CH3 + pC4H9 <=> C4H81 + CH4
  k_f = 11000000;
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[29] + g_RT[30]));
  // reaction 190:  C5H9 => C2H4 + aC3H5
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(-g_RT[20] - g_RT[24] + g_RT[31])) * (refCinv);
  // reaction 191:  C5H9 => C2H3 + C3H6
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(-g_RT[19] - g_RT[25] + g_RT[31])) * (refCinv);
  // reaction 192:  C5H10 + H (+M) <=> PXC5H11 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[32] - g_RT[33])) * (refC);
  // reaction 193:  C5H10 + H <=> C2H4 + nC3H7
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[26] + g_RT[32]));
  // reaction 194:  C5H10 + H <=> C2H5 + C3H6
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[1] - g_RT[21] - g_RT[25] + g_RT[32]));
  // reaction 195:  C2H4 + nC3H7 <=> PXC5H11
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[20] + g_RT[26] - g_RT[33])) * (refC);
  // reaction 196:  C6H12 + H (+M) <=> PXC6H13 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[1] + g_RT[34] - g_RT[35])) * (refC);
  // reaction 197:  C6H12 + H <=> C2H4 + pC4H9
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[30] + g_RT[34]));
  // reaction 198:  C6H12 + H <=> C3H6 + nC3H7
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[1] - g_RT[25] - g_RT[26] + g_RT[34]));
  // reaction 199:  C2H4 + pC4H9 <=> PXC6H13
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(g_RT[20] + g_RT[30] - g_RT[35])) * (refC);
  // reaction 200:  C7H14 + H (+M) <=> PXC7H15 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(g_RT[1] + g_RT[36] - g_RT[37])) * (refC);
  // reaction 201:  C7H14 + H <=> C2H4 + PXC5H11
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[33] + g_RT[36]));
  // reaction 202:  C7H14 + H <=> C3H6 + pC4H9
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(g_RT[1] - g_RT[25] - g_RT[30] + g_RT[36]));
  // reaction 203:  C2H4 + PXC5H11 <=> PXC7H15
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(g_RT[20] + g_RT[33] - g_RT[37])) * (refC);
  // reaction 204:  C8H16 + H (+M) <=> PXC8H17 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[22] *= Corr * k_f;
  qr[22] *= Corr * k_f * exp(-(g_RT[1] + g_RT[38] - g_RT[39])) * (refC);
  // reaction 205:  C8H16 + H <=> C2H4 + PXC6H13
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[35] + g_RT[38]));
  // reaction 206:  C8H16 + H <=> C3H6 + PXC5H11
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(g_RT[1] - g_RT[25] - g_RT[33] + g_RT[38]));
  // reaction 207:  C2H4 + PXC6H13 <=> PXC8H17
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[209] *= k_f;
  qr[209] *= k_f * exp(-(g_RT[20] + g_RT[35] - g_RT[39])) * (refC);
  // reaction 208:  C9H18 + H (+M) <=> PXC9H19 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(g_RT[1] + g_RT[40] - g_RT[41])) * (refC);
  // reaction 209:  C9H18 + H <=> C2H4 + PXC7H15
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[37] + g_RT[40]));
  // reaction 210:  C9H18 + H <=> C3H6 + PXC6H13
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f * exp(-(g_RT[1] - g_RT[25] - g_RT[35] + g_RT[40]));
  // reaction 211:  C2H4 + PXC7H15 <=> PXC9H19
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(g_RT[20] + g_RT[37] - g_RT[41])) * (refC);
  // reaction 212:  C10H20 + H (+M) <=> PXC10H21 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[1] + g_RT[42] - g_RT[43])) * (refC);
  // reaction 213:  C10H20 + H <=> C2H4 + PXC8H17
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[213] *= k_f;
  qr[213] *= k_f * exp(-(g_RT[1] - g_RT[20] - g_RT[39] + g_RT[42]));
  // reaction 214:  C10H20 + H <=> C3H6 + PXC7H15
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(g_RT[1] - g_RT[25] - g_RT[37] + g_RT[42]));
  // reaction 215:  C2H4 + PXC8H17 <=> PXC10H21
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(g_RT[20] + g_RT[39] - g_RT[43])) * (refC);
  // reaction 216:  C12H24 <=> C5H9 + PXC7H15
  k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(-g_RT[31] - g_RT[37] + g_RT[47])) * (refCinv);
  // reaction 217:  C2H4 + PXC10H21 <=> PXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(g_RT[20] + g_RT[43] - g_RT[44])) * (refC);
  // reaction 218:  PXC12H25 <=> S3XC12H25
  k_f = 3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(g_RT[44] - g_RT[46]));
  // reaction 219:  C3H6 + PXC9H19 <=> SXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(g_RT[25] + g_RT[41] - g_RT[45])) * (refC);
  // reaction 220:  C4H81 + PXC8H17 <=> SXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(g_RT[29] + g_RT[39] - g_RT[45])) * (refC);
  // reaction 221:  C5H10 + PXC7H15 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(g_RT[32] + g_RT[37] - g_RT[46])) * (refC);
  // reaction 222:  C10H20 + C2H5 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(g_RT[21] + g_RT[42] - g_RT[46])) * (refC);
  // reaction 223:  C6H12 + PXC6H13 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(g_RT[34] + g_RT[35] - g_RT[46])) * (refC);
  // reaction 224:  C9H18 + nC3H7 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[224] *= k_f;
  qr[224] *= k_f * exp(-(g_RT[26] + g_RT[40] - g_RT[46])) * (refC);
  // reaction 225:  C7H14 + PXC5H11 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[225] *= k_f;
  qr[225] *= k_f * exp(-(g_RT[33] + g_RT[36] - g_RT[46])) * (refC);
  // reaction 226:  C8H16 + pC4H9 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[226] *= k_f;
  qr[226] *= k_f * exp(-(g_RT[30] + g_RT[38] - g_RT[46])) * (refC);
  // reaction 227:  C2H5 + PXC10H21 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[227] *= k_f;
  qr[227] *= k_f * exp(-(-g_RT[0] + g_RT[21] + g_RT[43])) * (refC);
  // reaction 228:  PXC9H19 + nC3H7 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[228] *= k_f;
  qr[228] *= k_f * exp(-(-g_RT[0] + g_RT[26] + g_RT[41])) * (refC);
  // reaction 229:  PXC8H17 + pC4H9 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[229] *= k_f;
  qr[229] *= k_f * exp(-(-g_RT[0] + g_RT[30] + g_RT[39])) * (refC);
  // reaction 230:  PXC5H11 + PXC7H15 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[230] *= k_f;
  qr[230] *= k_f * exp(-(-g_RT[0] + g_RT[33] + g_RT[37])) * (refC);
  // reaction 231:  2 PXC6H13 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[231] *= k_f;
  qr[231] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[35])) * (refC);
  // reaction 232:  H + NC12H26 <=> H2 + PXC12H25
  k_f = 1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
  qf[232] *= k_f;
  qr[232] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[44]));
  // reaction 233:  H + NC12H26 <=> H2 + SXC12H25
  k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[233] *= k_f;
  qr[233] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[45]));
  // reaction 234:  H + NC12H26 <=> H2 + S3XC12H25
  k_f = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[234] *= k_f;
  qr[234] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[46]));
  // reaction 235:  NC12H26 + O <=> OH + PXC12H25
  k_f = 0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
  qf[235] *= k_f;
  qr[235] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[44]));
  // reaction 236:  NC12H26 + O <=> OH + SXC12H25
  k_f = 0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[236] *= k_f;
  qr[236] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[45]));
  // reaction 237:  NC12H26 + O <=> OH + S3XC12H25
  k_f = 0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[237] *= k_f;
  qr[237] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[46]));
  // reaction 238:  NC12H26 + OH <=> H2O + PXC12H25
  k_f = 0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
  qf[238] *= k_f;
  qr[238] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[44]));
  // reaction 239:  NC12H26 + OH <=> H2O + SXC12H25
  k_f = 0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  qf[239] *= k_f;
  qr[239] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[45]));
  // reaction 240:  NC12H26 + OH <=> H2O + S3XC12H25
  k_f = 0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  qf[240] *= k_f;
  qr[240] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[46]));
  // reaction 241:  NC12H26 + O2 <=> HO2 + PXC12H25
  k_f = 40000000 * exp(-(25628.8247894344) * invT);
  qf[241] *= k_f;
  qr[241] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[44]));
  // reaction 242:  NC12H26 + O2 <=> HO2 + SXC12H25
  k_f = 80000000 * exp(-(23948.0811256466) * invT);
  qf[242] *= k_f;
  qr[242] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[45]));
  // reaction 243:  NC12H26 + O2 <=> HO2 + S3XC12H25
  k_f = 120000000 * exp(-(23948.0811256466) * invT);
  qf[243] *= k_f;
  qr[243] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[46]));
  // reaction 244:  HO2 + NC12H26 <=> H2O2 + PXC12H25
  k_f = 0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
  qf[244] *= k_f;
  qr[244] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[44]));
  // reaction 245:  HO2 + NC12H26 <=> H2O2 + SXC12H25
  k_f = 0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[245] *= k_f;
  qr[245] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[45]));
  // reaction 246:  HO2 + NC12H26 <=> H2O2 + S3XC12H25
  k_f = 0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[246] *= k_f;
  qr[246] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[46]));
  // reaction 247:  CH3 + NC12H26 <=> CH4 + PXC12H25
  k_f = 1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
  qf[247] *= k_f;
  qr[247] *= k_f * exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[44]));
  // reaction 248:  CH3 + NC12H26 <=> CH4 + SXC12H25
  k_f = 6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  qf[248] *= k_f;
  qr[248] *= k_f * exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[45]));
  // reaction 249:  CH3 + NC12H26 <=> CH4 + S3XC12H25
  k_f = 9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  qf[249] *= k_f;
  qr[249] *= k_f * exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[46]));
  // reaction 250:  O2 + PXC12H25 => C12H25O2
  k_f = 50000000;
  qf[250] *= k_f;
  qr[250] *= k_f * exp(-(g_RT[8] + g_RT[44] - g_RT[48])) * (refC);
  // reaction 251:  C12H25O2 => O2 + PXC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[251] *= k_f;
  qr[251] *= k_f * exp(-(-g_RT[8] - g_RT[44] + g_RT[48])) * (refCinv);
  // reaction 252:  O2 + SXC12H25 => C12H25O2
  k_f = 50000000;
  qf[252] *= k_f;
  qr[252] *= k_f * exp(-(g_RT[8] + g_RT[45] - g_RT[48])) * (refC);
  // reaction 253:  C12H25O2 => O2 + SXC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[253] *= k_f;
  qr[253] *= k_f * exp(-(-g_RT[8] - g_RT[45] + g_RT[48])) * (refCinv);
  // reaction 254:  O2 + S3XC12H25 => C12H25O2
  k_f = 50000000;
  qf[254] *= k_f;
  qr[254] *= k_f * exp(-(g_RT[8] + g_RT[46] - g_RT[48])) * (refC);
  // reaction 255:  C12H25O2 => O2 + S3XC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[255] *= k_f;
  qr[255] *= k_f * exp(-(-g_RT[8] - g_RT[46] + g_RT[48])) * (refCinv);
  // reaction 256:  C12H25O2 => C12OOH
  k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
  qf[256] *= k_f;
  qr[256] *= k_f * exp(-(g_RT[48] - g_RT[49]));
  // reaction 257:  C12OOH => C12H25O2
  k_f = 100000000000 * exp(-(5786.99165675428) * invT);
  qf[257] *= k_f;
  qr[257] *= k_f * exp(-(-g_RT[48] + g_RT[49]));
  // reaction 258:  O2 + PXC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[258] *= k_f;
  qr[258] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[44] - g_RT[47]));
  // reaction 259:  C12H24 + HO2 => O2 + PXC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[259] *= k_f;
  qr[259] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[44] + g_RT[47]));
  // reaction 260:  O2 + SXC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[260] *= k_f;
  qr[260] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[45] - g_RT[47]));
  // reaction 261:  C12H24 + HO2 => O2 + SXC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[261] *= k_f;
  qr[261] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[45] + g_RT[47]));
  // reaction 262:  O2 + S3XC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[262] *= k_f;
  qr[262] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[46] - g_RT[47]));
  // reaction 263:  C12H24 + HO2 => O2 + S3XC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[263] *= k_f;
  qr[263] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[46] + g_RT[47]));
  // reaction 264:  C12OOH + O2 => O2C12H24OOH
  k_f = 46000;
  qf[264] *= k_f;
  qr[264] *= k_f * exp(-(g_RT[8] + g_RT[49] - g_RT[50])) * (refC);
  // reaction 265:  O2C12H24OOH => C12OOH + O2
  k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
  qf[265] *= k_f;
  qr[265] *= k_f * exp(-(-g_RT[8] - g_RT[49] + g_RT[50])) * (refCinv);
  // reaction 266:  O2C12H24OOH <=> OC12H23OOH + OH
  k_f = 89000000000 * exp(-(8554.68331868023) * invT);
  qf[266] *= k_f;
  qr[266] *= k_f * exp(-(-g_RT[3] + g_RT[50] - g_RT[51])) * (refCinv);
  // reaction 267:  OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
  qf[267] *= k_f;
  qr[267] *= k_f *
             exp(
               -(-g_RT[3] - 3.000000 * g_RT[20] - g_RT[21] -
                 2.000000 * g_RT[23] + g_RT[51])) *
             ((refCinv * refCinv * refCinv * refCinv * refCinv * refCinv));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 53; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 53; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[53];
  gibbs(g_RT, tc);

  {
    // reaction 4:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (10.89) * sc[6] + (-0.15) * sc[8] +
                       (0.0900000000000001) * sc[16] + (1.18) * sc[17];
    const amrex::Real redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[8])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 17:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + sc[5] + (5) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * tc[0] - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 37:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] - g_RT[14] + g_RT[16])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 38:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[13] - g_RT[14])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 39:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[9] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 58:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 64:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[11]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[11] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 77:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[11] * sc[11]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[11] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= 2.000000 * qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 90:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[1] - g_RT[18] + g_RT[19])) *
                           (refCinv) * (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 95:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 107:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[11] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[11] + g_RT[19] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 113:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 4715000 * exp(-380.059419015673 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.24 * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
      0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT[21])) * (refC) * (sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 126:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[21] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 134:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[21] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 141:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[24] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 148:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-tc[1] * 0.00062266500622665) +
      0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[11] * sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[11] + g_RT[24] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[24] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 149:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[25]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[25] - g_RT[26])) * (refC) * (sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 168:  C4H7 + H (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 36000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.01e+36 * exp(-9.32 * tc[0] - 2935.56474163841 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.502 * exp(-tc[1] * 0.00076103500761035) +
      0.498 * exp(-tc[1] * 0.00076103500761035) + exp(-50000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[28] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 172:  C4H81 + H (+M) <=> pC4H9 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[29]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[29] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 192:  C5H10 + H (+M) <=> PXC5H11 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[32]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[32] - g_RT[33])) * (refC) * (sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 196:  C6H12 + H (+M) <=> PXC6H13 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[34]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[34] - g_RT[35])) * (refC) * (sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[34] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 200:  C7H14 + H (+M) <=> PXC7H15 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[36]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[36] - g_RT[37])) * (refC) * (sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 204:  C8H16 + H (+M) <=> PXC8H17 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[38]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[38] - g_RT[39])) * (refC) * (sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 208:  C9H18 + H (+M) <=> PXC9H19 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[40]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[40] - g_RT[41])) * (refC) * (sc[41]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 212:  C10H20 + H (+M) <=> PXC10H21 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[12] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[42]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[42] - g_RT[43])) * (refC) * (sc[43]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[42] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 28:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 18:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (-1) * sc[5] + (-1) * sc[6] + (-1) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 19:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (5.3) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 20:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[5] + (14.4) * sc[6] +
                             (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 21:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * ((sc[5] * sc[5]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 22:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 23:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 24:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 30:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[5] + (-1) * sc[6] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[16])) *
                           (refCinv) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 36:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[13]);
    const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[16])) *
                           (refCinv) * (sc[1] * sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 0:  H + O2 <=> O + OH
    const amrex::Real k_f = 97560000 * exp(-(7468.87259020676) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8])) * (sc[2] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 1:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 2:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      102.4 * exp((1.6) * tc[0] - (1659.74946449039) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6])) * (sc[1] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[5] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 3:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 5:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4])) * ((sc[3] * sc[3]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += 2.000000 * qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 6:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 7:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 28910000 * exp(-(-252.569476734047) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 8:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 9:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 10:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 11:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 12:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7])) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 13:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 14:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 15:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 2000000 * exp(-(214.873516298615) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 16:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 25:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 26:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 27:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[16] - g_RT[17])) * (sc[3] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 29:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[16] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 31:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[1] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[16])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 32:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[13] - g_RT[16])) * (sc[3] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 33:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 34:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[13] - g_RT[16])) * (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 35:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[13] - g_RT[16])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 40:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 41:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[9] - g_RT[14])) * (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 42:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[9] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 43:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[13])) * (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 44:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[8] + g_RT[9] - g_RT[17])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 45:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT[14])) * (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 46:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + 2.000000 * g_RT[9] - g_RT[18])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= 2.000000 * qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 47:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[52]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[52] - g_RT[52])) *
                           (sc[9] * sc[52]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[52] -= qdot;
    wdot[52] += qdot;
  }

  {
    // reaction 48:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[10] - g_RT[16])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 49:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[10] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 50:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[10] - g_RT[14])) * (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 51:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[8] + g_RT[10] - g_RT[16])) *
      (refCinv) * (sc[1] * sc[3] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 53:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[8] + g_RT[10] - g_RT[16])) * (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 54:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[6] - g_RT[9] + g_RT[10])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 55:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[16] - g_RT[16])) *
                           (sc[9] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[16] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 56:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[10] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[17] - g_RT[17])) *
                           (sc[9] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[17] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 57:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[10] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[14] - g_RT[16] + g_RT[17])) *
                           (sc[14] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 59:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[13] + g_RT[14])) * (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 60:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[13] + g_RT[14])) * (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 61:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT[14])) * (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 62:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[13] + g_RT[14])) * (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 63:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14])) * (sc[7] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 65:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[11] - g_RT[14])) * (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 66:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[11])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 67:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT[11])) * (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 68:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[11] - g_RT[15])) * (sc[2] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 69:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[11] - g_RT[14])) * (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 70:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[11] - g_RT[12])) * (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 71:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[15])) * (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 72:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[11] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 73:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[11] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] + g_RT[13] - g_RT[16])) *
                           (sc[12] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 74:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[13] + g_RT[14])) *
                           (sc[12] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 75:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[9] + g_RT[11] - g_RT[20])) * (sc[1] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 76:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[10] + g_RT[11] - g_RT[20])) *
                           (sc[1] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] -= qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 78:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[11] - g_RT[21])) *
                           (sc[1] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 79:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT[15])) * (sc[5] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 80:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[11] + g_RT[15])) * (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 81:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[6] - g_RT[10] + g_RT[15])) * (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 82:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[14] + g_RT[15])) * (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 83:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[15])) * (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 84:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT[15])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 85:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT[12])) * (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 86:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT[12])) * (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[12])) * (sc[6] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - 2.000000 * g_RT[11] + g_RT[12])) *
                           ((sc[11] * sc[11]));
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - 2.000000 * g_RT[11] + g_RT[12])) *
                           ((sc[11] * sc[11]));
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[16] + g_RT[18])) * (sc[9] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 92:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[11] - g_RT[16] + g_RT[18])) *
                           (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 93:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] + g_RT[18] - g_RT[19])) *
                           (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 94:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] + g_RT[18] - g_RT[24])) * (refC) * (sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[18] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 96:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 97:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] - g_RT[16] + g_RT[19])) *
                           (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 98:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19])) * (sc[6] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 99:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[18] + g_RT[19])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 100:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[19] - g_RT[23])) * (sc[2] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[19] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 101:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[13] - g_RT[14] + g_RT[19])) *
                           (sc[13] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[14] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 102:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[19] - g_RT[23])) * (sc[3] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[19] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 103:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[19] - g_RT[20])) * (sc[4] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 104:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc[13] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] + g_RT[19] - g_RT[20])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 105:  C2H3 + HCO <=> C2H3CHO
    const amrex::Real k_f = 18000000;
    const amrex::Real qf = k_f * (sc[13] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[13] + g_RT[19] - g_RT[27])) * (refC) * (sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 106:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[18] + g_RT[19])) *
                           (sc[12] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 108:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[11] + g_RT[19] - g_RT[24])) *
                           (sc[1] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[11] -= qdot;
    wdot[19] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 109:  2 C2H3 <=> C2H2 + C2H4
    const amrex::Real k_f = 960000;
    const amrex::Real qf = k_f * ((sc[19] * sc[19]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20])) *
                           (sc[18] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[19] -= 2.000000 * qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 110:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[23])) *
                           (refCinv) * (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 111:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[11] - g_RT[13] + g_RT[23])) *
                           (sc[11] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[13] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 112:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[8] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[14] - g_RT[16] + g_RT[23])) *
      (refCinv) * (sc[3] * sc[14] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
    wdot[16] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 114:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 115:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[19] + g_RT[20])) * (sc[3] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 116:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] - g_RT[13] + g_RT[20])) *
                           (sc[11] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[13] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 117:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[14] + g_RT[20])) * (sc[9] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 118:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT[20])) * (sc[6] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 119:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] + g_RT[20] - g_RT[21])) *
                           (sc[16] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 120:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[9] + g_RT[20] - g_RT[24])) * (sc[1] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[20] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 121:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[10] + g_RT[20] - g_RT[24])) *
                           (sc[1] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 122:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[19] + g_RT[20])) *
                           (sc[12] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 123:  nC3H7 <=> C2H4 + CH3
    const amrex::Real k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = k_f * exp(-(-g_RT[11] - g_RT[20] + g_RT[26])) *
                           (refCinv) * (sc[11] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 124:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 125:  C2H3 + C2H4 <=> C4H7
    const amrex::Real k_f =
      7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[19] + g_RT[20] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[20] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 127:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[20] + g_RT[21])) * (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 128:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] - g_RT[14] + g_RT[21])) *
                           (sc[11] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 129:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[20] + g_RT[21])) * (sc[4] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 130:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[21] - g_RT[22])) * (sc[8] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 131:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[20] + g_RT[21])) * (sc[7] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 132:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[14] + g_RT[21])) *
      (refCinv) * (sc[3] * sc[11] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 133:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[21] - g_RT[22])) * (sc[4] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 135:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[11] + g_RT[19] + g_RT[21] - g_RT[24])) *
                           (sc[11] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 136:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22])) * (sc[5] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 137:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22])) * (sc[3] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 138:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22])) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 139:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22])) *
                           (sc[11] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 140:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[21] + g_RT[22])) *
                           (sc[12] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 142:  O + aC3H5 <=> C2H3CHO + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[24] - g_RT[27])) * (sc[1] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 143:  OH + aC3H5 <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      4.2e+26 * exp((-5.16) * tc[0] - (15159.905274033) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] + g_RT[24] - g_RT[27])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 144:  O2 + aC3H5 <=> C2H3CHO + OH
    const amrex::Real k_f =
      18200000 * exp((-0.41) * tc[0] - (11503.0297636301) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[24] - g_RT[27])) * (sc[3] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 145:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[24] - g_RT[25])) * (sc[8] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 146:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[19] + g_RT[24])) *
      (refCinv) * (sc[3] * sc[14] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[14] += qdot;
    wdot[19] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 147:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[13] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] + g_RT[24] - g_RT[25])) *
                           (sc[16] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 150:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[11] - g_RT[20] + g_RT[25])) *
                           (sc[11] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[20] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 151:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[24] + g_RT[25])) * (sc[5] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 152:  C3H6 + O <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      40 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[2] + g_RT[25] - g_RT[27])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[25] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 153:  C3H6 + O <=> C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[13] - g_RT[21] + g_RT[25])) *
                           (sc[13] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] += qdot;
    wdot[21] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 154:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[24] + g_RT[25])) * (sc[3] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 155:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[24] + g_RT[25])) * (sc[6] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 156:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25])) * (sc[7] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 157:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[24] + g_RT[25])) *
                           (sc[12] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 158:  C2H3CHO + H <=> C2H4 + HCO
    const amrex::Real k_f =
      108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[13] - g_RT[20] + g_RT[27])) *
                           (sc[13] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[13] += qdot;
    wdot[20] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 159:  C2H3CHO + O <=> C2H3 + CO + OH
    const amrex::Real k_f = 30000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[16] - g_RT[19] + g_RT[27])) *
      (refCinv) * (sc[3] * sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 160:  C2H3CHO + OH <=> C2H3 + CO + H2O
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[16] - g_RT[19] + g_RT[27])) *
      (refCinv) * (sc[6] * sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 161:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[11] - g_RT[21] + g_RT[26])) *
                           (sc[11] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[21] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 162:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[25] + g_RT[26])) * (sc[5] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 163:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[14] - g_RT[21] + g_RT[26])) *
                           (sc[14] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[21] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 164:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[25] + g_RT[26])) * (sc[6] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 165:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[8] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[25] + g_RT[26])) * (sc[4] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 166:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[21] + g_RT[26])) *
      (refCinv) * (sc[3] * sc[14] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[14] += qdot;
    wdot[21] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 167:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[11] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[25] + g_RT[26])) *
                           (sc[12] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 169:  C4H7 + H <=> CH3 + aC3H5
    const amrex::Real k_f =
      2e+15 * exp((-2) * tc[0] - (5535.38332385192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[11] - g_RT[24] + g_RT[28])) *
                           (sc[11] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[24] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 170:  C4H7 + HO2 <=> CH2O + OH + aC3H5
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[24] + g_RT[28])) *
      (refCinv) * (sc[3] * sc[14] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[14] += qdot;
    wdot[24] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 171:  C4H7 + HCO <=> C4H81 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[13] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] + g_RT[28] - g_RT[29])) *
                           (sc[16] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 173:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[21] + g_RT[29])) *
                           (sc[20] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[21] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 174:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[11] - g_RT[25] + g_RT[29])) *
                           (sc[11] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[25] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 175:  C4H81 + H <=> C4H7 + H2
    const amrex::Real k_f =
      0.65 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[28] + g_RT[29])) * (sc[5] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 176:  C4H81 + O <=> HCO + nC3H7
    const amrex::Real k_f =
      330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[13] - g_RT[26] + g_RT[29])) *
                           (sc[13] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] += qdot;
    wdot[26] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 177:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 15000000 * exp(-(2898.52799503519) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29])) * (sc[3] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 178:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 26000000 * exp(-(2249.3784961471) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29])) * (sc[3] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 179:  C4H81 + OH <=> C4H7 + H2O
    const amrex::Real k_f =
      0.0007 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[28] + g_RT[29])) * (sc[6] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 180:  C4H81 + O2 <=> C4H7 + HO2
    const amrex::Real k_f = 20000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[28] + g_RT[29])) * (sc[4] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 181:  C4H81 + HO2 <=> C4H7 + H2O2
    const amrex::Real k_f = 1000000 * exp(-(7216.12698763968) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29])) * (sc[7] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 182:  C4H81 + CH3 <=> C4H7 + CH4
    const amrex::Real k_f =
      4.5e-07 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[28] + g_RT[29])) *
                           (sc[12] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 183:  H + pC4H9 <=> 2 C2H5
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - 2.000000 * g_RT[21] + g_RT[30])) *
                           ((sc[21] * sc[21]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[21] += 2.000000 * qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 184:  H + pC4H9 <=> C4H81 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[29] + g_RT[30])) * (sc[5] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 185:  O + pC4H9 <=> CH2O + nC3H7
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[14] - g_RT[26] + g_RT[30])) *
                           (sc[14] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[26] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 186:  OH + pC4H9 <=> C4H81 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[29] + g_RT[30])) * (sc[6] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 187:  O2 + pC4H9 <=> C4H81 + HO2
    const amrex::Real k_f = 270000;
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[29] + g_RT[30])) * (sc[4] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 188:  HO2 + pC4H9 <=> CH2O + OH + nC3H7
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[26] + g_RT[30])) *
      (refCinv) * (sc[3] * sc[14] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[14] += qdot;
    wdot[26] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 189:  CH3 + pC4H9 <=> C4H81 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[11] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] - g_RT[12] - g_RT[29] + g_RT[30])) *
                           (sc[12] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 190:  C5H9 => C2H4 + aC3H5
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[24] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 191:  C5H9 => C2H3 + C3H6
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[25] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 193:  C5H10 + H <=> C2H4 + nC3H7
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[26] + g_RT[32])) *
                           (sc[20] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[26] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 194:  C5H10 + H <=> C2H5 + C3H6
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[21] - g_RT[25] + g_RT[32])) *
                           (sc[21] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[21] += qdot;
    wdot[25] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 195:  C2H4 + nC3H7 <=> PXC5H11
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[26] - g_RT[33])) * (refC) * (sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[26] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 197:  C6H12 + H <=> C2H4 + pC4H9
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[30] + g_RT[34])) *
                           (sc[20] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 198:  C6H12 + H <=> C3H6 + nC3H7
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[25] - g_RT[26] + g_RT[34])) *
                           (sc[25] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[26] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 199:  C2H4 + pC4H9 <=> PXC6H13
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[30] - g_RT[35])) * (refC) * (sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[30] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 201:  C7H14 + H <=> C2H4 + PXC5H11
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[36]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[33] + g_RT[36])) *
                           (sc[20] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[33] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 202:  C7H14 + H <=> C3H6 + pC4H9
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[36]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[25] - g_RT[30] + g_RT[36])) *
                           (sc[25] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[30] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 203:  C2H4 + PXC5H11 <=> PXC7H15
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[33] - g_RT[37])) * (refC) * (sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[33] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 205:  C8H16 + H <=> C2H4 + PXC6H13
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[35] + g_RT[38])) *
                           (sc[20] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[35] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 206:  C8H16 + H <=> C3H6 + PXC5H11
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[25] - g_RT[33] + g_RT[38])) *
                           (sc[25] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[33] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 207:  C2H4 + PXC6H13 <=> PXC8H17
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[35] - g_RT[39])) * (refC) * (sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[35] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 209:  C9H18 + H <=> C2H4 + PXC7H15
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[40]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[37] + g_RT[40])) *
                           (sc[20] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[37] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 210:  C9H18 + H <=> C3H6 + PXC6H13
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[40]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[25] - g_RT[35] + g_RT[40])) *
                           (sc[25] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[35] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 211:  C2H4 + PXC7H15 <=> PXC9H19
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[37]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[37] - g_RT[41])) * (refC) * (sc[41]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[37] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 213:  C10H20 + H <=> C2H4 + PXC8H17
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[42]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[20] - g_RT[39] + g_RT[42])) *
                           (sc[20] * sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[39] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 214:  C10H20 + H <=> C3H6 + PXC7H15
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[42]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[25] - g_RT[37] + g_RT[42])) *
                           (sc[25] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[37] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 215:  C2H4 + PXC8H17 <=> PXC10H21
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[39]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[39] - g_RT[43])) * (refC) * (sc[43]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[39] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 216:  C12H24 <=> C5H9 + PXC7H15
    const amrex::Real k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = k_f * exp(-(-g_RT[31] - g_RT[37] + g_RT[47])) *
                           (refCinv) * (sc[31] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[37] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 217:  C2H4 + PXC10H21 <=> PXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[43]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[20] + g_RT[43] - g_RT[44])) * (refC) * (sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 218:  PXC12H25 <=> S3XC12H25
    const amrex::Real k_f =
      3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
    const amrex::Real qf = k_f * (sc[44]);
    const amrex::Real qr = k_f * exp(-(g_RT[44] - g_RT[46])) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[44] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 219:  C3H6 + PXC9H19 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[41]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[25] + g_RT[41] - g_RT[45])) * (refC) * (sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[41] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 220:  C4H81 + PXC8H17 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[29] * sc[39]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[29] + g_RT[39] - g_RT[45])) * (refC) * (sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[29] -= qdot;
    wdot[39] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 221:  C5H10 + PXC7H15 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[37]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[32] + g_RT[37] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[32] -= qdot;
    wdot[37] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 222:  C10H20 + C2H5 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[42]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] + g_RT[42] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[42] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 223:  C6H12 + PXC6H13 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[34] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[34] + g_RT[35] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[34] -= qdot;
    wdot[35] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 224:  C9H18 + nC3H7 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[40]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[26] + g_RT[40] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[40] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 225:  C7H14 + PXC5H11 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[33] + g_RT[36] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[33] -= qdot;
    wdot[36] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 226:  C8H16 + pC4H9 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[30] + g_RT[38] - g_RT[46])) * (refC) * (sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[30] -= qdot;
    wdot[38] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 227:  C2H5 + PXC10H21 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[21] * sc[43]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[21] + g_RT[43])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[21] -= qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 228:  PXC9H19 + nC3H7 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[26] * sc[41]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[26] + g_RT[41])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[26] -= qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 229:  PXC8H17 + pC4H9 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[30] * sc[39]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[30] + g_RT[39])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[30] -= qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 230:  PXC5H11 + PXC7H15 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[33] * sc[37]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[33] + g_RT[37])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[33] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 231:  2 PXC6H13 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * ((sc[35] * sc[35]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[35])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[35] -= 2.000000 * qdot;
  }

  {
    // reaction 232:  H + NC12H26 <=> H2 + PXC12H25
    const amrex::Real k_f =
      1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[44])) * (sc[5] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 233:  H + NC12H26 <=> H2 + SXC12H25
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[45])) * (sc[5] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 234:  H + NC12H26 <=> H2 + S3XC12H25
    const amrex::Real k_f = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[46])) * (sc[5] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 235:  NC12H26 + O <=> OH + PXC12H25
    const amrex::Real k_f =
      0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[44])) * (sc[3] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 236:  NC12H26 + O <=> OH + SXC12H25
    const amrex::Real k_f =
      0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[45])) * (sc[3] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 237:  NC12H26 + O <=> OH + S3XC12H25
    const amrex::Real k_f =
      0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[46])) * (sc[3] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 238:  NC12H26 + OH <=> H2O + PXC12H25
    const amrex::Real k_f =
      0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[44])) * (sc[6] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 239:  NC12H26 + OH <=> H2O + SXC12H25
    const amrex::Real k_f =
      0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[45])) * (sc[6] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 240:  NC12H26 + OH <=> H2O + S3XC12H25
    const amrex::Real k_f =
      0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[46])) * (sc[6] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 241:  NC12H26 + O2 <=> HO2 + PXC12H25
    const amrex::Real k_f = 40000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[44])) * (sc[4] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 242:  NC12H26 + O2 <=> HO2 + SXC12H25
    const amrex::Real k_f = 80000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[45])) * (sc[4] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 243:  NC12H26 + O2 <=> HO2 + S3XC12H25
    const amrex::Real k_f = 120000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[46])) * (sc[4] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 244:  HO2 + NC12H26 <=> H2O2 + PXC12H25
    const amrex::Real k_f =
      0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[44])) * (sc[7] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 245:  HO2 + NC12H26 <=> H2O2 + SXC12H25
    const amrex::Real k_f =
      0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[45])) * (sc[7] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 246:  HO2 + NC12H26 <=> H2O2 + S3XC12H25
    const amrex::Real k_f =
      0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[46])) * (sc[7] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 247:  CH3 + NC12H26 <=> CH4 + PXC12H25
    const amrex::Real k_f =
      1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[44])) *
                           (sc[12] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 248:  CH3 + NC12H26 <=> CH4 + SXC12H25
    const amrex::Real k_f =
      6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[45])) *
                           (sc[12] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 249:  CH3 + NC12H26 <=> CH4 + S3XC12H25
    const amrex::Real k_f =
      9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[46])) *
                           (sc[12] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 250:  O2 + PXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[44] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 251:  C12H25O2 => O2 + PXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[44] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 252:  O2 + SXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[45] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 253:  C12H25O2 => O2 + SXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[45] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 254:  O2 + S3XC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[46] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 255:  C12H25O2 => O2 + S3XC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[46] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 256:  C12H25O2 => C12OOH
    const amrex::Real k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 257:  C12OOH => C12H25O2
    const amrex::Real k_f = 100000000000 * exp(-(5786.99165675428) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 258:  O2 + PXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[44] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 259:  C12H24 + HO2 => O2 + PXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[44] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 260:  O2 + SXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[45] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 261:  C12H24 + HO2 => O2 + SXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[45] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 262:  O2 + S3XC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[46] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 263:  C12H24 + HO2 => O2 + S3XC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[46] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 264:  C12OOH + O2 => O2C12H24OOH
    const amrex::Real k_f = 46000;
    const amrex::Real qf = k_f * (sc[8] * sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[49] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 265:  O2C12H24OOH => C12OOH + O2
    const amrex::Real k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[49] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 266:  O2C12H24OOH <=> OC12H23OOH + OH
    const amrex::Real k_f = 89000000000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[50] - g_RT[51])) *
                           (refCinv) * (sc[3] * sc[51]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[50] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 267:  OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
    const amrex::Real k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[20] += 3.000000 * qdot;
    wdot[21] += qdot;
    wdot[23] += 2.000000 * qdot;
    wdot[51] -= qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 53; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[53]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 53; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 53; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[53]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 53; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[53]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 53; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[53];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 14.027000;   // CH2
  XW += x[10] * 14.027000;  // CH2*
  XW += x[11] * 15.035000;  // CH3
  XW += x[12] * 16.043000;  // CH4
  XW += x[13] * 29.018000;  // HCO
  XW += x[14] * 30.026000;  // CH2O
  XW += x[15] * 31.034000;  // CH3O
  XW += x[16] * 28.010000;  // CO
  XW += x[17] * 44.009000;  // CO2
  XW += x[18] * 26.038000;  // C2H2
  XW += x[19] * 27.046000;  // C2H3
  XW += x[20] * 28.054000;  // C2H4
  XW += x[21] * 29.062000;  // C2H5
  XW += x[22] * 30.070000;  // C2H6
  XW += x[23] * 43.045000;  // CH2CHO
  XW += x[24] * 41.073000;  // aC3H5
  XW += x[25] * 42.081000;  // C3H6
  XW += x[26] * 43.089000;  // nC3H7
  XW += x[27] * 56.064000;  // C2H3CHO
  XW += x[28] * 55.100000;  // C4H7
  XW += x[29] * 56.108000;  // C4H81
  XW += x[30] * 57.116000;  // pC4H9
  XW += x[31] * 69.127000;  // C5H9
  XW += x[32] * 70.135000;  // C5H10
  XW += x[33] * 71.143000;  // PXC5H11
  XW += x[34] * 84.162000;  // C6H12
  XW += x[35] * 85.170000;  // PXC6H13
  XW += x[36] * 98.189000;  // C7H14
  XW += x[37] * 99.197000;  // PXC7H15
  XW += x[38] * 112.216000; // C8H16
  XW += x[39] * 113.224000; // PXC8H17
  XW += x[40] * 126.243000; // C9H18
  XW += x[41] * 127.251000; // PXC9H19
  XW += x[42] * 140.270000; // C10H20
  XW += x[43] * 141.278000; // PXC10H21
  XW += x[44] * 169.332000; // PXC12H25
  XW += x[45] * 169.332000; // SXC12H25
  XW += x[46] * 169.332000; // S3XC12H25
  XW += x[47] * 168.324000; // C12H24
  XW += x[48] * 201.330000; // C12H25O2
  XW += x[49] * 201.330000; // C12OOH
  XW += x[50] * 233.328000; // O2C12H24OOH
  XW += x[51] * 216.321000; // OC12H23OOH
  XW += x[52] * 28.014000;  // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 53; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 53; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // NC12H26
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // OH
  kcharge[4] = 0;  // HO2
  kcharge[5] = 0;  // H2
  kcharge[6] = 0;  // H2O
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // O2
  kcharge[9] = 0;  // CH2
  kcharge[10] = 0; // CH2*
  kcharge[11] = 0; // CH3
  kcharge[12] = 0; // CH4
  kcharge[13] = 0; // HCO
  kcharge[14] = 0; // CH2O
  kcharge[15] = 0; // CH3O
  kcharge[16] = 0; // CO
  kcharge[17] = 0; // CO2
  kcharge[18] = 0; // C2H2
  kcharge[19] = 0; // C2H3
  kcharge[20] = 0; // C2H4
  kcharge[21] = 0; // C2H5
  kcharge[22] = 0; // C2H6
  kcharge[23] = 0; // CH2CHO
  kcharge[24] = 0; // aC3H5
  kcharge[25] = 0; // C3H6
  kcharge[26] = 0; // nC3H7
  kcharge[27] = 0; // C2H3CHO
  kcharge[28] = 0; // C4H7
  kcharge[29] = 0; // C4H81
  kcharge[30] = 0; // pC4H9
  kcharge[31] = 0; // C5H9
  kcharge[32] = 0; // C5H10
  kcharge[33] = 0; // PXC5H11
  kcharge[34] = 0; // C6H12
  kcharge[35] = 0; // PXC6H13
  kcharge[36] = 0; // C7H14
  kcharge[37] = 0; // PXC7H15
  kcharge[38] = 0; // C8H16
  kcharge[39] = 0; // PXC8H17
  kcharge[40] = 0; // C9H18
  kcharge[41] = 0; // PXC9H19
  kcharge[42] = 0; // C10H20
  kcharge[43] = 0; // PXC10H21
  kcharge[44] = 0; // PXC12H25
  kcharge[45] = 0; // SXC12H25
  kcharge[46] = 0; // S3XC12H25
  kcharge[47] = 0; // C12H24
  kcharge[48] = 0; // C12H25O2
  kcharge[49] = 0; // C12OOH
  kcharge[50] = 0; // O2C12H24OOH
  kcharge[51] = 0; // OC12H23OOH
  kcharge[52] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[53];
  CKCHRG(kchrg);

  for (int id = 0; id < 53; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = +1.47237711e-01 - 1.88794054e-04 * tc[1] +
                 9.22323804e-08 * tc[2] - 1.61440892e-11 * tc[3];
    // species 47: C12H24
    species[47] = +1.43992360e-01 - 1.92276803e-04 * tc[1] +
                  9.90523419e-08 * tc[2] - 1.84959276e-11 * tc[3];
  } else {
    // species 0: NC12H26
    species[0] = +5.63550048e-02 - 3.82986400e-05 * tc[1] +
                 8.88074586e-09 * tc[2] - 6.84976600e-13 * tc[3];
    // species 47: C12H24
    species[47] = +5.26230753e-02 - 3.57248638e-05 * tc[1] +
                  8.27849589e-09 * tc[2] - 6.38249996e-13 * tc[3];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 3: OH
    species[3] = -3.22544939e-03 + 1.30552938e-05 * tc[1] -
                 1.73956093e-08 * tc[2] + 8.24949516e-12 * tc[3];
    // species 4: HO2
    species[4] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 5: H2
    species[5] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 6: H2O
    species[6] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 8: O2
    species[8] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 9: CH2
    species[9] = +9.68872143e-04 + 5.58979682e-06 * tc[1] -
                 1.15527346e-08 * tc[2] + 6.74966876e-12 * tc[3];
    // species 10: CH2*
    species[10] = -2.36661419e-03 + 1.64659244e-05 * tc[1] -
                  2.00644794e-08 * tc[2] + 7.77258948e-12 * tc[3];
    // species 11: CH3
    species[11] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                  2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 12: CH4
    species[12] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                  1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 13: HCO
    species[13] = -3.24392532e-03 + 2.75598892e-05 * tc[1] -
                  3.99432279e-08 * tc[2] + 1.73507546e-11 * tc[3];
    // species 14: CH2O
    species[14] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 15: CH3O
    species[15] = -2.80463306e-03 + 7.53101942e-05 * tc[1] -
                  1.41921627e-07 * tc[2] + 7.46353680e-11 * tc[3];
    // species 16: CO
    species[16] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 17: CO2
    species[17] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 18: C2H2
    species[18] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 19: C2H3
    species[19] = +1.51479162e-03 + 5.18418824e-05 * tc[1] -
                  1.07297354e-07 * tc[2] + 5.88603492e-11 * tc[3];
    // species 20: C2H4
    species[20] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 21: C2H5
    species[21] = -4.18658892e-03 + 9.94285614e-05 * tc[1] -
                  1.79737982e-07 * tc[2] + 9.22036016e-11 * tc[3];
    // species 22: C2H6
    species[22] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 23: CH2CHO
    species[23] = +1.07385740e-02 + 3.78298500e-06 * tc[1] -
                  2.14757493e-08 * tc[2] + 1.14695404e-11 * tc[3];
    // species 24: aC3H5
    species[24] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 25: C3H6
    species[25] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 26: nC3H7
    species[26] = +2.60089730e-02 + 4.70850320e-06 * tc[1] -
                  5.87853960e-08 * tc[2] + 3.74880828e-11 * tc[3];
    // species 27: C2H3CHO
    species[27] = +2.62310540e-02 - 1.85824610e-05 * tc[1] -
                  1.43511816e-08 * tc[2] + 1.33922172e-11 * tc[3];
    // species 28: C4H7
    species[28] = +3.96788570e-02 - 4.57961720e-05 * tc[1] +
                  6.40589190e-09 * tc[2] + 9.23855000e-12 * tc[3];
    // species 29: C4H81
    species[29] = +3.08533800e-02 + 1.01730494e-05 * tc[1] -
                  7.39646640e-08 * tc[2] + 4.44407720e-11 * tc[3];
    // species 30: pC4H9
    species[30] = +3.82974970e-02 - 1.45321018e-05 * tc[1] -
                  4.62856410e-08 * tc[2] + 3.47437740e-11 * tc[3];
    // species 31: C5H9
    species[31] = +4.04303890e-02 + 1.35604678e-05 * tc[1] -
                  1.01174226e-07 * tc[2] + 6.04668520e-11 * tc[3];
    // species 48: C12H25O2
    species[48] = +8.93873000e-02 + 2.90702000e-05 * tc[1] -
                  2.24775000e-07 * tc[2] + 1.34130000e-10 * tc[3];
    // species 49: C12OOH
    species[49] = +9.97913000e-02 - 3.61270000e-05 * tc[1] -
                  1.25530500e-07 * tc[2] + 8.91144000e-11 * tc[3];
    // species 50: O2C12H24OOH
    species[50] = +1.45020000e-01 - 1.99861600e-04 * tc[1] +
                  7.81266000e-08 * tc[2] + 4.77432000e-12 * tc[3];
    // species 51: OC12H23OOH
    species[51] = +6.50623000e-02 + 1.39011600e-04 * tc[1] -
                  3.80715000e-07 * tc[2] + 2.04396400e-10 * tc[3];
    // species 52: N2
    species[52] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
  } else {
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 3: OH
    species[3] = +1.05650448e-03 - 5.18165516e-07 * tc[1] +
                 9.15656022e-11 * tc[2] - 5.32783504e-15 * tc[3];
    // species 4: HO2
    species[4] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 5: H2
    species[5] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 6: H2O
    species[6] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 8: O2
    species[8] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 9: CH2
    species[9] = +3.65639292e-03 - 2.81789194e-06 * tc[1] +
                 7.80538647e-10 * tc[2] - 7.50910268e-14 * tc[3];
    // species 10: CH2*
    species[10] = +4.65588637e-03 - 4.02383894e-06 * tc[1] +
                  1.25371800e-09 * tc[2] - 1.35886546e-13 * tc[3];
    // species 11: CH3
    species[11] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                  1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 12: CH4
    species[12] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                  3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 13: HCO
    species[13] = +4.95695526e-03 - 4.96891226e-06 * tc[1] +
                  1.76748533e-09 * tc[2] - 2.13403484e-13 * tc[3];
    // species 14: CH2O
    species[14] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 15: CH3O
    species[15] = +7.44142474e-03 - 5.39410352e-06 * tc[1] +
                  1.31427151e-09 * tc[2] - 1.05414839e-13 * tc[3];
    // species 16: CO
    species[16] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 17: CO2
    species[17] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 18: C2H2
    species[18] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 19: C2H3
    species[19] = +1.03302292e-02 - 9.36164698e-06 * tc[1] +
                  3.05289864e-09 * tc[2] - 3.45042816e-13 * tc[3];
    // species 20: C2H4
    species[20] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 21: C2H5
    species[21] = +1.73972722e-02 - 1.59641334e-05 * tc[1] +
                  5.25653067e-09 * tc[2] - 5.98566304e-13 * tc[3];
    // species 22: C2H6
    species[22] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 23: CH2CHO
    species[23] = +8.13059140e-03 - 5.48724900e-06 * tc[1] +
                  1.22109123e-09 * tc[2] - 8.70406840e-14 * tc[3];
    // species 24: aC3H5
    species[24] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 25: C3H6
    species[25] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 26: nC3H7
    species[26] = +1.60314850e-02 - 1.05440476e-05 * tc[1] +
                  2.27665056e-09 * tc[2] - 1.55450876e-13 * tc[3];
    // species 27: C2H3CHO
    species[27] = +1.71142560e-02 - 1.49668322e-05 * tc[1] +
                  4.27567470e-09 * tc[2] - 3.66987364e-13 * tc[3];
    // species 28: C4H7
    species[28] = +2.26345580e-02 - 1.85090940e-05 * tc[1] +
                  5.04237810e-09 * tc[2] - 4.16344680e-13 * tc[3];
    // species 29: C4H81
    species[29] = +3.43505070e-02 - 3.17663940e-05 * tc[1] +
                  9.92689860e-09 * tc[2] - 1.01444180e-12 * tc[3];
    // species 30: pC4H9
    species[30] = +2.36910710e-02 - 1.51897730e-05 * tc[1] +
                  1.99281408e-09 * tc[2] + 2.19380544e-13 * tc[3];
    // species 31: C5H9
    species[31] = +2.27141380e-02 - 1.55820926e-05 * tc[1] +
                  3.56295660e-09 * tc[2] - 2.63729792e-13 * tc[3];
    // species 48: C12H25O2
    species[48] = +5.37539000e-02 - 3.36372000e-05 * tc[1] +
                  7.54101000e-09 * tc[2] - 5.88832000e-13 * tc[3];
    // species 49: C12OOH
    species[49] = +5.15917000e-02 - 3.14654000e-05 * tc[1] +
                  6.90918000e-09 * tc[2] - 5.30560000e-13 * tc[3];
    // species 50: O2C12H24OOH
    species[50] = +5.10590000e-02 - 3.08690000e-05 * tc[1] +
                  6.73881000e-09 * tc[2] - 5.15604000e-13 * tc[3];
    // species 51: OC12H23OOH
    species[51] = +6.16392000e-02 - 4.19672000e-05 * tc[1] +
                  9.99498000e-09 * tc[2] - 8.14360000e-13 * tc[3];
    // species 52: N2
    species[52] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                  3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 32: C5H10
    species[32] = +5.74218294e-02 - 7.48973780e-05 * tc[1] +
                  3.82094967e-08 * tc[2] - 7.18439156e-12 * tc[3];
    // species 34: C6H12
    species[34] = +6.98655426e-02 - 9.18816044e-05 * tc[1] +
                  4.70902029e-08 * tc[2] - 8.85184700e-12 * tc[3];
    // species 36: C7H14
    species[36] = +8.24611601e-02 - 1.09300822e-04 * tc[1] +
                  5.63586909e-08 * tc[2] - 1.06295193e-11 * tc[3];
    // species 38: C8H16
    species[38] = +9.46066357e-02 - 1.25477104e-04 * tc[1] +
                  6.45474927e-08 * tc[2] - 1.21087473e-11 * tc[3];
    // species 40: C9H18
    species[40] = +1.06958297e-01 - 1.42194649e-04 * tc[1] +
                  7.31913231e-08 * tc[2] - 1.37108619e-11 * tc[3];
    // species 42: C10H20
    species[42] = +1.19305598e-01 - 1.58897805e-04 * tc[1] +
                  8.18209788e-08 * tc[2] - 1.53087349e-11 * tc[3];
  } else {
    // species 32: C5H10
    species[32] = +2.24072471e-02 - 1.52669605e-05 * tc[1] +
                  3.54566898e-09 * tc[2] - 2.73754056e-13 * tc[3];
    // species 34: C6H12
    species[34] = +2.67377658e-02 - 1.82007355e-05 * tc[1] +
                  4.22459304e-09 * tc[2] - 3.26049698e-13 * tc[3];
    // species 36: C7H14
    species[36] = +3.10607878e-02 - 2.11289586e-05 * tc[1] +
                  4.90217340e-09 * tc[2] - 3.78239288e-13 * tc[3];
    // species 38: C8H16
    species[38] = +3.53666462e-02 - 2.40416776e-05 * tc[1] +
                  5.57565159e-09 * tc[2] - 4.30089048e-13 * tc[3];
    // species 40: C9H18
    species[40] = +3.96825287e-02 - 2.69638892e-05 * tc[1] +
                  6.25171356e-09 * tc[2] - 4.82157176e-13 * tc[3];
    // species 42: C10H20
    species[42] = +4.39971526e-02 - 2.98851060e-05 * tc[1] +
                  6.92753034e-09 * tc[2] - 5.34205908e-13 * tc[3];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 33: PXC5H11
    species[33] = +5.60796958e-02 - 6.63091606e-05 * tc[1] +
                  2.93260134e-08 * tc[2] - 4.56038640e-12 * tc[3];
    // species 35: PXC6H13
    species[35] = +6.83801272e-02 - 8.28895824e-05 * tc[1] +
                  3.78467406e-08 * tc[2] - 6.12480232e-12 * tc[3];
    // species 37: PXC7H15
    species[37] = +8.08826467e-02 - 1.00106551e-04 * tc[1] +
                  4.69647924e-08 * tc[2] - 7.86464908e-12 * tc[3];
    // species 39: PXC8H17
    species[39] = +9.32549705e-02 - 1.16889449e-04 * tc[1] +
                  5.56710642e-08 * tc[2] - 9.48509932e-12 * tc[3];
    // species 41: PXC9H19
    species[41] = +1.05617283e-01 - 1.33639994e-04 * tc[1] +
                  6.43458498e-08 * tc[2] - 1.10961710e-11 * tc[3];
    // species 43: PXC10H21
    species[43] = +1.17972813e-01 - 1.50368616e-04 * tc[1] +
                  7.29993318e-08 * tc[2] - 1.27009141e-11 * tc[3];
    // species 44: PXC12H25
    species[44] = +1.42670708e-01 - 1.83783311e-04 * tc[1] +
                  9.02650176e-08 * tc[2] - 1.58981720e-11 * tc[3];
  } else {
    // species 33: PXC5H11
    species[33] = +2.39735310e-02 - 1.63678590e-05 * tc[1] +
                  3.80649228e-09 * tc[2] - 2.94163622e-13 * tc[3];
    // species 35: PXC6H13
    species[35] = +2.83107962e-02 - 1.93061449e-05 * tc[1] +
                  4.48642755e-09 * tc[2] - 3.46534426e-13 * tc[3];
    // species 37: PXC7H15
    species[37] = +3.26280243e-02 - 2.22276488e-05 * tc[1] +
                  5.16201444e-09 * tc[2] - 3.98546800e-13 * tc[3];
    // species 39: PXC8H17
    species[39] = +3.69480162e-02 - 2.51530528e-05 * tc[1] +
                  5.83885227e-09 * tc[2] - 4.50675592e-13 * tc[3];
    // species 41: PXC9H19
    species[41] = +4.12657344e-02 - 2.80766578e-05 * tc[1] +
                  6.51524613e-09 * tc[2] - 5.02769228e-13 * tc[3];
    // species 43: PXC10H21
    species[43] = +4.55818403e-02 - 3.09989930e-05 * tc[1] +
                  7.19132799e-09 * tc[2] - 5.54838236e-13 * tc[3];
    // species 44: PXC12H25
    species[44] = +5.42107848e-02 - 3.68411034e-05 * tc[1] +
                  8.54286519e-09 * tc[2] - 6.58926992e-13 * tc[3];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 45: SXC12H25
    species[45] = +1.37355348e-01 - 1.64815232e-04 * tc[1] +
                  7.09264686e-08 * tc[2] - 9.89743728e-12 * tc[3];
    // species 46: S3XC12H25
    species[46] = +1.37355348e-01 - 1.64815232e-04 * tc[1] +
                  7.09264686e-08 * tc[2] - 9.89743728e-12 * tc[3];
  } else {
    // species 45: SXC12H25
    species[45] = +5.38719464e-02 - 3.64342526e-05 * tc[1] +
                  8.42323509e-09 * tc[2] - 6.48433680e-13 * tc[3];
    // species 46: S3XC12H25
    species[46] = +5.38719464e-02 - 3.64342526e-05 * tc[1] +
                  8.42323509e-09 * tc[2] - 6.48433680e-13 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 2916; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[53];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 53; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[53];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[53];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[53];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 4: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (11.89 - 1) * sc[6] + (0.85 - 1) * sc[8] +
          (1.09 - 1) * sc[16] + (2.18 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 5116000 * exp(0.44 * tc[0]);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.328e+19 * exp(-1.4 * tc[0]);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1e-30 - Fcent2 / 1e+30);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[4];
  Kc = refCinv * exp(g_RT[1] - g_RT[4] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[4]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q; // H
  wdot[4] += q; // HO2
  wdot[8] -= q; // O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[8];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac - k_r;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 11.89 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 0.85 * dcdc_fac + k_f * sc[1];
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.09 * dcdc_fac;
  dqdc[17] = 2.18 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 4] += dqdc[k];
    J[54 * k + 8] -= dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 17: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 111000000 * exp(-0.37 * tc[0]);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 2.01e+17 * exp(-0.584 * tc[0] - (-1153.87581469022) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.584 * invT + (-1153.87581469022) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7346) * exp(-T / 94);
  Fcent2 = 0.7346 * exp(-T / 1756);
  Fcent3 = exp(-5182 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1756 + Fcent3 * 5182 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(2.000000 * g_RT[3] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] -= 2 * q; // OH
  wdot[7] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac + k_f * 2.000000 * sc[3];
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac - k_r;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.75 * dcdc_fac;
  dqdc[17] = 3.6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 3] += -2 * dqdc[k];
    J[54 * k + 7] += dqdc[k];
  }
  J[2865] += -2 * dqdT; // dwdot[OH]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT

  // reaction 37: CO + H2 (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[5] * sc[16];
  k_f = 43 * exp(1.5 * tc[0] - (40056.0465980557) * invT);
  dlnkfdT = 1.5 * invT + (40056.0465980557) * invT2;
  // pressure-fall-off
  k_0 = 5.07e+27 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.42 * invT + (42446.3257606281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.932) * exp(-T / 197);
  Fcent2 = 0.932 * exp(-T / 1540);
  Fcent3 = exp(-10300 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 197 - Fcent2 / 1540 + Fcent3 * 10300 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[5] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[16]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H2
  wdot[14] += q; // CH2O
  wdot[16] -= q; // CO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac + k_f * sc[16];
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac - k_r;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac + k_f * sc[5];
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 5] -= dqdc[k];
    J[54 * k + 14] += dqdc[k];
    J[54 * k + 16] -= dqdc[k];
  }
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT

  // reaction 38: H + HCO (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 1090000 * exp(0.48 * tc[0] - (-130.836333109227) * invT);
  dlnkfdT = 0.48 * invT + (-130.836333109227) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.57 * invT + (717.083748771726) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7824) * exp(-T / 271);
  Fcent2 = 0.7824 * exp(-T / 2755);
  Fcent3 = exp(-6570 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 271 - Fcent2 / 2755 + Fcent3 * 6570 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[1] + g_RT[13] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[13] -= q; // HCO
  wdot[14] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[13];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac + k_f * sc[1];
  dqdc[14] = dcdc_fac - k_r;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 13] -= dqdc[k];
    J[54 * k + 14] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 39: CH2 + H (+M) <=> CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 25000000000 * exp(-0.8 * tc[0]);
  dlnkfdT = -0.8 * invT;
  // pressure-fall-off
  k_0 = 3.2e+27 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.14 * invT + (618.956498939805) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.68) * exp(-T / 78);
  Fcent2 = 0.68 * exp(-T / 1995);
  Fcent3 = exp(-5590 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 78 - Fcent2 / 1995 + Fcent3 * 5590 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(g_RT[1] + g_RT[9] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[9]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[9] -= q;  // CH2
  wdot[11] += q; // CH3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[9];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac + k_f * sc[1];
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac - k_r;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 9] -= dqdc[k];
    J[54 * k + 11] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 58: CH2O + H (+M) <=> CH3O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 540000 * exp(0.454 * tc[0] - (1308.36333109227) * invT);
  dlnkfdT = 0.454 * invT + (1308.36333109227) * invT2;
  // pressure-fall-off
  k_0 = 2.2e+30 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.8 * invT + (2797.88466187424) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.758) * exp(-T / 94);
  Fcent2 = 0.758 * exp(-T / 1555);
  Fcent3 = exp(-4200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1555 + Fcent3 * 4200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(g_RT[1] + g_RT[14] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[14] -= q; // CH2O
  wdot[15] += q; // CH3O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[14];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac + k_f * sc[1];
  dqdc[15] = dcdc_fac - k_r;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 14] -= dqdc[k];
    J[54 * k + 15] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 64: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 12700000000 * exp(-0.63 * tc[0] - (192.731983003208) * invT);
  dlnkfdT = -0.63 * invT + (192.731983003208) * invT2;
  // pressure-fall-off
  k_0 = 2.477e+33 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.76 * invT + (1227.84866456352) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.783) * exp(-T / 74);
  Fcent2 = 0.783 * exp(-T / 2941);
  Fcent3 = exp(-6964 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 74 - Fcent2 / 2941 + Fcent3 * 6964 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(g_RT[1] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[11]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[11];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * sc[1];
  dqdc[12] = 2 * dcdc_fac - k_r;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 11] -= dqdc[k];
    J[54 * k + 12] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 77: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 21200000000 * exp(-0.97 * tc[0] - (311.994332798926) * invT);
  dlnkfdT = -0.97 * invT + (311.994332798926) * invT2;
  // pressure-fall-off
  k_0 = 1.77e+50 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.67 * invT + (3130.00766130536) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5325) * exp(-T / 151);
  Fcent2 = 0.5325 * exp(-T / 1038);
  Fcent3 = exp(-4970 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 151 - Fcent2 / 1038 + Fcent3 * 4970 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[22];
  Kc = refCinv * exp(2.000000 * g_RT[11] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[22]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= 2 * q; // CH3
  wdot[22] += q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * 2.000000 * sc[11];
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac - k_r;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 11] += -2 * dqdc[k];
    J[54 * k + 22] += dqdc[k];
  }
  J[2873] += -2 * dqdT; // dwdot[CH3]/dT
  J[2884] += dqdT;      // dwdot[C2H6]/dT

  // reaction 90: C2H3 (+M) <=> C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[19];
  k_f = 38600000 * exp(1.62 * tc[0] - (18643.2716780664) * invT);
  dlnkfdT = 1.62 * invT + (18643.2716780664) * invT2;
  // pressure-fall-off
  k_0 = 2.565e+27 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.4 * invT + (18014.5125184767) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.9816) * exp(-T / 5383.7);
  Fcent2 = 1.9816 * exp(-T / 4.2932);
  Fcent3 = exp(0.0795 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 5383.7 - Fcent2 / 4.2932 + Fcent3 * -0.0795 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[1] * sc[18];
  Kc = refC * exp(-g_RT[1] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19]) + (h_RT[1] + h_RT[18]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // H
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac - k_r * sc[18];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = 3 * dcdc_fac - k_r * sc[1];
  dqdc[19] = dcdc_fac + k_f;
  dqdc[20] = 3 * dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] += dqdc[k];
    J[54 * k + 18] += dqdc[k];
    J[54 * k + 19] -= dqdc[k];
  }
  J[2863] += dqdT; // dwdot[H]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 95: C2H3 + H (+M) <=> C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 6080000 * exp(0.27 * tc[0] - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[20];
  Kc = refCinv * exp(g_RT[1] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[20]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[19];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = 3 * dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[1];
  dqdc[20] = 3 * dcdc_fac - k_r;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 19] -= dqdc[k];
    J[54 * k + 20] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 107: C2H3 + CH3 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 25000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 4.27e+58 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.94 * invT + (4916.32618157895) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.175) * exp(-T / 1340.6);
  Fcent2 = 0.175 * exp(-T / 60000);
  Fcent3 = exp(-10139.8 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1340.6 - Fcent2 / 60000 + Fcent3 * 10139.8 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[11] + g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[19] -= q; // C2H3
  wdot[25] += q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * sc[19];
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = 3 * dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[11];
  dqdc[20] = 3 * dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac - k_r;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 11] -= dqdc[k];
    J[54 * k + 19] -= dqdc[k];
    J[54 * k + 25] += dqdc[k];
  }
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 113: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 3975 * exp(1.28 * tc[0] - (649.466525387545) * invT);
  dlnkfdT = 1.28 * invT + (649.466525387545) * invT2;
  // pressure-fall-off
  k_0 = 4.715e+18 * exp(-(380.059419015673) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (380.059419015673) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.76) * exp(-T / 40);
  Fcent2 = 0.76 * exp(-T / 1025);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 40 - Fcent2 / 1025);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[21];
  Kc = refCinv * exp(g_RT[1] + g_RT[20] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[21]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] -= q; // C2H4
  wdot[21] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[20];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac + k_f * sc[1];
  dqdc[21] = dcdc_fac - k_r;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 20] -= dqdc[k];
    J[54 * k + 21] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT

  // reaction 126: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 521000000000 * exp(-0.99 * tc[0] - (795.082331971457) * invT);
  dlnkfdT = -0.99 * invT + (795.082331971457) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3364.00341090455) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[22];
  Kc = refCinv * exp(g_RT[1] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[22]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[21];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac + k_f * sc[1];
  dqdc[22] = 3 * dcdc_fac - k_r;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 21] -= dqdc[k];
    J[54 * k + 22] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 134: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[19] * sc[21];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.55e+56 * exp(-11.79 * tc[0] - (4521.1501339225) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.79 * invT + (4521.1501339225) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.198) * exp(-T / 2277.9);
  Fcent2 = 0.198 * exp(-T / 60000);
  Fcent3 = exp(-5723.2 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 2277.9 - Fcent2 / 60000 + Fcent3 * 5723.2 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[19] + g_RT[21] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // C2H3
  wdot[21] -= q; // C2H5
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[21];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac + k_f * sc[19];
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac - k_r;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 19] -= dqdc[k];
    J[54 * k + 21] -= dqdc[k];
    J[54 * k + 29] += dqdc[k];
  }
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 141: H + aC3H5 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[24];
  k_f = 200000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.33e+60 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12 * invT + (3003.09641818941) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.02) * exp(-T / 1096.6);
  Fcent2 = 0.02 * exp(-T / 1096.6);
  Fcent3 = exp(-6859.5 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1096.6 - Fcent2 / 1096.6 + Fcent3 * 6859.5 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[1] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[24]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[24];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac + k_f * sc[1];
  dqdc[25] = dcdc_fac - k_r;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 24] -= dqdc[k];
    J[54 * k + 25] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 148: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 100000000 * exp(-0.32 * tc[0] - (-131.993731440578) * invT);
  dlnkfdT = -0.32 * invT + (-131.993731440578) * invT2;
  // pressure-fall-off
  k_0 = 3.91e+60 * exp(-12.81 * tc[0] - (3145.1041612795) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12.81 * invT + (3145.1041612795) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.104) * exp(-T / 1606);
  Fcent2 = 0.104 * exp(-T / 60000);
  Fcent3 = exp(-6118.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1606 - Fcent2 / 60000 + Fcent3 * 6118.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[11] + g_RT[24] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[24] -= q; // aC3H5
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * sc[24];
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac + k_f * sc[11];
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac - k_r;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 11] -= dqdc[k];
    J[54 * k + 24] -= dqdc[k];
    J[54 * k + 29] += dqdc[k];
  }
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 149: C3H6 + H (+M) <=> nC3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[26];
  Kc = refCinv * exp(g_RT[1] + g_RT[25] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[26]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] -= q; // C3H6
  wdot[26] += q; // nC3H7
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[25];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac + k_f * sc[1];
  dqdc[26] = dcdc_fac - k_r;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 25] -= dqdc[k];
    J[54 * k + 26] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT

  // reaction 168: C4H7 + H (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[28];
  k_f = 36000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 3.01e+48 * exp(-9.32 * tc[0] - (2935.56474163841) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.32 * invT + (2935.56474163841) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.498) * exp(-T / 1314);
  Fcent2 = 0.498 * exp(-T / 1314);
  Fcent3 = exp(-50000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1314 - Fcent2 / 1314 + Fcent3 * 50000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[1] + g_RT[28] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[28]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[28] -= q; // C4H7
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[28];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac + k_f * sc[1];
  dqdc[29] = dcdc_fac - k_r;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 28] -= dqdc[k];
    J[54 * k + 29] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 172: C4H81 + H (+M) <=> pC4H9 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[30];
  Kc = refCinv * exp(g_RT[1] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[30]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[29] -= q; // C4H81
  wdot[30] += q; // pC4H9
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[29];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac + k_f * sc[1];
  dqdc[30] = dcdc_fac - k_r;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 29] -= dqdc[k];
    J[54 * k + 30] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT

  // reaction 192: C5H10 + H (+M) <=> PXC5H11 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[33];
  Kc = refCinv * exp(g_RT[1] + g_RT[32] - g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[33]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[32] -= q; // C5H10
  wdot[33] += q; // PXC5H11
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[32];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac + k_f * sc[1];
  dqdc[33] = dcdc_fac - k_r;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 32] -= dqdc[k];
    J[54 * k + 33] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT

  // reaction 196: C6H12 + H (+M) <=> PXC6H13 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[35];
  Kc = refCinv * exp(g_RT[1] + g_RT[34] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[35]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[34] -= q; // C6H12
  wdot[35] += q; // PXC6H13
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[34];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac + k_f * sc[1];
  dqdc[35] = dcdc_fac - k_r;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 34] -= dqdc[k];
    J[54 * k + 35] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT

  // reaction 200: C7H14 + H (+M) <=> PXC7H15 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[37];
  Kc = refCinv * exp(g_RT[1] + g_RT[36] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[37]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[36] -= q; // C7H14
  wdot[37] += q; // PXC7H15
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[36];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac + k_f * sc[1];
  dqdc[37] = dcdc_fac - k_r;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 36] -= dqdc[k];
    J[54 * k + 37] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT

  // reaction 204: C8H16 + H (+M) <=> PXC8H17 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[1] + g_RT[38] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[38] -= q; // C8H16
  wdot[39] += q; // PXC8H17
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[38];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac + k_f * sc[1];
  dqdc[39] = dcdc_fac - k_r;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 38] -= dqdc[k];
    J[54 * k + 39] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT

  // reaction 208: C9H18 + H (+M) <=> PXC9H19 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[41];
  Kc = refCinv * exp(g_RT[1] + g_RT[40] - g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[41]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[40] -= q; // C9H18
  wdot[41] += q; // PXC9H19
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[40];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac + k_f * sc[1];
  dqdc[41] = dcdc_fac - k_r;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 40] -= dqdc[k];
    J[54 * k + 41] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT
  J[2903] += dqdT; // dwdot[PXC9H19]/dT

  // reaction 212: C10H20 + H (+M) <=> PXC10H21 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[43];
  Kc = refCinv * exp(g_RT[1] + g_RT[42] - g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[43]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[42] -= q; // C10H20
  wdot[43] += q; // PXC10H21
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[42];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 6 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.5 * dcdc_fac;
  dqdc[17] = 2 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = 3 * dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac + k_f * sc[1];
  dqdc[43] = dcdc_fac - k_r;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 42] -= dqdc[k];
    J[54 * k + 43] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT
  J[2905] += dqdT; // dwdot[PXC10H21]/dT

  // reaction 28: CO + O (+M) <=> CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (12 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.173e+24 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[2] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // O
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac + k_f * sc[16];
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 2 * dcdc_fac;
  dqdc[6] = 12 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = 1.75 * dcdc_fac + k_f * sc[2];
  dqdc[17] = 3.6 * dcdc_fac - k_r;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 2] -= dqdc[k];
    J[54 * k + 16] -= dqdc[k];
    J[54 * k + 17] += dqdc[k];
  }
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 18: 2 H + M <=> H2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (0 - 1) * sc[5] + (0 - 1) * sc[6] + (0 - 1) * sc[17];
  // forward
  phi_f = (sc[1] * sc[1]);
  k_f = 1780000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[1]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * 2.000000 * sc[1];
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = -k_r;
  dqdc[6] = 0.0;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = 0.0;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] += -2 * dqdc[k];
    J[54 * k + 5] += dqdc[k];
  }
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 19: H + OH + M <=> H2O + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6.3 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 44000000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[6];
  Kc = refCinv * exp(g_RT[1] + g_RT[3] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[3]) + (h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * sc[3];
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor + k_f * sc[1];
  dqdc[4] = q_nocor;
  dqdc[5] = 2 * q_nocor;
  dqdc[6] = 6.3 * q_nocor - k_r;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = 1.75 * q_nocor;
  dqdc[17] = 3.6 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 3] -= dqdc[k];
    J[54 * k + 6] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 20: 2 O + M <=> O2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.4 - 1) * sc[5] + (15.4 - 1) * sc[6] +
          (1.75 - 1) * sc[16] + (3.6 - 1) * sc[17];
  // forward
  phi_f = (sc[2] * sc[2]);
  k_f = 120000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(2.000000 * g_RT[2] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[2]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= 2 * q; // O
  wdot[8] += q;     // O2
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor + k_f * 2.000000 * sc[2];
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 2.4 * q_nocor;
  dqdc[6] = 15.4 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor - k_r;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = 1.75 * q_nocor;
  dqdc[17] = 3.6 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 2] += -2 * dqdc[k];
    J[54 * k + 8] += dqdc[k];
  }
  J[2864] += -2 * dqdT; // dwdot[O]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 21: 2 H + H2 <=> H2 + H2
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[5];
  k_f = 90000 * exp(-0.6 * tc[0]);
  dlnkfdT = -0.6 * invT;
  // reverse
  phi_r = (sc[5] * sc[5]);
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[5]) + (2.000000 * h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[5];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[1] * sc[1] - k_r * 2.000000 * sc[5];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 22: 2 H + H2O <=> H2 + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[6];
  k_f = 56240000 * exp(-1.25 * tc[0]);
  dlnkfdT = -1.25 * invT;
  // reverse
  phi_r = sc[5] * sc[6];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[6]) + (h_RT[5] + h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[6];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[6];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1] * sc[1] - k_r * sc[5];
  J[325] += -2 * dqdci; // dwdot[H]/d[H2O]
  J[329] += dqdci;      // dwdot[H2]/d[H2O]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 23: 2 H + CO2 <=> H2 + CO2
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[17];
  k_f = 550000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[5] * sc[17];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[17]) + (h_RT[5] + h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[17];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[17];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1] * sc[1] - k_r * sc[5];
  J[919] += -2 * dqdci; // dwdot[H]/d[CO2]
  J[923] += dqdci;      // dwdot[H2]/d[CO2]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 24: H + O + M <=> OH + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (12 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 9428000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(g_RT[1] + g_RT[2] - g_RT[3]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[2]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * sc[2];
  dqdc[2] = q_nocor + k_f * sc[1];
  dqdc[3] = q_nocor - k_r;
  dqdc[4] = q_nocor;
  dqdc[5] = 2 * q_nocor;
  dqdc[6] = 12 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = 1.75 * q_nocor;
  dqdc[17] = 3.6 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] -= dqdc[k];
    J[54 * k + 2] -= dqdc[k];
    J[54 * k + 3] += dqdc[k];
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT

  // reaction 30: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (0 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[13];
  k_f = 187000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[1] * sc[16];
  Kc = refC * exp(-g_RT[1] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13]) + (h_RT[1] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor - k_r * sc[16];
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 2 * q_nocor;
  dqdc[6] = 0.0;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor + k_f;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = 1.75 * q_nocor - k_r * sc[1];
  dqdc[17] = 3.6 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  for (int k = 0; k < 53; k++) {
    J[54 * k + 1] += dqdc[k];
    J[54 * k + 13] -= dqdc[k];
    J[54 * k + 16] += dqdc[k];
  }
  J[2863] += dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 36: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 2244000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[1] * sc[6] * sc[16];
  Kc = refC * exp(-g_RT[1] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[6] + h_RT[13]) + (h_RT[1] + h_RT[6] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = -k_r * sc[6] * sc[16];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[13] - k_r * sc[1] * sc[16];
  J[325] += dqdci; // dwdot[H]/d[H2O]
  J[337] -= dqdci; // dwdot[HCO]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[6];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[1] * sc[6];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 0: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 97560000 * exp(-(7468.87259020676) * invT);
  dlnkfdT = (7468.87259020676) * invT2;
  // reverse
  phi_r = sc[2] * sc[3];
  Kc = exp(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[2] + h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] += q; // O
  wdot[3] += q; // OH
  wdot[8] -= q; // O2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[56] += dqdci; // dwdot[O]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[O]
  dqdci = -k_r * sc[3];
  J[109] -= dqdci; // dwdot[H]/d[O]
  J[110] += dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[2];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[164] += dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[433] -= dqdci; // dwdot[H]/d[O2]
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 1: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 0.04589 * exp(2.7 * tc[0] - (3150.13632793755) * invT);
  dlnkfdT = 2.7 * invT + (3150.13632793755) * invT2;
  // reverse
  phi_r = sc[1] * sc[3];
  Kc = exp(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[5]) + (h_RT[1] + h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[5] -= q; // H2
  // d()/d[H]
  dqdci = -k_r * sc[3];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[5];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[113] -= dqdci; // dwdot[H2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[1];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[167] -= dqdci; // dwdot[H2]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[2];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[272] -= dqdci; // dwdot[O]/d[H2]
  J[273] += dqdci; // dwdot[OH]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT

  // reaction 2: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 102.4 * exp(1.6 * tc[0] - (1659.74946449039) * invT);
  dlnkfdT = 1.6 * invT + (1659.74946449039) * invT2;
  // reverse
  phi_r = sc[1] * sc[6];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[5]) + (h_RT[1] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[3] -= q; // OH
  wdot[5] -= q; // H2
  wdot[6] += q; // H2O
  // d()/d[H]
  dqdci = -k_r * sc[6];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[5];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[167] -= dqdci; // dwdot[H2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[273] -= dqdci; // dwdot[OH]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[276] += dqdci; // dwdot[H2O]/d[H2]
  // d()/d[H2O]
  dqdci = -k_r * sc[1];
  J[325] += dqdci; // dwdot[H]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[329] -= dqdci; // dwdot[H2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 3: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 0.03973 * exp(2.4 * tc[0] - (-1061.78716484796) * invT);
  dlnkfdT = 2.4 * invT + (-1061.78716484796) * invT2;
  // reverse
  phi_r = sc[2] * sc[6];
  Kc = exp(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[2] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;     // O
  wdot[3] -= 2 * q; // OH
  wdot[6] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[110] += dqdci;      // dwdot[O]/d[O]
  J[111] += -2 * dqdci; // dwdot[OH]/d[O]
  J[114] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[3];
  J[164] += dqdci;      // dwdot[O]/d[OH]
  J[165] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[326] += dqdci;      // dwdot[O]/d[H2O]
  J[327] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2864] += dqdT;      // dwdot[O]/dT
  J[2865] += -2 * dqdT; // dwdot[OH]/dT
  J[2868] += dqdT;      // dwdot[H2O]/dT

  // reaction 5: H + HO2 <=> 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  dlnkfdT = (148.448916412392) * invT2;
  // reverse
  phi_r = (sc[3] * sc[3]);
  Kc = exp(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (2.000000 * h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;     // H
  wdot[3] += 2 * q; // OH
  wdot[4] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[55] -= dqdci;     // dwdot[H]/d[H]
  J[57] += 2 * dqdci; // dwdot[OH]/d[H]
  J[58] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * 2.000000 * sc[3];
  J[163] -= dqdci;     // dwdot[H]/d[OH]
  J[165] += 2 * dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci;     // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[217] -= dqdci;     // dwdot[H]/d[HO2]
  J[219] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2863] -= dqdT;     // dwdot[H]/dT
  J[2865] += 2 * dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT;     // dwdot[HO2]/dT

  // reaction 6: H2 + O2 <=> H + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 0.5916 * exp(2.433 * tc[0] - (26923.0980538841) * invT);
  dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
  // reverse
  phi_r = sc[1] * sc[4];
  Kc = exp(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[1] + h_RT[4]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[4] += q; // HO2
  wdot[5] -= q; // H2
  wdot[8] -= q; // O2
  // d()/d[H]
  dqdci = -k_r * sc[4];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[58] += dqdci; // dwdot[HO2]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[HO2]
  dqdci = -k_r * sc[1];
  J[217] += dqdci; // dwdot[H]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[221] -= dqdci; // dwdot[H2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  // d()/d[H2]
  dqdci = +k_f * sc[8];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HO2]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[278] -= dqdci; // dwdot[O2]/d[H2]
  // d()/d[O2]
  dqdci = +k_f * sc[5];
  J[433] += dqdci; // dwdot[H]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[437] -= dqdci; // dwdot[H2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 7: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 28910000 * exp(-(-252.569476734047) * invT);
  dlnkfdT = (-252.569476734047) * invT2;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] -= q; // HO2
  wdot[6] += q; // H2O
  wdot[8] += q; // O2
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[170] += dqdci; // dwdot[O2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] -= dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[332] += dqdci; // dwdot[O2]/d[H2O]
  // d()/d[O2]
  dqdci = -k_r * sc[6];
  J[435] -= dqdci; // dwdot[OH]/d[O2]
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[438] += dqdci; // dwdot[H2O]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2870] += dqdT; // dwdot[O2]/dT

  // reaction 8: H + HO2 <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  dlnkfdT = (337.658382754967) * invT2;
  // reverse
  phi_r = sc[2] * sc[6];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (h_RT[2] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] += q; // O
  wdot[4] -= q; // HO2
  wdot[6] += q; // H2O
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[56] += dqdci; // dwdot[O]/d[H]
  J[58] -= dqdci; // dwdot[HO2]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[109] -= dqdci; // dwdot[H]/d[O]
  J[110] += dqdci; // dwdot[O]/d[O]
  J[112] -= dqdci; // dwdot[HO2]/d[O]
  J[114] += dqdci; // dwdot[H2O]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[217] -= dqdci; // dwdot[H]/d[HO2]
  J[218] += dqdci; // dwdot[O]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[326] += dqdci; // dwdot[O]/d[H2O]
  J[328] -= dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 9: HO2 + O <=> O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[8];
  Kc = exp(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[4]) + (h_RT[3] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[4] -= q; // HO2
  wdot[8] += q; // O2
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[112] -= dqdci; // dwdot[HO2]/d[O]
  J[116] += dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[8];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[170] += dqdci; // dwdot[O2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[218] -= dqdci; // dwdot[O]/d[HO2]
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[3];
  J[434] -= dqdci; // dwdot[O]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT

  // reaction 10: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  dlnkfdT = (-820.243165261693) * invT2;
  // reverse
  phi_r = sc[7] * sc[8];
  Kc = exp(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[7] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= 2 * q; // HO2
  wdot[7] += q;     // H2O2
  wdot[8] += q;     // O2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[4];
  J[220] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[224] += dqdci;      // dwdot[O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[8];
  J[382] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci;      // dwdot[H2O2]/d[H2O2]
  J[386] += dqdci;      // dwdot[O2]/d[H2O2]
  // d()/d[O2]
  dqdci = -k_r * sc[7];
  J[436] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[439] += dqdci;      // dwdot[H2O2]/d[O2]
  J[440] += dqdci;      // dwdot[O2]/d[O2]
  // d()/dT
  J[2866] += -2 * dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 11: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  dlnkfdT = (6038.59998965664) * invT2;
  // reverse
  phi_r = sc[7] * sc[8];
  Kc = exp(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[7] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= 2 * q; // HO2
  wdot[7] += q;     // H2O2
  wdot[8] += q;     // O2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[4];
  J[220] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[224] += dqdci;      // dwdot[O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[8];
  J[382] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci;      // dwdot[H2O2]/d[H2O2]
  J[386] += dqdci;      // dwdot[O2]/d[H2O2]
  // d()/d[O2]
  dqdci = -k_r * sc[7];
  J[436] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[439] += dqdci;      // dwdot[H2O2]/d[O2]
  J[440] += dqdci;      // dwdot[O2]/d[O2]
  // d()/dT
  J[2866] += -2 * dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 12: H + H2O2 <=> H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[3] * sc[6];
  Kc = exp(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[3] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[3] += q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  J[61] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[6];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[3];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[327] += dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[379] -= dqdci; // dwdot[H]/d[H2O2]
  J[381] += dqdci; // dwdot[OH]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 13: H + H2O2 <=> H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 6.05 * exp(2 * tc[0] - (2616.72666218454) * invT);
  dlnkfdT = 2 * invT + (2616.72666218454) * invT2;
  // reverse
  phi_r = sc[4] * sc[5];
  Kc = exp(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[4] + h_RT[5]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[4] += q; // HO2
  wdot[5] += q; // H2
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[58] += dqdci; // dwdot[HO2]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[61] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[HO2]
  dqdci = -k_r * sc[5];
  J[217] -= dqdci; // dwdot[H]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[221] += dqdci; // dwdot[H2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2]
  dqdci = -k_r * sc[4];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HO2]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[277] -= dqdci; // dwdot[H2O2]/d[H2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[379] -= dqdci; // dwdot[H]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[383] += dqdci; // dwdot[H2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 14: H2O2 + O <=> HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 9.63 * exp(2 * tc[0] - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[3] * sc[4];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[7]) + (h_RT[3] + h_RT[4]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[4] += q; // HO2
  wdot[7] -= q; // H2O2
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[112] += dqdci; // dwdot[HO2]/d[O]
  J[115] -= dqdci; // dwdot[H2O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[4];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[3];
  J[218] -= dqdci; // dwdot[O]/d[HO2]
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[380] -= dqdci; // dwdot[O]/d[H2O2]
  J[381] += dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 15: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 2000000 * exp(-(214.873516298615) * invT);
  dlnkfdT = (214.873516298615) * invT2;
  // reverse
  phi_r = sc[4] * sc[6];
  Kc = exp(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[7]) + (h_RT[4] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] += q; // HO2
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[4];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] += dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[381] -= dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 16: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 2.67e+35 * exp(-7 * tc[0] - (18920.9466342575) * invT);
  dlnkfdT = -7 * invT + (18920.9466342575) * invT2;
  // reverse
  phi_r = sc[4] * sc[6];
  Kc = exp(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[7]) + (h_RT[4] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] += q; // HO2
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[4];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] += dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[381] -= dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 25: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 0.07046 * exp(2.053 * tc[0] - (-178.979071526765) * invT);
  dlnkfdT = 2.053 * invT + (-178.979071526765) * invT2;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[70] -= dqdci; // dwdot[CO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[921] -= dqdci; // dwdot[OH]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 26: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 5757000 * exp(-0.664 * tc[0] - (166.98238621398) * invT);
  dlnkfdT = -0.664 * invT + (166.98238621398) * invT2;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[70] -= dqdci; // dwdot[CO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[921] -= dqdci; // dwdot[OH]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 27: CO + HO2 <=> CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[16];
  k_f = 0.157 * exp(2.18 * tc[0] - (9029.02038003442) * invT);
  dlnkfdT = 2.18 * invT + (9029.02038003442) * invT2;
  // reverse
  phi_r = sc[3] * sc[17];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[16]) + (h_RT[3] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[OH]
  dqdci = -k_r * sc[17];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[16];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[232] -= dqdci; // dwdot[CO]/d[HO2]
  J[233] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[4];
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[868] -= dqdci; // dwdot[HO2]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[3];
  J[921] += dqdci; // dwdot[OH]/d[CO2]
  J[922] -= dqdci; // dwdot[HO2]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 29: CO + O2 <=> CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // reverse
  phi_r = sc[2] * sc[17];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[16]) + (h_RT[2] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[O]
  dqdci = -k_r * sc[17];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[124] -= dqdci; // dwdot[CO]/d[O]
  J[125] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[16];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[448] -= dqdci; // dwdot[CO]/d[O2]
  J[449] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[CO]
  dqdci = +k_f * sc[8];
  J[866] += dqdci; // dwdot[O]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[2];
  J[920] += dqdci; // dwdot[O]/d[CO2]
  J[926] -= dqdci; // dwdot[O2]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 31: H + HCO <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[16];
  Kc = exp(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[5] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[283] -= dqdci; // dwdot[HCO]/d[H2]
  J[286] += dqdci; // dwdot[CO]/d[H2]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[707] += dqdci; // dwdot[H2]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[5];
  J[865] -= dqdci; // dwdot[H]/d[CO]
  J[869] += dqdci; // dwdot[H2]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 32: HCO + O <=> CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[16];
  Kc = exp(g_RT[2] - g_RT[3] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[3] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[121] -= dqdci; // dwdot[HCO]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[175] -= dqdci; // dwdot[HCO]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[3];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 33: HCO + O <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[13] -= q; // HCO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] -= dqdci; // dwdot[HCO]/d[O]
  J[125] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[719] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[920] -= dqdci; // dwdot[O]/d[CO2]
  J[931] -= dqdci; // dwdot[HCO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 34: HCO + OH <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(g_RT[3] - g_RT[6] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[13]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[175] -= dqdci; // dwdot[HCO]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[337] -= dqdci; // dwdot[HCO]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[705] -= dqdci; // dwdot[OH]/d[HCO]
  J[708] += dqdci; // dwdot[H2O]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 35: HCO + O2 <=> CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[13];
  k_f = 12040 * exp(0.807 * tc[0] - (-365.838516040031) * invT);
  dlnkfdT = 0.807 * invT + (-365.838516040031) * invT2;
  // reverse
  phi_r = sc[4] * sc[16];
  Kc = exp(-g_RT[4] + g_RT[8] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[13]) + (h_RT[4] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[HO2]
  dqdci = -k_r * sc[16];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[229] -= dqdci; // dwdot[HCO]/d[HO2]
  J[232] += dqdci; // dwdot[CO]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[13];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] -= dqdci; // dwdot[HCO]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[8];
  J[706] += dqdci; // dwdot[HO2]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[4];
  J[868] += dqdci; // dwdot[HO2]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 40: CH2 + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[9];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[13];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[9]) + (h_RT[1] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[9] -= q;  // CH2
  wdot[13] += q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[13];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] -= dqdci; // dwdot[CH2]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2]
  dqdci = +k_f * sc[2];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[499] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[1];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[711] -= dqdci; // dwdot[CH2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 41: CH2 + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[9] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[9]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[9] -= q;  // CH2
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2]
  dqdci = +k_f * sc[3];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[489] -= dqdci; // dwdot[OH]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[765] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 42: CH2 + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 0.5 * exp(2 * tc[0] - (3638.25649376812) * invT);
  dlnkfdT = 2 * invT + (3638.25649376812) * invT2;
  // reverse
  phi_r = sc[1] * sc[11];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[9] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[9]) + (h_RT[1] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[5] -= q;  // H2
  wdot[9] -= q;  // CH2
  wdot[11] += q; // CH3
  // d()/d[H]
  dqdci = -k_r * sc[11];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[9];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[279] -= dqdci; // dwdot[CH2]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2]
  dqdci = +k_f * sc[5];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[491] -= dqdci; // dwdot[H2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[497] += dqdci; // dwdot[CH3]/d[CH2]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[599] -= dqdci; // dwdot[H2]/d[CH3]
  J[603] -= dqdci; // dwdot[CH2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 43: CH2 + O2 <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[9];
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[9]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[9] -= q;  // CH2
  wdot[13] += q; // HCO
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[441] -= dqdci; // dwdot[CH2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH2]
  dqdci = +k_f * sc[8];
  J[489] += dqdci; // dwdot[OH]/d[CH2]
  J[494] -= dqdci; // dwdot[O2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[499] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[3];
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[711] -= dqdci; // dwdot[CH2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 44: CH2 + O2 <=> CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[9];
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[17];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[8] + g_RT[9] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[9]) + (2.000000 * h_RT[1] + h_RT[17]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[8] -= q;     // O2
  wdot[9] -= q;     // CH2
  wdot[17] += q;    // CO2
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[17];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[62] -= dqdci;     // dwdot[O2]/d[H]
  J[63] -= dqdci;     // dwdot[CH2]/d[H]
  J[71] += dqdci;     // dwdot[CO2]/d[H]
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[433] += 2 * dqdci; // dwdot[H]/d[O2]
  J[440] -= dqdci;     // dwdot[O2]/d[O2]
  J[441] -= dqdci;     // dwdot[CH2]/d[O2]
  J[449] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/d[CH2]
  dqdci = +k_f * sc[8];
  J[487] += 2 * dqdci; // dwdot[H]/d[CH2]
  J[494] -= dqdci;     // dwdot[O2]/d[CH2]
  J[495] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[503] += dqdci;     // dwdot[CO2]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[1] * sc[1];
  J[919] += 2 * dqdci; // dwdot[H]/d[CO2]
  J[926] -= dqdci;     // dwdot[O2]/d[CO2]
  J[927] -= dqdci;     // dwdot[CH2]/d[CO2]
  J[935] += dqdci;     // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2870] -= dqdT;     // dwdot[O2]/dT
  J[2871] -= dqdT;     // dwdot[CH2]/dT
  J[2879] += dqdT;     // dwdot[CO2]/dT

  // reaction 45: CH2 + HO2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[9]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[9] -= q;  // CH2
  wdot[14] += q; // CH2O
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[9];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[225] -= dqdci; // dwdot[CH2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[CH2]
  dqdci = +k_f * sc[4];
  J[489] += dqdci; // dwdot[OH]/d[CH2]
  J[490] -= dqdci; // dwdot[HO2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[765] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 46: 2 CH2 <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[18];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[9] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[9]) + (h_RT[5] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;     // H2
  wdot[9] -= 2 * q; // CH2
  wdot[18] += q;    // C2H2
  // d()/d[H2]
  dqdci = -k_r * sc[18];
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  J[279] += -2 * dqdci; // dwdot[CH2]/d[H2]
  J[288] += dqdci;      // dwdot[C2H2]/d[H2]
  // d()/d[CH2]
  dqdci = +k_f * 2.000000 * sc[9];
  J[491] += dqdci;      // dwdot[H2]/d[CH2]
  J[495] += -2 * dqdci; // dwdot[CH2]/d[CH2]
  J[504] += dqdci;      // dwdot[C2H2]/d[CH2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[977] += dqdci;      // dwdot[H2]/d[C2H2]
  J[981] += -2 * dqdci; // dwdot[CH2]/d[C2H2]
  J[990] += dqdci;      // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2867] += dqdT;      // dwdot[H2]/dT
  J[2871] += -2 * dqdT; // dwdot[CH2]/dT
  J[2880] += dqdT;      // dwdot[C2H2]/dT

  // reaction 47: CH2* + N2 <=> CH2 + N2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[52];
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  dlnkfdT = (301.929999482832) * invT2;
  // reverse
  phi_r = sc[9] * sc[52];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[52] - g_RT[52]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[52]) + (h_RT[9] + h_RT[52]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[52];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[52];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[N2]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[2817] += dqdci; // dwdot[CH2]/d[N2]
  J[2818] -= dqdci; // dwdot[CH2*]/d[N2]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 48: CH2* + O <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[16];
  Kc = exp(g_RT[2] - g_RT[5] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[10]) + (h_RT[5] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[5] += q;  // H2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[113] += dqdci; // dwdot[H2]/d[O]
  J[118] -= dqdci; // dwdot[CH2*]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[272] -= dqdci; // dwdot[O]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[280] -= dqdci; // dwdot[CH2*]/d[H2]
  J[286] += dqdci; // dwdot[CO]/d[H2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[2];
  J[542] -= dqdci; // dwdot[O]/d[CH2*]
  J[545] += dqdci; // dwdot[H2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[5];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[869] += dqdci; // dwdot[H2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 49: CH2* + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[13];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[10] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[10]) + (h_RT[1] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[10] -= q; // CH2*
  wdot[13] += q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[13];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[118] -= dqdci; // dwdot[CH2*]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[2];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[542] -= dqdci; // dwdot[O]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[553] += dqdci; // dwdot[HCO]/d[CH2*]
  // d()/d[HCO]
  dqdci = -k_r * sc[1];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[712] -= dqdci; // dwdot[CH2*]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 50: CH2* + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[10] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[10]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[10] -= q; // CH2*
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[172] -= dqdci; // dwdot[CH2*]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2*]
  dqdci = +k_f * sc[3];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[543] -= dqdci; // dwdot[OH]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[554] += dqdci; // dwdot[CH2O]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[766] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 51: CH2* + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[10];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[11];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[10] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[10]) + (h_RT[1] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[5] -= q;  // H2
  wdot[10] -= q; // CH2*
  wdot[11] += q; // CH3
  // d()/d[H]
  dqdci = -k_r * sc[11];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[10];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[280] -= dqdci; // dwdot[CH2*]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[5];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[545] -= dqdci; // dwdot[H2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] += dqdci; // dwdot[CH3]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[599] -= dqdci; // dwdot[H2]/d[CH3]
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 52: CH2* + O2 <=> CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[3] * sc[16];
  Kc = refC * exp(-g_RT[1] - g_RT[3] + g_RT[8] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[10]) + (h_RT[1] + h_RT[3] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = -k_r * sc[3] * sc[16];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[1] * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[172] -= dqdci; // dwdot[CH2*]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[433] += dqdci; // dwdot[H]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[442] -= dqdci; // dwdot[CH2*]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[543] += dqdci; // dwdot[OH]/d[CH2*]
  J[548] -= dqdci; // dwdot[O2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[1] * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 53: CH2* + O2 <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(-g_RT[6] + g_RT[8] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[10]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2O
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[332] -= dqdci; // dwdot[O2]/d[H2O]
  J[334] -= dqdci; // dwdot[CH2*]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[438] += dqdci; // dwdot[H2O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[442] -= dqdci; // dwdot[CH2*]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[548] -= dqdci; // dwdot[O2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 54: CH2* + H2O <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = exp(g_RT[6] - g_RT[6] - g_RT[9] + g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[10]) + (h_RT[6] + h_RT[9]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[H2O]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[333] += dqdci; // dwdot[CH2]/d[H2O]
  J[334] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[6];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[6];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 55: CH2* + CO <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[16];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[16] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[16]) + (h_RT[9] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[16];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[16];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[873] += dqdci; // dwdot[CH2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 56: CH2* + CO2 <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[17];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[17] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[17]) + (h_RT[9] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO2]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[927] += dqdci; // dwdot[CH2]/d[CO2]
  J[928] -= dqdci; // dwdot[CH2*]/d[CO2]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 57: CH2* + CO2 <=> CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[16];
  Kc = exp(g_RT[10] - g_RT[14] - g_RT[16] + g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[17]) + (h_RT[14] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // CH2*
  wdot[14] += q; // CH2O
  wdot[16] += q; // CO
  wdot[17] -= q; // CO2
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[554] += dqdci; // dwdot[CH2O]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  J[557] -= dqdci; // dwdot[CO2]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[16];
  J[766] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[772] += dqdci; // dwdot[CO]/d[CH2O]
  J[773] -= dqdci; // dwdot[CO2]/d[CH2O]
  // d()/d[CO]
  dqdci = -k_r * sc[14];
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[878] += dqdci; // dwdot[CH2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[881] -= dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = +k_f * sc[10];
  J[928] -= dqdci; // dwdot[CH2*]/d[CO2]
  J[932] += dqdci; // dwdot[CH2O]/d[CO2]
  J[934] += dqdci; // dwdot[CO]/d[CO2]
  J[935] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2879] -= dqdT; // dwdot[CO2]/dT

  // reaction 59: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 23000 * exp(1.05 * tc[0] - (1648.03458051046) * invT);
  dlnkfdT = 1.05 * invT + (1648.03458051046) * invT2;
  // reverse
  phi_r = sc[5] * sc[13];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[5] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[H]
  dqdci = +k_f * sc[14];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[68] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[13];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[283] += dqdci; // dwdot[HCO]/d[H2]
  J[284] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[HCO]
  dqdci = -k_r * sc[5];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[707] += dqdci; // dwdot[H2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[1];
  J[757] -= dqdci; // dwdot[H]/d[CH2O]
  J[761] += dqdci; // dwdot[H2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 60: CH2O + O <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[122] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  J[176] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HCO]
  dqdci = -k_r * sc[3];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[2];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 61: CH2O + OH <=> H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[6] * sc[13];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[6] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  J[176] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[337] += dqdci; // dwdot[HCO]/d[H2O]
  J[338] -= dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[HCO]
  dqdci = -k_r * sc[6];
  J[705] -= dqdci; // dwdot[OH]/d[HCO]
  J[708] += dqdci; // dwdot[H2O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[762] += dqdci; // dwdot[H2O]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 62: CH2O + O2 <=> HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[4] * sc[13];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[14]) + (h_RT[4] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[HO2]
  dqdci = -k_r * sc[13];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[229] += dqdci; // dwdot[HCO]/d[HO2]
  J[230] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  J[446] -= dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[4];
  J[706] += dqdci; // dwdot[HO2]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[8];
  J[760] += dqdci; // dwdot[HO2]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 63: CH2O + HO2 <=> H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[7] * sc[13];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[14]) + (h_RT[7] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[229] += dqdci; // dwdot[HCO]/d[HO2]
  J[230] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[391] += dqdci; // dwdot[HCO]/d[H2O2]
  J[392] -= dqdci; // dwdot[CH2O]/d[H2O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[7];
  J[706] -= dqdci; // dwdot[HO2]/d[HCO]
  J[709] += dqdci; // dwdot[H2O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[4];
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[763] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH3 + O <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 84300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[11] -= q; // CH3
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[11];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] -= dqdci; // dwdot[CH3]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH3 + OH <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 56 * exp(1.6 * tc[0] - (2727.43432866158) * invT);
  dlnkfdT = 1.6 * invT + (2727.43432866158) * invT2;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[6] + h_RT[9]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[9] += q;  // CH2
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[171] += dqdci; // dwdot[CH2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[9];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[333] += dqdci; // dwdot[CH2]/d[H2O]
  J[335] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[6];
  J[489] -= dqdci; // dwdot[OH]/d[CH2]
  J[492] += dqdci; // dwdot[H2O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[497] -= dqdci; // dwdot[CH3]/d[CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[603] += dqdci; // dwdot[CH2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT

  // reaction 67: CH3 + OH <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 25010000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[10] + g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[10] += q; // CH2*
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[172] += dqdci; // dwdot[CH2*]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[334] += dqdci; // dwdot[CH2*]/d[H2O]
  J[335] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[6];
  J[543] -= dqdci; // dwdot[OH]/d[CH2*]
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[550] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] -= dqdci; // dwdot[CH3]/d[CH2*]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[604] += dqdci; // dwdot[CH2*]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2872] += dqdT; // dwdot[CH2*]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT

  // reaction 68: CH3 + O2 <=> CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  dlnkfdT = (14492.6399751759) * invT2;
  // reverse
  phi_r = sc[2] * sc[15];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[2] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH3O
  // d()/d[O]
  dqdci = -k_r * sc[15];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[119] -= dqdci; // dwdot[CH3]/d[O]
  J[123] += dqdci; // dwdot[CH3O]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[447] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[596] += dqdci; // dwdot[O]/d[CH3]
  J[602] -= dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[609] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = -k_r * sc[2];
  J[812] += dqdci; // dwdot[O]/d[CH3O]
  J[818] -= dqdci; // dwdot[O2]/d[CH3O]
  J[821] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[825] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 69: CH3 + O2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  dlnkfdT = (4498.75699229419) * invT2;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[14] += q; // CH2O
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[602] -= dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 70: CH3 + HO2 <=> CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[228] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[12];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[444] += dqdci; // dwdot[CH4]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[602] += dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[8];
  J[652] -= dqdci; // dwdot[HO2]/d[CH4]
  J[656] += dqdci; // dwdot[O2]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 71: CH3 + HO2 <=> CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 13400000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[15];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[3] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH3O
  // d()/d[OH]
  dqdci = -k_r * sc[15];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  J[177] += dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[231] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[609] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = -k_r * sc[3];
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[814] -= dqdci; // dwdot[HO2]/d[CH3O]
  J[821] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[825] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 72: CH3 + H2O2 <=> CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 0.0245 * exp(2.47 * tc[0] - (2606.66232886845) * invT);
  dlnkfdT = 2.47 * invT + (2606.66232886845) * invT2;
  // reverse
  phi_r = sc[4] * sc[12];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[11]) + (h_RT[4] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // d()/d[HO2]
  dqdci = -k_r * sc[12];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[228] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[11];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[389] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[390] += dqdci; // dwdot[CH4]/d[H2O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[598] += dqdci; // dwdot[HO2]/d[CH3]
  J[601] -= dqdci; // dwdot[H2O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[4];
  J[652] += dqdci; // dwdot[HO2]/d[CH4]
  J[655] -= dqdci; // dwdot[H2O2]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 73: CH3 + HCO <=> CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 8480000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[16];
  Kc = exp(g_RT[11] - g_RT[12] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[12] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[607] -= dqdci; // dwdot[HCO]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[16];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[661] -= dqdci; // dwdot[HCO]/d[CH4]
  J[664] += dqdci; // dwdot[CO]/d[CH4]
  // d()/d[HCO]
  dqdci = +k_f * sc[11];
  J[713] -= dqdci; // dwdot[CH3]/d[HCO]
  J[714] += dqdci; // dwdot[CH4]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[875] -= dqdci; // dwdot[CH3]/d[CO]
  J[876] += dqdci; // dwdot[CH4]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 74: CH2O + CH3 <=> CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[14];
  k_f = 0.00332 * exp(2.81 * tc[0] - (2948.84966161566) * invT);
  dlnkfdT = 2.81 * invT + (2948.84966161566) * invT2;
  // reverse
  phi_r = sc[12] * sc[13];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[14]) + (h_RT[12] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[608] -= dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[13];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[661] += dqdci; // dwdot[HCO]/d[CH4]
  J[662] -= dqdci; // dwdot[CH2O]/d[CH4]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[713] -= dqdci; // dwdot[CH3]/d[HCO]
  J[714] += dqdci; // dwdot[CH4]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[11];
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[768] += dqdci; // dwdot[CH4]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 75: CH2 + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[20];
  Kc = exp(-g_RT[1] + g_RT[9] + g_RT[11] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[11]) + (h_RT[1] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[9] -= q;  // CH2
  wdot[11] -= q; // CH3
  wdot[20] += q; // C2H4
  // d()/d[H]
  dqdci = -k_r * sc[20];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[11];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[497] -= dqdci; // dwdot[CH3]/d[CH2]
  J[506] += dqdci; // dwdot[C2H4]/d[CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[603] -= dqdci; // dwdot[CH2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[1];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1089] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 76: CH2* + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  dlnkfdT = (-286.83349950869) * invT2;
  // reverse
  phi_r = sc[1] * sc[20];
  Kc = exp(-g_RT[1] + g_RT[10] + g_RT[11] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[11]) + (h_RT[1] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[10] -= q; // CH2*
  wdot[11] -= q; // CH3
  wdot[20] += q; // C2H4
  // d()/d[H]
  dqdci = -k_r * sc[20];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[11];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] -= dqdci; // dwdot[CH3]/d[CH2*]
  J[560] += dqdci; // dwdot[C2H4]/d[CH2*]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[1];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1090] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 78: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 4990000 * exp(0.1 * tc[0] - (5334.09665753003) * invT);
  dlnkfdT = 0.1 * invT + (5334.09665753003) * invT2;
  // reverse
  phi_r = sc[1] * sc[21];
  Kc = exp(-g_RT[1] + 2.000000 * g_RT[11] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[1] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;      // H
  wdot[11] -= 2 * q; // CH3
  wdot[21] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[21];
  J[55] += dqdci;      // dwdot[H]/d[H]
  J[65] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[75] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[595] += dqdci;      // dwdot[H]/d[CH3]
  J[605] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[1];
  J[1135] += dqdci;      // dwdot[H]/d[C2H5]
  J[1145] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2863] += dqdT;      // dwdot[H]/dT
  J[2873] += -2 * dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT;      // dwdot[C2H5]/dT

  // reaction 79: CH3O + H <=> CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[14];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[284] += dqdci; // dwdot[CH2O]/d[H2]
  J[285] -= dqdci; // dwdot[CH3O]/d[H2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[5];
  J[757] -= dqdci; // dwdot[H]/d[CH2O]
  J[761] += dqdci; // dwdot[H2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[815] += dqdci; // dwdot[H2]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 80: CH3O + H <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[11];
  Kc = exp(g_RT[1] - g_RT[3] - g_RT[11] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[3] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[11];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[609] -= dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[821] += dqdci; // dwdot[CH3]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 81: CH3O + H <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 16000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(g_RT[1] - g_RT[6] - g_RT[10] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[6] += q;  // H2O
  wdot[10] += q; // CH2*
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  J[64] += dqdci; // dwdot[CH2*]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[334] += dqdci; // dwdot[CH2*]/d[H2O]
  J[339] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[6];
  J[541] -= dqdci; // dwdot[H]/d[CH2*]
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[550] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[555] -= dqdci; // dwdot[CH3O]/d[CH2*]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[816] += dqdci; // dwdot[H2O]/d[CH3O]
  J[820] += dqdci; // dwdot[CH2*]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2872] += dqdT; // dwdot[CH2*]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 82: CH3O + O <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[15]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[O]
  dqdci = +k_f * sc[15];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[123] -= dqdci; // dwdot[CH3O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[2];
  J[812] -= dqdci; // dwdot[O]/d[CH3O]
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 83: CH3O + OH <=> CH2O + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[14];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[15]) + (h_RT[6] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[OH]
  dqdci = +k_f * sc[15];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[338] += dqdci; // dwdot[CH2O]/d[H2O]
  J[339] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[6];
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[762] += dqdci; // dwdot[H2O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[3];
  J[813] -= dqdci; // dwdot[OH]/d[CH3O]
  J[816] += dqdci; // dwdot[H2O]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 84: CH3O + O2 <=> CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 4.28e-19 * exp(7.6 * tc[0] - (-1776.35483029066) * invT);
  dlnkfdT = 7.6 * invT + (-1776.35483029066) * invT2;
  // reverse
  phi_r = sc[4] * sc[14];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[4] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[HO2]
  dqdci = -k_r * sc[14];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[231] -= dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[15];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[447] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[4];
  J[760] += dqdci; // dwdot[HO2]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[8];
  J[814] += dqdci; // dwdot[HO2]/d[CH3O]
  J[818] -= dqdci; // dwdot[O2]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 85: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 660 * exp(1.62 * tc[0] - (5454.86865732316) * invT);
  dlnkfdT = 1.62 * invT + (5454.86865732316) * invT2;
  // reverse
  phi_r = sc[5] * sc[11];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[5] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[H]
  dqdci = +k_f * sc[12];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[66] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[11];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  J[282] -= dqdci; // dwdot[CH4]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[599] += dqdci; // dwdot[H2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[1];
  J[649] -= dqdci; // dwdot[H]/d[CH4]
  J[653] += dqdci; // dwdot[H2]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 86: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 1020 * exp(1.5 * tc[0] - (4327.66332592059) * invT);
  dlnkfdT = 1.5 * invT + (4327.66332592059) * invT2;
  // reverse
  phi_r = sc[3] * sc[11];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[3] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[120] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[11];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[174] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[650] -= dqdci; // dwdot[O]/d[CH4]
  J[651] += dqdci; // dwdot[OH]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 87: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 100 * exp(1.6 * tc[0] - (1570.03599731073) * invT);
  dlnkfdT = 1.6 * invT + (1570.03599731073) * invT2;
  // reverse
  phi_r = sc[6] * sc[11];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[12]) + (h_RT[6] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[174] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[11];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[335] += dqdci; // dwdot[CH3]/d[H2O]
  J[336] -= dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[651] -= dqdci; // dwdot[OH]/d[CH4]
  J[654] += dqdci; // dwdot[H2O]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 88: CH2 + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 2.46 * exp(2 * tc[0] - (4161.60182620503) * invT);
  dlnkfdT = 2 * invT + (4161.60182620503) * invT2;
  // reverse
  phi_r = (sc[11] * sc[11]);
  Kc = exp(g_RT[9] - 2.000000 * g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[12]) + (2.000000 * h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;      // CH2
  wdot[11] += 2 * q; // CH3
  wdot[12] -= q;     // CH4
  // d()/d[CH2]
  dqdci = +k_f * sc[12];
  J[495] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[497] += 2 * dqdci; // dwdot[CH3]/d[CH2]
  J[498] -= dqdci;     // dwdot[CH4]/d[CH2]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[11];
  J[603] -= dqdci;     // dwdot[CH2]/d[CH3]
  J[605] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[9];
  J[657] -= dqdci;     // dwdot[CH2]/d[CH4]
  J[659] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2871] -= dqdT;     // dwdot[CH2]/dT
  J[2873] += 2 * dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT;     // dwdot[CH4]/dT

  // reaction 89: CH2* + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[12];
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  dlnkfdT = (-286.83349950869) * invT2;
  // reverse
  phi_r = (sc[11] * sc[11]);
  Kc = exp(g_RT[10] - 2.000000 * g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[12]) + (2.000000 * h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q;     // CH2*
  wdot[11] += 2 * q; // CH3
  wdot[12] -= q;     // CH4
  // d()/d[CH2*]
  dqdci = +k_f * sc[12];
  J[550] -= dqdci;     // dwdot[CH2*]/d[CH2*]
  J[551] += 2 * dqdci; // dwdot[CH3]/d[CH2*]
  J[552] -= dqdci;     // dwdot[CH4]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[11];
  J[604] -= dqdci;     // dwdot[CH2*]/d[CH3]
  J[605] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[10];
  J[658] -= dqdci;     // dwdot[CH2*]/d[CH4]
  J[659] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2872] -= dqdT;     // dwdot[CH2*]/dT
  J[2873] += 2 * dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT;     // dwdot[CH4]/dT

  // reaction 91: C2H2 + O <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 4.08 * exp(2 * tc[0] - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[9] * sc[16];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[18]) + (h_RT[9] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[9] += q;  // CH2
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] += dqdci; // dwdot[CH2]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[126] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[16];
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[502] += dqdci; // dwdot[CO]/d[CH2]
  J[504] -= dqdci; // dwdot[C2H2]/d[CH2]
  // d()/d[CO]
  dqdci = -k_r * sc[9];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[873] += dqdci; // dwdot[CH2]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[2];
  J[974] -= dqdci; // dwdot[O]/d[C2H2]
  J[981] += dqdci; // dwdot[CH2]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT

  // reaction 92: C2H2 + OH <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 4.83e-10 * exp(4 * tc[0] - (-1006.43333160944) * invT);
  dlnkfdT = 4 * invT + (-1006.43333160944) * invT2;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = exp(g_RT[3] - g_RT[11] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[18]) + (h_RT[11] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[180] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[612] -= dqdci; // dwdot[C2H2]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[975] -= dqdci; // dwdot[OH]/d[C2H2]
  J[983] += dqdci; // dwdot[CH3]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT

  // reaction 93: C2H2 + HCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[18];
  k_f = 10 * exp(2 * tc[0] - (3019.29999482832) * invT);
  dlnkfdT = 2 * invT + (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[16] * sc[19];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[18]) + (h_RT[16] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  wdot[19] += q; // C2H3
  // d()/d[HCO]
  dqdci = +k_f * sc[18];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[720] -= dqdci; // dwdot[C2H2]/d[HCO]
  J[721] += dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[19];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[13];
  J[985] -= dqdci; // dwdot[HCO]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] += dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[16];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1044] -= dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT

  // reaction 94: C2H2 + CH3 <=> aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[18];
  k_f = 2.68e+47 * exp(-12.82 * tc[0] - (17979.9314692026) * invT);
  dlnkfdT = -12.82 * invT + (17979.9314692026) * invT2;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[11] + g_RT[18] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[18]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[18] -= q; // C2H2
  wdot[24] += q; // aC3H5
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[612] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H2]
  dqdci = +k_f * sc[11];
  J[983] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[996] += dqdci; // dwdot[aC3H5]/d[C2H2]
  // d()/d[aC3H5]
  dqdci = -k_r;
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1314] -= dqdci; // dwdot[C2H2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 96: C2H3 + H <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[18];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[5] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[19];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[72] += dqdci; // dwdot[C2H2]/d[H]
  J[73] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[18];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[288] += dqdci; // dwdot[C2H2]/d[H2]
  J[289] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[973] -= dqdci; // dwdot[H]/d[C2H2]
  J[977] += dqdci; // dwdot[H2]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[1];
  J[1027] -= dqdci; // dwdot[H]/d[C2H3]
  J[1031] += dqdci; // dwdot[H2]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 97: C2H3 + O <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[19]) + (h_RT[11] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[19] -= q; // C2H3
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[127] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] -= dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[2];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1037] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 98: C2H3 + OH <=> C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 30110000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[18];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[6] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[OH]
  dqdci = +k_f * sc[19];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[180] += dqdci; // dwdot[C2H2]/d[OH]
  J[181] -= dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[18];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[342] += dqdci; // dwdot[C2H2]/d[H2O]
  J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H2]
  dqdci = -k_r * sc[6];
  J[975] -= dqdci; // dwdot[OH]/d[C2H2]
  J[978] += dqdci; // dwdot[H2O]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[3];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 99: C2H3 + O2 <=> C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 1.34 * exp(1.61 * tc[0] - (-192.93326966953) * invT);
  dlnkfdT = 1.61 * invT + (-192.93326966953) * invT2;
  // reverse
  phi_r = sc[4] * sc[18];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[4] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[HO2]
  dqdci = -k_r * sc[18];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[234] += dqdci; // dwdot[C2H2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[450] += dqdci; // dwdot[C2H2]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[4];
  J[976] += dqdci; // dwdot[HO2]/d[C2H2]
  J[980] -= dqdci; // dwdot[O2]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 100: C2H3 + O2 <=> CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 300000 * exp(0.29 * tc[0] - (5.53538332385192) * invT);
  dlnkfdT = 0.29 * invT + (5.53538332385192) * invT2;
  // reverse
  phi_r = sc[2] * sc[23];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[2] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[19] -= q; // C2H3
  wdot[23] += q; // CH2CHO
  // d()/d[O]
  dqdci = -k_r * sc[23];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[127] -= dqdci; // dwdot[C2H3]/d[O]
  J[131] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  J[455] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1028] += dqdci; // dwdot[O]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1049] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[2];
  J[1244] += dqdci; // dwdot[O]/d[CH2CHO]
  J[1250] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1261] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1265] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2885] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 101: C2H3 + O2 <=> CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 46000000000 * exp(-1.39 * tc[0] - (508.248832462767) * invT);
  dlnkfdT = -1.39 * invT + (508.248832462767) * invT2;
  // reverse
  phi_r = sc[13] * sc[14];
  Kc = exp(g_RT[8] - g_RT[13] - g_RT[14] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[13] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // O2
  wdot[13] += q; // HCO
  wdot[14] += q; // CH2O
  wdot[19] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[14];
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] += dqdci; // dwdot[CH2O]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CH2O]
  dqdci = -k_r * sc[13];
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[775] -= dqdci; // dwdot[C2H3]/d[CH2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1039] += dqdci; // dwdot[HCO]/d[C2H3]
  J[1040] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 102: C2H3 + HO2 <=> CH2CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[19];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[23];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[19]) + (h_RT[3] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[19] -= q; // C2H3
  wdot[23] += q; // CH2CHO
  // d()/d[OH]
  dqdci = -k_r * sc[23];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[181] -= dqdci; // dwdot[C2H3]/d[OH]
  J[185] += dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  J[239] += dqdci; // dwdot[CH2CHO]/d[HO2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[4];
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1030] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1049] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[3];
  J[1245] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1246] -= dqdci; // dwdot[HO2]/d[CH2CHO]
  J[1261] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1265] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2885] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 103: C2H3 + H2O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[19];
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  dlnkfdT = (-299.917132819613) * invT2;
  // reverse
  phi_r = sc[4] * sc[20];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[19]) + (h_RT[4] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // d()/d[HO2]
  dqdci = -k_r * sc[20];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[397] -= dqdci; // dwdot[C2H3]/d[H2O2]
  J[398] += dqdci; // dwdot[C2H4]/d[H2O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[7];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1033] -= dqdci; // dwdot[H2O2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[4];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1087] -= dqdci; // dwdot[H2O2]/d[C2H4]
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 104: C2H3 + HCO <=> C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 90330000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[20];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[16] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[722] += dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[20];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] -= dqdci; // dwdot[C2H3]/d[CO]
  J[884] += dqdci; // dwdot[C2H4]/d[CO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[16];
  J[1093] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[1096] += dqdci; // dwdot[CO]/d[C2H4]
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 105: C2H3 + HCO <=> C2H3CHO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 18000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[13] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[19] -= q; // C2H3
  wdot[27] += q; // C2H3CHO
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[729] += dqdci; // dwdot[C2H3CHO]/d[HCO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] += dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = -k_r;
  J[1471] -= dqdci; // dwdot[HCO]/d[C2H3CHO]
  J[1477] -= dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 106: C2H3 + CH3 <=> C2H2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 392000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[18];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[12] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[612] += dqdci; // dwdot[C2H2]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[18];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[666] += dqdci; // dwdot[C2H2]/d[CH4]
  J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[C2H2]
  dqdci = -k_r * sc[12];
  J[983] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[984] += dqdci; // dwdot[CH4]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1038] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 108: C2H3 + CH3 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 1.5e+18 * exp(-2.83 * tc[0] - (9368.88788395227) * invT);
  dlnkfdT = -2.83 * invT + (9368.88788395227) * invT2;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[11] + g_RT[19] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[11] -= q; // CH3
  wdot[19] -= q; // C2H3
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[73] -= dqdci; // dwdot[C2H3]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[1027] += dqdci; // dwdot[H]/d[C2H3]
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1050] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1315] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 109: 2 C2H3 <=> C2H2 + C2H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 960000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[18] * sc[20];
  Kc = exp(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[19]) + (h_RT[18] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[18] += q;     // C2H2
  wdot[19] -= 2 * q; // C2H3
  wdot[20] += q;     // C2H4
  // d()/d[C2H2]
  dqdci = -k_r * sc[20];
  J[990] += dqdci;      // dwdot[C2H2]/d[C2H2]
  J[991] += -2 * dqdci; // dwdot[C2H3]/d[C2H2]
  J[992] += dqdci;      // dwdot[C2H4]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * 2.000000 * sc[19];
  J[1044] += dqdci;      // dwdot[C2H2]/d[C2H3]
  J[1045] += -2 * dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci;      // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[18];
  J[1098] += dqdci;      // dwdot[C2H2]/d[C2H4]
  J[1099] += -2 * dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci;      // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2880] += dqdT;      // dwdot[C2H2]/dT
  J[2881] += -2 * dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT;      // dwdot[C2H4]/dT

  // reaction 110: CH2CHO <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23];
  k_f = 7.8e+41 * exp(-9.147 * tc[0] - (23600.8616262414) * invT);
  dlnkfdT = -9.147 * invT + (23600.8616262414) * invT2;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = refC * exp(-g_RT[11] - g_RT[16] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[23]) + (h_RT[11] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[23] -= q; // CH2CHO
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[617] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[887] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH2CHO]
  dqdci = +k_f;
  J[1253] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1258] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 111: CH2CHO + H <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[23];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[13];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[13] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[23]) + (h_RT[11] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[13] += q; // HCO
  wdot[23] -= q; // CH2CHO
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[77] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[13];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[617] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[11];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[713] += dqdci; // dwdot[CH3]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[725] -= dqdci; // dwdot[CH2CHO]/d[HCO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[1];
  J[1243] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1253] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1255] += dqdci; // dwdot[HCO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 112: CH2CHO + O2 <=> CH2O + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[23];
  k_f = 18000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[16];
  Kc = refC * exp(-g_RT[3] + g_RT[8] - g_RT[14] - g_RT[16] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[23]) + (h_RT[3] + h_RT[14] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[14] += q; // CH2O
  wdot[16] += q; // CO
  wdot[23] -= q; // CH2CHO
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[16];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[185] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  J[455] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[16];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[772] += dqdci; // dwdot[CO]/d[CH2O]
  J[779] -= dqdci; // dwdot[CH2CHO]/d[CH2O]
  // d()/d[CO]
  dqdci = -k_r * sc[3] * sc[14];
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[878] += dqdci; // dwdot[CH2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[887] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[8];
  J[1245] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1250] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1256] += dqdci; // dwdot[CH2O]/d[CH2CHO]
  J[1258] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 114: C2H4 + H <=> C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 50.7 * exp(1.9 * tc[0] - (6516.65582217112) * invT);
  dlnkfdT = 1.9 * invT + (6516.65582217112) * invT2;
  // reverse
  phi_r = sc[5] * sc[19];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[5] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[H]
  dqdci = +k_f * sc[20];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[73] += dqdci; // dwdot[C2H3]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[19];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[289] += dqdci; // dwdot[C2H3]/d[H2]
  J[290] -= dqdci; // dwdot[C2H4]/d[H2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[5];
  J[1027] -= dqdci; // dwdot[H]/d[C2H3]
  J[1031] += dqdci; // dwdot[H2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1085] += dqdci; // dwdot[H2]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 115: C2H4 + O <=> C2H3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 15.1 * exp(1.9 * tc[0] - (1882.03033010965) * invT);
  dlnkfdT = 1.9 * invT + (1882.03033010965) * invT2;
  // reverse
  phi_r = sc[3] * sc[19];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[3] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[127] += dqdci; // dwdot[C2H3]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[19];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[182] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1083] += dqdci; // dwdot[OH]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 116: C2H4 + O <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 19.2 * exp(1.83 * tc[0] - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[11] * sc[13];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[13] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[11] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[13] += q; // HCO
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[13];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[614] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[11];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[713] += dqdci; // dwdot[CH3]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[722] -= dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1093] += dqdci; // dwdot[HCO]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 117: C2H4 + O <=> CH2 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 0.384 * exp(1.83 * tc[0] - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[9] * sc[14];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[14] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[9] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[9] += q;  // CH2
  wdot[14] += q; // CH2O
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] += dqdci; // dwdot[CH2]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[14];
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  J[506] -= dqdci; // dwdot[C2H4]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[9];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[765] += dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[776] -= dqdci; // dwdot[C2H4]/d[CH2O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1089] += dqdci; // dwdot[CH2]/d[C2H4]
  J[1094] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 118: C2H4 + OH <=> C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[20];
  k_f = 3.6 * exp(2 * tc[0] - (1258.0416645118) * invT);
  dlnkfdT = 2 * invT + (1258.0416645118) * invT2;
  // reverse
  phi_r = sc[6] * sc[19];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[20]) + (h_RT[6] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[182] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[19];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[343] += dqdci; // dwdot[C2H3]/d[H2O]
  J[344] -= dqdci; // dwdot[C2H4]/d[H2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[1083] -= dqdci; // dwdot[OH]/d[C2H4]
  J[1086] += dqdci; // dwdot[H2O]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 119: C2H4 + HCO <=> C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 10 * exp(2 * tc[0] - (4025.73332643776) * invT);
  dlnkfdT = 2 * invT + (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[16] * sc[21];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[20] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[16] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[20] -= q; // C2H4
  wdot[21] += q; // C2H5
  // d()/d[HCO]
  dqdci = +k_f * sc[20];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[722] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[723] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[21];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[884] -= dqdci; // dwdot[C2H4]/d[CO]
  J[885] += dqdci; // dwdot[C2H5]/d[CO]
  // d()/d[C2H4]
  dqdci = +k_f * sc[13];
  J[1093] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[1096] += dqdci; // dwdot[CO]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[16];
  J[1147] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[1150] += dqdci; // dwdot[CO]/d[C2H5]
  J[1154] -= dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT

  // reaction 120: C2H4 + CH2 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[20];
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[9] + g_RT[20] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[20]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[9] -= q;  // CH2
  wdot[20] -= q; // C2H4
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[20];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[506] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[510] += dqdci; // dwdot[aC3H5]/d[CH2]
  // d()/d[C2H4]
  dqdci = +k_f * sc[9];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1089] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1104] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1305] -= dqdci; // dwdot[CH2]/d[aC3H5]
  J[1316] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 121: C2H4 + CH2* <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[10] + g_RT[20] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[20]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[10] -= q; // CH2*
  wdot[20] -= q; // C2H4
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[20];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[560] -= dqdci; // dwdot[C2H4]/d[CH2*]
  J[564] += dqdci; // dwdot[aC3H5]/d[CH2*]
  // d()/d[C2H4]
  dqdci = +k_f * sc[10];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1090] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1104] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1306] -= dqdci; // dwdot[CH2*]/d[aC3H5]
  J[1316] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 122: C2H4 + CH3 <=> C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[20];
  k_f = 0.227 * exp(2 * tc[0] - (4629.59332540342) * invT);
  dlnkfdT = 2 * invT + (4629.59332540342) * invT2;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[20]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[613] += dqdci; // dwdot[C2H3]/d[CH3]
  J[614] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[19];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[667] += dqdci; // dwdot[C2H3]/d[CH4]
  J[668] -= dqdci; // dwdot[C2H4]/d[CH4]
  // d()/d[C2H3]
  dqdci = -k_r * sc[12];
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1038] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1092] += dqdci; // dwdot[CH4]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 123: nC3H7 <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
  dlnkfdT = (15611.2604302599) * invT2;
  // reverse
  phi_r = sc[11] * sc[20];
  Kc = refC * exp(-g_RT[11] - g_RT[20] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (h_RT[11] + h_RT[20]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[20] += q; // C2H4
  wdot[26] -= q; // nC3H7
  // d()/d[CH3]
  dqdci = -k_r * sc[20];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[11];
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] -= dqdci; // dwdot[nC3H7]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = +k_f;
  J[1415] += dqdci; // dwdot[CH3]/d[nC3H7]
  J[1424] += dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 124: C2H4 + O2 <=> C2H3 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  dlnkfdT = (30595.573280927) * invT2;
  // reverse
  phi_r = sc[4] * sc[19];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[20]) + (h_RT[4] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[HO2]
  dqdci = -k_r * sc[19];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[235] += dqdci; // dwdot[C2H3]/d[HO2]
  J[236] -= dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[451] += dqdci; // dwdot[C2H3]/d[O2]
  J[452] -= dqdci; // dwdot[C2H4]/d[O2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[4];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[8];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1088] -= dqdci; // dwdot[O2]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 125: C2H3 + C2H4 <=> C4H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[20];
  k_f = 7.93e+32 * exp(-8.47 * tc[0] - (7155.74098774311) * invT);
  dlnkfdT = -8.47 * invT + (7155.74098774311) * invT2;
  // reverse
  phi_r = sc[28];
  Kc = refCinv * exp(g_RT[19] + g_RT[20] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[20]) + (h_RT[28]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[19] -= q; // C2H3
  wdot[20] -= q; // C2H4
  wdot[28] += q; // C4H7
  // d()/d[C2H3]
  dqdci = +k_f * sc[20];
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1054] += dqdci; // dwdot[C4H7]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[19];
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1108] += dqdci; // dwdot[C4H7]/d[C2H4]
  // d()/d[C4H7]
  dqdci = -k_r;
  J[1531] -= dqdci; // dwdot[C2H3]/d[C4H7]
  J[1532] -= dqdci; // dwdot[C2H4]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT

  // reaction 127: C2H5 + H <=> C2H4 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 2000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[20];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[5] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[H]
  dqdci = +k_f * sc[21];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[75] -= dqdci; // dwdot[C2H5]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[20];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[290] += dqdci; // dwdot[C2H4]/d[H2]
  J[291] -= dqdci; // dwdot[C2H5]/d[H2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[5];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1085] += dqdci; // dwdot[H2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[1];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1139] += dqdci; // dwdot[H2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 128: C2H5 + O <=> CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[21];
  k_f = 16040000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[14];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[21]) + (h_RT[11] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[14] += q; // CH2O
  wdot[21] -= q; // C2H5
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[129] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[14];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[11];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[767] += dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[2];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 129: C2H5 + O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 20000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[20];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[4] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[HO2]
  dqdci = -k_r * sc[20];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[452] += dqdci; // dwdot[C2H4]/d[O2]
  J[453] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[4];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1088] -= dqdci; // dwdot[O2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[1138] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1142] -= dqdci; // dwdot[O2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 130: C2H5 + HO2 <=> C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[22];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[21]) + (h_RT[8] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[238] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[22];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[453] -= dqdci; // dwdot[C2H5]/d[O2]
  J[454] += dqdci; // dwdot[C2H6]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1142] += dqdci; // dwdot[O2]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = -k_r * sc[8];
  J[1192] -= dqdci; // dwdot[HO2]/d[C2H6]
  J[1196] += dqdci; // dwdot[O2]/d[C2H6]
  J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] += dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 131: C2H5 + HO2 <=> C2H4 + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[7] * sc[20];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[21]) + (h_RT[7] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[20];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[398] += dqdci; // dwdot[C2H4]/d[H2O2]
  J[399] -= dqdci; // dwdot[C2H5]/d[H2O2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[7];
  J[1084] -= dqdci; // dwdot[HO2]/d[C2H4]
  J[1087] += dqdci; // dwdot[H2O2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1141] += dqdci; // dwdot[H2O2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 132: C2H5 + HO2 <=> CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[11] * sc[14];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[21]) + (h_RT[3] + h_RT[11] + h_RT[14]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[11] += q; // CH3
  wdot[14] += q; // CH2O
  wdot[21] -= q; // C2H5
  // d()/d[OH]
  dqdci = -k_r * sc[11] * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[183] -= dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[227] += dqdci; // dwdot[CH3]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[CH3]
  dqdci = -k_r * sc[3] * sc[14];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[11];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[767] += dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 133: C2H5 + H2O2 <=> C2H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[21];
  k_f = 8700 * exp(-(490.133032493797) * invT);
  dlnkfdT = (490.133032493797) * invT2;
  // reverse
  phi_r = sc[4] * sc[22];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[21]) + (h_RT[4] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // d()/d[HO2]
  dqdci = -k_r * sc[22];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[238] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[21];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[399] -= dqdci; // dwdot[C2H5]/d[H2O2]
  J[400] += dqdci; // dwdot[C2H6]/d[H2O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[7];
  J[1138] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1141] -= dqdci; // dwdot[H2O2]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = -k_r * sc[4];
  J[1192] += dqdci; // dwdot[HO2]/d[C2H6]
  J[1195] -= dqdci; // dwdot[H2O2]/d[C2H6]
  J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] += dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 135: C2H3 + C2H5 <=> CH3 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[21];
  k_f = 3.9e+26 * exp(-5.22 * tc[0] - (9937.0194996458) * invT);
  dlnkfdT = -5.22 * invT + (9937.0194996458) * invT2;
  // reverse
  phi_r = sc[11] * sc[24];
  Kc = exp(-g_RT[11] + g_RT[19] + g_RT[21] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[11] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[19] -= q; // C2H3
  wdot[21] -= q; // C2H5
  wdot[24] += q; // aC3H5
  // d()/d[CH3]
  dqdci = -k_r * sc[24];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[21];
  J[1037] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1047] -= dqdci; // dwdot[C2H5]/d[C2H3]
  J[1050] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[C2H5]
  dqdci = +k_f * sc[19];
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1153] -= dqdci; // dwdot[C2H3]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1158] += dqdci; // dwdot[aC3H5]/d[C2H5]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[11];
  J[1307] += dqdci; // dwdot[CH3]/d[aC3H5]
  J[1315] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1317] -= dqdci; // dwdot[C2H5]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 136: C2H6 + H <=> C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 115 * exp(1.9 * tc[0] - (3789.22149350954) * invT);
  dlnkfdT = 1.9 * invT + (3789.22149350954) * invT2;
  // reverse
  phi_r = sc[5] * sc[21];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[5] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[22];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[76] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[21];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[291] += dqdci; // dwdot[C2H5]/d[H2]
  J[292] -= dqdci; // dwdot[C2H6]/d[H2]
  // d()/d[C2H5]
  dqdci = -k_r * sc[5];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1139] += dqdci; // dwdot[H2]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[1];
  J[1189] -= dqdci; // dwdot[H]/d[C2H6]
  J[1193] += dqdci; // dwdot[H2]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 137: C2H6 + O <=> C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[22];
  k_f = 89.8 * exp(1.92 * tc[0] - (2863.30282842885) * invT);
  dlnkfdT = 1.92 * invT + (2863.30282842885) * invT2;
  // reverse
  phi_r = sc[3] * sc[21];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[22]) + (h_RT[3] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[130] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[21];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[184] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H5]
  dqdci = -k_r * sc[3];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[2];
  J[1190] -= dqdci; // dwdot[O]/d[C2H6]
  J[1191] += dqdci; // dwdot[OH]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 138: C2H6 + OH <=> C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 3.54 * exp(2.12 * tc[0] - (437.798499250106) * invT);
  dlnkfdT = 2.12 * invT + (437.798499250106) * invT2;
  // reverse
  phi_r = sc[6] * sc[21];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[22]) + (h_RT[6] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[184] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[345] += dqdci; // dwdot[C2H5]/d[H2O]
  J[346] -= dqdci; // dwdot[C2H6]/d[H2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[6];
  J[1137] -= dqdci; // dwdot[OH]/d[C2H5]
  J[1140] += dqdci; // dwdot[H2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[1191] -= dqdci; // dwdot[OH]/d[C2H6]
  J[1194] += dqdci; // dwdot[H2O]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 139: C2H6 + CH2* <=> C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  dlnkfdT = (-276.769166192596) * invT2;
  // reverse
  phi_r = sc[11] * sc[21];
  Kc = exp(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[22]) + (h_RT[11] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // CH2*
  wdot[11] += q; // CH3
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[CH2*]
  dqdci = +k_f * sc[22];
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] += dqdci; // dwdot[CH3]/d[CH2*]
  J[561] += dqdci; // dwdot[C2H5]/d[CH2*]
  J[562] -= dqdci; // dwdot[C2H6]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * sc[21];
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[616] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[11];
  J[1144] -= dqdci; // dwdot[CH2*]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[10];
  J[1198] -= dqdci; // dwdot[CH2*]/d[C2H6]
  J[1199] += dqdci; // dwdot[CH3]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 140: C2H6 + CH3 <=> C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[22];
  k_f = 6.14 * exp(1.74 * tc[0] - (5258.61415765932) * invT);
  dlnkfdT = 1.74 * invT + (5258.61415765932) * invT2;
  // reverse
  phi_r = sc[12] * sc[21];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[12] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[22];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[616] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[21];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[669] += dqdci; // dwdot[C2H5]/d[CH4]
  J[670] -= dqdci; // dwdot[C2H6]/d[CH4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[12];
  J[1145] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[1146] += dqdci; // dwdot[CH4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[11];
  J[1199] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[1200] += dqdci; // dwdot[CH4]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 142: O + aC3H5 <=> C2H3CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[27];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[24]) + (h_RT[1] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[24] -= q; // aC3H5
  wdot[27] += q; // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * sc[27];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[78] -= dqdci; // dwdot[aC3H5]/d[H]
  J[81] += dqdci; // dwdot[C2H3CHO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[24];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[132] -= dqdci; // dwdot[aC3H5]/d[O]
  J[135] += dqdci; // dwdot[C2H3CHO]/d[O]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[2];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1298] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci; // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1];
  J[1459] += dqdci; // dwdot[H]/d[C2H3CHO]
  J[1460] -= dqdci; // dwdot[O]/d[C2H3CHO]
  J[1482] -= dqdci; // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 143: OH + aC3H5 <=> C2H3CHO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[24];
  k_f = 4.2e+26 * exp(-5.16 * tc[0] - (15159.905274033) * invT);
  dlnkfdT = -5.16 * invT + (15159.905274033) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[27];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[3] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[3] + h_RT[24]) + (2.000000 * h_RT[1] + h_RT[27]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[3] -= q;     // OH
  wdot[24] -= q;    // aC3H5
  wdot[27] += q;    // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[27];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci;     // dwdot[OH]/d[H]
  J[78] -= dqdci;     // dwdot[aC3H5]/d[H]
  J[81] += dqdci;     // dwdot[C2H3CHO]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[163] += 2 * dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci;     // dwdot[OH]/d[OH]
  J[186] -= dqdci;     // dwdot[aC3H5]/d[OH]
  J[189] += dqdci;     // dwdot[C2H3CHO]/d[OH]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[3];
  J[1297] += 2 * dqdci; // dwdot[H]/d[aC3H5]
  J[1299] -= dqdci;     // dwdot[OH]/d[aC3H5]
  J[1320] -= dqdci;     // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci;     // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1] * sc[1];
  J[1459] += 2 * dqdci; // dwdot[H]/d[C2H3CHO]
  J[1461] -= dqdci;     // dwdot[OH]/d[C2H3CHO]
  J[1482] -= dqdci;     // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci;     // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2865] -= dqdT;     // dwdot[OH]/dT
  J[2886] -= dqdT;     // dwdot[aC3H5]/dT
  J[2889] += dqdT;     // dwdot[C2H3CHO]/dT

  // reaction 144: O2 + aC3H5 <=> C2H3CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[24];
  k_f = 18200000 * exp(-0.41 * tc[0] - (11503.0297636301) * invT);
  dlnkfdT = -0.41 * invT + (11503.0297636301) * invT2;
  // reverse
  phi_r = sc[3] * sc[27];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[24]) + (h_RT[3] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[24] -= q; // aC3H5
  wdot[27] += q; // C2H3CHO
  // d()/d[OH]
  dqdci = -k_r * sc[27];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[186] -= dqdci; // dwdot[aC3H5]/d[OH]
  J[189] += dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[456] -= dqdci; // dwdot[aC3H5]/d[O2]
  J[459] += dqdci; // dwdot[C2H3CHO]/d[O2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[8];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1304] -= dqdci; // dwdot[O2]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci; // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[3];
  J[1461] += dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1466] -= dqdci; // dwdot[O2]/d[C2H3CHO]
  J[1482] -= dqdci; // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 145: HO2 + aC3H5 <=> C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 2660000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[25];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[24]) + (h_RT[8] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[24];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[240] -= dqdci; // dwdot[aC3H5]/d[HO2]
  J[241] += dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[25];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[456] -= dqdci; // dwdot[aC3H5]/d[O2]
  J[457] += dqdci; // dwdot[C3H6]/d[O2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[4];
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1304] += dqdci; // dwdot[O2]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] += dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[8];
  J[1354] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[1358] += dqdci; // dwdot[O2]/d[C3H6]
  J[1374] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 146: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 6600000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[19];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[19] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[24]) + (h_RT[3] + h_RT[14] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[19] += q; // C2H3
  wdot[24] -= q; // aC3H5
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[19];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[186] -= dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[24];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[235] += dqdci; // dwdot[C2H3]/d[HO2]
  J[240] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[19];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[775] += dqdci; // dwdot[C2H3]/d[CH2O]
  J[780] -= dqdci; // dwdot[aC3H5]/d[CH2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3] * sc[14];
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1030] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1040] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1050] -= dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[4];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1310] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1315] += dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 147: HCO + aC3H5 <=> C3H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[24];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[25];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[16] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // d()/d[HCO]
  dqdci = +k_f * sc[24];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[726] -= dqdci; // dwdot[aC3H5]/d[HCO]
  J[727] += dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[25];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[888] -= dqdci; // dwdot[aC3H5]/d[CO]
  J[889] += dqdci; // dwdot[C3H6]/d[CO]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[13];
  J[1309] -= dqdci; // dwdot[HCO]/d[aC3H5]
  J[1312] += dqdci; // dwdot[CO]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] += dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[16];
  J[1363] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[1366] += dqdci; // dwdot[CO]/d[C3H6]
  J[1374] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 150: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[11] * sc[20];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[20] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[11] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[20] += q; // C2H4
  wdot[25] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[25];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[79] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[20];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  J[619] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[11];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1105] -= dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1361] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1370] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 151: C3H6 + H <=> H2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 0.173 * exp(2.5 * tc[0] - (1253.00949785375) * invT);
  dlnkfdT = 2.5 * invT + (1253.00949785375) * invT2;
  // reverse
  phi_r = sc[5] * sc[24];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[5] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[25];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  J[79] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[24];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[294] += dqdci; // dwdot[aC3H5]/d[H2]
  J[295] -= dqdci; // dwdot[C3H6]/d[H2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[5];
  J[1297] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1301] += dqdci; // dwdot[H2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1355] += dqdci; // dwdot[H2]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 152: C3H6 + O <=> C2H3CHO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 40 * exp(1.65 * tc[0] - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[27];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[2] + g_RT[25] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[2] + h_RT[25]) + (2.000000 * h_RT[1] + h_RT[27]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[2] -= q;     // O
  wdot[25] -= q;    // C3H6
  wdot[27] += q;    // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[27];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci;     // dwdot[O]/d[H]
  J[79] -= dqdci;     // dwdot[C3H6]/d[H]
  J[81] += dqdci;     // dwdot[C2H3CHO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[109] += 2 * dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci;     // dwdot[O]/d[O]
  J[133] -= dqdci;     // dwdot[C3H6]/d[O]
  J[135] += dqdci;     // dwdot[C2H3CHO]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1351] += 2 * dqdci; // dwdot[H]/d[C3H6]
  J[1352] -= dqdci;     // dwdot[O]/d[C3H6]
  J[1375] -= dqdci;     // dwdot[C3H6]/d[C3H6]
  J[1377] += dqdci;     // dwdot[C2H3CHO]/d[C3H6]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1] * sc[1];
  J[1459] += 2 * dqdci; // dwdot[H]/d[C2H3CHO]
  J[1460] -= dqdci;     // dwdot[O]/d[C2H3CHO]
  J[1483] -= dqdci;     // dwdot[C3H6]/d[C2H3CHO]
  J[1485] += dqdci;     // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2864] -= dqdT;     // dwdot[O]/dT
  J[2887] -= dqdT;     // dwdot[C3H6]/dT
  J[2889] += dqdT;     // dwdot[C2H3CHO]/dT

  // reaction 153: C3H6 + O <=> C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 35 * exp(1.65 * tc[0] - (-489.126599162188) * invT);
  dlnkfdT = 1.65 * invT + (-489.126599162188) * invT2;
  // reverse
  phi_r = sc[13] * sc[21];
  Kc = exp(g_RT[2] - g_RT[13] - g_RT[21] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[25]) + (h_RT[13] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[13] += q; // HCO
  wdot[21] += q; // C2H5
  wdot[25] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[133] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[21];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[723] += dqdci; // dwdot[C2H5]/d[HCO]
  J[727] -= dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[13];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1147] += dqdci; // dwdot[HCO]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1159] -= dqdci; // dwdot[C3H6]/d[C2H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1352] -= dqdci; // dwdot[O]/d[C3H6]
  J[1363] += dqdci; // dwdot[HCO]/d[C3H6]
  J[1371] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 154: C3H6 + O <=> OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 180000 * exp(0.7 * tc[0] - (2958.91399493175) * invT);
  dlnkfdT = 0.7 * invT + (2958.91399493175) * invT2;
  // reverse
  phi_r = sc[3] * sc[24];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[25]) + (h_RT[3] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[132] += dqdci; // dwdot[aC3H5]/d[O]
  J[133] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[24];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[187] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[3];
  J[1298] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1352] -= dqdci; // dwdot[O]/d[C3H6]
  J[1353] += dqdci; // dwdot[OH]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 155: C3H6 + OH <=> H2O + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[25];
  k_f = 3.1 * exp(2 * tc[0] - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // reverse
  phi_r = sc[6] * sc[24];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[25]) + (h_RT[6] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[25];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[187] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[24];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[348] += dqdci; // dwdot[aC3H5]/d[H2O]
  J[349] -= dqdci; // dwdot[C3H6]/d[H2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[6];
  J[1299] -= dqdci; // dwdot[OH]/d[aC3H5]
  J[1302] += dqdci; // dwdot[H2O]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1353] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1356] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 156: C3H6 + HO2 <=> H2O2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[25];
  k_f = 0.0096 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[24];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[25]) + (h_RT[7] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[25];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[240] += dqdci; // dwdot[aC3H5]/d[HO2]
  J[241] -= dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[24];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[402] += dqdci; // dwdot[aC3H5]/d[H2O2]
  J[403] -= dqdci; // dwdot[C3H6]/d[H2O2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[7];
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1303] += dqdci; // dwdot[H2O2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[4];
  J[1354] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[1357] += dqdci; // dwdot[H2O2]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 157: C3H6 + CH3 <=> CH4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 2.2e-06 * exp(3.5 * tc[0] - (2855.75457844178) * invT);
  dlnkfdT = 3.5 * invT + (2855.75457844178) * invT2;
  // reverse
  phi_r = sc[12] * sc[24];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[25]) + (h_RT[12] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[25];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  J[619] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[24];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[672] += dqdci; // dwdot[aC3H5]/d[CH4]
  J[673] -= dqdci; // dwdot[C3H6]/d[CH4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[12];
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1308] += dqdci; // dwdot[CH4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[11];
  J[1361] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1362] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 158: C2H3CHO + H <=> C2H4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 108000 * exp(0.454 * tc[0] - (2928.72099498347) * invT);
  dlnkfdT = 0.454 * invT + (2928.72099498347) * invT2;
  // reverse
  phi_r = sc[13] * sc[20];
  Kc = exp(g_RT[1] - g_RT[13] - g_RT[20] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[27]) + (h_RT[13] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[13] += q; // HCO
  wdot[20] += q; // C2H4
  wdot[27] -= q; // C2H3CHO
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[81] -= dqdci; // dwdot[C2H3CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[20];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[722] += dqdci; // dwdot[C2H4]/d[HCO]
  J[729] -= dqdci; // dwdot[C2H3CHO]/d[HCO]
  // d()/d[C2H4]
  dqdci = -k_r * sc[13];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1093] += dqdci; // dwdot[HCO]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1107] -= dqdci; // dwdot[C2H3CHO]/d[C2H4]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[1];
  J[1459] -= dqdci; // dwdot[H]/d[C2H3CHO]
  J[1471] += dqdci; // dwdot[HCO]/d[C2H3CHO]
  J[1478] += dqdci; // dwdot[C2H4]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 159: C2H3CHO + O <=> C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 30000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[3] * sc[16] * sc[19];
  Kc = refC * exp(g_RT[2] - g_RT[3] - g_RT[16] - g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[2] + h_RT[27]) + (h_RT[3] + h_RT[16] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[16] += q; // CO
  wdot[19] += q; // C2H3
  wdot[27] -= q; // C2H3CHO
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[127] += dqdci; // dwdot[C2H3]/d[O]
  J[135] -= dqdci; // dwdot[C2H3CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16] * sc[19];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[189] -= dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[CO]
  dqdci = -k_r * sc[3] * sc[19];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  J[891] -= dqdci; // dwdot[C2H3CHO]/d[CO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3] * sc[16];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] -= dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[2];
  J[1460] -= dqdci; // dwdot[O]/d[C2H3CHO]
  J[1461] += dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1474] += dqdci; // dwdot[CO]/d[C2H3CHO]
  J[1477] += dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 160: C2H3CHO + OH <=> C2H3 + CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[6] * sc[16] * sc[19];
  Kc = refC * exp(g_RT[3] - g_RT[6] - g_RT[16] - g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[3] + h_RT[27]) + (h_RT[6] + h_RT[16] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[16] += q; // CO
  wdot[19] += q; // C2H3
  wdot[27] -= q; // C2H3CHO
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[189] -= dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[16] * sc[19];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  J[343] += dqdci; // dwdot[C2H3]/d[H2O]
  J[351] -= dqdci; // dwdot[C2H3CHO]/d[H2O]
  // d()/d[CO]
  dqdci = -k_r * sc[6] * sc[19];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  J[891] -= dqdci; // dwdot[C2H3CHO]/d[CO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6] * sc[16];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] -= dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[3];
  J[1461] -= dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1464] += dqdci; // dwdot[H2O]/d[C2H3CHO]
  J[1474] += dqdci; // dwdot[CO]/d[C2H3CHO]
  J[1477] += dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 161: H + nC3H7 <=> C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[26];
  k_f = 3.7e+18 * exp(-2.92 * tc[0] - (6292.72440588802) * invT);
  dlnkfdT = -2.92 * invT + (6292.72440588802) * invT2;
  // reverse
  phi_r = sc[11] * sc[21];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[26]) + (h_RT[11] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[80] -= dqdci; // dwdot[nC3H7]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[21];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[11];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[1];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1415] += dqdci; // dwdot[CH3]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 162: H + nC3H7 <=> C3H6 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[26];
  k_f = 1800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[25];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[26]) + (h_RT[5] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[80] -= dqdci; // dwdot[nC3H7]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[25];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[295] += dqdci; // dwdot[C3H6]/d[H2]
  J[296] -= dqdci; // dwdot[nC3H7]/d[H2]
  // d()/d[C3H6]
  dqdci = -k_r * sc[5];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1355] += dqdci; // dwdot[H2]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[1];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1409] += dqdci; // dwdot[H2]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 163: O + nC3H7 <=> C2H5 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 96000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[21];
  Kc = exp(g_RT[2] - g_RT[14] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[26]) + (h_RT[14] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[14] += q; // CH2O
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[134] -= dqdci; // dwdot[nC3H7]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[21];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] += dqdci; // dwdot[C2H5]/d[CH2O]
  J[782] -= dqdci; // dwdot[nC3H7]/d[CH2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[14];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[2];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 164: OH + nC3H7 <=> C3H6 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[25];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[26]) + (h_RT[6] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[187] += dqdci; // dwdot[C3H6]/d[OH]
  J[188] -= dqdci; // dwdot[nC3H7]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[25];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[349] += dqdci; // dwdot[C3H6]/d[H2O]
  J[350] -= dqdci; // dwdot[nC3H7]/d[H2O]
  // d()/d[C3H6]
  dqdci = -k_r * sc[6];
  J[1353] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1356] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[3];
  J[1407] -= dqdci; // dwdot[OH]/d[nC3H7]
  J[1410] += dqdci; // dwdot[H2O]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 165: O2 + nC3H7 <=> C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 90000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[25];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[4] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[HO2]
  dqdci = -k_r * sc[25];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[241] += dqdci; // dwdot[C3H6]/d[HO2]
  J[242] -= dqdci; // dwdot[nC3H7]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[457] += dqdci; // dwdot[C3H6]/d[O2]
  J[458] -= dqdci; // dwdot[nC3H7]/d[O2]
  // d()/d[C3H6]
  dqdci = -k_r * sc[4];
  J[1354] += dqdci; // dwdot[HO2]/d[C3H6]
  J[1358] -= dqdci; // dwdot[O2]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[8];
  J[1408] += dqdci; // dwdot[HO2]/d[nC3H7]
  J[1412] -= dqdci; // dwdot[O2]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 166: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[21];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[26]) + (h_RT[3] + h_RT[14] + h_RT[21]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[21];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[188] -= dqdci; // dwdot[nC3H7]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[237] += dqdci; // dwdot[C2H5]/d[HO2]
  J[242] -= dqdci; // dwdot[nC3H7]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[21];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] += dqdci; // dwdot[C2H5]/d[CH2O]
  J[782] -= dqdci; // dwdot[nC3H7]/d[CH2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[3] * sc[14];
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[4];
  J[1407] += dqdci; // dwdot[OH]/d[nC3H7]
  J[1408] -= dqdci; // dwdot[HO2]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 167: CH3 + nC3H7 <=> C3H6 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[25];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[26]) + (h_RT[12] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[619] += dqdci; // dwdot[C3H6]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[25];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[673] += dqdci; // dwdot[C3H6]/d[CH4]
  J[674] -= dqdci; // dwdot[nC3H7]/d[CH4]
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[1361] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1362] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[11];
  J[1415] -= dqdci; // dwdot[CH3]/d[nC3H7]
  J[1416] += dqdci; // dwdot[CH4]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 169: C4H7 + H <=> CH3 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[28];
  k_f = 2e+15 * exp(-2 * tc[0] - (5535.38332385192) * invT);
  dlnkfdT = -2 * invT + (5535.38332385192) * invT2;
  // reverse
  phi_r = sc[11] * sc[24];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[28]) + (h_RT[11] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[24] += q; // aC3H5
  wdot[28] -= q; // C4H7
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  J[82] -= dqdci; // dwdot[C4H7]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[24];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  J[622] -= dqdci; // dwdot[C4H7]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[11];
  J[1297] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1307] += dqdci; // dwdot[CH3]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1324] -= dqdci; // dwdot[C4H7]/d[aC3H5]
  // d()/d[C4H7]
  dqdci = +k_f * sc[1];
  J[1513] -= dqdci; // dwdot[H]/d[C4H7]
  J[1523] += dqdci; // dwdot[CH3]/d[C4H7]
  J[1536] += dqdci; // dwdot[aC3H5]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT

  // reaction 170: C4H7 + HO2 <=> CH2O + OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[28];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[24];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[28]) + (h_RT[3] + h_RT[14] + h_RT[24]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[24] += q; // aC3H5
  wdot[28] -= q; // C4H7
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[24];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[190] -= dqdci; // dwdot[C4H7]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[28];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[240] += dqdci; // dwdot[aC3H5]/d[HO2]
  J[244] -= dqdci; // dwdot[C4H7]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[24];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[780] += dqdci; // dwdot[aC3H5]/d[CH2O]
  J[784] -= dqdci; // dwdot[C4H7]/d[CH2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[3] * sc[14];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1310] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1324] -= dqdci; // dwdot[C4H7]/d[aC3H5]
  // d()/d[C4H7]
  dqdci = +k_f * sc[4];
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1516] -= dqdci; // dwdot[HO2]/d[C4H7]
  J[1526] += dqdci; // dwdot[CH2O]/d[C4H7]
  J[1536] += dqdci; // dwdot[aC3H5]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT

  // reaction 171: C4H7 + HCO <=> C4H81 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[29];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[28] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[16] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[28] -= q; // C4H7
  wdot[29] += q; // C4H81
  // d()/d[HCO]
  dqdci = +k_f * sc[28];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[730] -= dqdci; // dwdot[C4H7]/d[HCO]
  J[731] += dqdci; // dwdot[C4H81]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[29];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[892] -= dqdci; // dwdot[C4H7]/d[CO]
  J[893] += dqdci; // dwdot[C4H81]/d[CO]
  // d()/d[C4H7]
  dqdci = +k_f * sc[13];
  J[1525] -= dqdci; // dwdot[HCO]/d[C4H7]
  J[1528] += dqdci; // dwdot[CO]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] += dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = -k_r * sc[16];
  J[1579] -= dqdci; // dwdot[HCO]/d[C4H81]
  J[1582] += dqdci; // dwdot[CO]/d[C4H81]
  J[1594] -= dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 173: C4H81 + H <=> C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[21];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[21] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[20] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[21] += q; // C2H5
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[21];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] += dqdci; // dwdot[C2H5]/d[C2H4]
  J[1109] -= dqdci; // dwdot[C4H81]/d[C2H4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[20];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1163] -= dqdci; // dwdot[C4H81]/d[C2H5]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1586] += dqdci; // dwdot[C2H4]/d[C4H81]
  J[1587] += dqdci; // dwdot[C2H5]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 174: C4H81 + H <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 3.2e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[11] * sc[25];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[25] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[11] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[25] += q; // C3H6
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[25];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[619] += dqdci; // dwdot[C3H6]/d[CH3]
  J[623] -= dqdci; // dwdot[C4H81]/d[CH3]
  // d()/d[C3H6]
  dqdci = -k_r * sc[11];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1361] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1379] -= dqdci; // dwdot[C4H81]/d[C3H6]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1577] += dqdci; // dwdot[CH3]/d[C4H81]
  J[1591] += dqdci; // dwdot[C3H6]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 175: C4H81 + H <=> C4H7 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 0.65 * exp(2.54 * tc[0] - (3399.73179417669) * invT);
  dlnkfdT = 2.54 * invT + (3399.73179417669) * invT2;
  // reverse
  phi_r = sc[5] * sc[28];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[5] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[82] += dqdci; // dwdot[C4H7]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[28];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[298] += dqdci; // dwdot[C4H7]/d[H2]
  J[299] -= dqdci; // dwdot[C4H81]/d[H2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[5];
  J[1513] -= dqdci; // dwdot[H]/d[C4H7]
  J[1517] += dqdci; // dwdot[H2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1571] += dqdci; // dwdot[H2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 176: C4H81 + O <=> HCO + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 330 * exp(1.45 * tc[0] - (-202.293099653497) * invT);
  dlnkfdT = 1.45 * invT + (-202.293099653497) * invT2;
  // reverse
  phi_r = sc[13] * sc[26];
  Kc = exp(g_RT[2] - g_RT[13] - g_RT[26] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[13] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[13] += q; // HCO
  wdot[26] += q; // nC3H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[134] += dqdci; // dwdot[nC3H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[26];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[728] += dqdci; // dwdot[nC3H7]/d[HCO]
  J[731] -= dqdci; // dwdot[C4H81]/d[HCO]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[13];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1417] += dqdci; // dwdot[HCO]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1433] -= dqdci; // dwdot[C4H81]/d[nC3H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1579] += dqdci; // dwdot[HCO]/d[C4H81]
  J[1592] += dqdci; // dwdot[nC3H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 177: C4H81 + O <=> C4H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 15000000 * exp(-(2898.52799503519) * invT);
  dlnkfdT = (2898.52799503519) * invT2;
  // reverse
  phi_r = sc[3] * sc[28];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[3] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[136] += dqdci; // dwdot[C4H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[C4H7]
  dqdci = -k_r * sc[3];
  J[1514] -= dqdci; // dwdot[O]/d[C4H7]
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1569] += dqdci; // dwdot[OH]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 178: C4H81 + O <=> C4H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 26000000 * exp(-(2249.3784961471) * invT);
  dlnkfdT = (2249.3784961471) * invT2;
  // reverse
  phi_r = sc[3] * sc[28];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[3] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[136] += dqdci; // dwdot[C4H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[C4H7]
  dqdci = -k_r * sc[3];
  J[1514] -= dqdci; // dwdot[O]/d[C4H7]
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1569] += dqdci; // dwdot[OH]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 179: C4H81 + OH <=> C4H7 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 0.0007 * exp(2.66 * tc[0] - (265.195182879087) * invT);
  dlnkfdT = 2.66 * invT + (265.195182879087) * invT2;
  // reverse
  phi_r = sc[6] * sc[28];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[29]) + (h_RT[6] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[28];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[352] += dqdci; // dwdot[C4H7]/d[H2O]
  J[353] -= dqdci; // dwdot[C4H81]/d[H2O]
  // d()/d[C4H7]
  dqdci = -k_r * sc[6];
  J[1515] -= dqdci; // dwdot[OH]/d[C4H7]
  J[1518] += dqdci; // dwdot[H2O]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[3];
  J[1569] -= dqdci; // dwdot[OH]/d[C4H81]
  J[1572] += dqdci; // dwdot[H2O]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 180: C4H81 + O2 <=> C4H7 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[29];
  k_f = 20000000 * exp(-(25628.8247894344) * invT);
  dlnkfdT = (25628.8247894344) * invT2;
  // reverse
  phi_r = sc[4] * sc[28];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[4] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[HO2]
  dqdci = -k_r * sc[28];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[244] += dqdci; // dwdot[C4H7]/d[HO2]
  J[245] -= dqdci; // dwdot[C4H81]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[460] += dqdci; // dwdot[C4H7]/d[O2]
  J[461] -= dqdci; // dwdot[C4H81]/d[O2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[4];
  J[1516] += dqdci; // dwdot[HO2]/d[C4H7]
  J[1520] -= dqdci; // dwdot[O2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[8];
  J[1570] += dqdci; // dwdot[HO2]/d[C4H81]
  J[1574] -= dqdci; // dwdot[O2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 181: C4H81 + HO2 <=> C4H7 + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[29];
  k_f = 1000000 * exp(-(7216.12698763968) * invT);
  dlnkfdT = (7216.12698763968) * invT2;
  // reverse
  phi_r = sc[7] * sc[28];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[29]) + (h_RT[7] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[HO2]
  dqdci = +k_f * sc[29];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[244] += dqdci; // dwdot[C4H7]/d[HO2]
  J[245] -= dqdci; // dwdot[C4H81]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[28];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[406] += dqdci; // dwdot[C4H7]/d[H2O2]
  J[407] -= dqdci; // dwdot[C4H81]/d[H2O2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[7];
  J[1516] -= dqdci; // dwdot[HO2]/d[C4H7]
  J[1519] += dqdci; // dwdot[H2O2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[4];
  J[1570] -= dqdci; // dwdot[HO2]/d[C4H81]
  J[1573] += dqdci; // dwdot[H2O2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 182: C4H81 + CH3 <=> C4H7 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 4.5e-07 * exp(3.65 * tc[0] - (3599.50881050116) * invT);
  dlnkfdT = 3.65 * invT + (3599.50881050116) * invT2;
  // reverse
  phi_r = sc[12] * sc[28];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[29]) + (h_RT[12] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[CH3]
  dqdci = +k_f * sc[29];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[622] += dqdci; // dwdot[C4H7]/d[CH3]
  J[623] -= dqdci; // dwdot[C4H81]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[28];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[676] += dqdci; // dwdot[C4H7]/d[CH4]
  J[677] -= dqdci; // dwdot[C4H81]/d[CH4]
  // d()/d[C4H7]
  dqdci = -k_r * sc[12];
  J[1523] -= dqdci; // dwdot[CH3]/d[C4H7]
  J[1524] += dqdci; // dwdot[CH4]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[11];
  J[1577] -= dqdci; // dwdot[CH3]/d[C4H81]
  J[1578] += dqdci; // dwdot[CH4]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 183: H + pC4H9 <=> 2 C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[30];
  k_f = 3.7e+18 * exp(-2.92 * tc[0] - (6292.72440588802) * invT);
  dlnkfdT = -2.92 * invT + (6292.72440588802) * invT2;
  // reverse
  phi_r = (sc[21] * sc[21]);
  Kc = exp(g_RT[1] - 2.000000 * g_RT[21] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[30]) + (2.000000 * h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;      // H
  wdot[21] += 2 * q; // C2H5
  wdot[30] -= q;     // pC4H9
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[55] -= dqdci;     // dwdot[H]/d[H]
  J[75] += 2 * dqdci; // dwdot[C2H5]/d[H]
  J[84] -= dqdci;     // dwdot[pC4H9]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * 2.000000 * sc[21];
  J[1135] -= dqdci;     // dwdot[H]/d[C2H5]
  J[1155] += 2 * dqdci; // dwdot[C2H5]/d[C2H5]
  J[1164] -= dqdci;     // dwdot[pC4H9]/d[C2H5]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[1];
  J[1621] -= dqdci;     // dwdot[H]/d[pC4H9]
  J[1641] += 2 * dqdci; // dwdot[C2H5]/d[pC4H9]
  J[1650] -= dqdci;     // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2863] -= dqdT;     // dwdot[H]/dT
  J[2883] += 2 * dqdT; // dwdot[C2H5]/dT
  J[2892] -= dqdT;     // dwdot[pC4H9]/dT

  // reaction 184: H + pC4H9 <=> C4H81 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[30];
  k_f = 1800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[29];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[30]) + (h_RT[5] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[83] += dqdci; // dwdot[C4H81]/d[H]
  J[84] -= dqdci; // dwdot[pC4H9]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[29];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[299] += dqdci; // dwdot[C4H81]/d[H2]
  J[300] -= dqdci; // dwdot[pC4H9]/d[H2]
  // d()/d[C4H81]
  dqdci = -k_r * sc[5];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1571] += dqdci; // dwdot[H2]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[1];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1625] += dqdci; // dwdot[H2]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 185: O + pC4H9 <=> CH2O + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 96000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[26];
  Kc = exp(g_RT[2] - g_RT[14] - g_RT[26] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[30]) + (h_RT[14] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[14] += q; // CH2O
  wdot[26] += q; // nC3H7
  wdot[30] -= q; // pC4H9
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[134] += dqdci; // dwdot[nC3H7]/d[O]
  J[138] -= dqdci; // dwdot[pC4H9]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[26];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[782] += dqdci; // dwdot[nC3H7]/d[CH2O]
  J[786] -= dqdci; // dwdot[pC4H9]/d[CH2O]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[14];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1434] -= dqdci; // dwdot[pC4H9]/d[nC3H7]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[2];
  J[1622] -= dqdci; // dwdot[O]/d[pC4H9]
  J[1634] += dqdci; // dwdot[CH2O]/d[pC4H9]
  J[1646] += dqdci; // dwdot[nC3H7]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 186: OH + pC4H9 <=> C4H81 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[29];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[6] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[191] += dqdci; // dwdot[C4H81]/d[OH]
  J[192] -= dqdci; // dwdot[pC4H9]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[29];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[353] += dqdci; // dwdot[C4H81]/d[H2O]
  J[354] -= dqdci; // dwdot[pC4H9]/d[H2O]
  // d()/d[C4H81]
  dqdci = -k_r * sc[6];
  J[1569] -= dqdci; // dwdot[OH]/d[C4H81]
  J[1572] += dqdci; // dwdot[H2O]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[3];
  J[1623] -= dqdci; // dwdot[OH]/d[pC4H9]
  J[1626] += dqdci; // dwdot[H2O]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 187: O2 + pC4H9 <=> C4H81 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 270000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[29];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[30]) + (h_RT[4] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[HO2]
  dqdci = -k_r * sc[29];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[245] += dqdci; // dwdot[C4H81]/d[HO2]
  J[246] -= dqdci; // dwdot[pC4H9]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[461] += dqdci; // dwdot[C4H81]/d[O2]
  J[462] -= dqdci; // dwdot[pC4H9]/d[O2]
  // d()/d[C4H81]
  dqdci = -k_r * sc[4];
  J[1570] += dqdci; // dwdot[HO2]/d[C4H81]
  J[1574] -= dqdci; // dwdot[O2]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[8];
  J[1624] += dqdci; // dwdot[HO2]/d[pC4H9]
  J[1628] -= dqdci; // dwdot[O2]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 188: HO2 + pC4H9 <=> CH2O + OH + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[26];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[26] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[30]) + (h_RT[3] + h_RT[14] + h_RT[26]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[26] += q; // nC3H7
  wdot[30] -= q; // pC4H9
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[26];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[188] += dqdci; // dwdot[nC3H7]/d[OH]
  J[192] -= dqdci; // dwdot[pC4H9]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[242] += dqdci; // dwdot[nC3H7]/d[HO2]
  J[246] -= dqdci; // dwdot[pC4H9]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[26];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[782] += dqdci; // dwdot[nC3H7]/d[CH2O]
  J[786] -= dqdci; // dwdot[pC4H9]/d[CH2O]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[3] * sc[14];
  J[1407] += dqdci; // dwdot[OH]/d[nC3H7]
  J[1408] -= dqdci; // dwdot[HO2]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1434] -= dqdci; // dwdot[pC4H9]/d[nC3H7]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[4];
  J[1623] += dqdci; // dwdot[OH]/d[pC4H9]
  J[1624] -= dqdci; // dwdot[HO2]/d[pC4H9]
  J[1634] += dqdci; // dwdot[CH2O]/d[pC4H9]
  J[1646] += dqdci; // dwdot[nC3H7]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 189: CH3 + pC4H9 <=> C4H81 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[29];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[30]) + (h_RT[12] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[CH3]
  dqdci = +k_f * sc[30];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[623] += dqdci; // dwdot[C4H81]/d[CH3]
  J[624] -= dqdci; // dwdot[pC4H9]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[29];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[677] += dqdci; // dwdot[C4H81]/d[CH4]
  J[678] -= dqdci; // dwdot[pC4H9]/d[CH4]
  // d()/d[C4H81]
  dqdci = -k_r * sc[12];
  J[1577] -= dqdci; // dwdot[CH3]/d[C4H81]
  J[1578] += dqdci; // dwdot[CH4]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[11];
  J[1631] -= dqdci; // dwdot[CH3]/d[pC4H9]
  J[1632] += dqdci; // dwdot[CH4]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 190: C5H9 => C2H4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  dlnkfdT = (15106.1214767918) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] += q; // C2H4
  wdot[24] += q; // aC3H5
  wdot[31] -= q; // C5H9
  // d()/d[C5H9]
  dqdci = +k_f;
  J[1694] += dqdci; // dwdot[C2H4]/d[C5H9]
  J[1698] += dqdci; // dwdot[aC3H5]/d[C5H9]
  J[1705] -= dqdci; // dwdot[C5H9]/d[C5H9]
  // d()/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2893] -= dqdT; // dwdot[C5H9]/dT

  // reaction 191: C5H9 => C2H3 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  dlnkfdT = (15106.1214767918) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H3
  wdot[25] += q; // C3H6
  wdot[31] -= q; // C5H9
  // d()/d[C5H9]
  dqdci = +k_f;
  J[1693] += dqdci; // dwdot[C2H3]/d[C5H9]
  J[1699] += dqdci; // dwdot[C3H6]/d[C5H9]
  J[1705] -= dqdci; // dwdot[C5H9]/d[C5H9]
  // d()/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2893] -= dqdT; // dwdot[C5H9]/dT

  // reaction 193: C5H10 + H <=> C2H4 + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[26];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[26] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[20] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[26] += q; // nC3H7
  wdot[32] -= q; // C5H10
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[80] += dqdci; // dwdot[nC3H7]/d[H]
  J[86] -= dqdci; // dwdot[C5H10]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[26];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] += dqdci; // dwdot[nC3H7]/d[C2H4]
  J[1112] -= dqdci; // dwdot[C5H10]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[20];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1424] += dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1436] -= dqdci; // dwdot[C5H10]/d[nC3H7]
  // d()/d[C5H10]
  dqdci = +k_f * sc[1];
  J[1729] -= dqdci; // dwdot[H]/d[C5H10]
  J[1748] += dqdci; // dwdot[C2H4]/d[C5H10]
  J[1754] += dqdci; // dwdot[nC3H7]/d[C5H10]
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT

  // reaction 194: C5H10 + H <=> C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[21] * sc[25];
  Kc = exp(g_RT[1] - g_RT[21] - g_RT[25] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[21] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[21] += q; // C2H5
  wdot[25] += q; // C3H6
  wdot[32] -= q; // C5H10
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[86] -= dqdci; // dwdot[C5H10]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[25];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1159] += dqdci; // dwdot[C3H6]/d[C2H5]
  J[1166] -= dqdci; // dwdot[C5H10]/d[C2H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[21];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1371] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1382] -= dqdci; // dwdot[C5H10]/d[C3H6]
  // d()/d[C5H10]
  dqdci = +k_f * sc[1];
  J[1729] -= dqdci; // dwdot[H]/d[C5H10]
  J[1749] += dqdci; // dwdot[C2H5]/d[C5H10]
  J[1753] += dqdci; // dwdot[C3H6]/d[C5H10]
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT

  // reaction 195: C2H4 + nC3H7 <=> PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[26];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[33];
  Kc = refCinv * exp(g_RT[20] + g_RT[26] - g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[26]) + (h_RT[33]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[26] -= q; // nC3H7
  wdot[33] += q; // PXC5H11
  // d()/d[C2H4]
  dqdci = +k_f * sc[26];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] -= dqdci; // dwdot[nC3H7]/d[C2H4]
  J[1113] += dqdci; // dwdot[PXC5H11]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[20];
  J[1424] -= dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1437] += dqdci; // dwdot[PXC5H11]/d[nC3H7]
  // d()/d[PXC5H11]
  dqdci = -k_r;
  J[1802] -= dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1808] -= dqdci; // dwdot[nC3H7]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT

  // reaction 197: C6H12 + H <=> C2H4 + pC4H9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[30];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[30] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[20] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[30] += q; // pC4H9
  wdot[34] -= q; // C6H12
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[84] += dqdci; // dwdot[pC4H9]/d[H]
  J[88] -= dqdci; // dwdot[C6H12]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[30];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1110] += dqdci; // dwdot[pC4H9]/d[C2H4]
  J[1114] -= dqdci; // dwdot[C6H12]/d[C2H4]
  // d()/d[pC4H9]
  dqdci = -k_r * sc[20];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1640] += dqdci; // dwdot[C2H4]/d[pC4H9]
  J[1650] += dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1654] -= dqdci; // dwdot[C6H12]/d[pC4H9]
  // d()/d[C6H12]
  dqdci = +k_f * sc[1];
  J[1837] -= dqdci; // dwdot[H]/d[C6H12]
  J[1856] += dqdci; // dwdot[C2H4]/d[C6H12]
  J[1866] += dqdci; // dwdot[pC4H9]/d[C6H12]
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT

  // reaction 198: C6H12 + H <=> C3H6 + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[26];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[26] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[25] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[26] += q; // nC3H7
  wdot[34] -= q; // C6H12
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[80] += dqdci; // dwdot[nC3H7]/d[H]
  J[88] -= dqdci; // dwdot[C6H12]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[26];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] += dqdci; // dwdot[nC3H7]/d[C3H6]
  J[1384] -= dqdci; // dwdot[C6H12]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[25];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1438] -= dqdci; // dwdot[C6H12]/d[nC3H7]
  // d()/d[C6H12]
  dqdci = +k_f * sc[1];
  J[1837] -= dqdci; // dwdot[H]/d[C6H12]
  J[1861] += dqdci; // dwdot[C3H6]/d[C6H12]
  J[1862] += dqdci; // dwdot[nC3H7]/d[C6H12]
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT

  // reaction 199: C2H4 + pC4H9 <=> PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[30];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[35];
  Kc = refCinv * exp(g_RT[20] + g_RT[30] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[30]) + (h_RT[35]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[30] -= q; // pC4H9
  wdot[35] += q; // PXC6H13
  // d()/d[C2H4]
  dqdci = +k_f * sc[30];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1110] -= dqdci; // dwdot[pC4H9]/d[C2H4]
  J[1115] += dqdci; // dwdot[PXC6H13]/d[C2H4]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[20];
  J[1640] -= dqdci; // dwdot[C2H4]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1655] += dqdci; // dwdot[PXC6H13]/d[pC4H9]
  // d()/d[PXC6H13]
  dqdci = -k_r;
  J[1910] -= dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1920] -= dqdci; // dwdot[pC4H9]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT

  // reaction 201: C7H14 + H <=> C2H4 + PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[33];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[33] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[20] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[33] += q; // PXC5H11
  wdot[36] -= q; // C7H14
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[87] += dqdci; // dwdot[PXC5H11]/d[H]
  J[90] -= dqdci; // dwdot[C7H14]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[33];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1113] += dqdci; // dwdot[PXC5H11]/d[C2H4]
  J[1116] -= dqdci; // dwdot[C7H14]/d[C2H4]
  // d()/d[PXC5H11]
  dqdci = -k_r * sc[20];
  J[1783] -= dqdci; // dwdot[H]/d[PXC5H11]
  J[1802] += dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1818] -= dqdci; // dwdot[C7H14]/d[PXC5H11]
  // d()/d[C7H14]
  dqdci = +k_f * sc[1];
  J[1945] -= dqdci; // dwdot[H]/d[C7H14]
  J[1964] += dqdci; // dwdot[C2H4]/d[C7H14]
  J[1977] += dqdci; // dwdot[PXC5H11]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT

  // reaction 202: C7H14 + H <=> C3H6 + pC4H9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[30];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[30] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[25] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[30] += q; // pC4H9
  wdot[36] -= q; // C7H14
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[84] += dqdci; // dwdot[pC4H9]/d[H]
  J[90] -= dqdci; // dwdot[C7H14]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[30];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1380] += dqdci; // dwdot[pC4H9]/d[C3H6]
  J[1386] -= dqdci; // dwdot[C7H14]/d[C3H6]
  // d()/d[pC4H9]
  dqdci = -k_r * sc[25];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1645] += dqdci; // dwdot[C3H6]/d[pC4H9]
  J[1650] += dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1656] -= dqdci; // dwdot[C7H14]/d[pC4H9]
  // d()/d[C7H14]
  dqdci = +k_f * sc[1];
  J[1945] -= dqdci; // dwdot[H]/d[C7H14]
  J[1969] += dqdci; // dwdot[C3H6]/d[C7H14]
  J[1974] += dqdci; // dwdot[pC4H9]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT

  // reaction 203: C2H4 + PXC5H11 <=> PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[33];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[37];
  Kc = refCinv * exp(g_RT[20] + g_RT[33] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[33]) + (h_RT[37]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[33] -= q; // PXC5H11
  wdot[37] += q; // PXC7H15
  // d()/d[C2H4]
  dqdci = +k_f * sc[33];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1113] -= dqdci; // dwdot[PXC5H11]/d[C2H4]
  J[1117] += dqdci; // dwdot[PXC7H15]/d[C2H4]
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[20];
  J[1802] -= dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1819] += dqdci; // dwdot[PXC7H15]/d[PXC5H11]
  // d()/d[PXC7H15]
  dqdci = -k_r;
  J[2018] -= dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2031] -= dqdci; // dwdot[PXC5H11]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT

  // reaction 205: C8H16 + H <=> C2H4 + PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[35];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[20] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[35] += q; // PXC6H13
  wdot[38] -= q; // C8H16
  // d()/d[H]
  dqdci = +k_f * sc[38];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[89] += dqdci; // dwdot[PXC6H13]/d[H]
  J[92] -= dqdci; // dwdot[C8H16]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[35];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1115] += dqdci; // dwdot[PXC6H13]/d[C2H4]
  J[1118] -= dqdci; // dwdot[C8H16]/d[C2H4]
  // d()/d[PXC6H13]
  dqdci = -k_r * sc[20];
  J[1891] -= dqdci; // dwdot[H]/d[PXC6H13]
  J[1910] += dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1928] -= dqdci; // dwdot[C8H16]/d[PXC6H13]
  // d()/d[C8H16]
  dqdci = +k_f * sc[1];
  J[2053] -= dqdci; // dwdot[H]/d[C8H16]
  J[2072] += dqdci; // dwdot[C2H4]/d[C8H16]
  J[2087] += dqdci; // dwdot[PXC6H13]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT

  // reaction 206: C8H16 + H <=> C3H6 + PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[33];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[33] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[25] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[33] += q; // PXC5H11
  wdot[38] -= q; // C8H16
  // d()/d[H]
  dqdci = +k_f * sc[38];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[87] += dqdci; // dwdot[PXC5H11]/d[H]
  J[92] -= dqdci; // dwdot[C8H16]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[33];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1383] += dqdci; // dwdot[PXC5H11]/d[C3H6]
  J[1388] -= dqdci; // dwdot[C8H16]/d[C3H6]
  // d()/d[PXC5H11]
  dqdci = -k_r * sc[25];
  J[1783] -= dqdci; // dwdot[H]/d[PXC5H11]
  J[1807] += dqdci; // dwdot[C3H6]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1820] -= dqdci; // dwdot[C8H16]/d[PXC5H11]
  // d()/d[C8H16]
  dqdci = +k_f * sc[1];
  J[2053] -= dqdci; // dwdot[H]/d[C8H16]
  J[2077] += dqdci; // dwdot[C3H6]/d[C8H16]
  J[2085] += dqdci; // dwdot[PXC5H11]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT

  // reaction 207: C2H4 + PXC6H13 <=> PXC8H17
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[35];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[20] + g_RT[35] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[35]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[35] -= q; // PXC6H13
  wdot[39] += q; // PXC8H17
  // d()/d[C2H4]
  dqdci = +k_f * sc[35];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1115] -= dqdci; // dwdot[PXC6H13]/d[C2H4]
  J[1119] += dqdci; // dwdot[PXC8H17]/d[C2H4]
  // d()/d[PXC6H13]
  dqdci = +k_f * sc[20];
  J[1910] -= dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1925] -= dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1929] += dqdci; // dwdot[PXC8H17]/d[PXC6H13]
  // d()/d[PXC8H17]
  dqdci = -k_r;
  J[2126] -= dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2141] -= dqdci; // dwdot[PXC6H13]/d[PXC8H17]
  J[2145] += dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2897] -= dqdT; // dwdot[PXC6H13]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT

  // reaction 209: C9H18 + H <=> C2H4 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[37];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[37] + g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[20] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[37] += q; // PXC7H15
  wdot[40] -= q; // C9H18
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[91] += dqdci; // dwdot[PXC7H15]/d[H]
  J[94] -= dqdci; // dwdot[C9H18]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[37];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1117] += dqdci; // dwdot[PXC7H15]/d[C2H4]
  J[1120] -= dqdci; // dwdot[C9H18]/d[C2H4]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[20];
  J[1999] -= dqdci; // dwdot[H]/d[PXC7H15]
  J[2018] += dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2038] -= dqdci; // dwdot[C9H18]/d[PXC7H15]
  // d()/d[C9H18]
  dqdci = +k_f * sc[1];
  J[2161] -= dqdci; // dwdot[H]/d[C9H18]
  J[2180] += dqdci; // dwdot[C2H4]/d[C9H18]
  J[2197] += dqdci; // dwdot[PXC7H15]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT

  // reaction 210: C9H18 + H <=> C3H6 + PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[35];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[35] + g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[25] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[35] += q; // PXC6H13
  wdot[40] -= q; // C9H18
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[89] += dqdci; // dwdot[PXC6H13]/d[H]
  J[94] -= dqdci; // dwdot[C9H18]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[35];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1385] += dqdci; // dwdot[PXC6H13]/d[C3H6]
  J[1390] -= dqdci; // dwdot[C9H18]/d[C3H6]
  // d()/d[PXC6H13]
  dqdci = -k_r * sc[25];
  J[1891] -= dqdci; // dwdot[H]/d[PXC6H13]
  J[1915] += dqdci; // dwdot[C3H6]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1930] -= dqdci; // dwdot[C9H18]/d[PXC6H13]
  // d()/d[C9H18]
  dqdci = +k_f * sc[1];
  J[2161] -= dqdci; // dwdot[H]/d[C9H18]
  J[2185] += dqdci; // dwdot[C3H6]/d[C9H18]
  J[2195] += dqdci; // dwdot[PXC6H13]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT

  // reaction 211: C2H4 + PXC7H15 <=> PXC9H19
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[37];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[41];
  Kc = refCinv * exp(g_RT[20] + g_RT[37] - g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[37]) + (h_RT[41]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[37] -= q; // PXC7H15
  wdot[41] += q; // PXC9H19
  // d()/d[C2H4]
  dqdci = +k_f * sc[37];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1117] -= dqdci; // dwdot[PXC7H15]/d[C2H4]
  J[1121] += dqdci; // dwdot[PXC9H19]/d[C2H4]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[20];
  J[2018] -= dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2039] += dqdci; // dwdot[PXC9H19]/d[PXC7H15]
  // d()/d[PXC9H19]
  dqdci = -k_r;
  J[2234] -= dqdci; // dwdot[C2H4]/d[PXC9H19]
  J[2251] -= dqdci; // dwdot[PXC7H15]/d[PXC9H19]
  J[2255] += dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT
  J[2903] += dqdT; // dwdot[PXC9H19]/dT

  // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[39];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[39] + g_RT[42]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[20] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[39] += q; // PXC8H17
  wdot[42] -= q; // C10H20
  // d()/d[H]
  dqdci = +k_f * sc[42];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[93] += dqdci; // dwdot[PXC8H17]/d[H]
  J[96] -= dqdci; // dwdot[C10H20]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[39];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1119] += dqdci; // dwdot[PXC8H17]/d[C2H4]
  J[1122] -= dqdci; // dwdot[C10H20]/d[C2H4]
  // d()/d[PXC8H17]
  dqdci = -k_r * sc[20];
  J[2107] -= dqdci; // dwdot[H]/d[PXC8H17]
  J[2126] += dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2145] += dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2148] -= dqdci; // dwdot[C10H20]/d[PXC8H17]
  // d()/d[C10H20]
  dqdci = +k_f * sc[1];
  J[2269] -= dqdci; // dwdot[H]/d[C10H20]
  J[2288] += dqdci; // dwdot[C2H4]/d[C10H20]
  J[2307] += dqdci; // dwdot[PXC8H17]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT

  // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[37];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[37] + g_RT[42]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[25] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[37] += q; // PXC7H15
  wdot[42] -= q; // C10H20
  // d()/d[H]
  dqdci = +k_f * sc[42];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[91] += dqdci; // dwdot[PXC7H15]/d[H]
  J[96] -= dqdci; // dwdot[C10H20]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[37];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1387] += dqdci; // dwdot[PXC7H15]/d[C3H6]
  J[1392] -= dqdci; // dwdot[C10H20]/d[C3H6]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[25];
  J[1999] -= dqdci; // dwdot[H]/d[PXC7H15]
  J[2023] += dqdci; // dwdot[C3H6]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2040] -= dqdci; // dwdot[C10H20]/d[PXC7H15]
  // d()/d[C10H20]
  dqdci = +k_f * sc[1];
  J[2269] -= dqdci; // dwdot[H]/d[C10H20]
  J[2293] += dqdci; // dwdot[C3H6]/d[C10H20]
  J[2305] += dqdci; // dwdot[PXC7H15]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT

  // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[39];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[43];
  Kc = refCinv * exp(g_RT[20] + g_RT[39] - g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[39]) + (h_RT[43]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[39] -= q; // PXC8H17
  wdot[43] += q; // PXC10H21
  // d()/d[C2H4]
  dqdci = +k_f * sc[39];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1119] -= dqdci; // dwdot[PXC8H17]/d[C2H4]
  J[1123] += dqdci; // dwdot[PXC10H21]/d[C2H4]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[20];
  J[2126] -= dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2149] += dqdci; // dwdot[PXC10H21]/d[PXC8H17]
  // d()/d[PXC10H21]
  dqdci = -k_r;
  J[2342] -= dqdci; // dwdot[C2H4]/d[PXC10H21]
  J[2361] -= dqdci; // dwdot[PXC8H17]/d[PXC10H21]
  J[2365] += dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT
  J[2905] += dqdT; // dwdot[PXC10H21]/dT

  // reaction 216: C12H24 <=> C5H9 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
  dlnkfdT = (35696.6303005228) * invT2;
  // reverse
  phi_r = sc[31] * sc[37];
  Kc = refC * exp(-g_RT[31] - g_RT[37] + g_RT[47]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[47]) + (h_RT[31] + h_RT[37]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[31] += q; // C5H9
  wdot[37] += q; // PXC7H15
  wdot[47] -= q; // C12H24
  // d()/d[C5H9]
  dqdci = -k_r * sc[37];
  J[1705] += dqdci; // dwdot[C5H9]/d[C5H9]
  J[1711] += dqdci; // dwdot[PXC7H15]/d[C5H9]
  J[1721] -= dqdci; // dwdot[C12H24]/d[C5H9]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[31];
  J[2029] += dqdci; // dwdot[C5H9]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2045] -= dqdci; // dwdot[C12H24]/d[PXC7H15]
  // d()/d[C12H24]
  dqdci = +k_f;
  J[2569] += dqdci; // dwdot[C5H9]/d[C12H24]
  J[2575] += dqdci; // dwdot[PXC7H15]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2893] += dqdT; // dwdot[C5H9]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[43];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[44];
  Kc = refCinv * exp(g_RT[20] + g_RT[43] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[43]) + (h_RT[44]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[43] -= q; // PXC10H21
  wdot[44] += q; // PXC12H25
  // d()/d[C2H4]
  dqdci = +k_f * sc[43];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1123] -= dqdci; // dwdot[PXC10H21]/d[C2H4]
  J[1124] += dqdci; // dwdot[PXC12H25]/d[C2H4]
  // d()/d[PXC10H21]
  dqdci = +k_f * sc[20];
  J[2342] -= dqdci; // dwdot[C2H4]/d[PXC10H21]
  J[2365] -= dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  J[2366] += dqdci; // dwdot[PXC12H25]/d[PXC10H21]
  // d()/d[PXC12H25]
  dqdci = -k_r;
  J[2396] -= dqdci; // dwdot[C2H4]/d[PXC12H25]
  J[2419] -= dqdci; // dwdot[PXC10H21]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2905] -= dqdT; // dwdot[PXC10H21]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 218: PXC12H25 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 3670000000000 * exp(-0.6 * tc[0] - (7246.31998758796) * invT);
  dlnkfdT = -0.6 * invT + (7246.31998758796) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = exp(g_RT[44] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[44]) + (h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[44] -= q; // PXC12H25
  wdot[46] += q; // S3XC12H25
  // d()/d[PXC12H25]
  dqdci = +k_f;
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2422] += dqdci; // dwdot[S3XC12H25]/d[PXC12H25]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2528] -= dqdci; // dwdot[PXC12H25]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[41];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[25] + g_RT[41] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[25] + h_RT[41]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[25] -= q; // C3H6
  wdot[41] -= q; // PXC9H19
  wdot[45] += q; // SXC12H25
  // d()/d[C3H6]
  dqdci = +k_f * sc[41];
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[1391] -= dqdci; // dwdot[PXC9H19]/d[C3H6]
  J[1395] += dqdci; // dwdot[SXC12H25]/d[C3H6]
  // d()/d[PXC9H19]
  dqdci = +k_f * sc[25];
  J[2239] -= dqdci; // dwdot[C3H6]/d[PXC9H19]
  J[2255] -= dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  J[2259] += dqdci; // dwdot[SXC12H25]/d[PXC9H19]
  // d()/d[SXC12H25]
  dqdci = -k_r;
  J[2455] -= dqdci; // dwdot[C3H6]/d[SXC12H25]
  J[2471] -= dqdci; // dwdot[PXC9H19]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT
  J[2903] -= dqdT; // dwdot[PXC9H19]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[39];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[29] + g_RT[39] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[29] + h_RT[39]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[29] -= q; // C4H81
  wdot[39] -= q; // PXC8H17
  wdot[45] += q; // SXC12H25
  // d()/d[C4H81]
  dqdci = +k_f * sc[39];
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[1605] -= dqdci; // dwdot[PXC8H17]/d[C4H81]
  J[1611] += dqdci; // dwdot[SXC12H25]/d[C4H81]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[29];
  J[2135] -= dqdci; // dwdot[C4H81]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2151] += dqdci; // dwdot[SXC12H25]/d[PXC8H17]
  // d()/d[SXC12H25]
  dqdci = -k_r;
  J[2459] -= dqdci; // dwdot[C4H81]/d[SXC12H25]
  J[2469] -= dqdci; // dwdot[PXC8H17]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32] * sc[37];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[32] + g_RT[37] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[32] + h_RT[37]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[32] -= q; // C5H10
  wdot[37] -= q; // PXC7H15
  wdot[46] += q; // S3XC12H25
  // d()/d[C5H10]
  dqdci = +k_f * sc[37];
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  J[1765] -= dqdci; // dwdot[PXC7H15]/d[C5H10]
  J[1774] += dqdci; // dwdot[S3XC12H25]/d[C5H10]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[32];
  J[2030] -= dqdci; // dwdot[C5H10]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2044] += dqdci; // dwdot[S3XC12H25]/d[PXC7H15]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2516] -= dqdci; // dwdot[C5H10]/d[S3XC12H25]
  J[2521] -= dqdci; // dwdot[PXC7H15]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 222: C10H20 + C2H5 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[42];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[21] + g_RT[42] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[42]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[21] -= q; // C2H5
  wdot[42] -= q; // C10H20
  wdot[46] += q; // S3XC12H25
  // d()/d[C2H5]
  dqdci = +k_f * sc[42];
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1176] -= dqdci; // dwdot[C10H20]/d[C2H5]
  J[1180] += dqdci; // dwdot[S3XC12H25]/d[C2H5]
  // d()/d[C10H20]
  dqdci = +k_f * sc[21];
  J[2289] -= dqdci; // dwdot[C2H5]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  J[2314] += dqdci; // dwdot[S3XC12H25]/d[C10H20]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2505] -= dqdci; // dwdot[C2H5]/d[S3XC12H25]
  J[2526] -= dqdci; // dwdot[C10H20]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34] * sc[35];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[34] + g_RT[35] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[34] + h_RT[35]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[34] -= q; // C6H12
  wdot[35] -= q; // PXC6H13
  wdot[46] += q; // S3XC12H25
  // d()/d[C6H12]
  dqdci = +k_f * sc[35];
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  J[1871] -= dqdci; // dwdot[PXC6H13]/d[C6H12]
  J[1882] += dqdci; // dwdot[S3XC12H25]/d[C6H12]
  // d()/d[PXC6H13]
  dqdci = +k_f * sc[34];
  J[1924] -= dqdci; // dwdot[C6H12]/d[PXC6H13]
  J[1925] -= dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1936] += dqdci; // dwdot[S3XC12H25]/d[PXC6H13]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2518] -= dqdci; // dwdot[C6H12]/d[S3XC12H25]
  J[2519] -= dqdci; // dwdot[PXC6H13]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT
  J[2897] -= dqdT; // dwdot[PXC6H13]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[40];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[26] + g_RT[40] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[40]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[26] -= q; // nC3H7
  wdot[40] -= q; // C9H18
  wdot[46] += q; // S3XC12H25
  // d()/d[nC3H7]
  dqdci = +k_f * sc[40];
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1444] -= dqdci; // dwdot[C9H18]/d[nC3H7]
  J[1450] += dqdci; // dwdot[S3XC12H25]/d[nC3H7]
  // d()/d[C9H18]
  dqdci = +k_f * sc[26];
  J[2186] -= dqdci; // dwdot[nC3H7]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  J[2206] += dqdci; // dwdot[S3XC12H25]/d[C9H18]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2510] -= dqdci; // dwdot[nC3H7]/d[S3XC12H25]
  J[2524] -= dqdci; // dwdot[C9H18]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[36];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[33] + g_RT[36] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33] + h_RT[36]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[33] -= q; // PXC5H11
  wdot[36] -= q; // C7H14
  wdot[46] += q; // S3XC12H25
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[36];
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1818] -= dqdci; // dwdot[C7H14]/d[PXC5H11]
  J[1828] += dqdci; // dwdot[S3XC12H25]/d[PXC5H11]
  // d()/d[C7H14]
  dqdci = +k_f * sc[33];
  J[1977] -= dqdci; // dwdot[PXC5H11]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  J[1990] += dqdci; // dwdot[S3XC12H25]/d[C7H14]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2517] -= dqdci; // dwdot[PXC5H11]/d[S3XC12H25]
  J[2520] -= dqdci; // dwdot[C7H14]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[38];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[30] + g_RT[38] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30] + h_RT[38]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[30] -= q; // pC4H9
  wdot[38] -= q; // C8H16
  wdot[46] += q; // S3XC12H25
  // d()/d[pC4H9]
  dqdci = +k_f * sc[38];
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1658] -= dqdci; // dwdot[C8H16]/d[pC4H9]
  J[1666] += dqdci; // dwdot[S3XC12H25]/d[pC4H9]
  // d()/d[C8H16]
  dqdci = +k_f * sc[30];
  J[2082] -= dqdci; // dwdot[pC4H9]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  J[2098] += dqdci; // dwdot[S3XC12H25]/d[C8H16]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2514] -= dqdci; // dwdot[pC4H9]/d[S3XC12H25]
  J[2522] -= dqdci; // dwdot[C8H16]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 227: C2H5 + PXC10H21 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[43];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[21] + g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[43]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[21] -= q; // C2H5
  wdot[43] -= q; // PXC10H21
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[21] -= dqdci; // dwdot[C2H5]/d[NC12H26]
  J[43] -= dqdci; // dwdot[PXC10H21]/d[NC12H26]
  // d()/d[C2H5]
  dqdci = +k_f * sc[43];
  J[1134] += dqdci; // dwdot[NC12H26]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1177] -= dqdci; // dwdot[PXC10H21]/d[C2H5]
  // d()/d[PXC10H21]
  dqdci = +k_f * sc[21];
  J[2322] += dqdci; // dwdot[NC12H26]/d[PXC10H21]
  J[2343] -= dqdci; // dwdot[C2H5]/d[PXC10H21]
  J[2365] -= dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2905] -= dqdT; // dwdot[PXC10H21]/dT

  // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[41];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[26] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[41]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[26] -= q; // nC3H7
  wdot[41] -= q; // PXC9H19
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[26] -= dqdci; // dwdot[nC3H7]/d[NC12H26]
  J[41] -= dqdci; // dwdot[PXC9H19]/d[NC12H26]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[41];
  J[1404] += dqdci; // dwdot[NC12H26]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1445] -= dqdci; // dwdot[PXC9H19]/d[nC3H7]
  // d()/d[PXC9H19]
  dqdci = +k_f * sc[26];
  J[2214] += dqdci; // dwdot[NC12H26]/d[PXC9H19]
  J[2240] -= dqdci; // dwdot[nC3H7]/d[PXC9H19]
  J[2255] -= dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2903] -= dqdT; // dwdot[PXC9H19]/dT

  // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[39];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[30] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30] + h_RT[39]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[30] -= q; // pC4H9
  wdot[39] -= q; // PXC8H17
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[30] -= dqdci; // dwdot[pC4H9]/d[NC12H26]
  J[39] -= dqdci; // dwdot[PXC8H17]/d[NC12H26]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[39];
  J[1620] += dqdci; // dwdot[NC12H26]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1659] -= dqdci; // dwdot[PXC8H17]/d[pC4H9]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[30];
  J[2106] += dqdci; // dwdot[NC12H26]/d[PXC8H17]
  J[2136] -= dqdci; // dwdot[pC4H9]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT

  // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[37];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[33] + g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33] + h_RT[37]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[33] -= q; // PXC5H11
  wdot[37] -= q; // PXC7H15
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[33] -= dqdci; // dwdot[PXC5H11]/d[NC12H26]
  J[37] -= dqdci; // dwdot[PXC7H15]/d[NC12H26]
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[37];
  J[1782] += dqdci; // dwdot[NC12H26]/d[PXC5H11]
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1819] -= dqdci; // dwdot[PXC7H15]/d[PXC5H11]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[33];
  J[1998] += dqdci; // dwdot[NC12H26]/d[PXC7H15]
  J[2031] -= dqdci; // dwdot[PXC5H11]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT

  // reaction 231: 2 PXC6H13 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[35] * sc[35]);
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + 2.000000 * g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[35]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;      // NC12H26
  wdot[35] -= 2 * q; // PXC6H13
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;       // dwdot[NC12H26]/d[NC12H26]
  J[35] += -2 * dqdci; // dwdot[PXC6H13]/d[NC12H26]
  // d()/d[PXC6H13]
  dqdci = +k_f * 2.000000 * sc[35];
  J[1890] += dqdci;      // dwdot[NC12H26]/d[PXC6H13]
  J[1925] += -2 * dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  // d()/dT
  J[2862] += dqdT;      // dwdot[NC12H26]/dT
  J[2897] += -2 * dqdT; // dwdot[PXC6H13]/dT

  // reaction 232: H + NC12H26 <=> H2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 1.3 * exp(2.54 * tc[0] - (3399.73179417669) * invT);
  dlnkfdT = 2.54 * invT + (3399.73179417669) * invT2;
  // reverse
  phi_r = sc[5] * sc[44];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci; // dwdot[NC12H26]/d[H]
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[98] += dqdci; // dwdot[PXC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[44];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[314] += dqdci; // dwdot[PXC12H25]/d[H2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[5];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2377] -= dqdci; // dwdot[H]/d[PXC12H25]
  J[2381] += dqdci; // dwdot[H2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 233: H + NC12H26 <=> H2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 2.6 * exp(2.4 * tc[0] - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // reverse
  phi_r = sc[5] * sc[45];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci; // dwdot[NC12H26]/d[H]
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[99] += dqdci; // dwdot[SXC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[45];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[315] += dqdci; // dwdot[SXC12H25]/d[H2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[5];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2431] -= dqdci; // dwdot[H]/d[SXC12H25]
  J[2435] += dqdci; // dwdot[H2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 3.9 * exp(2.4 * tc[0] - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // reverse
  phi_r = sc[5] * sc[46];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci;  // dwdot[NC12H26]/d[H]
  J[55] -= dqdci;  // dwdot[H]/d[H]
  J[59] += dqdci;  // dwdot[H2]/d[H]
  J[100] += dqdci; // dwdot[S3XC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[46];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[316] += dqdci; // dwdot[S3XC12H25]/d[H2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[5];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2485] -= dqdci; // dwdot[H]/d[S3XC12H25]
  J[2489] += dqdci; // dwdot[H2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 235: NC12H26 + O <=> OH + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.19 * exp(2.68 * tc[0] - (1869.95313013034) * invT);
  dlnkfdT = 2.68 * invT + (1869.95313013034) * invT2;
  // reverse
  phi_r = sc[3] * sc[44];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[152] += dqdci; // dwdot[PXC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[44];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[206] += dqdci; // dwdot[PXC12H25]/d[OH]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[3];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2378] -= dqdci; // dwdot[O]/d[PXC12H25]
  J[2379] += dqdci; // dwdot[OH]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 236: NC12H26 + O <=> OH + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.0952 * exp(2.71 * tc[0] - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // reverse
  phi_r = sc[3] * sc[45];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[153] += dqdci; // dwdot[SXC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[45];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[207] += dqdci; // dwdot[SXC12H25]/d[OH]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[3];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2432] -= dqdci; // dwdot[O]/d[SXC12H25]
  J[2433] += dqdci; // dwdot[OH]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 237: NC12H26 + O <=> OH + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.1428 * exp(2.71 * tc[0] - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // reverse
  phi_r = sc[3] * sc[46];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[154] += dqdci; // dwdot[S3XC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[46];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[208] += dqdci; // dwdot[S3XC12H25]/d[OH]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[3];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2486] -= dqdci; // dwdot[O]/d[S3XC12H25]
  J[2487] += dqdci; // dwdot[OH]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.0034 * exp(2.66 * tc[0] - (265.195182879087) * invT);
  dlnkfdT = 2.66 * invT + (265.195182879087) * invT2;
  // reverse
  phi_r = sc[6] * sc[44];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[206] += dqdci; // dwdot[PXC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[44];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[368] += dqdci; // dwdot[PXC12H25]/d[H2O]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[6];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2379] -= dqdci; // dwdot[OH]/d[PXC12H25]
  J[2382] += dqdci; // dwdot[H2O]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.074 * exp(2.39 * tc[0] - (197.764149661255) * invT);
  dlnkfdT = 2.39 * invT + (197.764149661255) * invT2;
  // reverse
  phi_r = sc[6] * sc[45];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[207] += dqdci; // dwdot[SXC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[45];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[369] += dqdci; // dwdot[SXC12H25]/d[H2O]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[6];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2433] -= dqdci; // dwdot[OH]/d[SXC12H25]
  J[2436] += dqdci; // dwdot[H2O]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.101 * exp(2.39 * tc[0] - (197.764149661255) * invT);
  dlnkfdT = 2.39 * invT + (197.764149661255) * invT2;
  // reverse
  phi_r = sc[6] * sc[46];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[208] += dqdci; // dwdot[S3XC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[46];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[370] += dqdci; // dwdot[S3XC12H25]/d[H2O]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[6];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2487] -= dqdci; // dwdot[OH]/d[S3XC12H25]
  J[2490] += dqdci; // dwdot[H2O]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 40000000 * exp(-(25628.8247894344) * invT);
  dlnkfdT = (25628.8247894344) * invT2;
  // reverse
  phi_r = sc[4] * sc[44];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[44];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] += dqdci; // dwdot[PXC12H25]/d[O2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[4];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2380] += dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 80000000 * exp(-(23948.0811256466) * invT);
  dlnkfdT = (23948.0811256466) * invT2;
  // reverse
  phi_r = sc[4] * sc[45];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[45];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] += dqdci; // dwdot[SXC12H25]/d[O2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[4];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2434] += dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 120000000 * exp(-(23948.0811256466) * invT);
  dlnkfdT = (23948.0811256466) * invT2;
  // reverse
  phi_r = sc[4] * sc[46];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[46];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] += dqdci; // dwdot[S3XC12H25]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[4];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2488] += dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.0676 * exp(2.55 * tc[0] - (8298.04281911983) * invT);
  dlnkfdT = 2.55 * invT + (8298.04281911983) * invT2;
  // reverse
  phi_r = sc[7] * sc[44];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[44];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[422] += dqdci; // dwdot[PXC12H25]/d[H2O2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[7];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2380] -= dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2383] += dqdci; // dwdot[H2O2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.089 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[45];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[45];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[423] += dqdci; // dwdot[SXC12H25]/d[H2O2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[7];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2434] -= dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2437] += dqdci; // dwdot[H2O2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.0885 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[46];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[46];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[424] += dqdci; // dwdot[S3XC12H25]/d[H2O2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[7];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2488] -= dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2491] += dqdci; // dwdot[H2O2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 1.81e-06 * exp(3.65 * tc[0] - (3599.50881050116) * invT);
  dlnkfdT = 3.65 * invT + (3599.50881050116) * invT2;
  // reverse
  phi_r = sc[12] * sc[44];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[638] += dqdci; // dwdot[PXC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[44];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[692] += dqdci; // dwdot[PXC12H25]/d[CH4]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[12];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2387] -= dqdci; // dwdot[CH3]/d[PXC12H25]
  J[2388] += dqdci; // dwdot[CH4]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 6e-06 * exp(3.46 * tc[0] - (2757.62732860986) * invT);
  dlnkfdT = 3.46 * invT + (2757.62732860986) * invT2;
  // reverse
  phi_r = sc[12] * sc[45];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[639] += dqdci; // dwdot[SXC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[45];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[693] += dqdci; // dwdot[SXC12H25]/d[CH4]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[12];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2441] -= dqdci; // dwdot[CH3]/d[SXC12H25]
  J[2442] += dqdci; // dwdot[CH4]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 9e-06 * exp(3.46 * tc[0] - (2757.62732860986) * invT);
  dlnkfdT = 3.46 * invT + (2757.62732860986) * invT2;
  // reverse
  phi_r = sc[12] * sc[46];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[640] += dqdci; // dwdot[S3XC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[46];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[694] += dqdci; // dwdot[S3XC12H25]/d[CH4]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[12];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2495] -= dqdci; // dwdot[CH3]/d[S3XC12H25]
  J[2496] += dqdci; // dwdot[CH4]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 250: O2 + PXC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[44];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[44] -= q; // PXC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[44];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] -= dqdci; // dwdot[PXC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[PXC12H25]
  dqdci = +k_f * sc[8];
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2424] += dqdci; // dwdot[C12H25O2]/d[PXC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 251: C12H25O2 => O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[44] += q; // PXC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2636] += dqdci; // dwdot[PXC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 252: O2 + SXC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[45];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[45] -= q; // SXC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[45];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] -= dqdci; // dwdot[SXC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[SXC12H25]
  dqdci = +k_f * sc[8];
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] -= dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  J[2478] += dqdci; // dwdot[C12H25O2]/d[SXC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] -= dqdT; // dwdot[SXC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 253: C12H25O2 => O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[45] += q; // SXC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2637] += dqdci; // dwdot[SXC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 254: O2 + S3XC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[46];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[46] -= q; // S3XC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[46];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] -= dqdci; // dwdot[S3XC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = +k_f * sc[8];
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] -= dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  J[2532] += dqdci; // dwdot[C12H25O2]/d[S3XC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] -= dqdT; // dwdot[S3XC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 255: C12H25O2 => O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[46] += q; // S3XC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2638] += dqdci; // dwdot[S3XC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 256: C12H25O2 => C12OOH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[48] -= q; // C12H25O2
  wdot[49] += q; // C12OOH
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  J[2641] += dqdci; // dwdot[C12OOH]/d[C12H25O2]
  // d()/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT
  J[2911] += dqdT; // dwdot[C12OOH]/dT

  // reaction 257: C12OOH => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[49];
  k_f = 100000000000 * exp(-(5786.99165675428) * invT);
  dlnkfdT = (5786.99165675428) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[48] += q; // C12H25O2
  wdot[49] -= q; // C12OOH
  // d()/d[C12OOH]
  dqdci = +k_f;
  J[2694] += dqdci; // dwdot[C12H25O2]/d[C12OOH]
  J[2695] -= dqdci; // dwdot[C12OOH]/d[C12OOH]
  // d()/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT
  J[2911] -= dqdT; // dwdot[C12OOH]/dT

  // reaction 258: O2 + PXC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[44];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[44] -= q; // PXC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[44];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] -= dqdci; // dwdot[PXC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[PXC12H25]
  dqdci = +k_f * sc[8];
  J[2380] += dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2423] += dqdci; // dwdot[C12H24]/d[PXC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 259: C12H24 + HO2 => O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[44] += q; // PXC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2582] += dqdci; // dwdot[PXC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 260: O2 + SXC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[45];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[45] -= q; // SXC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[45];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] -= dqdci; // dwdot[SXC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[SXC12H25]
  dqdci = +k_f * sc[8];
  J[2434] += dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] -= dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  J[2477] += dqdci; // dwdot[C12H24]/d[SXC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] -= dqdT; // dwdot[SXC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 261: C12H24 + HO2 => O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[45] += q; // SXC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2583] += dqdci; // dwdot[SXC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[46];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[46] -= q; // S3XC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[46];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] -= dqdci; // dwdot[S3XC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = +k_f * sc[8];
  J[2488] += dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] -= dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  J[2531] += dqdci; // dwdot[C12H24]/d[S3XC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] -= dqdT; // dwdot[S3XC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[46] += q; // S3XC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2584] += dqdci; // dwdot[S3XC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 264: C12OOH + O2 => O2C12H24OOH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[49];
  k_f = 46000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[49] -= q; // C12OOH
  wdot[50] += q; // O2C12H24OOH
  // d()/d[O2]
  dqdci = +k_f * sc[49];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[481] -= dqdci; // dwdot[C12OOH]/d[O2]
  J[482] += dqdci; // dwdot[O2C12H24OOH]/d[O2]
  // d()/d[C12OOH]
  dqdci = +k_f * sc[8];
  J[2654] -= dqdci; // dwdot[O2]/d[C12OOH]
  J[2695] -= dqdci; // dwdot[C12OOH]/d[C12OOH]
  J[2696] += dqdci; // dwdot[O2C12H24OOH]/d[C12OOH]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2911] -= dqdT; // dwdot[C12OOH]/dT
  J[2912] += dqdT; // dwdot[O2C12H24OOH]/dT

  // reaction 265: O2C12H24OOH => C12OOH + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[50];
  k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[49] += q; // C12OOH
  wdot[50] -= q; // O2C12H24OOH
  // d()/d[O2C12H24OOH]
  dqdci = +k_f;
  J[2708] += dqdci; // dwdot[O2]/d[O2C12H24OOH]
  J[2749] += dqdci; // dwdot[C12OOH]/d[O2C12H24OOH]
  J[2750] -= dqdci; // dwdot[O2C12H24OOH]/d[O2C12H24OOH]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2911] += dqdT; // dwdot[C12OOH]/dT
  J[2912] -= dqdT; // dwdot[O2C12H24OOH]/dT

  // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[50];
  k_f = 89000000000 * exp(-(8554.68331868023) * invT);
  dlnkfdT = (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[3] * sc[51];
  Kc = refC * exp(-g_RT[3] + g_RT[50] - g_RT[51]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[50]) + (h_RT[3] + h_RT[51]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[50] -= q; // O2C12H24OOH
  wdot[51] += q; // OC12H23OOH
  // d()/d[OH]
  dqdci = -k_r * sc[51];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[212] -= dqdci; // dwdot[O2C12H24OOH]/d[OH]
  J[213] += dqdci; // dwdot[OC12H23OOH]/d[OH]
  // d()/d[O2C12H24OOH]
  dqdci = +k_f;
  J[2703] += dqdci; // dwdot[OH]/d[O2C12H24OOH]
  J[2750] -= dqdci; // dwdot[O2C12H24OOH]/d[O2C12H24OOH]
  J[2751] += dqdci; // dwdot[OC12H23OOH]/d[O2C12H24OOH]
  // d()/d[OC12H23OOH]
  dqdci = -k_r * sc[3];
  J[2757] += dqdci; // dwdot[OH]/d[OC12H23OOH]
  J[2804] -= dqdci; // dwdot[O2C12H24OOH]/d[OC12H23OOH]
  J[2805] += dqdci; // dwdot[OC12H23OOH]/d[OC12H23OOH]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2912] -= dqdT; // dwdot[O2C12H24OOH]/dT
  J[2913] += dqdT; // dwdot[OC12H23OOH]/dT

  // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[51];
  k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
  dlnkfdT = (21167.8090470755) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // OH
  wdot[20] += 3 * q; // C2H4
  wdot[21] += q;     // C2H5
  wdot[23] += 2 * q; // CH2CHO
  wdot[51] -= q;     // OC12H23OOH
  // d()/d[OC12H23OOH]
  dqdci = +k_f;
  J[2757] += dqdci;     // dwdot[OH]/d[OC12H23OOH]
  J[2774] += 3 * dqdci; // dwdot[C2H4]/d[OC12H23OOH]
  J[2775] += dqdci;     // dwdot[C2H5]/d[OC12H23OOH]
  J[2777] += 2 * dqdci; // dwdot[CH2CHO]/d[OC12H23OOH]
  J[2805] -= dqdci;     // dwdot[OC12H23OOH]/d[OC12H23OOH]
  // d()/dT
  J[2865] += dqdT;     // dwdot[OH]/dT
  J[2882] += 3 * dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT;     // dwdot[C2H5]/dT
  J[2885] += 2 * dqdT; // dwdot[CH2CHO]/dT
  J[2913] -= dqdT;     // dwdot[OC12H23OOH]/dT

  amrex::Real c_R[53], dcRdT[53], e_RT[53];
  amrex::Real* eh_RT;
  if (HP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 53; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[2862 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 53; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 53; ++m) {
      dehmixdc += eh_RT[m] * J[k * 54 + m];
    }
    J[k * 54 + 53] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[2915] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[53];

  for (int k = 0; k < 53; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 53; k++) {
    J[2862 + k] *= 1.e-6;
    J[k * 54 + 53] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 2916; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[53];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 53; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[53];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[53];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[53];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 4: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (11.89 - 1) * sc[6] + (0.85 - 1) * sc[8] +
          (1.09 - 1) * sc[16] + (2.18 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 5116000 * exp(0.44 * tc[0]);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.328e+19 * exp(-1.4 * tc[0]);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1e-30 - Fcent2 / 1e+30);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[4];
  Kc = refCinv * exp(g_RT[1] - g_RT[4] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[4]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q; // H
  wdot[4] += q; // HO2
  wdot[8] -= q; // O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[8];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[58] += dqdci; // dwdot[HO2]/d[H]
    J[62] -= dqdci; // dwdot[O2]/d[H]
    // d()/d[HO2]
    dqdci = -k_r;
    J[217] -= dqdci; // dwdot[H]/d[HO2]
    J[220] += dqdci; // dwdot[HO2]/d[HO2]
    J[224] -= dqdci; // dwdot[O2]/d[HO2]
    // d()/d[H2O]
    dqdci = (11.89 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[328] += dqdci; // dwdot[HO2]/d[H2O]
    J[332] -= dqdci; // dwdot[O2]/d[H2O]
    // d()/d[O2]
    dqdci = (0.85 - 1) * dcdc_fac + k_f * sc[1];
    J[433] -= dqdci; // dwdot[H]/d[O2]
    J[436] += dqdci; // dwdot[HO2]/d[O2]
    J[440] -= dqdci; // dwdot[O2]/d[O2]
    // d()/d[CO]
    dqdci = (1.09 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[868] += dqdci; // dwdot[HO2]/d[CO]
    J[872] -= dqdci; // dwdot[O2]/d[CO]
    // d()/d[CO2]
    dqdci = (2.18 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[922] += dqdci; // dwdot[HO2]/d[CO2]
    J[926] -= dqdci; // dwdot[O2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[8];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac - k_r;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 11.89 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 0.85 * dcdc_fac + k_f * sc[1];
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.09 * dcdc_fac;
    dqdc[17] = 2.18 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 4] += dqdc[k];
      J[54 * k + 8] -= dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 17: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 111000000 * exp(-0.37 * tc[0]);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 2.01e+17 * exp(-0.584 * tc[0] - (-1153.87581469022) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.584 * invT + (-1153.87581469022) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7346) * exp(-T / 94);
  Fcent2 = 0.7346 * exp(-T / 1756);
  Fcent3 = exp(-5182 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1756 + Fcent3 * 5182 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(2.000000 * g_RT[3] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] -= 2 * q; // OH
  wdot[7] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[OH]
    dqdci = +k_f * 2.000000 * sc[3];
    J[165] += -2 * dqdci; // dwdot[OH]/d[OH]
    J[169] += dqdci;      // dwdot[H2O2]/d[OH]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[273] += -2 * dqdci; // dwdot[OH]/d[H2]
    J[277] += dqdci;      // dwdot[H2O2]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[327] += -2 * dqdci; // dwdot[OH]/d[H2O]
    J[331] += dqdci;      // dwdot[H2O2]/d[H2O]
    // d()/d[H2O2]
    dqdci = -k_r;
    J[381] += -2 * dqdci; // dwdot[OH]/d[H2O2]
    J[385] += dqdci;      // dwdot[H2O2]/d[H2O2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[867] += -2 * dqdci; // dwdot[OH]/d[CO]
    J[871] += dqdci;      // dwdot[H2O2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[921] += -2 * dqdci; // dwdot[OH]/d[CO2]
    J[925] += dqdci;      // dwdot[H2O2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac + k_f * 2.000000 * sc[3];
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac - k_r;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.75 * dcdc_fac;
    dqdc[17] = 3.6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 3] += -2 * dqdc[k];
      J[54 * k + 7] += dqdc[k];
    }
  }
  J[2865] += -2 * dqdT; // dwdot[OH]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT

  // reaction 37: CO + H2 (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[5] * sc[16];
  k_f = 43 * exp(1.5 * tc[0] - (40056.0465980557) * invT);
  dlnkfdT = 1.5 * invT + (40056.0465980557) * invT2;
  // pressure-fall-off
  k_0 = 5.07e+27 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.42 * invT + (42446.3257606281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.932) * exp(-T / 197);
  Fcent2 = 0.932 * exp(-T / 1540);
  Fcent3 = exp(-10300 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 197 - Fcent2 / 1540 + Fcent3 * 10300 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[5] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[16]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H2
  wdot[14] += q; // CH2O
  wdot[16] -= q; // CO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac + k_f * sc[16];
    J[275] -= dqdci; // dwdot[H2]/d[H2]
    J[284] += dqdci; // dwdot[CH2O]/d[H2]
    J[286] -= dqdci; // dwdot[CO]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[329] -= dqdci; // dwdot[H2]/d[H2O]
    J[338] += dqdci; // dwdot[CH2O]/d[H2O]
    J[340] -= dqdci; // dwdot[CO]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[653] -= dqdci; // dwdot[H2]/d[CH4]
    J[662] += dqdci; // dwdot[CH2O]/d[CH4]
    J[664] -= dqdci; // dwdot[CO]/d[CH4]
    // d()/d[CH2O]
    dqdci = -k_r;
    J[761] -= dqdci; // dwdot[H2]/d[CH2O]
    J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
    J[772] -= dqdci; // dwdot[CO]/d[CH2O]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac + k_f * sc[5];
    J[869] -= dqdci; // dwdot[H2]/d[CO]
    J[878] += dqdci; // dwdot[CH2O]/d[CO]
    J[880] -= dqdci; // dwdot[CO]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[923] -= dqdci; // dwdot[H2]/d[CO2]
    J[932] += dqdci; // dwdot[CH2O]/d[CO2]
    J[934] -= dqdci; // dwdot[CO]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1193] -= dqdci; // dwdot[H2]/d[C2H6]
    J[1202] += dqdci; // dwdot[CH2O]/d[C2H6]
    J[1204] -= dqdci; // dwdot[CO]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac + k_f * sc[16];
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac - k_r;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac + k_f * sc[5];
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 5] -= dqdc[k];
      J[54 * k + 14] += dqdc[k];
      J[54 * k + 16] -= dqdc[k];
    }
  }
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT

  // reaction 38: H + HCO (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 1090000 * exp(0.48 * tc[0] - (-130.836333109227) * invT);
  dlnkfdT = 0.48 * invT + (-130.836333109227) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.57 * invT + (717.083748771726) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7824) * exp(-T / 271);
  Fcent2 = 0.7824 * exp(-T / 2755);
  Fcent3 = exp(-6570 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 271 - Fcent2 / 2755 + Fcent3 * 6570 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[1] + g_RT[13] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[13] -= q; // HCO
  wdot[14] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[13];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[67] -= dqdci; // dwdot[HCO]/d[H]
    J[68] += dqdci; // dwdot[CH2O]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[283] -= dqdci; // dwdot[HCO]/d[H2]
    J[284] += dqdci; // dwdot[CH2O]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[337] -= dqdci; // dwdot[HCO]/d[H2O]
    J[338] += dqdci; // dwdot[CH2O]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[661] -= dqdci; // dwdot[HCO]/d[CH4]
    J[662] += dqdci; // dwdot[CH2O]/d[CH4]
    // d()/d[HCO]
    dqdci = +k_f * sc[1];
    J[703] -= dqdci; // dwdot[H]/d[HCO]
    J[715] -= dqdci; // dwdot[HCO]/d[HCO]
    J[716] += dqdci; // dwdot[CH2O]/d[HCO]
    // d()/d[CH2O]
    dqdci = -k_r;
    J[757] -= dqdci; // dwdot[H]/d[CH2O]
    J[769] -= dqdci; // dwdot[HCO]/d[CH2O]
    J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[877] -= dqdci; // dwdot[HCO]/d[CO]
    J[878] += dqdci; // dwdot[CH2O]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[931] -= dqdci; // dwdot[HCO]/d[CO2]
    J[932] += dqdci; // dwdot[CH2O]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1201] -= dqdci; // dwdot[HCO]/d[C2H6]
    J[1202] += dqdci; // dwdot[CH2O]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[13];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac + k_f * sc[1];
    dqdc[14] = dcdc_fac - k_r;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 13] -= dqdc[k];
      J[54 * k + 14] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 39: CH2 + H (+M) <=> CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 25000000000 * exp(-0.8 * tc[0]);
  dlnkfdT = -0.8 * invT;
  // pressure-fall-off
  k_0 = 3.2e+27 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.14 * invT + (618.956498939805) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.68) * exp(-T / 78);
  Fcent2 = 0.68 * exp(-T / 1995);
  Fcent3 = exp(-5590 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 78 - Fcent2 / 1995 + Fcent3 * 5590 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(g_RT[1] + g_RT[9] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[9]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[9] -= q;  // CH2
  wdot[11] += q; // CH3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[9];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[63] -= dqdci; // dwdot[CH2]/d[H]
    J[65] += dqdci; // dwdot[CH3]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[279] -= dqdci; // dwdot[CH2]/d[H2]
    J[281] += dqdci; // dwdot[CH3]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[333] -= dqdci; // dwdot[CH2]/d[H2O]
    J[335] += dqdci; // dwdot[CH3]/d[H2O]
    // d()/d[CH2]
    dqdci = +k_f * sc[1];
    J[487] -= dqdci; // dwdot[H]/d[CH2]
    J[495] -= dqdci; // dwdot[CH2]/d[CH2]
    J[497] += dqdci; // dwdot[CH3]/d[CH2]
    // d()/d[CH3]
    dqdci = -k_r;
    J[595] -= dqdci; // dwdot[H]/d[CH3]
    J[603] -= dqdci; // dwdot[CH2]/d[CH3]
    J[605] += dqdci; // dwdot[CH3]/d[CH3]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[657] -= dqdci; // dwdot[CH2]/d[CH4]
    J[659] += dqdci; // dwdot[CH3]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[873] -= dqdci; // dwdot[CH2]/d[CO]
    J[875] += dqdci; // dwdot[CH3]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[927] -= dqdci; // dwdot[CH2]/d[CO2]
    J[929] += dqdci; // dwdot[CH3]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1197] -= dqdci; // dwdot[CH2]/d[C2H6]
    J[1199] += dqdci; // dwdot[CH3]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[9];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac + k_f * sc[1];
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac - k_r;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 9] -= dqdc[k];
      J[54 * k + 11] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 58: CH2O + H (+M) <=> CH3O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 540000 * exp(0.454 * tc[0] - (1308.36333109227) * invT);
  dlnkfdT = 0.454 * invT + (1308.36333109227) * invT2;
  // pressure-fall-off
  k_0 = 2.2e+30 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.8 * invT + (2797.88466187424) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.758) * exp(-T / 94);
  Fcent2 = 0.758 * exp(-T / 1555);
  Fcent3 = exp(-4200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1555 + Fcent3 * 4200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(g_RT[1] + g_RT[14] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[14] -= q; // CH2O
  wdot[15] += q; // CH3O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[14];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[68] -= dqdci; // dwdot[CH2O]/d[H]
    J[69] += dqdci; // dwdot[CH3O]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[284] -= dqdci; // dwdot[CH2O]/d[H2]
    J[285] += dqdci; // dwdot[CH3O]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[338] -= dqdci; // dwdot[CH2O]/d[H2O]
    J[339] += dqdci; // dwdot[CH3O]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[662] -= dqdci; // dwdot[CH2O]/d[CH4]
    J[663] += dqdci; // dwdot[CH3O]/d[CH4]
    // d()/d[CH2O]
    dqdci = +k_f * sc[1];
    J[757] -= dqdci; // dwdot[H]/d[CH2O]
    J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
    J[771] += dqdci; // dwdot[CH3O]/d[CH2O]
    // d()/d[CH3O]
    dqdci = -k_r;
    J[811] -= dqdci; // dwdot[H]/d[CH3O]
    J[824] -= dqdci; // dwdot[CH2O]/d[CH3O]
    J[825] += dqdci; // dwdot[CH3O]/d[CH3O]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[878] -= dqdci; // dwdot[CH2O]/d[CO]
    J[879] += dqdci; // dwdot[CH3O]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[932] -= dqdci; // dwdot[CH2O]/d[CO2]
    J[933] += dqdci; // dwdot[CH3O]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1202] -= dqdci; // dwdot[CH2O]/d[C2H6]
    J[1203] += dqdci; // dwdot[CH3O]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[14];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac + k_f * sc[1];
    dqdc[15] = dcdc_fac - k_r;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 14] -= dqdc[k];
      J[54 * k + 15] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 64: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 12700000000 * exp(-0.63 * tc[0] - (192.731983003208) * invT);
  dlnkfdT = -0.63 * invT + (192.731983003208) * invT2;
  // pressure-fall-off
  k_0 = 2.477e+33 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.76 * invT + (1227.84866456352) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.783) * exp(-T / 74);
  Fcent2 = 0.783 * exp(-T / 2941);
  Fcent3 = exp(-6964 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 74 - Fcent2 / 2941 + Fcent3 * 6964 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(g_RT[1] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[11]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[11];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[65] -= dqdci; // dwdot[CH3]/d[H]
    J[66] += dqdci; // dwdot[CH4]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[281] -= dqdci; // dwdot[CH3]/d[H2]
    J[282] += dqdci; // dwdot[CH4]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[335] -= dqdci; // dwdot[CH3]/d[H2O]
    J[336] += dqdci; // dwdot[CH4]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * sc[1];
    J[595] -= dqdci; // dwdot[H]/d[CH3]
    J[605] -= dqdci; // dwdot[CH3]/d[CH3]
    J[606] += dqdci; // dwdot[CH4]/d[CH3]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac - k_r;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[659] -= dqdci; // dwdot[CH3]/d[CH4]
    J[660] += dqdci; // dwdot[CH4]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[875] -= dqdci; // dwdot[CH3]/d[CO]
    J[876] += dqdci; // dwdot[CH4]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[929] -= dqdci; // dwdot[CH3]/d[CO2]
    J[930] += dqdci; // dwdot[CH4]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1199] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[1200] += dqdci; // dwdot[CH4]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[11];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * sc[1];
    dqdc[12] = 2 * dcdc_fac - k_r;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 11] -= dqdc[k];
      J[54 * k + 12] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 77: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 21200000000 * exp(-0.97 * tc[0] - (311.994332798926) * invT);
  dlnkfdT = -0.97 * invT + (311.994332798926) * invT2;
  // pressure-fall-off
  k_0 = 1.77e+50 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.67 * invT + (3130.00766130536) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5325) * exp(-T / 151);
  Fcent2 = 0.5325 * exp(-T / 1038);
  Fcent3 = exp(-4970 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 151 - Fcent2 / 1038 + Fcent3 * 4970 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[22];
  Kc = refCinv * exp(2.000000 * g_RT[11] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[22]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= 2 * q; // CH3
  wdot[22] += q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[281] += -2 * dqdci; // dwdot[CH3]/d[H2]
    J[292] += dqdci;      // dwdot[C2H6]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[335] += -2 * dqdci; // dwdot[CH3]/d[H2O]
    J[346] += dqdci;      // dwdot[C2H6]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * 2.000000 * sc[11];
    J[605] += -2 * dqdci; // dwdot[CH3]/d[CH3]
    J[616] += dqdci;      // dwdot[C2H6]/d[CH3]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[659] += -2 * dqdci; // dwdot[CH3]/d[CH4]
    J[670] += dqdci;      // dwdot[C2H6]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[875] += -2 * dqdci; // dwdot[CH3]/d[CO]
    J[886] += dqdci;      // dwdot[C2H6]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[929] += -2 * dqdci; // dwdot[CH3]/d[CO2]
    J[940] += dqdci;      // dwdot[C2H6]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[1199] += -2 * dqdci; // dwdot[CH3]/d[C2H6]
    J[1210] += dqdci;      // dwdot[C2H6]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * 2.000000 * sc[11];
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac - k_r;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 11] += -2 * dqdc[k];
      J[54 * k + 22] += dqdc[k];
    }
  }
  J[2873] += -2 * dqdT; // dwdot[CH3]/dT
  J[2884] += dqdT;      // dwdot[C2H6]/dT

  // reaction 90: C2H3 (+M) <=> C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[19];
  k_f = 38600000 * exp(1.62 * tc[0] - (18643.2716780664) * invT);
  dlnkfdT = 1.62 * invT + (18643.2716780664) * invT2;
  // pressure-fall-off
  k_0 = 2.565e+27 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.4 * invT + (18014.5125184767) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.9816) * exp(-T / 5383.7);
  Fcent2 = 1.9816 * exp(-T / 4.2932);
  Fcent3 = exp(0.0795 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 5383.7 - Fcent2 / 4.2932 + Fcent3 * -0.0795 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[1] * sc[18];
  Kc = refC * exp(-g_RT[1] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19]) + (h_RT[1] + h_RT[18]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // H
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = -k_r * sc[18];
    J[55] += dqdci; // dwdot[H]/d[H]
    J[72] += dqdci; // dwdot[C2H2]/d[H]
    J[73] -= dqdci; // dwdot[C2H3]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] += dqdci; // dwdot[H]/d[H2]
    J[288] += dqdci; // dwdot[C2H2]/d[H2]
    J[289] -= dqdci; // dwdot[C2H3]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] += dqdci; // dwdot[H]/d[H2O]
    J[342] += dqdci; // dwdot[C2H2]/d[H2O]
    J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] += dqdci; // dwdot[H]/d[CH4]
    J[666] += dqdci; // dwdot[C2H2]/d[CH4]
    J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] += dqdci; // dwdot[H]/d[CO]
    J[882] += dqdci; // dwdot[C2H2]/d[CO]
    J[883] -= dqdci; // dwdot[C2H3]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] += dqdci; // dwdot[H]/d[CO2]
    J[936] += dqdci; // dwdot[C2H2]/d[CO2]
    J[937] -= dqdci; // dwdot[C2H3]/d[CO2]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac - k_r * sc[1];
    J[973] += dqdci; // dwdot[H]/d[C2H2]
    J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
    J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
    // d()/d[C2H3]
    dqdci = +k_f;
    J[1027] += dqdci; // dwdot[H]/d[C2H3]
    J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
    J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac;
    J[1081] += dqdci; // dwdot[H]/d[C2H4]
    J[1098] += dqdci; // dwdot[C2H2]/d[C2H4]
    J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] += dqdci; // dwdot[H]/d[C2H6]
    J[1206] += dqdci; // dwdot[C2H2]/d[C2H6]
    J[1207] -= dqdci; // dwdot[C2H3]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac - k_r * sc[18];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = 3 * dcdc_fac - k_r * sc[1];
    dqdc[19] = dcdc_fac + k_f;
    dqdc[20] = 3 * dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] += dqdc[k];
      J[54 * k + 18] += dqdc[k];
      J[54 * k + 19] -= dqdc[k];
    }
  }
  J[2863] += dqdT; // dwdot[H]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 95: C2H3 + H (+M) <=> C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 6080000 * exp(0.27 * tc[0] - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[20];
  Kc = refCinv * exp(g_RT[1] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[20]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[19];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[73] -= dqdci; // dwdot[C2H3]/d[H]
    J[74] += dqdci; // dwdot[C2H4]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[289] -= dqdci; // dwdot[C2H3]/d[H2]
    J[290] += dqdci; // dwdot[C2H4]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
    J[344] += dqdci; // dwdot[C2H4]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
    J[668] += dqdci; // dwdot[C2H4]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[883] -= dqdci; // dwdot[C2H3]/d[CO]
    J[884] += dqdci; // dwdot[C2H4]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[937] -= dqdci; // dwdot[C2H3]/d[CO2]
    J[938] += dqdci; // dwdot[C2H4]/d[CO2]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac;
    J[973] -= dqdci; // dwdot[H]/d[C2H2]
    J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
    J[992] += dqdci; // dwdot[C2H4]/d[C2H2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[1];
    J[1027] -= dqdci; // dwdot[H]/d[C2H3]
    J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
    J[1046] += dqdci; // dwdot[C2H4]/d[C2H3]
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[1081] -= dqdci; // dwdot[H]/d[C2H4]
    J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
    J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1207] -= dqdci; // dwdot[C2H3]/d[C2H6]
    J[1208] += dqdci; // dwdot[C2H4]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[19];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = 3 * dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[1];
    dqdc[20] = 3 * dcdc_fac - k_r;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 19] -= dqdc[k];
      J[54 * k + 20] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 107: C2H3 + CH3 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[18] + (3 - 1) * sc[20] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 25000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 4.27e+58 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.94 * invT + (4916.32618157895) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.175) * exp(-T / 1340.6);
  Fcent2 = 0.175 * exp(-T / 60000);
  Fcent3 = exp(-10139.8 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1340.6 - Fcent2 / 60000 + Fcent3 * 10139.8 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[11] + g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[19] -= q; // C2H3
  wdot[25] += q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[281] -= dqdci; // dwdot[CH3]/d[H2]
    J[289] -= dqdci; // dwdot[C2H3]/d[H2]
    J[295] += dqdci; // dwdot[C3H6]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[335] -= dqdci; // dwdot[CH3]/d[H2O]
    J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
    J[349] += dqdci; // dwdot[C3H6]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * sc[19];
    J[605] -= dqdci; // dwdot[CH3]/d[CH3]
    J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
    J[619] += dqdci; // dwdot[C3H6]/d[CH3]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[659] -= dqdci; // dwdot[CH3]/d[CH4]
    J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
    J[673] += dqdci; // dwdot[C3H6]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[875] -= dqdci; // dwdot[CH3]/d[CO]
    J[883] -= dqdci; // dwdot[C2H3]/d[CO]
    J[889] += dqdci; // dwdot[C3H6]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[929] -= dqdci; // dwdot[CH3]/d[CO2]
    J[937] -= dqdci; // dwdot[C2H3]/d[CO2]
    J[943] += dqdci; // dwdot[C3H6]/d[CO2]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac;
    J[983] -= dqdci; // dwdot[CH3]/d[C2H2]
    J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
    J[997] += dqdci; // dwdot[C3H6]/d[C2H2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[11];
    J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
    J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
    J[1051] += dqdci; // dwdot[C3H6]/d[C2H3]
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac;
    J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
    J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
    J[1105] += dqdci; // dwdot[C3H6]/d[C2H4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1199] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[1207] -= dqdci; // dwdot[C2H3]/d[C2H6]
    J[1213] += dqdci; // dwdot[C3H6]/d[C2H6]
    // d()/d[C3H6]
    dqdci = -k_r;
    J[1361] -= dqdci; // dwdot[CH3]/d[C3H6]
    J[1369] -= dqdci; // dwdot[C2H3]/d[C3H6]
    J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * sc[19];
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = 3 * dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[11];
    dqdc[20] = 3 * dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac - k_r;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 11] -= dqdc[k];
      J[54 * k + 19] -= dqdc[k];
      J[54 * k + 25] += dqdc[k];
    }
  }
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 113: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 3975 * exp(1.28 * tc[0] - (649.466525387545) * invT);
  dlnkfdT = 1.28 * invT + (649.466525387545) * invT2;
  // pressure-fall-off
  k_0 = 4.715e+18 * exp(-(380.059419015673) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (380.059419015673) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.76) * exp(-T / 40);
  Fcent2 = 0.76 * exp(-T / 1025);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 40 - Fcent2 / 1025);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[21];
  Kc = refCinv * exp(g_RT[1] + g_RT[20] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[21]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] -= q; // C2H4
  wdot[21] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[20];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[74] -= dqdci; // dwdot[C2H4]/d[H]
    J[75] += dqdci; // dwdot[C2H5]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[290] -= dqdci; // dwdot[C2H4]/d[H2]
    J[291] += dqdci; // dwdot[C2H5]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[344] -= dqdci; // dwdot[C2H4]/d[H2O]
    J[345] += dqdci; // dwdot[C2H5]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[668] -= dqdci; // dwdot[C2H4]/d[CH4]
    J[669] += dqdci; // dwdot[C2H5]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[884] -= dqdci; // dwdot[C2H4]/d[CO]
    J[885] += dqdci; // dwdot[C2H5]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[938] -= dqdci; // dwdot[C2H4]/d[CO2]
    J[939] += dqdci; // dwdot[C2H5]/d[CO2]
    // d()/d[C2H4]
    dqdci = +k_f * sc[1];
    J[1081] -= dqdci; // dwdot[H]/d[C2H4]
    J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
    J[1101] += dqdci; // dwdot[C2H5]/d[C2H4]
    // d()/d[C2H5]
    dqdci = -k_r;
    J[1135] -= dqdci; // dwdot[H]/d[C2H5]
    J[1154] -= dqdci; // dwdot[C2H4]/d[C2H5]
    J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1208] -= dqdci; // dwdot[C2H4]/d[C2H6]
    J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[20];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac + k_f * sc[1];
    dqdc[21] = dcdc_fac - k_r;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 20] -= dqdc[k];
      J[54 * k + 21] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT

  // reaction 126: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 521000000000 * exp(-0.99 * tc[0] - (795.082331971457) * invT);
  dlnkfdT = -0.99 * invT + (795.082331971457) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3364.00341090455) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[22];
  Kc = refCinv * exp(g_RT[1] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[22]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[21];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[75] -= dqdci; // dwdot[C2H5]/d[H]
    J[76] += dqdci; // dwdot[C2H6]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[291] -= dqdci; // dwdot[C2H5]/d[H2]
    J[292] += dqdci; // dwdot[C2H6]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[345] -= dqdci; // dwdot[C2H5]/d[H2O]
    J[346] += dqdci; // dwdot[C2H6]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[669] -= dqdci; // dwdot[C2H5]/d[CH4]
    J[670] += dqdci; // dwdot[C2H6]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[885] -= dqdci; // dwdot[C2H5]/d[CO]
    J[886] += dqdci; // dwdot[C2H6]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[939] -= dqdci; // dwdot[C2H5]/d[CO2]
    J[940] += dqdci; // dwdot[C2H6]/d[CO2]
    // d()/d[C2H5]
    dqdci = +k_f * sc[1];
    J[1135] -= dqdci; // dwdot[H]/d[C2H5]
    J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
    J[1156] += dqdci; // dwdot[C2H6]/d[C2H5]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
    J[1210] += dqdci; // dwdot[C2H6]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[21];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac + k_f * sc[1];
    dqdc[22] = 3 * dcdc_fac - k_r;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 21] -= dqdc[k];
      J[54 * k + 22] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 134: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[19] * sc[21];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.55e+56 * exp(-11.79 * tc[0] - (4521.1501339225) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.79 * invT + (4521.1501339225) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.198) * exp(-T / 2277.9);
  Fcent2 = 0.198 * exp(-T / 60000);
  Fcent3 = exp(-5723.2 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 2277.9 - Fcent2 / 60000 + Fcent3 * 5723.2 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[19] + g_RT[21] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // C2H3
  wdot[21] -= q; // C2H5
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[289] -= dqdci; // dwdot[C2H3]/d[H2]
    J[291] -= dqdci; // dwdot[C2H5]/d[H2]
    J[299] += dqdci; // dwdot[C4H81]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
    J[345] -= dqdci; // dwdot[C2H5]/d[H2O]
    J[353] += dqdci; // dwdot[C4H81]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
    J[669] -= dqdci; // dwdot[C2H5]/d[CH4]
    J[677] += dqdci; // dwdot[C4H81]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[883] -= dqdci; // dwdot[C2H3]/d[CO]
    J[885] -= dqdci; // dwdot[C2H5]/d[CO]
    J[893] += dqdci; // dwdot[C4H81]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[937] -= dqdci; // dwdot[C2H3]/d[CO2]
    J[939] -= dqdci; // dwdot[C2H5]/d[CO2]
    J[947] += dqdci; // dwdot[C4H81]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[21];
    J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
    J[1047] -= dqdci; // dwdot[C2H5]/d[C2H3]
    J[1055] += dqdci; // dwdot[C4H81]/d[C2H3]
    // d()/d[C2H5]
    dqdci = +k_f * sc[19];
    J[1153] -= dqdci; // dwdot[C2H3]/d[C2H5]
    J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
    J[1163] += dqdci; // dwdot[C4H81]/d[C2H5]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1207] -= dqdci; // dwdot[C2H3]/d[C2H6]
    J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
    J[1217] += dqdci; // dwdot[C4H81]/d[C2H6]
    // d()/d[C4H81]
    dqdci = -k_r;
    J[1585] -= dqdci; // dwdot[C2H3]/d[C4H81]
    J[1587] -= dqdci; // dwdot[C2H5]/d[C4H81]
    J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[21];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac + k_f * sc[19];
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac - k_r;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 19] -= dqdc[k];
      J[54 * k + 21] -= dqdc[k];
      J[54 * k + 29] += dqdc[k];
    }
  }
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 141: H + aC3H5 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[24];
  k_f = 200000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.33e+60 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12 * invT + (3003.09641818941) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.02) * exp(-T / 1096.6);
  Fcent2 = 0.02 * exp(-T / 1096.6);
  Fcent3 = exp(-6859.5 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1096.6 - Fcent2 / 1096.6 + Fcent3 * 6859.5 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[1] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[24]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[24];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[78] -= dqdci; // dwdot[aC3H5]/d[H]
    J[79] += dqdci; // dwdot[C3H6]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[294] -= dqdci; // dwdot[aC3H5]/d[H2]
    J[295] += dqdci; // dwdot[C3H6]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[348] -= dqdci; // dwdot[aC3H5]/d[H2O]
    J[349] += dqdci; // dwdot[C3H6]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[672] -= dqdci; // dwdot[aC3H5]/d[CH4]
    J[673] += dqdci; // dwdot[C3H6]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[888] -= dqdci; // dwdot[aC3H5]/d[CO]
    J[889] += dqdci; // dwdot[C3H6]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[942] -= dqdci; // dwdot[aC3H5]/d[CO2]
    J[943] += dqdci; // dwdot[C3H6]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1212] -= dqdci; // dwdot[aC3H5]/d[C2H6]
    J[1213] += dqdci; // dwdot[C3H6]/d[C2H6]
    // d()/d[aC3H5]
    dqdci = +k_f * sc[1];
    J[1297] -= dqdci; // dwdot[H]/d[aC3H5]
    J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
    J[1321] += dqdci; // dwdot[C3H6]/d[aC3H5]
    // d()/d[C3H6]
    dqdci = -k_r;
    J[1351] -= dqdci; // dwdot[H]/d[C3H6]
    J[1374] -= dqdci; // dwdot[aC3H5]/d[C3H6]
    J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[24];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac + k_f * sc[1];
    dqdc[25] = dcdc_fac - k_r;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 24] -= dqdc[k];
      J[54 * k + 25] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 148: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 100000000 * exp(-0.32 * tc[0] - (-131.993731440578) * invT);
  dlnkfdT = -0.32 * invT + (-131.993731440578) * invT2;
  // pressure-fall-off
  k_0 = 3.91e+60 * exp(-12.81 * tc[0] - (3145.1041612795) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12.81 * invT + (3145.1041612795) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.104) * exp(-T / 1606);
  Fcent2 = 0.104 * exp(-T / 60000);
  Fcent3 = exp(-6118.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1606 - Fcent2 / 60000 + Fcent3 * 6118.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[11] + g_RT[24] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[24] -= q; // aC3H5
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[281] -= dqdci; // dwdot[CH3]/d[H2]
    J[294] -= dqdci; // dwdot[aC3H5]/d[H2]
    J[299] += dqdci; // dwdot[C4H81]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[335] -= dqdci; // dwdot[CH3]/d[H2O]
    J[348] -= dqdci; // dwdot[aC3H5]/d[H2O]
    J[353] += dqdci; // dwdot[C4H81]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * sc[24];
    J[605] -= dqdci; // dwdot[CH3]/d[CH3]
    J[618] -= dqdci; // dwdot[aC3H5]/d[CH3]
    J[623] += dqdci; // dwdot[C4H81]/d[CH3]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[659] -= dqdci; // dwdot[CH3]/d[CH4]
    J[672] -= dqdci; // dwdot[aC3H5]/d[CH4]
    J[677] += dqdci; // dwdot[C4H81]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[875] -= dqdci; // dwdot[CH3]/d[CO]
    J[888] -= dqdci; // dwdot[aC3H5]/d[CO]
    J[893] += dqdci; // dwdot[C4H81]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[929] -= dqdci; // dwdot[CH3]/d[CO2]
    J[942] -= dqdci; // dwdot[aC3H5]/d[CO2]
    J[947] += dqdci; // dwdot[C4H81]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1199] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[1212] -= dqdci; // dwdot[aC3H5]/d[C2H6]
    J[1217] += dqdci; // dwdot[C4H81]/d[C2H6]
    // d()/d[aC3H5]
    dqdci = +k_f * sc[11];
    J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
    J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
    J[1325] += dqdci; // dwdot[C4H81]/d[aC3H5]
    // d()/d[C4H81]
    dqdci = -k_r;
    J[1577] -= dqdci; // dwdot[CH3]/d[C4H81]
    J[1590] -= dqdci; // dwdot[aC3H5]/d[C4H81]
    J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * sc[24];
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac + k_f * sc[11];
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac - k_r;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 11] -= dqdc[k];
      J[54 * k + 24] -= dqdc[k];
      J[54 * k + 29] += dqdc[k];
    }
  }
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 149: C3H6 + H (+M) <=> nC3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[26];
  Kc = refCinv * exp(g_RT[1] + g_RT[25] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[26]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] -= q; // C3H6
  wdot[26] += q; // nC3H7
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[25];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[79] -= dqdci; // dwdot[C3H6]/d[H]
    J[80] += dqdci; // dwdot[nC3H7]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[295] -= dqdci; // dwdot[C3H6]/d[H2]
    J[296] += dqdci; // dwdot[nC3H7]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[349] -= dqdci; // dwdot[C3H6]/d[H2O]
    J[350] += dqdci; // dwdot[nC3H7]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[673] -= dqdci; // dwdot[C3H6]/d[CH4]
    J[674] += dqdci; // dwdot[nC3H7]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[889] -= dqdci; // dwdot[C3H6]/d[CO]
    J[890] += dqdci; // dwdot[nC3H7]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[943] -= dqdci; // dwdot[C3H6]/d[CO2]
    J[944] += dqdci; // dwdot[nC3H7]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1213] -= dqdci; // dwdot[C3H6]/d[C2H6]
    J[1214] += dqdci; // dwdot[nC3H7]/d[C2H6]
    // d()/d[C3H6]
    dqdci = +k_f * sc[1];
    J[1351] -= dqdci; // dwdot[H]/d[C3H6]
    J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
    J[1376] += dqdci; // dwdot[nC3H7]/d[C3H6]
    // d()/d[nC3H7]
    dqdci = -k_r;
    J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
    J[1429] -= dqdci; // dwdot[C3H6]/d[nC3H7]
    J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[25];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac + k_f * sc[1];
    dqdc[26] = dcdc_fac - k_r;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 25] -= dqdc[k];
      J[54 * k + 26] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT

  // reaction 168: C4H7 + H (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[28];
  k_f = 36000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 3.01e+48 * exp(-9.32 * tc[0] - (2935.56474163841) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.32 * invT + (2935.56474163841) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.498) * exp(-T / 1314);
  Fcent2 = 0.498 * exp(-T / 1314);
  Fcent3 = exp(-50000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1314 - Fcent2 / 1314 + Fcent3 * 50000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[1] + g_RT[28] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[28]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[28] -= q; // C4H7
  wdot[29] += q; // C4H81
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[28];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[82] -= dqdci; // dwdot[C4H7]/d[H]
    J[83] += dqdci; // dwdot[C4H81]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[298] -= dqdci; // dwdot[C4H7]/d[H2]
    J[299] += dqdci; // dwdot[C4H81]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[352] -= dqdci; // dwdot[C4H7]/d[H2O]
    J[353] += dqdci; // dwdot[C4H81]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[676] -= dqdci; // dwdot[C4H7]/d[CH4]
    J[677] += dqdci; // dwdot[C4H81]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[892] -= dqdci; // dwdot[C4H7]/d[CO]
    J[893] += dqdci; // dwdot[C4H81]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[946] -= dqdci; // dwdot[C4H7]/d[CO2]
    J[947] += dqdci; // dwdot[C4H81]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1216] -= dqdci; // dwdot[C4H7]/d[C2H6]
    J[1217] += dqdci; // dwdot[C4H81]/d[C2H6]
    // d()/d[C4H7]
    dqdci = +k_f * sc[1];
    J[1513] -= dqdci; // dwdot[H]/d[C4H7]
    J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
    J[1541] += dqdci; // dwdot[C4H81]/d[C4H7]
    // d()/d[C4H81]
    dqdci = -k_r;
    J[1567] -= dqdci; // dwdot[H]/d[C4H81]
    J[1594] -= dqdci; // dwdot[C4H7]/d[C4H81]
    J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[28];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac + k_f * sc[1];
    dqdc[29] = dcdc_fac - k_r;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 28] -= dqdc[k];
      J[54 * k + 29] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 172: C4H81 + H (+M) <=> pC4H9 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[30];
  Kc = refCinv * exp(g_RT[1] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[30]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[29] -= q; // C4H81
  wdot[30] += q; // pC4H9
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[29];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[83] -= dqdci; // dwdot[C4H81]/d[H]
    J[84] += dqdci; // dwdot[pC4H9]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[299] -= dqdci; // dwdot[C4H81]/d[H2]
    J[300] += dqdci; // dwdot[pC4H9]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[353] -= dqdci; // dwdot[C4H81]/d[H2O]
    J[354] += dqdci; // dwdot[pC4H9]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[677] -= dqdci; // dwdot[C4H81]/d[CH4]
    J[678] += dqdci; // dwdot[pC4H9]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[893] -= dqdci; // dwdot[C4H81]/d[CO]
    J[894] += dqdci; // dwdot[pC4H9]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[947] -= dqdci; // dwdot[C4H81]/d[CO2]
    J[948] += dqdci; // dwdot[pC4H9]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1217] -= dqdci; // dwdot[C4H81]/d[C2H6]
    J[1218] += dqdci; // dwdot[pC4H9]/d[C2H6]
    // d()/d[C4H81]
    dqdci = +k_f * sc[1];
    J[1567] -= dqdci; // dwdot[H]/d[C4H81]
    J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
    J[1596] += dqdci; // dwdot[pC4H9]/d[C4H81]
    // d()/d[pC4H9]
    dqdci = -k_r;
    J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
    J[1649] -= dqdci; // dwdot[C4H81]/d[pC4H9]
    J[1650] += dqdci; // dwdot[pC4H9]/d[pC4H9]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[29];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac + k_f * sc[1];
    dqdc[30] = dcdc_fac - k_r;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 29] -= dqdc[k];
      J[54 * k + 30] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT

  // reaction 192: C5H10 + H (+M) <=> PXC5H11 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[33];
  Kc = refCinv * exp(g_RT[1] + g_RT[32] - g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[33]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[32] -= q; // C5H10
  wdot[33] += q; // PXC5H11
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[32];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[86] -= dqdci; // dwdot[C5H10]/d[H]
    J[87] += dqdci; // dwdot[PXC5H11]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[302] -= dqdci; // dwdot[C5H10]/d[H2]
    J[303] += dqdci; // dwdot[PXC5H11]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[356] -= dqdci; // dwdot[C5H10]/d[H2O]
    J[357] += dqdci; // dwdot[PXC5H11]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[680] -= dqdci; // dwdot[C5H10]/d[CH4]
    J[681] += dqdci; // dwdot[PXC5H11]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[896] -= dqdci; // dwdot[C5H10]/d[CO]
    J[897] += dqdci; // dwdot[PXC5H11]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[950] -= dqdci; // dwdot[C5H10]/d[CO2]
    J[951] += dqdci; // dwdot[PXC5H11]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1220] -= dqdci; // dwdot[C5H10]/d[C2H6]
    J[1221] += dqdci; // dwdot[PXC5H11]/d[C2H6]
    // d()/d[C5H10]
    dqdci = +k_f * sc[1];
    J[1729] -= dqdci; // dwdot[H]/d[C5H10]
    J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
    J[1761] += dqdci; // dwdot[PXC5H11]/d[C5H10]
    // d()/d[PXC5H11]
    dqdci = -k_r;
    J[1783] -= dqdci; // dwdot[H]/d[PXC5H11]
    J[1814] -= dqdci; // dwdot[C5H10]/d[PXC5H11]
    J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[32];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac + k_f * sc[1];
    dqdc[33] = dcdc_fac - k_r;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 32] -= dqdc[k];
      J[54 * k + 33] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT

  // reaction 196: C6H12 + H (+M) <=> PXC6H13 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[35];
  Kc = refCinv * exp(g_RT[1] + g_RT[34] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[35]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[34] -= q; // C6H12
  wdot[35] += q; // PXC6H13
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[34];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[88] -= dqdci; // dwdot[C6H12]/d[H]
    J[89] += dqdci; // dwdot[PXC6H13]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[304] -= dqdci; // dwdot[C6H12]/d[H2]
    J[305] += dqdci; // dwdot[PXC6H13]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[358] -= dqdci; // dwdot[C6H12]/d[H2O]
    J[359] += dqdci; // dwdot[PXC6H13]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[682] -= dqdci; // dwdot[C6H12]/d[CH4]
    J[683] += dqdci; // dwdot[PXC6H13]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[898] -= dqdci; // dwdot[C6H12]/d[CO]
    J[899] += dqdci; // dwdot[PXC6H13]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[952] -= dqdci; // dwdot[C6H12]/d[CO2]
    J[953] += dqdci; // dwdot[PXC6H13]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1222] -= dqdci; // dwdot[C6H12]/d[C2H6]
    J[1223] += dqdci; // dwdot[PXC6H13]/d[C2H6]
    // d()/d[C6H12]
    dqdci = +k_f * sc[1];
    J[1837] -= dqdci; // dwdot[H]/d[C6H12]
    J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
    J[1871] += dqdci; // dwdot[PXC6H13]/d[C6H12]
    // d()/d[PXC6H13]
    dqdci = -k_r;
    J[1891] -= dqdci; // dwdot[H]/d[PXC6H13]
    J[1924] -= dqdci; // dwdot[C6H12]/d[PXC6H13]
    J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[34];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac + k_f * sc[1];
    dqdc[35] = dcdc_fac - k_r;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 34] -= dqdc[k];
      J[54 * k + 35] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT

  // reaction 200: C7H14 + H (+M) <=> PXC7H15 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[37];
  Kc = refCinv * exp(g_RT[1] + g_RT[36] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[37]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[36] -= q; // C7H14
  wdot[37] += q; // PXC7H15
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[36];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[90] -= dqdci; // dwdot[C7H14]/d[H]
    J[91] += dqdci; // dwdot[PXC7H15]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[306] -= dqdci; // dwdot[C7H14]/d[H2]
    J[307] += dqdci; // dwdot[PXC7H15]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[360] -= dqdci; // dwdot[C7H14]/d[H2O]
    J[361] += dqdci; // dwdot[PXC7H15]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[684] -= dqdci; // dwdot[C7H14]/d[CH4]
    J[685] += dqdci; // dwdot[PXC7H15]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[900] -= dqdci; // dwdot[C7H14]/d[CO]
    J[901] += dqdci; // dwdot[PXC7H15]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[954] -= dqdci; // dwdot[C7H14]/d[CO2]
    J[955] += dqdci; // dwdot[PXC7H15]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1224] -= dqdci; // dwdot[C7H14]/d[C2H6]
    J[1225] += dqdci; // dwdot[PXC7H15]/d[C2H6]
    // d()/d[C7H14]
    dqdci = +k_f * sc[1];
    J[1945] -= dqdci; // dwdot[H]/d[C7H14]
    J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
    J[1981] += dqdci; // dwdot[PXC7H15]/d[C7H14]
    // d()/d[PXC7H15]
    dqdci = -k_r;
    J[1999] -= dqdci; // dwdot[H]/d[PXC7H15]
    J[2034] -= dqdci; // dwdot[C7H14]/d[PXC7H15]
    J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[36];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac + k_f * sc[1];
    dqdc[37] = dcdc_fac - k_r;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 36] -= dqdc[k];
      J[54 * k + 37] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT

  // reaction 204: C8H16 + H (+M) <=> PXC8H17 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[1] + g_RT[38] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[38] -= q; // C8H16
  wdot[39] += q; // PXC8H17
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[38];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[92] -= dqdci; // dwdot[C8H16]/d[H]
    J[93] += dqdci; // dwdot[PXC8H17]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[308] -= dqdci; // dwdot[C8H16]/d[H2]
    J[309] += dqdci; // dwdot[PXC8H17]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[362] -= dqdci; // dwdot[C8H16]/d[H2O]
    J[363] += dqdci; // dwdot[PXC8H17]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[686] -= dqdci; // dwdot[C8H16]/d[CH4]
    J[687] += dqdci; // dwdot[PXC8H17]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[902] -= dqdci; // dwdot[C8H16]/d[CO]
    J[903] += dqdci; // dwdot[PXC8H17]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[956] -= dqdci; // dwdot[C8H16]/d[CO2]
    J[957] += dqdci; // dwdot[PXC8H17]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1226] -= dqdci; // dwdot[C8H16]/d[C2H6]
    J[1227] += dqdci; // dwdot[PXC8H17]/d[C2H6]
    // d()/d[C8H16]
    dqdci = +k_f * sc[1];
    J[2053] -= dqdci; // dwdot[H]/d[C8H16]
    J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
    J[2091] += dqdci; // dwdot[PXC8H17]/d[C8H16]
    // d()/d[PXC8H17]
    dqdci = -k_r;
    J[2107] -= dqdci; // dwdot[H]/d[PXC8H17]
    J[2144] -= dqdci; // dwdot[C8H16]/d[PXC8H17]
    J[2145] += dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[38];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac + k_f * sc[1];
    dqdc[39] = dcdc_fac - k_r;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 38] -= dqdc[k];
      J[54 * k + 39] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT

  // reaction 208: C9H18 + H (+M) <=> PXC9H19 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[41];
  Kc = refCinv * exp(g_RT[1] + g_RT[40] - g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[41]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[40] -= q; // C9H18
  wdot[41] += q; // PXC9H19
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[40];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[94] -= dqdci; // dwdot[C9H18]/d[H]
    J[95] += dqdci; // dwdot[PXC9H19]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[310] -= dqdci; // dwdot[C9H18]/d[H2]
    J[311] += dqdci; // dwdot[PXC9H19]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[364] -= dqdci; // dwdot[C9H18]/d[H2O]
    J[365] += dqdci; // dwdot[PXC9H19]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[688] -= dqdci; // dwdot[C9H18]/d[CH4]
    J[689] += dqdci; // dwdot[PXC9H19]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[904] -= dqdci; // dwdot[C9H18]/d[CO]
    J[905] += dqdci; // dwdot[PXC9H19]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[958] -= dqdci; // dwdot[C9H18]/d[CO2]
    J[959] += dqdci; // dwdot[PXC9H19]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1228] -= dqdci; // dwdot[C9H18]/d[C2H6]
    J[1229] += dqdci; // dwdot[PXC9H19]/d[C2H6]
    // d()/d[C9H18]
    dqdci = +k_f * sc[1];
    J[2161] -= dqdci; // dwdot[H]/d[C9H18]
    J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
    J[2201] += dqdci; // dwdot[PXC9H19]/d[C9H18]
    // d()/d[PXC9H19]
    dqdci = -k_r;
    J[2215] -= dqdci; // dwdot[H]/d[PXC9H19]
    J[2254] -= dqdci; // dwdot[C9H18]/d[PXC9H19]
    J[2255] += dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[40];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac + k_f * sc[1];
    dqdc[41] = dcdc_fac - k_r;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 40] -= dqdc[k];
      J[54 * k + 41] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT
  J[2903] += dqdT; // dwdot[PXC9H19]/dT

  // reaction 212: C10H20 + H (+M) <=> PXC10H21 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6 - 1) * sc[6] + sc[12] + (1.5 - 1) * sc[16] +
          sc[17] + (3 - 1) * sc[22];
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  dlnkfdT = (1640.83858218945) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48097 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48097 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[43];
  Kc = refCinv * exp(g_RT[1] + g_RT[42] - g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[43]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // H
  wdot[42] -= q; // C10H20
  wdot[43] += q; // PXC10H21
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[42];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[96] -= dqdci; // dwdot[C10H20]/d[H]
    J[97] += dqdci; // dwdot[PXC10H21]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[312] -= dqdci; // dwdot[C10H20]/d[H2]
    J[313] += dqdci; // dwdot[PXC10H21]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[366] -= dqdci; // dwdot[C10H20]/d[H2O]
    J[367] += dqdci; // dwdot[PXC10H21]/d[H2O]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[649] -= dqdci; // dwdot[H]/d[CH4]
    J[690] -= dqdci; // dwdot[C10H20]/d[CH4]
    J[691] += dqdci; // dwdot[PXC10H21]/d[CH4]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[906] -= dqdci; // dwdot[C10H20]/d[CO]
    J[907] += dqdci; // dwdot[PXC10H21]/d[CO]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[960] -= dqdci; // dwdot[C10H20]/d[CO2]
    J[961] += dqdci; // dwdot[PXC10H21]/d[CO2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1189] -= dqdci; // dwdot[H]/d[C2H6]
    J[1230] -= dqdci; // dwdot[C10H20]/d[C2H6]
    J[1231] += dqdci; // dwdot[PXC10H21]/d[C2H6]
    // d()/d[C10H20]
    dqdci = +k_f * sc[1];
    J[2269] -= dqdci; // dwdot[H]/d[C10H20]
    J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
    J[2311] += dqdci; // dwdot[PXC10H21]/d[C10H20]
    // d()/d[PXC10H21]
    dqdci = -k_r;
    J[2323] -= dqdci; // dwdot[H]/d[PXC10H21]
    J[2364] -= dqdci; // dwdot[C10H20]/d[PXC10H21]
    J[2365] += dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[42];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 6 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.5 * dcdc_fac;
    dqdc[17] = 2 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = 3 * dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac + k_f * sc[1];
    dqdc[43] = dcdc_fac - k_r;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 42] -= dqdc[k];
      J[54 * k + 43] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT
  J[2905] += dqdT; // dwdot[PXC10H21]/dT

  // reaction 28: CO + O (+M) <=> CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (12 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.173e+24 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[2] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // O
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * sc[16];
    J[110] -= dqdci; // dwdot[O]/d[O]
    J[124] -= dqdci; // dwdot[CO]/d[O]
    J[125] += dqdci; // dwdot[CO2]/d[O]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[272] -= dqdci; // dwdot[O]/d[H2]
    J[286] -= dqdci; // dwdot[CO]/d[H2]
    J[287] += dqdci; // dwdot[CO2]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[326] -= dqdci; // dwdot[O]/d[H2O]
    J[340] -= dqdci; // dwdot[CO]/d[H2O]
    J[341] += dqdci; // dwdot[CO2]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac + k_f * sc[2];
    J[866] -= dqdci; // dwdot[O]/d[CO]
    J[880] -= dqdci; // dwdot[CO]/d[CO]
    J[881] += dqdci; // dwdot[CO2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac - k_r;
    J[920] -= dqdci; // dwdot[O]/d[CO2]
    J[934] -= dqdci; // dwdot[CO]/d[CO2]
    J[935] += dqdci; // dwdot[CO2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac + k_f * sc[16];
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 2 * dcdc_fac;
    dqdc[6] = 12 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = 1.75 * dcdc_fac + k_f * sc[2];
    dqdc[17] = 3.6 * dcdc_fac - k_r;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 2] -= dqdc[k];
      J[54 * k + 16] -= dqdc[k];
      J[54 * k + 17] += dqdc[k];
    }
  }
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 18: 2 H + M <=> H2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (0 - 1) * sc[5] + (0 - 1) * sc[6] + (0 - 1) * sc[17];
  // forward
  phi_f = (sc[1] * sc[1]);
  k_f = 1780000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[1]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * 2.000000 * sc[1];
    J[55] += -2 * dqdci; // dwdot[H]/d[H]
    J[59] += dqdci;      // dwdot[H2]/d[H]
    // d()/d[H2]
    dqdci = (0 - 1) * q_nocor - k_r;
    J[271] += -2 * dqdci; // dwdot[H]/d[H2]
    J[275] += dqdci;      // dwdot[H2]/d[H2]
    // d()/d[H2O]
    dqdci = (0 - 1) * q_nocor;
    J[325] += -2 * dqdci; // dwdot[H]/d[H2O]
    J[329] += dqdci;      // dwdot[H2]/d[H2O]
    // d()/d[CO2]
    dqdci = (0 - 1) * q_nocor;
    J[919] += -2 * dqdci; // dwdot[H]/d[CO2]
    J[923] += dqdci;      // dwdot[H2]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * 2.000000 * sc[1];
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = -k_r;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] += -2 * dqdc[k];
      J[54 * k + 5] += dqdc[k];
    }
  }
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 19: H + OH + M <=> H2O + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (6.3 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 44000000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[6];
  Kc = refCinv * exp(g_RT[1] + g_RT[3] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[3]) + (h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[3];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[57] -= dqdci; // dwdot[OH]/d[H]
    J[60] += dqdci; // dwdot[H2O]/d[H]
    // d()/d[OH]
    dqdci = +k_f * sc[1];
    J[163] -= dqdci; // dwdot[H]/d[OH]
    J[165] -= dqdci; // dwdot[OH]/d[OH]
    J[168] += dqdci; // dwdot[H2O]/d[OH]
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[273] -= dqdci; // dwdot[OH]/d[H2]
    J[276] += dqdci; // dwdot[H2O]/d[H2]
    // d()/d[H2O]
    dqdci = (6.3 - 1) * q_nocor - k_r;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[327] -= dqdci; // dwdot[OH]/d[H2O]
    J[330] += dqdci; // dwdot[H2O]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[867] -= dqdci; // dwdot[OH]/d[CO]
    J[870] += dqdci; // dwdot[H2O]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[921] -= dqdci; // dwdot[OH]/d[CO2]
    J[924] += dqdci; // dwdot[H2O]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * sc[3];
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor + k_f * sc[1];
    dqdc[4] = q_nocor;
    dqdc[5] = 2 * q_nocor;
    dqdc[6] = 6.3 * q_nocor - k_r;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = 1.75 * q_nocor;
    dqdc[17] = 3.6 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 3] -= dqdc[k];
      J[54 * k + 6] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 20: 2 O + M <=> O2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.4 - 1) * sc[5] + (15.4 - 1) * sc[6] +
          (1.75 - 1) * sc[16] + (3.6 - 1) * sc[17];
  // forward
  phi_f = (sc[2] * sc[2]);
  k_f = 120000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(2.000000 * g_RT[2] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[2]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= 2 * q; // O
  wdot[8] += q;     // O2
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * 2.000000 * sc[2];
    J[110] += -2 * dqdci; // dwdot[O]/d[O]
    J[116] += dqdci;      // dwdot[O2]/d[O]
    // d()/d[H2]
    dqdci = (2.4 - 1) * q_nocor;
    J[272] += -2 * dqdci; // dwdot[O]/d[H2]
    J[278] += dqdci;      // dwdot[O2]/d[H2]
    // d()/d[H2O]
    dqdci = (15.4 - 1) * q_nocor;
    J[326] += -2 * dqdci; // dwdot[O]/d[H2O]
    J[332] += dqdci;      // dwdot[O2]/d[H2O]
    // d()/d[O2]
    dqdci = -k_r;
    J[434] += -2 * dqdci; // dwdot[O]/d[O2]
    J[440] += dqdci;      // dwdot[O2]/d[O2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[866] += -2 * dqdci; // dwdot[O]/d[CO]
    J[872] += dqdci;      // dwdot[O2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[920] += -2 * dqdci; // dwdot[O]/d[CO2]
    J[926] += dqdci;      // dwdot[O2]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor + k_f * 2.000000 * sc[2];
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 2.4 * q_nocor;
    dqdc[6] = 15.4 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor - k_r;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = 1.75 * q_nocor;
    dqdc[17] = 3.6 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 2] += -2 * dqdc[k];
      J[54 * k + 8] += dqdc[k];
    }
  }
  J[2864] += -2 * dqdT; // dwdot[O]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 21: 2 H + H2 <=> H2 + H2
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[5];
  k_f = 90000 * exp(-0.6 * tc[0]);
  dlnkfdT = -0.6 * invT;
  // reverse
  phi_r = (sc[5] * sc[5]);
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[5]) + (2.000000 * h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[5];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[1] * sc[1] - k_r * 2.000000 * sc[5];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 22: 2 H + H2O <=> H2 + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[6];
  k_f = 56240000 * exp(-1.25 * tc[0]);
  dlnkfdT = -1.25 * invT;
  // reverse
  phi_r = sc[5] * sc[6];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[6]) + (h_RT[5] + h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[6];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[6];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1] * sc[1] - k_r * sc[5];
  J[325] += -2 * dqdci; // dwdot[H]/d[H2O]
  J[329] += dqdci;      // dwdot[H2]/d[H2O]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 23: 2 H + CO2 <=> H2 + CO2
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[1] * sc[1]) * sc[17];
  k_f = 550000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[5] * sc[17];
  Kc = refCinv * exp(2.000000 * g_RT[1] - g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(2.000000 * h_RT[1] + h_RT[17]) + (h_RT[5] + h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= 2 * q; // H
  wdot[5] += q;     // H2
  // d()/d[H]
  dqdci = +k_f * 2.000000 * sc[1] * sc[17];
  J[55] += -2 * dqdci; // dwdot[H]/d[H]
  J[59] += dqdci;      // dwdot[H2]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[17];
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1] * sc[1] - k_r * sc[5];
  J[919] += -2 * dqdci; // dwdot[H]/d[CO2]
  J[923] += dqdci;      // dwdot[H2]/d[CO2]
  // d()/dT
  J[2863] += -2 * dqdT; // dwdot[H]/dT
  J[2867] += dqdT;      // dwdot[H2]/dT

  // reaction 24: H + O + M <=> OH + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (12 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 9428000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(g_RT[1] + g_RT[2] - g_RT[3]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[2]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[2];
    J[55] -= dqdci; // dwdot[H]/d[H]
    J[56] -= dqdci; // dwdot[O]/d[H]
    J[57] += dqdci; // dwdot[OH]/d[H]
    // d()/d[O]
    dqdci = +k_f * sc[1];
    J[109] -= dqdci; // dwdot[H]/d[O]
    J[110] -= dqdci; // dwdot[O]/d[O]
    J[111] += dqdci; // dwdot[OH]/d[O]
    // d()/d[OH]
    dqdci = -k_r;
    J[163] -= dqdci; // dwdot[H]/d[OH]
    J[164] -= dqdci; // dwdot[O]/d[OH]
    J[165] += dqdci; // dwdot[OH]/d[OH]
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[272] -= dqdci; // dwdot[O]/d[H2]
    J[273] += dqdci; // dwdot[OH]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[325] -= dqdci; // dwdot[H]/d[H2O]
    J[326] -= dqdci; // dwdot[O]/d[H2O]
    J[327] += dqdci; // dwdot[OH]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[865] -= dqdci; // dwdot[H]/d[CO]
    J[866] -= dqdci; // dwdot[O]/d[CO]
    J[867] += dqdci; // dwdot[OH]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[919] -= dqdci; // dwdot[H]/d[CO2]
    J[920] -= dqdci; // dwdot[O]/d[CO2]
    J[921] += dqdci; // dwdot[OH]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * sc[2];
    dqdc[2] = q_nocor + k_f * sc[1];
    dqdc[3] = q_nocor - k_r;
    dqdc[4] = q_nocor;
    dqdc[5] = 2 * q_nocor;
    dqdc[6] = 12 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = 1.75 * q_nocor;
    dqdc[17] = 3.6 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] -= dqdc[k];
      J[54 * k + 2] -= dqdc[k];
      J[54 * k + 3] += dqdc[k];
    }
  }
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT

  // reaction 30: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[5] + (0 - 1) * sc[6] + (1.75 - 1) * sc[16] +
          (3.6 - 1) * sc[17];
  // forward
  phi_f = sc[13];
  k_f = 187000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[1] * sc[16];
  Kc = refC * exp(-g_RT[1] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13]) + (h_RT[1] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = -k_r * sc[16];
    J[55] += dqdci; // dwdot[H]/d[H]
    J[67] -= dqdci; // dwdot[HCO]/d[H]
    J[70] += dqdci; // dwdot[CO]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[271] += dqdci; // dwdot[H]/d[H2]
    J[283] -= dqdci; // dwdot[HCO]/d[H2]
    J[286] += dqdci; // dwdot[CO]/d[H2]
    // d()/d[H2O]
    dqdci = (0 - 1) * q_nocor;
    J[325] += dqdci; // dwdot[H]/d[H2O]
    J[337] -= dqdci; // dwdot[HCO]/d[H2O]
    J[340] += dqdci; // dwdot[CO]/d[H2O]
    // d()/d[HCO]
    dqdci = +k_f;
    J[703] += dqdci; // dwdot[H]/d[HCO]
    J[715] -= dqdci; // dwdot[HCO]/d[HCO]
    J[718] += dqdci; // dwdot[CO]/d[HCO]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor - k_r * sc[1];
    J[865] += dqdci; // dwdot[H]/d[CO]
    J[877] -= dqdci; // dwdot[HCO]/d[CO]
    J[880] += dqdci; // dwdot[CO]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[919] += dqdci; // dwdot[H]/d[CO2]
    J[931] -= dqdci; // dwdot[HCO]/d[CO2]
    J[934] += dqdci; // dwdot[CO]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor - k_r * sc[16];
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 2 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor + k_f;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = 1.75 * q_nocor - k_r * sc[1];
    dqdc[17] = 3.6 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    for (int k = 0; k < 53; k++) {
      J[54 * k + 1] += dqdc[k];
      J[54 * k + 13] -= dqdc[k];
      J[54 * k + 16] += dqdc[k];
    }
  }
  J[2863] += dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 36: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 2244000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[1] * sc[6] * sc[16];
  Kc = refC * exp(-g_RT[1] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[6] + h_RT[13]) + (h_RT[1] + h_RT[6] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = -k_r * sc[6] * sc[16];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[13] - k_r * sc[1] * sc[16];
  J[325] += dqdci; // dwdot[H]/d[H2O]
  J[337] -= dqdci; // dwdot[HCO]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[6];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[1] * sc[6];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 0: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 97560000 * exp(-(7468.87259020676) * invT);
  dlnkfdT = (7468.87259020676) * invT2;
  // reverse
  phi_r = sc[2] * sc[3];
  Kc = exp(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[2] + h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] += q; // O
  wdot[3] += q; // OH
  wdot[8] -= q; // O2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[56] += dqdci; // dwdot[O]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[O]
  dqdci = -k_r * sc[3];
  J[109] -= dqdci; // dwdot[H]/d[O]
  J[110] += dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[2];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[164] += dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[433] -= dqdci; // dwdot[H]/d[O2]
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 1: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 0.04589 * exp(2.7 * tc[0] - (3150.13632793755) * invT);
  dlnkfdT = 2.7 * invT + (3150.13632793755) * invT2;
  // reverse
  phi_r = sc[1] * sc[3];
  Kc = exp(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[5]) + (h_RT[1] + h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[5] -= q; // H2
  // d()/d[H]
  dqdci = -k_r * sc[3];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[5];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[113] -= dqdci; // dwdot[H2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[1];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[167] -= dqdci; // dwdot[H2]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[2];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[272] -= dqdci; // dwdot[O]/d[H2]
  J[273] += dqdci; // dwdot[OH]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT

  // reaction 2: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 102.4 * exp(1.6 * tc[0] - (1659.74946449039) * invT);
  dlnkfdT = 1.6 * invT + (1659.74946449039) * invT2;
  // reverse
  phi_r = sc[1] * sc[6];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[5]) + (h_RT[1] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[3] -= q; // OH
  wdot[5] -= q; // H2
  wdot[6] += q; // H2O
  // d()/d[H]
  dqdci = -k_r * sc[6];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[5];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[167] -= dqdci; // dwdot[H2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[273] -= dqdci; // dwdot[OH]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[276] += dqdci; // dwdot[H2O]/d[H2]
  // d()/d[H2O]
  dqdci = -k_r * sc[1];
  J[325] += dqdci; // dwdot[H]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[329] -= dqdci; // dwdot[H2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 3: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 0.03973 * exp(2.4 * tc[0] - (-1061.78716484796) * invT);
  dlnkfdT = 2.4 * invT + (-1061.78716484796) * invT2;
  // reverse
  phi_r = sc[2] * sc[6];
  Kc = exp(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[2] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;     // O
  wdot[3] -= 2 * q; // OH
  wdot[6] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[110] += dqdci;      // dwdot[O]/d[O]
  J[111] += -2 * dqdci; // dwdot[OH]/d[O]
  J[114] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[3];
  J[164] += dqdci;      // dwdot[O]/d[OH]
  J[165] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[326] += dqdci;      // dwdot[O]/d[H2O]
  J[327] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2864] += dqdT;      // dwdot[O]/dT
  J[2865] += -2 * dqdT; // dwdot[OH]/dT
  J[2868] += dqdT;      // dwdot[H2O]/dT

  // reaction 5: H + HO2 <=> 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  dlnkfdT = (148.448916412392) * invT2;
  // reverse
  phi_r = (sc[3] * sc[3]);
  Kc = exp(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (2.000000 * h_RT[3]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;     // H
  wdot[3] += 2 * q; // OH
  wdot[4] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[55] -= dqdci;     // dwdot[H]/d[H]
  J[57] += 2 * dqdci; // dwdot[OH]/d[H]
  J[58] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * 2.000000 * sc[3];
  J[163] -= dqdci;     // dwdot[H]/d[OH]
  J[165] += 2 * dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci;     // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[217] -= dqdci;     // dwdot[H]/d[HO2]
  J[219] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2863] -= dqdT;     // dwdot[H]/dT
  J[2865] += 2 * dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT;     // dwdot[HO2]/dT

  // reaction 6: H2 + O2 <=> H + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 0.5916 * exp(2.433 * tc[0] - (26923.0980538841) * invT);
  dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
  // reverse
  phi_r = sc[1] * sc[4];
  Kc = exp(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[1] + h_RT[4]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q; // H
  wdot[4] += q; // HO2
  wdot[5] -= q; // H2
  wdot[8] -= q; // O2
  // d()/d[H]
  dqdci = -k_r * sc[4];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[58] += dqdci; // dwdot[HO2]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[HO2]
  dqdci = -k_r * sc[1];
  J[217] += dqdci; // dwdot[H]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[221] -= dqdci; // dwdot[H2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  // d()/d[H2]
  dqdci = +k_f * sc[8];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HO2]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[278] -= dqdci; // dwdot[O2]/d[H2]
  // d()/d[O2]
  dqdci = +k_f * sc[5];
  J[433] += dqdci; // dwdot[H]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[437] -= dqdci; // dwdot[H2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT

  // reaction 7: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 28910000 * exp(-(-252.569476734047) * invT);
  dlnkfdT = (-252.569476734047) * invT2;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] -= q; // HO2
  wdot[6] += q; // H2O
  wdot[8] += q; // O2
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[170] += dqdci; // dwdot[O2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] -= dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[332] += dqdci; // dwdot[O2]/d[H2O]
  // d()/d[O2]
  dqdci = -k_r * sc[6];
  J[435] -= dqdci; // dwdot[OH]/d[O2]
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[438] += dqdci; // dwdot[H2O]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2870] += dqdT; // dwdot[O2]/dT

  // reaction 8: H + HO2 <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  dlnkfdT = (337.658382754967) * invT2;
  // reverse
  phi_r = sc[2] * sc[6];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (h_RT[2] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[2] += q; // O
  wdot[4] -= q; // HO2
  wdot[6] += q; // H2O
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[56] += dqdci; // dwdot[O]/d[H]
  J[58] -= dqdci; // dwdot[HO2]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[109] -= dqdci; // dwdot[H]/d[O]
  J[110] += dqdci; // dwdot[O]/d[O]
  J[112] -= dqdci; // dwdot[HO2]/d[O]
  J[114] += dqdci; // dwdot[H2O]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[217] -= dqdci; // dwdot[H]/d[HO2]
  J[218] += dqdci; // dwdot[O]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[326] += dqdci; // dwdot[O]/d[H2O]
  J[328] -= dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT

  // reaction 9: HO2 + O <=> O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[8];
  Kc = exp(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[4]) + (h_RT[3] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[4] -= q; // HO2
  wdot[8] += q; // O2
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[112] -= dqdci; // dwdot[HO2]/d[O]
  J[116] += dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[8];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[170] += dqdci; // dwdot[O2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[218] -= dqdci; // dwdot[O]/d[HO2]
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[3];
  J[434] -= dqdci; // dwdot[O]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT

  // reaction 10: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  dlnkfdT = (-820.243165261693) * invT2;
  // reverse
  phi_r = sc[7] * sc[8];
  Kc = exp(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[7] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= 2 * q; // HO2
  wdot[7] += q;     // H2O2
  wdot[8] += q;     // O2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[4];
  J[220] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[224] += dqdci;      // dwdot[O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[8];
  J[382] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci;      // dwdot[H2O2]/d[H2O2]
  J[386] += dqdci;      // dwdot[O2]/d[H2O2]
  // d()/d[O2]
  dqdci = -k_r * sc[7];
  J[436] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[439] += dqdci;      // dwdot[H2O2]/d[O2]
  J[440] += dqdci;      // dwdot[O2]/d[O2]
  // d()/dT
  J[2866] += -2 * dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 11: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  dlnkfdT = (6038.59998965664) * invT2;
  // reverse
  phi_r = sc[7] * sc[8];
  Kc = exp(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[7] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= 2 * q; // HO2
  wdot[7] += q;     // H2O2
  wdot[8] += q;     // O2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[4];
  J[220] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[224] += dqdci;      // dwdot[O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[8];
  J[382] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci;      // dwdot[H2O2]/d[H2O2]
  J[386] += dqdci;      // dwdot[O2]/d[H2O2]
  // d()/d[O2]
  dqdci = -k_r * sc[7];
  J[436] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[439] += dqdci;      // dwdot[H2O2]/d[O2]
  J[440] += dqdci;      // dwdot[O2]/d[O2]
  // d()/dT
  J[2866] += -2 * dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT;      // dwdot[H2O2]/dT
  J[2870] += dqdT;      // dwdot[O2]/dT

  // reaction 12: H + H2O2 <=> H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[3] * sc[6];
  Kc = exp(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[3] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[3] += q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  J[61] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[6];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[3];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[327] += dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[379] -= dqdci; // dwdot[H]/d[H2O2]
  J[381] += dqdci; // dwdot[OH]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 13: H + H2O2 <=> H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 6.05 * exp(2 * tc[0] - (2616.72666218454) * invT);
  dlnkfdT = 2 * invT + (2616.72666218454) * invT2;
  // reverse
  phi_r = sc[4] * sc[5];
  Kc = exp(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[4] + h_RT[5]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // H
  wdot[4] += q; // HO2
  wdot[5] += q; // H2
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[58] += dqdci; // dwdot[HO2]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[61] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[HO2]
  dqdci = -k_r * sc[5];
  J[217] -= dqdci; // dwdot[H]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[221] += dqdci; // dwdot[H2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2]
  dqdci = -k_r * sc[4];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HO2]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[277] -= dqdci; // dwdot[H2O2]/d[H2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[379] -= dqdci; // dwdot[H]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[383] += dqdci; // dwdot[H2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 14: H2O2 + O <=> HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 9.63 * exp(2 * tc[0] - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[3] * sc[4];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[7]) + (h_RT[3] + h_RT[4]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q; // O
  wdot[3] += q; // OH
  wdot[4] += q; // HO2
  wdot[7] -= q; // H2O2
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[112] += dqdci; // dwdot[HO2]/d[O]
  J[115] -= dqdci; // dwdot[H2O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[4];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[3];
  J[218] -= dqdci; // dwdot[O]/d[HO2]
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[380] -= dqdci; // dwdot[O]/d[H2O2]
  J[381] += dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 15: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 2000000 * exp(-(214.873516298615) * invT);
  dlnkfdT = (214.873516298615) * invT2;
  // reverse
  phi_r = sc[4] * sc[6];
  Kc = exp(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[7]) + (h_RT[4] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] += q; // HO2
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[4];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] += dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[381] -= dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 16: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 2.67e+35 * exp(-7 * tc[0] - (18920.9466342575) * invT);
  dlnkfdT = -7 * invT + (18920.9466342575) * invT2;
  // reverse
  phi_r = sc[4] * sc[6];
  Kc = exp(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[7]) + (h_RT[4] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // OH
  wdot[4] += q; // HO2
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[166] += dqdci; // dwdot[HO2]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[169] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[219] -= dqdci; // dwdot[OH]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[222] += dqdci; // dwdot[H2O]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[4];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[328] += dqdci; // dwdot[HO2]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[331] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[381] -= dqdci; // dwdot[OH]/d[H2O2]
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[384] += dqdci; // dwdot[H2O]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT

  // reaction 25: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 0.07046 * exp(2.053 * tc[0] - (-178.979071526765) * invT);
  dlnkfdT = 2.053 * invT + (-178.979071526765) * invT2;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[70] -= dqdci; // dwdot[CO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[921] -= dqdci; // dwdot[OH]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 26: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 5757000 * exp(-0.664 * tc[0] - (166.98238621398) * invT);
  dlnkfdT = -0.664 * invT + (166.98238621398) * invT2;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[70] -= dqdci; // dwdot[CO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[921] -= dqdci; // dwdot[OH]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 27: CO + HO2 <=> CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[16];
  k_f = 0.157 * exp(2.18 * tc[0] - (9029.02038003442) * invT);
  dlnkfdT = 2.18 * invT + (9029.02038003442) * invT2;
  // reverse
  phi_r = sc[3] * sc[17];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[16]) + (h_RT[3] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[OH]
  dqdci = -k_r * sc[17];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[178] -= dqdci; // dwdot[CO]/d[OH]
  J[179] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[16];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[232] -= dqdci; // dwdot[CO]/d[HO2]
  J[233] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[4];
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[868] -= dqdci; // dwdot[HO2]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[3];
  J[921] += dqdci; // dwdot[OH]/d[CO2]
  J[922] -= dqdci; // dwdot[HO2]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 29: CO + O2 <=> CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // reverse
  phi_r = sc[2] * sc[17];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[16]) + (h_RT[2] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[16] -= q; // CO
  wdot[17] += q; // CO2
  // d()/d[O]
  dqdci = -k_r * sc[17];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[124] -= dqdci; // dwdot[CO]/d[O]
  J[125] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[16];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[448] -= dqdci; // dwdot[CO]/d[O2]
  J[449] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[CO]
  dqdci = +k_f * sc[8];
  J[866] += dqdci; // dwdot[O]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[880] -= dqdci; // dwdot[CO]/d[CO]
  J[881] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[2];
  J[920] += dqdci; // dwdot[O]/d[CO2]
  J[926] -= dqdci; // dwdot[O2]/d[CO2]
  J[934] -= dqdci; // dwdot[CO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2878] -= dqdT; // dwdot[CO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 31: H + HCO <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[16];
  Kc = exp(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[5] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[283] -= dqdci; // dwdot[HCO]/d[H2]
  J[286] += dqdci; // dwdot[CO]/d[H2]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[707] += dqdci; // dwdot[H2]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[5];
  J[865] -= dqdci; // dwdot[H]/d[CO]
  J[869] += dqdci; // dwdot[H2]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 32: HCO + O <=> CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[16];
  Kc = exp(g_RT[2] - g_RT[3] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[3] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[121] -= dqdci; // dwdot[HCO]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[175] -= dqdci; // dwdot[HCO]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[3];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 33: HCO + O <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[17];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[1] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[13] -= q; // HCO
  wdot[17] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[67] -= dqdci; // dwdot[HCO]/d[H]
  J[71] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] -= dqdci; // dwdot[HCO]/d[O]
  J[125] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[719] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/d[CO2]
  dqdci = -k_r * sc[1];
  J[919] += dqdci; // dwdot[H]/d[CO2]
  J[920] -= dqdci; // dwdot[O]/d[CO2]
  J[931] -= dqdci; // dwdot[HCO]/d[CO2]
  J[935] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2879] += dqdT; // dwdot[CO2]/dT

  // reaction 34: HCO + OH <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(g_RT[3] - g_RT[6] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[13]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[175] -= dqdci; // dwdot[HCO]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[337] -= dqdci; // dwdot[HCO]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[705] -= dqdci; // dwdot[OH]/d[HCO]
  J[708] += dqdci; // dwdot[H2O]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 35: HCO + O2 <=> CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[13];
  k_f = 12040 * exp(0.807 * tc[0] - (-365.838516040031) * invT);
  dlnkfdT = 0.807 * invT + (-365.838516040031) * invT2;
  // reverse
  phi_r = sc[4] * sc[16];
  Kc = exp(-g_RT[4] + g_RT[8] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[13]) + (h_RT[4] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[HO2]
  dqdci = -k_r * sc[16];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[229] -= dqdci; // dwdot[HCO]/d[HO2]
  J[232] += dqdci; // dwdot[CO]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[13];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] -= dqdci; // dwdot[HCO]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[8];
  J[706] += dqdci; // dwdot[HO2]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[4];
  J[868] += dqdci; // dwdot[HO2]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 40: CH2 + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[9];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[13];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[9]) + (h_RT[1] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[9] -= q;  // CH2
  wdot[13] += q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[13];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] -= dqdci; // dwdot[CH2]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2]
  dqdci = +k_f * sc[2];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[499] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[1];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[711] -= dqdci; // dwdot[CH2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 41: CH2 + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[9] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[9]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[9] -= q;  // CH2
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2]
  dqdci = +k_f * sc[3];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[489] -= dqdci; // dwdot[OH]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[765] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 42: CH2 + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 0.5 * exp(2 * tc[0] - (3638.25649376812) * invT);
  dlnkfdT = 2 * invT + (3638.25649376812) * invT2;
  // reverse
  phi_r = sc[1] * sc[11];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[9] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[9]) + (h_RT[1] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[5] -= q;  // H2
  wdot[9] -= q;  // CH2
  wdot[11] += q; // CH3
  // d()/d[H]
  dqdci = -k_r * sc[11];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[9];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[279] -= dqdci; // dwdot[CH2]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2]
  dqdci = +k_f * sc[5];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[491] -= dqdci; // dwdot[H2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[497] += dqdci; // dwdot[CH3]/d[CH2]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[599] -= dqdci; // dwdot[H2]/d[CH3]
  J[603] -= dqdci; // dwdot[CH2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 43: CH2 + O2 <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[9];
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[9]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[9] -= q;  // CH2
  wdot[13] += q; // HCO
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[441] -= dqdci; // dwdot[CH2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH2]
  dqdci = +k_f * sc[8];
  J[489] += dqdci; // dwdot[OH]/d[CH2]
  J[494] -= dqdci; // dwdot[O2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[499] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[3];
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[711] -= dqdci; // dwdot[CH2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 44: CH2 + O2 <=> CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[9];
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[17];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[8] + g_RT[9] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[9]) + (2.000000 * h_RT[1] + h_RT[17]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[8] -= q;     // O2
  wdot[9] -= q;     // CH2
  wdot[17] += q;    // CO2
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[17];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[62] -= dqdci;     // dwdot[O2]/d[H]
  J[63] -= dqdci;     // dwdot[CH2]/d[H]
  J[71] += dqdci;     // dwdot[CO2]/d[H]
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[433] += 2 * dqdci; // dwdot[H]/d[O2]
  J[440] -= dqdci;     // dwdot[O2]/d[O2]
  J[441] -= dqdci;     // dwdot[CH2]/d[O2]
  J[449] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/d[CH2]
  dqdci = +k_f * sc[8];
  J[487] += 2 * dqdci; // dwdot[H]/d[CH2]
  J[494] -= dqdci;     // dwdot[O2]/d[CH2]
  J[495] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[503] += dqdci;     // dwdot[CO2]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[1] * sc[1];
  J[919] += 2 * dqdci; // dwdot[H]/d[CO2]
  J[926] -= dqdci;     // dwdot[O2]/d[CO2]
  J[927] -= dqdci;     // dwdot[CH2]/d[CO2]
  J[935] += dqdci;     // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2870] -= dqdT;     // dwdot[O2]/dT
  J[2871] -= dqdT;     // dwdot[CH2]/dT
  J[2879] += dqdT;     // dwdot[CO2]/dT

  // reaction 45: CH2 + HO2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[9]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[9] -= q;  // CH2
  wdot[14] += q; // CH2O
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[171] -= dqdci; // dwdot[CH2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[9];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[225] -= dqdci; // dwdot[CH2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[CH2]
  dqdci = +k_f * sc[4];
  J[489] += dqdci; // dwdot[OH]/d[CH2]
  J[490] -= dqdci; // dwdot[HO2]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[765] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 46: 2 CH2 <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[18];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[9] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[9]) + (h_RT[5] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;     // H2
  wdot[9] -= 2 * q; // CH2
  wdot[18] += q;    // C2H2
  // d()/d[H2]
  dqdci = -k_r * sc[18];
  J[275] += dqdci;      // dwdot[H2]/d[H2]
  J[279] += -2 * dqdci; // dwdot[CH2]/d[H2]
  J[288] += dqdci;      // dwdot[C2H2]/d[H2]
  // d()/d[CH2]
  dqdci = +k_f * 2.000000 * sc[9];
  J[491] += dqdci;      // dwdot[H2]/d[CH2]
  J[495] += -2 * dqdci; // dwdot[CH2]/d[CH2]
  J[504] += dqdci;      // dwdot[C2H2]/d[CH2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[977] += dqdci;      // dwdot[H2]/d[C2H2]
  J[981] += -2 * dqdci; // dwdot[CH2]/d[C2H2]
  J[990] += dqdci;      // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2867] += dqdT;      // dwdot[H2]/dT
  J[2871] += -2 * dqdT; // dwdot[CH2]/dT
  J[2880] += dqdT;      // dwdot[C2H2]/dT

  // reaction 47: CH2* + N2 <=> CH2 + N2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[52];
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  dlnkfdT = (301.929999482832) * invT2;
  // reverse
  phi_r = sc[9] * sc[52];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[52] - g_RT[52]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[52]) + (h_RT[9] + h_RT[52]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[52];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[52];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[N2]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[2817] += dqdci; // dwdot[CH2]/d[N2]
  J[2818] -= dqdci; // dwdot[CH2*]/d[N2]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 48: CH2* + O <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[16];
  Kc = exp(g_RT[2] - g_RT[5] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[10]) + (h_RT[5] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[5] += q;  // H2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[113] += dqdci; // dwdot[H2]/d[O]
  J[118] -= dqdci; // dwdot[CH2*]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[272] -= dqdci; // dwdot[O]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[280] -= dqdci; // dwdot[CH2*]/d[H2]
  J[286] += dqdci; // dwdot[CO]/d[H2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[2];
  J[542] -= dqdci; // dwdot[O]/d[CH2*]
  J[545] += dqdci; // dwdot[H2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[5];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[869] += dqdci; // dwdot[H2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 49: CH2* + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[13];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[10] - g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[10]) + (h_RT[1] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[10] -= q; // CH2*
  wdot[13] += q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[13];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[118] -= dqdci; // dwdot[CH2*]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[2];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[542] -= dqdci; // dwdot[O]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[553] += dqdci; // dwdot[HCO]/d[CH2*]
  // d()/d[HCO]
  dqdci = -k_r * sc[1];
  J[703] += dqdci; // dwdot[H]/d[HCO]
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[712] -= dqdci; // dwdot[CH2*]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT

  // reaction 50: CH2* + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[3] + g_RT[10] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[10]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] -= q;  // OH
  wdot[10] -= q; // CH2*
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci; // dwdot[OH]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[172] -= dqdci; // dwdot[CH2*]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2*]
  dqdci = +k_f * sc[3];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[543] -= dqdci; // dwdot[OH]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[554] += dqdci; // dwdot[CH2O]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[766] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 51: CH2* + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[10];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[11];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[10] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[10]) + (h_RT[1] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[5] -= q;  // H2
  wdot[10] -= q; // CH2*
  wdot[11] += q; // CH3
  // d()/d[H]
  dqdci = -k_r * sc[11];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[59] -= dqdci; // dwdot[H2]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[H2]
  dqdci = +k_f * sc[10];
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[275] -= dqdci; // dwdot[H2]/d[H2]
  J[280] -= dqdci; // dwdot[CH2*]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[5];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[545] -= dqdci; // dwdot[H2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] += dqdci; // dwdot[CH3]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[599] -= dqdci; // dwdot[H2]/d[CH3]
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2867] -= dqdT; // dwdot[H2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT

  // reaction 52: CH2* + O2 <=> CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[3] * sc[16];
  Kc = refC * exp(-g_RT[1] - g_RT[3] + g_RT[8] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[10]) + (h_RT[1] + h_RT[3] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[H]
  dqdci = -k_r * sc[3] * sc[16];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[62] -= dqdci; // dwdot[O2]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[70] += dqdci; // dwdot[CO]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[1] * sc[16];
  J[163] += dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[172] -= dqdci; // dwdot[CH2*]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[433] += dqdci; // dwdot[H]/d[O2]
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[442] -= dqdci; // dwdot[CH2*]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[543] += dqdci; // dwdot[OH]/d[CH2*]
  J[548] -= dqdci; // dwdot[O2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[1] * sc[3];
  J[865] += dqdci; // dwdot[H]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 53: CH2* + O2 <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(-g_RT[6] + g_RT[8] + g_RT[10] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[10]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2O
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH2*
  wdot[16] += q; // CO
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[332] -= dqdci; // dwdot[O2]/d[H2O]
  J[334] -= dqdci; // dwdot[CH2*]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[438] += dqdci; // dwdot[H2O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[442] -= dqdci; // dwdot[CH2*]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[548] -= dqdci; // dwdot[O2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 54: CH2* + H2O <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = exp(g_RT[6] - g_RT[6] - g_RT[9] + g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[10]) + (h_RT[6] + h_RT[9]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[H2O]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[333] += dqdci; // dwdot[CH2]/d[H2O]
  J[334] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[6];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[6];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 55: CH2* + CO <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[16];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[16] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[16]) + (h_RT[9] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[16];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[16];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[873] += dqdci; // dwdot[CH2]/d[CO]
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 56: CH2* + CO2 <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[17];
  Kc = exp(-g_RT[9] + g_RT[10] + g_RT[17] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[17]) + (h_RT[9] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // CH2
  wdot[10] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[496] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[549] += dqdci; // dwdot[CH2]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO2]
  dqdci = +k_f * sc[10] - k_r * sc[9];
  J[927] += dqdci; // dwdot[CH2]/d[CO2]
  J[928] -= dqdci; // dwdot[CH2*]/d[CO2]
  // d()/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT

  // reaction 57: CH2* + CO2 <=> CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[16];
  Kc = exp(g_RT[10] - g_RT[14] - g_RT[16] + g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[17]) + (h_RT[14] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // CH2*
  wdot[14] += q; // CH2O
  wdot[16] += q; // CO
  wdot[17] -= q; // CO2
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[554] += dqdci; // dwdot[CH2O]/d[CH2*]
  J[556] += dqdci; // dwdot[CO]/d[CH2*]
  J[557] -= dqdci; // dwdot[CO2]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[16];
  J[766] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[772] += dqdci; // dwdot[CO]/d[CH2O]
  J[773] -= dqdci; // dwdot[CO2]/d[CH2O]
  // d()/d[CO]
  dqdci = -k_r * sc[14];
  J[874] -= dqdci; // dwdot[CH2*]/d[CO]
  J[878] += dqdci; // dwdot[CH2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[881] -= dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = +k_f * sc[10];
  J[928] -= dqdci; // dwdot[CH2*]/d[CO2]
  J[932] += dqdci; // dwdot[CH2O]/d[CO2]
  J[934] += dqdci; // dwdot[CO]/d[CO2]
  J[935] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2879] -= dqdT; // dwdot[CO2]/dT

  // reaction 59: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 23000 * exp(1.05 * tc[0] - (1648.03458051046) * invT);
  dlnkfdT = 1.05 * invT + (1648.03458051046) * invT2;
  // reverse
  phi_r = sc[5] * sc[13];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[5] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[H]
  dqdci = +k_f * sc[14];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[68] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[13];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[283] += dqdci; // dwdot[HCO]/d[H2]
  J[284] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[HCO]
  dqdci = -k_r * sc[5];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[707] += dqdci; // dwdot[H2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[1];
  J[757] -= dqdci; // dwdot[H]/d[CH2O]
  J[761] += dqdci; // dwdot[H2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 60: CH2O + O <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[122] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  J[176] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HCO]
  dqdci = -k_r * sc[3];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[705] += dqdci; // dwdot[OH]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[2];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 61: CH2O + OH <=> H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[6] * sc[13];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[6] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[175] += dqdci; // dwdot[HCO]/d[OH]
  J[176] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[337] += dqdci; // dwdot[HCO]/d[H2O]
  J[338] -= dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[HCO]
  dqdci = -k_r * sc[6];
  J[705] -= dqdci; // dwdot[OH]/d[HCO]
  J[708] += dqdci; // dwdot[H2O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[762] += dqdci; // dwdot[H2O]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 62: CH2O + O2 <=> HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[4] * sc[13];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[14]) + (h_RT[4] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[HO2]
  dqdci = -k_r * sc[13];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[229] += dqdci; // dwdot[HCO]/d[HO2]
  J[230] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  J[446] -= dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[4];
  J[706] += dqdci; // dwdot[HO2]/d[HCO]
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[8];
  J[760] += dqdci; // dwdot[HO2]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 63: CH2O + HO2 <=> H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[7] * sc[13];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[14]) + (h_RT[7] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[229] += dqdci; // dwdot[HCO]/d[HO2]
  J[230] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[391] += dqdci; // dwdot[HCO]/d[H2O2]
  J[392] -= dqdci; // dwdot[CH2O]/d[H2O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[7];
  J[706] -= dqdci; // dwdot[HO2]/d[HCO]
  J[709] += dqdci; // dwdot[H2O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[4];
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[763] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH3 + O <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 84300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[14];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[1] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[11] -= q; // CH3
  wdot[14] += q; // CH2O
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[11];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] -= dqdci; // dwdot[CH3]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[1];
  J[757] += dqdci; // dwdot[H]/d[CH2O]
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH3 + OH <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 56 * exp(1.6 * tc[0] - (2727.43432866158) * invT);
  dlnkfdT = 1.6 * invT + (2727.43432866158) * invT2;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[6] + h_RT[9]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[9] += q;  // CH2
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[171] += dqdci; // dwdot[CH2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[9];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[333] += dqdci; // dwdot[CH2]/d[H2O]
  J[335] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[6];
  J[489] -= dqdci; // dwdot[OH]/d[CH2]
  J[492] += dqdci; // dwdot[H2O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[497] -= dqdci; // dwdot[CH3]/d[CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[603] += dqdci; // dwdot[CH2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT

  // reaction 67: CH3 + OH <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 25010000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[10] + g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[10] += q; // CH2*
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[172] += dqdci; // dwdot[CH2*]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[334] += dqdci; // dwdot[CH2*]/d[H2O]
  J[335] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[6];
  J[543] -= dqdci; // dwdot[OH]/d[CH2*]
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[550] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] -= dqdci; // dwdot[CH3]/d[CH2*]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[604] += dqdci; // dwdot[CH2*]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2872] += dqdT; // dwdot[CH2*]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT

  // reaction 68: CH3 + O2 <=> CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  dlnkfdT = (14492.6399751759) * invT2;
  // reverse
  phi_r = sc[2] * sc[15];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[2] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH3O
  // d()/d[O]
  dqdci = -k_r * sc[15];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[119] -= dqdci; // dwdot[CH3]/d[O]
  J[123] += dqdci; // dwdot[CH3O]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[447] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[596] += dqdci; // dwdot[O]/d[CH3]
  J[602] -= dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[609] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = -k_r * sc[2];
  J[812] += dqdci; // dwdot[O]/d[CH3O]
  J[818] -= dqdci; // dwdot[O2]/d[CH3O]
  J[821] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[825] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 69: CH3 + O2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  dlnkfdT = (4498.75699229419) * invT2;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[14] += q; // CH2O
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[602] -= dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT

  // reaction 70: CH3 + HO2 <=> CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[228] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[12];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[443] -= dqdci; // dwdot[CH3]/d[O2]
  J[444] += dqdci; // dwdot[CH4]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[602] += dqdci; // dwdot[O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[8];
  J[652] -= dqdci; // dwdot[HO2]/d[CH4]
  J[656] += dqdci; // dwdot[O2]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 71: CH3 + HO2 <=> CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 13400000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[15];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[3] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH3O
  // d()/d[OH]
  dqdci = -k_r * sc[15];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[173] -= dqdci; // dwdot[CH3]/d[OH]
  J[177] += dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[231] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[609] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = -k_r * sc[3];
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[814] -= dqdci; // dwdot[HO2]/d[CH3O]
  J[821] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[825] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2877] += dqdT; // dwdot[CH3O]/dT

  // reaction 72: CH3 + H2O2 <=> CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 0.0245 * exp(2.47 * tc[0] - (2606.66232886845) * invT);
  dlnkfdT = 2.47 * invT + (2606.66232886845) * invT2;
  // reverse
  phi_r = sc[4] * sc[12];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[11] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[11]) + (h_RT[4] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  // d()/d[HO2]
  dqdci = -k_r * sc[12];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[227] -= dqdci; // dwdot[CH3]/d[HO2]
  J[228] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[11];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[389] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[390] += dqdci; // dwdot[CH4]/d[H2O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[598] += dqdci; // dwdot[HO2]/d[CH3]
  J[601] -= dqdci; // dwdot[H2O2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[4];
  J[652] += dqdci; // dwdot[HO2]/d[CH4]
  J[655] -= dqdci; // dwdot[H2O2]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT

  // reaction 73: CH3 + HCO <=> CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 8480000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[16];
  Kc = exp(g_RT[11] - g_RT[12] + g_RT[13] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[12] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[607] -= dqdci; // dwdot[HCO]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[16];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[661] -= dqdci; // dwdot[HCO]/d[CH4]
  J[664] += dqdci; // dwdot[CO]/d[CH4]
  // d()/d[HCO]
  dqdci = +k_f * sc[11];
  J[713] -= dqdci; // dwdot[CH3]/d[HCO]
  J[714] += dqdci; // dwdot[CH4]/d[HCO]
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[875] -= dqdci; // dwdot[CH3]/d[CO]
  J[876] += dqdci; // dwdot[CH4]/d[CO]
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT

  // reaction 74: CH2O + CH3 <=> CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[14];
  k_f = 0.00332 * exp(2.81 * tc[0] - (2948.84966161566) * invT);
  dlnkfdT = 2.81 * invT + (2948.84966161566) * invT2;
  // reverse
  phi_r = sc[12] * sc[13];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[14]) + (h_RT[12] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[13] += q; // HCO
  wdot[14] -= q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[608] -= dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[13];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[661] += dqdci; // dwdot[HCO]/d[CH4]
  J[662] -= dqdci; // dwdot[CH2O]/d[CH4]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[713] -= dqdci; // dwdot[CH3]/d[HCO]
  J[714] += dqdci; // dwdot[CH4]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[11];
  J[767] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[768] += dqdci; // dwdot[CH4]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] -= dqdT; // dwdot[CH2O]/dT

  // reaction 75: CH2 + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[20];
  Kc = exp(-g_RT[1] + g_RT[9] + g_RT[11] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[11]) + (h_RT[1] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[9] -= q;  // CH2
  wdot[11] -= q; // CH3
  wdot[20] += q; // C2H4
  // d()/d[H]
  dqdci = -k_r * sc[20];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[11];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[497] -= dqdci; // dwdot[CH3]/d[CH2]
  J[506] += dqdci; // dwdot[C2H4]/d[CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[603] -= dqdci; // dwdot[CH2]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[1];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1089] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 76: CH2* + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  dlnkfdT = (-286.83349950869) * invT2;
  // reverse
  phi_r = sc[1] * sc[20];
  Kc = exp(-g_RT[1] + g_RT[10] + g_RT[11] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[11]) + (h_RT[1] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[10] -= q; // CH2*
  wdot[11] -= q; // CH3
  wdot[20] += q; // C2H4
  // d()/d[H]
  dqdci = -k_r * sc[20];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[11];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] -= dqdci; // dwdot[CH3]/d[CH2*]
  J[560] += dqdci; // dwdot[C2H4]/d[CH2*]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[1];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1090] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 78: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 4990000 * exp(0.1 * tc[0] - (5334.09665753003) * invT);
  dlnkfdT = 0.1 * invT + (5334.09665753003) * invT2;
  // reverse
  phi_r = sc[1] * sc[21];
  Kc = exp(-g_RT[1] + 2.000000 * g_RT[11] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[1] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;      // H
  wdot[11] -= 2 * q; // CH3
  wdot[21] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[21];
  J[55] += dqdci;      // dwdot[H]/d[H]
  J[65] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[75] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[595] += dqdci;      // dwdot[H]/d[CH3]
  J[605] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[1];
  J[1135] += dqdci;      // dwdot[H]/d[C2H5]
  J[1145] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2863] += dqdT;      // dwdot[H]/dT
  J[2873] += -2 * dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT;      // dwdot[C2H5]/dT

  // reaction 79: CH3O + H <=> CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[68] += dqdci; // dwdot[CH2O]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[14];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[284] += dqdci; // dwdot[CH2O]/d[H2]
  J[285] -= dqdci; // dwdot[CH3O]/d[H2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[5];
  J[757] -= dqdci; // dwdot[H]/d[CH2O]
  J[761] += dqdci; // dwdot[H2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[815] += dqdci; // dwdot[H2]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 80: CH3O + H <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[11];
  Kc = exp(g_RT[1] - g_RT[3] - g_RT[11] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[3] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[57] += dqdci; // dwdot[OH]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[11];
  J[163] -= dqdci; // dwdot[H]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[609] -= dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[821] += dqdci; // dwdot[CH3]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 81: CH3O + H <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 16000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(g_RT[1] - g_RT[6] - g_RT[10] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[6] += q;  // H2O
  wdot[10] += q; // CH2*
  wdot[15] -= q; // CH3O
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[60] += dqdci; // dwdot[H2O]/d[H]
  J[64] += dqdci; // dwdot[CH2*]/d[H]
  J[69] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[325] -= dqdci; // dwdot[H]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[334] += dqdci; // dwdot[CH2*]/d[H2O]
  J[339] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[6];
  J[541] -= dqdci; // dwdot[H]/d[CH2*]
  J[546] += dqdci; // dwdot[H2O]/d[CH2*]
  J[550] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[555] -= dqdci; // dwdot[CH3O]/d[CH2*]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[811] -= dqdci; // dwdot[H]/d[CH3O]
  J[816] += dqdci; // dwdot[H2O]/d[CH3O]
  J[820] += dqdci; // dwdot[CH2*]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2872] += dqdT; // dwdot[CH2*]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 82: CH3O + O <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[15]) + (h_RT[3] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[O]
  dqdci = +k_f * sc[15];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[123] -= dqdci; // dwdot[CH3O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[2];
  J[812] -= dqdci; // dwdot[O]/d[CH3O]
  J[813] += dqdci; // dwdot[OH]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 83: CH3O + OH <=> CH2O + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[14];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[15]) + (h_RT[6] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[OH]
  dqdci = +k_f * sc[15];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[177] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[338] += dqdci; // dwdot[CH2O]/d[H2O]
  J[339] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[6];
  J[759] -= dqdci; // dwdot[OH]/d[CH2O]
  J[762] += dqdci; // dwdot[H2O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[3];
  J[813] -= dqdci; // dwdot[OH]/d[CH3O]
  J[816] += dqdci; // dwdot[H2O]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 84: CH3O + O2 <=> CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 4.28e-19 * exp(7.6 * tc[0] - (-1776.35483029066) * invT);
  dlnkfdT = 7.6 * invT + (-1776.35483029066) * invT2;
  // reverse
  phi_r = sc[4] * sc[14];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[4] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[14] += q; // CH2O
  wdot[15] -= q; // CH3O
  // d()/d[HO2]
  dqdci = -k_r * sc[14];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[231] -= dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[15];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[447] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[4];
  J[760] += dqdci; // dwdot[HO2]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[771] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[8];
  J[814] += dqdci; // dwdot[HO2]/d[CH3O]
  J[818] -= dqdci; // dwdot[O2]/d[CH3O]
  J[824] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[825] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2877] -= dqdT; // dwdot[CH3O]/dT

  // reaction 85: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 660 * exp(1.62 * tc[0] - (5454.86865732316) * invT);
  dlnkfdT = 1.62 * invT + (5454.86865732316) * invT2;
  // reverse
  phi_r = sc[5] * sc[11];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[5] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[H]
  dqdci = +k_f * sc[12];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[66] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[11];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[281] += dqdci; // dwdot[CH3]/d[H2]
  J[282] -= dqdci; // dwdot[CH4]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[599] += dqdci; // dwdot[H2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[1];
  J[649] -= dqdci; // dwdot[H]/d[CH4]
  J[653] += dqdci; // dwdot[H2]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 86: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 1020 * exp(1.5 * tc[0] - (4327.66332592059) * invT);
  dlnkfdT = 1.5 * invT + (4327.66332592059) * invT2;
  // reverse
  phi_r = sc[3] * sc[11];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[3] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[120] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[11];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[174] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[650] -= dqdci; // dwdot[O]/d[CH4]
  J[651] += dqdci; // dwdot[OH]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 87: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 100 * exp(1.6 * tc[0] - (1570.03599731073) * invT);
  dlnkfdT = 1.6 * invT + (1570.03599731073) * invT2;
  // reverse
  phi_r = sc[6] * sc[11];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[12]) + (h_RT[6] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[11] += q; // CH3
  wdot[12] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[174] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[11];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[335] += dqdci; // dwdot[CH3]/d[H2O]
  J[336] -= dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[600] += dqdci; // dwdot[H2O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[651] -= dqdci; // dwdot[OH]/d[CH4]
  J[654] += dqdci; // dwdot[H2O]/d[CH4]
  J[659] += dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT; // dwdot[CH4]/dT

  // reaction 88: CH2 + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 2.46 * exp(2 * tc[0] - (4161.60182620503) * invT);
  dlnkfdT = 2 * invT + (4161.60182620503) * invT2;
  // reverse
  phi_r = (sc[11] * sc[11]);
  Kc = exp(g_RT[9] - 2.000000 * g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[12]) + (2.000000 * h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;      // CH2
  wdot[11] += 2 * q; // CH3
  wdot[12] -= q;     // CH4
  // d()/d[CH2]
  dqdci = +k_f * sc[12];
  J[495] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[497] += 2 * dqdci; // dwdot[CH3]/d[CH2]
  J[498] -= dqdci;     // dwdot[CH4]/d[CH2]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[11];
  J[603] -= dqdci;     // dwdot[CH2]/d[CH3]
  J[605] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[9];
  J[657] -= dqdci;     // dwdot[CH2]/d[CH4]
  J[659] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2871] -= dqdT;     // dwdot[CH2]/dT
  J[2873] += 2 * dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT;     // dwdot[CH4]/dT

  // reaction 89: CH2* + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[12];
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  dlnkfdT = (-286.83349950869) * invT2;
  // reverse
  phi_r = (sc[11] * sc[11]);
  Kc = exp(g_RT[10] - 2.000000 * g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[12]) + (2.000000 * h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q;     // CH2*
  wdot[11] += 2 * q; // CH3
  wdot[12] -= q;     // CH4
  // d()/d[CH2*]
  dqdci = +k_f * sc[12];
  J[550] -= dqdci;     // dwdot[CH2*]/d[CH2*]
  J[551] += 2 * dqdci; // dwdot[CH3]/d[CH2*]
  J[552] -= dqdci;     // dwdot[CH4]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[11];
  J[604] -= dqdci;     // dwdot[CH2*]/d[CH3]
  J[605] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[606] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[10];
  J[658] -= dqdci;     // dwdot[CH2*]/d[CH4]
  J[659] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[660] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2872] -= dqdT;     // dwdot[CH2*]/dT
  J[2873] += 2 * dqdT; // dwdot[CH3]/dT
  J[2874] -= dqdT;     // dwdot[CH4]/dT

  // reaction 91: C2H2 + O <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 4.08 * exp(2 * tc[0] - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[9] * sc[16];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[18]) + (h_RT[9] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[9] += q;  // CH2
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] += dqdci; // dwdot[CH2]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[126] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[16];
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[502] += dqdci; // dwdot[CO]/d[CH2]
  J[504] -= dqdci; // dwdot[C2H2]/d[CH2]
  // d()/d[CO]
  dqdci = -k_r * sc[9];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[873] += dqdci; // dwdot[CH2]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[2];
  J[974] -= dqdci; // dwdot[O]/d[C2H2]
  J[981] += dqdci; // dwdot[CH2]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT

  // reaction 92: C2H2 + OH <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 4.83e-10 * exp(4 * tc[0] - (-1006.43333160944) * invT);
  dlnkfdT = 4 * invT + (-1006.43333160944) * invT2;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = exp(g_RT[3] - g_RT[11] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[18]) + (h_RT[11] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[180] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[597] -= dqdci; // dwdot[OH]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[612] -= dqdci; // dwdot[C2H2]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[975] -= dqdci; // dwdot[OH]/d[C2H2]
  J[983] += dqdci; // dwdot[CH3]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT

  // reaction 93: C2H2 + HCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[18];
  k_f = 10 * exp(2 * tc[0] - (3019.29999482832) * invT);
  dlnkfdT = 2 * invT + (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[16] * sc[19];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[18]) + (h_RT[16] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[18] -= q; // C2H2
  wdot[19] += q; // C2H3
  // d()/d[HCO]
  dqdci = +k_f * sc[18];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[720] -= dqdci; // dwdot[C2H2]/d[HCO]
  J[721] += dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[19];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[882] -= dqdci; // dwdot[C2H2]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[13];
  J[985] -= dqdci; // dwdot[HCO]/d[C2H2]
  J[988] += dqdci; // dwdot[CO]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] += dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[16];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1044] -= dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT

  // reaction 94: C2H2 + CH3 <=> aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[18];
  k_f = 2.68e+47 * exp(-12.82 * tc[0] - (17979.9314692026) * invT);
  dlnkfdT = -12.82 * invT + (17979.9314692026) * invT2;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[11] + g_RT[18] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[18]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[18] -= q; // C2H2
  wdot[24] += q; // aC3H5
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[612] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H2]
  dqdci = +k_f * sc[11];
  J[983] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[990] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[996] += dqdci; // dwdot[aC3H5]/d[C2H2]
  // d()/d[aC3H5]
  dqdci = -k_r;
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1314] -= dqdci; // dwdot[C2H2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2880] -= dqdT; // dwdot[C2H2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 96: C2H3 + H <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[18];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[5] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[19];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[72] += dqdci; // dwdot[C2H2]/d[H]
  J[73] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[18];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[288] += dqdci; // dwdot[C2H2]/d[H2]
  J[289] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[973] -= dqdci; // dwdot[H]/d[C2H2]
  J[977] += dqdci; // dwdot[H2]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[1];
  J[1027] -= dqdci; // dwdot[H]/d[C2H3]
  J[1031] += dqdci; // dwdot[H2]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 97: C2H3 + O <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[19]) + (h_RT[11] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[19] -= q; // C2H3
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[127] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] -= dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[2];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1037] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 98: C2H3 + OH <=> C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 30110000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[18];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[6] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[OH]
  dqdci = +k_f * sc[19];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[180] += dqdci; // dwdot[C2H2]/d[OH]
  J[181] -= dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[18];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[342] += dqdci; // dwdot[C2H2]/d[H2O]
  J[343] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H2]
  dqdci = -k_r * sc[6];
  J[975] -= dqdci; // dwdot[OH]/d[C2H2]
  J[978] += dqdci; // dwdot[H2O]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[3];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 99: C2H3 + O2 <=> C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 1.34 * exp(1.61 * tc[0] - (-192.93326966953) * invT);
  dlnkfdT = 1.61 * invT + (-192.93326966953) * invT2;
  // reverse
  phi_r = sc[4] * sc[18];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[4] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[HO2]
  dqdci = -k_r * sc[18];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[234] += dqdci; // dwdot[C2H2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[450] += dqdci; // dwdot[C2H2]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[4];
  J[976] += dqdci; // dwdot[HO2]/d[C2H2]
  J[980] -= dqdci; // dwdot[O2]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 100: C2H3 + O2 <=> CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 300000 * exp(0.29 * tc[0] - (5.53538332385192) * invT);
  dlnkfdT = 0.29 * invT + (5.53538332385192) * invT2;
  // reverse
  phi_r = sc[2] * sc[23];
  Kc = exp(-g_RT[2] + g_RT[8] + g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[2] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // O
  wdot[8] -= q;  // O2
  wdot[19] -= q; // C2H3
  wdot[23] += q; // CH2CHO
  // d()/d[O]
  dqdci = -k_r * sc[23];
  J[110] += dqdci; // dwdot[O]/d[O]
  J[116] -= dqdci; // dwdot[O2]/d[O]
  J[127] -= dqdci; // dwdot[C2H3]/d[O]
  J[131] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[434] += dqdci; // dwdot[O]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  J[455] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1028] += dqdci; // dwdot[O]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1049] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[2];
  J[1244] += dqdci; // dwdot[O]/d[CH2CHO]
  J[1250] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1261] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1265] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2864] += dqdT; // dwdot[O]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2885] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 101: C2H3 + O2 <=> CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 46000000000 * exp(-1.39 * tc[0] - (508.248832462767) * invT);
  dlnkfdT = -1.39 * invT + (508.248832462767) * invT2;
  // reverse
  phi_r = sc[13] * sc[14];
  Kc = exp(g_RT[8] - g_RT[13] - g_RT[14] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[19]) + (h_RT[13] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // O2
  wdot[13] += q; // HCO
  wdot[14] += q; // CH2O
  wdot[19] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[445] += dqdci; // dwdot[HCO]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[451] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[14];
  J[710] -= dqdci; // dwdot[O2]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[716] += dqdci; // dwdot[CH2O]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CH2O]
  dqdci = -k_r * sc[13];
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[769] += dqdci; // dwdot[HCO]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[775] -= dqdci; // dwdot[C2H3]/d[CH2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1039] += dqdci; // dwdot[HCO]/d[C2H3]
  J[1040] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 102: C2H3 + HO2 <=> CH2CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[19];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[23];
  Kc = exp(-g_RT[3] + g_RT[4] + g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[19]) + (h_RT[3] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[19] -= q; // C2H3
  wdot[23] += q; // CH2CHO
  // d()/d[OH]
  dqdci = -k_r * sc[23];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[181] -= dqdci; // dwdot[C2H3]/d[OH]
  J[185] += dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  J[239] += dqdci; // dwdot[CH2CHO]/d[HO2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[4];
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1030] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1049] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[3];
  J[1245] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1246] -= dqdci; // dwdot[HO2]/d[CH2CHO]
  J[1261] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1265] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2885] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 103: C2H3 + H2O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[19];
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  dlnkfdT = (-299.917132819613) * invT2;
  // reverse
  phi_r = sc[4] * sc[20];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[19]) + (h_RT[4] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // d()/d[HO2]
  dqdci = -k_r * sc[20];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[235] -= dqdci; // dwdot[C2H3]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[397] -= dqdci; // dwdot[C2H3]/d[H2O2]
  J[398] += dqdci; // dwdot[C2H4]/d[H2O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[7];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1033] -= dqdci; // dwdot[H2O2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[4];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1087] -= dqdci; // dwdot[H2O2]/d[C2H4]
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 104: C2H3 + HCO <=> C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 90330000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[20];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[16] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[19] -= q; // C2H3
  wdot[20] += q; // C2H4
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[722] += dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[20];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] -= dqdci; // dwdot[C2H3]/d[CO]
  J[884] += dqdci; // dwdot[C2H4]/d[CO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[16];
  J[1093] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[1096] += dqdci; // dwdot[CO]/d[C2H4]
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT

  // reaction 105: C2H3 + HCO <=> C2H3CHO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 18000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[13] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[19] -= q; // C2H3
  wdot[27] += q; // C2H3CHO
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[721] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[729] += dqdci; // dwdot[C2H3CHO]/d[HCO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1039] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] += dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = -k_r;
  J[1471] -= dqdci; // dwdot[HCO]/d[C2H3CHO]
  J[1477] -= dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 106: C2H3 + CH3 <=> C2H2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 392000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[18];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[12] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[18] += q; // C2H2
  wdot[19] -= q; // C2H3
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[612] += dqdci; // dwdot[C2H2]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[18];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[666] += dqdci; // dwdot[C2H2]/d[CH4]
  J[667] -= dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[C2H2]
  dqdci = -k_r * sc[12];
  J[983] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[984] += dqdci; // dwdot[CH4]/d[C2H2]
  J[990] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[991] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1038] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1044] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2880] += dqdT; // dwdot[C2H2]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT

  // reaction 108: C2H3 + CH3 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 1.5e+18 * exp(-2.83 * tc[0] - (9368.88788395227) * invT);
  dlnkfdT = -2.83 * invT + (9368.88788395227) * invT2;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[11] + g_RT[19] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[11] -= q; // CH3
  wdot[19] -= q; // C2H3
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[65] -= dqdci; // dwdot[CH3]/d[H]
  J[73] -= dqdci; // dwdot[C2H3]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[595] += dqdci; // dwdot[H]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[1027] += dqdci; // dwdot[H]/d[C2H3]
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1050] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1315] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 109: 2 C2H3 <=> C2H2 + C2H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 960000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[18] * sc[20];
  Kc = exp(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[19]) + (h_RT[18] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[18] += q;     // C2H2
  wdot[19] -= 2 * q; // C2H3
  wdot[20] += q;     // C2H4
  // d()/d[C2H2]
  dqdci = -k_r * sc[20];
  J[990] += dqdci;      // dwdot[C2H2]/d[C2H2]
  J[991] += -2 * dqdci; // dwdot[C2H3]/d[C2H2]
  J[992] += dqdci;      // dwdot[C2H4]/d[C2H2]
  // d()/d[C2H3]
  dqdci = +k_f * 2.000000 * sc[19];
  J[1044] += dqdci;      // dwdot[C2H2]/d[C2H3]
  J[1045] += -2 * dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] += dqdci;      // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[18];
  J[1098] += dqdci;      // dwdot[C2H2]/d[C2H4]
  J[1099] += -2 * dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] += dqdci;      // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2880] += dqdT;      // dwdot[C2H2]/dT
  J[2881] += -2 * dqdT; // dwdot[C2H3]/dT
  J[2882] += dqdT;      // dwdot[C2H4]/dT

  // reaction 110: CH2CHO <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23];
  k_f = 7.8e+41 * exp(-9.147 * tc[0] - (23600.8616262414) * invT);
  dlnkfdT = -9.147 * invT + (23600.8616262414) * invT2;
  // reverse
  phi_r = sc[11] * sc[16];
  Kc = refC * exp(-g_RT[11] - g_RT[16] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[23]) + (h_RT[11] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[16] += q; // CO
  wdot[23] -= q; // CH2CHO
  // d()/d[CH3]
  dqdci = -k_r * sc[16];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[610] += dqdci; // dwdot[CO]/d[CH3]
  J[617] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[CO]
  dqdci = -k_r * sc[11];
  J[875] += dqdci; // dwdot[CH3]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[887] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH2CHO]
  dqdci = +k_f;
  J[1253] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1258] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 111: CH2CHO + H <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[23];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[13];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[13] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[23]) + (h_RT[11] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[13] += q; // HCO
  wdot[23] -= q; // CH2CHO
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[77] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[13];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[617] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[11];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[713] += dqdci; // dwdot[CH3]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[725] -= dqdci; // dwdot[CH2CHO]/d[HCO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[1];
  J[1243] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1253] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1255] += dqdci; // dwdot[HCO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 112: CH2CHO + O2 <=> CH2O + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[23];
  k_f = 18000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[16];
  Kc = refC * exp(-g_RT[3] + g_RT[8] - g_RT[14] - g_RT[16] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[8] + h_RT[23]) + (h_RT[3] + h_RT[14] + h_RT[16]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[14] += q; // CH2O
  wdot[16] += q; // CO
  wdot[23] -= q; // CH2CHO
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[16];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[185] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[446] += dqdci; // dwdot[CH2O]/d[O2]
  J[448] += dqdci; // dwdot[CO]/d[O2]
  J[455] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[16];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[764] -= dqdci; // dwdot[O2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[772] += dqdci; // dwdot[CO]/d[CH2O]
  J[779] -= dqdci; // dwdot[CH2CHO]/d[CH2O]
  // d()/d[CO]
  dqdci = -k_r * sc[3] * sc[14];
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[872] -= dqdci; // dwdot[O2]/d[CO]
  J[878] += dqdci; // dwdot[CH2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[887] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[8];
  J[1245] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1250] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1256] += dqdci; // dwdot[CH2O]/d[CH2CHO]
  J[1258] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1265] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2885] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 114: C2H4 + H <=> C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 50.7 * exp(1.9 * tc[0] - (6516.65582217112) * invT);
  dlnkfdT = 1.9 * invT + (6516.65582217112) * invT2;
  // reverse
  phi_r = sc[5] * sc[19];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[5] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[H]
  dqdci = +k_f * sc[20];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[73] += dqdci; // dwdot[C2H3]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[19];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[289] += dqdci; // dwdot[C2H3]/d[H2]
  J[290] -= dqdci; // dwdot[C2H4]/d[H2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[5];
  J[1027] -= dqdci; // dwdot[H]/d[C2H3]
  J[1031] += dqdci; // dwdot[H2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1085] += dqdci; // dwdot[H2]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 115: C2H4 + O <=> C2H3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 15.1 * exp(1.9 * tc[0] - (1882.03033010965) * invT);
  dlnkfdT = 1.9 * invT + (1882.03033010965) * invT2;
  // reverse
  phi_r = sc[3] * sc[19];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[3] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[127] += dqdci; // dwdot[C2H3]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[19];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[182] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1083] += dqdci; // dwdot[OH]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 116: C2H4 + O <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 19.2 * exp(1.83 * tc[0] - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[11] * sc[13];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[13] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[11] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[13] += q; // HCO
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[13];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[607] += dqdci; // dwdot[HCO]/d[CH3]
  J[614] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[11];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[713] += dqdci; // dwdot[CH3]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[722] -= dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1093] += dqdci; // dwdot[HCO]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 117: C2H4 + O <=> CH2 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 0.384 * exp(1.83 * tc[0] - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[9] * sc[14];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[14] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (h_RT[9] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[9] += q;  // CH2
  wdot[14] += q; // CH2O
  wdot[20] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[117] += dqdci; // dwdot[CH2]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[128] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[14];
  J[488] -= dqdci; // dwdot[O]/d[CH2]
  J[495] += dqdci; // dwdot[CH2]/d[CH2]
  J[500] += dqdci; // dwdot[CH2O]/d[CH2]
  J[506] -= dqdci; // dwdot[C2H4]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[9];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[765] += dqdci; // dwdot[CH2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[776] -= dqdci; // dwdot[C2H4]/d[CH2O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[1082] -= dqdci; // dwdot[O]/d[C2H4]
  J[1089] += dqdci; // dwdot[CH2]/d[C2H4]
  J[1094] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2871] += dqdT; // dwdot[CH2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 118: C2H4 + OH <=> C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[20];
  k_f = 3.6 * exp(2 * tc[0] - (1258.0416645118) * invT);
  dlnkfdT = 2 * invT + (1258.0416645118) * invT2;
  // reverse
  phi_r = sc[6] * sc[19];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[20]) + (h_RT[6] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[182] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[19];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[343] += dqdci; // dwdot[C2H3]/d[H2O]
  J[344] -= dqdci; // dwdot[C2H4]/d[H2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[1083] -= dqdci; // dwdot[OH]/d[C2H4]
  J[1086] += dqdci; // dwdot[H2O]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 119: C2H4 + HCO <=> C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 10 * exp(2 * tc[0] - (4025.73332643776) * invT);
  dlnkfdT = 2 * invT + (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[16] * sc[21];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[20] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[16] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[20] -= q; // C2H4
  wdot[21] += q; // C2H5
  // d()/d[HCO]
  dqdci = +k_f * sc[20];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[722] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[723] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[21];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[884] -= dqdci; // dwdot[C2H4]/d[CO]
  J[885] += dqdci; // dwdot[C2H5]/d[CO]
  // d()/d[C2H4]
  dqdci = +k_f * sc[13];
  J[1093] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[1096] += dqdci; // dwdot[CO]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[16];
  J[1147] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[1150] += dqdci; // dwdot[CO]/d[C2H5]
  J[1154] -= dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT

  // reaction 120: C2H4 + CH2 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[20];
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[9] + g_RT[20] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[20]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[9] -= q;  // CH2
  wdot[20] -= q; // C2H4
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[63] -= dqdci; // dwdot[CH2]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[20];
  J[487] += dqdci; // dwdot[H]/d[CH2]
  J[495] -= dqdci; // dwdot[CH2]/d[CH2]
  J[506] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[510] += dqdci; // dwdot[aC3H5]/d[CH2]
  // d()/d[C2H4]
  dqdci = +k_f * sc[9];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1089] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1104] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1305] -= dqdci; // dwdot[CH2]/d[aC3H5]
  J[1316] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2871] -= dqdT; // dwdot[CH2]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 121: C2H4 + CH2* <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[24];
  Kc = exp(-g_RT[1] + g_RT[10] + g_RT[20] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[20]) + (h_RT[1] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[10] -= q; // CH2*
  wdot[20] -= q; // C2H4
  wdot[24] += q; // aC3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[64] -= dqdci; // dwdot[CH2*]/d[H]
  J[74] -= dqdci; // dwdot[C2H4]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[20];
  J[541] += dqdci; // dwdot[H]/d[CH2*]
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[560] -= dqdci; // dwdot[C2H4]/d[CH2*]
  J[564] += dqdci; // dwdot[aC3H5]/d[CH2*]
  // d()/d[C2H4]
  dqdci = +k_f * sc[10];
  J[1081] += dqdci; // dwdot[H]/d[C2H4]
  J[1090] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1104] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[1];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1306] -= dqdci; // dwdot[CH2*]/d[aC3H5]
  J[1316] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 122: C2H4 + CH3 <=> C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[20];
  k_f = 0.227 * exp(2 * tc[0] - (4629.59332540342) * invT);
  dlnkfdT = 2 * invT + (4629.59332540342) * invT2;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[20]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[613] += dqdci; // dwdot[C2H3]/d[CH3]
  J[614] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[19];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[667] += dqdci; // dwdot[C2H3]/d[CH4]
  J[668] -= dqdci; // dwdot[C2H4]/d[CH4]
  // d()/d[C2H3]
  dqdci = -k_r * sc[12];
  J[1037] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1038] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[1091] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[1092] += dqdci; // dwdot[CH4]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 123: nC3H7 <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
  dlnkfdT = (15611.2604302599) * invT2;
  // reverse
  phi_r = sc[11] * sc[20];
  Kc = refC * exp(-g_RT[11] - g_RT[20] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (h_RT[11] + h_RT[20]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[20] += q; // C2H4
  wdot[26] -= q; // nC3H7
  // d()/d[CH3]
  dqdci = -k_r * sc[20];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[11];
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] -= dqdci; // dwdot[nC3H7]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = +k_f;
  J[1415] += dqdci; // dwdot[CH3]/d[nC3H7]
  J[1424] += dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 124: C2H4 + O2 <=> C2H3 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  dlnkfdT = (30595.573280927) * invT2;
  // reverse
  phi_r = sc[4] * sc[19];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[20]) + (h_RT[4] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[19] += q; // C2H3
  wdot[20] -= q; // C2H4
  // d()/d[HO2]
  dqdci = -k_r * sc[19];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[235] += dqdci; // dwdot[C2H3]/d[HO2]
  J[236] -= dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[451] += dqdci; // dwdot[C2H3]/d[O2]
  J[452] -= dqdci; // dwdot[C2H4]/d[O2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[4];
  J[1030] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1034] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[8];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1088] -= dqdci; // dwdot[O2]/d[C2H4]
  J[1099] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT

  // reaction 125: C2H3 + C2H4 <=> C4H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[20];
  k_f = 7.93e+32 * exp(-8.47 * tc[0] - (7155.74098774311) * invT);
  dlnkfdT = -8.47 * invT + (7155.74098774311) * invT2;
  // reverse
  phi_r = sc[28];
  Kc = refCinv * exp(g_RT[19] + g_RT[20] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[20]) + (h_RT[28]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[19] -= q; // C2H3
  wdot[20] -= q; // C2H4
  wdot[28] += q; // C4H7
  // d()/d[C2H3]
  dqdci = +k_f * sc[20];
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1046] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1054] += dqdci; // dwdot[C4H7]/d[C2H3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[19];
  J[1099] -= dqdci; // dwdot[C2H3]/d[C2H4]
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1108] += dqdci; // dwdot[C4H7]/d[C2H4]
  // d()/d[C4H7]
  dqdci = -k_r;
  J[1531] -= dqdci; // dwdot[C2H3]/d[C4H7]
  J[1532] -= dqdci; // dwdot[C2H4]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT

  // reaction 127: C2H5 + H <=> C2H4 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 2000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[20];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[5] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[H]
  dqdci = +k_f * sc[21];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[75] -= dqdci; // dwdot[C2H5]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[20];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[290] += dqdci; // dwdot[C2H4]/d[H2]
  J[291] -= dqdci; // dwdot[C2H5]/d[H2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[5];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1085] += dqdci; // dwdot[H2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[1];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1139] += dqdci; // dwdot[H2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 128: C2H5 + O <=> CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[21];
  k_f = 16040000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[11] * sc[14];
  Kc = exp(g_RT[2] - g_RT[11] - g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[21]) + (h_RT[11] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[11] += q; // CH3
  wdot[14] += q; // CH2O
  wdot[21] -= q; // C2H5
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[119] += dqdci; // dwdot[CH3]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[129] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[CH3]
  dqdci = -k_r * sc[14];
  J[596] -= dqdci; // dwdot[O]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[11];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[767] += dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[2];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 129: C2H5 + O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 20000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[20];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[4] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[HO2]
  dqdci = -k_r * sc[20];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[452] += dqdci; // dwdot[C2H4]/d[O2]
  J[453] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[4];
  J[1084] += dqdci; // dwdot[HO2]/d[C2H4]
  J[1088] -= dqdci; // dwdot[O2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[1138] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1142] -= dqdci; // dwdot[O2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 130: C2H5 + HO2 <=> C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[22];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[21]) + (h_RT[8] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[238] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[22];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[453] -= dqdci; // dwdot[C2H5]/d[O2]
  J[454] += dqdci; // dwdot[C2H6]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1142] += dqdci; // dwdot[O2]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = -k_r * sc[8];
  J[1192] -= dqdci; // dwdot[HO2]/d[C2H6]
  J[1196] += dqdci; // dwdot[O2]/d[C2H6]
  J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] += dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 131: C2H5 + HO2 <=> C2H4 + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[7] * sc[20];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[21]) + (h_RT[7] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[20] += q; // C2H4
  wdot[21] -= q; // C2H5
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[236] += dqdci; // dwdot[C2H4]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[20];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[398] += dqdci; // dwdot[C2H4]/d[H2O2]
  J[399] -= dqdci; // dwdot[C2H5]/d[H2O2]
  // d()/d[C2H4]
  dqdci = -k_r * sc[7];
  J[1084] -= dqdci; // dwdot[HO2]/d[C2H4]
  J[1087] += dqdci; // dwdot[H2O2]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1141] += dqdci; // dwdot[H2O2]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 132: C2H5 + HO2 <=> CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[11] * sc[14];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[21]) + (h_RT[3] + h_RT[11] + h_RT[14]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[11] += q; // CH3
  wdot[14] += q; // CH2O
  wdot[21] -= q; // C2H5
  // d()/d[OH]
  dqdci = -k_r * sc[11] * sc[14];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[173] += dqdci; // dwdot[CH3]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[183] -= dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[21];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[227] += dqdci; // dwdot[CH3]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[CH3]
  dqdci = -k_r * sc[3] * sc[14];
  J[597] += dqdci; // dwdot[OH]/d[CH3]
  J[598] -= dqdci; // dwdot[HO2]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[608] += dqdci; // dwdot[CH2O]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[11];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[767] += dqdci; // dwdot[CH3]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT

  // reaction 133: C2H5 + H2O2 <=> C2H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[21];
  k_f = 8700 * exp(-(490.133032493797) * invT);
  dlnkfdT = (490.133032493797) * invT2;
  // reverse
  phi_r = sc[4] * sc[22];
  Kc = exp(-g_RT[4] + g_RT[7] + g_RT[21] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[21]) + (h_RT[4] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[7] -= q;  // H2O2
  wdot[21] -= q; // C2H5
  wdot[22] += q; // C2H6
  // d()/d[HO2]
  dqdci = -k_r * sc[22];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[223] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[237] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[238] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[21];
  J[382] += dqdci; // dwdot[HO2]/d[H2O2]
  J[385] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[399] -= dqdci; // dwdot[C2H5]/d[H2O2]
  J[400] += dqdci; // dwdot[C2H6]/d[H2O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[7];
  J[1138] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1141] -= dqdci; // dwdot[H2O2]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = -k_r * sc[4];
  J[1192] += dqdci; // dwdot[HO2]/d[C2H6]
  J[1195] -= dqdci; // dwdot[H2O2]/d[C2H6]
  J[1209] -= dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] += dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2869] -= dqdT; // dwdot[H2O2]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2884] += dqdT; // dwdot[C2H6]/dT

  // reaction 135: C2H3 + C2H5 <=> CH3 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[21];
  k_f = 3.9e+26 * exp(-5.22 * tc[0] - (9937.0194996458) * invT);
  dlnkfdT = -5.22 * invT + (9937.0194996458) * invT2;
  // reverse
  phi_r = sc[11] * sc[24];
  Kc = exp(-g_RT[11] + g_RT[19] + g_RT[21] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[11] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // CH3
  wdot[19] -= q; // C2H3
  wdot[21] -= q; // C2H5
  wdot[24] += q; // aC3H5
  // d()/d[CH3]
  dqdci = -k_r * sc[24];
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[613] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[615] -= dqdci; // dwdot[C2H5]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[21];
  J[1037] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1045] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1047] -= dqdci; // dwdot[C2H5]/d[C2H3]
  J[1050] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[C2H5]
  dqdci = +k_f * sc[19];
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1153] -= dqdci; // dwdot[C2H3]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1158] += dqdci; // dwdot[aC3H5]/d[C2H5]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[11];
  J[1307] += dqdci; // dwdot[CH3]/d[aC3H5]
  J[1315] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1317] -= dqdci; // dwdot[C2H5]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2881] -= dqdT; // dwdot[C2H3]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT

  // reaction 136: C2H6 + H <=> C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 115 * exp(1.9 * tc[0] - (3789.22149350954) * invT);
  dlnkfdT = 1.9 * invT + (3789.22149350954) * invT2;
  // reverse
  phi_r = sc[5] * sc[21];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[5] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[22];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[76] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[21];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[291] += dqdci; // dwdot[C2H5]/d[H2]
  J[292] -= dqdci; // dwdot[C2H6]/d[H2]
  // d()/d[C2H5]
  dqdci = -k_r * sc[5];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1139] += dqdci; // dwdot[H2]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[1];
  J[1189] -= dqdci; // dwdot[H]/d[C2H6]
  J[1193] += dqdci; // dwdot[H2]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 137: C2H6 + O <=> C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[22];
  k_f = 89.8 * exp(1.92 * tc[0] - (2863.30282842885) * invT);
  dlnkfdT = 1.92 * invT + (2863.30282842885) * invT2;
  // reverse
  phi_r = sc[3] * sc[21];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[22]) + (h_RT[3] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[130] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[21];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[184] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H5]
  dqdci = -k_r * sc[3];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[2];
  J[1190] -= dqdci; // dwdot[O]/d[C2H6]
  J[1191] += dqdci; // dwdot[OH]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 138: C2H6 + OH <=> C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 3.54 * exp(2.12 * tc[0] - (437.798499250106) * invT);
  dlnkfdT = 2.12 * invT + (437.798499250106) * invT2;
  // reverse
  phi_r = sc[6] * sc[21];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[22]) + (h_RT[6] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[184] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[345] += dqdci; // dwdot[C2H5]/d[H2O]
  J[346] -= dqdci; // dwdot[C2H6]/d[H2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[6];
  J[1137] -= dqdci; // dwdot[OH]/d[C2H5]
  J[1140] += dqdci; // dwdot[H2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[1191] -= dqdci; // dwdot[OH]/d[C2H6]
  J[1194] += dqdci; // dwdot[H2O]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 139: C2H6 + CH2* <=> C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  dlnkfdT = (-276.769166192596) * invT2;
  // reverse
  phi_r = sc[11] * sc[21];
  Kc = exp(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[22]) + (h_RT[11] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // CH2*
  wdot[11] += q; // CH3
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[CH2*]
  dqdci = +k_f * sc[22];
  J[550] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[551] += dqdci; // dwdot[CH3]/d[CH2*]
  J[561] += dqdci; // dwdot[C2H5]/d[CH2*]
  J[562] -= dqdci; // dwdot[C2H6]/d[CH2*]
  // d()/d[CH3]
  dqdci = -k_r * sc[21];
  J[604] -= dqdci; // dwdot[CH2*]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[616] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[11];
  J[1144] -= dqdci; // dwdot[CH2*]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[10];
  J[1198] -= dqdci; // dwdot[CH2*]/d[C2H6]
  J[1199] += dqdci; // dwdot[CH3]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2872] -= dqdT; // dwdot[CH2*]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 140: C2H6 + CH3 <=> C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[22];
  k_f = 6.14 * exp(1.74 * tc[0] - (5258.61415765932) * invT);
  dlnkfdT = 1.74 * invT + (5258.61415765932) * invT2;
  // reverse
  phi_r = sc[12] * sc[21];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[21] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[12] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[21] += q; // C2H5
  wdot[22] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[22];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[616] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[21];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[669] += dqdci; // dwdot[C2H5]/d[CH4]
  J[670] -= dqdci; // dwdot[C2H6]/d[CH4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[12];
  J[1145] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[1146] += dqdci; // dwdot[CH4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1156] -= dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/d[C2H6]
  dqdci = +k_f * sc[11];
  J[1199] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[1200] += dqdci; // dwdot[CH4]/d[C2H6]
  J[1209] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1210] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2884] -= dqdT; // dwdot[C2H6]/dT

  // reaction 142: O + aC3H5 <=> C2H3CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[27];
  Kc = exp(-g_RT[1] + g_RT[2] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[24]) + (h_RT[1] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // H
  wdot[2] -= q;  // O
  wdot[24] -= q; // aC3H5
  wdot[27] += q; // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * sc[27];
  J[55] += dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci; // dwdot[O]/d[H]
  J[78] -= dqdci; // dwdot[aC3H5]/d[H]
  J[81] += dqdci; // dwdot[C2H3CHO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[24];
  J[109] += dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[132] -= dqdci; // dwdot[aC3H5]/d[O]
  J[135] += dqdci; // dwdot[C2H3CHO]/d[O]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[2];
  J[1297] += dqdci; // dwdot[H]/d[aC3H5]
  J[1298] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci; // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1];
  J[1459] += dqdci; // dwdot[H]/d[C2H3CHO]
  J[1460] -= dqdci; // dwdot[O]/d[C2H3CHO]
  J[1482] -= dqdci; // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += dqdT; // dwdot[H]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 143: OH + aC3H5 <=> C2H3CHO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[24];
  k_f = 4.2e+26 * exp(-5.16 * tc[0] - (15159.905274033) * invT);
  dlnkfdT = -5.16 * invT + (15159.905274033) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[27];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[3] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[3] + h_RT[24]) + (2.000000 * h_RT[1] + h_RT[27]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[3] -= q;     // OH
  wdot[24] -= q;    // aC3H5
  wdot[27] += q;    // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[27];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[57] -= dqdci;     // dwdot[OH]/d[H]
  J[78] -= dqdci;     // dwdot[aC3H5]/d[H]
  J[81] += dqdci;     // dwdot[C2H3CHO]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[163] += 2 * dqdci; // dwdot[H]/d[OH]
  J[165] -= dqdci;     // dwdot[OH]/d[OH]
  J[186] -= dqdci;     // dwdot[aC3H5]/d[OH]
  J[189] += dqdci;     // dwdot[C2H3CHO]/d[OH]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[3];
  J[1297] += 2 * dqdci; // dwdot[H]/d[aC3H5]
  J[1299] -= dqdci;     // dwdot[OH]/d[aC3H5]
  J[1320] -= dqdci;     // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci;     // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1] * sc[1];
  J[1459] += 2 * dqdci; // dwdot[H]/d[C2H3CHO]
  J[1461] -= dqdci;     // dwdot[OH]/d[C2H3CHO]
  J[1482] -= dqdci;     // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci;     // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2865] -= dqdT;     // dwdot[OH]/dT
  J[2886] -= dqdT;     // dwdot[aC3H5]/dT
  J[2889] += dqdT;     // dwdot[C2H3CHO]/dT

  // reaction 144: O2 + aC3H5 <=> C2H3CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[24];
  k_f = 18200000 * exp(-0.41 * tc[0] - (11503.0297636301) * invT);
  dlnkfdT = -0.41 * invT + (11503.0297636301) * invT2;
  // reverse
  phi_r = sc[3] * sc[27];
  Kc = exp(-g_RT[3] + g_RT[8] + g_RT[24] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[24]) + (h_RT[3] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[24] -= q; // aC3H5
  wdot[27] += q; // C2H3CHO
  // d()/d[OH]
  dqdci = -k_r * sc[27];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[170] -= dqdci; // dwdot[O2]/d[OH]
  J[186] -= dqdci; // dwdot[aC3H5]/d[OH]
  J[189] += dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[435] += dqdci; // dwdot[OH]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[456] -= dqdci; // dwdot[aC3H5]/d[O2]
  J[459] += dqdci; // dwdot[C2H3CHO]/d[O2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[8];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1304] -= dqdci; // dwdot[O2]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1323] += dqdci; // dwdot[C2H3CHO]/d[aC3H5]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[3];
  J[1461] += dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1466] -= dqdci; // dwdot[O2]/d[C2H3CHO]
  J[1482] -= dqdci; // dwdot[aC3H5]/d[C2H3CHO]
  J[1485] += dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2889] += dqdT; // dwdot[C2H3CHO]/dT

  // reaction 145: HO2 + aC3H5 <=> C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 2660000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[25];
  Kc = exp(g_RT[4] - g_RT[8] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[24]) + (h_RT[8] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[24];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[240] -= dqdci; // dwdot[aC3H5]/d[HO2]
  J[241] += dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[O2]
  dqdci = -k_r * sc[25];
  J[436] -= dqdci; // dwdot[HO2]/d[O2]
  J[440] += dqdci; // dwdot[O2]/d[O2]
  J[456] -= dqdci; // dwdot[aC3H5]/d[O2]
  J[457] += dqdci; // dwdot[C3H6]/d[O2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[4];
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1304] += dqdci; // dwdot[O2]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] += dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[8];
  J[1354] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[1358] += dqdci; // dwdot[O2]/d[C3H6]
  J[1374] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 146: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 6600000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[19];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[19] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[24]) + (h_RT[3] + h_RT[14] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[19] += q; // C2H3
  wdot[24] -= q; // aC3H5
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[19];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[186] -= dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[24];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[235] += dqdci; // dwdot[C2H3]/d[HO2]
  J[240] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[19];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[775] += dqdci; // dwdot[C2H3]/d[CH2O]
  J[780] -= dqdci; // dwdot[aC3H5]/d[CH2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3] * sc[14];
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1030] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1040] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1050] -= dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[4];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1310] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1315] += dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 147: HCO + aC3H5 <=> C3H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[24];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[25];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[24] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[16] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[24] -= q; // aC3H5
  wdot[25] += q; // C3H6
  // d()/d[HCO]
  dqdci = +k_f * sc[24];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[726] -= dqdci; // dwdot[aC3H5]/d[HCO]
  J[727] += dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[25];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[888] -= dqdci; // dwdot[aC3H5]/d[CO]
  J[889] += dqdci; // dwdot[C3H6]/d[CO]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[13];
  J[1309] -= dqdci; // dwdot[HCO]/d[aC3H5]
  J[1312] += dqdci; // dwdot[CO]/d[aC3H5]
  J[1320] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] += dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[16];
  J[1363] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[1366] += dqdci; // dwdot[CO]/d[C3H6]
  J[1374] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2886] -= dqdT; // dwdot[aC3H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT

  // reaction 150: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[11] * sc[20];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[20] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[11] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[20] += q; // C2H4
  wdot[25] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[25];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[79] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[20];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[614] += dqdci; // dwdot[C2H4]/d[CH3]
  J[619] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[11];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1091] += dqdci; // dwdot[CH3]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1105] -= dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1361] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1370] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 151: C3H6 + H <=> H2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 0.173 * exp(2.5 * tc[0] - (1253.00949785375) * invT);
  dlnkfdT = 2.5 * invT + (1253.00949785375) * invT2;
  // reverse
  phi_r = sc[5] * sc[24];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[25]) + (h_RT[5] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[25];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  J[79] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[24];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[294] += dqdci; // dwdot[aC3H5]/d[H2]
  J[295] -= dqdci; // dwdot[C3H6]/d[H2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[5];
  J[1297] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1301] += dqdci; // dwdot[H2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1355] += dqdci; // dwdot[H2]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 152: C3H6 + O <=> C2H3CHO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 40 * exp(1.65 * tc[0] - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = (sc[1] * sc[1]) * sc[27];
  Kc = refC * exp(-2.000000 * g_RT[1] + g_RT[2] + g_RT[25] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[2] + h_RT[25]) + (2.000000 * h_RT[1] + h_RT[27]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += 2 * q; // H
  wdot[2] -= q;     // O
  wdot[25] -= q;    // C3H6
  wdot[27] += q;    // C2H3CHO
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[1] * sc[27];
  J[55] += 2 * dqdci; // dwdot[H]/d[H]
  J[56] -= dqdci;     // dwdot[O]/d[H]
  J[79] -= dqdci;     // dwdot[C3H6]/d[H]
  J[81] += dqdci;     // dwdot[C2H3CHO]/d[H]
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[109] += 2 * dqdci; // dwdot[H]/d[O]
  J[110] -= dqdci;     // dwdot[O]/d[O]
  J[133] -= dqdci;     // dwdot[C3H6]/d[O]
  J[135] += dqdci;     // dwdot[C2H3CHO]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1351] += 2 * dqdci; // dwdot[H]/d[C3H6]
  J[1352] -= dqdci;     // dwdot[O]/d[C3H6]
  J[1375] -= dqdci;     // dwdot[C3H6]/d[C3H6]
  J[1377] += dqdci;     // dwdot[C2H3CHO]/d[C3H6]
  // d()/d[C2H3CHO]
  dqdci = -k_r * sc[1] * sc[1];
  J[1459] += 2 * dqdci; // dwdot[H]/d[C2H3CHO]
  J[1460] -= dqdci;     // dwdot[O]/d[C2H3CHO]
  J[1483] -= dqdci;     // dwdot[C3H6]/d[C2H3CHO]
  J[1485] += dqdci;     // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] += 2 * dqdT; // dwdot[H]/dT
  J[2864] -= dqdT;     // dwdot[O]/dT
  J[2887] -= dqdT;     // dwdot[C3H6]/dT
  J[2889] += dqdT;     // dwdot[C2H3CHO]/dT

  // reaction 153: C3H6 + O <=> C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 35 * exp(1.65 * tc[0] - (-489.126599162188) * invT);
  dlnkfdT = 1.65 * invT + (-489.126599162188) * invT2;
  // reverse
  phi_r = sc[13] * sc[21];
  Kc = exp(g_RT[2] - g_RT[13] - g_RT[21] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[25]) + (h_RT[13] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[13] += q; // HCO
  wdot[21] += q; // C2H5
  wdot[25] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[133] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[21];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[723] += dqdci; // dwdot[C2H5]/d[HCO]
  J[727] -= dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[13];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1147] += dqdci; // dwdot[HCO]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1159] -= dqdci; // dwdot[C3H6]/d[C2H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1352] -= dqdci; // dwdot[O]/d[C3H6]
  J[1363] += dqdci; // dwdot[HCO]/d[C3H6]
  J[1371] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 154: C3H6 + O <=> OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 180000 * exp(0.7 * tc[0] - (2958.91399493175) * invT);
  dlnkfdT = 0.7 * invT + (2958.91399493175) * invT2;
  // reverse
  phi_r = sc[3] * sc[24];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[25]) + (h_RT[3] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[25];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[132] += dqdci; // dwdot[aC3H5]/d[O]
  J[133] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[24];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[187] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[3];
  J[1298] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[1352] -= dqdci; // dwdot[O]/d[C3H6]
  J[1353] += dqdci; // dwdot[OH]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 155: C3H6 + OH <=> H2O + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[25];
  k_f = 3.1 * exp(2 * tc[0] - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // reverse
  phi_r = sc[6] * sc[24];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[25]) + (h_RT[6] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[25];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[187] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[24];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[348] += dqdci; // dwdot[aC3H5]/d[H2O]
  J[349] -= dqdci; // dwdot[C3H6]/d[H2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[6];
  J[1299] -= dqdci; // dwdot[OH]/d[aC3H5]
  J[1302] += dqdci; // dwdot[H2O]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1353] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1356] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 156: C3H6 + HO2 <=> H2O2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[25];
  k_f = 0.0096 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[24];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[25]) + (h_RT[7] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[25];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[240] += dqdci; // dwdot[aC3H5]/d[HO2]
  J[241] -= dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[24];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[402] += dqdci; // dwdot[aC3H5]/d[H2O2]
  J[403] -= dqdci; // dwdot[C3H6]/d[H2O2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[7];
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1303] += dqdci; // dwdot[H2O2]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[4];
  J[1354] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[1357] += dqdci; // dwdot[H2O2]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 157: C3H6 + CH3 <=> CH4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 2.2e-06 * exp(3.5 * tc[0] - (2855.75457844178) * invT);
  dlnkfdT = 3.5 * invT + (2855.75457844178) * invT2;
  // reverse
  phi_r = sc[12] * sc[24];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[24] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[25]) + (h_RT[12] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[24] += q; // aC3H5
  wdot[25] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[25];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  J[619] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[24];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[672] += dqdci; // dwdot[aC3H5]/d[CH4]
  J[673] -= dqdci; // dwdot[C3H6]/d[CH4]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[12];
  J[1307] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1308] += dqdci; // dwdot[CH4]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1321] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  // d()/d[C3H6]
  dqdci = +k_f * sc[11];
  J[1361] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1362] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1374] += dqdci; // dwdot[aC3H5]/d[C3H6]
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT

  // reaction 158: C2H3CHO + H <=> C2H4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 108000 * exp(0.454 * tc[0] - (2928.72099498347) * invT);
  dlnkfdT = 0.454 * invT + (2928.72099498347) * invT2;
  // reverse
  phi_r = sc[13] * sc[20];
  Kc = exp(g_RT[1] - g_RT[13] - g_RT[20] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[27]) + (h_RT[13] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[13] += q; // HCO
  wdot[20] += q; // C2H4
  wdot[27] -= q; // C2H3CHO
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[67] += dqdci; // dwdot[HCO]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[81] -= dqdci; // dwdot[C2H3CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[20];
  J[703] -= dqdci; // dwdot[H]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[722] += dqdci; // dwdot[C2H4]/d[HCO]
  J[729] -= dqdci; // dwdot[C2H3CHO]/d[HCO]
  // d()/d[C2H4]
  dqdci = -k_r * sc[13];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1093] += dqdci; // dwdot[HCO]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1107] -= dqdci; // dwdot[C2H3CHO]/d[C2H4]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[1];
  J[1459] -= dqdci; // dwdot[H]/d[C2H3CHO]
  J[1471] += dqdci; // dwdot[HCO]/d[C2H3CHO]
  J[1478] += dqdci; // dwdot[C2H4]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 159: C2H3CHO + O <=> C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 30000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[3] * sc[16] * sc[19];
  Kc = refC * exp(g_RT[2] - g_RT[3] - g_RT[16] - g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[2] + h_RT[27]) + (h_RT[3] + h_RT[16] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[16] += q; // CO
  wdot[19] += q; // C2H3
  wdot[27] -= q; // C2H3CHO
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[124] += dqdci; // dwdot[CO]/d[O]
  J[127] += dqdci; // dwdot[C2H3]/d[O]
  J[135] -= dqdci; // dwdot[C2H3CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16] * sc[19];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[189] -= dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[CO]
  dqdci = -k_r * sc[3] * sc[19];
  J[866] -= dqdci; // dwdot[O]/d[CO]
  J[867] += dqdci; // dwdot[OH]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  J[891] -= dqdci; // dwdot[C2H3CHO]/d[CO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[3] * sc[16];
  J[1028] -= dqdci; // dwdot[O]/d[C2H3]
  J[1029] += dqdci; // dwdot[OH]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] -= dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[2];
  J[1460] -= dqdci; // dwdot[O]/d[C2H3CHO]
  J[1461] += dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1474] += dqdci; // dwdot[CO]/d[C2H3CHO]
  J[1477] += dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 160: C2H3CHO + OH <=> C2H3 + CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[6] * sc[16] * sc[19];
  Kc = refC * exp(g_RT[3] - g_RT[6] - g_RT[16] - g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[3] + h_RT[27]) + (h_RT[6] + h_RT[16] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[16] += q; // CO
  wdot[19] += q; // C2H3
  wdot[27] -= q; // C2H3CHO
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[178] += dqdci; // dwdot[CO]/d[OH]
  J[181] += dqdci; // dwdot[C2H3]/d[OH]
  J[189] -= dqdci; // dwdot[C2H3CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[16] * sc[19];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[340] += dqdci; // dwdot[CO]/d[H2O]
  J[343] += dqdci; // dwdot[C2H3]/d[H2O]
  J[351] -= dqdci; // dwdot[C2H3CHO]/d[H2O]
  // d()/d[CO]
  dqdci = -k_r * sc[6] * sc[19];
  J[867] -= dqdci; // dwdot[OH]/d[CO]
  J[870] += dqdci; // dwdot[H2O]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[883] += dqdci; // dwdot[C2H3]/d[CO]
  J[891] -= dqdci; // dwdot[C2H3CHO]/d[CO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6] * sc[16];
  J[1029] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1032] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1042] += dqdci; // dwdot[CO]/d[C2H3]
  J[1045] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1053] -= dqdci; // dwdot[C2H3CHO]/d[C2H3]
  // d()/d[C2H3CHO]
  dqdci = +k_f * sc[3];
  J[1461] -= dqdci; // dwdot[OH]/d[C2H3CHO]
  J[1464] += dqdci; // dwdot[H2O]/d[C2H3CHO]
  J[1474] += dqdci; // dwdot[CO]/d[C2H3CHO]
  J[1477] += dqdci; // dwdot[C2H3]/d[C2H3CHO]
  J[1485] -= dqdci; // dwdot[C2H3CHO]/d[C2H3CHO]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2889] -= dqdT; // dwdot[C2H3CHO]/dT

  // reaction 161: H + nC3H7 <=> C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[26];
  k_f = 3.7e+18 * exp(-2.92 * tc[0] - (6292.72440588802) * invT);
  dlnkfdT = -2.92 * invT + (6292.72440588802) * invT2;
  // reverse
  phi_r = sc[11] * sc[21];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[26]) + (h_RT[11] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[80] -= dqdci; // dwdot[nC3H7]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[21];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[615] += dqdci; // dwdot[C2H5]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[11];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1145] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[1];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1415] += dqdci; // dwdot[CH3]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 162: H + nC3H7 <=> C3H6 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[26];
  k_f = 1800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[25];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[26]) + (h_RT[5] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[80] -= dqdci; // dwdot[nC3H7]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[25];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[295] += dqdci; // dwdot[C3H6]/d[H2]
  J[296] -= dqdci; // dwdot[nC3H7]/d[H2]
  // d()/d[C3H6]
  dqdci = -k_r * sc[5];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1355] += dqdci; // dwdot[H2]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[1];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1409] += dqdci; // dwdot[H2]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 163: O + nC3H7 <=> C2H5 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 96000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[21];
  Kc = exp(g_RT[2] - g_RT[14] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[26]) + (h_RT[14] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[14] += q; // CH2O
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[129] += dqdci; // dwdot[C2H5]/d[O]
  J[134] -= dqdci; // dwdot[nC3H7]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[21];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] += dqdci; // dwdot[C2H5]/d[CH2O]
  J[782] -= dqdci; // dwdot[nC3H7]/d[CH2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[14];
  J[1136] -= dqdci; // dwdot[O]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[2];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 164: OH + nC3H7 <=> C3H6 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[25];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[26]) + (h_RT[6] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[187] += dqdci; // dwdot[C3H6]/d[OH]
  J[188] -= dqdci; // dwdot[nC3H7]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[25];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[349] += dqdci; // dwdot[C3H6]/d[H2O]
  J[350] -= dqdci; // dwdot[nC3H7]/d[H2O]
  // d()/d[C3H6]
  dqdci = -k_r * sc[6];
  J[1353] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1356] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[3];
  J[1407] -= dqdci; // dwdot[OH]/d[nC3H7]
  J[1410] += dqdci; // dwdot[H2O]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 165: O2 + nC3H7 <=> C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 90000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[25];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[4] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[HO2]
  dqdci = -k_r * sc[25];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[241] += dqdci; // dwdot[C3H6]/d[HO2]
  J[242] -= dqdci; // dwdot[nC3H7]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[457] += dqdci; // dwdot[C3H6]/d[O2]
  J[458] -= dqdci; // dwdot[nC3H7]/d[O2]
  // d()/d[C3H6]
  dqdci = -k_r * sc[4];
  J[1354] += dqdci; // dwdot[HO2]/d[C3H6]
  J[1358] -= dqdci; // dwdot[O2]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[8];
  J[1408] += dqdci; // dwdot[HO2]/d[nC3H7]
  J[1412] -= dqdci; // dwdot[O2]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 166: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[21];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[21] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[26]) + (h_RT[3] + h_RT[14] + h_RT[21]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[21] += q; // C2H5
  wdot[26] -= q; // nC3H7
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[21];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[183] += dqdci; // dwdot[C2H5]/d[OH]
  J[188] -= dqdci; // dwdot[nC3H7]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[237] += dqdci; // dwdot[C2H5]/d[HO2]
  J[242] -= dqdci; // dwdot[nC3H7]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[21];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[777] += dqdci; // dwdot[C2H5]/d[CH2O]
  J[782] -= dqdci; // dwdot[nC3H7]/d[CH2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[3] * sc[14];
  J[1137] += dqdci; // dwdot[OH]/d[C2H5]
  J[1138] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1148] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1160] -= dqdci; // dwdot[nC3H7]/d[C2H5]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[4];
  J[1407] += dqdci; // dwdot[OH]/d[nC3H7]
  J[1408] -= dqdci; // dwdot[HO2]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1425] += dqdci; // dwdot[C2H5]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 167: CH3 + nC3H7 <=> C3H6 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[25];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[25] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[26]) + (h_RT[12] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[25] += q; // C3H6
  wdot[26] -= q; // nC3H7
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[619] += dqdci; // dwdot[C3H6]/d[CH3]
  J[620] -= dqdci; // dwdot[nC3H7]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[25];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[673] += dqdci; // dwdot[C3H6]/d[CH4]
  J[674] -= dqdci; // dwdot[nC3H7]/d[CH4]
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[1361] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1362] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] -= dqdci; // dwdot[nC3H7]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[11];
  J[1415] -= dqdci; // dwdot[CH3]/d[nC3H7]
  J[1416] += dqdci; // dwdot[CH4]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT

  // reaction 169: C4H7 + H <=> CH3 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[28];
  k_f = 2e+15 * exp(-2 * tc[0] - (5535.38332385192) * invT);
  dlnkfdT = -2 * invT + (5535.38332385192) * invT2;
  // reverse
  phi_r = sc[11] * sc[24];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[28]) + (h_RT[11] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[24] += q; // aC3H5
  wdot[28] -= q; // C4H7
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[78] += dqdci; // dwdot[aC3H5]/d[H]
  J[82] -= dqdci; // dwdot[C4H7]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[24];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[618] += dqdci; // dwdot[aC3H5]/d[CH3]
  J[622] -= dqdci; // dwdot[C4H7]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[11];
  J[1297] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1307] += dqdci; // dwdot[CH3]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1324] -= dqdci; // dwdot[C4H7]/d[aC3H5]
  // d()/d[C4H7]
  dqdci = +k_f * sc[1];
  J[1513] -= dqdci; // dwdot[H]/d[C4H7]
  J[1523] += dqdci; // dwdot[CH3]/d[C4H7]
  J[1536] += dqdci; // dwdot[aC3H5]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT

  // reaction 170: C4H7 + HO2 <=> CH2O + OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[28];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[24];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[28]) + (h_RT[3] + h_RT[14] + h_RT[24]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[24] += q; // aC3H5
  wdot[28] -= q; // C4H7
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[24];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[186] += dqdci; // dwdot[aC3H5]/d[OH]
  J[190] -= dqdci; // dwdot[C4H7]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[28];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[240] += dqdci; // dwdot[aC3H5]/d[HO2]
  J[244] -= dqdci; // dwdot[C4H7]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[24];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[780] += dqdci; // dwdot[aC3H5]/d[CH2O]
  J[784] -= dqdci; // dwdot[C4H7]/d[CH2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[3] * sc[14];
  J[1299] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1300] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1310] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1320] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  J[1324] -= dqdci; // dwdot[C4H7]/d[aC3H5]
  // d()/d[C4H7]
  dqdci = +k_f * sc[4];
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1516] -= dqdci; // dwdot[HO2]/d[C4H7]
  J[1526] += dqdci; // dwdot[CH2O]/d[C4H7]
  J[1536] += dqdci; // dwdot[aC3H5]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT

  // reaction 171: C4H7 + HCO <=> C4H81 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[29];
  Kc = exp(g_RT[13] - g_RT[16] + g_RT[28] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[16] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // HCO
  wdot[16] += q; // CO
  wdot[28] -= q; // C4H7
  wdot[29] += q; // C4H81
  // d()/d[HCO]
  dqdci = +k_f * sc[28];
  J[715] -= dqdci; // dwdot[HCO]/d[HCO]
  J[718] += dqdci; // dwdot[CO]/d[HCO]
  J[730] -= dqdci; // dwdot[C4H7]/d[HCO]
  J[731] += dqdci; // dwdot[C4H81]/d[HCO]
  // d()/d[CO]
  dqdci = -k_r * sc[29];
  J[877] -= dqdci; // dwdot[HCO]/d[CO]
  J[880] += dqdci; // dwdot[CO]/d[CO]
  J[892] -= dqdci; // dwdot[C4H7]/d[CO]
  J[893] += dqdci; // dwdot[C4H81]/d[CO]
  // d()/d[C4H7]
  dqdci = +k_f * sc[13];
  J[1525] -= dqdci; // dwdot[HCO]/d[C4H7]
  J[1528] += dqdci; // dwdot[CO]/d[C4H7]
  J[1540] -= dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] += dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = -k_r * sc[16];
  J[1579] -= dqdci; // dwdot[HCO]/d[C4H81]
  J[1582] += dqdci; // dwdot[CO]/d[C4H81]
  J[1594] -= dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2875] -= dqdT; // dwdot[HCO]/dT
  J[2878] += dqdT; // dwdot[CO]/dT
  J[2890] -= dqdT; // dwdot[C4H7]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT

  // reaction 173: C4H81 + H <=> C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[21];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[21] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[20] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[21] += q; // C2H5
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[21];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1101] += dqdci; // dwdot[C2H5]/d[C2H4]
  J[1109] -= dqdci; // dwdot[C4H81]/d[C2H4]
  // d()/d[C2H5]
  dqdci = -k_r * sc[20];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1154] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1163] -= dqdci; // dwdot[C4H81]/d[C2H5]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1586] += dqdci; // dwdot[C2H4]/d[C4H81]
  J[1587] += dqdci; // dwdot[C2H5]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 174: C4H81 + H <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 3.2e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[11] * sc[25];
  Kc = exp(g_RT[1] - g_RT[11] - g_RT[25] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[11] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[11] += q; // CH3
  wdot[25] += q; // C3H6
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[65] += dqdci; // dwdot[CH3]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[25];
  J[595] -= dqdci; // dwdot[H]/d[CH3]
  J[605] += dqdci; // dwdot[CH3]/d[CH3]
  J[619] += dqdci; // dwdot[C3H6]/d[CH3]
  J[623] -= dqdci; // dwdot[C4H81]/d[CH3]
  // d()/d[C3H6]
  dqdci = -k_r * sc[11];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1361] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1379] -= dqdci; // dwdot[C4H81]/d[C3H6]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1577] += dqdci; // dwdot[CH3]/d[C4H81]
  J[1591] += dqdci; // dwdot[C3H6]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2873] += dqdT; // dwdot[CH3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 175: C4H81 + H <=> C4H7 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 0.65 * exp(2.54 * tc[0] - (3399.73179417669) * invT);
  dlnkfdT = 2.54 * invT + (3399.73179417669) * invT2;
  // reverse
  phi_r = sc[5] * sc[28];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[5] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[82] += dqdci; // dwdot[C4H7]/d[H]
  J[83] -= dqdci; // dwdot[C4H81]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[28];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[298] += dqdci; // dwdot[C4H7]/d[H2]
  J[299] -= dqdci; // dwdot[C4H81]/d[H2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[5];
  J[1513] -= dqdci; // dwdot[H]/d[C4H7]
  J[1517] += dqdci; // dwdot[H2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[1];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1571] += dqdci; // dwdot[H2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 176: C4H81 + O <=> HCO + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 330 * exp(1.45 * tc[0] - (-202.293099653497) * invT);
  dlnkfdT = 1.45 * invT + (-202.293099653497) * invT2;
  // reverse
  phi_r = sc[13] * sc[26];
  Kc = exp(g_RT[2] - g_RT[13] - g_RT[26] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[13] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[13] += q; // HCO
  wdot[26] += q; // nC3H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[121] += dqdci; // dwdot[HCO]/d[O]
  J[134] += dqdci; // dwdot[nC3H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[26];
  J[704] -= dqdci; // dwdot[O]/d[HCO]
  J[715] += dqdci; // dwdot[HCO]/d[HCO]
  J[728] += dqdci; // dwdot[nC3H7]/d[HCO]
  J[731] -= dqdci; // dwdot[C4H81]/d[HCO]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[13];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1417] += dqdci; // dwdot[HCO]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1433] -= dqdci; // dwdot[C4H81]/d[nC3H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1579] += dqdci; // dwdot[HCO]/d[C4H81]
  J[1592] += dqdci; // dwdot[nC3H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2875] += dqdT; // dwdot[HCO]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 177: C4H81 + O <=> C4H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 15000000 * exp(-(2898.52799503519) * invT);
  dlnkfdT = (2898.52799503519) * invT2;
  // reverse
  phi_r = sc[3] * sc[28];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[3] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[136] += dqdci; // dwdot[C4H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[C4H7]
  dqdci = -k_r * sc[3];
  J[1514] -= dqdci; // dwdot[O]/d[C4H7]
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1569] += dqdci; // dwdot[OH]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 178: C4H81 + O <=> C4H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[29];
  k_f = 26000000 * exp(-(2249.3784961471) * invT);
  dlnkfdT = (2249.3784961471) * invT2;
  // reverse
  phi_r = sc[3] * sc[28];
  Kc = exp(g_RT[2] - g_RT[3] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[3] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[136] += dqdci; // dwdot[C4H7]/d[O]
  J[137] -= dqdci; // dwdot[C4H81]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[C4H7]
  dqdci = -k_r * sc[3];
  J[1514] -= dqdci; // dwdot[O]/d[C4H7]
  J[1515] += dqdci; // dwdot[OH]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[2];
  J[1568] -= dqdci; // dwdot[O]/d[C4H81]
  J[1569] += dqdci; // dwdot[OH]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 179: C4H81 + OH <=> C4H7 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 0.0007 * exp(2.66 * tc[0] - (265.195182879087) * invT);
  dlnkfdT = 2.66 * invT + (265.195182879087) * invT2;
  // reverse
  phi_r = sc[6] * sc[28];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[29]) + (h_RT[6] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[190] += dqdci; // dwdot[C4H7]/d[OH]
  J[191] -= dqdci; // dwdot[C4H81]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[28];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[352] += dqdci; // dwdot[C4H7]/d[H2O]
  J[353] -= dqdci; // dwdot[C4H81]/d[H2O]
  // d()/d[C4H7]
  dqdci = -k_r * sc[6];
  J[1515] -= dqdci; // dwdot[OH]/d[C4H7]
  J[1518] += dqdci; // dwdot[H2O]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[3];
  J[1569] -= dqdci; // dwdot[OH]/d[C4H81]
  J[1572] += dqdci; // dwdot[H2O]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 180: C4H81 + O2 <=> C4H7 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[29];
  k_f = 20000000 * exp(-(25628.8247894344) * invT);
  dlnkfdT = (25628.8247894344) * invT2;
  // reverse
  phi_r = sc[4] * sc[28];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[4] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[HO2]
  dqdci = -k_r * sc[28];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[244] += dqdci; // dwdot[C4H7]/d[HO2]
  J[245] -= dqdci; // dwdot[C4H81]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[460] += dqdci; // dwdot[C4H7]/d[O2]
  J[461] -= dqdci; // dwdot[C4H81]/d[O2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[4];
  J[1516] += dqdci; // dwdot[HO2]/d[C4H7]
  J[1520] -= dqdci; // dwdot[O2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[8];
  J[1570] += dqdci; // dwdot[HO2]/d[C4H81]
  J[1574] -= dqdci; // dwdot[O2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 181: C4H81 + HO2 <=> C4H7 + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[29];
  k_f = 1000000 * exp(-(7216.12698763968) * invT);
  dlnkfdT = (7216.12698763968) * invT2;
  // reverse
  phi_r = sc[7] * sc[28];
  Kc = exp(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[29]) + (h_RT[7] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[HO2]
  dqdci = +k_f * sc[29];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[244] += dqdci; // dwdot[C4H7]/d[HO2]
  J[245] -= dqdci; // dwdot[C4H81]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[28];
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[406] += dqdci; // dwdot[C4H7]/d[H2O2]
  J[407] -= dqdci; // dwdot[C4H81]/d[H2O2]
  // d()/d[C4H7]
  dqdci = -k_r * sc[7];
  J[1516] -= dqdci; // dwdot[HO2]/d[C4H7]
  J[1519] += dqdci; // dwdot[H2O2]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[4];
  J[1570] -= dqdci; // dwdot[HO2]/d[C4H81]
  J[1573] += dqdci; // dwdot[H2O2]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 182: C4H81 + CH3 <=> C4H7 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 4.5e-07 * exp(3.65 * tc[0] - (3599.50881050116) * invT);
  dlnkfdT = 3.65 * invT + (3599.50881050116) * invT2;
  // reverse
  phi_r = sc[12] * sc[28];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[29]) + (h_RT[12] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[28] += q; // C4H7
  wdot[29] -= q; // C4H81
  // d()/d[CH3]
  dqdci = +k_f * sc[29];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[622] += dqdci; // dwdot[C4H7]/d[CH3]
  J[623] -= dqdci; // dwdot[C4H81]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[28];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[676] += dqdci; // dwdot[C4H7]/d[CH4]
  J[677] -= dqdci; // dwdot[C4H81]/d[CH4]
  // d()/d[C4H7]
  dqdci = -k_r * sc[12];
  J[1523] -= dqdci; // dwdot[CH3]/d[C4H7]
  J[1524] += dqdci; // dwdot[CH4]/d[C4H7]
  J[1540] += dqdci; // dwdot[C4H7]/d[C4H7]
  J[1541] -= dqdci; // dwdot[C4H81]/d[C4H7]
  // d()/d[C4H81]
  dqdci = +k_f * sc[11];
  J[1577] -= dqdci; // dwdot[CH3]/d[C4H81]
  J[1578] += dqdci; // dwdot[CH4]/d[C4H81]
  J[1594] += dqdci; // dwdot[C4H7]/d[C4H81]
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2890] += dqdT; // dwdot[C4H7]/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT

  // reaction 183: H + pC4H9 <=> 2 C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[30];
  k_f = 3.7e+18 * exp(-2.92 * tc[0] - (6292.72440588802) * invT);
  dlnkfdT = -2.92 * invT + (6292.72440588802) * invT2;
  // reverse
  phi_r = (sc[21] * sc[21]);
  Kc = exp(g_RT[1] - 2.000000 * g_RT[21] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[30]) + (2.000000 * h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;      // H
  wdot[21] += 2 * q; // C2H5
  wdot[30] -= q;     // pC4H9
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[55] -= dqdci;     // dwdot[H]/d[H]
  J[75] += 2 * dqdci; // dwdot[C2H5]/d[H]
  J[84] -= dqdci;     // dwdot[pC4H9]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * 2.000000 * sc[21];
  J[1135] -= dqdci;     // dwdot[H]/d[C2H5]
  J[1155] += 2 * dqdci; // dwdot[C2H5]/d[C2H5]
  J[1164] -= dqdci;     // dwdot[pC4H9]/d[C2H5]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[1];
  J[1621] -= dqdci;     // dwdot[H]/d[pC4H9]
  J[1641] += 2 * dqdci; // dwdot[C2H5]/d[pC4H9]
  J[1650] -= dqdci;     // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2863] -= dqdT;     // dwdot[H]/dT
  J[2883] += 2 * dqdT; // dwdot[C2H5]/dT
  J[2892] -= dqdT;     // dwdot[pC4H9]/dT

  // reaction 184: H + pC4H9 <=> C4H81 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[30];
  k_f = 1800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[29];
  Kc = exp(g_RT[1] - g_RT[5] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[30]) + (h_RT[5] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[83] += dqdci; // dwdot[C4H81]/d[H]
  J[84] -= dqdci; // dwdot[pC4H9]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[29];
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[299] += dqdci; // dwdot[C4H81]/d[H2]
  J[300] -= dqdci; // dwdot[pC4H9]/d[H2]
  // d()/d[C4H81]
  dqdci = -k_r * sc[5];
  J[1567] -= dqdci; // dwdot[H]/d[C4H81]
  J[1571] += dqdci; // dwdot[H2]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[1];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1625] += dqdci; // dwdot[H2]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 185: O + pC4H9 <=> CH2O + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 96000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[14] * sc[26];
  Kc = exp(g_RT[2] - g_RT[14] - g_RT[26] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[30]) + (h_RT[14] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // O
  wdot[14] += q; // CH2O
  wdot[26] += q; // nC3H7
  wdot[30] -= q; // pC4H9
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[122] += dqdci; // dwdot[CH2O]/d[O]
  J[134] += dqdci; // dwdot[nC3H7]/d[O]
  J[138] -= dqdci; // dwdot[pC4H9]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[26];
  J[758] -= dqdci; // dwdot[O]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[782] += dqdci; // dwdot[nC3H7]/d[CH2O]
  J[786] -= dqdci; // dwdot[pC4H9]/d[CH2O]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[14];
  J[1406] -= dqdci; // dwdot[O]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1434] -= dqdci; // dwdot[pC4H9]/d[nC3H7]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[2];
  J[1622] -= dqdci; // dwdot[O]/d[pC4H9]
  J[1634] += dqdci; // dwdot[CH2O]/d[pC4H9]
  J[1646] += dqdci; // dwdot[nC3H7]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 186: OH + pC4H9 <=> C4H81 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[29];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[6] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[191] += dqdci; // dwdot[C4H81]/d[OH]
  J[192] -= dqdci; // dwdot[pC4H9]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[29];
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[353] += dqdci; // dwdot[C4H81]/d[H2O]
  J[354] -= dqdci; // dwdot[pC4H9]/d[H2O]
  // d()/d[C4H81]
  dqdci = -k_r * sc[6];
  J[1569] -= dqdci; // dwdot[OH]/d[C4H81]
  J[1572] += dqdci; // dwdot[H2O]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[3];
  J[1623] -= dqdci; // dwdot[OH]/d[pC4H9]
  J[1626] += dqdci; // dwdot[H2O]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 187: O2 + pC4H9 <=> C4H81 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 270000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[4] * sc[29];
  Kc = exp(-g_RT[4] + g_RT[8] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[30]) + (h_RT[4] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[HO2]
  dqdci = -k_r * sc[29];
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[245] += dqdci; // dwdot[C4H81]/d[HO2]
  J[246] -= dqdci; // dwdot[pC4H9]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[461] += dqdci; // dwdot[C4H81]/d[O2]
  J[462] -= dqdci; // dwdot[pC4H9]/d[O2]
  // d()/d[C4H81]
  dqdci = -k_r * sc[4];
  J[1570] += dqdci; // dwdot[HO2]/d[C4H81]
  J[1574] -= dqdci; // dwdot[O2]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[8];
  J[1624] += dqdci; // dwdot[HO2]/d[pC4H9]
  J[1628] -= dqdci; // dwdot[O2]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 188: HO2 + pC4H9 <=> CH2O + OH + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[14] * sc[26];
  Kc = refC * exp(-g_RT[3] + g_RT[4] - g_RT[14] - g_RT[26] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[4] + h_RT[30]) + (h_RT[3] + h_RT[14] + h_RT[26]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[4] -= q;  // HO2
  wdot[14] += q; // CH2O
  wdot[26] += q; // nC3H7
  wdot[30] -= q; // pC4H9
  // d()/d[OH]
  dqdci = -k_r * sc[14] * sc[26];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[166] -= dqdci; // dwdot[HO2]/d[OH]
  J[176] += dqdci; // dwdot[CH2O]/d[OH]
  J[188] += dqdci; // dwdot[nC3H7]/d[OH]
  J[192] -= dqdci; // dwdot[pC4H9]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[219] += dqdci; // dwdot[OH]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[230] += dqdci; // dwdot[CH2O]/d[HO2]
  J[242] += dqdci; // dwdot[nC3H7]/d[HO2]
  J[246] -= dqdci; // dwdot[pC4H9]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[3] * sc[26];
  J[759] += dqdci; // dwdot[OH]/d[CH2O]
  J[760] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[770] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[782] += dqdci; // dwdot[nC3H7]/d[CH2O]
  J[786] -= dqdci; // dwdot[pC4H9]/d[CH2O]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[3] * sc[14];
  J[1407] += dqdci; // dwdot[OH]/d[nC3H7]
  J[1408] -= dqdci; // dwdot[HO2]/d[nC3H7]
  J[1418] += dqdci; // dwdot[CH2O]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1434] -= dqdci; // dwdot[pC4H9]/d[nC3H7]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[4];
  J[1623] += dqdci; // dwdot[OH]/d[pC4H9]
  J[1624] -= dqdci; // dwdot[HO2]/d[pC4H9]
  J[1634] += dqdci; // dwdot[CH2O]/d[pC4H9]
  J[1646] += dqdci; // dwdot[nC3H7]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2876] += dqdT; // dwdot[CH2O]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 189: CH3 + pC4H9 <=> C4H81 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[29];
  Kc = exp(g_RT[11] - g_RT[12] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[30]) + (h_RT[12] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[29] += q; // C4H81
  wdot[30] -= q; // pC4H9
  // d()/d[CH3]
  dqdci = +k_f * sc[30];
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[623] += dqdci; // dwdot[C4H81]/d[CH3]
  J[624] -= dqdci; // dwdot[pC4H9]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[29];
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[677] += dqdci; // dwdot[C4H81]/d[CH4]
  J[678] -= dqdci; // dwdot[pC4H9]/d[CH4]
  // d()/d[C4H81]
  dqdci = -k_r * sc[12];
  J[1577] -= dqdci; // dwdot[CH3]/d[C4H81]
  J[1578] += dqdci; // dwdot[CH4]/d[C4H81]
  J[1595] += dqdci; // dwdot[C4H81]/d[C4H81]
  J[1596] -= dqdci; // dwdot[pC4H9]/d[C4H81]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[11];
  J[1631] -= dqdci; // dwdot[CH3]/d[pC4H9]
  J[1632] += dqdci; // dwdot[CH4]/d[pC4H9]
  J[1649] += dqdci; // dwdot[C4H81]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  // d()/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2891] += dqdT; // dwdot[C4H81]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT

  // reaction 190: C5H9 => C2H4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  dlnkfdT = (15106.1214767918) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] += q; // C2H4
  wdot[24] += q; // aC3H5
  wdot[31] -= q; // C5H9
  // d()/d[C5H9]
  dqdci = +k_f;
  J[1694] += dqdci; // dwdot[C2H4]/d[C5H9]
  J[1698] += dqdci; // dwdot[aC3H5]/d[C5H9]
  J[1705] -= dqdci; // dwdot[C5H9]/d[C5H9]
  // d()/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2886] += dqdT; // dwdot[aC3H5]/dT
  J[2893] -= dqdT; // dwdot[C5H9]/dT

  // reaction 191: C5H9 => C2H3 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  dlnkfdT = (15106.1214767918) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H3
  wdot[25] += q; // C3H6
  wdot[31] -= q; // C5H9
  // d()/d[C5H9]
  dqdci = +k_f;
  J[1693] += dqdci; // dwdot[C2H3]/d[C5H9]
  J[1699] += dqdci; // dwdot[C3H6]/d[C5H9]
  J[1705] -= dqdci; // dwdot[C5H9]/d[C5H9]
  // d()/dT
  J[2881] += dqdT; // dwdot[C2H3]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2893] -= dqdT; // dwdot[C5H9]/dT

  // reaction 193: C5H10 + H <=> C2H4 + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[26];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[26] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[20] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[26] += q; // nC3H7
  wdot[32] -= q; // C5H10
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[80] += dqdci; // dwdot[nC3H7]/d[H]
  J[86] -= dqdci; // dwdot[C5H10]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[26];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] += dqdci; // dwdot[nC3H7]/d[C2H4]
  J[1112] -= dqdci; // dwdot[C5H10]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[20];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1424] += dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1436] -= dqdci; // dwdot[C5H10]/d[nC3H7]
  // d()/d[C5H10]
  dqdci = +k_f * sc[1];
  J[1729] -= dqdci; // dwdot[H]/d[C5H10]
  J[1748] += dqdci; // dwdot[C2H4]/d[C5H10]
  J[1754] += dqdci; // dwdot[nC3H7]/d[C5H10]
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT

  // reaction 194: C5H10 + H <=> C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[32];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[21] * sc[25];
  Kc = exp(g_RT[1] - g_RT[21] - g_RT[25] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[32]) + (h_RT[21] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[21] += q; // C2H5
  wdot[25] += q; // C3H6
  wdot[32] -= q; // C5H10
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[75] += dqdci; // dwdot[C2H5]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[86] -= dqdci; // dwdot[C5H10]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[25];
  J[1135] -= dqdci; // dwdot[H]/d[C2H5]
  J[1155] += dqdci; // dwdot[C2H5]/d[C2H5]
  J[1159] += dqdci; // dwdot[C3H6]/d[C2H5]
  J[1166] -= dqdci; // dwdot[C5H10]/d[C2H5]
  // d()/d[C3H6]
  dqdci = -k_r * sc[21];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1371] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1382] -= dqdci; // dwdot[C5H10]/d[C3H6]
  // d()/d[C5H10]
  dqdci = +k_f * sc[1];
  J[1729] -= dqdci; // dwdot[H]/d[C5H10]
  J[1749] += dqdci; // dwdot[C2H5]/d[C5H10]
  J[1753] += dqdci; // dwdot[C3H6]/d[C5H10]
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2883] += dqdT; // dwdot[C2H5]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT

  // reaction 195: C2H4 + nC3H7 <=> PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[26];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[33];
  Kc = refCinv * exp(g_RT[20] + g_RT[26] - g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[26]) + (h_RT[33]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[26] -= q; // nC3H7
  wdot[33] += q; // PXC5H11
  // d()/d[C2H4]
  dqdci = +k_f * sc[26];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1106] -= dqdci; // dwdot[nC3H7]/d[C2H4]
  J[1113] += dqdci; // dwdot[PXC5H11]/d[C2H4]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[20];
  J[1424] -= dqdci; // dwdot[C2H4]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1437] += dqdci; // dwdot[PXC5H11]/d[nC3H7]
  // d()/d[PXC5H11]
  dqdci = -k_r;
  J[1802] -= dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1808] -= dqdci; // dwdot[nC3H7]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT

  // reaction 197: C6H12 + H <=> C2H4 + pC4H9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[30];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[30] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[20] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[30] += q; // pC4H9
  wdot[34] -= q; // C6H12
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[84] += dqdci; // dwdot[pC4H9]/d[H]
  J[88] -= dqdci; // dwdot[C6H12]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[30];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1110] += dqdci; // dwdot[pC4H9]/d[C2H4]
  J[1114] -= dqdci; // dwdot[C6H12]/d[C2H4]
  // d()/d[pC4H9]
  dqdci = -k_r * sc[20];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1640] += dqdci; // dwdot[C2H4]/d[pC4H9]
  J[1650] += dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1654] -= dqdci; // dwdot[C6H12]/d[pC4H9]
  // d()/d[C6H12]
  dqdci = +k_f * sc[1];
  J[1837] -= dqdci; // dwdot[H]/d[C6H12]
  J[1856] += dqdci; // dwdot[C2H4]/d[C6H12]
  J[1866] += dqdci; // dwdot[pC4H9]/d[C6H12]
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT

  // reaction 198: C6H12 + H <=> C3H6 + nC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[26];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[26] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[34]) + (h_RT[25] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[26] += q; // nC3H7
  wdot[34] -= q; // C6H12
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[80] += dqdci; // dwdot[nC3H7]/d[H]
  J[88] -= dqdci; // dwdot[C6H12]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[26];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1376] += dqdci; // dwdot[nC3H7]/d[C3H6]
  J[1384] -= dqdci; // dwdot[C6H12]/d[C3H6]
  // d()/d[nC3H7]
  dqdci = -k_r * sc[25];
  J[1405] -= dqdci; // dwdot[H]/d[nC3H7]
  J[1429] += dqdci; // dwdot[C3H6]/d[nC3H7]
  J[1430] += dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1438] -= dqdci; // dwdot[C6H12]/d[nC3H7]
  // d()/d[C6H12]
  dqdci = +k_f * sc[1];
  J[1837] -= dqdci; // dwdot[H]/d[C6H12]
  J[1861] += dqdci; // dwdot[C3H6]/d[C6H12]
  J[1862] += dqdci; // dwdot[nC3H7]/d[C6H12]
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2888] += dqdT; // dwdot[nC3H7]/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT

  // reaction 199: C2H4 + pC4H9 <=> PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[30];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[35];
  Kc = refCinv * exp(g_RT[20] + g_RT[30] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[30]) + (h_RT[35]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[30] -= q; // pC4H9
  wdot[35] += q; // PXC6H13
  // d()/d[C2H4]
  dqdci = +k_f * sc[30];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1110] -= dqdci; // dwdot[pC4H9]/d[C2H4]
  J[1115] += dqdci; // dwdot[PXC6H13]/d[C2H4]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[20];
  J[1640] -= dqdci; // dwdot[C2H4]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1655] += dqdci; // dwdot[PXC6H13]/d[pC4H9]
  // d()/d[PXC6H13]
  dqdci = -k_r;
  J[1910] -= dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1920] -= dqdci; // dwdot[pC4H9]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT

  // reaction 201: C7H14 + H <=> C2H4 + PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[33];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[33] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[20] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[33] += q; // PXC5H11
  wdot[36] -= q; // C7H14
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[87] += dqdci; // dwdot[PXC5H11]/d[H]
  J[90] -= dqdci; // dwdot[C7H14]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[33];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1113] += dqdci; // dwdot[PXC5H11]/d[C2H4]
  J[1116] -= dqdci; // dwdot[C7H14]/d[C2H4]
  // d()/d[PXC5H11]
  dqdci = -k_r * sc[20];
  J[1783] -= dqdci; // dwdot[H]/d[PXC5H11]
  J[1802] += dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1818] -= dqdci; // dwdot[C7H14]/d[PXC5H11]
  // d()/d[C7H14]
  dqdci = +k_f * sc[1];
  J[1945] -= dqdci; // dwdot[H]/d[C7H14]
  J[1964] += dqdci; // dwdot[C2H4]/d[C7H14]
  J[1977] += dqdci; // dwdot[PXC5H11]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT

  // reaction 202: C7H14 + H <=> C3H6 + pC4H9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[36];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[30];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[30] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[36]) + (h_RT[25] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[30] += q; // pC4H9
  wdot[36] -= q; // C7H14
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[84] += dqdci; // dwdot[pC4H9]/d[H]
  J[90] -= dqdci; // dwdot[C7H14]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[30];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1380] += dqdci; // dwdot[pC4H9]/d[C3H6]
  J[1386] -= dqdci; // dwdot[C7H14]/d[C3H6]
  // d()/d[pC4H9]
  dqdci = -k_r * sc[25];
  J[1621] -= dqdci; // dwdot[H]/d[pC4H9]
  J[1645] += dqdci; // dwdot[C3H6]/d[pC4H9]
  J[1650] += dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1656] -= dqdci; // dwdot[C7H14]/d[pC4H9]
  // d()/d[C7H14]
  dqdci = +k_f * sc[1];
  J[1945] -= dqdci; // dwdot[H]/d[C7H14]
  J[1969] += dqdci; // dwdot[C3H6]/d[C7H14]
  J[1974] += dqdci; // dwdot[pC4H9]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2892] += dqdT; // dwdot[pC4H9]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT

  // reaction 203: C2H4 + PXC5H11 <=> PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[33];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[37];
  Kc = refCinv * exp(g_RT[20] + g_RT[33] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[33]) + (h_RT[37]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[33] -= q; // PXC5H11
  wdot[37] += q; // PXC7H15
  // d()/d[C2H4]
  dqdci = +k_f * sc[33];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1113] -= dqdci; // dwdot[PXC5H11]/d[C2H4]
  J[1117] += dqdci; // dwdot[PXC7H15]/d[C2H4]
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[20];
  J[1802] -= dqdci; // dwdot[C2H4]/d[PXC5H11]
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1819] += dqdci; // dwdot[PXC7H15]/d[PXC5H11]
  // d()/d[PXC7H15]
  dqdci = -k_r;
  J[2018] -= dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2031] -= dqdci; // dwdot[PXC5H11]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT

  // reaction 205: C8H16 + H <=> C2H4 + PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[35];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[20] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[35] += q; // PXC6H13
  wdot[38] -= q; // C8H16
  // d()/d[H]
  dqdci = +k_f * sc[38];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[89] += dqdci; // dwdot[PXC6H13]/d[H]
  J[92] -= dqdci; // dwdot[C8H16]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[35];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1115] += dqdci; // dwdot[PXC6H13]/d[C2H4]
  J[1118] -= dqdci; // dwdot[C8H16]/d[C2H4]
  // d()/d[PXC6H13]
  dqdci = -k_r * sc[20];
  J[1891] -= dqdci; // dwdot[H]/d[PXC6H13]
  J[1910] += dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1928] -= dqdci; // dwdot[C8H16]/d[PXC6H13]
  // d()/d[C8H16]
  dqdci = +k_f * sc[1];
  J[2053] -= dqdci; // dwdot[H]/d[C8H16]
  J[2072] += dqdci; // dwdot[C2H4]/d[C8H16]
  J[2087] += dqdci; // dwdot[PXC6H13]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT

  // reaction 206: C8H16 + H <=> C3H6 + PXC5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[38];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[33];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[33] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[38]) + (h_RT[25] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[33] += q; // PXC5H11
  wdot[38] -= q; // C8H16
  // d()/d[H]
  dqdci = +k_f * sc[38];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[87] += dqdci; // dwdot[PXC5H11]/d[H]
  J[92] -= dqdci; // dwdot[C8H16]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[33];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1383] += dqdci; // dwdot[PXC5H11]/d[C3H6]
  J[1388] -= dqdci; // dwdot[C8H16]/d[C3H6]
  // d()/d[PXC5H11]
  dqdci = -k_r * sc[25];
  J[1783] -= dqdci; // dwdot[H]/d[PXC5H11]
  J[1807] += dqdci; // dwdot[C3H6]/d[PXC5H11]
  J[1815] += dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1820] -= dqdci; // dwdot[C8H16]/d[PXC5H11]
  // d()/d[C8H16]
  dqdci = +k_f * sc[1];
  J[2053] -= dqdci; // dwdot[H]/d[C8H16]
  J[2077] += dqdci; // dwdot[C3H6]/d[C8H16]
  J[2085] += dqdci; // dwdot[PXC5H11]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2895] += dqdT; // dwdot[PXC5H11]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT

  // reaction 207: C2H4 + PXC6H13 <=> PXC8H17
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[35];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[20] + g_RT[35] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[35]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[35] -= q; // PXC6H13
  wdot[39] += q; // PXC8H17
  // d()/d[C2H4]
  dqdci = +k_f * sc[35];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1115] -= dqdci; // dwdot[PXC6H13]/d[C2H4]
  J[1119] += dqdci; // dwdot[PXC8H17]/d[C2H4]
  // d()/d[PXC6H13]
  dqdci = +k_f * sc[20];
  J[1910] -= dqdci; // dwdot[C2H4]/d[PXC6H13]
  J[1925] -= dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1929] += dqdci; // dwdot[PXC8H17]/d[PXC6H13]
  // d()/d[PXC8H17]
  dqdci = -k_r;
  J[2126] -= dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2141] -= dqdci; // dwdot[PXC6H13]/d[PXC8H17]
  J[2145] += dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2897] -= dqdT; // dwdot[PXC6H13]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT

  // reaction 209: C9H18 + H <=> C2H4 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[37];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[37] + g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[20] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[37] += q; // PXC7H15
  wdot[40] -= q; // C9H18
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[91] += dqdci; // dwdot[PXC7H15]/d[H]
  J[94] -= dqdci; // dwdot[C9H18]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[37];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1117] += dqdci; // dwdot[PXC7H15]/d[C2H4]
  J[1120] -= dqdci; // dwdot[C9H18]/d[C2H4]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[20];
  J[1999] -= dqdci; // dwdot[H]/d[PXC7H15]
  J[2018] += dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2038] -= dqdci; // dwdot[C9H18]/d[PXC7H15]
  // d()/d[C9H18]
  dqdci = +k_f * sc[1];
  J[2161] -= dqdci; // dwdot[H]/d[C9H18]
  J[2180] += dqdci; // dwdot[C2H4]/d[C9H18]
  J[2197] += dqdci; // dwdot[PXC7H15]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT

  // reaction 210: C9H18 + H <=> C3H6 + PXC6H13
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[35];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[35] + g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[40]) + (h_RT[25] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[35] += q; // PXC6H13
  wdot[40] -= q; // C9H18
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[89] += dqdci; // dwdot[PXC6H13]/d[H]
  J[94] -= dqdci; // dwdot[C9H18]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[35];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1385] += dqdci; // dwdot[PXC6H13]/d[C3H6]
  J[1390] -= dqdci; // dwdot[C9H18]/d[C3H6]
  // d()/d[PXC6H13]
  dqdci = -k_r * sc[25];
  J[1891] -= dqdci; // dwdot[H]/d[PXC6H13]
  J[1915] += dqdci; // dwdot[C3H6]/d[PXC6H13]
  J[1925] += dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1930] -= dqdci; // dwdot[C9H18]/d[PXC6H13]
  // d()/d[C9H18]
  dqdci = +k_f * sc[1];
  J[2161] -= dqdci; // dwdot[H]/d[C9H18]
  J[2185] += dqdci; // dwdot[C3H6]/d[C9H18]
  J[2195] += dqdci; // dwdot[PXC6H13]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2897] += dqdT; // dwdot[PXC6H13]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT

  // reaction 211: C2H4 + PXC7H15 <=> PXC9H19
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[37];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[41];
  Kc = refCinv * exp(g_RT[20] + g_RT[37] - g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[37]) + (h_RT[41]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[37] -= q; // PXC7H15
  wdot[41] += q; // PXC9H19
  // d()/d[C2H4]
  dqdci = +k_f * sc[37];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1117] -= dqdci; // dwdot[PXC7H15]/d[C2H4]
  J[1121] += dqdci; // dwdot[PXC9H19]/d[C2H4]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[20];
  J[2018] -= dqdci; // dwdot[C2H4]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2039] += dqdci; // dwdot[PXC9H19]/d[PXC7H15]
  // d()/d[PXC9H19]
  dqdci = -k_r;
  J[2234] -= dqdci; // dwdot[C2H4]/d[PXC9H19]
  J[2251] -= dqdci; // dwdot[PXC7H15]/d[PXC9H19]
  J[2255] += dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT
  J[2903] += dqdT; // dwdot[PXC9H19]/dT

  // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[20] * sc[39];
  Kc = exp(g_RT[1] - g_RT[20] - g_RT[39] + g_RT[42]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[20] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[20] += q; // C2H4
  wdot[39] += q; // PXC8H17
  wdot[42] -= q; // C10H20
  // d()/d[H]
  dqdci = +k_f * sc[42];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[C2H4]/d[H]
  J[93] += dqdci; // dwdot[PXC8H17]/d[H]
  J[96] -= dqdci; // dwdot[C10H20]/d[H]
  // d()/d[C2H4]
  dqdci = -k_r * sc[39];
  J[1081] -= dqdci; // dwdot[H]/d[C2H4]
  J[1100] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[1119] += dqdci; // dwdot[PXC8H17]/d[C2H4]
  J[1122] -= dqdci; // dwdot[C10H20]/d[C2H4]
  // d()/d[PXC8H17]
  dqdci = -k_r * sc[20];
  J[2107] -= dqdci; // dwdot[H]/d[PXC8H17]
  J[2126] += dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2145] += dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2148] -= dqdci; // dwdot[C10H20]/d[PXC8H17]
  // d()/d[C10H20]
  dqdci = +k_f * sc[1];
  J[2269] -= dqdci; // dwdot[H]/d[C10H20]
  J[2288] += dqdci; // dwdot[C2H4]/d[C10H20]
  J[2307] += dqdci; // dwdot[PXC8H17]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2882] += dqdT; // dwdot[C2H4]/dT
  J[2901] += dqdT; // dwdot[PXC8H17]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT

  // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[42];
  k_f = 1.6e+16 * exp(-2.39 * tc[0] - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[25] * sc[37];
  Kc = exp(g_RT[1] - g_RT[25] - g_RT[37] + g_RT[42]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[42]) + (h_RT[25] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // H
  wdot[25] += q; // C3H6
  wdot[37] += q; // PXC7H15
  wdot[42] -= q; // C10H20
  // d()/d[H]
  dqdci = +k_f * sc[42];
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[C3H6]/d[H]
  J[91] += dqdci; // dwdot[PXC7H15]/d[H]
  J[96] -= dqdci; // dwdot[C10H20]/d[H]
  // d()/d[C3H6]
  dqdci = -k_r * sc[37];
  J[1351] -= dqdci; // dwdot[H]/d[C3H6]
  J[1375] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[1387] += dqdci; // dwdot[PXC7H15]/d[C3H6]
  J[1392] -= dqdci; // dwdot[C10H20]/d[C3H6]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[25];
  J[1999] -= dqdci; // dwdot[H]/d[PXC7H15]
  J[2023] += dqdci; // dwdot[C3H6]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2040] -= dqdci; // dwdot[C10H20]/d[PXC7H15]
  // d()/d[C10H20]
  dqdci = +k_f * sc[1];
  J[2269] -= dqdci; // dwdot[H]/d[C10H20]
  J[2293] += dqdci; // dwdot[C3H6]/d[C10H20]
  J[2305] += dqdci; // dwdot[PXC7H15]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  // d()/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2887] += dqdT; // dwdot[C3H6]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT

  // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[39];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[43];
  Kc = refCinv * exp(g_RT[20] + g_RT[39] - g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[39]) + (h_RT[43]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[39] -= q; // PXC8H17
  wdot[43] += q; // PXC10H21
  // d()/d[C2H4]
  dqdci = +k_f * sc[39];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1119] -= dqdci; // dwdot[PXC8H17]/d[C2H4]
  J[1123] += dqdci; // dwdot[PXC10H21]/d[C2H4]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[20];
  J[2126] -= dqdci; // dwdot[C2H4]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2149] += dqdci; // dwdot[PXC10H21]/d[PXC8H17]
  // d()/d[PXC10H21]
  dqdci = -k_r;
  J[2342] -= dqdci; // dwdot[C2H4]/d[PXC10H21]
  J[2361] -= dqdci; // dwdot[PXC8H17]/d[PXC10H21]
  J[2365] += dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT
  J[2905] += dqdT; // dwdot[PXC10H21]/dT

  // reaction 216: C12H24 <=> C5H9 + PXC7H15
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
  dlnkfdT = (35696.6303005228) * invT2;
  // reverse
  phi_r = sc[31] * sc[37];
  Kc = refC * exp(-g_RT[31] - g_RT[37] + g_RT[47]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[47]) + (h_RT[31] + h_RT[37]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[31] += q; // C5H9
  wdot[37] += q; // PXC7H15
  wdot[47] -= q; // C12H24
  // d()/d[C5H9]
  dqdci = -k_r * sc[37];
  J[1705] += dqdci; // dwdot[C5H9]/d[C5H9]
  J[1711] += dqdci; // dwdot[PXC7H15]/d[C5H9]
  J[1721] -= dqdci; // dwdot[C12H24]/d[C5H9]
  // d()/d[PXC7H15]
  dqdci = -k_r * sc[31];
  J[2029] += dqdci; // dwdot[C5H9]/d[PXC7H15]
  J[2035] += dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2045] -= dqdci; // dwdot[C12H24]/d[PXC7H15]
  // d()/d[C12H24]
  dqdci = +k_f;
  J[2569] += dqdci; // dwdot[C5H9]/d[C12H24]
  J[2575] += dqdci; // dwdot[PXC7H15]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2893] += dqdT; // dwdot[C5H9]/dT
  J[2899] += dqdT; // dwdot[PXC7H15]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[43];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[44];
  Kc = refCinv * exp(g_RT[20] + g_RT[43] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[43]) + (h_RT[44]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] -= q; // C2H4
  wdot[43] -= q; // PXC10H21
  wdot[44] += q; // PXC12H25
  // d()/d[C2H4]
  dqdci = +k_f * sc[43];
  J[1100] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[1123] -= dqdci; // dwdot[PXC10H21]/d[C2H4]
  J[1124] += dqdci; // dwdot[PXC12H25]/d[C2H4]
  // d()/d[PXC10H21]
  dqdci = +k_f * sc[20];
  J[2342] -= dqdci; // dwdot[C2H4]/d[PXC10H21]
  J[2365] -= dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  J[2366] += dqdci; // dwdot[PXC12H25]/d[PXC10H21]
  // d()/d[PXC12H25]
  dqdci = -k_r;
  J[2396] -= dqdci; // dwdot[C2H4]/d[PXC12H25]
  J[2419] -= dqdci; // dwdot[PXC10H21]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2882] -= dqdT; // dwdot[C2H4]/dT
  J[2905] -= dqdT; // dwdot[PXC10H21]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 218: PXC12H25 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 3670000000000 * exp(-0.6 * tc[0] - (7246.31998758796) * invT);
  dlnkfdT = -0.6 * invT + (7246.31998758796) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = exp(g_RT[44] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[44]) + (h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[44] -= q; // PXC12H25
  wdot[46] += q; // S3XC12H25
  // d()/d[PXC12H25]
  dqdci = +k_f;
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2422] += dqdci; // dwdot[S3XC12H25]/d[PXC12H25]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2528] -= dqdci; // dwdot[PXC12H25]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[41];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[25] + g_RT[41] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[25] + h_RT[41]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[25] -= q; // C3H6
  wdot[41] -= q; // PXC9H19
  wdot[45] += q; // SXC12H25
  // d()/d[C3H6]
  dqdci = +k_f * sc[41];
  J[1375] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[1391] -= dqdci; // dwdot[PXC9H19]/d[C3H6]
  J[1395] += dqdci; // dwdot[SXC12H25]/d[C3H6]
  // d()/d[PXC9H19]
  dqdci = +k_f * sc[25];
  J[2239] -= dqdci; // dwdot[C3H6]/d[PXC9H19]
  J[2255] -= dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  J[2259] += dqdci; // dwdot[SXC12H25]/d[PXC9H19]
  // d()/d[SXC12H25]
  dqdci = -k_r;
  J[2455] -= dqdci; // dwdot[C3H6]/d[SXC12H25]
  J[2471] -= dqdci; // dwdot[PXC9H19]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2887] -= dqdT; // dwdot[C3H6]/dT
  J[2903] -= dqdT; // dwdot[PXC9H19]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[39];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[29] + g_RT[39] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[29] + h_RT[39]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[29] -= q; // C4H81
  wdot[39] -= q; // PXC8H17
  wdot[45] += q; // SXC12H25
  // d()/d[C4H81]
  dqdci = +k_f * sc[39];
  J[1595] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[1605] -= dqdci; // dwdot[PXC8H17]/d[C4H81]
  J[1611] += dqdci; // dwdot[SXC12H25]/d[C4H81]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[29];
  J[2135] -= dqdci; // dwdot[C4H81]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  J[2151] += dqdci; // dwdot[SXC12H25]/d[PXC8H17]
  // d()/d[SXC12H25]
  dqdci = -k_r;
  J[2459] -= dqdci; // dwdot[C4H81]/d[SXC12H25]
  J[2469] -= dqdci; // dwdot[PXC8H17]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2891] -= dqdT; // dwdot[C4H81]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32] * sc[37];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[32] + g_RT[37] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[32] + h_RT[37]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[32] -= q; // C5H10
  wdot[37] -= q; // PXC7H15
  wdot[46] += q; // S3XC12H25
  // d()/d[C5H10]
  dqdci = +k_f * sc[37];
  J[1760] -= dqdci; // dwdot[C5H10]/d[C5H10]
  J[1765] -= dqdci; // dwdot[PXC7H15]/d[C5H10]
  J[1774] += dqdci; // dwdot[S3XC12H25]/d[C5H10]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[32];
  J[2030] -= dqdci; // dwdot[C5H10]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  J[2044] += dqdci; // dwdot[S3XC12H25]/d[PXC7H15]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2516] -= dqdci; // dwdot[C5H10]/d[S3XC12H25]
  J[2521] -= dqdci; // dwdot[PXC7H15]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2894] -= dqdT; // dwdot[C5H10]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 222: C10H20 + C2H5 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[42];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[21] + g_RT[42] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[42]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[21] -= q; // C2H5
  wdot[42] -= q; // C10H20
  wdot[46] += q; // S3XC12H25
  // d()/d[C2H5]
  dqdci = +k_f * sc[42];
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1176] -= dqdci; // dwdot[C10H20]/d[C2H5]
  J[1180] += dqdci; // dwdot[S3XC12H25]/d[C2H5]
  // d()/d[C10H20]
  dqdci = +k_f * sc[21];
  J[2289] -= dqdci; // dwdot[C2H5]/d[C10H20]
  J[2310] -= dqdci; // dwdot[C10H20]/d[C10H20]
  J[2314] += dqdci; // dwdot[S3XC12H25]/d[C10H20]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2505] -= dqdci; // dwdot[C2H5]/d[S3XC12H25]
  J[2526] -= dqdci; // dwdot[C10H20]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2904] -= dqdT; // dwdot[C10H20]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34] * sc[35];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[34] + g_RT[35] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[34] + h_RT[35]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[34] -= q; // C6H12
  wdot[35] -= q; // PXC6H13
  wdot[46] += q; // S3XC12H25
  // d()/d[C6H12]
  dqdci = +k_f * sc[35];
  J[1870] -= dqdci; // dwdot[C6H12]/d[C6H12]
  J[1871] -= dqdci; // dwdot[PXC6H13]/d[C6H12]
  J[1882] += dqdci; // dwdot[S3XC12H25]/d[C6H12]
  // d()/d[PXC6H13]
  dqdci = +k_f * sc[34];
  J[1924] -= dqdci; // dwdot[C6H12]/d[PXC6H13]
  J[1925] -= dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  J[1936] += dqdci; // dwdot[S3XC12H25]/d[PXC6H13]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2518] -= dqdci; // dwdot[C6H12]/d[S3XC12H25]
  J[2519] -= dqdci; // dwdot[PXC6H13]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2896] -= dqdT; // dwdot[C6H12]/dT
  J[2897] -= dqdT; // dwdot[PXC6H13]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[40];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[26] + g_RT[40] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[40]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[26] -= q; // nC3H7
  wdot[40] -= q; // C9H18
  wdot[46] += q; // S3XC12H25
  // d()/d[nC3H7]
  dqdci = +k_f * sc[40];
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1444] -= dqdci; // dwdot[C9H18]/d[nC3H7]
  J[1450] += dqdci; // dwdot[S3XC12H25]/d[nC3H7]
  // d()/d[C9H18]
  dqdci = +k_f * sc[26];
  J[2186] -= dqdci; // dwdot[nC3H7]/d[C9H18]
  J[2200] -= dqdci; // dwdot[C9H18]/d[C9H18]
  J[2206] += dqdci; // dwdot[S3XC12H25]/d[C9H18]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2510] -= dqdci; // dwdot[nC3H7]/d[S3XC12H25]
  J[2524] -= dqdci; // dwdot[C9H18]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2902] -= dqdT; // dwdot[C9H18]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[36];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[33] + g_RT[36] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33] + h_RT[36]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[33] -= q; // PXC5H11
  wdot[36] -= q; // C7H14
  wdot[46] += q; // S3XC12H25
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[36];
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1818] -= dqdci; // dwdot[C7H14]/d[PXC5H11]
  J[1828] += dqdci; // dwdot[S3XC12H25]/d[PXC5H11]
  // d()/d[C7H14]
  dqdci = +k_f * sc[33];
  J[1977] -= dqdci; // dwdot[PXC5H11]/d[C7H14]
  J[1980] -= dqdci; // dwdot[C7H14]/d[C7H14]
  J[1990] += dqdci; // dwdot[S3XC12H25]/d[C7H14]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2517] -= dqdci; // dwdot[PXC5H11]/d[S3XC12H25]
  J[2520] -= dqdci; // dwdot[C7H14]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2898] -= dqdT; // dwdot[C7H14]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[38];
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // reverse
  phi_r = sc[46];
  Kc = refCinv * exp(g_RT[30] + g_RT[38] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30] + h_RT[38]) + (h_RT[46]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[30] -= q; // pC4H9
  wdot[38] -= q; // C8H16
  wdot[46] += q; // S3XC12H25
  // d()/d[pC4H9]
  dqdci = +k_f * sc[38];
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1658] -= dqdci; // dwdot[C8H16]/d[pC4H9]
  J[1666] += dqdci; // dwdot[S3XC12H25]/d[pC4H9]
  // d()/d[C8H16]
  dqdci = +k_f * sc[30];
  J[2082] -= dqdci; // dwdot[pC4H9]/d[C8H16]
  J[2090] -= dqdci; // dwdot[C8H16]/d[C8H16]
  J[2098] += dqdci; // dwdot[S3XC12H25]/d[C8H16]
  // d()/d[S3XC12H25]
  dqdci = -k_r;
  J[2514] -= dqdci; // dwdot[pC4H9]/d[S3XC12H25]
  J[2522] -= dqdci; // dwdot[C8H16]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2900] -= dqdT; // dwdot[C8H16]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 227: C2H5 + PXC10H21 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[43];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[21] + g_RT[43]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[43]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[21] -= q; // C2H5
  wdot[43] -= q; // PXC10H21
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[21] -= dqdci; // dwdot[C2H5]/d[NC12H26]
  J[43] -= dqdci; // dwdot[PXC10H21]/d[NC12H26]
  // d()/d[C2H5]
  dqdci = +k_f * sc[43];
  J[1134] += dqdci; // dwdot[NC12H26]/d[C2H5]
  J[1155] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[1177] -= dqdci; // dwdot[PXC10H21]/d[C2H5]
  // d()/d[PXC10H21]
  dqdci = +k_f * sc[21];
  J[2322] += dqdci; // dwdot[NC12H26]/d[PXC10H21]
  J[2343] -= dqdci; // dwdot[C2H5]/d[PXC10H21]
  J[2365] -= dqdci; // dwdot[PXC10H21]/d[PXC10H21]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2883] -= dqdT; // dwdot[C2H5]/dT
  J[2905] -= dqdT; // dwdot[PXC10H21]/dT

  // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[41];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[26] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[41]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[26] -= q; // nC3H7
  wdot[41] -= q; // PXC9H19
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[26] -= dqdci; // dwdot[nC3H7]/d[NC12H26]
  J[41] -= dqdci; // dwdot[PXC9H19]/d[NC12H26]
  // d()/d[nC3H7]
  dqdci = +k_f * sc[41];
  J[1404] += dqdci; // dwdot[NC12H26]/d[nC3H7]
  J[1430] -= dqdci; // dwdot[nC3H7]/d[nC3H7]
  J[1445] -= dqdci; // dwdot[PXC9H19]/d[nC3H7]
  // d()/d[PXC9H19]
  dqdci = +k_f * sc[26];
  J[2214] += dqdci; // dwdot[NC12H26]/d[PXC9H19]
  J[2240] -= dqdci; // dwdot[nC3H7]/d[PXC9H19]
  J[2255] -= dqdci; // dwdot[PXC9H19]/d[PXC9H19]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2888] -= dqdT; // dwdot[nC3H7]/dT
  J[2903] -= dqdT; // dwdot[PXC9H19]/dT

  // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[39];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[30] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30] + h_RT[39]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[30] -= q; // pC4H9
  wdot[39] -= q; // PXC8H17
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[30] -= dqdci; // dwdot[pC4H9]/d[NC12H26]
  J[39] -= dqdci; // dwdot[PXC8H17]/d[NC12H26]
  // d()/d[pC4H9]
  dqdci = +k_f * sc[39];
  J[1620] += dqdci; // dwdot[NC12H26]/d[pC4H9]
  J[1650] -= dqdci; // dwdot[pC4H9]/d[pC4H9]
  J[1659] -= dqdci; // dwdot[PXC8H17]/d[pC4H9]
  // d()/d[PXC8H17]
  dqdci = +k_f * sc[30];
  J[2106] += dqdci; // dwdot[NC12H26]/d[PXC8H17]
  J[2136] -= dqdci; // dwdot[pC4H9]/d[PXC8H17]
  J[2145] -= dqdci; // dwdot[PXC8H17]/d[PXC8H17]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2892] -= dqdT; // dwdot[pC4H9]/dT
  J[2901] -= dqdT; // dwdot[PXC8H17]/dT

  // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[37];
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + g_RT[33] + g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33] + h_RT[37]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;  // NC12H26
  wdot[33] -= q; // PXC5H11
  wdot[37] -= q; // PXC7H15
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[33] -= dqdci; // dwdot[PXC5H11]/d[NC12H26]
  J[37] -= dqdci; // dwdot[PXC7H15]/d[NC12H26]
  // d()/d[PXC5H11]
  dqdci = +k_f * sc[37];
  J[1782] += dqdci; // dwdot[NC12H26]/d[PXC5H11]
  J[1815] -= dqdci; // dwdot[PXC5H11]/d[PXC5H11]
  J[1819] -= dqdci; // dwdot[PXC7H15]/d[PXC5H11]
  // d()/d[PXC7H15]
  dqdci = +k_f * sc[33];
  J[1998] += dqdci; // dwdot[NC12H26]/d[PXC7H15]
  J[2031] -= dqdci; // dwdot[PXC5H11]/d[PXC7H15]
  J[2035] -= dqdci; // dwdot[PXC7H15]/d[PXC7H15]
  // d()/dT
  J[2862] += dqdT; // dwdot[NC12H26]/dT
  J[2895] -= dqdT; // dwdot[PXC5H11]/dT
  J[2899] -= dqdT; // dwdot[PXC7H15]/dT

  // reaction 231: 2 PXC6H13 <=> NC12H26
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[35] * sc[35]);
  k_f = 188000000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // reverse
  phi_r = sc[0];
  Kc = refCinv * exp(-g_RT[0] + 2.000000 * g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[35]) + (h_RT[0]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] += q;      // NC12H26
  wdot[35] -= 2 * q; // PXC6H13
  // d()/d[NC12H26]
  dqdci = -k_r;
  J[0] += dqdci;       // dwdot[NC12H26]/d[NC12H26]
  J[35] += -2 * dqdci; // dwdot[PXC6H13]/d[NC12H26]
  // d()/d[PXC6H13]
  dqdci = +k_f * 2.000000 * sc[35];
  J[1890] += dqdci;      // dwdot[NC12H26]/d[PXC6H13]
  J[1925] += -2 * dqdci; // dwdot[PXC6H13]/d[PXC6H13]
  // d()/dT
  J[2862] += dqdT;      // dwdot[NC12H26]/dT
  J[2897] += -2 * dqdT; // dwdot[PXC6H13]/dT

  // reaction 232: H + NC12H26 <=> H2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 1.3 * exp(2.54 * tc[0] - (3399.73179417669) * invT);
  dlnkfdT = 2.54 * invT + (3399.73179417669) * invT2;
  // reverse
  phi_r = sc[5] * sc[44];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci; // dwdot[NC12H26]/d[H]
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[98] += dqdci; // dwdot[PXC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[44];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[314] += dqdci; // dwdot[PXC12H25]/d[H2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[5];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2377] -= dqdci; // dwdot[H]/d[PXC12H25]
  J[2381] += dqdci; // dwdot[H2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 233: H + NC12H26 <=> H2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 2.6 * exp(2.4 * tc[0] - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // reverse
  phi_r = sc[5] * sc[45];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci; // dwdot[NC12H26]/d[H]
  J[55] -= dqdci; // dwdot[H]/d[H]
  J[59] += dqdci; // dwdot[H2]/d[H]
  J[99] += dqdci; // dwdot[SXC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[45];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[315] += dqdci; // dwdot[SXC12H25]/d[H2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[5];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2431] -= dqdci; // dwdot[H]/d[SXC12H25]
  J[2435] += dqdci; // dwdot[H2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 3.9 * exp(2.4 * tc[0] - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // reverse
  phi_r = sc[5] * sc[46];
  Kc = exp(g_RT[0] + g_RT[1] - g_RT[5] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[5] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[1] -= q;  // H
  wdot[5] += q;  // H2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[1];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[1] -= dqdci;  // dwdot[H]/d[NC12H26]
  J[5] += dqdci;  // dwdot[H2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[54] -= dqdci;  // dwdot[NC12H26]/d[H]
  J[55] -= dqdci;  // dwdot[H]/d[H]
  J[59] += dqdci;  // dwdot[H2]/d[H]
  J[100] += dqdci; // dwdot[S3XC12H25]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[46];
  J[270] -= dqdci; // dwdot[NC12H26]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[H2]/d[H2]
  J[316] += dqdci; // dwdot[S3XC12H25]/d[H2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[5];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2485] -= dqdci; // dwdot[H]/d[S3XC12H25]
  J[2489] += dqdci; // dwdot[H2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2863] -= dqdT; // dwdot[H]/dT
  J[2867] += dqdT; // dwdot[H2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 235: NC12H26 + O <=> OH + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.19 * exp(2.68 * tc[0] - (1869.95313013034) * invT);
  dlnkfdT = 2.68 * invT + (1869.95313013034) * invT2;
  // reverse
  phi_r = sc[3] * sc[44];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[152] += dqdci; // dwdot[PXC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[44];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[206] += dqdci; // dwdot[PXC12H25]/d[OH]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[3];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2378] -= dqdci; // dwdot[O]/d[PXC12H25]
  J[2379] += dqdci; // dwdot[OH]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 236: NC12H26 + O <=> OH + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.0952 * exp(2.71 * tc[0] - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // reverse
  phi_r = sc[3] * sc[45];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[153] += dqdci; // dwdot[SXC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[45];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[207] += dqdci; // dwdot[SXC12H25]/d[OH]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[3];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2432] -= dqdci; // dwdot[O]/d[SXC12H25]
  J[2433] += dqdci; // dwdot[OH]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 237: NC12H26 + O <=> OH + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 0.1428 * exp(2.71 * tc[0] - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // reverse
  phi_r = sc[3] * sc[46];
  Kc = exp(g_RT[0] + g_RT[2] - g_RT[3] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[2]) + (h_RT[3] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[2] -= q;  // O
  wdot[3] += q;  // OH
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[2];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[2] -= dqdci;  // dwdot[O]/d[NC12H26]
  J[3] += dqdci;  // dwdot[OH]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[108] -= dqdci; // dwdot[NC12H26]/d[O]
  J[110] -= dqdci; // dwdot[O]/d[O]
  J[111] += dqdci; // dwdot[OH]/d[O]
  J[154] += dqdci; // dwdot[S3XC12H25]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[46];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[164] -= dqdci; // dwdot[O]/d[OH]
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[208] += dqdci; // dwdot[S3XC12H25]/d[OH]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[3];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2486] -= dqdci; // dwdot[O]/d[S3XC12H25]
  J[2487] += dqdci; // dwdot[OH]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2864] -= dqdT; // dwdot[O]/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.0034 * exp(2.66 * tc[0] - (265.195182879087) * invT);
  dlnkfdT = 2.66 * invT + (265.195182879087) * invT2;
  // reverse
  phi_r = sc[6] * sc[44];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[206] += dqdci; // dwdot[PXC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[44];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[368] += dqdci; // dwdot[PXC12H25]/d[H2O]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[6];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2379] -= dqdci; // dwdot[OH]/d[PXC12H25]
  J[2382] += dqdci; // dwdot[H2O]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.074 * exp(2.39 * tc[0] - (197.764149661255) * invT);
  dlnkfdT = 2.39 * invT + (197.764149661255) * invT2;
  // reverse
  phi_r = sc[6] * sc[45];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[207] += dqdci; // dwdot[SXC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[45];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[369] += dqdci; // dwdot[SXC12H25]/d[H2O]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[6];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2433] -= dqdci; // dwdot[OH]/d[SXC12H25]
  J[2436] += dqdci; // dwdot[H2O]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 0.101 * exp(2.39 * tc[0] - (197.764149661255) * invT);
  dlnkfdT = 2.39 * invT + (197.764149661255) * invT2;
  // reverse
  phi_r = sc[6] * sc[46];
  Kc = exp(g_RT[0] + g_RT[3] - g_RT[6] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[6] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[3] -= dqdci;  // dwdot[OH]/d[NC12H26]
  J[6] += dqdci;  // dwdot[H2O]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[162] -= dqdci; // dwdot[NC12H26]/d[OH]
  J[165] -= dqdci; // dwdot[OH]/d[OH]
  J[168] += dqdci; // dwdot[H2O]/d[OH]
  J[208] += dqdci; // dwdot[S3XC12H25]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[46];
  J[324] -= dqdci; // dwdot[NC12H26]/d[H2O]
  J[327] -= dqdci; // dwdot[OH]/d[H2O]
  J[330] += dqdci; // dwdot[H2O]/d[H2O]
  J[370] += dqdci; // dwdot[S3XC12H25]/d[H2O]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[6];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2487] -= dqdci; // dwdot[OH]/d[S3XC12H25]
  J[2490] += dqdci; // dwdot[H2O]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2865] -= dqdT; // dwdot[OH]/dT
  J[2868] += dqdT; // dwdot[H2O]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 40000000 * exp(-(25628.8247894344) * invT);
  dlnkfdT = (25628.8247894344) * invT2;
  // reverse
  phi_r = sc[4] * sc[44];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[44];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] += dqdci; // dwdot[PXC12H25]/d[O2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[4];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2380] += dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 80000000 * exp(-(23948.0811256466) * invT);
  dlnkfdT = (23948.0811256466) * invT2;
  // reverse
  phi_r = sc[4] * sc[45];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[45];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] += dqdci; // dwdot[SXC12H25]/d[O2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[4];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2434] += dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 120000000 * exp(-(23948.0811256466) * invT);
  dlnkfdT = (23948.0811256466) * invT2;
  // reverse
  phi_r = sc[4] * sc[46];
  Kc = exp(g_RT[0] - g_RT[4] + g_RT[8] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[4] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] += dqdci;  // dwdot[HO2]/d[NC12H26]
  J[8] -= dqdci;  // dwdot[O2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = -k_r * sc[46];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] += dqdci; // dwdot[HO2]/d[HO2]
  J[224] -= dqdci; // dwdot[O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[432] -= dqdci; // dwdot[NC12H26]/d[O2]
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] += dqdci; // dwdot[S3XC12H25]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[4];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2488] += dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.0676 * exp(2.55 * tc[0] - (8298.04281911983) * invT);
  dlnkfdT = 2.55 * invT + (8298.04281911983) * invT2;
  // reverse
  phi_r = sc[7] * sc[44];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[44];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[422] += dqdci; // dwdot[PXC12H25]/d[H2O2]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[7];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2380] -= dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2383] += dqdci; // dwdot[H2O2]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.089 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[45];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[45];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[423] += dqdci; // dwdot[SXC12H25]/d[H2O2]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[7];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2434] -= dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2437] += dqdci; // dwdot[H2O2]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.0885 * exp(2.6 * tc[0] - (6999.74382134365) * invT);
  dlnkfdT = 2.6 * invT + (6999.74382134365) * invT2;
  // reverse
  phi_r = sc[7] * sc[46];
  Kc = exp(g_RT[0] + g_RT[4] - g_RT[7] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[4]) + (h_RT[7] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[4] -= q;  // HO2
  wdot[7] += q;  // H2O2
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[4] -= dqdci;  // dwdot[HO2]/d[NC12H26]
  J[7] += dqdci;  // dwdot[H2O2]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[216] -= dqdci; // dwdot[NC12H26]/d[HO2]
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[223] += dqdci; // dwdot[H2O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[46];
  J[378] -= dqdci; // dwdot[NC12H26]/d[H2O2]
  J[382] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[385] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[424] += dqdci; // dwdot[S3XC12H25]/d[H2O2]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[7];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2488] -= dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2491] += dqdci; // dwdot[H2O2]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2869] += dqdT; // dwdot[H2O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 1.81e-06 * exp(3.65 * tc[0] - (3599.50881050116) * invT);
  dlnkfdT = 3.65 * invT + (3599.50881050116) * invT2;
  // reverse
  phi_r = sc[12] * sc[44];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[44] += q; // PXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[44] += dqdci; // dwdot[PXC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[638] += dqdci; // dwdot[PXC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[44];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[692] += dqdci; // dwdot[PXC12H25]/d[CH4]
  // d()/d[PXC12H25]
  dqdci = -k_r * sc[12];
  J[2376] -= dqdci; // dwdot[NC12H26]/d[PXC12H25]
  J[2387] -= dqdci; // dwdot[CH3]/d[PXC12H25]
  J[2388] += dqdci; // dwdot[CH4]/d[PXC12H25]
  J[2420] += dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT

  // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 6e-06 * exp(3.46 * tc[0] - (2757.62732860986) * invT);
  dlnkfdT = 3.46 * invT + (2757.62732860986) * invT2;
  // reverse
  phi_r = sc[12] * sc[45];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[45] += q; // SXC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[45] += dqdci; // dwdot[SXC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[639] += dqdci; // dwdot[SXC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[45];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[693] += dqdci; // dwdot[SXC12H25]/d[CH4]
  // d()/d[SXC12H25]
  dqdci = -k_r * sc[12];
  J[2430] -= dqdci; // dwdot[NC12H26]/d[SXC12H25]
  J[2441] -= dqdci; // dwdot[CH3]/d[SXC12H25]
  J[2442] += dqdci; // dwdot[CH4]/d[SXC12H25]
  J[2475] += dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT

  // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 9e-06 * exp(3.46 * tc[0] - (2757.62732860986) * invT);
  dlnkfdT = 3.46 * invT + (2757.62732860986) * invT2;
  // reverse
  phi_r = sc[12] * sc[46];
  Kc = exp(g_RT[0] + g_RT[11] - g_RT[12] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[12] + h_RT[46]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[0] -= q;  // NC12H26
  wdot[11] -= q; // CH3
  wdot[12] += q; // CH4
  wdot[46] += q; // S3XC12H25
  // d()/d[NC12H26]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[NC12H26]/d[NC12H26]
  J[11] -= dqdci; // dwdot[CH3]/d[NC12H26]
  J[12] += dqdci; // dwdot[CH4]/d[NC12H26]
  J[46] += dqdci; // dwdot[S3XC12H25]/d[NC12H26]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[594] -= dqdci; // dwdot[NC12H26]/d[CH3]
  J[605] -= dqdci; // dwdot[CH3]/d[CH3]
  J[606] += dqdci; // dwdot[CH4]/d[CH3]
  J[640] += dqdci; // dwdot[S3XC12H25]/d[CH3]
  // d()/d[CH4]
  dqdci = -k_r * sc[46];
  J[648] -= dqdci; // dwdot[NC12H26]/d[CH4]
  J[659] -= dqdci; // dwdot[CH3]/d[CH4]
  J[660] += dqdci; // dwdot[CH4]/d[CH4]
  J[694] += dqdci; // dwdot[S3XC12H25]/d[CH4]
  // d()/d[S3XC12H25]
  dqdci = -k_r * sc[12];
  J[2484] -= dqdci; // dwdot[NC12H26]/d[S3XC12H25]
  J[2495] -= dqdci; // dwdot[CH3]/d[S3XC12H25]
  J[2496] += dqdci; // dwdot[CH4]/d[S3XC12H25]
  J[2530] += dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  // d()/dT
  J[2862] -= dqdT; // dwdot[NC12H26]/dT
  J[2873] -= dqdT; // dwdot[CH3]/dT
  J[2874] += dqdT; // dwdot[CH4]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT

  // reaction 250: O2 + PXC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[44];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[44] -= q; // PXC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[44];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] -= dqdci; // dwdot[PXC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[PXC12H25]
  dqdci = +k_f * sc[8];
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2424] += dqdci; // dwdot[C12H25O2]/d[PXC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 251: C12H25O2 => O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[44] += q; // PXC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2636] += dqdci; // dwdot[PXC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 252: O2 + SXC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[45];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[45] -= q; // SXC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[45];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] -= dqdci; // dwdot[SXC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[SXC12H25]
  dqdci = +k_f * sc[8];
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] -= dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  J[2478] += dqdci; // dwdot[C12H25O2]/d[SXC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] -= dqdT; // dwdot[SXC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 253: C12H25O2 => O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[45] += q; // SXC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2637] += dqdci; // dwdot[SXC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 254: O2 + S3XC12H25 => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[46];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[46] -= q; // S3XC12H25
  wdot[48] += q; // C12H25O2
  // d()/d[O2]
  dqdci = +k_f * sc[46];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] -= dqdci; // dwdot[S3XC12H25]/d[O2]
  J[480] += dqdci; // dwdot[C12H25O2]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = +k_f * sc[8];
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] -= dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  J[2532] += dqdci; // dwdot[C12H25O2]/d[S3XC12H25]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] -= dqdT; // dwdot[S3XC12H25]/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT

  // reaction 255: C12H25O2 => O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[46] += q; // S3XC12H25
  wdot[48] -= q; // C12H25O2
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2600] += dqdci; // dwdot[O2]/d[C12H25O2]
  J[2638] += dqdci; // dwdot[S3XC12H25]/d[C12H25O2]
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT

  // reaction 256: C12H25O2 => C12OOH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[48];
  k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[48] -= q; // C12H25O2
  wdot[49] += q; // C12OOH
  // d()/d[C12H25O2]
  dqdci = +k_f;
  J[2640] -= dqdci; // dwdot[C12H25O2]/d[C12H25O2]
  J[2641] += dqdci; // dwdot[C12OOH]/d[C12H25O2]
  // d()/dT
  J[2910] -= dqdT; // dwdot[C12H25O2]/dT
  J[2911] += dqdT; // dwdot[C12OOH]/dT

  // reaction 257: C12OOH => C12H25O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[49];
  k_f = 100000000000 * exp(-(5786.99165675428) * invT);
  dlnkfdT = (5786.99165675428) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[48] += q; // C12H25O2
  wdot[49] -= q; // C12OOH
  // d()/d[C12OOH]
  dqdci = +k_f;
  J[2694] += dqdci; // dwdot[C12H25O2]/d[C12OOH]
  J[2695] -= dqdci; // dwdot[C12OOH]/d[C12OOH]
  // d()/dT
  J[2910] += dqdT; // dwdot[C12H25O2]/dT
  J[2911] -= dqdT; // dwdot[C12OOH]/dT

  // reaction 258: O2 + PXC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[44];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[44] -= q; // PXC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[44];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[476] -= dqdci; // dwdot[PXC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[PXC12H25]
  dqdci = +k_f * sc[8];
  J[2380] += dqdci; // dwdot[HO2]/d[PXC12H25]
  J[2384] -= dqdci; // dwdot[O2]/d[PXC12H25]
  J[2420] -= dqdci; // dwdot[PXC12H25]/d[PXC12H25]
  J[2423] += dqdci; // dwdot[C12H24]/d[PXC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2906] -= dqdT; // dwdot[PXC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 259: C12H24 + HO2 => O2 + PXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[44] += q; // PXC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[260] += dqdci; // dwdot[PXC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2582] += dqdci; // dwdot[PXC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2906] += dqdT; // dwdot[PXC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 260: O2 + SXC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[45];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[45] -= q; // SXC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[45];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[477] -= dqdci; // dwdot[SXC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[SXC12H25]
  dqdci = +k_f * sc[8];
  J[2434] += dqdci; // dwdot[HO2]/d[SXC12H25]
  J[2438] -= dqdci; // dwdot[O2]/d[SXC12H25]
  J[2475] -= dqdci; // dwdot[SXC12H25]/d[SXC12H25]
  J[2477] += dqdci; // dwdot[C12H24]/d[SXC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2907] -= dqdT; // dwdot[SXC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 261: C12H24 + HO2 => O2 + SXC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[45] += q; // SXC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[261] += dqdci; // dwdot[SXC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2583] += dqdci; // dwdot[SXC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2907] += dqdT; // dwdot[SXC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[46];
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // HO2
  wdot[8] -= q;  // O2
  wdot[46] -= q; // S3XC12H25
  wdot[47] += q; // C12H24
  // d()/d[O2]
  dqdci = +k_f * sc[46];
  J[436] += dqdci; // dwdot[HO2]/d[O2]
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[478] -= dqdci; // dwdot[S3XC12H25]/d[O2]
  J[479] += dqdci; // dwdot[C12H24]/d[O2]
  // d()/d[S3XC12H25]
  dqdci = +k_f * sc[8];
  J[2488] += dqdci; // dwdot[HO2]/d[S3XC12H25]
  J[2492] -= dqdci; // dwdot[O2]/d[S3XC12H25]
  J[2530] -= dqdci; // dwdot[S3XC12H25]/d[S3XC12H25]
  J[2531] += dqdci; // dwdot[C12H24]/d[S3XC12H25]
  // d()/dT
  J[2866] += dqdT; // dwdot[HO2]/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2908] -= dqdT; // dwdot[S3XC12H25]/dT
  J[2909] += dqdT; // dwdot[C12H24]/dT

  // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  dlnkfdT = (9812.72498319203) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // HO2
  wdot[8] += q;  // O2
  wdot[46] += q; // S3XC12H25
  wdot[47] -= q; // C12H24
  // d()/d[HO2]
  dqdci = +k_f * sc[47];
  J[220] -= dqdci; // dwdot[HO2]/d[HO2]
  J[224] += dqdci; // dwdot[O2]/d[HO2]
  J[262] += dqdci; // dwdot[S3XC12H25]/d[HO2]
  J[263] -= dqdci; // dwdot[C12H24]/d[HO2]
  // d()/d[C12H24]
  dqdci = +k_f * sc[4];
  J[2542] -= dqdci; // dwdot[HO2]/d[C12H24]
  J[2546] += dqdci; // dwdot[O2]/d[C12H24]
  J[2584] += dqdci; // dwdot[S3XC12H25]/d[C12H24]
  J[2585] -= dqdci; // dwdot[C12H24]/d[C12H24]
  // d()/dT
  J[2866] -= dqdT; // dwdot[HO2]/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2908] += dqdT; // dwdot[S3XC12H25]/dT
  J[2909] -= dqdT; // dwdot[C12H24]/dT

  // reaction 264: C12OOH + O2 => O2C12H24OOH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[49];
  k_f = 46000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[49] -= q; // C12OOH
  wdot[50] += q; // O2C12H24OOH
  // d()/d[O2]
  dqdci = +k_f * sc[49];
  J[440] -= dqdci; // dwdot[O2]/d[O2]
  J[481] -= dqdci; // dwdot[C12OOH]/d[O2]
  J[482] += dqdci; // dwdot[O2C12H24OOH]/d[O2]
  // d()/d[C12OOH]
  dqdci = +k_f * sc[8];
  J[2654] -= dqdci; // dwdot[O2]/d[C12OOH]
  J[2695] -= dqdci; // dwdot[C12OOH]/d[C12OOH]
  J[2696] += dqdci; // dwdot[O2C12H24OOH]/d[C12OOH]
  // d()/dT
  J[2870] -= dqdT; // dwdot[O2]/dT
  J[2911] -= dqdT; // dwdot[C12OOH]/dT
  J[2912] += dqdT; // dwdot[O2C12H24OOH]/dT

  // reaction 265: O2C12H24OOH => C12OOH + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[50];
  k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
  dlnkfdT = (13788.1366430493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[49] += q; // C12OOH
  wdot[50] -= q; // O2C12H24OOH
  // d()/d[O2C12H24OOH]
  dqdci = +k_f;
  J[2708] += dqdci; // dwdot[O2]/d[O2C12H24OOH]
  J[2749] += dqdci; // dwdot[C12OOH]/d[O2C12H24OOH]
  J[2750] -= dqdci; // dwdot[O2C12H24OOH]/d[O2C12H24OOH]
  // d()/dT
  J[2870] += dqdT; // dwdot[O2]/dT
  J[2911] += dqdT; // dwdot[C12OOH]/dT
  J[2912] -= dqdT; // dwdot[O2C12H24OOH]/dT

  // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[50];
  k_f = 89000000000 * exp(-(8554.68331868023) * invT);
  dlnkfdT = (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[3] * sc[51];
  Kc = refC * exp(-g_RT[3] + g_RT[50] - g_RT[51]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[50]) + (h_RT[3] + h_RT[51]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // OH
  wdot[50] -= q; // O2C12H24OOH
  wdot[51] += q; // OC12H23OOH
  // d()/d[OH]
  dqdci = -k_r * sc[51];
  J[165] += dqdci; // dwdot[OH]/d[OH]
  J[212] -= dqdci; // dwdot[O2C12H24OOH]/d[OH]
  J[213] += dqdci; // dwdot[OC12H23OOH]/d[OH]
  // d()/d[O2C12H24OOH]
  dqdci = +k_f;
  J[2703] += dqdci; // dwdot[OH]/d[O2C12H24OOH]
  J[2750] -= dqdci; // dwdot[O2C12H24OOH]/d[O2C12H24OOH]
  J[2751] += dqdci; // dwdot[OC12H23OOH]/d[O2C12H24OOH]
  // d()/d[OC12H23OOH]
  dqdci = -k_r * sc[3];
  J[2757] += dqdci; // dwdot[OH]/d[OC12H23OOH]
  J[2804] -= dqdci; // dwdot[O2C12H24OOH]/d[OC12H23OOH]
  J[2805] += dqdci; // dwdot[OC12H23OOH]/d[OC12H23OOH]
  // d()/dT
  J[2865] += dqdT; // dwdot[OH]/dT
  J[2912] -= dqdT; // dwdot[O2C12H24OOH]/dT
  J[2913] += dqdT; // dwdot[OC12H23OOH]/dT

  // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[51];
  k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
  dlnkfdT = (21167.8090470755) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // OH
  wdot[20] += 3 * q; // C2H4
  wdot[21] += q;     // C2H5
  wdot[23] += 2 * q; // CH2CHO
  wdot[51] -= q;     // OC12H23OOH
  // d()/d[OC12H23OOH]
  dqdci = +k_f;
  J[2757] += dqdci;     // dwdot[OH]/d[OC12H23OOH]
  J[2774] += 3 * dqdci; // dwdot[C2H4]/d[OC12H23OOH]
  J[2775] += dqdci;     // dwdot[C2H5]/d[OC12H23OOH]
  J[2777] += 2 * dqdci; // dwdot[CH2CHO]/d[OC12H23OOH]
  J[2805] -= dqdci;     // dwdot[OC12H23OOH]/d[OC12H23OOH]
  // d()/dT
  J[2865] += dqdT;     // dwdot[OH]/dT
  J[2882] += 3 * dqdT; // dwdot[C2H4]/dT
  J[2883] += dqdT;     // dwdot[C2H5]/dT
  J[2885] += 2 * dqdT; // dwdot[CH2CHO]/dT
  J[2913] -= dqdT;     // dwdot[OC12H23OOH]/dT

  amrex::Real c_R[53], dcRdT[53], e_RT[53];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 53; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[2862 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 53; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 53; ++m) {
      dehmixdc += eh_RT[m] * J[k * 54 + m];
    }
    J[k * 54 + 53] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[2915] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[53];

  for (int k = 0; k < 53; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 53; k++) {
    J[2862 + k] *= 1.e-6;
    J[k * 54 + 53] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 214;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 55226;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 53;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 1.70340000E+02;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 1.70070000E+01;
  WT[4] = 3.30060000E+01;
  WT[5] = 2.01600000E+00;
  WT[6] = 1.80150000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 3.19980000E+01;
  WT[9] = 1.40270000E+01;
  WT[10] = 1.40270000E+01;
  WT[11] = 1.50350000E+01;
  WT[12] = 1.60430000E+01;
  WT[13] = 2.90180000E+01;
  WT[14] = 3.00260000E+01;
  WT[15] = 3.10340000E+01;
  WT[16] = 2.80100000E+01;
  WT[17] = 4.40090000E+01;
  WT[18] = 2.60380000E+01;
  WT[19] = 2.70460000E+01;
  WT[20] = 2.80540000E+01;
  WT[21] = 2.90620000E+01;
  WT[22] = 3.00700000E+01;
  WT[23] = 4.30450000E+01;
  WT[24] = 4.10730000E+01;
  WT[25] = 4.20810000E+01;
  WT[26] = 4.30890000E+01;
  WT[27] = 5.60640000E+01;
  WT[28] = 5.51000000E+01;
  WT[29] = 5.61080000E+01;
  WT[30] = 5.71160000E+01;
  WT[31] = 6.91270000E+01;
  WT[32] = 7.01350000E+01;
  WT[33] = 7.11430000E+01;
  WT[34] = 8.41620000E+01;
  WT[35] = 8.51700000E+01;
  WT[36] = 9.81890000E+01;
  WT[37] = 9.91970000E+01;
  WT[38] = 1.12216000E+02;
  WT[39] = 1.13224000E+02;
  WT[40] = 1.26243000E+02;
  WT[41] = 1.27251000E+02;
  WT[42] = 1.40270000E+02;
  WT[43] = 1.41278000E+02;
  WT[44] = 1.69332000E+02;
  WT[45] = 1.69332000E+02;
  WT[46] = 1.69332000E+02;
  WT[47] = 1.68324000E+02;
  WT[48] = 2.01330000E+02;
  WT[49] = 2.01330000E+02;
  WT[50] = 2.33328000E+02;
  WT[51] = 2.16321000E+02;
  WT[52] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 7.89980000E+02;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 8.00000000E+01;
  EPS[4] = 1.07400000E+02;
  EPS[5] = 3.80000000E+01;
  EPS[6] = 5.72400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.07400000E+02;
  EPS[9] = 1.44000000E+02;
  EPS[10] = 1.44000000E+02;
  EPS[11] = 1.44000000E+02;
  EPS[12] = 1.41400000E+02;
  EPS[13] = 4.98000000E+02;
  EPS[14] = 4.98000000E+02;
  EPS[15] = 4.17000000E+02;
  EPS[16] = 9.81000000E+01;
  EPS[17] = 2.44000000E+02;
  EPS[18] = 2.09000000E+02;
  EPS[19] = 2.09000000E+02;
  EPS[20] = 2.80800000E+02;
  EPS[21] = 2.52300000E+02;
  EPS[22] = 2.52300000E+02;
  EPS[23] = 4.36000000E+02;
  EPS[24] = 2.66800000E+02;
  EPS[25] = 2.66800000E+02;
  EPS[26] = 2.66800000E+02;
  EPS[27] = 3.57000000E+02;
  EPS[28] = 3.57000000E+02;
  EPS[29] = 3.57000000E+02;
  EPS[30] = 3.57000000E+02;
  EPS[31] = 4.48508000E+02;
  EPS[32] = 4.48508000E+02;
  EPS[33] = 4.58182000E+02;
  EPS[34] = 5.04629000E+02;
  EPS[35] = 5.12225000E+02;
  EPS[36] = 5.57947000E+02;
  EPS[37] = 5.64030000E+02;
  EPS[38] = 6.08488000E+02;
  EPS[39] = 6.13127000E+02;
  EPS[40] = 6.55390000E+02;
  EPS[41] = 6.60032000E+02;
  EPS[42] = 6.98122000E+02;
  EPS[43] = 7.04917000E+02;
  EPS[44] = 7.89980000E+02;
  EPS[45] = 7.89980000E+02;
  EPS[46] = 7.89980000E+02;
  EPS[47] = 7.75294000E+02;
  EPS[48] = 8.05031000E+02;
  EPS[49] = 8.05031000E+02;
  EPS[50] = 8.77052000E+02;
  EPS[51] = 8.39348000E+02;
  EPS[52] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 7.04700000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 2.75000000E+00;
  SIG[4] = 3.45800000E+00;
  SIG[5] = 2.92000000E+00;
  SIG[6] = 2.60500000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.45800000E+00;
  SIG[9] = 3.80000000E+00;
  SIG[10] = 3.80000000E+00;
  SIG[11] = 3.80000000E+00;
  SIG[12] = 3.74600000E+00;
  SIG[13] = 3.59000000E+00;
  SIG[14] = 3.59000000E+00;
  SIG[15] = 3.69000000E+00;
  SIG[16] = 3.65000000E+00;
  SIG[17] = 3.76300000E+00;
  SIG[18] = 4.10000000E+00;
  SIG[19] = 4.10000000E+00;
  SIG[20] = 3.97100000E+00;
  SIG[21] = 4.30200000E+00;
  SIG[22] = 4.30200000E+00;
  SIG[23] = 3.97000000E+00;
  SIG[24] = 4.98200000E+00;
  SIG[25] = 4.98200000E+00;
  SIG[26] = 4.98200000E+00;
  SIG[27] = 5.17600000E+00;
  SIG[28] = 5.17600000E+00;
  SIG[29] = 5.17600000E+00;
  SIG[30] = 5.17600000E+00;
  SIG[31] = 5.34200000E+00;
  SIG[32] = 5.34200000E+00;
  SIG[33] = 5.44500000E+00;
  SIG[34] = 5.62800000E+00;
  SIG[35] = 5.74200000E+00;
  SIG[36] = 5.87600000E+00;
  SIG[37] = 6.00400000E+00;
  SIG[38] = 6.10000000E+00;
  SIG[39] = 6.25000000E+00;
  SIG[40] = 6.33100000E+00;
  SIG[41] = 6.46700000E+00;
  SIG[42] = 6.57800000E+00;
  SIG[43] = 6.67500000E+00;
  SIG[44] = 7.04700000E+00;
  SIG[45] = 7.04700000E+00;
  SIG[46] = 7.04700000E+00;
  SIG[47] = 7.09000000E+00;
  SIG[48] = 7.10200000E+00;
  SIG[49] = 7.10200000E+00;
  SIG[50] = 7.45700000E+00;
  SIG[51] = 7.27300000E+00;
  SIG[52] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 1.84400000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 1.70000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 0.00000000E+00;
  DIP[34] = 0.00000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 0.00000000E+00;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 0.00000000E+00;
  DIP[39] = 0.00000000E+00;
  DIP[40] = 0.00000000E+00;
  DIP[41] = 0.00000000E+00;
  DIP[42] = 0.00000000E+00;
  DIP[43] = 0.00000000E+00;
  DIP[44] = 0.00000000E+00;
  DIP[45] = 0.00000000E+00;
  DIP[46] = 0.00000000E+00;
  DIP[47] = 0.00000000E+00;
  DIP[48] = 0.00000000E+00;
  DIP[49] = 0.00000000E+00;
  DIP[50] = 0.00000000E+00;
  DIP[51] = 0.00000000E+00;
  DIP[52] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 7.90000000E-01;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 1.60000000E+00;
  POL[9] = 0.00000000E+00;
  POL[10] = 0.00000000E+00;
  POL[11] = 0.00000000E+00;
  POL[12] = 2.60000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 1.95000000E+00;
  POL[17] = 2.65000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
  POL[34] = 0.00000000E+00;
  POL[35] = 0.00000000E+00;
  POL[36] = 0.00000000E+00;
  POL[37] = 0.00000000E+00;
  POL[38] = 0.00000000E+00;
  POL[39] = 0.00000000E+00;
  POL[40] = 0.00000000E+00;
  POL[41] = 0.00000000E+00;
  POL[42] = 0.00000000E+00;
  POL[43] = 0.00000000E+00;
  POL[44] = 0.00000000E+00;
  POL[45] = 0.00000000E+00;
  POL[46] = 0.00000000E+00;
  POL[47] = 0.00000000E+00;
  POL[48] = 0.00000000E+00;
  POL[49] = 0.00000000E+00;
  POL[50] = 0.00000000E+00;
  POL[51] = 0.00000000E+00;
  POL[52] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 1.00000000E+00;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 0.00000000E+00;
  ZROT[4] = 1.00000000E+00;
  ZROT[5] = 2.80000000E+02;
  ZROT[6] = 4.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 3.80000000E+00;
  ZROT[9] = 0.00000000E+00;
  ZROT[10] = 0.00000000E+00;
  ZROT[11] = 0.00000000E+00;
  ZROT[12] = 1.30000000E+01;
  ZROT[13] = 0.00000000E+00;
  ZROT[14] = 2.00000000E+00;
  ZROT[15] = 2.00000000E+00;
  ZROT[16] = 1.80000000E+00;
  ZROT[17] = 2.10000000E+00;
  ZROT[18] = 2.50000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.50000000E+00;
  ZROT[21] = 1.50000000E+00;
  ZROT[22] = 1.50000000E+00;
  ZROT[23] = 2.00000000E+00;
  ZROT[24] = 1.00000000E+00;
  ZROT[25] = 1.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
  ZROT[34] = 1.00000000E+00;
  ZROT[35] = 1.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 1.00000000E+00;
  ZROT[38] = 1.00000000E+00;
  ZROT[39] = 1.00000000E+00;
  ZROT[40] = 1.00000000E+00;
  ZROT[41] = 1.00000000E+00;
  ZROT[42] = 1.00000000E+00;
  ZROT[43] = 1.00000000E+00;
  ZROT[44] = 1.00000000E+00;
  ZROT[45] = 1.00000000E+00;
  ZROT[46] = 1.00000000E+00;
  ZROT[47] = 1.00000000E+00;
  ZROT[48] = 1.00000000E+00;
  ZROT[49] = 1.00000000E+00;
  ZROT[50] = 1.00000000E+00;
  ZROT[51] = 1.00000000E+00;
  ZROT[52] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 2;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 2;
  NLIN[5] = 1;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 1;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 2;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 1;
  NLIN[17] = 1;
  NLIN[18] = 1;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 2;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 2;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 2;
  NLIN[38] = 2;
  NLIN[39] = 2;
  NLIN[40] = 2;
  NLIN[41] = 2;
  NLIN[42] = 2;
  NLIN[43] = 2;
  NLIN[44] = 2;
  NLIN[45] = 2;
  NLIN[46] = 2;
  NLIN[47] = 2;
  NLIN[48] = 2;
  NLIN[49] = 2;
  NLIN[50] = 2;
  NLIN[51] = 2;
  NLIN[52] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -7.22654243E+00;
  COFETA[1] = -3.12842246E+00;
  COFETA[2] = 6.69477571E-01;
  COFETA[3] = -3.60312934E-02;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.50620876E+01;
  COFETA[13] = 1.92606504E+00;
  COFETA[14] = -1.73487476E-01;
  COFETA[15] = 7.82572931E-03;
  COFETA[16] = -1.71463359E+01;
  COFETA[17] = 2.68036374E+00;
  COFETA[18] = -2.72570227E-01;
  COFETA[19] = 1.21650964E-02;
  COFETA[20] = -1.38347555E+01;
  COFETA[21] = 1.00106621E+00;
  COFETA[22] = -4.98105694E-02;
  COFETA[23] = 2.31450475E-03;
  COFETA[24] = -1.05420930E+01;
  COFETA[25] = -1.37777266E+00;
  COFETA[26] = 4.20502561E-01;
  COFETA[27] = -2.40627344E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -1.71618439E+01;
  COFETA[33] = 2.68036374E+00;
  COFETA[34] = -2.72570227E-01;
  COFETA[35] = 1.21650964E-02;
  COFETA[36] = -2.02663506E+01;
  COFETA[37] = 3.63241793E+00;
  COFETA[38] = -3.95581049E-01;
  COFETA[39] = 1.74725495E-02;
  COFETA[40] = -2.02663506E+01;
  COFETA[41] = 3.63241793E+00;
  COFETA[42] = -3.95581049E-01;
  COFETA[43] = 1.74725495E-02;
  COFETA[44] = -2.02316522E+01;
  COFETA[45] = 3.63241793E+00;
  COFETA[46] = -3.95581049E-01;
  COFETA[47] = 1.74725495E-02;
  COFETA[48] = -2.00094678E+01;
  COFETA[49] = 3.57220167E+00;
  COFETA[50] = -3.87936446E-01;
  COFETA[51] = 1.71483254E-02;
  COFETA[52] = -1.98501400E+01;
  COFETA[53] = 2.69480162E+00;
  COFETA[54] = -1.65880845E-01;
  COFETA[55] = 3.14504769E-03;
  COFETA[56] = -1.98330663E+01;
  COFETA[57] = 2.69480162E+00;
  COFETA[58] = -1.65880845E-01;
  COFETA[59] = 3.14504769E-03;
  COFETA[60] = -1.99945964E+01;
  COFETA[61] = 2.86923161E+00;
  COFETA[62] = -2.03325438E-01;
  COFETA[63] = 5.39055928E-03;
  COFETA[64] = -1.66188439E+01;
  COFETA[65] = 2.40307799E+00;
  COFETA[66] = -2.36167638E-01;
  COFETA[67] = 1.05714061E-02;
  COFETA[68] = -2.40015087E+01;
  COFETA[69] = 5.14359547E+00;
  COFETA[70] = -5.74269731E-01;
  COFETA[71] = 2.44937679E-02;
  COFETA[72] = -2.33666497E+01;
  COFETA[73] = 4.80350223E+00;
  COFETA[74] = -5.38341336E-01;
  COFETA[75] = 2.32747213E-02;
  COFETA[76] = -2.33476586E+01;
  COFETA[77] = 4.80350223E+00;
  COFETA[78] = -5.38341336E-01;
  COFETA[79] = 2.32747213E-02;
  COFETA[80] = -2.50655480E+01;
  COFETA[81] = 5.33982977E+00;
  COFETA[82] = -5.89982992E-01;
  COFETA[83] = 2.47780650E-02;
  COFETA[84] = -2.46581444E+01;
  COFETA[85] = 5.19497183E+00;
  COFETA[86] = -5.78827339E-01;
  COFETA[87] = 2.46050921E-02;
  COFETA[88] = -2.46410962E+01;
  COFETA[89] = 5.19497183E+00;
  COFETA[90] = -5.78827339E-01;
  COFETA[91] = 2.46050921E-02;
  COFETA[92] = -2.23277248E+01;
  COFETA[93] = 3.86433912E+00;
  COFETA[94] = -3.41553983E-01;
  COFETA[95] = 1.17083447E-02;
  COFETA[96] = -2.51527894E+01;
  COFETA[97] = 5.30723075E+00;
  COFETA[98] = -5.89742369E-01;
  COFETA[99] = 2.49294033E-02;
  COFETA[100] = -2.51406667E+01;
  COFETA[101] = 5.30723075E+00;
  COFETA[102] = -5.89742369E-01;
  COFETA[103] = 2.49294033E-02;
  COFETA[104] = -2.51288310E+01;
  COFETA[105] = 5.30723075E+00;
  COFETA[106] = -5.89742369E-01;
  COFETA[107] = 2.49294033E-02;
  COFETA[108] = -2.48320190E+01;
  COFETA[109] = 4.94595777E+00;
  COFETA[110] = -5.12278955E-01;
  COFETA[111] = 2.03286378E-02;
  COFETA[112] = -2.48406911E+01;
  COFETA[113] = 4.94595777E+00;
  COFETA[114] = -5.12278955E-01;
  COFETA[115] = 2.03286378E-02;
  COFETA[116] = -2.48316268E+01;
  COFETA[117] = 4.94595777E+00;
  COFETA[118] = -5.12278955E-01;
  COFETA[119] = 2.03286378E-02;
  COFETA[120] = -2.48227238E+01;
  COFETA[121] = 4.94595777E+00;
  COFETA[122] = -5.12278955E-01;
  COFETA[123] = 2.03286378E-02;
  COFETA[124] = -2.22556509E+01;
  COFETA[125] = 3.65583269E+00;
  COFETA[126] = -3.09681973E-01;
  COFETA[127] = 1.01347367E-02;
  COFETA[128] = -2.22484126E+01;
  COFETA[129] = 3.65583269E+00;
  COFETA[130] = -3.09681973E-01;
  COFETA[131] = 1.01347367E-02;
  COFETA[132] = -2.19322289E+01;
  COFETA[133] = 3.48897410E+00;
  COFETA[134] = -2.84377864E-01;
  COFETA[135] = 8.89324498E-03;
  COFETA[136] = -1.99265616E+01;
  COFETA[137] = 2.56014100E+00;
  COFETA[138] = -1.45913962E-01;
  COFETA[139] = 2.18129625E-03;
  COFETA[140] = -1.96569708E+01;
  COFETA[141] = 2.41855186E+00;
  COFETA[142] = -1.24877755E-01;
  COFETA[143] = 1.16540274E-03;
  COFETA[144] = -1.75766508E+01;
  COFETA[145] = 1.47718088E+00;
  COFETA[146] = 1.33842258E-02;
  COFETA[147] = -5.45446078E-03;
  COFETA[148] = -1.73468431E+01;
  COFETA[149] = 1.35581760E+00;
  COFETA[150] = 3.10490906E-02;
  COFETA[151] = -6.29338984E-03;
  COFETA[152] = -1.51262729E+01;
  COFETA[153] = 3.71381902E-01;
  COFETA[154] = 1.73700335E-01;
  COFETA[155] = -1.30510322E-02;
  COFETA[156] = -1.49620051E+01;
  COFETA[157] = 2.77866813E-01;
  COFETA[158] = 1.87211872E-01;
  COFETA[159] = -1.36887803E-02;
  COFETA[160] = -1.29964204E+01;
  COFETA[161] = -5.82992847E-01;
  COFETA[162] = 3.10614522E-01;
  COFETA[163] = -1.94724805E-02;
  COFETA[164] = -1.28241860E+01;
  COFETA[165] = -6.75983155E-01;
  COFETA[166] = 3.23857491E-01;
  COFETA[167] = -2.00893320E-02;
  COFETA[168] = -1.10600854E+01;
  COFETA[169] = -1.44434970E+00;
  COFETA[170] = 4.32898375E-01;
  COFETA[171] = -2.51531493E-02;
  COFETA[172] = -1.07824880E+01;
  COFETA[173] = -1.57700426E+00;
  COFETA[174] = 4.51648325E-01;
  COFETA[175] = -2.60205017E-02;
  COFETA[176] = -7.22951000E+00;
  COFETA[177] = -3.12842246E+00;
  COFETA[178] = 6.69477571E-01;
  COFETA[179] = -3.60312934E-02;
  COFETA[180] = -7.22951000E+00;
  COFETA[181] = -3.12842246E+00;
  COFETA[182] = 6.69477571E-01;
  COFETA[183] = -3.60312934E-02;
  COFETA[184] = -7.22951000E+00;
  COFETA[185] = -3.12842246E+00;
  COFETA[186] = 6.69477571E-01;
  COFETA[187] = -3.60312934E-02;
  COFETA[188] = -7.82458198E+00;
  COFETA[189] = -2.87790249E+00;
  COFETA[190] = 6.34514847E-01;
  COFETA[191] = -3.44344136E-02;
  COFETA[192] = -6.55009863E+00;
  COFETA[193] = -3.39070398E+00;
  COFETA[194] = 7.06046571E-01;
  COFETA[195] = -3.77010172E-02;
  COFETA[196] = -6.55009863E+00;
  COFETA[197] = -3.39070398E+00;
  COFETA[198] = 7.06046571E-01;
  COFETA[199] = -3.77010172E-02;
  COFETA[200] = -3.80205440E+00;
  COFETA[201] = -4.57587026E+00;
  COFETA[202] = 8.69949675E-01;
  COFETA[203] = -4.51239454E-02;
  COFETA[204] = -5.21188020E+00;
  COFETA[205] = -3.96972532E+00;
  COFETA[206] = 7.86375770E-01;
  COFETA[207] = -4.13504402E-02;
  COFETA[208] = -1.65695492E+01;
  COFETA[209] = 2.39056562E+00;
  COFETA[210] = -2.34558144E-01;
  COFETA[211] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = -9.35546056E+00;
  COFLAM[1] = 3.31628813E+00;
  COFLAM[2] = -1.07145282E-02;
  COFLAM[3] = -1.24086090E-02;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = 1.50119775E+01;
  COFLAM[13] = -3.63267617E+00;
  COFLAM[14] = 5.92838774E-01;
  COFLAM[15] = -2.62920291E-02;
  COFLAM[16] = -1.12959874E+00;
  COFLAM[17] = 2.34014328E+00;
  COFLAM[18] = -1.63245076E-01;
  COFLAM[19] = 5.80319843E-03;
  COFLAM[20] = 9.24082480E+00;
  COFLAM[21] = -4.69567526E-01;
  COFLAM[22] = 1.15980102E-01;
  COFLAM[23] = -2.61033156E-03;
  COFLAM[24] = 2.33729836E+01;
  COFLAM[25] = -8.96536178E+00;
  COFLAM[26] = 1.52828630E+00;
  COFLAM[27] = -7.58551616E-02;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = -1.93717634E+00;
  COFLAM[33] = 2.89110257E+00;
  COFLAM[34] = -2.71096988E-01;
  COFLAM[35] = 1.15344939E-02;
  COFLAM[36] = 1.29177889E+01;
  COFLAM[37] = -3.73745368E+00;
  COFLAM[38] = 7.15830762E-01;
  COFLAM[39] = -3.63846782E-02;
  COFLAM[40] = 1.89383237E+01;
  COFLAM[41] = -6.51017886E+00;
  COFLAM[42] = 1.13292023E+00;
  COFLAM[43] = -5.69603041E-02;
  COFLAM[44] = 1.39937895E+01;
  COFLAM[45] = -4.64256403E+00;
  COFLAM[46] = 9.07728510E-01;
  COFLAM[47] = -4.77274380E-02;
  COFLAM[48] = 1.33091614E+01;
  COFLAM[49] = -4.96140250E+00;
  COFLAM[50] = 1.03295495E+00;
  COFLAM[51] = -5.63420011E-02;
  COFLAM[52] = 6.30244184E+00;
  COFLAM[53] = -2.22810729E+00;
  COFLAM[54] = 6.37340380E-01;
  COFLAM[55] = -3.81055943E-02;
  COFLAM[56] = 5.39305623E+00;
  COFLAM[57] = -2.39312259E+00;
  COFLAM[58] = 7.39585006E-01;
  COFLAM[59] = -4.58435469E-02;
  COFLAM[60] = -1.10587028E+01;
  COFLAM[61] = 4.78793775E+00;
  COFLAM[62] = -2.82998801E-01;
  COFLAM[63] = 2.34922792E-03;
  COFLAM[64] = 1.18777275E+01;
  COFLAM[65] = -3.15463597E+00;
  COFLAM[66] = 6.01972754E-01;
  COFLAM[67] = -3.03211015E-02;
  COFLAM[68] = -1.13649201E+01;
  COFLAM[69] = 5.88177354E+00;
  COFLAM[70] = -5.68651792E-01;
  COFLAM[71] = 2.03561484E-02;
  COFLAM[72] = -7.70164041E+00;
  COFLAM[73] = 4.56884430E+00;
  COFLAM[74] = -4.04747578E-01;
  COFLAM[75] = 1.40841066E-02;
  COFLAM[76] = -9.10383958E+00;
  COFLAM[77] = 4.54798776E+00;
  COFLAM[78] = -3.18114363E-01;
  COFLAM[79] = 6.59577260E-03;
  COFLAM[80] = -1.46152767E+01;
  COFLAM[81] = 6.36251222E+00;
  COFLAM[82] = -5.03831917E-01;
  COFLAM[83] = 1.26120967E-02;
  COFLAM[84] = -8.95009242E+00;
  COFLAM[85] = 4.02514973E+00;
  COFLAM[86] = -1.84063835E-01;
  COFLAM[87] = -1.94055121E-03;
  COFLAM[88] = -1.09902158E+01;
  COFLAM[89] = 4.70647555E+00;
  COFLAM[90] = -2.52272322E-01;
  COFLAM[91] = 1.75186734E-04;
  COFLAM[92] = -6.27424897E+00;
  COFLAM[93] = 2.90471284E+00;
  COFLAM[94] = -4.35144336E-02;
  COFLAM[95] = -7.77922743E-03;
  COFLAM[96] = -2.14189910E+01;
  COFLAM[97] = 9.40840962E+00;
  COFLAM[98] = -9.66247319E-01;
  COFLAM[99] = 3.55085303E-02;
  COFLAM[100] = -1.70514626E+01;
  COFLAM[101] = 7.35906672E+00;
  COFLAM[102] = -6.52820712E-01;
  COFLAM[103] = 1.99982085E-02;
  COFLAM[104] = -1.92766749E+01;
  COFLAM[105] = 8.39485888E+00;
  COFLAM[106] = -8.05424342E-01;
  COFLAM[107] = 2.74026959E-02;
  COFLAM[108] = -1.81837054E+01;
  COFLAM[109] = 7.64582536E+00;
  COFLAM[110] = -6.80296906E-01;
  COFLAM[111] = 2.04082640E-02;
  COFLAM[112] = -1.65417594E+01;
  COFLAM[113] = 7.11744311E+00;
  COFLAM[114] = -6.16669095E-01;
  COFLAM[115] = 1.81367161E-02;
  COFLAM[116] = -1.45831859E+01;
  COFLAM[117] = 5.90742404E+00;
  COFLAM[118] = -3.94364795E-01;
  COFLAM[119] = 5.56233024E-03;
  COFLAM[120] = -1.62374294E+01;
  COFLAM[121] = 6.87635366E+00;
  COFLAM[122] = -5.62962535E-01;
  COFLAM[123] = 1.48812369E-02;
  COFLAM[124] = -3.46263100E+01;
  COFLAM[125] = 1.40704427E+01;
  COFLAM[126] = -1.51405261E+00;
  COFLAM[127] = 5.69632846E-02;
  COFLAM[128] = -1.86689184E+01;
  COFLAM[129] = 7.65011301E+00;
  COFLAM[130] = -6.46093077E-01;
  COFLAM[131] = 1.78356522E-02;
  COFLAM[132] = -1.56987029E+01;
  COFLAM[133] = 6.38346139E+00;
  COFLAM[134] = -4.67022472E-01;
  COFLAM[135] = 9.45809671E-03;
  COFLAM[136] = -1.75774950E+01;
  COFLAM[137] = 7.09949666E+00;
  COFLAM[138] = -5.61324023E-01;
  COFLAM[139] = 1.36473771E-02;
  COFLAM[140] = -1.50329303E+01;
  COFLAM[141] = 6.01368403E+00;
  COFLAM[142] = -4.08151435E-01;
  COFLAM[143] = 6.49488834E-03;
  COFLAM[144] = -1.64736860E+01;
  COFLAM[145] = 6.56030958E+00;
  COFLAM[146] = -4.79947764E-01;
  COFLAM[147] = 9.69177111E-03;
  COFLAM[148] = -1.42175046E+01;
  COFLAM[149] = 5.59741943E+00;
  COFLAM[150] = -3.44531069E-01;
  COFLAM[151] = 3.38519857E-03;
  COFLAM[152] = -1.49547457E+01;
  COFLAM[153] = 5.85879159E+00;
  COFLAM[154] = -3.77230053E-01;
  COFLAM[155] = 4.79861804E-03;
  COFLAM[156] = -1.30829890E+01;
  COFLAM[157] = 5.05548460E+00;
  COFLAM[158] = -2.64260762E-01;
  COFLAM[159] = -4.62857398E-04;
  COFLAM[160] = -1.37648703E+01;
  COFLAM[161] = 5.30662213E+00;
  COFLAM[162] = -2.96948912E-01;
  COFLAM[163] = 1.00864302E-03;
  COFLAM[164] = -1.20691352E+01;
  COFLAM[165] = 4.57988963E+00;
  COFLAM[166] = -1.94853890E-01;
  COFLAM[167] = -3.74099968E-03;
  COFLAM[168] = -1.25669867E+01;
  COFLAM[169] = 4.75862123E+00;
  COFLAM[170] = -2.18414353E-01;
  COFLAM[171] = -2.65674589E-03;
  COFLAM[172] = -1.09394687E+01;
  COFLAM[173] = 4.06388797E+00;
  COFLAM[174] = -1.20761977E-01;
  COFLAM[175] = -7.19867028E-03;
  COFLAM[176] = -8.90251548E+00;
  COFLAM[177] = 3.14440398E+00;
  COFLAM[178] = 1.00183531E-02;
  COFLAM[179] = -1.32481589E-02;
  COFLAM[180] = -8.98775952E+00;
  COFLAM[181] = 3.15332522E+00;
  COFLAM[182] = 1.17548811E-02;
  COFLAM[183] = -1.34425082E-02;
  COFLAM[184] = -8.98775952E+00;
  COFLAM[185] = 3.15332522E+00;
  COFLAM[186] = 1.17548811E-02;
  COFLAM[187] = -1.34425082E-02;
  COFLAM[188] = -1.05264352E+01;
  COFLAM[189] = 3.82519699E+00;
  COFLAM[190] = -8.57053164E-02;
  COFLAM[191] = -8.80477027E-03;
  COFLAM[192] = -1.09133608E+01;
  COFLAM[193] = 4.21990911E+00;
  COFLAM[194] = -1.87708496E-01;
  COFLAM[195] = -1.69129839E-03;
  COFLAM[196] = -9.21508033E+00;
  COFLAM[197] = 3.58968239E+00;
  COFLAM[198] = -1.11235407E-01;
  COFLAM[199] = -4.73011768E-03;
  COFLAM[200] = -9.22473383E+00;
  COFLAM[201] = 3.59420048E+00;
  COFLAM[202] = -1.19074251E-01;
  COFLAM[203] = -4.06163455E-03;
  COFLAM[204] = -6.84098916E+00;
  COFLAM[205] = 2.34795152E+00;
  COFLAM[206] = 8.90948044E-02;
  COFLAM[207] = -1.52021686E-02;
  COFLAM[208] = 1.29305954E+01;
  COFLAM[209] = -3.52816965E+00;
  COFLAM[210] = 6.45498434E-01;
  COFLAM[211] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.28665148E+01;
  COFD[1] = 1.40407102E-01;
  COFD[2] = 3.41555146E-01;
  COFD[3] = -2.03644864E-02;
  COFD[4] = -2.09727935E+01;
  COFD[5] = 5.49979971E+00;
  COFD[6] = -4.62000942E-01;
  COFD[7] = 1.85549745E-02;
  COFD[8] = -2.17906749E+01;
  COFD[9] = 5.43781703E+00;
  COFD[10] = -4.75415362E-01;
  COFD[11] = 1.99887429E-02;
  COFD[12] = -2.18185268E+01;
  COFD[13] = 5.43781703E+00;
  COFD[14] = -4.75415362E-01;
  COFD[15] = 1.99887429E-02;
  COFD[16] = -2.28852566E+01;
  COFD[17] = 5.60324057E+00;
  COFD[18] = -4.88278590E-01;
  COFD[19] = 2.02076422E-02;
  COFD[20] = -1.85196652E+01;
  COFD[21] = 4.68077396E+00;
  COFD[22] = -3.91229141E-01;
  COFD[23] = 1.69020200E-02;
  COFD[24] = -1.47122747E+01;
  COFD[25] = 1.67339458E+00;
  COFD[26] = 1.22536705E-01;
  COFD[27] = -1.01692680E-02;
  COFD[28] = -2.28978256E+01;
  COFD[29] = 5.60324057E+00;
  COFD[30] = -4.88278590E-01;
  COFD[31] = 2.02076422E-02;
  COFD[32] = -2.28722333E+01;
  COFD[33] = 5.60324057E+00;
  COFD[34] = -4.88278590E-01;
  COFD[35] = 2.02076422E-02;
  COFD[36] = -2.26017407E+01;
  COFD[37] = 5.50133264E+00;
  COFD[38] = -4.62484498E-01;
  COFD[39] = 1.85871217E-02;
  COFD[40] = -2.26017407E+01;
  COFD[41] = 5.50133264E+00;
  COFD[42] = -4.62484498E-01;
  COFD[43] = 1.85871217E-02;
  COFD[44] = -2.26337129E+01;
  COFD[45] = 5.50133264E+00;
  COFD[46] = -4.62484498E-01;
  COFD[47] = 1.85871217E-02;
  COFD[48] = -2.26491370E+01;
  COFD[49] = 5.50690143E+00;
  COFD[50] = -4.64003349E-01;
  COFD[51] = 1.86846584E-02;
  COFD[52] = -1.64538178E+01;
  COFD[53] = 2.28170571E+00;
  COFD[54] = 3.44078407E-02;
  COFD[55] = -6.01703889E-03;
  COFD[56] = -1.64683697E+01;
  COFD[57] = 2.28170571E+00;
  COFD[58] = 3.44078407E-02;
  COFD[59] = -6.01703889E-03;
  COFD[60] = -1.81189655E+01;
  COFD[61] = 3.03095915E+00;
  COFD[62] = -7.58238868E-02;
  COFD[63] = -7.48420472E-04;
  COFD[64] = -2.27747741E+01;
  COFD[65] = 5.60263382E+00;
  COFD[66] = -4.91348327E-01;
  COFD[67] = 2.04651120E-02;
  COFD[68] = -2.17131539E+01;
  COFD[69] = 4.69815223E+00;
  COFD[70] = -3.28454103E-01;
  COFD[71] = 1.15970636E-02;
  COFD[72] = -2.22067717E+01;
  COFD[73] = 5.03874797E+00;
  COFD[74] = -3.82440213E-01;
  COFD[75] = 1.43232015E-02;
  COFD[76] = -2.22232029E+01;
  COFD[77] = 5.03874797E+00;
  COFD[78] = -3.82440213E-01;
  COFD[79] = 1.43232015E-02;
  COFD[80] = -2.08912810E+01;
  COFD[81] = 4.35422933E+00;
  COFD[82] = -2.74727512E-01;
  COFD[83] = 8.91328380E-03;
  COFD[84] = -2.14955755E+01;
  COFD[85] = 4.62311744E+00;
  COFD[86] = -3.16576672E-01;
  COFD[87] = 1.09982058E-02;
  COFD[88] = -2.15101026E+01;
  COFD[89] = 4.62311744E+00;
  COFD[90] = -3.16576672E-01;
  COFD[91] = 1.09982058E-02;
  COFD[92] = -1.78379202E+01;
  COFD[93] = 2.81667592E+00;
  COFD[94] = -4.44112417E-02;
  COFD[95] = -2.24836515E-03;
  COFD[96] = -2.15057005E+01;
  COFD[97] = 4.49401210E+00;
  COFD[98] = -2.96300228E-01;
  COFD[99] = 9.98228772E-03;
  COFD[100] = -2.15154449E+01;
  COFD[101] = 4.49401210E+00;
  COFD[102] = -2.96300228E-01;
  COFD[103] = 9.98228772E-03;
  COFD[104] = -2.15249135E+01;
  COFD[105] = 4.49401210E+00;
  COFD[106] = -2.96300228E-01;
  COFD[107] = 9.98228772E-03;
  COFD[108] = -1.98610330E+01;
  COFD[109] = 3.61510430E+00;
  COFD[110] = -1.62429647E-01;
  COFD[111] = 3.41379096E-03;
  COFD[112] = -1.98544943E+01;
  COFD[113] = 3.61510430E+00;
  COFD[114] = -1.62429647E-01;
  COFD[115] = 3.41379096E-03;
  COFD[116] = -1.98613280E+01;
  COFD[117] = 3.61510430E+00;
  COFD[118] = -1.62429647E-01;
  COFD[119] = 3.41379096E-03;
  COFD[120] = -1.98680102E+01;
  COFD[121] = 3.61510430E+00;
  COFD[122] = -1.62429647E-01;
  COFD[123] = 3.41379096E-03;
  COFD[124] = -1.79641953E+01;
  COFD[125] = 2.68406243E+00;
  COFD[126] = -2.49058117E-02;
  COFD[127] = -3.18217796E-03;
  COFD[128] = -1.79693333E+01;
  COFD[129] = 2.68406243E+00;
  COFD[130] = -2.49058117E-02;
  COFD[131] = -3.18217796E-03;
  COFD[132] = -1.78013977E+01;
  COFD[133] = 2.59587009E+00;
  COFD[134] = -1.18871887E-02;
  COFD[135] = -3.80613440E-03;
  COFD[136] = -1.71023549E+01;
  COFD[137] = 2.22992608E+00;
  COFD[138] = 4.19679647E-02;
  COFD[139] = -6.37519657E-03;
  COFD[140] = -1.69925821E+01;
  COFD[141] = 2.16947571E+00;
  COFD[142] = 5.07757587E-02;
  COFD[143] = -6.79188381E-03;
  COFD[144] = -1.62450421E+01;
  COFD[145] = 1.79898308E+00;
  COFD[146] = 1.04422970E-01;
  COFD[147] = -9.31788260E-03;
  COFD[148] = -1.61488722E+01;
  COFD[149] = 1.74526374E+00;
  COFD[150] = 1.12174865E-01;
  COFD[151] = -9.68245016E-03;
  COFD[152] = -1.54004377E+01;
  COFD[153] = 1.38485345E+00;
  COFD[154] = 1.63989484E-01;
  COFD[155] = -1.21088577E-02;
  COFD[156] = -1.53464320E+01;
  COFD[157] = 1.34923135E+00;
  COFD[158] = 1.69096035E-01;
  COFD[159] = -1.23472697E-02;
  COFD[160] = -1.46746702E+01;
  COFD[161] = 1.02870676E+00;
  COFD[162] = 2.14984638E-01;
  COFD[163] = -1.44879090E-02;
  COFD[164] = -1.46203241E+01;
  COFD[165] = 9.94330848E-01;
  COFD[166] = 2.19902430E-01;
  COFD[167] = -1.47171735E-02;
  COFD[168] = -1.40460915E+01;
  COFD[169] = 7.18763378E-01;
  COFD[170] = 2.59237872E-01;
  COFD[171] = -1.65477278E-02;
  COFD[172] = -1.39499410E+01;
  COFD[173] = 6.68848217E-01;
  COFD[174] = 2.66350983E-01;
  COFD[175] = -1.68784757E-02;
  COFD[176] = -1.28650288E+01;
  COFD[177] = 1.40407102E-01;
  COFD[178] = 3.41555146E-01;
  COFD[179] = -2.03644864E-02;
  COFD[180] = -1.28650288E+01;
  COFD[181] = 1.40407102E-01;
  COFD[182] = 3.41555146E-01;
  COFD[183] = -2.03644864E-02;
  COFD[184] = -1.28650288E+01;
  COFD[185] = 1.40407102E-01;
  COFD[186] = 3.41555146E-01;
  COFD[187] = -2.03644864E-02;
  COFD[188] = -1.30635373E+01;
  COFD[189] = 2.26455242E-01;
  COFD[190] = 3.29362482E-01;
  COFD[191] = -1.98017964E-02;
  COFD[192] = -1.27059833E+01;
  COFD[193] = 4.81478906E-02;
  COFD[194] = 3.54630676E-01;
  COFD[195] = -2.09687597E-02;
  COFD[196] = -1.27059833E+01;
  COFD[197] = 4.81478906E-02;
  COFD[198] = 3.54630676E-01;
  COFD[199] = -2.09687597E-02;
  COFD[200] = -1.17881849E+01;
  COFD[201] = -3.91721760E-01;
  COFD[202] = 4.16686717E-01;
  COFD[203] = -2.38259465E-02;
  COFD[204] = -1.22701310E+01;
  COFD[205] = -1.61500371E-01;
  COFD[206] = 3.84217824E-01;
  COFD[207] = -2.23309656E-02;
  COFD[208] = -2.27628265E+01;
  COFD[209] = 5.60192583E+00;
  COFD[210] = -4.91455403E-01;
  COFD[211] = 2.04776556E-02;
  COFD[212] = -2.09727935E+01;
  COFD[213] = 5.49979971E+00;
  COFD[214] = -4.62000942E-01;
  COFD[215] = 1.85549745E-02;
  COFD[216] = -1.47968875E+01;
  COFD[217] = 4.23027636E+00;
  COFD[218] = -3.36139991E-01;
  COFD[219] = 1.46507621E-02;
  COFD[220] = -1.34230419E+01;
  COFD[221] = 3.48624238E+00;
  COFD[222] = -2.41554467E-01;
  COFD[223] = 1.06263545E-02;
  COFD[224] = -1.34248014E+01;
  COFD[225] = 3.48624238E+00;
  COFD[226] = -2.41554467E-01;
  COFD[227] = 1.06263545E-02;
  COFD[228] = -1.46554904E+01;
  COFD[229] = 3.83606243E+00;
  COFD[230] = -2.86076532E-01;
  COFD[231] = 1.25205829E-02;
  COFD[232] = -1.14366544E+01;
  COFD[233] = 2.78323501E+00;
  COFD[234] = -1.51214064E-01;
  COFD[235] = 6.75150012E-03;
  COFD[236] = -1.95739720E+01;
  COFD[237] = 5.61113230E+00;
  COFD[238] = -4.90190187E-01;
  COFD[239] = 2.03260675E-02;
  COFD[240] = -1.46559297E+01;
  COFD[241] = 3.83606243E+00;
  COFD[242] = -2.86076532E-01;
  COFD[243] = 1.25205829E-02;
  COFD[244] = -1.46550238E+01;
  COFD[245] = 3.83606243E+00;
  COFD[246] = -2.86076532E-01;
  COFD[247] = 1.25205829E-02;
  COFD[248] = -1.57972520E+01;
  COFD[249] = 4.22225052E+00;
  COFD[250] = -3.35156428E-01;
  COFD[251] = 1.46104855E-02;
  COFD[252] = -1.57972520E+01;
  COFD[253] = 4.22225052E+00;
  COFD[254] = -3.35156428E-01;
  COFD[255] = 1.46104855E-02;
  COFD[256] = -1.57995045E+01;
  COFD[257] = 4.22225052E+00;
  COFD[258] = -3.35156428E-01;
  COFD[259] = 1.46104855E-02;
  COFD[260] = -1.57199190E+01;
  COFD[261] = 4.19936335E+00;
  COFD[262] = -3.32311009E-01;
  COFD[263] = 1.44921003E-02;
  COFD[264] = -1.97544605E+01;
  COFD[265] = 5.56931926E+00;
  COFD[266] = -4.89105511E-01;
  COFD[267] = 2.04493129E-02;
  COFD[268] = -1.97550243E+01;
  COFD[269] = 5.56931926E+00;
  COFD[270] = -4.89105511E-01;
  COFD[271] = 2.04493129E-02;
  COFD[272] = -1.92718738E+01;
  COFD[273] = 5.41172124E+00;
  COFD[274] = -4.73213887E-01;
  COFD[275] = 1.99405473E-02;
  COFD[276] = -1.43151328E+01;
  COFD[277] = 3.68038508E+00;
  COFD[278] = -2.65779346E-01;
  COFD[279] = 1.16360771E-02;
  COFD[280] = -1.76147183E+01;
  COFD[281] = 4.86049500E+00;
  COFD[282] = -4.12200578E-01;
  COFD[283] = 1.77160971E-02;
  COFD[284] = -1.72232379E+01;
  COFD[285] = 4.69060745E+00;
  COFD[286] = -3.92369888E-01;
  COFD[287] = 1.69459661E-02;
  COFD[288] = -1.72239329E+01;
  COFD[289] = 4.69060745E+00;
  COFD[290] = -3.92369888E-01;
  COFD[291] = 1.69459661E-02;
  COFD[292] = -1.82252070E+01;
  COFD[293] = 5.05237312E+00;
  COFD[294] = -4.35182396E-01;
  COFD[295] = 1.86363074E-02;
  COFD[296] = -1.79339484E+01;
  COFD[297] = 4.91373893E+00;
  COFD[298] = -4.18747629E-01;
  COFD[299] = 1.79856610E-02;
  COFD[300] = -1.79345106E+01;
  COFD[301] = 4.91373893E+00;
  COFD[302] = -4.18747629E-01;
  COFD[303] = 1.79856610E-02;
  COFD[304] = -1.94691588E+01;
  COFD[305] = 5.43830787E+00;
  COFD[306] = -4.75472880E-01;
  COFD[307] = 1.99909996E-02;
  COFD[308] = -1.83539845E+01;
  COFD[309] = 4.98756925E+00;
  COFD[310] = -4.27526072E-01;
  COFD[311] = 1.83341755E-02;
  COFD[312] = -1.83542714E+01;
  COFD[313] = 4.98756925E+00;
  COFD[314] = -4.27526072E-01;
  COFD[315] = 1.83341755E-02;
  COFD[316] = -1.83545451E+01;
  COFD[317] = 4.98756925E+00;
  COFD[318] = -4.27526072E-01;
  COFD[319] = 1.83341755E-02;
  COFD[320] = -1.94091246E+01;
  COFD[321] = 5.32291505E+00;
  COFD[322] = -4.65883522E-01;
  COFD[323] = 1.97916109E-02;
  COFD[324] = -1.94089702E+01;
  COFD[325] = 5.32291505E+00;
  COFD[326] = -4.65883522E-01;
  COFD[327] = 1.97916109E-02;
  COFD[328] = -1.94091316E+01;
  COFD[329] = 5.32291505E+00;
  COFD[330] = -4.65883522E-01;
  COFD[331] = 1.97916109E-02;
  COFD[332] = -1.94092873E+01;
  COFD[333] = 5.32291505E+00;
  COFD[334] = -4.65883522E-01;
  COFD[335] = 1.97916109E-02;
  COFD[336] = -1.99878889E+01;
  COFD[337] = 5.47248098E+00;
  COFD[338] = -4.79290468E-01;
  COFD[339] = 2.01323903E-02;
  COFD[340] = -1.99879922E+01;
  COFD[341] = 5.47248098E+00;
  COFD[342] = -4.79290468E-01;
  COFD[343] = 2.01323903E-02;
  COFD[344] = -2.00936752E+01;
  COFD[345] = 5.49784223E+00;
  COFD[346] = -4.82080865E-01;
  COFD[347] = 2.02336554E-02;
  COFD[348] = -2.04125771E+01;
  COFD[349] = 5.57739710E+00;
  COFD[350] = -4.89778630E-01;
  COFD[351] = 2.04637924E-02;
  COFD[352] = -2.04804861E+01;
  COFD[353] = 5.58854463E+00;
  COFD[354] = -4.90844442E-01;
  COFD[355] = 2.04953696E-02;
  COFD[356] = -2.06420448E+01;
  COFD[357] = 5.61233640E+00;
  COFD[358] = -4.91245632E-01;
  COFD[359] = 2.04073252E-02;
  COFD[360] = -2.06825052E+01;
  COFD[361] = 5.61207329E+00;
  COFD[362] = -4.90835136E-01;
  COFD[363] = 2.03746959E-02;
  COFD[364] = -2.07168035E+01;
  COFD[365] = 5.58797624E+00;
  COFD[366] = -4.84623564E-01;
  COFD[367] = 1.99817352E-02;
  COFD[368] = -2.07541880E+01;
  COFD[369] = 5.58528362E+00;
  COFD[370] = -4.83934962E-01;
  COFD[371] = 1.99381553E-02;
  COFD[372] = -2.08359032E+01;
  COFD[373] = 5.58518783E+00;
  COFD[374] = -4.81282144E-01;
  COFD[375] = 1.97176495E-02;
  COFD[376] = -2.08746358E+01;
  COFD[377] = 5.58521622E+00;
  COFD[378] = -4.81014671E-01;
  COFD[379] = 1.96952964E-02;
  COFD[380] = -2.09388450E+01;
  COFD[381] = 5.57974996E+00;
  COFD[382] = -4.78112864E-01;
  COFD[383] = 1.94826410E-02;
  COFD[384] = -2.09567932E+01;
  COFD[385] = 5.57406673E+00;
  COFD[386] = -4.76936581E-01;
  COFD[387] = 1.94140919E-02;
  COFD[388] = -2.09727759E+01;
  COFD[389] = 5.49979971E+00;
  COFD[390] = -4.62000942E-01;
  COFD[391] = 1.85549745E-02;
  COFD[392] = -2.09727759E+01;
  COFD[393] = 5.49979971E+00;
  COFD[394] = -4.62000942E-01;
  COFD[395] = 1.85549745E-02;
  COFD[396] = -2.09727759E+01;
  COFD[397] = 5.49979971E+00;
  COFD[398] = -4.62000942E-01;
  COFD[399] = 1.85549745E-02;
  COFD[400] = -2.09750990E+01;
  COFD[401] = 5.50429364E+00;
  COFD[402] = -4.63372495E-01;
  COFD[403] = 1.86455814E-02;
  COFD[404] = -2.09816459E+01;
  COFD[405] = 5.49082104E+00;
  COFD[406] = -4.60014303E-01;
  COFD[407] = 1.84365627E-02;
  COFD[408] = -2.09816459E+01;
  COFD[409] = 5.49082104E+00;
  COFD[410] = -4.60014303E-01;
  COFD[411] = 1.84365627E-02;
  COFD[412] = -2.09454015E+01;
  COFD[413] = 5.40752766E+00;
  COFD[414] = -4.44798355E-01;
  COFD[415] = 1.76009922E-02;
  COFD[416] = -2.09649992E+01;
  COFD[417] = 5.45055984E+00;
  COFD[418] = -4.52626477E-01;
  COFD[419] = 1.80297457E-02;
  COFD[420] = -1.42894603E+01;
  COFD[421] = 3.67490723E+00;
  COFD[422] = -2.65114792E-01;
  COFD[423] = 1.16092671E-02;
  COFD[424] = -2.17906749E+01;
  COFD[425] = 5.43781703E+00;
  COFD[426] = -4.75415362E-01;
  COFD[427] = 1.99887429E-02;
  COFD[428] = -1.34230419E+01;
  COFD[429] = 3.48624238E+00;
  COFD[430] = -2.41554467E-01;
  COFD[431] = 1.06263545E-02;
  COFD[432] = -1.32093517E+01;
  COFD[433] = 2.90778936E+00;
  COFD[434] = -1.67388544E-01;
  COFD[435] = 7.45220609E-03;
  COFD[436] = -1.32243932E+01;
  COFD[437] = 2.90778936E+00;
  COFD[438] = -1.67388544E-01;
  COFD[439] = 7.45220609E-03;
  COFD[440] = -1.43190281E+01;
  COFD[441] = 3.17651319E+00;
  COFD[442] = -2.02028974E-01;
  COFD[443] = 8.94232502E-03;
  COFD[444] = -1.09595844E+01;
  COFD[445] = 2.30836460E+00;
  COFD[446] = -8.76339315E-02;
  COFD[447] = 3.90878445E-03;
  COFD[448] = -1.94093476E+01;
  COFD[449] = 5.16013126E+00;
  COFD[450] = -4.46824543E-01;
  COFD[451] = 1.90464887E-02;
  COFD[452] = -1.43238892E+01;
  COFD[453] = 3.17651319E+00;
  COFD[454] = -2.02028974E-01;
  COFD[455] = 8.94232502E-03;
  COFD[456] = -1.43139120E+01;
  COFD[457] = 3.17651319E+00;
  COFD[458] = -2.02028974E-01;
  COFD[459] = 8.94232502E-03;
  COFD[460] = -1.50584188E+01;
  COFD[461] = 3.47945612E+00;
  COFD[462] = -2.40703722E-01;
  COFD[463] = 1.05907441E-02;
  COFD[464] = -1.50584188E+01;
  COFD[465] = 3.47945612E+00;
  COFD[466] = -2.40703722E-01;
  COFD[467] = 1.05907441E-02;
  COFD[468] = -1.50766073E+01;
  COFD[469] = 3.47945612E+00;
  COFD[470] = -2.40703722E-01;
  COFD[471] = 1.05907441E-02;
  COFD[472] = -1.50270285E+01;
  COFD[473] = 3.46140064E+00;
  COFD[474] = -2.38440092E-01;
  COFD[475] = 1.04960087E-02;
  COFD[476] = -1.94313018E+01;
  COFD[477] = 5.02567894E+00;
  COFD[478] = -4.32045169E-01;
  COFD[479] = 1.85132214E-02;
  COFD[480] = -1.94373032E+01;
  COFD[481] = 5.02567894E+00;
  COFD[482] = -4.32045169E-01;
  COFD[483] = 1.85132214E-02;
  COFD[484] = -1.88179325E+01;
  COFD[485] = 4.79683898E+00;
  COFD[486] = -4.04829719E-01;
  COFD[487] = 1.74325475E-02;
  COFD[488] = -1.40998907E+01;
  COFD[489] = 3.08120012E+00;
  COFD[490] = -1.89629903E-01;
  COFD[491] = 8.40361952E-03;
  COFD[492] = -1.70534750E+01;
  COFD[493] = 4.14240922E+00;
  COFD[494] = -3.25239774E-01;
  COFD[495] = 1.41980687E-02;
  COFD[496] = -1.65488277E+01;
  COFD[497] = 3.95035840E+00;
  COFD[498] = -3.00959418E-01;
  COFD[499] = 1.31692593E-02;
  COFD[500] = -1.65559708E+01;
  COFD[501] = 3.95035840E+00;
  COFD[502] = -3.00959418E-01;
  COFD[503] = 1.31692593E-02;
  COFD[504] = -1.74792034E+01;
  COFD[505] = 4.29676909E+00;
  COFD[506] = -3.44085306E-01;
  COFD[507] = 1.49671135E-02;
  COFD[508] = -1.72496558E+01;
  COFD[509] = 4.17889917E+00;
  COFD[510] = -3.29752510E-01;
  COFD[511] = 1.43850275E-02;
  COFD[512] = -1.72556425E+01;
  COFD[513] = 4.17889917E+00;
  COFD[514] = -3.29752510E-01;
  COFD[515] = 1.43850275E-02;
  COFD[516] = -1.90915553E+01;
  COFD[517] = 4.84384483E+00;
  COFD[518] = -4.10265575E-01;
  COFD[519] = 1.76414287E-02;
  COFD[520] = -1.76774947E+01;
  COFD[521] = 4.24719726E+00;
  COFD[522] = -3.38206061E-01;
  COFD[523] = 1.47350654E-02;
  COFD[524] = -1.76808635E+01;
  COFD[525] = 4.24719726E+00;
  COFD[526] = -3.38206061E-01;
  COFD[527] = 1.47350654E-02;
  COFD[528] = -1.76840960E+01;
  COFD[529] = 4.24719726E+00;
  COFD[530] = -3.38206061E-01;
  COFD[531] = 1.47350654E-02;
  COFD[532] = -1.87877888E+01;
  COFD[533] = 4.61260432E+00;
  COFD[534] = -3.82854484E-01;
  COFD[535] = 1.65575163E-02;
  COFD[536] = -1.87858504E+01;
  COFD[537] = 4.61260432E+00;
  COFD[538] = -3.82854484E-01;
  COFD[539] = 1.65575163E-02;
  COFD[540] = -1.87878758E+01;
  COFD[541] = 4.61260432E+00;
  COFD[542] = -3.82854484E-01;
  COFD[543] = 1.65575163E-02;
  COFD[544] = -1.87898376E+01;
  COFD[545] = 4.61260432E+00;
  COFD[546] = -3.82854484E-01;
  COFD[547] = 1.65575163E-02;
  COFD[548] = -1.96267194E+01;
  COFD[549] = 4.88238340E+00;
  COFD[550] = -4.14880316E-01;
  COFD[551] = 1.78258928E-02;
  COFD[552] = -1.96280719E+01;
  COFD[553] = 4.88238340E+00;
  COFD[554] = -4.14880316E-01;
  COFD[555] = 1.78258928E-02;
  COFD[556] = -1.97500130E+01;
  COFD[557] = 4.91686557E+00;
  COFD[558] = -4.19132771E-01;
  COFD[559] = 1.80015468E-02;
  COFD[560] = -2.01678752E+01;
  COFD[561] = 5.04165097E+00;
  COFD[562] = -4.33913744E-01;
  COFD[563] = 1.85861246E-02;
  COFD[564] = -2.02500061E+01;
  COFD[565] = 5.06040254E+00;
  COFD[566] = -4.36131707E-01;
  COFD[567] = 1.86738271E-02;
  COFD[568] = -2.05574198E+01;
  COFD[569] = 5.14795860E+00;
  COFD[570] = -4.45935789E-01;
  COFD[571] = 1.90364341E-02;
  COFD[572] = -2.06088568E+01;
  COFD[573] = 5.15356304E+00;
  COFD[574] = -4.46375755E-01;
  COFD[575] = 1.90436659E-02;
  COFD[576] = -2.08840874E+01;
  COFD[577] = 5.23394577E+00;
  COFD[578] = -4.55294957E-01;
  COFD[579] = 1.93696950E-02;
  COFD[580] = -2.09462082E+01;
  COFD[581] = 5.24344916E+00;
  COFD[582] = -4.56395528E-01;
  COFD[583] = 1.94121732E-02;
  COFD[584] = -2.12416101E+01;
  COFD[585] = 5.33751161E+00;
  COFD[586] = -4.67531962E-01;
  COFD[587] = 1.98534391E-02;
  COFD[588] = -2.12927711E+01;
  COFD[589] = 5.34414631E+00;
  COFD[590] = -4.68238030E-01;
  COFD[591] = 1.98779007E-02;
  COFD[592] = -2.14367497E+01;
  COFD[593] = 5.37405372E+00;
  COFD[594] = -4.70540525E-01;
  COFD[595] = 1.99137160E-02;
  COFD[596] = -2.14760319E+01;
  COFD[597] = 5.37855795E+00;
  COFD[598] = -4.70848636E-01;
  COFD[599] = 1.99158969E-02;
  COFD[600] = -2.17904194E+01;
  COFD[601] = 5.43781703E+00;
  COFD[602] = -4.75415362E-01;
  COFD[603] = 1.99887429E-02;
  COFD[604] = -2.17904194E+01;
  COFD[605] = 5.43781703E+00;
  COFD[606] = -4.75415362E-01;
  COFD[607] = 1.99887429E-02;
  COFD[608] = -2.17904194E+01;
  COFD[609] = 5.43781703E+00;
  COFD[610] = -4.75415362E-01;
  COFD[611] = 1.99887429E-02;
  COFD[612] = -2.17411393E+01;
  COFD[613] = 5.41958585E+00;
  COFD[614] = -4.73477571E-01;
  COFD[615] = 1.99215358E-02;
  COFD[616] = -2.18770313E+01;
  COFD[617] = 5.46038651E+00;
  COFD[618] = -4.77939293E-01;
  COFD[619] = 2.00823652E-02;
  COFD[620] = -2.18770313E+01;
  COFD[621] = 5.46038651E+00;
  COFD[622] = -4.77939293E-01;
  COFD[623] = 2.00823652E-02;
  COFD[624] = -2.22377094E+01;
  COFD[625] = 5.55025841E+00;
  COFD[626] = -4.87461003E-01;
  COFD[627] = 2.04108189E-02;
  COFD[628] = -2.20665268E+01;
  COFD[629] = 5.51007247E+00;
  COFD[630] = -4.83411907E-01;
  COFD[631] = 2.02812924E-02;
  COFD[632] = -1.40756909E+01;
  COFD[633] = 3.07549274E+00;
  COFD[634] = -1.88889344E-01;
  COFD[635] = 8.37152866E-03;
  COFD[636] = -2.18185268E+01;
  COFD[637] = 5.43781703E+00;
  COFD[638] = -4.75415362E-01;
  COFD[639] = 1.99887429E-02;
  COFD[640] = -1.34248014E+01;
  COFD[641] = 3.48624238E+00;
  COFD[642] = -2.41554467E-01;
  COFD[643] = 1.06263545E-02;
  COFD[644] = -1.32243932E+01;
  COFD[645] = 2.90778936E+00;
  COFD[646] = -1.67388544E-01;
  COFD[647] = 7.45220609E-03;
  COFD[648] = -1.32399011E+01;
  COFD[649] = 2.90778936E+00;
  COFD[650] = -1.67388544E-01;
  COFD[651] = 7.45220609E-03;
  COFD[652] = -1.43393972E+01;
  COFD[653] = 3.17651319E+00;
  COFD[654] = -2.02028974E-01;
  COFD[655] = 8.94232502E-03;
  COFD[656] = -1.09629118E+01;
  COFD[657] = 2.30836460E+00;
  COFD[658] = -8.76339315E-02;
  COFD[659] = 3.90878445E-03;
  COFD[660] = -1.94252948E+01;
  COFD[661] = 5.16013126E+00;
  COFD[662] = -4.46824543E-01;
  COFD[663] = 1.90464887E-02;
  COFD[664] = -1.43444614E+01;
  COFD[665] = 3.17651319E+00;
  COFD[666] = -2.02028974E-01;
  COFD[667] = 8.94232502E-03;
  COFD[668] = -1.43340695E+01;
  COFD[669] = 3.17651319E+00;
  COFD[670] = -2.02028974E-01;
  COFD[671] = 8.94232502E-03;
  COFD[672] = -1.50724583E+01;
  COFD[673] = 3.47945612E+00;
  COFD[674] = -2.40703722E-01;
  COFD[675] = 1.05907441E-02;
  COFD[676] = -1.50724583E+01;
  COFD[677] = 3.47945612E+00;
  COFD[678] = -2.40703722E-01;
  COFD[679] = 1.05907441E-02;
  COFD[680] = -1.50911746E+01;
  COFD[681] = 3.47945612E+00;
  COFD[682] = -2.40703722E-01;
  COFD[683] = 1.05907441E-02;
  COFD[684] = -1.50420909E+01;
  COFD[685] = 3.46140064E+00;
  COFD[686] = -2.38440092E-01;
  COFD[687] = 1.04960087E-02;
  COFD[688] = -1.94507789E+01;
  COFD[689] = 5.02567894E+00;
  COFD[690] = -4.32045169E-01;
  COFD[691] = 1.85132214E-02;
  COFD[692] = -1.94570202E+01;
  COFD[693] = 5.02567894E+00;
  COFD[694] = -4.32045169E-01;
  COFD[695] = 1.85132214E-02;
  COFD[696] = -1.88378792E+01;
  COFD[697] = 4.79683898E+00;
  COFD[698] = -4.04829719E-01;
  COFD[699] = 1.74325475E-02;
  COFD[700] = -1.41191170E+01;
  COFD[701] = 3.08120012E+00;
  COFD[702] = -1.89629903E-01;
  COFD[703] = 8.40361952E-03;
  COFD[704] = -1.70756953E+01;
  COFD[705] = 4.14240922E+00;
  COFD[706] = -3.25239774E-01;
  COFD[707] = 1.41980687E-02;
  COFD[708] = -1.65675292E+01;
  COFD[709] = 3.95035840E+00;
  COFD[710] = -3.00959418E-01;
  COFD[711] = 1.31692593E-02;
  COFD[712] = -1.65749465E+01;
  COFD[713] = 3.95035840E+00;
  COFD[714] = -3.00959418E-01;
  COFD[715] = 1.31692593E-02;
  COFD[716] = -1.74984410E+01;
  COFD[717] = 4.29676909E+00;
  COFD[718] = -3.44085306E-01;
  COFD[719] = 1.49671135E-02;
  COFD[720] = -1.72691436E+01;
  COFD[721] = 4.17889917E+00;
  COFD[722] = -3.29752510E-01;
  COFD[723] = 1.43850275E-02;
  COFD[724] = -1.72753698E+01;
  COFD[725] = 4.17889917E+00;
  COFD[726] = -3.29752510E-01;
  COFD[727] = 1.43850275E-02;
  COFD[728] = -1.91136407E+01;
  COFD[729] = 4.84384483E+00;
  COFD[730] = -4.10265575E-01;
  COFD[731] = 1.76414287E-02;
  COFD[732] = -1.76992903E+01;
  COFD[733] = 4.24719726E+00;
  COFD[734] = -3.38206061E-01;
  COFD[735] = 1.47350654E-02;
  COFD[736] = -1.77028097E+01;
  COFD[737] = 4.24719726E+00;
  COFD[738] = -3.38206061E-01;
  COFD[739] = 1.47350654E-02;
  COFD[740] = -1.77061877E+01;
  COFD[741] = 4.24719726E+00;
  COFD[742] = -3.38206061E-01;
  COFD[743] = 1.47350654E-02;
  COFD[744] = -1.88113928E+01;
  COFD[745] = 4.61260432E+00;
  COFD[746] = -3.82854484E-01;
  COFD[747] = 1.65575163E-02;
  COFD[748] = -1.88093609E+01;
  COFD[749] = 4.61260432E+00;
  COFD[750] = -3.82854484E-01;
  COFD[751] = 1.65575163E-02;
  COFD[752] = -1.88114840E+01;
  COFD[753] = 4.61260432E+00;
  COFD[754] = -3.82854484E-01;
  COFD[755] = 1.65575163E-02;
  COFD[756] = -1.88135408E+01;
  COFD[757] = 4.61260432E+00;
  COFD[758] = -3.82854484E-01;
  COFD[759] = 1.65575163E-02;
  COFD[760] = -1.96513830E+01;
  COFD[761] = 4.88238340E+00;
  COFD[762] = -4.14880316E-01;
  COFD[763] = 1.78258928E-02;
  COFD[764] = -1.96528039E+01;
  COFD[765] = 4.88238340E+00;
  COFD[766] = -4.14880316E-01;
  COFD[767] = 1.78258928E-02;
  COFD[768] = -1.97748119E+01;
  COFD[769] = 4.91686557E+00;
  COFD[770] = -4.19132771E-01;
  COFD[771] = 1.80015468E-02;
  COFD[772] = -2.01934178E+01;
  COFD[773] = 5.04165097E+00;
  COFD[774] = -4.33913744E-01;
  COFD[775] = 1.85861246E-02;
  COFD[776] = -2.02755984E+01;
  COFD[777] = 5.06040254E+00;
  COFD[778] = -4.36131707E-01;
  COFD[779] = 1.86738271E-02;
  COFD[780] = -2.05835748E+01;
  COFD[781] = 5.14795860E+00;
  COFD[782] = -4.45935789E-01;
  COFD[783] = 1.90364341E-02;
  COFD[784] = -2.06350501E+01;
  COFD[785] = 5.15356304E+00;
  COFD[786] = -4.46375755E-01;
  COFD[787] = 1.90436659E-02;
  COFD[788] = -2.09107212E+01;
  COFD[789] = 5.23394577E+00;
  COFD[790] = -4.55294957E-01;
  COFD[791] = 1.93696950E-02;
  COFD[792] = -2.09728725E+01;
  COFD[793] = 5.24344916E+00;
  COFD[794] = -4.56395528E-01;
  COFD[795] = 1.94121732E-02;
  COFD[796] = -2.12686288E+01;
  COFD[797] = 5.33751161E+00;
  COFD[798] = -4.67531962E-01;
  COFD[799] = 1.98534391E-02;
  COFD[800] = -2.13198145E+01;
  COFD[801] = 5.34414631E+00;
  COFD[802] = -4.68238030E-01;
  COFD[803] = 1.98779007E-02;
  COFD[804] = -2.14640843E+01;
  COFD[805] = 5.37405372E+00;
  COFD[806] = -4.70540525E-01;
  COFD[807] = 1.99137160E-02;
  COFD[808] = -2.15033870E+01;
  COFD[809] = 5.37855795E+00;
  COFD[810] = -4.70848636E-01;
  COFD[811] = 1.99158969E-02;
  COFD[812] = -2.18182567E+01;
  COFD[813] = 5.43781703E+00;
  COFD[814] = -4.75415362E-01;
  COFD[815] = 1.99887429E-02;
  COFD[816] = -2.18182567E+01;
  COFD[817] = 5.43781703E+00;
  COFD[818] = -4.75415362E-01;
  COFD[819] = 1.99887429E-02;
  COFD[820] = -2.18182567E+01;
  COFD[821] = 5.43781703E+00;
  COFD[822] = -4.75415362E-01;
  COFD[823] = 1.99887429E-02;
  COFD[824] = -2.17689618E+01;
  COFD[825] = 5.41958585E+00;
  COFD[826] = -4.73477571E-01;
  COFD[827] = 1.99215358E-02;
  COFD[828] = -2.19052670E+01;
  COFD[829] = 5.46038651E+00;
  COFD[830] = -4.77939293E-01;
  COFD[831] = 2.00823652E-02;
  COFD[832] = -2.19052670E+01;
  COFD[833] = 5.46038651E+00;
  COFD[834] = -4.77939293E-01;
  COFD[835] = 2.00823652E-02;
  COFD[836] = -2.22662414E+01;
  COFD[837] = 5.55025841E+00;
  COFD[838] = -4.87461003E-01;
  COFD[839] = 2.04108189E-02;
  COFD[840] = -2.20949114E+01;
  COFD[841] = 5.51007247E+00;
  COFD[842] = -4.83411907E-01;
  COFD[843] = 2.02812924E-02;
  COFD[844] = -1.40949183E+01;
  COFD[845] = 3.07549274E+00;
  COFD[846] = -1.88889344E-01;
  COFD[847] = 8.37152866E-03;
  COFD[848] = -2.28852566E+01;
  COFD[849] = 5.60324057E+00;
  COFD[850] = -4.88278590E-01;
  COFD[851] = 2.02076422E-02;
  COFD[852] = -1.46554904E+01;
  COFD[853] = 3.83606243E+00;
  COFD[854] = -2.86076532E-01;
  COFD[855] = 1.25205829E-02;
  COFD[856] = -1.43190281E+01;
  COFD[857] = 3.17651319E+00;
  COFD[858] = -2.02028974E-01;
  COFD[859] = 8.94232502E-03;
  COFD[860] = -1.43393972E+01;
  COFD[861] = 3.17651319E+00;
  COFD[862] = -2.02028974E-01;
  COFD[863] = 8.94232502E-03;
  COFD[864] = -1.55666313E+01;
  COFD[865] = 3.48070094E+00;
  COFD[866] = -2.40859499E-01;
  COFD[867] = 1.05972514E-02;
  COFD[868] = -1.18998160E+01;
  COFD[869] = 2.57507000E+00;
  COFD[870] = -1.24033737E-01;
  COFD[871] = 5.56694959E-03;
  COFD[872] = -2.06463656E+01;
  COFD[873] = 5.41688482E+00;
  COFD[874] = -4.73387188E-01;
  COFD[875] = 1.99280175E-02;
  COFD[876] = -1.55740954E+01;
  COFD[877] = 3.48070094E+00;
  COFD[878] = -2.40859499E-01;
  COFD[879] = 1.05972514E-02;
  COFD[880] = -1.55588172E+01;
  COFD[881] = 3.48070094E+00;
  COFD[882] = -2.40859499E-01;
  COFD[883] = 1.05972514E-02;
  COFD[884] = -1.63301401E+01;
  COFD[885] = 3.82388595E+00;
  COFD[886] = -2.84480724E-01;
  COFD[887] = 1.24506311E-02;
  COFD[888] = -1.63301401E+01;
  COFD[889] = 3.82388595E+00;
  COFD[890] = -2.84480724E-01;
  COFD[891] = 1.24506311E-02;
  COFD[892] = -1.63542358E+01;
  COFD[893] = 3.82388595E+00;
  COFD[894] = -2.84480724E-01;
  COFD[895] = 1.24506311E-02;
  COFD[896] = -1.62775683E+01;
  COFD[897] = 3.79163564E+00;
  COFD[898] = -2.80257365E-01;
  COFD[899] = 1.22656902E-02;
  COFD[900] = -2.08277510E+01;
  COFD[901] = 5.35267674E+00;
  COFD[902] = -4.69010505E-01;
  COFD[903] = 1.98979152E-02;
  COFD[904] = -2.08367641E+01;
  COFD[905] = 5.35267674E+00;
  COFD[906] = -4.69010505E-01;
  COFD[907] = 1.98979152E-02;
  COFD[908] = -2.02637913E+01;
  COFD[909] = 5.14984081E+00;
  COFD[910] = -4.46093018E-01;
  COFD[911] = 1.90396647E-02;
  COFD[912] = -1.52792799E+01;
  COFD[913] = 3.36790500E+00;
  COFD[914] = -2.26321740E-01;
  COFD[915] = 9.97135055E-03;
  COFD[916] = -1.84777509E+01;
  COFD[917] = 4.49330851E+00;
  COFD[918] = -3.68208715E-01;
  COFD[919] = 1.59565402E-02;
  COFD[920] = -1.78903850E+01;
  COFD[921] = 4.29613154E+00;
  COFD[922] = -3.44012526E-01;
  COFD[923] = 1.49643715E-02;
  COFD[924] = -1.79009121E+01;
  COFD[925] = 4.29613154E+00;
  COFD[926] = -3.44012526E-01;
  COFD[927] = 1.49643715E-02;
  COFD[928] = -1.89616566E+01;
  COFD[929] = 4.68595732E+00;
  COFD[930] = -3.91842840E-01;
  COFD[931] = 1.69262542E-02;
  COFD[932] = -1.86409085E+01;
  COFD[933] = 4.53572533E+00;
  COFD[934] = -3.73386925E-01;
  COFD[935] = 1.61678881E-02;
  COFD[936] = -1.86499019E+01;
  COFD[937] = 4.53572533E+00;
  COFD[938] = -3.73386925E-01;
  COFD[939] = 1.61678881E-02;
  COFD[940] = -2.05324009E+01;
  COFD[941] = 5.18417470E+00;
  COFD[942] = -4.49491573E-01;
  COFD[943] = 1.91438508E-02;
  COFD[944] = -1.91208247E+01;
  COFD[945] = 4.61801405E+00;
  COFD[946] = -3.83535652E-01;
  COFD[947] = 1.65862513E-02;
  COFD[948] = -1.91261897E+01;
  COFD[949] = 4.61801405E+00;
  COFD[950] = -3.83535652E-01;
  COFD[951] = 1.65862513E-02;
  COFD[952] = -1.91313579E+01;
  COFD[953] = 4.61801405E+00;
  COFD[954] = -3.83535652E-01;
  COFD[955] = 1.65862513E-02;
  COFD[956] = -2.02564700E+01;
  COFD[957] = 4.97613338E+00;
  COFD[958] = -4.26175206E-01;
  COFD[959] = 1.82809270E-02;
  COFD[960] = -2.02532389E+01;
  COFD[961] = 4.97613338E+00;
  COFD[962] = -4.26175206E-01;
  COFD[963] = 1.82809270E-02;
  COFD[964] = -2.02566153E+01;
  COFD[965] = 4.97613338E+00;
  COFD[966] = -4.26175206E-01;
  COFD[967] = 1.82809270E-02;
  COFD[968] = -2.02598943E+01;
  COFD[969] = 4.97613338E+00;
  COFD[970] = -4.26175206E-01;
  COFD[971] = 1.82809270E-02;
  COFD[972] = -2.10673190E+01;
  COFD[973] = 5.22065615E+00;
  COFD[974] = -4.53751850E-01;
  COFD[975] = 1.93099506E-02;
  COFD[976] = -2.10696468E+01;
  COFD[977] = 5.22065615E+00;
  COFD[978] = -4.53751850E-01;
  COFD[979] = 1.93099506E-02;
  COFD[980] = -2.11739695E+01;
  COFD[981] = 5.24746668E+00;
  COFD[982] = -4.56860091E-01;
  COFD[983] = 1.94300718E-02;
  COFD[984] = -2.15776504E+01;
  COFD[985] = 5.35995365E+00;
  COFD[986] = -4.69587823E-01;
  COFD[987] = 1.99080702E-02;
  COFD[988] = -2.16319557E+01;
  COFD[989] = 5.36662551E+00;
  COFD[990] = -4.70010078E-01;
  COFD[991] = 1.99083076E-02;
  COFD[992] = -2.18432468E+01;
  COFD[993] = 5.40768793E+00;
  COFD[994] = -4.72942538E-01;
  COFD[995] = 1.99389038E-02;
  COFD[996] = -2.18914378E+01;
  COFD[997] = 5.41245931E+00;
  COFD[998] = -4.73255987E-01;
  COFD[999] = 1.99402041E-02;
  COFD[1000] = -2.21426228E+01;
  COFD[1001] = 5.47842731E+00;
  COFD[1002] = -4.79952894E-01;
  COFD[1003] = 2.01568406E-02;
  COFD[1004] = -2.22029597E+01;
  COFD[1005] = 5.48767364E+00;
  COFD[1006] = -4.80980618E-01;
  COFD[1007] = 2.01946539E-02;
  COFD[1008] = -2.24428055E+01;
  COFD[1009] = 5.55319328E+00;
  COFD[1010] = -4.87759313E-01;
  COFD[1011] = 2.04205124E-02;
  COFD[1012] = -2.24883897E+01;
  COFD[1013] = 5.55793029E+00;
  COFD[1014] = -4.88170533E-01;
  COFD[1015] = 2.04302911E-02;
  COFD[1016] = -2.26547956E+01;
  COFD[1017] = 5.59528609E+00;
  COFD[1018] = -4.91473190E-01;
  COFD[1019] = 2.05131236E-02;
  COFD[1020] = -2.26914190E+01;
  COFD[1021] = 5.59897074E+00;
  COFD[1022] = -4.91655801E-01;
  COFD[1023] = 2.05094389E-02;
  COFD[1024] = -2.28847737E+01;
  COFD[1025] = 5.60324057E+00;
  COFD[1026] = -4.88278590E-01;
  COFD[1027] = 2.02076422E-02;
  COFD[1028] = -2.28847737E+01;
  COFD[1029] = 5.60324057E+00;
  COFD[1030] = -4.88278590E-01;
  COFD[1031] = 2.02076422E-02;
  COFD[1032] = -2.28847737E+01;
  COFD[1033] = 5.60324057E+00;
  COFD[1034] = -4.88278590E-01;
  COFD[1035] = 2.02076422E-02;
  COFD[1036] = -2.28924392E+01;
  COFD[1037] = 5.61013561E+00;
  COFD[1038] = -4.89933558E-01;
  COFD[1039] = 2.03098561E-02;
  COFD[1040] = -2.29058182E+01;
  COFD[1041] = 5.59504443E+00;
  COFD[1042] = -4.86415566E-01;
  COFD[1043] = 2.00947399E-02;
  COFD[1044] = -2.29058182E+01;
  COFD[1045] = 5.59504443E+00;
  COFD[1046] = -4.86415566E-01;
  COFD[1047] = 2.00947399E-02;
  COFD[1048] = -2.30376932E+01;
  COFD[1049] = 5.58490491E+00;
  COFD[1050] = -4.81582466E-01;
  COFD[1051] = 1.97440305E-02;
  COFD[1052] = -2.29515207E+01;
  COFD[1053] = 5.58219321E+00;
  COFD[1054] = -4.82941269E-01;
  COFD[1055] = 1.98711890E-02;
  COFD[1056] = -1.52486292E+01;
  COFD[1057] = 3.35922578E+00;
  COFD[1058] = -2.25181399E-01;
  COFD[1059] = 9.92132878E-03;
  COFD[1060] = -1.85196652E+01;
  COFD[1061] = 4.68077396E+00;
  COFD[1062] = -3.91229141E-01;
  COFD[1063] = 1.69020200E-02;
  COFD[1064] = -1.14366544E+01;
  COFD[1065] = 2.78323501E+00;
  COFD[1066] = -1.51214064E-01;
  COFD[1067] = 6.75150012E-03;
  COFD[1068] = -1.09595844E+01;
  COFD[1069] = 2.30836460E+00;
  COFD[1070] = -8.76339315E-02;
  COFD[1071] = 3.90878445E-03;
  COFD[1072] = -1.09629118E+01;
  COFD[1073] = 2.30836460E+00;
  COFD[1074] = -8.76339315E-02;
  COFD[1075] = 3.90878445E-03;
  COFD[1076] = -1.18998160E+01;
  COFD[1077] = 2.57507000E+00;
  COFD[1078] = -1.24033737E-01;
  COFD[1079] = 5.56694959E-03;
  COFD[1080] = -1.03270769E+01;
  COFD[1081] = 2.19285409E+00;
  COFD[1082] = -7.54492786E-02;
  COFD[1083] = 3.51398213E-03;
  COFD[1084] = -1.71983144E+01;
  COFD[1085] = 4.63881440E+00;
  COFD[1086] = -3.86139677E-01;
  COFD[1087] = 1.66955099E-02;
  COFD[1088] = -1.19006697E+01;
  COFD[1089] = 2.57507000E+00;
  COFD[1090] = -1.24033737E-01;
  COFD[1091] = 5.56694959E-03;
  COFD[1092] = -1.18989101E+01;
  COFD[1093] = 2.57507000E+00;
  COFD[1094] = -1.24033737E-01;
  COFD[1095] = 5.56694959E-03;
  COFD[1096] = -1.25099100E+01;
  COFD[1097] = 2.77873601E+00;
  COFD[1098] = -1.50637360E-01;
  COFD[1099] = 6.72684281E-03;
  COFD[1100] = -1.25099100E+01;
  COFD[1101] = 2.77873601E+00;
  COFD[1102] = -1.50637360E-01;
  COFD[1103] = 6.72684281E-03;
  COFD[1104] = -1.25141403E+01;
  COFD[1105] = 2.77873601E+00;
  COFD[1106] = -1.50637360E-01;
  COFD[1107] = 6.72684281E-03;
  COFD[1108] = -1.24693714E+01;
  COFD[1109] = 2.76686648E+00;
  COFD[1110] = -1.49120141E-01;
  COFD[1111] = 6.66220432E-03;
  COFD[1112] = -1.60517517E+01;
  COFD[1113] = 4.11188603E+00;
  COFD[1114] = -3.21540884E-01;
  COFD[1115] = 1.40482564E-02;
  COFD[1116] = -1.60528433E+01;
  COFD[1117] = 4.11188603E+00;
  COFD[1118] = -3.21540884E-01;
  COFD[1119] = 1.40482564E-02;
  COFD[1120] = -1.58456453E+01;
  COFD[1121] = 4.02074796E+00;
  COFD[1122] = -3.10018539E-01;
  COFD[1123] = 1.35599559E-02;
  COFD[1124] = -1.17159884E+01;
  COFD[1125] = 2.48123210E+00;
  COFD[1126] = -1.11322604E-01;
  COFD[1127] = 4.99282389E-03;
  COFD[1128] = -1.37794466E+01;
  COFD[1129] = 3.23973858E+00;
  COFD[1130] = -2.09989036E-01;
  COFD[1131] = 9.27667906E-03;
  COFD[1132] = -1.34709956E+01;
  COFD[1133] = 3.09379603E+00;
  COFD[1134] = -1.91268635E-01;
  COFD[1135] = 8.47480224E-03;
  COFD[1136] = -1.34723365E+01;
  COFD[1137] = 3.09379603E+00;
  COFD[1138] = -1.91268635E-01;
  COFD[1139] = 8.47480224E-03;
  COFD[1140] = -1.42229344E+01;
  COFD[1141] = 3.38669384E+00;
  COFD[1142] = -2.28784122E-01;
  COFD[1143] = 1.00790953E-02;
  COFD[1144] = -1.39914049E+01;
  COFD[1145] = 3.26384506E+00;
  COFD[1146] = -2.12947087E-01;
  COFD[1147] = 9.39743888E-03;
  COFD[1148] = -1.39924933E+01;
  COFD[1149] = 3.26384506E+00;
  COFD[1150] = -2.12947087E-01;
  COFD[1151] = 9.39743888E-03;
  COFD[1152] = -1.57040365E+01;
  COFD[1153] = 3.93614244E+00;
  COFD[1154] = -2.99111497E-01;
  COFD[1155] = 1.30888229E-02;
  COFD[1156] = -1.43129867E+01;
  COFD[1157] = 3.31177824E+00;
  COFD[1158] = -2.18945280E-01;
  COFD[1159] = 9.64764419E-03;
  COFD[1160] = -1.43135474E+01;
  COFD[1161] = 3.31177824E+00;
  COFD[1162] = -2.18945280E-01;
  COFD[1163] = 9.64764419E-03;
  COFD[1164] = -1.43140824E+01;
  COFD[1165] = 3.31177824E+00;
  COFD[1166] = -2.18945280E-01;
  COFD[1167] = 9.64764419E-03;
  COFD[1168] = -1.52614209E+01;
  COFD[1169] = 3.64565939E+00;
  COFD[1170] = -2.61726871E-01;
  COFD[1171] = 1.14799244E-02;
  COFD[1172] = -1.52611173E+01;
  COFD[1173] = 3.64565939E+00;
  COFD[1174] = -2.61726871E-01;
  COFD[1175] = 1.14799244E-02;
  COFD[1176] = -1.52614345E+01;
  COFD[1177] = 3.64565939E+00;
  COFD[1178] = -2.61726871E-01;
  COFD[1179] = 1.14799244E-02;
  COFD[1180] = -1.52617406E+01;
  COFD[1181] = 3.64565939E+00;
  COFD[1182] = -2.61726871E-01;
  COFD[1183] = 1.14799244E-02;
  COFD[1184] = -1.61866111E+01;
  COFD[1185] = 3.97811734E+00;
  COFD[1186] = -3.04543772E-01;
  COFD[1187] = 1.33243270E-02;
  COFD[1188] = -1.61868148E+01;
  COFD[1189] = 3.97811734E+00;
  COFD[1190] = -3.04543772E-01;
  COFD[1191] = 1.33243270E-02;
  COFD[1192] = -1.62900174E+01;
  COFD[1193] = 4.00742472E+00;
  COFD[1194] = -3.08303480E-01;
  COFD[1195] = 1.34859597E-02;
  COFD[1196] = -1.66550985E+01;
  COFD[1197] = 4.12489968E+00;
  COFD[1198] = -3.23119338E-01;
  COFD[1199] = 1.41122711E-02;
  COFD[1200] = -1.67231563E+01;
  COFD[1201] = 4.13947631E+00;
  COFD[1202] = -3.24881593E-01;
  COFD[1203] = 1.41834423E-02;
  COFD[1204] = -1.70329250E+01;
  COFD[1205] = 4.23969256E+00;
  COFD[1206] = -3.37288904E-01;
  COFD[1207] = 1.46975974E-02;
  COFD[1208] = -1.70961769E+01;
  COFD[1209] = 4.25191475E+00;
  COFD[1210] = -3.38783176E-01;
  COFD[1211] = 1.47586658E-02;
  COFD[1212] = -1.73560950E+01;
  COFD[1213] = 4.33584314E+00;
  COFD[1214] = -3.48938603E-01;
  COFD[1215] = 1.51686902E-02;
  COFD[1216] = -1.74178161E+01;
  COFD[1217] = 4.34629433E+00;
  COFD[1218] = -3.50240651E-01;
  COFD[1219] = 1.52229544E-02;
  COFD[1220] = -1.76841386E+01;
  COFD[1221] = 4.43623609E+00;
  COFD[1222] = -3.61391880E-01;
  COFD[1223] = 1.56853368E-02;
  COFD[1224] = -1.77370430E+01;
  COFD[1225] = 4.44459213E+00;
  COFD[1226] = -3.62399607E-01;
  COFD[1227] = 1.57258496E-02;
  COFD[1228] = -1.79421312E+01;
  COFD[1229] = 4.50796148E+00;
  COFD[1230] = -3.69986604E-01;
  COFD[1231] = 1.60286525E-02;
  COFD[1232] = -1.79977913E+01;
  COFD[1233] = 4.52066822E+00;
  COFD[1234] = -3.71551624E-01;
  COFD[1235] = 1.60931690E-02;
  COFD[1236] = -1.85196303E+01;
  COFD[1237] = 4.68077396E+00;
  COFD[1238] = -3.91229141E-01;
  COFD[1239] = 1.69020200E-02;
  COFD[1240] = -1.85196303E+01;
  COFD[1241] = 4.68077396E+00;
  COFD[1242] = -3.91229141E-01;
  COFD[1243] = 1.69020200E-02;
  COFD[1244] = -1.85196303E+01;
  COFD[1245] = 4.68077396E+00;
  COFD[1246] = -3.91229141E-01;
  COFD[1247] = 1.69020200E-02;
  COFD[1248] = -1.84634396E+01;
  COFD[1249] = 4.65797225E+00;
  COFD[1250] = -3.88483952E-01;
  COFD[1251] = 1.67915384E-02;
  COFD[1252] = -1.85877757E+01;
  COFD[1253] = 4.69975029E+00;
  COFD[1254] = -3.93412211E-01;
  COFD[1255] = 1.69852534E-02;
  COFD[1256] = -1.85877757E+01;
  COFD[1257] = 4.69975029E+00;
  COFD[1258] = -3.93412211E-01;
  COFD[1259] = 1.69852534E-02;
  COFD[1260] = -1.89368624E+01;
  COFD[1261] = 4.79578544E+00;
  COFD[1262] = -4.04706288E-01;
  COFD[1263] = 1.74277270E-02;
  COFD[1264] = -1.87542772E+01;
  COFD[1265] = 4.74513688E+00;
  COFD[1266] = -3.98725524E-01;
  COFD[1267] = 1.71922391E-02;
  COFD[1268] = -1.16906458E+01;
  COFD[1269] = 2.47469981E+00;
  COFD[1270] = -1.10436257E-01;
  COFD[1271] = 4.95273813E-03;
  COFD[1272] = -1.47122747E+01;
  COFD[1273] = 1.67339458E+00;
  COFD[1274] = 1.22536705E-01;
  COFD[1275] = -1.01692680E-02;
  COFD[1276] = -1.95739720E+01;
  COFD[1277] = 5.61113230E+00;
  COFD[1278] = -4.90190187E-01;
  COFD[1279] = 2.03260675E-02;
  COFD[1280] = -1.94093476E+01;
  COFD[1281] = 5.16013126E+00;
  COFD[1282] = -4.46824543E-01;
  COFD[1283] = 1.90464887E-02;
  COFD[1284] = -1.94252948E+01;
  COFD[1285] = 5.16013126E+00;
  COFD[1286] = -4.46824543E-01;
  COFD[1287] = 1.90464887E-02;
  COFD[1288] = -2.06463656E+01;
  COFD[1289] = 5.41688482E+00;
  COFD[1290] = -4.73387188E-01;
  COFD[1291] = 1.99280175E-02;
  COFD[1292] = -1.71983144E+01;
  COFD[1293] = 4.63881440E+00;
  COFD[1294] = -3.86139677E-01;
  COFD[1295] = 1.66955099E-02;
  COFD[1296] = -1.19157788E+01;
  COFD[1297] = 9.28952533E-01;
  COFD[1298] = 2.42107483E-01;
  COFD[1299] = -1.59824150E-02;
  COFD[1300] = -2.06516251E+01;
  COFD[1301] = 5.41688482E+00;
  COFD[1302] = -4.73387188E-01;
  COFD[1303] = 1.99280175E-02;
  COFD[1304] = -2.12652444E+01;
  COFD[1305] = 5.59961822E+00;
  COFD[1306] = -4.91624856E-01;
  COFD[1307] = 2.05035546E-02;
  COFD[1308] = -2.12639169E+01;
  COFD[1309] = 5.61184117E+00;
  COFD[1310] = -4.90532156E-01;
  COFD[1311] = 2.03507922E-02;
  COFD[1312] = -2.12639169E+01;
  COFD[1313] = 5.61184117E+00;
  COFD[1314] = -4.90532156E-01;
  COFD[1315] = 2.03507922E-02;
  COFD[1316] = -2.12831283E+01;
  COFD[1317] = 5.61184117E+00;
  COFD[1318] = -4.90532156E-01;
  COFD[1319] = 2.03507922E-02;
  COFD[1320] = -2.14087360E+01;
  COFD[1321] = 5.57281993E+00;
  COFD[1322] = -4.76690860E-01;
  COFD[1323] = 1.94000702E-02;
  COFD[1324] = -1.77498465E+01;
  COFD[1325] = 3.57475686E+00;
  COFD[1326] = -1.56396297E-01;
  COFD[1327] = 3.12157721E-03;
  COFD[1328] = -1.77563175E+01;
  COFD[1329] = 3.57475686E+00;
  COFD[1330] = -1.56396297E-01;
  COFD[1331] = 3.12157721E-03;
  COFD[1332] = -1.65295191E+01;
  COFD[1333] = 2.97569077E+00;
  COFD[1334] = -6.75650795E-02;
  COFD[1335] = -1.08649440E-03;
  COFD[1336] = -2.11388255E+01;
  COFD[1337] = 5.55529689E+00;
  COFD[1338] = -4.87942530E-01;
  COFD[1339] = 2.04249057E-02;
  COFD[1340] = -2.07653629E+01;
  COFD[1341] = 5.01091988E+00;
  COFD[1342] = -3.77985581E-01;
  COFD[1343] = 1.40968617E-02;
  COFD[1344] = -2.15095920E+01;
  COFD[1345] = 5.46737673E+00;
  COFD[1346] = -4.55696085E-01;
  COFD[1347] = 1.81982625E-02;
  COFD[1348] = -2.15172712E+01;
  COFD[1349] = 5.46737673E+00;
  COFD[1350] = -4.55696085E-01;
  COFD[1351] = 1.81982625E-02;
  COFD[1352] = -2.08812277E+01;
  COFD[1353] = 5.08859217E+00;
  COFD[1354] = -3.90525428E-01;
  COFD[1355] = 1.47376395E-02;
  COFD[1356] = -2.12597258E+01;
  COFD[1357] = 5.24930667E+00;
  COFD[1358] = -4.17435088E-01;
  COFD[1359] = 1.61434424E-02;
  COFD[1360] = -2.12661812E+01;
  COFD[1361] = 5.24930667E+00;
  COFD[1362] = -4.17435088E-01;
  COFD[1363] = 1.61434424E-02;
  COFD[1364] = -1.87419126E+01;
  COFD[1365] = 3.96926341E+00;
  COFD[1366] = -2.16412264E-01;
  COFD[1367] = 6.06012078E-03;
  COFD[1368] = -2.13847376E+01;
  COFD[1369] = 5.17440955E+00;
  COFD[1370] = -4.04678430E-01;
  COFD[1371] = 1.54706350E-02;
  COFD[1372] = -2.13884026E+01;
  COFD[1373] = 5.17440955E+00;
  COFD[1374] = -4.04678430E-01;
  COFD[1375] = 1.54706350E-02;
  COFD[1376] = -2.13919213E+01;
  COFD[1377] = 5.17440955E+00;
  COFD[1378] = -4.04678430E-01;
  COFD[1379] = 1.54706350E-02;
  COFD[1380] = -2.03436817E+01;
  COFD[1381] = 4.57152878E+00;
  COFD[1382] = -3.08371263E-01;
  COFD[1383] = 1.05838559E-02;
  COFD[1384] = -2.03415589E+01;
  COFD[1385] = 4.57152878E+00;
  COFD[1386] = -3.08371263E-01;
  COFD[1387] = 1.05838559E-02;
  COFD[1388] = -2.03437771E+01;
  COFD[1389] = 4.57152878E+00;
  COFD[1390] = -3.08371263E-01;
  COFD[1391] = 1.05838559E-02;
  COFD[1392] = -2.03459263E+01;
  COFD[1393] = 4.57152878E+00;
  COFD[1394] = -3.08371263E-01;
  COFD[1395] = 1.05838559E-02;
  COFD[1396] = -1.90109309E+01;
  COFD[1397] = 3.88639599E+00;
  COFD[1398] = -2.03781856E-01;
  COFD[1399] = 5.44050761E-03;
  COFD[1400] = -1.90124187E+01;
  COFD[1401] = 3.88639599E+00;
  COFD[1402] = -2.03781856E-01;
  COFD[1403] = 5.44050761E-03;
  COFD[1404] = -1.89282836E+01;
  COFD[1405] = 3.83078430E+00;
  COFD[1406] = -1.95235475E-01;
  COFD[1407] = 5.01957298E-03;
  COFD[1408] = -1.83523817E+01;
  COFD[1409] = 3.52256138E+00;
  COFD[1410] = -1.48611326E-01;
  COFD[1411] = 2.74505262E-03;
  COFD[1412] = -1.82597110E+01;
  COFD[1413] = 3.46551126E+00;
  COFD[1414] = -1.40122736E-01;
  COFD[1415] = 2.33569887E-03;
  COFD[1416] = -1.76500812E+01;
  COFD[1417] = 3.15831209E+00;
  COFD[1418] = -9.45393054E-02;
  COFD[1419] = 1.45090308E-04;
  COFD[1420] = -1.75950091E+01;
  COFD[1421] = 3.11831756E+00;
  COFD[1422] = -8.86463231E-02;
  COFD[1423] = -1.36388384E-04;
  COFD[1424] = -1.68531525E+01;
  COFD[1425] = 2.76314344E+00;
  COFD[1426] = -3.65464735E-02;
  COFD[1427] = -2.62462500E-03;
  COFD[1428] = -1.68094617E+01;
  COFD[1429] = 2.72701180E+00;
  COFD[1430] = -3.12353506E-02;
  COFD[1431] = -2.87882139E-03;
  COFD[1432] = -1.62777166E+01;
  COFD[1433] = 2.46665777E+00;
  COFD[1434] = 7.25684399E-03;
  COFD[1435] = -4.72424494E-03;
  COFD[1436] = -1.62527662E+01;
  COFD[1437] = 2.44062989E+00;
  COFD[1438] = 1.10981222E-02;
  COFD[1439] = -4.90788998E-03;
  COFD[1440] = -1.58057803E+01;
  COFD[1441] = 2.22000952E+00;
  COFD[1442] = 4.34143206E-02;
  COFD[1443] = -6.44371681E-03;
  COFD[1444] = -1.57426638E+01;
  COFD[1445] = 2.18116680E+00;
  COFD[1446] = 4.90755572E-02;
  COFD[1447] = -6.71158203E-03;
  COFD[1448] = -1.47119901E+01;
  COFD[1449] = 1.67339458E+00;
  COFD[1450] = 1.22536705E-01;
  COFD[1451] = -1.01692680E-02;
  COFD[1452] = -1.47119901E+01;
  COFD[1453] = 1.67339458E+00;
  COFD[1454] = 1.22536705E-01;
  COFD[1455] = -1.01692680E-02;
  COFD[1456] = -1.47119901E+01;
  COFD[1457] = 1.67339458E+00;
  COFD[1458] = 1.22536705E-01;
  COFD[1459] = -1.01692680E-02;
  COFD[1460] = -1.49248327E+01;
  COFD[1461] = 1.76546946E+00;
  COFD[1462] = 1.09258240E-01;
  COFD[1463] = -9.54522038E-03;
  COFD[1464] = -1.45392396E+01;
  COFD[1465] = 1.58706272E+00;
  COFD[1466] = 1.34937972E-01;
  COFD[1467] = -1.07491300E-02;
  COFD[1468] = -1.45392396E+01;
  COFD[1469] = 1.58706272E+00;
  COFD[1470] = 1.34937972E-01;
  COFD[1471] = -1.07491300E-02;
  COFD[1472] = -1.37015889E+01;
  COFD[1473] = 1.17648896E+00;
  COFD[1474] = 1.93830875E-01;
  COFD[1475] = -1.35014210E-02;
  COFD[1476] = -1.41324917E+01;
  COFD[1477] = 1.38727136E+00;
  COFD[1478] = 1.63642976E-01;
  COFD[1479] = -1.20926895E-02;
  COFD[1480] = -2.10643264E+01;
  COFD[1481] = 5.53614864E+00;
  COFD[1482] = -4.86046753E-01;
  COFD[1483] = 2.03659193E-02;
  COFD[1484] = -2.28978256E+01;
  COFD[1485] = 5.60324057E+00;
  COFD[1486] = -4.88278590E-01;
  COFD[1487] = 2.02076422E-02;
  COFD[1488] = -1.46559297E+01;
  COFD[1489] = 3.83606243E+00;
  COFD[1490] = -2.86076532E-01;
  COFD[1491] = 1.25205829E-02;
  COFD[1492] = -1.43238892E+01;
  COFD[1493] = 3.17651319E+00;
  COFD[1494] = -2.02028974E-01;
  COFD[1495] = 8.94232502E-03;
  COFD[1496] = -1.43444614E+01;
  COFD[1497] = 3.17651319E+00;
  COFD[1498] = -2.02028974E-01;
  COFD[1499] = 8.94232502E-03;
  COFD[1500] = -1.55740954E+01;
  COFD[1501] = 3.48070094E+00;
  COFD[1502] = -2.40859499E-01;
  COFD[1503] = 1.05972514E-02;
  COFD[1504] = -1.19006697E+01;
  COFD[1505] = 2.57507000E+00;
  COFD[1506] = -1.24033737E-01;
  COFD[1507] = 5.56694959E-03;
  COFD[1508] = -2.06516251E+01;
  COFD[1509] = 5.41688482E+00;
  COFD[1510] = -4.73387188E-01;
  COFD[1511] = 1.99280175E-02;
  COFD[1512] = -1.55816727E+01;
  COFD[1513] = 3.48070094E+00;
  COFD[1514] = -2.40859499E-01;
  COFD[1515] = 1.05972514E-02;
  COFD[1516] = -1.55661647E+01;
  COFD[1517] = 3.48070094E+00;
  COFD[1518] = -2.40859499E-01;
  COFD[1519] = 1.05972514E-02;
  COFD[1520] = -1.63345789E+01;
  COFD[1521] = 3.82388595E+00;
  COFD[1522] = -2.84480724E-01;
  COFD[1523] = 1.24506311E-02;
  COFD[1524] = -1.63345789E+01;
  COFD[1525] = 3.82388595E+00;
  COFD[1526] = -2.84480724E-01;
  COFD[1527] = 1.24506311E-02;
  COFD[1528] = -1.63588948E+01;
  COFD[1529] = 3.82388595E+00;
  COFD[1530] = -2.84480724E-01;
  COFD[1531] = 1.24506311E-02;
  COFD[1532] = -1.62824385E+01;
  COFD[1533] = 3.79163564E+00;
  COFD[1534] = -2.80257365E-01;
  COFD[1535] = 1.22656902E-02;
  COFD[1536] = -2.08347318E+01;
  COFD[1537] = 5.35267674E+00;
  COFD[1538] = -4.69010505E-01;
  COFD[1539] = 1.98979152E-02;
  COFD[1540] = -2.08438728E+01;
  COFD[1541] = 5.35267674E+00;
  COFD[1542] = -4.69010505E-01;
  COFD[1543] = 1.98979152E-02;
  COFD[1544] = -2.02710239E+01;
  COFD[1545] = 5.14984081E+00;
  COFD[1546] = -4.46093018E-01;
  COFD[1547] = 1.90396647E-02;
  COFD[1548] = -1.52861287E+01;
  COFD[1549] = 3.36790500E+00;
  COFD[1550] = -2.26321740E-01;
  COFD[1551] = 9.97135055E-03;
  COFD[1552] = -1.84862906E+01;
  COFD[1553] = 4.49330851E+00;
  COFD[1554] = -3.68208715E-01;
  COFD[1555] = 1.59565402E-02;
  COFD[1556] = -1.78969625E+01;
  COFD[1557] = 4.29613154E+00;
  COFD[1558] = -3.44012526E-01;
  COFD[1559] = 1.49643715E-02;
  COFD[1560] = -1.79076305E+01;
  COFD[1561] = 4.29613154E+00;
  COFD[1562] = -3.44012526E-01;
  COFD[1563] = 1.49643715E-02;
  COFD[1564] = -1.89685112E+01;
  COFD[1565] = 4.68595732E+00;
  COFD[1566] = -3.91842840E-01;
  COFD[1567] = 1.69262542E-02;
  COFD[1568] = -1.86478950E+01;
  COFD[1569] = 4.53572533E+00;
  COFD[1570] = -3.73386925E-01;
  COFD[1571] = 1.61678881E-02;
  COFD[1572] = -1.86570161E+01;
  COFD[1573] = 4.53572533E+00;
  COFD[1574] = -3.73386925E-01;
  COFD[1575] = 1.61678881E-02;
  COFD[1576] = -2.05408587E+01;
  COFD[1577] = 5.18417470E+00;
  COFD[1578] = -4.49491573E-01;
  COFD[1579] = 1.91438508E-02;
  COFD[1580] = -1.91291085E+01;
  COFD[1581] = 4.61801405E+00;
  COFD[1582] = -3.83535652E-01;
  COFD[1583] = 1.65862513E-02;
  COFD[1584] = -1.91345636E+01;
  COFD[1585] = 4.61801405E+00;
  COFD[1586] = -3.83535652E-01;
  COFD[1587] = 1.65862513E-02;
  COFD[1588] = -1.91398195E+01;
  COFD[1589] = 4.61801405E+00;
  COFD[1590] = -3.83535652E-01;
  COFD[1591] = 1.65862513E-02;
  COFD[1592] = -2.02658847E+01;
  COFD[1593] = 4.97613338E+00;
  COFD[1594] = -4.26175206E-01;
  COFD[1595] = 1.82809270E-02;
  COFD[1596] = -2.02625924E+01;
  COFD[1597] = 4.97613338E+00;
  COFD[1598] = -4.26175206E-01;
  COFD[1599] = 1.82809270E-02;
  COFD[1600] = -2.02660328E+01;
  COFD[1601] = 4.97613338E+00;
  COFD[1602] = -4.26175206E-01;
  COFD[1603] = 1.82809270E-02;
  COFD[1604] = -2.02693743E+01;
  COFD[1605] = 4.97613338E+00;
  COFD[1606] = -4.26175206E-01;
  COFD[1607] = 1.82809270E-02;
  COFD[1608] = -2.10774499E+01;
  COFD[1609] = 5.22065615E+00;
  COFD[1610] = -4.53751850E-01;
  COFD[1611] = 1.93099506E-02;
  COFD[1612] = -2.10798254E+01;
  COFD[1613] = 5.22065615E+00;
  COFD[1614] = -4.53751850E-01;
  COFD[1615] = 1.93099506E-02;
  COFD[1616] = -2.11841950E+01;
  COFD[1617] = 5.24746668E+00;
  COFD[1618] = -4.56860091E-01;
  COFD[1619] = 1.94300718E-02;
  COFD[1620] = -2.15884087E+01;
  COFD[1621] = 5.35995365E+00;
  COFD[1622] = -4.69587823E-01;
  COFD[1623] = 1.99080702E-02;
  COFD[1624] = -2.16427504E+01;
  COFD[1625] = 5.36662551E+00;
  COFD[1626] = -4.70010078E-01;
  COFD[1627] = 1.99083076E-02;
  COFD[1628] = -2.18544613E+01;
  COFD[1629] = 5.40768793E+00;
  COFD[1630] = -4.72942538E-01;
  COFD[1631] = 1.99389038E-02;
  COFD[1632] = -2.19026814E+01;
  COFD[1633] = 5.41245931E+00;
  COFD[1634] = -4.73255987E-01;
  COFD[1635] = 1.99402041E-02;
  COFD[1636] = -2.21542057E+01;
  COFD[1637] = 5.47842731E+00;
  COFD[1638] = -4.79952894E-01;
  COFD[1639] = 2.01568406E-02;
  COFD[1640] = -2.22145663E+01;
  COFD[1641] = 5.48767364E+00;
  COFD[1642] = -4.80980618E-01;
  COFD[1643] = 2.01946539E-02;
  COFD[1644] = -2.24546921E+01;
  COFD[1645] = 5.55319328E+00;
  COFD[1646] = -4.87759313E-01;
  COFD[1647] = 2.04205124E-02;
  COFD[1648] = -2.25002960E+01;
  COFD[1649] = 5.55793029E+00;
  COFD[1650] = -4.88170533E-01;
  COFD[1651] = 2.04302911E-02;
  COFD[1652] = -2.26669368E+01;
  COFD[1653] = 5.59528609E+00;
  COFD[1654] = -4.91473190E-01;
  COFD[1655] = 2.05131236E-02;
  COFD[1656] = -2.27035769E+01;
  COFD[1657] = 5.59897074E+00;
  COFD[1658] = -4.91655801E-01;
  COFD[1659] = 2.05094389E-02;
  COFD[1660] = -2.28973304E+01;
  COFD[1661] = 5.60324057E+00;
  COFD[1662] = -4.88278590E-01;
  COFD[1663] = 2.02076422E-02;
  COFD[1664] = -2.28973304E+01;
  COFD[1665] = 5.60324057E+00;
  COFD[1666] = -4.88278590E-01;
  COFD[1667] = 2.02076422E-02;
  COFD[1668] = -2.28973304E+01;
  COFD[1669] = 5.60324057E+00;
  COFD[1670] = -4.88278590E-01;
  COFD[1671] = 2.02076422E-02;
  COFD[1672] = -2.29049835E+01;
  COFD[1673] = 5.61013561E+00;
  COFD[1674] = -4.89933558E-01;
  COFD[1675] = 2.03098561E-02;
  COFD[1676] = -2.29187135E+01;
  COFD[1677] = 5.59504443E+00;
  COFD[1678] = -4.86415566E-01;
  COFD[1679] = 2.00947399E-02;
  COFD[1680] = -2.29187135E+01;
  COFD[1681] = 5.59504443E+00;
  COFD[1682] = -4.86415566E-01;
  COFD[1683] = 2.00947399E-02;
  COFD[1684] = -2.30508458E+01;
  COFD[1685] = 5.58490491E+00;
  COFD[1686] = -4.81582466E-01;
  COFD[1687] = 1.97440305E-02;
  COFD[1688] = -2.29645447E+01;
  COFD[1689] = 5.58219321E+00;
  COFD[1690] = -4.82941269E-01;
  COFD[1691] = 1.98711890E-02;
  COFD[1692] = -1.52554785E+01;
  COFD[1693] = 3.35922578E+00;
  COFD[1694] = -2.25181399E-01;
  COFD[1695] = 9.92132878E-03;
  COFD[1696] = -2.28722333E+01;
  COFD[1697] = 5.60324057E+00;
  COFD[1698] = -4.88278590E-01;
  COFD[1699] = 2.02076422E-02;
  COFD[1700] = -1.46550238E+01;
  COFD[1701] = 3.83606243E+00;
  COFD[1702] = -2.86076532E-01;
  COFD[1703] = 1.25205829E-02;
  COFD[1704] = -1.43139120E+01;
  COFD[1705] = 3.17651319E+00;
  COFD[1706] = -2.02028974E-01;
  COFD[1707] = 8.94232502E-03;
  COFD[1708] = -1.43340695E+01;
  COFD[1709] = 3.17651319E+00;
  COFD[1710] = -2.02028974E-01;
  COFD[1711] = 8.94232502E-03;
  COFD[1712] = -1.55588172E+01;
  COFD[1713] = 3.48070094E+00;
  COFD[1714] = -2.40859499E-01;
  COFD[1715] = 1.05972514E-02;
  COFD[1716] = -1.18989101E+01;
  COFD[1717] = 2.57507000E+00;
  COFD[1718] = -1.24033737E-01;
  COFD[1719] = 5.56694959E-03;
  COFD[1720] = -2.12652444E+01;
  COFD[1721] = 5.59961822E+00;
  COFD[1722] = -4.91624856E-01;
  COFD[1723] = 2.05035546E-02;
  COFD[1724] = -1.55661647E+01;
  COFD[1725] = 3.48070094E+00;
  COFD[1726] = -2.40859499E-01;
  COFD[1727] = 1.05972514E-02;
  COFD[1728] = -1.55511233E+01;
  COFD[1729] = 3.48070094E+00;
  COFD[1730] = -2.40859499E-01;
  COFD[1731] = 1.05972514E-02;
  COFD[1732] = -1.63254645E+01;
  COFD[1733] = 3.82388595E+00;
  COFD[1734] = -2.84480724E-01;
  COFD[1735] = 1.24506311E-02;
  COFD[1736] = -1.63254645E+01;
  COFD[1737] = 3.82388595E+00;
  COFD[1738] = -2.84480724E-01;
  COFD[1739] = 1.24506311E-02;
  COFD[1740] = -1.63493305E+01;
  COFD[1741] = 3.82388595E+00;
  COFD[1742] = -2.84480724E-01;
  COFD[1743] = 1.24506311E-02;
  COFD[1744] = -1.62724429E+01;
  COFD[1745] = 3.79163564E+00;
  COFD[1746] = -2.80257365E-01;
  COFD[1747] = 1.22656902E-02;
  COFD[1748] = -2.08204356E+01;
  COFD[1749] = 5.35267674E+00;
  COFD[1750] = -4.69010505E-01;
  COFD[1751] = 1.98979152E-02;
  COFD[1752] = -2.08293167E+01;
  COFD[1753] = 5.35267674E+00;
  COFD[1754] = -4.69010505E-01;
  COFD[1755] = 1.98979152E-02;
  COFD[1756] = -2.04928875E+01;
  COFD[1757] = 5.22397941E+00;
  COFD[1758] = -4.54138181E-01;
  COFD[1759] = 1.93249289E-02;
  COFD[1760] = -1.52721010E+01;
  COFD[1761] = 3.36790500E+00;
  COFD[1762] = -2.26321740E-01;
  COFD[1763] = 9.97135055E-03;
  COFD[1764] = -1.84688303E+01;
  COFD[1765] = 4.49330851E+00;
  COFD[1766] = -3.68208715E-01;
  COFD[1767] = 1.59565402E-02;
  COFD[1768] = -1.78834868E+01;
  COFD[1769] = 4.29613154E+00;
  COFD[1770] = -3.44012526E-01;
  COFD[1771] = 1.49643715E-02;
  COFD[1772] = -1.78938681E+01;
  COFD[1773] = 4.29613154E+00;
  COFD[1774] = -3.44012526E-01;
  COFD[1775] = 1.49643715E-02;
  COFD[1776] = -1.89544717E+01;
  COFD[1777] = 4.68595732E+00;
  COFD[1778] = -3.91842840E-01;
  COFD[1779] = 1.69262542E-02;
  COFD[1780] = -1.86335873E+01;
  COFD[1781] = 4.53572533E+00;
  COFD[1782] = -3.73386925E-01;
  COFD[1783] = 1.61678881E-02;
  COFD[1784] = -1.86424488E+01;
  COFD[1785] = 4.53572533E+00;
  COFD[1786] = -3.73386925E-01;
  COFD[1787] = 1.61678881E-02;
  COFD[1788] = -2.05235643E+01;
  COFD[1789] = 5.18417470E+00;
  COFD[1790] = -4.49491573E-01;
  COFD[1791] = 1.91438508E-02;
  COFD[1792] = -1.91121670E+01;
  COFD[1793] = 4.61801405E+00;
  COFD[1794] = -3.83535652E-01;
  COFD[1795] = 1.65862513E-02;
  COFD[1796] = -1.91174394E+01;
  COFD[1797] = 4.61801405E+00;
  COFD[1798] = -3.83535652E-01;
  COFD[1799] = 1.65862513E-02;
  COFD[1800] = -1.91225175E+01;
  COFD[1801] = 4.61801405E+00;
  COFD[1802] = -3.83535652E-01;
  COFD[1803] = 1.65862513E-02;
  COFD[1804] = -2.02466527E+01;
  COFD[1805] = 4.97613338E+00;
  COFD[1806] = -4.26175206E-01;
  COFD[1807] = 1.82809270E-02;
  COFD[1808] = -2.02434842E+01;
  COFD[1809] = 4.97613338E+00;
  COFD[1810] = -4.26175206E-01;
  COFD[1811] = 1.82809270E-02;
  COFD[1812] = -2.02467952E+01;
  COFD[1813] = 4.97613338E+00;
  COFD[1814] = -4.26175206E-01;
  COFD[1815] = 1.82809270E-02;
  COFD[1816] = -2.02500103E+01;
  COFD[1817] = 4.97613338E+00;
  COFD[1818] = -4.26175206E-01;
  COFD[1819] = 1.82809270E-02;
  COFD[1820] = -2.10567703E+01;
  COFD[1821] = 5.22065615E+00;
  COFD[1822] = -4.53751850E-01;
  COFD[1823] = 1.93099506E-02;
  COFD[1824] = -2.10590493E+01;
  COFD[1825] = 5.22065615E+00;
  COFD[1826] = -4.53751850E-01;
  COFD[1827] = 1.93099506E-02;
  COFD[1828] = -2.11633243E+01;
  COFD[1829] = 5.24746668E+00;
  COFD[1830] = -4.56860091E-01;
  COFD[1831] = 1.94300718E-02;
  COFD[1832] = -2.15664626E+01;
  COFD[1833] = 5.35995365E+00;
  COFD[1834] = -4.69587823E-01;
  COFD[1835] = 1.99080702E-02;
  COFD[1836] = -2.16207309E+01;
  COFD[1837] = 5.36662551E+00;
  COFD[1838] = -4.70010078E-01;
  COFD[1839] = 1.99083076E-02;
  COFD[1840] = -2.18315953E+01;
  COFD[1841] = 5.40768793E+00;
  COFD[1842] = -4.72942538E-01;
  COFD[1843] = 1.99389038E-02;
  COFD[1844] = -2.18797567E+01;
  COFD[1845] = 5.41245931E+00;
  COFD[1846] = -4.73255987E-01;
  COFD[1847] = 1.99402041E-02;
  COFD[1848] = -2.21305975E+01;
  COFD[1849] = 5.47842731E+00;
  COFD[1850] = -4.79952894E-01;
  COFD[1851] = 2.01568406E-02;
  COFD[1852] = -2.21909103E+01;
  COFD[1853] = 5.48767364E+00;
  COFD[1854] = -4.80980618E-01;
  COFD[1855] = 2.01946539E-02;
  COFD[1856] = -2.24304725E+01;
  COFD[1857] = 5.55319328E+00;
  COFD[1858] = -4.87759313E-01;
  COFD[1859] = 2.04205124E-02;
  COFD[1860] = -2.24760366E+01;
  COFD[1861] = 5.55793029E+00;
  COFD[1862] = -4.88170533E-01;
  COFD[1863] = 2.04302911E-02;
  COFD[1864] = -2.26422048E+01;
  COFD[1865] = 5.59528609E+00;
  COFD[1866] = -4.91473190E-01;
  COFD[1867] = 2.05131236E-02;
  COFD[1868] = -2.26788112E+01;
  COFD[1869] = 5.59897074E+00;
  COFD[1870] = -4.91655801E-01;
  COFD[1871] = 2.05094389E-02;
  COFD[1872] = -2.28717628E+01;
  COFD[1873] = 5.60324057E+00;
  COFD[1874] = -4.88278590E-01;
  COFD[1875] = 2.02076422E-02;
  COFD[1876] = -2.28717628E+01;
  COFD[1877] = 5.60324057E+00;
  COFD[1878] = -4.88278590E-01;
  COFD[1879] = 2.02076422E-02;
  COFD[1880] = -2.28717628E+01;
  COFD[1881] = 5.60324057E+00;
  COFD[1882] = -4.88278590E-01;
  COFD[1883] = 2.02076422E-02;
  COFD[1884] = -2.28794409E+01;
  COFD[1885] = 5.61013561E+00;
  COFD[1886] = -4.89933558E-01;
  COFD[1887] = 2.03098561E-02;
  COFD[1888] = -2.28924656E+01;
  COFD[1889] = 5.59504443E+00;
  COFD[1890] = -4.86415566E-01;
  COFD[1891] = 2.00947399E-02;
  COFD[1892] = -2.28924656E+01;
  COFD[1893] = 5.59504443E+00;
  COFD[1894] = -4.86415566E-01;
  COFD[1895] = 2.00947399E-02;
  COFD[1896] = -2.30240812E+01;
  COFD[1897] = 5.58490491E+00;
  COFD[1898] = -4.81582466E-01;
  COFD[1899] = 1.97440305E-02;
  COFD[1900] = -2.29380382E+01;
  COFD[1901] = 5.58219321E+00;
  COFD[1902] = -4.82941269E-01;
  COFD[1903] = 1.98711890E-02;
  COFD[1904] = -1.52414498E+01;
  COFD[1905] = 3.35922578E+00;
  COFD[1906] = -2.25181399E-01;
  COFD[1907] = 9.92132878E-03;
  COFD[1908] = -2.26017407E+01;
  COFD[1909] = 5.50133264E+00;
  COFD[1910] = -4.62484498E-01;
  COFD[1911] = 1.85871217E-02;
  COFD[1912] = -1.57972520E+01;
  COFD[1913] = 4.22225052E+00;
  COFD[1914] = -3.35156428E-01;
  COFD[1915] = 1.46104855E-02;
  COFD[1916] = -1.50584188E+01;
  COFD[1917] = 3.47945612E+00;
  COFD[1918] = -2.40703722E-01;
  COFD[1919] = 1.05907441E-02;
  COFD[1920] = -1.50724583E+01;
  COFD[1921] = 3.47945612E+00;
  COFD[1922] = -2.40703722E-01;
  COFD[1923] = 1.05907441E-02;
  COFD[1924] = -1.63301401E+01;
  COFD[1925] = 3.82388595E+00;
  COFD[1926] = -2.84480724E-01;
  COFD[1927] = 1.24506311E-02;
  COFD[1928] = -1.25099100E+01;
  COFD[1929] = 2.77873601E+00;
  COFD[1930] = -1.50637360E-01;
  COFD[1931] = 6.72684281E-03;
  COFD[1932] = -2.12639169E+01;
  COFD[1933] = 5.61184117E+00;
  COFD[1934] = -4.90532156E-01;
  COFD[1935] = 2.03507922E-02;
  COFD[1936] = -1.63345789E+01;
  COFD[1937] = 3.82388595E+00;
  COFD[1938] = -2.84480724E-01;
  COFD[1939] = 1.24506311E-02;
  COFD[1940] = -1.63254645E+01;
  COFD[1941] = 3.82388595E+00;
  COFD[1942] = -2.84480724E-01;
  COFD[1943] = 1.24506311E-02;
  COFD[1944] = -1.73027539E+01;
  COFD[1945] = 4.21416723E+00;
  COFD[1946] = -3.34163932E-01;
  COFD[1947] = 1.45697432E-02;
  COFD[1948] = -1.73027539E+01;
  COFD[1949] = 4.21416723E+00;
  COFD[1950] = -3.34163932E-01;
  COFD[1951] = 1.45697432E-02;
  COFD[1952] = -1.73198022E+01;
  COFD[1953] = 4.21416723E+00;
  COFD[1954] = -3.34163932E-01;
  COFD[1955] = 1.45697432E-02;
  COFD[1956] = -1.72556722E+01;
  COFD[1957] = 4.19029808E+00;
  COFD[1958] = -3.31177076E-01;
  COFD[1959] = 1.44446234E-02;
  COFD[1960] = -2.14160667E+01;
  COFD[1961] = 5.56531152E+00;
  COFD[1962] = -4.88789821E-01;
  COFD[1963] = 2.04437116E-02;
  COFD[1964] = -2.14215667E+01;
  COFD[1965] = 5.56531152E+00;
  COFD[1966] = -4.88789821E-01;
  COFD[1967] = 2.04437116E-02;
  COFD[1968] = -2.09376165E+01;
  COFD[1969] = 5.40870099E+00;
  COFD[1970] = -4.73017610E-01;
  COFD[1971] = 1.99399066E-02;
  COFD[1972] = -1.59634493E+01;
  COFD[1973] = 3.67388294E+00;
  COFD[1974] = -2.64990709E-01;
  COFD[1975] = 1.16042706E-02;
  COFD[1976] = -1.93015519E+01;
  COFD[1977] = 4.85015581E+00;
  COFD[1978] = -4.10945109E-01;
  COFD[1979] = 1.76651398E-02;
  COFD[1980] = -1.88241056E+01;
  COFD[1981] = 4.68393046E+00;
  COFD[1982] = -3.91610863E-01;
  COFD[1983] = 1.69174645E-02;
  COFD[1984] = -1.88306727E+01;
  COFD[1985] = 4.68393046E+00;
  COFD[1986] = -3.91610863E-01;
  COFD[1987] = 1.69174645E-02;
  COFD[1988] = -1.98418097E+01;
  COFD[1989] = 5.04367502E+00;
  COFD[1990] = -4.34153325E-01;
  COFD[1991] = 1.85956055E-02;
  COFD[1992] = -1.95263296E+01;
  COFD[1993] = 4.90255048E+00;
  COFD[1994] = -4.17368501E-01;
  COFD[1995] = 1.79287358E-02;
  COFD[1996] = -1.95318159E+01;
  COFD[1997] = 4.90255048E+00;
  COFD[1998] = -4.17368501E-01;
  COFD[1999] = 1.79287358E-02;
  COFD[2000] = -2.11378438E+01;
  COFD[2001] = 5.42846112E+00;
  COFD[2002] = -4.74321870E-01;
  COFD[2003] = 1.99459749E-02;
  COFD[2004] = -1.99547139E+01;
  COFD[2005] = 4.97875278E+00;
  COFD[2006] = -4.26485475E-01;
  COFD[2007] = 1.82931933E-02;
  COFD[2008] = -1.99577723E+01;
  COFD[2009] = 4.97875278E+00;
  COFD[2010] = -4.26485475E-01;
  COFD[2011] = 1.82931933E-02;
  COFD[2012] = -1.99607050E+01;
  COFD[2013] = 4.97875278E+00;
  COFD[2014] = -4.26485475E-01;
  COFD[2015] = 1.82931933E-02;
  COFD[2016] = -2.10296107E+01;
  COFD[2017] = 5.31360223E+00;
  COFD[2018] = -4.64787000E-01;
  COFD[2019] = 1.97483720E-02;
  COFD[2020] = -2.10278631E+01;
  COFD[2021] = 5.31360223E+00;
  COFD[2022] = -4.64787000E-01;
  COFD[2023] = 1.97483720E-02;
  COFD[2024] = -2.10296892E+01;
  COFD[2025] = 5.31360223E+00;
  COFD[2026] = -4.64787000E-01;
  COFD[2027] = 1.97483720E-02;
  COFD[2028] = -2.10314572E+01;
  COFD[2029] = 5.31360223E+00;
  COFD[2030] = -4.64787000E-01;
  COFD[2031] = 1.97483720E-02;
  COFD[2032] = -2.16185142E+01;
  COFD[2033] = 5.46403569E+00;
  COFD[2034] = -4.78350420E-01;
  COFD[2035] = 2.00977393E-02;
  COFD[2036] = -2.16197278E+01;
  COFD[2037] = 5.46403569E+00;
  COFD[2038] = -4.78350420E-01;
  COFD[2039] = 2.00977393E-02;
  COFD[2040] = -2.17223367E+01;
  COFD[2041] = 5.48994516E+00;
  COFD[2042] = -4.81227667E-01;
  COFD[2043] = 2.02034730E-02;
  COFD[2044] = -2.20524593E+01;
  COFD[2045] = 5.57296554E+00;
  COFD[2046] = -4.89394407E-01;
  COFD[2047] = 2.04545698E-02;
  COFD[2048] = -2.21137255E+01;
  COFD[2049] = 5.58321831E+00;
  COFD[2050] = -4.90326754E-01;
  COFD[2051] = 2.04795763E-02;
  COFD[2052] = -2.22894017E+01;
  COFD[2053] = 5.61199715E+00;
  COFD[2054] = -4.91433824E-01;
  COFD[2055] = 2.04245969E-02;
  COFD[2056] = -2.23258695E+01;
  COFD[2057] = 5.61225559E+00;
  COFD[2058] = -4.91099448E-01;
  COFD[2059] = 2.03956433E-02;
  COFD[2060] = -2.23654179E+01;
  COFD[2061] = 5.58969231E+00;
  COFD[2062] = -4.85146102E-01;
  COFD[2063] = 2.00165025E-02;
  COFD[2064] = -2.23985448E+01;
  COFD[2065] = 5.58772453E+00;
  COFD[2066] = -4.84560536E-01;
  COFD[2067] = 1.99777728E-02;
  COFD[2068] = -2.24759590E+01;
  COFD[2069] = 5.58488808E+00;
  COFD[2070] = -4.81505670E-01;
  COFD[2071] = 1.97377350E-02;
  COFD[2072] = -2.25101726E+01;
  COFD[2073] = 5.58519141E+00;
  COFD[2074] = -4.81277367E-01;
  COFD[2075] = 1.97172346E-02;
  COFD[2076] = -2.25790297E+01;
  COFD[2077] = 5.58175450E+00;
  COFD[2078] = -4.78660487E-01;
  COFD[2079] = 1.95178220E-02;
  COFD[2080] = -2.25990233E+01;
  COFD[2081] = 5.57844215E+00;
  COFD[2082] = -4.77821874E-01;
  COFD[2083] = 1.94651835E-02;
  COFD[2084] = -2.26015143E+01;
  COFD[2085] = 5.50133264E+00;
  COFD[2086] = -4.62484498E-01;
  COFD[2087] = 1.85871217E-02;
  COFD[2088] = -2.26015143E+01;
  COFD[2089] = 5.50133264E+00;
  COFD[2090] = -4.62484498E-01;
  COFD[2091] = 1.85871217E-02;
  COFD[2092] = -2.26015143E+01;
  COFD[2093] = 5.50133264E+00;
  COFD[2094] = -4.62484498E-01;
  COFD[2095] = 1.85871217E-02;
  COFD[2096] = -2.26049038E+01;
  COFD[2097] = 5.50714270E+00;
  COFD[2098] = -4.64060018E-01;
  COFD[2099] = 1.86881341E-02;
  COFD[2100] = -2.26219796E+01;
  COFD[2101] = 5.49570925E+00;
  COFD[2102] = -4.60969345E-01;
  COFD[2103] = 1.84906305E-02;
  COFD[2104] = -2.26219796E+01;
  COFD[2105] = 5.49570925E+00;
  COFD[2106] = -4.60969345E-01;
  COFD[2107] = 1.84906305E-02;
  COFD[2108] = -2.25800355E+01;
  COFD[2109] = 5.41345955E+00;
  COFD[2110] = -4.45914240E-01;
  COFD[2111] = 1.76631357E-02;
  COFD[2112] = -2.26059105E+01;
  COFD[2113] = 5.45743664E+00;
  COFD[2114] = -4.53877300E-01;
  COFD[2115] = 1.80982969E-02;
  COFD[2116] = -1.59404910E+01;
  COFD[2117] = 3.66853818E+00;
  COFD[2118] = -2.64346221E-01;
  COFD[2119] = 1.15784613E-02;
  COFD[2120] = -2.26017407E+01;
  COFD[2121] = 5.50133264E+00;
  COFD[2122] = -4.62484498E-01;
  COFD[2123] = 1.85871217E-02;
  COFD[2124] = -1.57972520E+01;
  COFD[2125] = 4.22225052E+00;
  COFD[2126] = -3.35156428E-01;
  COFD[2127] = 1.46104855E-02;
  COFD[2128] = -1.50584188E+01;
  COFD[2129] = 3.47945612E+00;
  COFD[2130] = -2.40703722E-01;
  COFD[2131] = 1.05907441E-02;
  COFD[2132] = -1.50724583E+01;
  COFD[2133] = 3.47945612E+00;
  COFD[2134] = -2.40703722E-01;
  COFD[2135] = 1.05907441E-02;
  COFD[2136] = -1.63301401E+01;
  COFD[2137] = 3.82388595E+00;
  COFD[2138] = -2.84480724E-01;
  COFD[2139] = 1.24506311E-02;
  COFD[2140] = -1.25099100E+01;
  COFD[2141] = 2.77873601E+00;
  COFD[2142] = -1.50637360E-01;
  COFD[2143] = 6.72684281E-03;
  COFD[2144] = -2.12639169E+01;
  COFD[2145] = 5.61184117E+00;
  COFD[2146] = -4.90532156E-01;
  COFD[2147] = 2.03507922E-02;
  COFD[2148] = -1.63345789E+01;
  COFD[2149] = 3.82388595E+00;
  COFD[2150] = -2.84480724E-01;
  COFD[2151] = 1.24506311E-02;
  COFD[2152] = -1.63254645E+01;
  COFD[2153] = 3.82388595E+00;
  COFD[2154] = -2.84480724E-01;
  COFD[2155] = 1.24506311E-02;
  COFD[2156] = -1.73027539E+01;
  COFD[2157] = 4.21416723E+00;
  COFD[2158] = -3.34163932E-01;
  COFD[2159] = 1.45697432E-02;
  COFD[2160] = -1.73027539E+01;
  COFD[2161] = 4.21416723E+00;
  COFD[2162] = -3.34163932E-01;
  COFD[2163] = 1.45697432E-02;
  COFD[2164] = -1.73198022E+01;
  COFD[2165] = 4.21416723E+00;
  COFD[2166] = -3.34163932E-01;
  COFD[2167] = 1.45697432E-02;
  COFD[2168] = -1.72556722E+01;
  COFD[2169] = 4.19029808E+00;
  COFD[2170] = -3.31177076E-01;
  COFD[2171] = 1.44446234E-02;
  COFD[2172] = -2.14160667E+01;
  COFD[2173] = 5.56531152E+00;
  COFD[2174] = -4.88789821E-01;
  COFD[2175] = 2.04437116E-02;
  COFD[2176] = -2.14215667E+01;
  COFD[2177] = 5.56531152E+00;
  COFD[2178] = -4.88789821E-01;
  COFD[2179] = 2.04437116E-02;
  COFD[2180] = -2.09376165E+01;
  COFD[2181] = 5.40870099E+00;
  COFD[2182] = -4.73017610E-01;
  COFD[2183] = 1.99399066E-02;
  COFD[2184] = -1.59634493E+01;
  COFD[2185] = 3.67388294E+00;
  COFD[2186] = -2.64990709E-01;
  COFD[2187] = 1.16042706E-02;
  COFD[2188] = -1.93015519E+01;
  COFD[2189] = 4.85015581E+00;
  COFD[2190] = -4.10945109E-01;
  COFD[2191] = 1.76651398E-02;
  COFD[2192] = -1.88241056E+01;
  COFD[2193] = 4.68393046E+00;
  COFD[2194] = -3.91610863E-01;
  COFD[2195] = 1.69174645E-02;
  COFD[2196] = -1.88306727E+01;
  COFD[2197] = 4.68393046E+00;
  COFD[2198] = -3.91610863E-01;
  COFD[2199] = 1.69174645E-02;
  COFD[2200] = -1.98418097E+01;
  COFD[2201] = 5.04367502E+00;
  COFD[2202] = -4.34153325E-01;
  COFD[2203] = 1.85956055E-02;
  COFD[2204] = -1.95263296E+01;
  COFD[2205] = 4.90255048E+00;
  COFD[2206] = -4.17368501E-01;
  COFD[2207] = 1.79287358E-02;
  COFD[2208] = -1.95318159E+01;
  COFD[2209] = 4.90255048E+00;
  COFD[2210] = -4.17368501E-01;
  COFD[2211] = 1.79287358E-02;
  COFD[2212] = -2.11378438E+01;
  COFD[2213] = 5.42846112E+00;
  COFD[2214] = -4.74321870E-01;
  COFD[2215] = 1.99459749E-02;
  COFD[2216] = -1.99547139E+01;
  COFD[2217] = 4.97875278E+00;
  COFD[2218] = -4.26485475E-01;
  COFD[2219] = 1.82931933E-02;
  COFD[2220] = -1.99577723E+01;
  COFD[2221] = 4.97875278E+00;
  COFD[2222] = -4.26485475E-01;
  COFD[2223] = 1.82931933E-02;
  COFD[2224] = -1.99607050E+01;
  COFD[2225] = 4.97875278E+00;
  COFD[2226] = -4.26485475E-01;
  COFD[2227] = 1.82931933E-02;
  COFD[2228] = -2.10296107E+01;
  COFD[2229] = 5.31360223E+00;
  COFD[2230] = -4.64787000E-01;
  COFD[2231] = 1.97483720E-02;
  COFD[2232] = -2.10278631E+01;
  COFD[2233] = 5.31360223E+00;
  COFD[2234] = -4.64787000E-01;
  COFD[2235] = 1.97483720E-02;
  COFD[2236] = -2.10296892E+01;
  COFD[2237] = 5.31360223E+00;
  COFD[2238] = -4.64787000E-01;
  COFD[2239] = 1.97483720E-02;
  COFD[2240] = -2.10314572E+01;
  COFD[2241] = 5.31360223E+00;
  COFD[2242] = -4.64787000E-01;
  COFD[2243] = 1.97483720E-02;
  COFD[2244] = -2.16185142E+01;
  COFD[2245] = 5.46403569E+00;
  COFD[2246] = -4.78350420E-01;
  COFD[2247] = 2.00977393E-02;
  COFD[2248] = -2.16197278E+01;
  COFD[2249] = 5.46403569E+00;
  COFD[2250] = -4.78350420E-01;
  COFD[2251] = 2.00977393E-02;
  COFD[2252] = -2.17223367E+01;
  COFD[2253] = 5.48994516E+00;
  COFD[2254] = -4.81227667E-01;
  COFD[2255] = 2.02034730E-02;
  COFD[2256] = -2.20524593E+01;
  COFD[2257] = 5.57296554E+00;
  COFD[2258] = -4.89394407E-01;
  COFD[2259] = 2.04545698E-02;
  COFD[2260] = -2.21137255E+01;
  COFD[2261] = 5.58321831E+00;
  COFD[2262] = -4.90326754E-01;
  COFD[2263] = 2.04795763E-02;
  COFD[2264] = -2.22894017E+01;
  COFD[2265] = 5.61199715E+00;
  COFD[2266] = -4.91433824E-01;
  COFD[2267] = 2.04245969E-02;
  COFD[2268] = -2.23258695E+01;
  COFD[2269] = 5.61225559E+00;
  COFD[2270] = -4.91099448E-01;
  COFD[2271] = 2.03956433E-02;
  COFD[2272] = -2.23654179E+01;
  COFD[2273] = 5.58969231E+00;
  COFD[2274] = -4.85146102E-01;
  COFD[2275] = 2.00165025E-02;
  COFD[2276] = -2.23985448E+01;
  COFD[2277] = 5.58772453E+00;
  COFD[2278] = -4.84560536E-01;
  COFD[2279] = 1.99777728E-02;
  COFD[2280] = -2.24759590E+01;
  COFD[2281] = 5.58488808E+00;
  COFD[2282] = -4.81505670E-01;
  COFD[2283] = 1.97377350E-02;
  COFD[2284] = -2.25101726E+01;
  COFD[2285] = 5.58519141E+00;
  COFD[2286] = -4.81277367E-01;
  COFD[2287] = 1.97172346E-02;
  COFD[2288] = -2.25790297E+01;
  COFD[2289] = 5.58175450E+00;
  COFD[2290] = -4.78660487E-01;
  COFD[2291] = 1.95178220E-02;
  COFD[2292] = -2.25990233E+01;
  COFD[2293] = 5.57844215E+00;
  COFD[2294] = -4.77821874E-01;
  COFD[2295] = 1.94651835E-02;
  COFD[2296] = -2.26015143E+01;
  COFD[2297] = 5.50133264E+00;
  COFD[2298] = -4.62484498E-01;
  COFD[2299] = 1.85871217E-02;
  COFD[2300] = -2.26015143E+01;
  COFD[2301] = 5.50133264E+00;
  COFD[2302] = -4.62484498E-01;
  COFD[2303] = 1.85871217E-02;
  COFD[2304] = -2.26015143E+01;
  COFD[2305] = 5.50133264E+00;
  COFD[2306] = -4.62484498E-01;
  COFD[2307] = 1.85871217E-02;
  COFD[2308] = -2.26049038E+01;
  COFD[2309] = 5.50714270E+00;
  COFD[2310] = -4.64060018E-01;
  COFD[2311] = 1.86881341E-02;
  COFD[2312] = -2.26219796E+01;
  COFD[2313] = 5.49570925E+00;
  COFD[2314] = -4.60969345E-01;
  COFD[2315] = 1.84906305E-02;
  COFD[2316] = -2.26219796E+01;
  COFD[2317] = 5.49570925E+00;
  COFD[2318] = -4.60969345E-01;
  COFD[2319] = 1.84906305E-02;
  COFD[2320] = -2.25800355E+01;
  COFD[2321] = 5.41345955E+00;
  COFD[2322] = -4.45914240E-01;
  COFD[2323] = 1.76631357E-02;
  COFD[2324] = -2.26059105E+01;
  COFD[2325] = 5.45743664E+00;
  COFD[2326] = -4.53877300E-01;
  COFD[2327] = 1.80982969E-02;
  COFD[2328] = -1.59404910E+01;
  COFD[2329] = 3.66853818E+00;
  COFD[2330] = -2.64346221E-01;
  COFD[2331] = 1.15784613E-02;
  COFD[2332] = -2.26337129E+01;
  COFD[2333] = 5.50133264E+00;
  COFD[2334] = -4.62484498E-01;
  COFD[2335] = 1.85871217E-02;
  COFD[2336] = -1.57995045E+01;
  COFD[2337] = 4.22225052E+00;
  COFD[2338] = -3.35156428E-01;
  COFD[2339] = 1.46104855E-02;
  COFD[2340] = -1.50766073E+01;
  COFD[2341] = 3.47945612E+00;
  COFD[2342] = -2.40703722E-01;
  COFD[2343] = 1.05907441E-02;
  COFD[2344] = -1.50911746E+01;
  COFD[2345] = 3.47945612E+00;
  COFD[2346] = -2.40703722E-01;
  COFD[2347] = 1.05907441E-02;
  COFD[2348] = -1.63542358E+01;
  COFD[2349] = 3.82388595E+00;
  COFD[2350] = -2.84480724E-01;
  COFD[2351] = 1.24506311E-02;
  COFD[2352] = -1.25141403E+01;
  COFD[2353] = 2.77873601E+00;
  COFD[2354] = -1.50637360E-01;
  COFD[2355] = 6.72684281E-03;
  COFD[2356] = -2.12831283E+01;
  COFD[2357] = 5.61184117E+00;
  COFD[2358] = -4.90532156E-01;
  COFD[2359] = 2.03507922E-02;
  COFD[2360] = -1.63588948E+01;
  COFD[2361] = 3.82388595E+00;
  COFD[2362] = -2.84480724E-01;
  COFD[2363] = 1.24506311E-02;
  COFD[2364] = -1.63493305E+01;
  COFD[2365] = 3.82388595E+00;
  COFD[2366] = -2.84480724E-01;
  COFD[2367] = 1.24506311E-02;
  COFD[2368] = -1.73198022E+01;
  COFD[2369] = 4.21416723E+00;
  COFD[2370] = -3.34163932E-01;
  COFD[2371] = 1.45697432E-02;
  COFD[2372] = -1.73198022E+01;
  COFD[2373] = 4.21416723E+00;
  COFD[2374] = -3.34163932E-01;
  COFD[2375] = 1.45697432E-02;
  COFD[2376] = -1.73374523E+01;
  COFD[2377] = 4.21416723E+00;
  COFD[2378] = -3.34163932E-01;
  COFD[2379] = 1.45697432E-02;
  COFD[2380] = -1.72738845E+01;
  COFD[2381] = 4.19029808E+00;
  COFD[2382] = -3.31177076E-01;
  COFD[2383] = 1.44446234E-02;
  COFD[2384] = -2.14391914E+01;
  COFD[2385] = 5.56531152E+00;
  COFD[2386] = -4.88789821E-01;
  COFD[2387] = 2.04437116E-02;
  COFD[2388] = -2.14449532E+01;
  COFD[2389] = 5.56531152E+00;
  COFD[2390] = -4.88789821E-01;
  COFD[2391] = 2.04437116E-02;
  COFD[2392] = -2.09612533E+01;
  COFD[2393] = 5.40870099E+00;
  COFD[2394] = -4.73017610E-01;
  COFD[2395] = 1.99399066E-02;
  COFD[2396] = -1.59862997E+01;
  COFD[2397] = 3.67388294E+00;
  COFD[2398] = -2.64990709E-01;
  COFD[2399] = 1.16042706E-02;
  COFD[2400] = -1.93276406E+01;
  COFD[2401] = 4.85015581E+00;
  COFD[2402] = -4.10945109E-01;
  COFD[2403] = 1.76651398E-02;
  COFD[2404] = -1.88463801E+01;
  COFD[2405] = 4.68393046E+00;
  COFD[2406] = -3.91610863E-01;
  COFD[2407] = 1.69174645E-02;
  COFD[2408] = -1.88532484E+01;
  COFD[2409] = 4.68393046E+00;
  COFD[2410] = -3.91610863E-01;
  COFD[2411] = 1.69174645E-02;
  COFD[2412] = -1.98646724E+01;
  COFD[2413] = 5.04367502E+00;
  COFD[2414] = -4.34153325E-01;
  COFD[2415] = 1.85956055E-02;
  COFD[2416] = -1.95494660E+01;
  COFD[2417] = 4.90255048E+00;
  COFD[2418] = -4.17368501E-01;
  COFD[2419] = 1.79287358E-02;
  COFD[2420] = -1.95552136E+01;
  COFD[2421] = 4.90255048E+00;
  COFD[2422] = -4.17368501E-01;
  COFD[2423] = 1.79287358E-02;
  COFD[2424] = -2.11637883E+01;
  COFD[2425] = 5.42846112E+00;
  COFD[2426] = -4.74321870E-01;
  COFD[2427] = 1.99459749E-02;
  COFD[2428] = -1.99803480E+01;
  COFD[2429] = 4.97875278E+00;
  COFD[2430] = -4.26485475E-01;
  COFD[2431] = 1.82931933E-02;
  COFD[2432] = -1.99835677E+01;
  COFD[2433] = 4.97875278E+00;
  COFD[2434] = -4.26485475E-01;
  COFD[2435] = 1.82931933E-02;
  COFD[2436] = -1.99866562E+01;
  COFD[2437] = 4.97875278E+00;
  COFD[2438] = -4.26485475E-01;
  COFD[2439] = 1.82931933E-02;
  COFD[2440] = -2.10571697E+01;
  COFD[2441] = 5.31360223E+00;
  COFD[2442] = -4.64787000E-01;
  COFD[2443] = 1.97483720E-02;
  COFD[2444] = -2.10553233E+01;
  COFD[2445] = 5.31360223E+00;
  COFD[2446] = -4.64787000E-01;
  COFD[2447] = 1.97483720E-02;
  COFD[2448] = -2.10572526E+01;
  COFD[2449] = 5.31360223E+00;
  COFD[2450] = -4.64787000E-01;
  COFD[2451] = 1.97483720E-02;
  COFD[2452] = -2.10591209E+01;
  COFD[2453] = 5.31360223E+00;
  COFD[2454] = -4.64787000E-01;
  COFD[2455] = 1.97483720E-02;
  COFD[2456] = -2.16471880E+01;
  COFD[2457] = 5.46403569E+00;
  COFD[2458] = -4.78350420E-01;
  COFD[2459] = 2.00977393E-02;
  COFD[2460] = -2.16484734E+01;
  COFD[2461] = 5.46403569E+00;
  COFD[2462] = -4.78350420E-01;
  COFD[2463] = 2.00977393E-02;
  COFD[2464] = -2.17511523E+01;
  COFD[2465] = 5.48994516E+00;
  COFD[2466] = -4.81227667E-01;
  COFD[2467] = 2.02034730E-02;
  COFD[2468] = -2.20820509E+01;
  COFD[2469] = 5.57296554E+00;
  COFD[2470] = -4.89394407E-01;
  COFD[2471] = 2.04545698E-02;
  COFD[2472] = -2.21433687E+01;
  COFD[2473] = 5.58321831E+00;
  COFD[2474] = -4.90326754E-01;
  COFD[2475] = 2.04795763E-02;
  COFD[2476] = -2.23196288E+01;
  COFD[2477] = 5.61199715E+00;
  COFD[2478] = -4.91433824E-01;
  COFD[2479] = 2.04245969E-02;
  COFD[2480] = -2.23561362E+01;
  COFD[2481] = 5.61225559E+00;
  COFD[2482] = -4.91099448E-01;
  COFD[2483] = 2.03956433E-02;
  COFD[2484] = -2.23961398E+01;
  COFD[2485] = 5.58969231E+00;
  COFD[2486] = -4.85146102E-01;
  COFD[2487] = 2.00165025E-02;
  COFD[2488] = -2.24292981E+01;
  COFD[2489] = 5.58772453E+00;
  COFD[2490] = -4.84560536E-01;
  COFD[2491] = 1.99777728E-02;
  COFD[2492] = -2.25070771E+01;
  COFD[2493] = 5.58488808E+00;
  COFD[2494] = -4.81505670E-01;
  COFD[2495] = 1.97377350E-02;
  COFD[2496] = -2.25413162E+01;
  COFD[2497] = 5.58519141E+00;
  COFD[2498] = -4.81277367E-01;
  COFD[2499] = 1.97172346E-02;
  COFD[2500] = -2.26104723E+01;
  COFD[2501] = 5.58175450E+00;
  COFD[2502] = -4.78660487E-01;
  COFD[2503] = 1.95178220E-02;
  COFD[2504] = -2.26304869E+01;
  COFD[2505] = 5.57844215E+00;
  COFD[2506] = -4.77821874E-01;
  COFD[2507] = 1.94651835E-02;
  COFD[2508] = -2.26334715E+01;
  COFD[2509] = 5.50133264E+00;
  COFD[2510] = -4.62484498E-01;
  COFD[2511] = 1.85871217E-02;
  COFD[2512] = -2.26334715E+01;
  COFD[2513] = 5.50133264E+00;
  COFD[2514] = -4.62484498E-01;
  COFD[2515] = 1.85871217E-02;
  COFD[2516] = -2.26334715E+01;
  COFD[2517] = 5.50133264E+00;
  COFD[2518] = -4.62484498E-01;
  COFD[2519] = 1.85871217E-02;
  COFD[2520] = -2.26368459E+01;
  COFD[2521] = 5.50714270E+00;
  COFD[2522] = -4.64060018E-01;
  COFD[2523] = 1.86881341E-02;
  COFD[2524] = -2.26543431E+01;
  COFD[2525] = 5.49570925E+00;
  COFD[2526] = -4.60969345E-01;
  COFD[2527] = 1.84906305E-02;
  COFD[2528] = -2.26543431E+01;
  COFD[2529] = 5.49570925E+00;
  COFD[2530] = -4.60969345E-01;
  COFD[2531] = 1.84906305E-02;
  COFD[2532] = -2.26127005E+01;
  COFD[2533] = 5.41345955E+00;
  COFD[2534] = -4.45914240E-01;
  COFD[2535] = 1.76631357E-02;
  COFD[2536] = -2.26384257E+01;
  COFD[2537] = 5.45743664E+00;
  COFD[2538] = -4.53877300E-01;
  COFD[2539] = 1.80982969E-02;
  COFD[2540] = -1.59633426E+01;
  COFD[2541] = 3.66853818E+00;
  COFD[2542] = -2.64346221E-01;
  COFD[2543] = 1.15784613E-02;
  COFD[2544] = -2.26491370E+01;
  COFD[2545] = 5.50690143E+00;
  COFD[2546] = -4.64003349E-01;
  COFD[2547] = 1.86846584E-02;
  COFD[2548] = -1.57199190E+01;
  COFD[2549] = 4.19936335E+00;
  COFD[2550] = -3.32311009E-01;
  COFD[2551] = 1.44921003E-02;
  COFD[2552] = -1.50270285E+01;
  COFD[2553] = 3.46140064E+00;
  COFD[2554] = -2.38440092E-01;
  COFD[2555] = 1.04960087E-02;
  COFD[2556] = -1.50420909E+01;
  COFD[2557] = 3.46140064E+00;
  COFD[2558] = -2.38440092E-01;
  COFD[2559] = 1.04960087E-02;
  COFD[2560] = -1.62775683E+01;
  COFD[2561] = 3.79163564E+00;
  COFD[2562] = -2.80257365E-01;
  COFD[2563] = 1.22656902E-02;
  COFD[2564] = -1.24693714E+01;
  COFD[2565] = 2.76686648E+00;
  COFD[2566] = -1.49120141E-01;
  COFD[2567] = 6.66220432E-03;
  COFD[2568] = -2.14087360E+01;
  COFD[2569] = 5.57281993E+00;
  COFD[2570] = -4.76690860E-01;
  COFD[2571] = 1.94000702E-02;
  COFD[2572] = -1.62824385E+01;
  COFD[2573] = 3.79163564E+00;
  COFD[2574] = -2.80257365E-01;
  COFD[2575] = 1.22656902E-02;
  COFD[2576] = -1.62724429E+01;
  COFD[2577] = 3.79163564E+00;
  COFD[2578] = -2.80257365E-01;
  COFD[2579] = 1.22656902E-02;
  COFD[2580] = -1.72556722E+01;
  COFD[2581] = 4.19029808E+00;
  COFD[2582] = -3.31177076E-01;
  COFD[2583] = 1.44446234E-02;
  COFD[2584] = -1.72556722E+01;
  COFD[2585] = 4.19029808E+00;
  COFD[2586] = -3.31177076E-01;
  COFD[2587] = 1.44446234E-02;
  COFD[2588] = -1.72738845E+01;
  COFD[2589] = 4.19029808E+00;
  COFD[2590] = -3.31177076E-01;
  COFD[2591] = 1.44446234E-02;
  COFD[2592] = -1.72167712E+01;
  COFD[2593] = 4.16886779E+00;
  COFD[2594] = -3.28518156E-01;
  COFD[2595] = 1.43341626E-02;
  COFD[2596] = -2.14022312E+01;
  COFD[2597] = 5.55346617E+00;
  COFD[2598] = -4.87783156E-01;
  COFD[2599] = 2.04210886E-02;
  COFD[2600] = -2.14082433E+01;
  COFD[2601] = 5.55346617E+00;
  COFD[2602] = -4.87783156E-01;
  COFD[2603] = 2.04210886E-02;
  COFD[2604] = -2.11381493E+01;
  COFD[2605] = 5.45574448E+00;
  COFD[2606] = -4.77436163E-01;
  COFD[2607] = 2.00644599E-02;
  COFD[2608] = -1.59525075E+01;
  COFD[2609] = 3.66023858E+00;
  COFD[2610] = -2.63401043E-01;
  COFD[2611] = 1.15432000E-02;
  COFD[2612] = -1.92867532E+01;
  COFD[2613] = 4.83375900E+00;
  COFD[2614] = -4.09146560E-01;
  COFD[2615] = 1.76006599E-02;
  COFD[2616] = -1.87897289E+01;
  COFD[2617] = 4.66162351E+00;
  COFD[2618] = -3.88920477E-01;
  COFD[2619] = 1.68089648E-02;
  COFD[2620] = -1.87968842E+01;
  COFD[2621] = 4.66162351E+00;
  COFD[2622] = -3.88920477E-01;
  COFD[2623] = 1.68089648E-02;
  COFD[2624] = -1.98075051E+01;
  COFD[2625] = 5.02169524E+00;
  COFD[2626] = -4.31582804E-01;
  COFD[2627] = 1.84953568E-02;
  COFD[2628] = -1.94763687E+01;
  COFD[2629] = 4.87333294E+00;
  COFD[2630] = -4.13769241E-01;
  COFD[2631] = 1.77802244E-02;
  COFD[2632] = -1.94823661E+01;
  COFD[2633] = 4.87333294E+00;
  COFD[2634] = -4.13769241E-01;
  COFD[2635] = 1.77802244E-02;
  COFD[2636] = -2.11341641E+01;
  COFD[2637] = 5.41773516E+00;
  COFD[2638] = -4.73414338E-01;
  COFD[2639] = 1.99258685E-02;
  COFD[2640] = -1.99235836E+01;
  COFD[2641] = 4.95514826E+00;
  COFD[2642] = -4.23691395E-01;
  COFD[2643] = 1.81828318E-02;
  COFD[2644] = -1.99269591E+01;
  COFD[2645] = 4.95514826E+00;
  COFD[2646] = -4.23691395E-01;
  COFD[2647] = 1.81828318E-02;
  COFD[2648] = -1.99301980E+01;
  COFD[2649] = 4.95514826E+00;
  COFD[2650] = -4.23691395E-01;
  COFD[2651] = 1.81828318E-02;
  COFD[2652] = -2.09912117E+01;
  COFD[2653] = 5.28557747E+00;
  COFD[2654] = -4.61402384E-01;
  COFD[2655] = 1.96111546E-02;
  COFD[2656] = -2.09892692E+01;
  COFD[2657] = 5.28557747E+00;
  COFD[2658] = -4.61402384E-01;
  COFD[2659] = 1.96111546E-02;
  COFD[2660] = -2.09912989E+01;
  COFD[2661] = 5.28557747E+00;
  COFD[2662] = -4.61402384E-01;
  COFD[2663] = 1.96111546E-02;
  COFD[2664] = -2.09932649E+01;
  COFD[2665] = 5.28557747E+00;
  COFD[2666] = -4.61402384E-01;
  COFD[2667] = 1.96111546E-02;
  COFD[2668] = -2.15968629E+01;
  COFD[2669] = 5.44280136E+00;
  COFD[2670] = -4.75998855E-01;
  COFD[2671] = 2.00116091E-02;
  COFD[2672] = -2.15982184E+01;
  COFD[2673] = 5.44280136E+00;
  COFD[2674] = -4.75998855E-01;
  COFD[2675] = 2.00116091E-02;
  COFD[2676] = -2.16987087E+01;
  COFD[2677] = 5.46787363E+00;
  COFD[2678] = -4.78778598E-01;
  COFD[2679] = 2.01135684E-02;
  COFD[2680] = -2.20571987E+01;
  COFD[2681] = 5.56221277E+00;
  COFD[2682] = -4.88535386E-01;
  COFD[2683] = 2.04385478E-02;
  COFD[2684] = -2.21157538E+01;
  COFD[2685] = 5.57102296E+00;
  COFD[2686] = -4.89236974E-01;
  COFD[2687] = 2.04514674E-02;
  COFD[2688] = -2.23089124E+01;
  COFD[2689] = 5.60657745E+00;
  COFD[2690] = -4.91280842E-01;
  COFD[2691] = 2.04393241E-02;
  COFD[2692] = -2.23528909E+01;
  COFD[2693] = 5.60999262E+00;
  COFD[2694] = -4.91398509E-01;
  COFD[2695] = 2.04317928E-02;
  COFD[2696] = -2.24147233E+01;
  COFD[2697] = 5.59714923E+00;
  COFD[2698] = -4.86899964E-01;
  COFD[2699] = 2.01242645E-02;
  COFD[2700] = -2.24447072E+01;
  COFD[2701] = 5.59387804E+00;
  COFD[2702] = -4.86146181E-01;
  COFD[2703] = 2.00782989E-02;
  COFD[2704] = -2.25078396E+01;
  COFD[2705] = 5.58461787E+00;
  COFD[2706] = -4.82178861E-01;
  COFD[2707] = 1.97950972E-02;
  COFD[2708] = -2.25423020E+01;
  COFD[2709] = 5.58490857E+00;
  COFD[2710] = -4.81943660E-01;
  COFD[2711] = 1.97740434E-02;
  COFD[2712] = -2.26201690E+01;
  COFD[2713] = 5.58491601E+00;
  COFD[2714] = -4.79798668E-01;
  COFD[2715] = 1.95960400E-02;
  COFD[2716] = -2.26463354E+01;
  COFD[2717] = 5.58422596E+00;
  COFD[2718] = -4.79336463E-01;
  COFD[2719] = 1.95612739E-02;
  COFD[2720] = -2.26488809E+01;
  COFD[2721] = 5.50690143E+00;
  COFD[2722] = -4.64003349E-01;
  COFD[2723] = 1.86846584E-02;
  COFD[2724] = -2.26488809E+01;
  COFD[2725] = 5.50690143E+00;
  COFD[2726] = -4.64003349E-01;
  COFD[2727] = 1.86846584E-02;
  COFD[2728] = -2.26488809E+01;
  COFD[2729] = 5.50690143E+00;
  COFD[2730] = -4.64003349E-01;
  COFD[2731] = 1.86846584E-02;
  COFD[2732] = -2.26685949E+01;
  COFD[2733] = 5.51963910E+00;
  COFD[2734] = -4.66555705E-01;
  COFD[2735] = 1.88313890E-02;
  COFD[2736] = -2.26705837E+01;
  COFD[2737] = 5.50119356E+00;
  COFD[2738] = -4.62439469E-01;
  COFD[2739] = 1.85841071E-02;
  COFD[2740] = -2.26705837E+01;
  COFD[2741] = 5.50119356E+00;
  COFD[2742] = -4.62439469E-01;
  COFD[2743] = 1.85841071E-02;
  COFD[2744] = -2.26578671E+01;
  COFD[2745] = 5.43122974E+00;
  COFD[2746] = -4.49142070E-01;
  COFD[2747] = 1.78397165E-02;
  COFD[2748] = -2.26836499E+01;
  COFD[2749] = 5.47552771E+00;
  COFD[2750] = -4.57173951E-01;
  COFD[2751] = 1.82791721E-02;
  COFD[2752] = -1.59327344E+01;
  COFD[2753] = 3.65620899E+00;
  COFD[2754] = -2.62933804E-01;
  COFD[2755] = 1.15253223E-02;
  COFD[2756] = -1.64538178E+01;
  COFD[2757] = 2.28170571E+00;
  COFD[2758] = 3.44078407E-02;
  COFD[2759] = -6.01703889E-03;
  COFD[2760] = -1.97544605E+01;
  COFD[2761] = 5.56931926E+00;
  COFD[2762] = -4.89105511E-01;
  COFD[2763] = 2.04493129E-02;
  COFD[2764] = -1.94313018E+01;
  COFD[2765] = 5.02567894E+00;
  COFD[2766] = -4.32045169E-01;
  COFD[2767] = 1.85132214E-02;
  COFD[2768] = -1.94507789E+01;
  COFD[2769] = 5.02567894E+00;
  COFD[2770] = -4.32045169E-01;
  COFD[2771] = 1.85132214E-02;
  COFD[2772] = -2.08277510E+01;
  COFD[2773] = 5.35267674E+00;
  COFD[2774] = -4.69010505E-01;
  COFD[2775] = 1.98979152E-02;
  COFD[2776] = -1.60517517E+01;
  COFD[2777] = 4.11188603E+00;
  COFD[2778] = -3.21540884E-01;
  COFD[2779] = 1.40482564E-02;
  COFD[2780] = -1.77498465E+01;
  COFD[2781] = 3.57475686E+00;
  COFD[2782] = -1.56396297E-01;
  COFD[2783] = 3.12157721E-03;
  COFD[2784] = -2.08347318E+01;
  COFD[2785] = 5.35267674E+00;
  COFD[2786] = -4.69010505E-01;
  COFD[2787] = 1.98979152E-02;
  COFD[2788] = -2.08204356E+01;
  COFD[2789] = 5.35267674E+00;
  COFD[2790] = -4.69010505E-01;
  COFD[2791] = 1.98979152E-02;
  COFD[2792] = -2.14160667E+01;
  COFD[2793] = 5.56531152E+00;
  COFD[2794] = -4.88789821E-01;
  COFD[2795] = 2.04437116E-02;
  COFD[2796] = -2.14160667E+01;
  COFD[2797] = 5.56531152E+00;
  COFD[2798] = -4.88789821E-01;
  COFD[2799] = 2.04437116E-02;
  COFD[2800] = -2.14391914E+01;
  COFD[2801] = 5.56531152E+00;
  COFD[2802] = -4.88789821E-01;
  COFD[2803] = 2.04437116E-02;
  COFD[2804] = -2.14022312E+01;
  COFD[2805] = 5.55346617E+00;
  COFD[2806] = -4.87783156E-01;
  COFD[2807] = 2.04210886E-02;
  COFD[2808] = -1.90328637E+01;
  COFD[2809] = 3.99221757E+00;
  COFD[2810] = -2.19854880E-01;
  COFD[2811] = 6.22736279E-03;
  COFD[2812] = -1.90413276E+01;
  COFD[2813] = 3.99221757E+00;
  COFD[2814] = -2.19854880E-01;
  COFD[2815] = 6.22736279E-03;
  COFD[2816] = -2.01801599E+01;
  COFD[2817] = 4.53183330E+00;
  COFD[2818] = -3.02186760E-01;
  COFD[2819] = 1.02756490E-02;
  COFD[2820] = -2.05045498E+01;
  COFD[2821] = 5.23843909E+00;
  COFD[2822] = -4.55815614E-01;
  COFD[2823] = 1.93898040E-02;
  COFD[2824] = -2.19215472E+01;
  COFD[2825] = 5.45216133E+00;
  COFD[2826] = -4.52916925E-01;
  COFD[2827] = 1.80456400E-02;
  COFD[2828] = -2.19956299E+01;
  COFD[2829] = 5.55935694E+00;
  COFD[2830] = -4.74154740E-01;
  COFD[2831] = 1.92584304E-02;
  COFD[2832] = -2.20055495E+01;
  COFD[2833] = 5.55935694E+00;
  COFD[2834] = -4.74154740E-01;
  COFD[2835] = 1.92584304E-02;
  COFD[2836] = -2.16296327E+01;
  COFD[2837] = 5.29019717E+00;
  COFD[2838] = -4.24502606E-01;
  COFD[2839] = 1.65197343E-02;
  COFD[2840] = -2.19229146E+01;
  COFD[2841] = 5.41841631E+00;
  COFD[2842] = -4.46818971E-01;
  COFD[2843] = 1.77127652E-02;
  COFD[2844] = -2.19313596E+01;
  COFD[2845] = 5.41841631E+00;
  COFD[2846] = -4.46818971E-01;
  COFD[2847] = 1.77127652E-02;
  COFD[2848] = -2.00963017E+01;
  COFD[2849] = 4.41511629E+00;
  COFD[2850] = -2.84086963E-01;
  COFD[2851] = 9.37586971E-03;
  COFD[2852] = -2.20848512E+01;
  COFD[2853] = 5.36053938E+00;
  COFD[2854] = -4.36434519E-01;
  COFD[2855] = 1.71484255E-02;
  COFD[2856] = -2.20898344E+01;
  COFD[2857] = 5.36053938E+00;
  COFD[2858] = -4.36434519E-01;
  COFD[2859] = 1.71484255E-02;
  COFD[2860] = -2.20946312E+01;
  COFD[2861] = 5.36053938E+00;
  COFD[2862] = -4.36434519E-01;
  COFD[2863] = 1.71484255E-02;
  COFD[2864] = -2.13239371E+01;
  COFD[2865] = 4.87252053E+00;
  COFD[2866] = -3.56127804E-01;
  COFD[2867] = 1.29948788E-02;
  COFD[2868] = -2.13209625E+01;
  COFD[2869] = 4.87252053E+00;
  COFD[2870] = -3.56127804E-01;
  COFD[2871] = 1.29948788E-02;
  COFD[2872] = -2.13240709E+01;
  COFD[2873] = 4.87252053E+00;
  COFD[2874] = -3.56127804E-01;
  COFD[2875] = 1.29948788E-02;
  COFD[2876] = -2.13270879E+01;
  COFD[2877] = 4.87252053E+00;
  COFD[2878] = -3.56127804E-01;
  COFD[2879] = 1.29948788E-02;
  COFD[2880] = -2.03498784E+01;
  COFD[2881] = 4.33469236E+00;
  COFD[2882] = -2.71728538E-01;
  COFD[2883] = 8.76524142E-03;
  COFD[2884] = -2.03520076E+01;
  COFD[2885] = 4.33469236E+00;
  COFD[2886] = -2.71728538E-01;
  COFD[2887] = 8.76524142E-03;
  COFD[2888] = -2.02526088E+01;
  COFD[2889] = 4.27348456E+00;
  COFD[2890] = -2.62370434E-01;
  COFD[2891] = 8.30483319E-03;
  COFD[2892] = -1.96379077E+01;
  COFD[2893] = 3.94748284E+00;
  COFD[2894] = -2.13105313E-01;
  COFD[2895] = 5.89820150E-03;
  COFD[2896] = -1.95761070E+01;
  COFD[2897] = 3.90427760E+00;
  COFD[2898] = -2.06510536E-01;
  COFD[2899] = 5.57435129E-03;
  COFD[2900] = -1.91422179E+01;
  COFD[2901] = 3.66719242E+00;
  COFD[2902] = -1.70260825E-01;
  COFD[2903] = 3.79442136E-03;
  COFD[2904] = -1.90919812E+01;
  COFD[2905] = 3.62969668E+00;
  COFD[2906] = -1.64618442E-01;
  COFD[2907] = 3.52001735E-03;
  COFD[2908] = -1.85269876E+01;
  COFD[2909] = 3.34746301E+00;
  COFD[2910] = -1.22575165E-01;
  COFD[2911] = 1.49120224E-03;
  COFD[2912] = -1.84998832E+01;
  COFD[2913] = 3.31983385E+00;
  COFD[2914] = -1.18473006E-01;
  COFD[2915] = 1.29390803E-03;
  COFD[2916] = -1.80000247E+01;
  COFD[2917] = 3.07345302E+00;
  COFD[2918] = -8.20536856E-02;
  COFD[2919] = -4.51137426E-04;
  COFD[2920] = -1.79575696E+01;
  COFD[2921] = 3.04109524E+00;
  COFD[2922] = -7.73097243E-02;
  COFD[2923] = -6.77522484E-04;
  COFD[2924] = -1.74019209E+01;
  COFD[2925] = 2.77201495E+00;
  COFD[2926] = -3.78503295E-02;
  COFD[2927] = -2.56220054E-03;
  COFD[2928] = -1.73211183E+01;
  COFD[2929] = 2.72579131E+00;
  COFD[2930] = -3.10554256E-02;
  COFD[2931] = -2.88744758E-03;
  COFD[2932] = -1.64533847E+01;
  COFD[2933] = 2.28170571E+00;
  COFD[2934] = 3.44078407E-02;
  COFD[2935] = -6.01703889E-03;
  COFD[2936] = -1.64533847E+01;
  COFD[2937] = 2.28170571E+00;
  COFD[2938] = 3.44078407E-02;
  COFD[2939] = -6.01703889E-03;
  COFD[2940] = -1.64533847E+01;
  COFD[2941] = 2.28170571E+00;
  COFD[2942] = 3.44078407E-02;
  COFD[2943] = -6.01703889E-03;
  COFD[2944] = -1.66244838E+01;
  COFD[2945] = 2.35716270E+00;
  COFD[2946] = 2.33630190E-02;
  COFD[2947] = -5.49227499E-03;
  COFD[2948] = -1.63128560E+01;
  COFD[2949] = 2.20684400E+00;
  COFD[2950] = 4.53338465E-02;
  COFD[2951] = -6.53458896E-03;
  COFD[2952] = -1.63128560E+01;
  COFD[2953] = 2.20684400E+00;
  COFD[2954] = 4.53338465E-02;
  COFD[2955] = -6.53458896E-03;
  COFD[2956] = -1.55803417E+01;
  COFD[2957] = 1.83949630E+00;
  COFD[2958] = 9.85772022E-02;
  COFD[2959] = -9.04342798E-03;
  COFD[2960] = -1.59635369E+01;
  COFD[2961] = 2.03061309E+00;
  COFD[2962] = 7.09547643E-02;
  COFD[2963] = -7.74512315E-03;
  COFD[2964] = -2.04750606E+01;
  COFD[2965] = 5.23112374E+00;
  COFD[2966] = -4.54967682E-01;
  COFD[2967] = 1.93570423E-02;
  COFD[2968] = -1.64683697E+01;
  COFD[2969] = 2.28170571E+00;
  COFD[2970] = 3.44078407E-02;
  COFD[2971] = -6.01703889E-03;
  COFD[2972] = -1.97550243E+01;
  COFD[2973] = 5.56931926E+00;
  COFD[2974] = -4.89105511E-01;
  COFD[2975] = 2.04493129E-02;
  COFD[2976] = -1.94373032E+01;
  COFD[2977] = 5.02567894E+00;
  COFD[2978] = -4.32045169E-01;
  COFD[2979] = 1.85132214E-02;
  COFD[2980] = -1.94570202E+01;
  COFD[2981] = 5.02567894E+00;
  COFD[2982] = -4.32045169E-01;
  COFD[2983] = 1.85132214E-02;
  COFD[2984] = -2.08367641E+01;
  COFD[2985] = 5.35267674E+00;
  COFD[2986] = -4.69010505E-01;
  COFD[2987] = 1.98979152E-02;
  COFD[2988] = -1.60528433E+01;
  COFD[2989] = 4.11188603E+00;
  COFD[2990] = -3.21540884E-01;
  COFD[2991] = 1.40482564E-02;
  COFD[2992] = -1.77563175E+01;
  COFD[2993] = 3.57475686E+00;
  COFD[2994] = -1.56396297E-01;
  COFD[2995] = 3.12157721E-03;
  COFD[2996] = -2.08438728E+01;
  COFD[2997] = 5.35267674E+00;
  COFD[2998] = -4.69010505E-01;
  COFD[2999] = 1.98979152E-02;
  COFD[3000] = -2.08293167E+01;
  COFD[3001] = 5.35267674E+00;
  COFD[3002] = -4.69010505E-01;
  COFD[3003] = 1.98979152E-02;
  COFD[3004] = -2.14215667E+01;
  COFD[3005] = 5.56531152E+00;
  COFD[3006] = -4.88789821E-01;
  COFD[3007] = 2.04437116E-02;
  COFD[3008] = -2.14215667E+01;
  COFD[3009] = 5.56531152E+00;
  COFD[3010] = -4.88789821E-01;
  COFD[3011] = 2.04437116E-02;
  COFD[3012] = -2.14449532E+01;
  COFD[3013] = 5.56531152E+00;
  COFD[3014] = -4.88789821E-01;
  COFD[3015] = 2.04437116E-02;
  COFD[3016] = -2.14082433E+01;
  COFD[3017] = 5.55346617E+00;
  COFD[3018] = -4.87783156E-01;
  COFD[3019] = 2.04210886E-02;
  COFD[3020] = -1.90413276E+01;
  COFD[3021] = 3.99221757E+00;
  COFD[3022] = -2.19854880E-01;
  COFD[3023] = 6.22736279E-03;
  COFD[3024] = -1.90499374E+01;
  COFD[3025] = 3.99221757E+00;
  COFD[3026] = -2.19854880E-01;
  COFD[3027] = 6.22736279E-03;
  COFD[3028] = -2.01889105E+01;
  COFD[3029] = 4.53183330E+00;
  COFD[3030] = -3.02186760E-01;
  COFD[3031] = 1.02756490E-02;
  COFD[3032] = -2.05128629E+01;
  COFD[3033] = 5.23843909E+00;
  COFD[3034] = -4.55815614E-01;
  COFD[3035] = 1.93898040E-02;
  COFD[3036] = -2.19317665E+01;
  COFD[3037] = 5.45216133E+00;
  COFD[3038] = -4.52916925E-01;
  COFD[3039] = 1.80456400E-02;
  COFD[3040] = -2.20036321E+01;
  COFD[3041] = 5.55935694E+00;
  COFD[3042] = -4.74154740E-01;
  COFD[3043] = 1.92584304E-02;
  COFD[3044] = -2.20137133E+01;
  COFD[3045] = 5.55935694E+00;
  COFD[3046] = -4.74154740E-01;
  COFD[3047] = 1.92584304E-02;
  COFD[3048] = -2.16379525E+01;
  COFD[3049] = 5.29019717E+00;
  COFD[3050] = -4.24502606E-01;
  COFD[3051] = 1.65197343E-02;
  COFD[3052] = -2.19313850E+01;
  COFD[3053] = 5.41841631E+00;
  COFD[3054] = -4.46818971E-01;
  COFD[3055] = 1.77127652E-02;
  COFD[3056] = -2.19399756E+01;
  COFD[3057] = 5.41841631E+00;
  COFD[3058] = -4.46818971E-01;
  COFD[3059] = 1.77127652E-02;
  COFD[3060] = -2.01064300E+01;
  COFD[3061] = 4.41511629E+00;
  COFD[3062] = -2.84086963E-01;
  COFD[3063] = 9.37586971E-03;
  COFD[3064] = -2.20947854E+01;
  COFD[3065] = 5.36053938E+00;
  COFD[3066] = -4.36434519E-01;
  COFD[3067] = 1.71484255E-02;
  COFD[3068] = -2.20998692E+01;
  COFD[3069] = 5.36053938E+00;
  COFD[3070] = -4.36434519E-01;
  COFD[3071] = 1.71484255E-02;
  COFD[3072] = -2.21047637E+01;
  COFD[3073] = 5.36053938E+00;
  COFD[3074] = -4.36434519E-01;
  COFD[3075] = 1.71484255E-02;
  COFD[3076] = -2.13351219E+01;
  COFD[3077] = 4.87252053E+00;
  COFD[3078] = -3.56127804E-01;
  COFD[3079] = 1.29948788E-02;
  COFD[3080] = -2.13320802E+01;
  COFD[3081] = 4.87252053E+00;
  COFD[3082] = -3.56127804E-01;
  COFD[3083] = 1.29948788E-02;
  COFD[3084] = -2.13352587E+01;
  COFD[3085] = 4.87252053E+00;
  COFD[3086] = -3.56127804E-01;
  COFD[3087] = 1.29948788E-02;
  COFD[3088] = -2.13383442E+01;
  COFD[3089] = 4.87252053E+00;
  COFD[3090] = -3.56127804E-01;
  COFD[3091] = 1.29948788E-02;
  COFD[3092] = -2.03618430E+01;
  COFD[3093] = 4.33469236E+00;
  COFD[3094] = -2.71728538E-01;
  COFD[3095] = 8.76524142E-03;
  COFD[3096] = -2.03640239E+01;
  COFD[3097] = 4.33469236E+00;
  COFD[3098] = -2.71728538E-01;
  COFD[3099] = 8.76524142E-03;
  COFD[3100] = -2.02646757E+01;
  COFD[3101] = 4.27348456E+00;
  COFD[3102] = -2.62370434E-01;
  COFD[3103] = 8.30483319E-03;
  COFD[3104] = -1.96505480E+01;
  COFD[3105] = 3.94748284E+00;
  COFD[3106] = -2.13105313E-01;
  COFD[3107] = 5.89820150E-03;
  COFD[3108] = -1.95887863E+01;
  COFD[3109] = 3.90427760E+00;
  COFD[3110] = -2.06510536E-01;
  COFD[3111] = 5.57435129E-03;
  COFD[3112] = -1.91553451E+01;
  COFD[3113] = 3.66719242E+00;
  COFD[3114] = -1.70260825E-01;
  COFD[3115] = 3.79442136E-03;
  COFD[3116] = -1.91051394E+01;
  COFD[3117] = 3.62969668E+00;
  COFD[3118] = -1.64618442E-01;
  COFD[3119] = 3.52001735E-03;
  COFD[3120] = -1.85405054E+01;
  COFD[3121] = 3.34746301E+00;
  COFD[3122] = -1.22575165E-01;
  COFD[3123] = 1.49120224E-03;
  COFD[3124] = -1.85134261E+01;
  COFD[3125] = 3.31983385E+00;
  COFD[3126] = -1.18473006E-01;
  COFD[3127] = 1.29390803E-03;
  COFD[3128] = -1.80138627E+01;
  COFD[3129] = 3.07345302E+00;
  COFD[3130] = -8.20536856E-02;
  COFD[3131] = -4.51137426E-04;
  COFD[3132] = -1.79714284E+01;
  COFD[3133] = 3.04109524E+00;
  COFD[3134] = -7.73097243E-02;
  COFD[3135] = -6.77522484E-04;
  COFD[3136] = -1.74160262E+01;
  COFD[3137] = 2.77201495E+00;
  COFD[3138] = -3.78503295E-02;
  COFD[3139] = -2.56220054E-03;
  COFD[3140] = -1.73352411E+01;
  COFD[3141] = 2.72579131E+00;
  COFD[3142] = -3.10554256E-02;
  COFD[3143] = -2.88744758E-03;
  COFD[3144] = -1.64679239E+01;
  COFD[3145] = 2.28170571E+00;
  COFD[3146] = 3.44078407E-02;
  COFD[3147] = -6.01703889E-03;
  COFD[3148] = -1.64679239E+01;
  COFD[3149] = 2.28170571E+00;
  COFD[3150] = 3.44078407E-02;
  COFD[3151] = -6.01703889E-03;
  COFD[3152] = -1.64679239E+01;
  COFD[3153] = 2.28170571E+00;
  COFD[3154] = 3.44078407E-02;
  COFD[3155] = -6.01703889E-03;
  COFD[3156] = -1.66390101E+01;
  COFD[3157] = 2.35716270E+00;
  COFD[3158] = 2.33630190E-02;
  COFD[3159] = -5.49227499E-03;
  COFD[3160] = -1.63277465E+01;
  COFD[3161] = 2.20684400E+00;
  COFD[3162] = 4.53338465E-02;
  COFD[3163] = -6.53458896E-03;
  COFD[3164] = -1.63277465E+01;
  COFD[3165] = 2.20684400E+00;
  COFD[3166] = 4.53338465E-02;
  COFD[3167] = -6.53458896E-03;
  COFD[3168] = -1.55954979E+01;
  COFD[3169] = 1.83949630E+00;
  COFD[3170] = 9.85772022E-02;
  COFD[3171] = -9.04342798E-03;
  COFD[3172] = -1.59785605E+01;
  COFD[3173] = 2.03061309E+00;
  COFD[3174] = 7.09547643E-02;
  COFD[3175] = -7.74512315E-03;
  COFD[3176] = -2.04833743E+01;
  COFD[3177] = 5.23112374E+00;
  COFD[3178] = -4.54967682E-01;
  COFD[3179] = 1.93570423E-02;
  COFD[3180] = -1.81189655E+01;
  COFD[3181] = 3.03095915E+00;
  COFD[3182] = -7.58238868E-02;
  COFD[3183] = -7.48420472E-04;
  COFD[3184] = -1.92718738E+01;
  COFD[3185] = 5.41172124E+00;
  COFD[3186] = -4.73213887E-01;
  COFD[3187] = 1.99405473E-02;
  COFD[3188] = -1.88179325E+01;
  COFD[3189] = 4.79683898E+00;
  COFD[3190] = -4.04829719E-01;
  COFD[3191] = 1.74325475E-02;
  COFD[3192] = -1.88378792E+01;
  COFD[3193] = 4.79683898E+00;
  COFD[3194] = -4.04829719E-01;
  COFD[3195] = 1.74325475E-02;
  COFD[3196] = -2.02637913E+01;
  COFD[3197] = 5.14984081E+00;
  COFD[3198] = -4.46093018E-01;
  COFD[3199] = 1.90396647E-02;
  COFD[3200] = -1.58456453E+01;
  COFD[3201] = 4.02074796E+00;
  COFD[3202] = -3.10018539E-01;
  COFD[3203] = 1.35599559E-02;
  COFD[3204] = -1.65295191E+01;
  COFD[3205] = 2.97569077E+00;
  COFD[3206] = -6.75650795E-02;
  COFD[3207] = -1.08649440E-03;
  COFD[3208] = -2.02710239E+01;
  COFD[3209] = 5.14984081E+00;
  COFD[3210] = -4.46093018E-01;
  COFD[3211] = 1.90396647E-02;
  COFD[3212] = -2.04928875E+01;
  COFD[3213] = 5.22397941E+00;
  COFD[3214] = -4.54138181E-01;
  COFD[3215] = 1.93249289E-02;
  COFD[3216] = -2.09376165E+01;
  COFD[3217] = 5.40870099E+00;
  COFD[3218] = -4.73017610E-01;
  COFD[3219] = 1.99399066E-02;
  COFD[3220] = -2.09376165E+01;
  COFD[3221] = 5.40870099E+00;
  COFD[3222] = -4.73017610E-01;
  COFD[3223] = 1.99399066E-02;
  COFD[3224] = -2.09612533E+01;
  COFD[3225] = 5.40870099E+00;
  COFD[3226] = -4.73017610E-01;
  COFD[3227] = 1.99399066E-02;
  COFD[3228] = -2.11381493E+01;
  COFD[3229] = 5.45574448E+00;
  COFD[3230] = -4.77436163E-01;
  COFD[3231] = 2.00644599E-02;
  COFD[3232] = -2.01801599E+01;
  COFD[3233] = 4.53183330E+00;
  COFD[3234] = -3.02186760E-01;
  COFD[3235] = 1.02756490E-02;
  COFD[3236] = -2.01889105E+01;
  COFD[3237] = 4.53183330E+00;
  COFD[3238] = -3.02186760E-01;
  COFD[3239] = 1.02756490E-02;
  COFD[3240] = -1.95876943E+01;
  COFD[3241] = 4.27642977E+00;
  COFD[3242] = -2.68040785E-01;
  COFD[3243] = 8.77649540E-03;
  COFD[3244] = -2.02642156E+01;
  COFD[3245] = 5.14499744E+00;
  COFD[3246] = -4.45694433E-01;
  COFD[3247] = 1.90318647E-02;
  COFD[3248] = -2.20420967E+01;
  COFD[3249] = 5.52708328E+00;
  COFD[3250] = -4.68000799E-01;
  COFD[3251] = 1.89131903E-02;
  COFD[3252] = -2.19491665E+01;
  COFD[3253] = 5.59157589E+00;
  COFD[3254] = -4.85617912E-01;
  COFD[3255] = 2.00461138E-02;
  COFD[3256] = -2.19594037E+01;
  COFD[3257] = 5.59157589E+00;
  COFD[3258] = -4.85617912E-01;
  COFD[3259] = 2.00461138E-02;
  COFD[3260] = -2.19670810E+01;
  COFD[3261] = 5.48847873E+00;
  COFD[3262] = -4.59558930E-01;
  COFD[3263] = 1.84107961E-02;
  COFD[3264] = -2.21069995E+01;
  COFD[3265] = 5.55072945E+00;
  COFD[3266] = -4.72525345E-01;
  COFD[3267] = 1.91674202E-02;
  COFD[3268] = -2.21157308E+01;
  COFD[3269] = 5.55072945E+00;
  COFD[3270] = -4.72525345E-01;
  COFD[3271] = 1.91674202E-02;
  COFD[3272] = -2.09272370E+01;
  COFD[3273] = 4.82184721E+00;
  COFD[3274] = -3.48128875E-01;
  COFD[3275] = 1.25918978E-02;
  COFD[3276] = -2.23054103E+01;
  COFD[3277] = 5.50872500E+00;
  COFD[3278] = -4.64427323E-01;
  COFD[3279] = 1.87105612E-02;
  COFD[3280] = -2.23105918E+01;
  COFD[3281] = 5.50872500E+00;
  COFD[3282] = -4.64427323E-01;
  COFD[3283] = 1.87105612E-02;
  COFD[3284] = -2.23155813E+01;
  COFD[3285] = 5.50872500E+00;
  COFD[3286] = -4.64427323E-01;
  COFD[3287] = 1.87105612E-02;
  COFD[3288] = -2.19971729E+01;
  COFD[3289] = 5.21365421E+00;
  COFD[3290] = -4.11227771E-01;
  COFD[3291] = 1.58122118E-02;
  COFD[3292] = -2.19940656E+01;
  COFD[3293] = 5.21365421E+00;
  COFD[3294] = -4.11227771E-01;
  COFD[3295] = 1.58122118E-02;
  COFD[3296] = -2.19973126E+01;
  COFD[3297] = 5.21365421E+00;
  COFD[3298] = -4.11227771E-01;
  COFD[3299] = 1.58122118E-02;
  COFD[3300] = -2.20004651E+01;
  COFD[3301] = 5.21365421E+00;
  COFD[3302] = -4.11227771E-01;
  COFD[3303] = 1.58122118E-02;
  COFD[3304] = -2.12309086E+01;
  COFD[3305] = 4.76264361E+00;
  COFD[3306] = -3.38700190E-01;
  COFD[3307] = 1.21146321E-02;
  COFD[3308] = -2.12331402E+01;
  COFD[3309] = 4.76264361E+00;
  COFD[3310] = -3.38700190E-01;
  COFD[3311] = 1.21146321E-02;
  COFD[3312] = -2.11732228E+01;
  COFD[3313] = 4.71779001E+00;
  COFD[3314] = -3.31563320E-01;
  COFD[3315] = 1.17538445E-02;
  COFD[3316] = -2.08139238E+01;
  COFD[3317] = 4.49808464E+00;
  COFD[3318] = -2.96933784E-01;
  COFD[3319] = 1.00138496E-02;
  COFD[3320] = -2.07654434E+01;
  COFD[3321] = 4.46038299E+00;
  COFD[3322] = -2.91070190E-01;
  COFD[3323] = 9.72188349E-03;
  COFD[3324] = -2.03091465E+01;
  COFD[3325] = 4.21268497E+00;
  COFD[3326] = -2.53125583E-01;
  COFD[3327] = 7.85139716E-03;
  COFD[3328] = -2.02590152E+01;
  COFD[3329] = 4.17520083E+00;
  COFD[3330] = -2.47455328E-01;
  COFD[3331] = 7.57399683E-03;
  COFD[3332] = -1.97604342E+01;
  COFD[3333] = 3.91924248E+00;
  COFD[3334] = -2.08794500E-01;
  COFD[3335] = 5.68642902E-03;
  COFD[3336] = -1.97484160E+01;
  COFD[3337] = 3.89787850E+00;
  COFD[3338] = -2.05533896E-01;
  COFD[3339] = 5.52644140E-03;
  COFD[3340] = -1.94135901E+01;
  COFD[3341] = 3.71792259E+00;
  COFD[3342] = -1.77952253E-01;
  COFD[3343] = 4.17008632E-03;
  COFD[3344] = -1.94002125E+01;
  COFD[3345] = 3.69773613E+00;
  COFD[3346] = -1.74879178E-01;
  COFD[3347] = 4.01967668E-03;
  COFD[3348] = -1.89983820E+01;
  COFD[3349] = 3.49209787E+00;
  COFD[3350] = -1.44076215E-01;
  COFD[3351] = 2.52615376E-03;
  COFD[3352] = -1.89416987E+01;
  COFD[3353] = 3.45624144E+00;
  COFD[3354] = -1.38744659E-01;
  COFD[3355] = 2.26937154E-03;
  COFD[3356] = -1.81185070E+01;
  COFD[3357] = 3.03095915E+00;
  COFD[3358] = -7.58238868E-02;
  COFD[3359] = -7.48420472E-04;
  COFD[3360] = -1.81185070E+01;
  COFD[3361] = 3.03095915E+00;
  COFD[3362] = -7.58238868E-02;
  COFD[3363] = -7.48420472E-04;
  COFD[3364] = -1.81185070E+01;
  COFD[3365] = 3.03095915E+00;
  COFD[3366] = -7.58238868E-02;
  COFD[3367] = -7.48420472E-04;
  COFD[3368] = -1.83038270E+01;
  COFD[3369] = 3.11287717E+00;
  COFD[3370] = -8.78456308E-02;
  COFD[3371] = -1.74642045E-04;
  COFD[3372] = -1.79466180E+01;
  COFD[3373] = 2.94168818E+00;
  COFD[3374] = -6.27401942E-02;
  COFD[3375] = -1.37288894E-03;
  COFD[3376] = -1.79466180E+01;
  COFD[3377] = 2.94168818E+00;
  COFD[3378] = -6.27401942E-02;
  COFD[3379] = -1.37288894E-03;
  COFD[3380] = -1.71902076E+01;
  COFD[3381] = 2.55784884E+00;
  COFD[3382] = -6.23635356E-03;
  COFD[3383] = -4.07802535E-03;
  COFD[3384] = -1.75421842E+01;
  COFD[3385] = 2.73943771E+00;
  COFD[3386] = -3.30649537E-02;
  COFD[3387] = -2.79117250E-03;
  COFD[3388] = -2.02268939E+01;
  COFD[3389] = 5.13632099E+00;
  COFD[3390] = -4.44839130E-01;
  COFD[3391] = 1.90058356E-02;
  COFD[3392] = -2.27747741E+01;
  COFD[3393] = 5.60263382E+00;
  COFD[3394] = -4.91348327E-01;
  COFD[3395] = 2.04651120E-02;
  COFD[3396] = -1.43151328E+01;
  COFD[3397] = 3.68038508E+00;
  COFD[3398] = -2.65779346E-01;
  COFD[3399] = 1.16360771E-02;
  COFD[3400] = -1.40998907E+01;
  COFD[3401] = 3.08120012E+00;
  COFD[3402] = -1.89629903E-01;
  COFD[3403] = 8.40361952E-03;
  COFD[3404] = -1.41191170E+01;
  COFD[3405] = 3.08120012E+00;
  COFD[3406] = -1.89629903E-01;
  COFD[3407] = 8.40361952E-03;
  COFD[3408] = -1.52792799E+01;
  COFD[3409] = 3.36790500E+00;
  COFD[3410] = -2.26321740E-01;
  COFD[3411] = 9.97135055E-03;
  COFD[3412] = -1.17159884E+01;
  COFD[3413] = 2.48123210E+00;
  COFD[3414] = -1.11322604E-01;
  COFD[3415] = 4.99282389E-03;
  COFD[3416] = -2.11388255E+01;
  COFD[3417] = 5.55529689E+00;
  COFD[3418] = -4.87942530E-01;
  COFD[3419] = 2.04249057E-02;
  COFD[3420] = -1.52861287E+01;
  COFD[3421] = 3.36790500E+00;
  COFD[3422] = -2.26321740E-01;
  COFD[3423] = 9.97135055E-03;
  COFD[3424] = -1.52721010E+01;
  COFD[3425] = 3.36790500E+00;
  COFD[3426] = -2.26321740E-01;
  COFD[3427] = 9.97135055E-03;
  COFD[3428] = -1.59634493E+01;
  COFD[3429] = 3.67388294E+00;
  COFD[3430] = -2.64990709E-01;
  COFD[3431] = 1.16042706E-02;
  COFD[3432] = -1.59634493E+01;
  COFD[3433] = 3.67388294E+00;
  COFD[3434] = -2.64990709E-01;
  COFD[3435] = 1.16042706E-02;
  COFD[3436] = -1.59862997E+01;
  COFD[3437] = 3.67388294E+00;
  COFD[3438] = -2.64990709E-01;
  COFD[3439] = 1.16042706E-02;
  COFD[3440] = -1.59525075E+01;
  COFD[3441] = 3.66023858E+00;
  COFD[3442] = -2.63401043E-01;
  COFD[3443] = 1.15432000E-02;
  COFD[3444] = -2.05045498E+01;
  COFD[3445] = 5.23843909E+00;
  COFD[3446] = -4.55815614E-01;
  COFD[3447] = 1.93898040E-02;
  COFD[3448] = -2.05128629E+01;
  COFD[3449] = 5.23843909E+00;
  COFD[3450] = -4.55815614E-01;
  COFD[3451] = 1.93898040E-02;
  COFD[3452] = -2.02642156E+01;
  COFD[3453] = 5.14499744E+00;
  COFD[3454] = -4.45694433E-01;
  COFD[3455] = 1.90318647E-02;
  COFD[3456] = -1.50233391E+01;
  COFD[3457] = 3.26660767E+00;
  COFD[3458] = -2.13287177E-01;
  COFD[3459] = 9.41137857E-03;
  COFD[3460] = -1.81735675E+01;
  COFD[3461] = 4.38391495E+00;
  COFD[3462] = -3.54941287E-01;
  COFD[3463] = 1.54195107E-02;
  COFD[3464] = -1.76285583E+01;
  COFD[3465] = 4.19935698E+00;
  COFD[3466] = -3.32310212E-01;
  COFD[3467] = 1.44920670E-02;
  COFD[3468] = -1.76383102E+01;
  COFD[3469] = 4.19935698E+00;
  COFD[3470] = -3.32310212E-01;
  COFD[3471] = 1.44920670E-02;
  COFD[3472] = -1.86157710E+01;
  COFD[3473] = 4.55689508E+00;
  COFD[3474] = -3.75937921E-01;
  COFD[3475] = 1.62703488E-02;
  COFD[3476] = -1.83455387E+01;
  COFD[3477] = 4.42828044E+00;
  COFD[3478] = -3.60417833E-01;
  COFD[3479] = 1.56455103E-02;
  COFD[3480] = -1.83538331E+01;
  COFD[3481] = 4.42828044E+00;
  COFD[3482] = -3.60417833E-01;
  COFD[3483] = 1.56455103E-02;
  COFD[3484] = -2.02969667E+01;
  COFD[3485] = 5.11106992E+00;
  COFD[3486] = -4.42047129E-01;
  COFD[3487] = 1.89042990E-02;
  COFD[3488] = -1.87684982E+01;
  COFD[3489] = 4.49191492E+00;
  COFD[3490] = -3.68041771E-01;
  COFD[3491] = 1.59498676E-02;
  COFD[3492] = -1.87733780E+01;
  COFD[3493] = 4.49191492E+00;
  COFD[3494] = -3.68041771E-01;
  COFD[3495] = 1.59498676E-02;
  COFD[3496] = -1.87780743E+01;
  COFD[3497] = 4.49191492E+00;
  COFD[3498] = -3.68041771E-01;
  COFD[3499] = 1.59498676E-02;
  COFD[3500] = -1.98830863E+01;
  COFD[3501] = 4.84731557E+00;
  COFD[3502] = -4.10638352E-01;
  COFD[3503] = 1.76543886E-02;
  COFD[3504] = -1.98801803E+01;
  COFD[3505] = 4.84731557E+00;
  COFD[3506] = -4.10638352E-01;
  COFD[3507] = 1.76543886E-02;
  COFD[3508] = -1.98832169E+01;
  COFD[3509] = 4.84731557E+00;
  COFD[3510] = -4.10638352E-01;
  COFD[3511] = 1.76543886E-02;
  COFD[3512] = -1.98861639E+01;
  COFD[3513] = 4.84731557E+00;
  COFD[3514] = -4.10638352E-01;
  COFD[3515] = 1.76543886E-02;
  COFD[3516] = -2.07935801E+01;
  COFD[3517] = 5.13870075E+00;
  COFD[3518] = -4.45087556E-01;
  COFD[3519] = 1.90141513E-02;
  COFD[3520] = -2.07956566E+01;
  COFD[3521] = 5.13870075E+00;
  COFD[3522] = -4.45087556E-01;
  COFD[3523] = 1.90141513E-02;
  COFD[3524] = -2.08665572E+01;
  COFD[3525] = 5.15159479E+00;
  COFD[3526] = -4.46223576E-01;
  COFD[3527] = 1.90413223E-02;
  COFD[3528] = -2.12462427E+01;
  COFD[3529] = 5.25612649E+00;
  COFD[3530] = -4.57885944E-01;
  COFD[3531] = 1.94706895E-02;
  COFD[3532] = -2.13358402E+01;
  COFD[3533] = 5.27837455E+00;
  COFD[3534] = -4.60532753E-01;
  COFD[3535] = 1.95759584E-02;
  COFD[3536] = -2.16479635E+01;
  COFD[3537] = 5.36415648E+00;
  COFD[3538] = -4.69836047E-01;
  COFD[3539] = 1.99067039E-02;
  COFD[3540] = -2.16968369E+01;
  COFD[3541] = 5.36943260E+00;
  COFD[3542] = -4.70208052E-01;
  COFD[3543] = 1.99101421E-02;
  COFD[3544] = -2.18744947E+01;
  COFD[3545] = 5.40581593E+00;
  COFD[3546] = -4.72804333E-01;
  COFD[3547] = 1.99370903E-02;
  COFD[3548] = -2.19204750E+01;
  COFD[3549] = 5.40951483E+00;
  COFD[3550] = -4.73078075E-01;
  COFD[3551] = 1.99407243E-02;
  COFD[3552] = -2.21149546E+01;
  COFD[3553] = 5.45837402E+00;
  COFD[3554] = -4.77716491E-01;
  COFD[3555] = 2.00742141E-02;
  COFD[3556] = -2.21693686E+01;
  COFD[3557] = 5.46715955E+00;
  COFD[3558] = -4.78699053E-01;
  COFD[3559] = 2.01106334E-02;
  COFD[3560] = -2.23927590E+01;
  COFD[3561] = 5.52880430E+00;
  COFD[3562] = -4.85323223E-01;
  COFD[3563] = 2.03436366E-02;
  COFD[3564] = -2.24403702E+01;
  COFD[3565] = 5.53721632E+00;
  COFD[3566] = -4.86151296E-01;
  COFD[3567] = 2.03691055E-02;
  COFD[3568] = -2.27743540E+01;
  COFD[3569] = 5.60263382E+00;
  COFD[3570] = -4.91348327E-01;
  COFD[3571] = 2.04651120E-02;
  COFD[3572] = -2.27743540E+01;
  COFD[3573] = 5.60263382E+00;
  COFD[3574] = -4.91348327E-01;
  COFD[3575] = 2.04651120E-02;
  COFD[3576] = -2.27743540E+01;
  COFD[3577] = 5.60263382E+00;
  COFD[3578] = -4.91348327E-01;
  COFD[3579] = 2.04651120E-02;
  COFD[3580] = -2.27595631E+01;
  COFD[3581] = 5.59981860E+00;
  COFD[3582] = -4.91614072E-01;
  COFD[3583] = 2.05016331E-02;
  COFD[3584] = -2.28218040E+01;
  COFD[3585] = 5.60692017E+00;
  COFD[3586] = -4.91295058E-01;
  COFD[3587] = 2.04387644E-02;
  COFD[3588] = -2.28218040E+01;
  COFD[3589] = 5.60692017E+00;
  COFD[3590] = -4.91295058E-01;
  COFD[3591] = 2.04387644E-02;
  COFD[3592] = -2.29445186E+01;
  COFD[3593] = 5.59715632E+00;
  COFD[3594] = -4.86901590E-01;
  COFD[3595] = 2.01243635E-02;
  COFD[3596] = -2.29034442E+01;
  COFD[3597] = 5.61183042E+00;
  COFD[3598] = -4.90566396E-01;
  COFD[3599] = 2.03536798E-02;
  COFD[3600] = -1.50031706E+01;
  COFD[3601] = 3.26223357E+00;
  COFD[3602] = -2.12746642E-01;
  COFD[3603] = 9.38912883E-03;
  COFD[3604] = -2.17131539E+01;
  COFD[3605] = 4.69815223E+00;
  COFD[3606] = -3.28454103E-01;
  COFD[3607] = 1.15970636E-02;
  COFD[3608] = -1.76147183E+01;
  COFD[3609] = 4.86049500E+00;
  COFD[3610] = -4.12200578E-01;
  COFD[3611] = 1.77160971E-02;
  COFD[3612] = -1.70534750E+01;
  COFD[3613] = 4.14240922E+00;
  COFD[3614] = -3.25239774E-01;
  COFD[3615] = 1.41980687E-02;
  COFD[3616] = -1.70756953E+01;
  COFD[3617] = 4.14240922E+00;
  COFD[3618] = -3.25239774E-01;
  COFD[3619] = 1.41980687E-02;
  COFD[3620] = -1.84777509E+01;
  COFD[3621] = 4.49330851E+00;
  COFD[3622] = -3.68208715E-01;
  COFD[3623] = 1.59565402E-02;
  COFD[3624] = -1.37794466E+01;
  COFD[3625] = 3.23973858E+00;
  COFD[3626] = -2.09989036E-01;
  COFD[3627] = 9.27667906E-03;
  COFD[3628] = -2.07653629E+01;
  COFD[3629] = 5.01091988E+00;
  COFD[3630] = -3.77985581E-01;
  COFD[3631] = 1.40968617E-02;
  COFD[3632] = -1.84862906E+01;
  COFD[3633] = 4.49330851E+00;
  COFD[3634] = -3.68208715E-01;
  COFD[3635] = 1.59565402E-02;
  COFD[3636] = -1.84688303E+01;
  COFD[3637] = 4.49330851E+00;
  COFD[3638] = -3.68208715E-01;
  COFD[3639] = 1.59565402E-02;
  COFD[3640] = -1.93015519E+01;
  COFD[3641] = 4.85015581E+00;
  COFD[3642] = -4.10945109E-01;
  COFD[3643] = 1.76651398E-02;
  COFD[3644] = -1.93015519E+01;
  COFD[3645] = 4.85015581E+00;
  COFD[3646] = -4.10945109E-01;
  COFD[3647] = 1.76651398E-02;
  COFD[3648] = -1.93276406E+01;
  COFD[3649] = 4.85015581E+00;
  COFD[3650] = -4.10945109E-01;
  COFD[3651] = 1.76651398E-02;
  COFD[3652] = -1.92867532E+01;
  COFD[3653] = 4.83375900E+00;
  COFD[3654] = -4.09146560E-01;
  COFD[3655] = 1.76006599E-02;
  COFD[3656] = -2.19215472E+01;
  COFD[3657] = 5.45216133E+00;
  COFD[3658] = -4.52916925E-01;
  COFD[3659] = 1.80456400E-02;
  COFD[3660] = -2.19317665E+01;
  COFD[3661] = 5.45216133E+00;
  COFD[3662] = -4.52916925E-01;
  COFD[3663] = 1.80456400E-02;
  COFD[3664] = -2.20420967E+01;
  COFD[3665] = 5.52708328E+00;
  COFD[3666] = -4.68000799E-01;
  COFD[3667] = 1.89131903E-02;
  COFD[3668] = -1.81735675E+01;
  COFD[3669] = 4.38391495E+00;
  COFD[3670] = -3.54941287E-01;
  COFD[3671] = 1.54195107E-02;
  COFD[3672] = -2.13425604E+01;
  COFD[3673] = 5.40460130E+00;
  COFD[3674] = -4.72718910E-01;
  COFD[3675] = 1.99362717E-02;
  COFD[3676] = -2.09191230E+01;
  COFD[3677] = 5.30153901E+00;
  COFD[3678] = -4.63335119E-01;
  COFD[3679] = 1.96897053E-02;
  COFD[3680] = -2.09309702E+01;
  COFD[3681] = 5.30153901E+00;
  COFD[3682] = -4.63335119E-01;
  COFD[3683] = 1.96897053E-02;
  COFD[3684] = -2.16802565E+01;
  COFD[3685] = 5.52918296E+00;
  COFD[3686] = -4.85360709E-01;
  COFD[3687] = 2.03448006E-02;
  COFD[3688] = -2.14224440E+01;
  COFD[3689] = 5.41729961E+00;
  COFD[3690] = -4.73400281E-01;
  COFD[3691] = 1.99269567E-02;
  COFD[3692] = -2.14326420E+01;
  COFD[3693] = 5.41729961E+00;
  COFD[3694] = -4.73400281E-01;
  COFD[3695] = 1.99269567E-02;
  COFD[3696] = -2.22176875E+01;
  COFD[3697] = 5.54251230E+00;
  COFD[3698] = -4.70946314E-01;
  COFD[3699] = 1.90785869E-02;
  COFD[3700] = -2.18590684E+01;
  COFD[3701] = 5.47368915E+00;
  COFD[3702] = -4.79424291E-01;
  COFD[3703] = 2.01372920E-02;
  COFD[3704] = -2.18653022E+01;
  COFD[3705] = 5.47368915E+00;
  COFD[3706] = -4.79424291E-01;
  COFD[3707] = 2.01372920E-02;
  COFD[3708] = -2.18713176E+01;
  COFD[3709] = 5.47368915E+00;
  COFD[3710] = -4.79424291E-01;
  COFD[3711] = 2.01372920E-02;
  COFD[3712] = -2.25016971E+01;
  COFD[3713] = 5.59178974E+00;
  COFD[3714] = -4.85668031E-01;
  COFD[3715] = 2.00491907E-02;
  COFD[3716] = -2.24978649E+01;
  COFD[3717] = 5.59178974E+00;
  COFD[3718] = -4.85668031E-01;
  COFD[3719] = 2.00491907E-02;
  COFD[3720] = -2.25018696E+01;
  COFD[3721] = 5.59178974E+00;
  COFD[3722] = -4.85668031E-01;
  COFD[3723] = 2.00491907E-02;
  COFD[3724] = -2.25057636E+01;
  COFD[3725] = 5.59178974E+00;
  COFD[3726] = -4.85668031E-01;
  COFD[3727] = 2.00491907E-02;
  COFD[3728] = -2.26255602E+01;
  COFD[3729] = 5.52088531E+00;
  COFD[3730] = -4.66799303E-01;
  COFD[3731] = 1.88452220E-02;
  COFD[3732] = -2.26283634E+01;
  COFD[3733] = 5.52088531E+00;
  COFD[3734] = -4.66799303E-01;
  COFD[3735] = 1.88452220E-02;
  COFD[3736] = -2.26402130E+01;
  COFD[3737] = 5.50652998E+00;
  COFD[3738] = -4.63916297E-01;
  COFD[3739] = 1.86793236E-02;
  COFD[3740] = -2.26428111E+01;
  COFD[3741] = 5.43854589E+00;
  COFD[3742] = -4.50460433E-01;
  COFD[3743] = 1.79115741E-02;
  COFD[3744] = -2.26478344E+01;
  COFD[3745] = 5.42345219E+00;
  COFD[3746] = -4.47736318E-01;
  COFD[3747] = 1.77629965E-02;
  COFD[3748] = -2.25594139E+01;
  COFD[3749] = 5.32923056E+00;
  COFD[3750] = -4.31065031E-01;
  COFD[3751] = 1.68637777E-02;
  COFD[3752] = -2.25658179E+01;
  COFD[3753] = 5.31570530E+00;
  COFD[3754] = -4.28739621E-01;
  COFD[3755] = 1.67404194E-02;
  COFD[3756] = -2.24455334E+01;
  COFD[3757] = 5.21716989E+00;
  COFD[3758] = -4.11825254E-01;
  COFD[3759] = 1.58436458E-02;
  COFD[3760] = -2.24605872E+01;
  COFD[3761] = 5.20714730E+00;
  COFD[3762] = -4.10123218E-01;
  COFD[3763] = 1.57541368E-02;
  COFD[3764] = -2.23014058E+01;
  COFD[3765] = 5.09843164E+00;
  COFD[3766] = -3.92118361E-01;
  COFD[3767] = 1.48192579E-02;
  COFD[3768] = -2.23041648E+01;
  COFD[3769] = 5.08480808E+00;
  COFD[3770] = -3.89912767E-01;
  COFD[3771] = 1.47062570E-02;
  COFD[3772] = -2.21269336E+01;
  COFD[3773] = 4.97192306E+00;
  COFD[3774] = -3.71804005E-01;
  COFD[3775] = 1.37844212E-02;
  COFD[3776] = -2.21016561E+01;
  COFD[3777] = 4.94882195E+00;
  COFD[3778] = -3.68164829E-01;
  COFD[3779] = 1.36011930E-02;
  COFD[3780] = -2.17125432E+01;
  COFD[3781] = 4.69815223E+00;
  COFD[3782] = -3.28454103E-01;
  COFD[3783] = 1.15970636E-02;
  COFD[3784] = -2.17125432E+01;
  COFD[3785] = 4.69815223E+00;
  COFD[3786] = -3.28454103E-01;
  COFD[3787] = 1.15970636E-02;
  COFD[3788] = -2.17125432E+01;
  COFD[3789] = 4.69815223E+00;
  COFD[3790] = -3.28454103E-01;
  COFD[3791] = 1.15970636E-02;
  COFD[3792] = -2.17986999E+01;
  COFD[3793] = 4.73948321E+00;
  COFD[3794] = -3.35004943E-01;
  COFD[3795] = 1.19275825E-02;
  COFD[3796] = -2.16564571E+01;
  COFD[3797] = 4.65505428E+00;
  COFD[3798] = -3.21651467E-01;
  COFD[3799] = 1.12547138E-02;
  COFD[3800] = -2.16564571E+01;
  COFD[3801] = 4.65505428E+00;
  COFD[3802] = -3.21651467E-01;
  COFD[3803] = 1.12547138E-02;
  COFD[3804] = -2.13469905E+01;
  COFD[3805] = 4.45569641E+00;
  COFD[3806] = -2.90341515E-01;
  COFD[3807] = 9.68562258E-03;
  COFD[3808] = -2.15260200E+01;
  COFD[3809] = 4.56640766E+00;
  COFD[3810] = -3.07568513E-01;
  COFD[3811] = 1.05437086E-02;
  COFD[3812] = -1.81432499E+01;
  COFD[3813] = 4.37565431E+00;
  COFD[3814] = -3.53906025E-01;
  COFD[3815] = 1.53760786E-02;
  COFD[3816] = -2.22067717E+01;
  COFD[3817] = 5.03874797E+00;
  COFD[3818] = -3.82440213E-01;
  COFD[3819] = 1.43232015E-02;
  COFD[3820] = -1.72232379E+01;
  COFD[3821] = 4.69060745E+00;
  COFD[3822] = -3.92369888E-01;
  COFD[3823] = 1.69459661E-02;
  COFD[3824] = -1.65488277E+01;
  COFD[3825] = 3.95035840E+00;
  COFD[3826] = -3.00959418E-01;
  COFD[3827] = 1.31692593E-02;
  COFD[3828] = -1.65675292E+01;
  COFD[3829] = 3.95035840E+00;
  COFD[3830] = -3.00959418E-01;
  COFD[3831] = 1.31692593E-02;
  COFD[3832] = -1.78903850E+01;
  COFD[3833] = 4.29613154E+00;
  COFD[3834] = -3.44012526E-01;
  COFD[3835] = 1.49643715E-02;
  COFD[3836] = -1.34709956E+01;
  COFD[3837] = 3.09379603E+00;
  COFD[3838] = -1.91268635E-01;
  COFD[3839] = 8.47480224E-03;
  COFD[3840] = -2.15095920E+01;
  COFD[3841] = 5.46737673E+00;
  COFD[3842] = -4.55696085E-01;
  COFD[3843] = 1.81982625E-02;
  COFD[3844] = -1.78969625E+01;
  COFD[3845] = 4.29613154E+00;
  COFD[3846] = -3.44012526E-01;
  COFD[3847] = 1.49643715E-02;
  COFD[3848] = -1.78834868E+01;
  COFD[3849] = 4.29613154E+00;
  COFD[3850] = -3.44012526E-01;
  COFD[3851] = 1.49643715E-02;
  COFD[3852] = -1.88241056E+01;
  COFD[3853] = 4.68393046E+00;
  COFD[3854] = -3.91610863E-01;
  COFD[3855] = 1.69174645E-02;
  COFD[3856] = -1.88241056E+01;
  COFD[3857] = 4.68393046E+00;
  COFD[3858] = -3.91610863E-01;
  COFD[3859] = 1.69174645E-02;
  COFD[3860] = -1.88463801E+01;
  COFD[3861] = 4.68393046E+00;
  COFD[3862] = -3.91610863E-01;
  COFD[3863] = 1.69174645E-02;
  COFD[3864] = -1.87897289E+01;
  COFD[3865] = 4.66162351E+00;
  COFD[3866] = -3.88920477E-01;
  COFD[3867] = 1.68089648E-02;
  COFD[3868] = -2.19956299E+01;
  COFD[3869] = 5.55935694E+00;
  COFD[3870] = -4.74154740E-01;
  COFD[3871] = 1.92584304E-02;
  COFD[3872] = -2.20036321E+01;
  COFD[3873] = 5.55935694E+00;
  COFD[3874] = -4.74154740E-01;
  COFD[3875] = 1.92584304E-02;
  COFD[3876] = -2.19491665E+01;
  COFD[3877] = 5.59157589E+00;
  COFD[3878] = -4.85617912E-01;
  COFD[3879] = 2.00461138E-02;
  COFD[3880] = -1.76285583E+01;
  COFD[3881] = 4.19935698E+00;
  COFD[3882] = -3.32310212E-01;
  COFD[3883] = 1.44920670E-02;
  COFD[3884] = -2.09191230E+01;
  COFD[3885] = 5.30153901E+00;
  COFD[3886] = -4.63335119E-01;
  COFD[3887] = 1.96897053E-02;
  COFD[3888] = -2.03766918E+01;
  COFD[3889] = 5.13263469E+00;
  COFD[3890] = -4.44457285E-01;
  COFD[3891] = 1.89932102E-02;
  COFD[3892] = -2.03860971E+01;
  COFD[3893] = 5.13263469E+00;
  COFD[3894] = -4.44457285E-01;
  COFD[3895] = 1.89932102E-02;
  COFD[3896] = -2.12121345E+01;
  COFD[3897] = 5.39823225E+00;
  COFD[3898] = -4.72294645E-01;
  COFD[3899] = 1.99340225E-02;
  COFD[3900] = -2.10864229E+01;
  COFD[3901] = 5.34286099E+00;
  COFD[3902] = -4.68100992E-01;
  COFD[3903] = 1.98731399E-02;
  COFD[3904] = -2.10944068E+01;
  COFD[3905] = 5.34286099E+00;
  COFD[3906] = -4.68100992E-01;
  COFD[3907] = 1.98731399E-02;
  COFD[3908] = -2.21110249E+01;
  COFD[3909] = 5.58360799E+00;
  COFD[3910] = -4.82701436E-01;
  COFD[3911] = 1.98437922E-02;
  COFD[3912] = -2.14323161E+01;
  COFD[3913] = 5.37331605E+00;
  COFD[3914] = -4.70491203E-01;
  COFD[3915] = 1.99134666E-02;
  COFD[3916] = -2.14369847E+01;
  COFD[3917] = 5.37331605E+00;
  COFD[3918] = -4.70491203E-01;
  COFD[3919] = 1.99134666E-02;
  COFD[3920] = -2.14414758E+01;
  COFD[3921] = 5.37331605E+00;
  COFD[3922] = -4.70491203E-01;
  COFD[3923] = 1.99134666E-02;
  COFD[3924] = -2.22816073E+01;
  COFD[3925] = 5.59185582E+00;
  COFD[3926] = -4.91155812E-01;
  COFD[3927] = 2.05043018E-02;
  COFD[3928] = -2.22788407E+01;
  COFD[3929] = 5.59185582E+00;
  COFD[3930] = -4.91155812E-01;
  COFD[3931] = 2.05043018E-02;
  COFD[3932] = -2.22817317E+01;
  COFD[3933] = 5.59185582E+00;
  COFD[3934] = -4.91155812E-01;
  COFD[3935] = 2.05043018E-02;
  COFD[3936] = -2.22845366E+01;
  COFD[3937] = 5.59185582E+00;
  COFD[3938] = -4.91155812E-01;
  COFD[3939] = 2.05043018E-02;
  COFD[3940] = -2.25311979E+01;
  COFD[3941] = 5.58497731E+00;
  COFD[3942] = -4.81782064E-01;
  COFD[3943] = 1.97602508E-02;
  COFD[3944] = -2.25331679E+01;
  COFD[3945] = 5.58497731E+00;
  COFD[3946] = -4.81782064E-01;
  COFD[3947] = 1.97602508E-02;
  COFD[3948] = -2.25768690E+01;
  COFD[3949] = 5.58521828E+00;
  COFD[3950] = -4.80992964E-01;
  COFD[3951] = 1.96934867E-02;
  COFD[3952] = -2.26391595E+01;
  COFD[3953] = 5.54906697E+00;
  COFD[3954] = -4.72198999E-01;
  COFD[3955] = 1.91488843E-02;
  COFD[3956] = -2.26508216E+01;
  COFD[3957] = 5.53769414E+00;
  COFD[3958] = -4.70025640E-01;
  COFD[3959] = 1.90268960E-02;
  COFD[3960] = -2.26655242E+01;
  COFD[3961] = 5.49155307E+00;
  COFD[3962] = -4.60156593E-01;
  COFD[3963] = 1.84445999E-02;
  COFD[3964] = -2.26813649E+01;
  COFD[3965] = 5.48250826E+00;
  COFD[3966] = -4.58439553E-01;
  COFD[3967] = 1.83484716E-02;
  COFD[3968] = -2.26097243E+01;
  COFD[3969] = 5.40751776E+00;
  COFD[3970] = -4.44796499E-01;
  COFD[3971] = 1.76008889E-02;
  COFD[3972] = -2.26317876E+01;
  COFD[3973] = 5.40103531E+00;
  COFD[3974] = -4.43581849E-01;
  COFD[3975] = 1.75334494E-02;
  COFD[3976] = -2.25351154E+01;
  COFD[3977] = 5.32200412E+00;
  COFD[3978] = -4.29810296E-01;
  COFD[3979] = 1.67968656E-02;
  COFD[3980] = -2.25457395E+01;
  COFD[3981] = 5.31236460E+00;
  COFD[3982] = -4.28177190E-01;
  COFD[3983] = 1.67109235E-02;
  COFD[3984] = -2.24546794E+01;
  COFD[3985] = 5.23807779E+00;
  COFD[3986] = -4.15451615E-01;
  COFD[3987] = 1.60367849E-02;
  COFD[3988] = -2.24563053E+01;
  COFD[3989] = 5.22687847E+00;
  COFD[3990] = -4.13492829E-01;
  COFD[3991] = 1.59319574E-02;
  COFD[3992] = -2.22063772E+01;
  COFD[3993] = 5.03874797E+00;
  COFD[3994] = -3.82440213E-01;
  COFD[3995] = 1.43232015E-02;
  COFD[3996] = -2.22063772E+01;
  COFD[3997] = 5.03874797E+00;
  COFD[3998] = -3.82440213E-01;
  COFD[3999] = 1.43232015E-02;
  COFD[4000] = -2.22063772E+01;
  COFD[4001] = 5.03874797E+00;
  COFD[4002] = -3.82440213E-01;
  COFD[4003] = 1.43232015E-02;
  COFD[4004] = -2.22774154E+01;
  COFD[4005] = 5.07362417E+00;
  COFD[4006] = -3.88094414E-01;
  COFD[4007] = 1.46129219E-02;
  COFD[4008] = -2.21555521E+01;
  COFD[4009] = 5.00070625E+00;
  COFD[4010] = -3.76355283E-01;
  COFD[4011] = 1.40141622E-02;
  COFD[4012] = -2.21555521E+01;
  COFD[4013] = 5.00070625E+00;
  COFD[4014] = -3.76355283E-01;
  COFD[4015] = 1.40141622E-02;
  COFD[4016] = -2.18428894E+01;
  COFD[4017] = 4.80248377E+00;
  COFD[4018] = -3.45087398E-01;
  COFD[4019] = 1.24391407E-02;
  COFD[4020] = -2.20003434E+01;
  COFD[4021] = 4.90271383E+00;
  COFD[4022] = -3.60896715E-01;
  COFD[4023] = 1.32352181E-02;
  COFD[4024] = -1.76002073E+01;
  COFD[4025] = 4.19171952E+00;
  COFD[4026] = -3.31354810E-01;
  COFD[4027] = 1.44520623E-02;
  COFD[4028] = -2.22232029E+01;
  COFD[4029] = 5.03874797E+00;
  COFD[4030] = -3.82440213E-01;
  COFD[4031] = 1.43232015E-02;
  COFD[4032] = -1.72239329E+01;
  COFD[4033] = 4.69060745E+00;
  COFD[4034] = -3.92369888E-01;
  COFD[4035] = 1.69459661E-02;
  COFD[4036] = -1.65559708E+01;
  COFD[4037] = 3.95035840E+00;
  COFD[4038] = -3.00959418E-01;
  COFD[4039] = 1.31692593E-02;
  COFD[4040] = -1.65749465E+01;
  COFD[4041] = 3.95035840E+00;
  COFD[4042] = -3.00959418E-01;
  COFD[4043] = 1.31692593E-02;
  COFD[4044] = -1.79009121E+01;
  COFD[4045] = 4.29613154E+00;
  COFD[4046] = -3.44012526E-01;
  COFD[4047] = 1.49643715E-02;
  COFD[4048] = -1.34723365E+01;
  COFD[4049] = 3.09379603E+00;
  COFD[4050] = -1.91268635E-01;
  COFD[4051] = 8.47480224E-03;
  COFD[4052] = -2.15172712E+01;
  COFD[4053] = 5.46737673E+00;
  COFD[4054] = -4.55696085E-01;
  COFD[4055] = 1.81982625E-02;
  COFD[4056] = -1.79076305E+01;
  COFD[4057] = 4.29613154E+00;
  COFD[4058] = -3.44012526E-01;
  COFD[4059] = 1.49643715E-02;
  COFD[4060] = -1.78938681E+01;
  COFD[4061] = 4.29613154E+00;
  COFD[4062] = -3.44012526E-01;
  COFD[4063] = 1.49643715E-02;
  COFD[4064] = -1.88306727E+01;
  COFD[4065] = 4.68393046E+00;
  COFD[4066] = -3.91610863E-01;
  COFD[4067] = 1.69174645E-02;
  COFD[4068] = -1.88306727E+01;
  COFD[4069] = 4.68393046E+00;
  COFD[4070] = -3.91610863E-01;
  COFD[4071] = 1.69174645E-02;
  COFD[4072] = -1.88532484E+01;
  COFD[4073] = 4.68393046E+00;
  COFD[4074] = -3.91610863E-01;
  COFD[4075] = 1.69174645E-02;
  COFD[4076] = -1.87968842E+01;
  COFD[4077] = 4.66162351E+00;
  COFD[4078] = -3.88920477E-01;
  COFD[4079] = 1.68089648E-02;
  COFD[4080] = -2.20055495E+01;
  COFD[4081] = 5.55935694E+00;
  COFD[4082] = -4.74154740E-01;
  COFD[4083] = 1.92584304E-02;
  COFD[4084] = -2.20137133E+01;
  COFD[4085] = 5.55935694E+00;
  COFD[4086] = -4.74154740E-01;
  COFD[4087] = 1.92584304E-02;
  COFD[4088] = -2.19594037E+01;
  COFD[4089] = 5.59157589E+00;
  COFD[4090] = -4.85617912E-01;
  COFD[4091] = 2.00461138E-02;
  COFD[4092] = -1.76383102E+01;
  COFD[4093] = 4.19935698E+00;
  COFD[4094] = -3.32310212E-01;
  COFD[4095] = 1.44920670E-02;
  COFD[4096] = -2.09309702E+01;
  COFD[4097] = 5.30153901E+00;
  COFD[4098] = -4.63335119E-01;
  COFD[4099] = 1.96897053E-02;
  COFD[4100] = -2.03860971E+01;
  COFD[4101] = 5.13263469E+00;
  COFD[4102] = -4.44457285E-01;
  COFD[4103] = 1.89932102E-02;
  COFD[4104] = -2.03956828E+01;
  COFD[4105] = 5.13263469E+00;
  COFD[4106] = -4.44457285E-01;
  COFD[4107] = 1.89932102E-02;
  COFD[4108] = -2.12218938E+01;
  COFD[4109] = 5.39823225E+00;
  COFD[4110] = -4.72294645E-01;
  COFD[4111] = 1.99340225E-02;
  COFD[4112] = -2.10963496E+01;
  COFD[4113] = 5.34286099E+00;
  COFD[4114] = -4.68100992E-01;
  COFD[4115] = 1.98731399E-02;
  COFD[4116] = -2.11044949E+01;
  COFD[4117] = 5.34286099E+00;
  COFD[4118] = -4.68100992E-01;
  COFD[4119] = 1.98731399E-02;
  COFD[4120] = -2.21227731E+01;
  COFD[4121] = 5.58360799E+00;
  COFD[4122] = -4.82701436E-01;
  COFD[4123] = 1.98437922E-02;
  COFD[4124] = -2.14438531E+01;
  COFD[4125] = 5.37331605E+00;
  COFD[4126] = -4.70491203E-01;
  COFD[4127] = 1.99134666E-02;
  COFD[4128] = -2.14486311E+01;
  COFD[4129] = 5.37331605E+00;
  COFD[4130] = -4.70491203E-01;
  COFD[4131] = 1.99134666E-02;
  COFD[4132] = -2.14532286E+01;
  COFD[4133] = 5.37331605E+00;
  COFD[4134] = -4.70491203E-01;
  COFD[4135] = 1.99134666E-02;
  COFD[4136] = -2.22944970E+01;
  COFD[4137] = 5.59185582E+00;
  COFD[4138] = -4.91155812E-01;
  COFD[4139] = 2.05043018E-02;
  COFD[4140] = -2.22916584E+01;
  COFD[4141] = 5.59185582E+00;
  COFD[4142] = -4.91155812E-01;
  COFD[4143] = 2.05043018E-02;
  COFD[4144] = -2.22946247E+01;
  COFD[4145] = 5.59185582E+00;
  COFD[4146] = -4.91155812E-01;
  COFD[4147] = 2.05043018E-02;
  COFD[4148] = -2.22975030E+01;
  COFD[4149] = 5.59185582E+00;
  COFD[4150] = -4.91155812E-01;
  COFD[4151] = 2.05043018E-02;
  COFD[4152] = -2.25449207E+01;
  COFD[4153] = 5.58497731E+00;
  COFD[4154] = -4.81782064E-01;
  COFD[4155] = 1.97602508E-02;
  COFD[4156] = -2.25469457E+01;
  COFD[4157] = 5.58497731E+00;
  COFD[4158] = -4.81782064E-01;
  COFD[4159] = 1.97602508E-02;
  COFD[4160] = -2.25907006E+01;
  COFD[4161] = 5.58521828E+00;
  COFD[4162] = -4.80992964E-01;
  COFD[4163] = 1.96934867E-02;
  COFD[4164] = -2.26535978E+01;
  COFD[4165] = 5.54906697E+00;
  COFD[4166] = -4.72198999E-01;
  COFD[4167] = 1.91488843E-02;
  COFD[4168] = -2.26653010E+01;
  COFD[4169] = 5.53769414E+00;
  COFD[4170] = -4.70025640E-01;
  COFD[4171] = 1.90268960E-02;
  COFD[4172] = -2.26804745E+01;
  COFD[4173] = 5.49155307E+00;
  COFD[4174] = -4.60156593E-01;
  COFD[4175] = 1.84445999E-02;
  COFD[4176] = -2.26963476E+01;
  COFD[4177] = 5.48250826E+00;
  COFD[4178] = -4.58439553E-01;
  COFD[4179] = 1.83484716E-02;
  COFD[4180] = -2.26250831E+01;
  COFD[4181] = 5.40751776E+00;
  COFD[4182] = -4.44796499E-01;
  COFD[4183] = 1.76008889E-02;
  COFD[4184] = -2.26471726E+01;
  COFD[4185] = 5.40103531E+00;
  COFD[4186] = -4.43581849E-01;
  COFD[4187] = 1.75334494E-02;
  COFD[4188] = -2.25508077E+01;
  COFD[4189] = 5.32200412E+00;
  COFD[4190] = -4.29810296E-01;
  COFD[4191] = 1.67968656E-02;
  COFD[4192] = -2.25614534E+01;
  COFD[4193] = 5.31236460E+00;
  COFD[4194] = -4.28177190E-01;
  COFD[4195] = 1.67109235E-02;
  COFD[4196] = -2.24706491E+01;
  COFD[4197] = 5.23807779E+00;
  COFD[4198] = -4.15451615E-01;
  COFD[4199] = 1.60367849E-02;
  COFD[4200] = -2.24722931E+01;
  COFD[4201] = 5.22687847E+00;
  COFD[4202] = -4.13492829E-01;
  COFD[4203] = 1.59319574E-02;
  COFD[4204] = -2.22227952E+01;
  COFD[4205] = 5.03874797E+00;
  COFD[4206] = -3.82440213E-01;
  COFD[4207] = 1.43232015E-02;
  COFD[4208] = -2.22227952E+01;
  COFD[4209] = 5.03874797E+00;
  COFD[4210] = -3.82440213E-01;
  COFD[4211] = 1.43232015E-02;
  COFD[4212] = -2.22227952E+01;
  COFD[4213] = 5.03874797E+00;
  COFD[4214] = -3.82440213E-01;
  COFD[4215] = 1.43232015E-02;
  COFD[4216] = -2.22938200E+01;
  COFD[4217] = 5.07362417E+00;
  COFD[4218] = -3.88094414E-01;
  COFD[4219] = 1.46129219E-02;
  COFD[4220] = -2.21723313E+01;
  COFD[4221] = 5.00070625E+00;
  COFD[4222] = -3.76355283E-01;
  COFD[4223] = 1.40141622E-02;
  COFD[4224] = -2.21723313E+01;
  COFD[4225] = 5.00070625E+00;
  COFD[4226] = -3.76355283E-01;
  COFD[4227] = 1.40141622E-02;
  COFD[4228] = -2.18599410E+01;
  COFD[4229] = 4.80248377E+00;
  COFD[4230] = -3.45087398E-01;
  COFD[4231] = 1.24391407E-02;
  COFD[4232] = -2.20172593E+01;
  COFD[4233] = 4.90271383E+00;
  COFD[4234] = -3.60896715E-01;
  COFD[4235] = 1.32352181E-02;
  COFD[4236] = -1.76099599E+01;
  COFD[4237] = 4.19171952E+00;
  COFD[4238] = -3.31354810E-01;
  COFD[4239] = 1.44520623E-02;
  COFD[4240] = -2.08912810E+01;
  COFD[4241] = 4.35422933E+00;
  COFD[4242] = -2.74727512E-01;
  COFD[4243] = 8.91328380E-03;
  COFD[4244] = -1.82252070E+01;
  COFD[4245] = 5.05237312E+00;
  COFD[4246] = -4.35182396E-01;
  COFD[4247] = 1.86363074E-02;
  COFD[4248] = -1.74792034E+01;
  COFD[4249] = 4.29676909E+00;
  COFD[4250] = -3.44085306E-01;
  COFD[4251] = 1.49671135E-02;
  COFD[4252] = -1.74984410E+01;
  COFD[4253] = 4.29676909E+00;
  COFD[4254] = -3.44085306E-01;
  COFD[4255] = 1.49671135E-02;
  COFD[4256] = -1.89616566E+01;
  COFD[4257] = 4.68595732E+00;
  COFD[4258] = -3.91842840E-01;
  COFD[4259] = 1.69262542E-02;
  COFD[4260] = -1.42229344E+01;
  COFD[4261] = 3.38669384E+00;
  COFD[4262] = -2.28784122E-01;
  COFD[4263] = 1.00790953E-02;
  COFD[4264] = -2.08812277E+01;
  COFD[4265] = 5.08859217E+00;
  COFD[4266] = -3.90525428E-01;
  COFD[4267] = 1.47376395E-02;
  COFD[4268] = -1.89685112E+01;
  COFD[4269] = 4.68595732E+00;
  COFD[4270] = -3.91842840E-01;
  COFD[4271] = 1.69262542E-02;
  COFD[4272] = -1.89544717E+01;
  COFD[4273] = 4.68595732E+00;
  COFD[4274] = -3.91842840E-01;
  COFD[4275] = 1.69262542E-02;
  COFD[4276] = -1.98418097E+01;
  COFD[4277] = 5.04367502E+00;
  COFD[4278] = -4.34153325E-01;
  COFD[4279] = 1.85956055E-02;
  COFD[4280] = -1.98418097E+01;
  COFD[4281] = 5.04367502E+00;
  COFD[4282] = -4.34153325E-01;
  COFD[4283] = 1.85956055E-02;
  COFD[4284] = -1.98646724E+01;
  COFD[4285] = 5.04367502E+00;
  COFD[4286] = -4.34153325E-01;
  COFD[4287] = 1.85956055E-02;
  COFD[4288] = -1.98075051E+01;
  COFD[4289] = 5.02169524E+00;
  COFD[4290] = -4.31582804E-01;
  COFD[4291] = 1.84953568E-02;
  COFD[4292] = -2.16296327E+01;
  COFD[4293] = 5.29019717E+00;
  COFD[4294] = -4.24502606E-01;
  COFD[4295] = 1.65197343E-02;
  COFD[4296] = -2.16379525E+01;
  COFD[4297] = 5.29019717E+00;
  COFD[4298] = -4.24502606E-01;
  COFD[4299] = 1.65197343E-02;
  COFD[4300] = -2.19670810E+01;
  COFD[4301] = 5.48847873E+00;
  COFD[4302] = -4.59558930E-01;
  COFD[4303] = 1.84107961E-02;
  COFD[4304] = -1.86157710E+01;
  COFD[4305] = 4.55689508E+00;
  COFD[4306] = -3.75937921E-01;
  COFD[4307] = 1.62703488E-02;
  COFD[4308] = -2.16802565E+01;
  COFD[4309] = 5.52918296E+00;
  COFD[4310] = -4.85360709E-01;
  COFD[4311] = 2.03448006E-02;
  COFD[4312] = -2.12121345E+01;
  COFD[4313] = 5.39823225E+00;
  COFD[4314] = -4.72294645E-01;
  COFD[4315] = 1.99340225E-02;
  COFD[4316] = -2.12218938E+01;
  COFD[4317] = 5.39823225E+00;
  COFD[4318] = -4.72294645E-01;
  COFD[4319] = 1.99340225E-02;
  COFD[4320] = -2.19327379E+01;
  COFD[4321] = 5.60638188E+00;
  COFD[4322] = -4.91272522E-01;
  COFD[4323] = 2.04396264E-02;
  COFD[4324] = -2.18190524E+01;
  COFD[4325] = 5.55753905E+00;
  COFD[4326] = -4.88136714E-01;
  COFD[4327] = 2.04294957E-02;
  COFD[4328] = -2.18273535E+01;
  COFD[4329] = 5.55753905E+00;
  COFD[4330] = -4.88136714E-01;
  COFD[4331] = 2.04294957E-02;
  COFD[4332] = -2.20500773E+01;
  COFD[4333] = 5.44448440E+00;
  COFD[4334] = -4.51529024E-01;
  COFD[4335] = 1.79698119E-02;
  COFD[4336] = -2.21885121E+01;
  COFD[4337] = 5.59472344E+00;
  COFD[4338] = -4.91421518E-01;
  COFD[4339] = 2.05117088E-02;
  COFD[4340] = -2.21933965E+01;
  COFD[4341] = 5.59472344E+00;
  COFD[4342] = -4.91421518E-01;
  COFD[4343] = 2.05117088E-02;
  COFD[4344] = -2.21980972E+01;
  COFD[4345] = 5.59472344E+00;
  COFD[4346] = -4.91421518E-01;
  COFD[4347] = 2.05117088E-02;
  COFD[4348] = -2.25170445E+01;
  COFD[4349] = 5.58249828E+00;
  COFD[4350] = -4.78873376E-01;
  COFD[4351] = 1.95316774E-02;
  COFD[4352] = -2.25141356E+01;
  COFD[4353] = 5.58249828E+00;
  COFD[4354] = -4.78873376E-01;
  COFD[4355] = 1.95316774E-02;
  COFD[4356] = -2.25171753E+01;
  COFD[4357] = 5.58249828E+00;
  COFD[4358] = -4.78873376E-01;
  COFD[4359] = 1.95316774E-02;
  COFD[4360] = -2.25201254E+01;
  COFD[4361] = 5.58249828E+00;
  COFD[4362] = -4.78873376E-01;
  COFD[4363] = 1.95316774E-02;
  COFD[4364] = -2.24096903E+01;
  COFD[4365] = 5.41604244E+00;
  COFD[4366] = -4.46391067E-01;
  COFD[4367] = 1.76894436E-02;
  COFD[4368] = -2.24117691E+01;
  COFD[4369] = 5.41604244E+00;
  COFD[4370] = -4.46391067E-01;
  COFD[4371] = 1.76894436E-02;
  COFD[4372] = -2.24136614E+01;
  COFD[4373] = 5.39792162E+00;
  COFD[4374] = -4.42987859E-01;
  COFD[4375] = 1.75002253E-02;
  COFD[4376] = -2.22712203E+01;
  COFD[4377] = 5.27184216E+00;
  COFD[4378] = -4.21373345E-01;
  COFD[4379] = 1.63542609E-02;
  COFD[4380] = -2.22685865E+01;
  COFD[4381] = 5.25382325E+00;
  COFD[4382] = -4.18230827E-01;
  COFD[4383] = 1.61861819E-02;
  COFD[4384] = -2.21166766E+01;
  COFD[4385] = 5.13519978E+00;
  COFD[4386] = -3.98132825E-01;
  COFD[4387] = 1.51293092E-02;
  COFD[4388] = -2.21119557E+01;
  COFD[4389] = 5.11715687E+00;
  COFD[4390] = -3.95151704E-01;
  COFD[4391] = 1.49747613E-02;
  COFD[4392] = -2.18596576E+01;
  COFD[4393] = 4.96464859E+00;
  COFD[4394] = -3.70657753E-01;
  COFD[4395] = 1.37267014E-02;
  COFD[4396] = -2.18549490E+01;
  COFD[4397] = 4.94651955E+00;
  COFD[4398] = -3.67802173E-01;
  COFD[4399] = 1.35829359E-02;
  COFD[4400] = -2.15864547E+01;
  COFD[4401] = 4.79387853E+00;
  COFD[4402] = -3.43720861E-01;
  COFD[4403] = 1.23700578E-02;
  COFD[4404] = -2.15876129E+01;
  COFD[4405] = 4.77996453E+00;
  COFD[4406] = -3.41483820E-01;
  COFD[4407] = 1.22561537E-02;
  COFD[4408] = -2.13890556E+01;
  COFD[4409] = 4.65974918E+00;
  COFD[4410] = -3.22390767E-01;
  COFD[4411] = 1.12918650E-02;
  COFD[4412] = -2.13664595E+01;
  COFD[4413] = 4.63804668E+00;
  COFD[4414] = -3.18954675E-01;
  COFD[4415] = 1.11186092E-02;
  COFD[4416] = -2.08908603E+01;
  COFD[4417] = 4.35422933E+00;
  COFD[4418] = -2.74727512E-01;
  COFD[4419] = 8.91328380E-03;
  COFD[4420] = -2.08908603E+01;
  COFD[4421] = 4.35422933E+00;
  COFD[4422] = -2.74727512E-01;
  COFD[4423] = 8.91328380E-03;
  COFD[4424] = -2.08908603E+01;
  COFD[4425] = 4.35422933E+00;
  COFD[4426] = -2.74727512E-01;
  COFD[4427] = 8.91328380E-03;
  COFD[4428] = -2.10053277E+01;
  COFD[4429] = 4.40732366E+00;
  COFD[4430] = -2.82889322E-01;
  COFD[4431] = 9.31663975E-03;
  COFD[4432] = -2.08019949E+01;
  COFD[4433] = 4.29990973E+00;
  COFD[4434] = -2.66411377E-01;
  COFD[4435] = 8.50361424E-03;
  COFD[4436] = -2.08019949E+01;
  COFD[4437] = 4.29990973E+00;
  COFD[4438] = -2.66411377E-01;
  COFD[4439] = 8.50361424E-03;
  COFD[4440] = -2.02866233E+01;
  COFD[4441] = 4.01670907E+00;
  COFD[4442] = -2.23536702E-01;
  COFD[4443] = 6.40647982E-03;
  COFD[4444] = -2.05654423E+01;
  COFD[4445] = 4.16804380E+00;
  COFD[4446] = -2.46372859E-01;
  COFD[4447] = 7.52105030E-03;
  COFD[4448] = -1.85864196E+01;
  COFD[4449] = 4.54915847E+00;
  COFD[4450] = -3.75000738E-01;
  COFD[4451] = 1.62324821E-02;
  COFD[4452] = -2.14955755E+01;
  COFD[4453] = 4.62311744E+00;
  COFD[4454] = -3.16576672E-01;
  COFD[4455] = 1.09982058E-02;
  COFD[4456] = -1.79339484E+01;
  COFD[4457] = 4.91373893E+00;
  COFD[4458] = -4.18747629E-01;
  COFD[4459] = 1.79856610E-02;
  COFD[4460] = -1.72496558E+01;
  COFD[4461] = 4.17889917E+00;
  COFD[4462] = -3.29752510E-01;
  COFD[4463] = 1.43850275E-02;
  COFD[4464] = -1.72691436E+01;
  COFD[4465] = 4.17889917E+00;
  COFD[4466] = -3.29752510E-01;
  COFD[4467] = 1.43850275E-02;
  COFD[4468] = -1.86409085E+01;
  COFD[4469] = 4.53572533E+00;
  COFD[4470] = -3.73386925E-01;
  COFD[4471] = 1.61678881E-02;
  COFD[4472] = -1.39914049E+01;
  COFD[4473] = 3.26384506E+00;
  COFD[4474] = -2.12947087E-01;
  COFD[4475] = 9.39743888E-03;
  COFD[4476] = -2.12597258E+01;
  COFD[4477] = 5.24930667E+00;
  COFD[4478] = -4.17435088E-01;
  COFD[4479] = 1.61434424E-02;
  COFD[4480] = -1.86478950E+01;
  COFD[4481] = 4.53572533E+00;
  COFD[4482] = -3.73386925E-01;
  COFD[4483] = 1.61678881E-02;
  COFD[4484] = -1.86335873E+01;
  COFD[4485] = 4.53572533E+00;
  COFD[4486] = -3.73386925E-01;
  COFD[4487] = 1.61678881E-02;
  COFD[4488] = -1.95263296E+01;
  COFD[4489] = 4.90255048E+00;
  COFD[4490] = -4.17368501E-01;
  COFD[4491] = 1.79287358E-02;
  COFD[4492] = -1.95263296E+01;
  COFD[4493] = 4.90255048E+00;
  COFD[4494] = -4.17368501E-01;
  COFD[4495] = 1.79287358E-02;
  COFD[4496] = -1.95494660E+01;
  COFD[4497] = 4.90255048E+00;
  COFD[4498] = -4.17368501E-01;
  COFD[4499] = 1.79287358E-02;
  COFD[4500] = -1.94763687E+01;
  COFD[4501] = 4.87333294E+00;
  COFD[4502] = -4.13769241E-01;
  COFD[4503] = 1.77802244E-02;
  COFD[4504] = -2.19229146E+01;
  COFD[4505] = 5.41841631E+00;
  COFD[4506] = -4.46818971E-01;
  COFD[4507] = 1.77127652E-02;
  COFD[4508] = -2.19313850E+01;
  COFD[4509] = 5.41841631E+00;
  COFD[4510] = -4.46818971E-01;
  COFD[4511] = 1.77127652E-02;
  COFD[4512] = -2.21069995E+01;
  COFD[4513] = 5.55072945E+00;
  COFD[4514] = -4.72525345E-01;
  COFD[4515] = 1.91674202E-02;
  COFD[4516] = -1.83455387E+01;
  COFD[4517] = 4.42828044E+00;
  COFD[4518] = -3.60417833E-01;
  COFD[4519] = 1.56455103E-02;
  COFD[4520] = -2.14224440E+01;
  COFD[4521] = 5.41729961E+00;
  COFD[4522] = -4.73400281E-01;
  COFD[4523] = 1.99269567E-02;
  COFD[4524] = -2.10864229E+01;
  COFD[4525] = 5.34286099E+00;
  COFD[4526] = -4.68100992E-01;
  COFD[4527] = 1.98731399E-02;
  COFD[4528] = -2.10963496E+01;
  COFD[4529] = 5.34286099E+00;
  COFD[4530] = -4.68100992E-01;
  COFD[4531] = 1.98731399E-02;
  COFD[4532] = -2.18190524E+01;
  COFD[4533] = 5.55753905E+00;
  COFD[4534] = -4.88136714E-01;
  COFD[4535] = 2.04294957E-02;
  COFD[4536] = -2.15575647E+01;
  COFD[4537] = 5.44803850E+00;
  COFD[4538] = -4.76610560E-01;
  COFD[4539] = 2.00355294E-02;
  COFD[4540] = -2.15660162E+01;
  COFD[4541] = 5.44803850E+00;
  COFD[4542] = -4.76610560E-01;
  COFD[4543] = 2.00355294E-02;
  COFD[4544] = -2.22107598E+01;
  COFD[4545] = 5.51722375E+00;
  COFD[4546] = -4.66081431E-01;
  COFD[4547] = 1.88044011E-02;
  COFD[4548] = -2.19883773E+01;
  COFD[4549] = 5.51276597E+00;
  COFD[4550] = -4.83701824E-01;
  COFD[4551] = 2.02915297E-02;
  COFD[4552] = -2.19933650E+01;
  COFD[4553] = 5.51276597E+00;
  COFD[4554] = -4.83701824E-01;
  COFD[4555] = 2.02915297E-02;
  COFD[4556] = -2.19981661E+01;
  COFD[4557] = 5.51276597E+00;
  COFD[4558] = -4.83701824E-01;
  COFD[4559] = 2.02915297E-02;
  COFD[4560] = -2.25006514E+01;
  COFD[4561] = 5.58206320E+00;
  COFD[4562] = -4.82956809E-01;
  COFD[4563] = 1.98731634E-02;
  COFD[4564] = -2.24976738E+01;
  COFD[4565] = 5.58206320E+00;
  COFD[4566] = -4.82956809E-01;
  COFD[4567] = 1.98731634E-02;
  COFD[4568] = -2.25007852E+01;
  COFD[4569] = 5.58206320E+00;
  COFD[4570] = -4.82956809E-01;
  COFD[4571] = 1.98731634E-02;
  COFD[4572] = -2.25038054E+01;
  COFD[4573] = 5.58206320E+00;
  COFD[4574] = -4.82956809E-01;
  COFD[4575] = 1.98731634E-02;
  COFD[4576] = -2.25927761E+01;
  COFD[4577] = 5.50251732E+00;
  COFD[4578] = -4.62858785E-01;
  COFD[4579] = 1.86120573E-02;
  COFD[4580] = -2.25949076E+01;
  COFD[4581] = 5.50251732E+00;
  COFD[4582] = -4.62858785E-01;
  COFD[4583] = 1.86120573E-02;
  COFD[4584] = -2.26247547E+01;
  COFD[4585] = 5.49685743E+00;
  COFD[4586] = -4.61237933E-01;
  COFD[4587] = 1.85069626E-02;
  COFD[4588] = -2.25658144E+01;
  COFD[4589] = 5.40653540E+00;
  COFD[4590] = -4.44612351E-01;
  COFD[4591] = 1.75906515E-02;
  COFD[4592] = -2.25757448E+01;
  COFD[4593] = 5.39437835E+00;
  COFD[4594] = -4.42315066E-01;
  COFD[4595] = 1.74626754E-02;
  COFD[4596] = -2.24320929E+01;
  COFD[4597] = 5.27966625E+00;
  COFD[4598] = -4.22746172E-01;
  COFD[4599] = 1.64279811E-02;
  COFD[4600] = -2.24383688E+01;
  COFD[4601] = 5.26665057E+00;
  COFD[4602] = -4.20468031E-01;
  COFD[4603] = 1.63058218E-02;
  COFD[4604] = -2.23077679E+01;
  COFD[4605] = 5.16629594E+00;
  COFD[4606] = -4.03322392E-01;
  COFD[4607] = 1.53998221E-02;
  COFD[4608] = -2.23188386E+01;
  COFD[4609] = 5.15529711E+00;
  COFD[4610] = -4.01471911E-01;
  COFD[4611] = 1.53029101E-02;
  COFD[4612] = -2.21295087E+01;
  COFD[4613] = 5.03586935E+00;
  COFD[4614] = -3.81976071E-01;
  COFD[4615] = 1.42995069E-02;
  COFD[4616] = -2.21291632E+01;
  COFD[4617] = 5.02172689E+00;
  COFD[4618] = -3.79713172E-01;
  COFD[4619] = 1.41845745E-02;
  COFD[4620] = -2.19115752E+01;
  COFD[4621] = 4.89350049E+00;
  COFD[4622] = -3.59442064E-01;
  COFD[4623] = 1.31619214E-02;
  COFD[4624] = -2.18879484E+01;
  COFD[4625] = 4.87168366E+00;
  COFD[4626] = -3.55995797E-01;
  COFD[4627] = 1.29882292E-02;
  COFD[4628] = -2.14951419E+01;
  COFD[4629] = 4.62311744E+00;
  COFD[4630] = -3.16576672E-01;
  COFD[4631] = 1.09982058E-02;
  COFD[4632] = -2.14951419E+01;
  COFD[4633] = 4.62311744E+00;
  COFD[4634] = -3.16576672E-01;
  COFD[4635] = 1.09982058E-02;
  COFD[4636] = -2.14951419E+01;
  COFD[4637] = 4.62311744E+00;
  COFD[4638] = -3.16576672E-01;
  COFD[4639] = 1.09982058E-02;
  COFD[4640] = -2.15817963E+01;
  COFD[4641] = 4.66482266E+00;
  COFD[4642] = -3.23189752E-01;
  COFD[4643] = 1.13320181E-02;
  COFD[4644] = -2.14462502E+01;
  COFD[4645] = 4.58545934E+00;
  COFD[4646] = -3.10556391E-01;
  COFD[4647] = 1.06931834E-02;
  COFD[4648] = -2.14462502E+01;
  COFD[4649] = 4.58545934E+00;
  COFD[4650] = -3.10556391E-01;
  COFD[4651] = 1.06931834E-02;
  COFD[4652] = -2.10706574E+01;
  COFD[4653] = 4.36117214E+00;
  COFD[4654] = -2.75794091E-01;
  COFD[4655] = 8.96595975E-03;
  COFD[4656] = -2.12768078E+01;
  COFD[4657] = 4.48188359E+00;
  COFD[4658] = -2.94414571E-01;
  COFD[4659] = 9.88838906E-03;
  COFD[4660] = -1.83166409E+01;
  COFD[4661] = 4.42045763E+00;
  COFD[4662] = -3.59451578E-01;
  COFD[4663] = 1.56056164E-02;
  COFD[4664] = -2.15101026E+01;
  COFD[4665] = 4.62311744E+00;
  COFD[4666] = -3.16576672E-01;
  COFD[4667] = 1.09982058E-02;
  COFD[4668] = -1.79345106E+01;
  COFD[4669] = 4.91373893E+00;
  COFD[4670] = -4.18747629E-01;
  COFD[4671] = 1.79856610E-02;
  COFD[4672] = -1.72556425E+01;
  COFD[4673] = 4.17889917E+00;
  COFD[4674] = -3.29752510E-01;
  COFD[4675] = 1.43850275E-02;
  COFD[4676] = -1.72753698E+01;
  COFD[4677] = 4.17889917E+00;
  COFD[4678] = -3.29752510E-01;
  COFD[4679] = 1.43850275E-02;
  COFD[4680] = -1.86499019E+01;
  COFD[4681] = 4.53572533E+00;
  COFD[4682] = -3.73386925E-01;
  COFD[4683] = 1.61678881E-02;
  COFD[4684] = -1.39924933E+01;
  COFD[4685] = 3.26384506E+00;
  COFD[4686] = -2.12947087E-01;
  COFD[4687] = 9.39743888E-03;
  COFD[4688] = -2.12661812E+01;
  COFD[4689] = 5.24930667E+00;
  COFD[4690] = -4.17435088E-01;
  COFD[4691] = 1.61434424E-02;
  COFD[4692] = -1.86570161E+01;
  COFD[4693] = 4.53572533E+00;
  COFD[4694] = -3.73386925E-01;
  COFD[4695] = 1.61678881E-02;
  COFD[4696] = -1.86424488E+01;
  COFD[4697] = 4.53572533E+00;
  COFD[4698] = -3.73386925E-01;
  COFD[4699] = 1.61678881E-02;
  COFD[4700] = -1.95318159E+01;
  COFD[4701] = 4.90255048E+00;
  COFD[4702] = -4.17368501E-01;
  COFD[4703] = 1.79287358E-02;
  COFD[4704] = -1.95318159E+01;
  COFD[4705] = 4.90255048E+00;
  COFD[4706] = -4.17368501E-01;
  COFD[4707] = 1.79287358E-02;
  COFD[4708] = -1.95552136E+01;
  COFD[4709] = 4.90255048E+00;
  COFD[4710] = -4.17368501E-01;
  COFD[4711] = 1.79287358E-02;
  COFD[4712] = -1.94823661E+01;
  COFD[4713] = 4.87333294E+00;
  COFD[4714] = -4.13769241E-01;
  COFD[4715] = 1.77802244E-02;
  COFD[4716] = -2.19313596E+01;
  COFD[4717] = 5.41841631E+00;
  COFD[4718] = -4.46818971E-01;
  COFD[4719] = 1.77127652E-02;
  COFD[4720] = -2.19399756E+01;
  COFD[4721] = 5.41841631E+00;
  COFD[4722] = -4.46818971E-01;
  COFD[4723] = 1.77127652E-02;
  COFD[4724] = -2.21157308E+01;
  COFD[4725] = 5.55072945E+00;
  COFD[4726] = -4.72525345E-01;
  COFD[4727] = 1.91674202E-02;
  COFD[4728] = -1.83538331E+01;
  COFD[4729] = 4.42828044E+00;
  COFD[4730] = -3.60417833E-01;
  COFD[4731] = 1.56455103E-02;
  COFD[4732] = -2.14326420E+01;
  COFD[4733] = 5.41729961E+00;
  COFD[4734] = -4.73400281E-01;
  COFD[4735] = 1.99269567E-02;
  COFD[4736] = -2.10944068E+01;
  COFD[4737] = 5.34286099E+00;
  COFD[4738] = -4.68100992E-01;
  COFD[4739] = 1.98731399E-02;
  COFD[4740] = -2.11044949E+01;
  COFD[4741] = 5.34286099E+00;
  COFD[4742] = -4.68100992E-01;
  COFD[4743] = 1.98731399E-02;
  COFD[4744] = -2.18273535E+01;
  COFD[4745] = 5.55753905E+00;
  COFD[4746] = -4.88136714E-01;
  COFD[4747] = 2.04294957E-02;
  COFD[4748] = -2.15660162E+01;
  COFD[4749] = 5.44803850E+00;
  COFD[4750] = -4.76610560E-01;
  COFD[4751] = 2.00355294E-02;
  COFD[4752] = -2.15746130E+01;
  COFD[4753] = 5.44803850E+00;
  COFD[4754] = -4.76610560E-01;
  COFD[4755] = 2.00355294E-02;
  COFD[4756] = -2.22208668E+01;
  COFD[4757] = 5.51722375E+00;
  COFD[4758] = -4.66081431E-01;
  COFD[4759] = 1.88044011E-02;
  COFD[4760] = -2.19982906E+01;
  COFD[4761] = 5.51276597E+00;
  COFD[4762] = -4.83701824E-01;
  COFD[4763] = 2.02915297E-02;
  COFD[4764] = -2.20033786E+01;
  COFD[4765] = 5.51276597E+00;
  COFD[4766] = -4.83701824E-01;
  COFD[4767] = 2.02915297E-02;
  COFD[4768] = -2.20082773E+01;
  COFD[4769] = 5.51276597E+00;
  COFD[4770] = -4.83701824E-01;
  COFD[4771] = 2.02915297E-02;
  COFD[4772] = -2.25118138E+01;
  COFD[4773] = 5.58206320E+00;
  COFD[4774] = -4.82956809E-01;
  COFD[4775] = 1.98731634E-02;
  COFD[4776] = -2.25087692E+01;
  COFD[4777] = 5.58206320E+00;
  COFD[4778] = -4.82956809E-01;
  COFD[4779] = 1.98731634E-02;
  COFD[4780] = -2.25119507E+01;
  COFD[4781] = 5.58206320E+00;
  COFD[4782] = -4.82956809E-01;
  COFD[4783] = 1.98731634E-02;
  COFD[4784] = -2.25150392E+01;
  COFD[4785] = 5.58206320E+00;
  COFD[4786] = -4.82956809E-01;
  COFD[4787] = 1.98731634E-02;
  COFD[4788] = -2.26047176E+01;
  COFD[4789] = 5.50251732E+00;
  COFD[4790] = -4.62858785E-01;
  COFD[4791] = 1.86120573E-02;
  COFD[4792] = -2.26069007E+01;
  COFD[4793] = 5.50251732E+00;
  COFD[4794] = -4.62858785E-01;
  COFD[4795] = 1.86120573E-02;
  COFD[4796] = -2.26367984E+01;
  COFD[4797] = 5.49685743E+00;
  COFD[4798] = -4.61237933E-01;
  COFD[4799] = 1.85069626E-02;
  COFD[4800] = -2.25784310E+01;
  COFD[4801] = 5.40653540E+00;
  COFD[4802] = -4.44612351E-01;
  COFD[4803] = 1.75906515E-02;
  COFD[4804] = -2.25884003E+01;
  COFD[4805] = 5.39437835E+00;
  COFD[4806] = -4.42315066E-01;
  COFD[4807] = 1.74626754E-02;
  COFD[4808] = -2.24451961E+01;
  COFD[4809] = 5.27966625E+00;
  COFD[4810] = -4.22746172E-01;
  COFD[4811] = 1.64279811E-02;
  COFD[4812] = -2.24515029E+01;
  COFD[4813] = 5.26665057E+00;
  COFD[4814] = -4.20468031E-01;
  COFD[4815] = 1.63058218E-02;
  COFD[4816] = -2.23212614E+01;
  COFD[4817] = 5.16629594E+00;
  COFD[4818] = -4.03322392E-01;
  COFD[4819] = 1.53998221E-02;
  COFD[4820] = -2.23323572E+01;
  COFD[4821] = 5.15529711E+00;
  COFD[4822] = -4.01471911E-01;
  COFD[4823] = 1.53029101E-02;
  COFD[4824] = -2.21433222E+01;
  COFD[4825] = 5.03586935E+00;
  COFD[4826] = -3.81976071E-01;
  COFD[4827] = 1.42995069E-02;
  COFD[4828] = -2.21429975E+01;
  COFD[4829] = 5.02172689E+00;
  COFD[4830] = -3.79713172E-01;
  COFD[4831] = 1.41845745E-02;
  COFD[4832] = -2.19256559E+01;
  COFD[4833] = 4.89350049E+00;
  COFD[4834] = -3.59442064E-01;
  COFD[4835] = 1.31619214E-02;
  COFD[4836] = -2.19020466E+01;
  COFD[4837] = 4.87168366E+00;
  COFD[4838] = -3.55995797E-01;
  COFD[4839] = 1.29882292E-02;
  COFD[4840] = -2.15096562E+01;
  COFD[4841] = 4.62311744E+00;
  COFD[4842] = -3.16576672E-01;
  COFD[4843] = 1.09982058E-02;
  COFD[4844] = -2.15096562E+01;
  COFD[4845] = 4.62311744E+00;
  COFD[4846] = -3.16576672E-01;
  COFD[4847] = 1.09982058E-02;
  COFD[4848] = -2.15096562E+01;
  COFD[4849] = 4.62311744E+00;
  COFD[4850] = -3.16576672E-01;
  COFD[4851] = 1.09982058E-02;
  COFD[4852] = -2.15962977E+01;
  COFD[4853] = 4.66482266E+00;
  COFD[4854] = -3.23189752E-01;
  COFD[4855] = 1.13320181E-02;
  COFD[4856] = -2.14611157E+01;
  COFD[4857] = 4.58545934E+00;
  COFD[4858] = -3.10556391E-01;
  COFD[4859] = 1.06931834E-02;
  COFD[4860] = -2.14611157E+01;
  COFD[4861] = 4.58545934E+00;
  COFD[4862] = -3.10556391E-01;
  COFD[4863] = 1.06931834E-02;
  COFD[4864] = -2.10857885E+01;
  COFD[4865] = 4.36117214E+00;
  COFD[4866] = -2.75794091E-01;
  COFD[4867] = 8.96595975E-03;
  COFD[4868] = -2.12918063E+01;
  COFD[4869] = 4.48188359E+00;
  COFD[4870] = -2.94414571E-01;
  COFD[4871] = 9.88838906E-03;
  COFD[4872] = -1.83249359E+01;
  COFD[4873] = 4.42045763E+00;
  COFD[4874] = -3.59451578E-01;
  COFD[4875] = 1.56056164E-02;
  COFD[4876] = -1.78379202E+01;
  COFD[4877] = 2.81667592E+00;
  COFD[4878] = -4.44112417E-02;
  COFD[4879] = -2.24836515E-03;
  COFD[4880] = -1.94691588E+01;
  COFD[4881] = 5.43830787E+00;
  COFD[4882] = -4.75472880E-01;
  COFD[4883] = 1.99909996E-02;
  COFD[4884] = -1.90915553E+01;
  COFD[4885] = 4.84384483E+00;
  COFD[4886] = -4.10265575E-01;
  COFD[4887] = 1.76414287E-02;
  COFD[4888] = -1.91136407E+01;
  COFD[4889] = 4.84384483E+00;
  COFD[4890] = -4.10265575E-01;
  COFD[4891] = 1.76414287E-02;
  COFD[4892] = -2.05324009E+01;
  COFD[4893] = 5.18417470E+00;
  COFD[4894] = -4.49491573E-01;
  COFD[4895] = 1.91438508E-02;
  COFD[4896] = -1.57040365E+01;
  COFD[4897] = 3.93614244E+00;
  COFD[4898] = -2.99111497E-01;
  COFD[4899] = 1.30888229E-02;
  COFD[4900] = -1.87419126E+01;
  COFD[4901] = 3.96926341E+00;
  COFD[4902] = -2.16412264E-01;
  COFD[4903] = 6.06012078E-03;
  COFD[4904] = -2.05408587E+01;
  COFD[4905] = 5.18417470E+00;
  COFD[4906] = -4.49491573E-01;
  COFD[4907] = 1.91438508E-02;
  COFD[4908] = -2.05235643E+01;
  COFD[4909] = 5.18417470E+00;
  COFD[4910] = -4.49491573E-01;
  COFD[4911] = 1.91438508E-02;
  COFD[4912] = -2.11378438E+01;
  COFD[4913] = 5.42846112E+00;
  COFD[4914] = -4.74321870E-01;
  COFD[4915] = 1.99459749E-02;
  COFD[4916] = -2.11378438E+01;
  COFD[4917] = 5.42846112E+00;
  COFD[4918] = -4.74321870E-01;
  COFD[4919] = 1.99459749E-02;
  COFD[4920] = -2.11637883E+01;
  COFD[4921] = 5.42846112E+00;
  COFD[4922] = -4.74321870E-01;
  COFD[4923] = 1.99459749E-02;
  COFD[4924] = -2.11341641E+01;
  COFD[4925] = 5.41773516E+00;
  COFD[4926] = -4.73414338E-01;
  COFD[4927] = 1.99258685E-02;
  COFD[4928] = -2.00963017E+01;
  COFD[4929] = 4.41511629E+00;
  COFD[4930] = -2.84086963E-01;
  COFD[4931] = 9.37586971E-03;
  COFD[4932] = -2.01064300E+01;
  COFD[4933] = 4.41511629E+00;
  COFD[4934] = -2.84086963E-01;
  COFD[4935] = 9.37586971E-03;
  COFD[4936] = -2.09272370E+01;
  COFD[4937] = 4.82184721E+00;
  COFD[4938] = -3.48128875E-01;
  COFD[4939] = 1.25918978E-02;
  COFD[4940] = -2.02969667E+01;
  COFD[4941] = 5.11106992E+00;
  COFD[4942] = -4.42047129E-01;
  COFD[4943] = 1.89042990E-02;
  COFD[4944] = -2.22176875E+01;
  COFD[4945] = 5.54251230E+00;
  COFD[4946] = -4.70946314E-01;
  COFD[4947] = 1.90785869E-02;
  COFD[4948] = -2.21110249E+01;
  COFD[4949] = 5.58360799E+00;
  COFD[4950] = -4.82701436E-01;
  COFD[4951] = 1.98437922E-02;
  COFD[4952] = -2.21227731E+01;
  COFD[4953] = 5.58360799E+00;
  COFD[4954] = -4.82701436E-01;
  COFD[4955] = 1.98437922E-02;
  COFD[4956] = -2.20500773E+01;
  COFD[4957] = 5.44448440E+00;
  COFD[4958] = -4.51529024E-01;
  COFD[4959] = 1.79698119E-02;
  COFD[4960] = -2.22107598E+01;
  COFD[4961] = 5.51722375E+00;
  COFD[4962] = -4.66081431E-01;
  COFD[4963] = 1.88044011E-02;
  COFD[4964] = -2.22208668E+01;
  COFD[4965] = 5.51722375E+00;
  COFD[4966] = -4.66081431E-01;
  COFD[4967] = 1.88044011E-02;
  COFD[4968] = -2.09121160E+01;
  COFD[4969] = 4.72895031E+00;
  COFD[4970] = -3.33332771E-01;
  COFD[4971] = 1.18431478E-02;
  COFD[4972] = -2.24612680E+01;
  COFD[4973] = 5.49330641E+00;
  COFD[4974] = -4.60498247E-01;
  COFD[4975] = 1.84639199E-02;
  COFD[4976] = -2.24674347E+01;
  COFD[4977] = 5.49330641E+00;
  COFD[4978] = -4.60498247E-01;
  COFD[4979] = 1.84639199E-02;
  COFD[4980] = -2.24733846E+01;
  COFD[4981] = 5.49330641E+00;
  COFD[4982] = -4.60498247E-01;
  COFD[4983] = 1.84639199E-02;
  COFD[4984] = -2.20420791E+01;
  COFD[4985] = 5.14570932E+00;
  COFD[4986] = -3.99877142E-01;
  COFD[4987] = 1.52199557E-02;
  COFD[4988] = -2.20382941E+01;
  COFD[4989] = 5.14570932E+00;
  COFD[4990] = -3.99877142E-01;
  COFD[4991] = 1.52199557E-02;
  COFD[4992] = -2.20422494E+01;
  COFD[4993] = 5.14570932E+00;
  COFD[4994] = -3.99877142E-01;
  COFD[4995] = 1.52199557E-02;
  COFD[4996] = -2.20460949E+01;
  COFD[4997] = 5.14570932E+00;
  COFD[4998] = -3.99877142E-01;
  COFD[4999] = 1.52199557E-02;
  COFD[5000] = -2.12138975E+01;
  COFD[5001] = 4.66550450E+00;
  COFD[5002] = -3.23297137E-01;
  COFD[5003] = 1.13374150E-02;
  COFD[5004] = -2.12166627E+01;
  COFD[5005] = 4.66550450E+00;
  COFD[5006] = -3.23297137E-01;
  COFD[5007] = 1.13374150E-02;
  COFD[5008] = -2.11513700E+01;
  COFD[5009] = 4.61826518E+00;
  COFD[5010] = -3.15802915E-01;
  COFD[5011] = 1.09590086E-02;
  COFD[5012] = -2.07454253E+01;
  COFD[5013] = 4.37720767E+00;
  COFD[5014] = -2.78259024E-01;
  COFD[5015] = 9.08774918E-03;
  COFD[5016] = -2.06859264E+01;
  COFD[5017] = 4.33504652E+00;
  COFD[5018] = -2.71782834E-01;
  COFD[5019] = 8.76792120E-03;
  COFD[5020] = -2.01683835E+01;
  COFD[5021] = 4.06006798E+00;
  COFD[5022] = -2.30066357E-01;
  COFD[5023] = 6.72473245E-03;
  COFD[5024] = -2.01155328E+01;
  COFD[5025] = 4.02171524E+00;
  COFD[5026] = -2.24290198E-01;
  COFD[5027] = 6.44316390E-03;
  COFD[5028] = -1.97003035E+01;
  COFD[5029] = 3.79996103E+00;
  COFD[5030] = -1.90497694E-01;
  COFD[5031] = 4.78603172E-03;
  COFD[5032] = -1.96904509E+01;
  COFD[5033] = 3.77969775E+00;
  COFD[5034] = -1.87385896E-01;
  COFD[5035] = 4.63278252E-03;
  COFD[5036] = -1.92768391E+01;
  COFD[5037] = 3.56517881E+00;
  COFD[5038] = -1.54966016E-01;
  COFD[5039] = 3.05232702E-03;
  COFD[5040] = -1.92450104E+01;
  COFD[5041] = 3.53733698E+00;
  COFD[5042] = -1.50812570E-01;
  COFD[5043] = 2.85140727E-03;
  COFD[5044] = -1.88405662E+01;
  COFD[5045] = 3.33125761E+00;
  COFD[5046] = -1.20168824E-01;
  COFD[5047] = 1.37545815E-03;
  COFD[5048] = -1.87844881E+01;
  COFD[5049] = 3.29589989E+00;
  COFD[5050] = -1.14921439E-01;
  COFD[5051] = 1.12316566E-03;
  COFD[5052] = -1.78373202E+01;
  COFD[5053] = 2.81667592E+00;
  COFD[5054] = -4.44112417E-02;
  COFD[5055] = -2.24836515E-03;
  COFD[5056] = -1.78373202E+01;
  COFD[5057] = 2.81667592E+00;
  COFD[5058] = -4.44112417E-02;
  COFD[5059] = -2.24836515E-03;
  COFD[5060] = -1.78373202E+01;
  COFD[5061] = 2.81667592E+00;
  COFD[5062] = -4.44112417E-02;
  COFD[5063] = -2.24836515E-03;
  COFD[5064] = -1.80427104E+01;
  COFD[5065] = 2.90760528E+00;
  COFD[5066] = -5.77438179E-02;
  COFD[5067] = -1.61157463E-03;
  COFD[5068] = -1.76677009E+01;
  COFD[5069] = 2.72650149E+00;
  COFD[5070] = -3.11601195E-02;
  COFD[5071] = -2.88242823E-03;
  COFD[5072] = -1.76677009E+01;
  COFD[5073] = 2.72650149E+00;
  COFD[5074] = -3.11601195E-02;
  COFD[5075] = -2.88242823E-03;
  COFD[5076] = -1.70354634E+01;
  COFD[5077] = 2.39587658E+00;
  COFD[5078] = 1.76887928E-02;
  COFD[5079] = -5.22236064E-03;
  COFD[5080] = -1.73379092E+01;
  COFD[5081] = 2.55561949E+00;
  COFD[5082] = -5.90530207E-03;
  COFD[5083] = -4.09393782E-03;
  COFD[5084] = -2.02693704E+01;
  COFD[5085] = 5.10426133E+00;
  COFD[5086] = -4.41256919E-01;
  COFD[5087] = 1.88737290E-02;
  COFD[5088] = -2.15057005E+01;
  COFD[5089] = 4.49401210E+00;
  COFD[5090] = -2.96300228E-01;
  COFD[5091] = 9.98228772E-03;
  COFD[5092] = -1.83539845E+01;
  COFD[5093] = 4.98756925E+00;
  COFD[5094] = -4.27526072E-01;
  COFD[5095] = 1.83341755E-02;
  COFD[5096] = -1.76774947E+01;
  COFD[5097] = 4.24719726E+00;
  COFD[5098] = -3.38206061E-01;
  COFD[5099] = 1.47350654E-02;
  COFD[5100] = -1.76992903E+01;
  COFD[5101] = 4.24719726E+00;
  COFD[5102] = -3.38206061E-01;
  COFD[5103] = 1.47350654E-02;
  COFD[5104] = -1.91208247E+01;
  COFD[5105] = 4.61801405E+00;
  COFD[5106] = -3.83535652E-01;
  COFD[5107] = 1.65862513E-02;
  COFD[5108] = -1.43129867E+01;
  COFD[5109] = 3.31177824E+00;
  COFD[5110] = -2.18945280E-01;
  COFD[5111] = 9.64764419E-03;
  COFD[5112] = -2.13847376E+01;
  COFD[5113] = 5.17440955E+00;
  COFD[5114] = -4.04678430E-01;
  COFD[5115] = 1.54706350E-02;
  COFD[5116] = -1.91291085E+01;
  COFD[5117] = 4.61801405E+00;
  COFD[5118] = -3.83535652E-01;
  COFD[5119] = 1.65862513E-02;
  COFD[5120] = -1.91121670E+01;
  COFD[5121] = 4.61801405E+00;
  COFD[5122] = -3.83535652E-01;
  COFD[5123] = 1.65862513E-02;
  COFD[5124] = -1.99547139E+01;
  COFD[5125] = 4.97875278E+00;
  COFD[5126] = -4.26485475E-01;
  COFD[5127] = 1.82931933E-02;
  COFD[5128] = -1.99547139E+01;
  COFD[5129] = 4.97875278E+00;
  COFD[5130] = -4.26485475E-01;
  COFD[5131] = 1.82931933E-02;
  COFD[5132] = -1.99803480E+01;
  COFD[5133] = 4.97875278E+00;
  COFD[5134] = -4.26485475E-01;
  COFD[5135] = 1.82931933E-02;
  COFD[5136] = -1.99235836E+01;
  COFD[5137] = 4.95514826E+00;
  COFD[5138] = -4.23691395E-01;
  COFD[5139] = 1.81828318E-02;
  COFD[5140] = -2.20848512E+01;
  COFD[5141] = 5.36053938E+00;
  COFD[5142] = -4.36434519E-01;
  COFD[5143] = 1.71484255E-02;
  COFD[5144] = -2.20947854E+01;
  COFD[5145] = 5.36053938E+00;
  COFD[5146] = -4.36434519E-01;
  COFD[5147] = 1.71484255E-02;
  COFD[5148] = -2.23054103E+01;
  COFD[5149] = 5.50872500E+00;
  COFD[5150] = -4.64427323E-01;
  COFD[5151] = 1.87105612E-02;
  COFD[5152] = -1.87684982E+01;
  COFD[5153] = 4.49191492E+00;
  COFD[5154] = -3.68041771E-01;
  COFD[5155] = 1.59498676E-02;
  COFD[5156] = -2.18590684E+01;
  COFD[5157] = 5.47368915E+00;
  COFD[5158] = -4.79424291E-01;
  COFD[5159] = 2.01372920E-02;
  COFD[5160] = -2.14323161E+01;
  COFD[5161] = 5.37331605E+00;
  COFD[5162] = -4.70491203E-01;
  COFD[5163] = 1.99134666E-02;
  COFD[5164] = -2.14438531E+01;
  COFD[5165] = 5.37331605E+00;
  COFD[5166] = -4.70491203E-01;
  COFD[5167] = 1.99134666E-02;
  COFD[5168] = -2.21885121E+01;
  COFD[5169] = 5.59472344E+00;
  COFD[5170] = -4.91421518E-01;
  COFD[5171] = 2.05117088E-02;
  COFD[5172] = -2.19883773E+01;
  COFD[5173] = 5.51276597E+00;
  COFD[5174] = -4.83701824E-01;
  COFD[5175] = 2.02915297E-02;
  COFD[5176] = -2.19982906E+01;
  COFD[5177] = 5.51276597E+00;
  COFD[5178] = -4.83701824E-01;
  COFD[5179] = 2.02915297E-02;
  COFD[5180] = -2.24612680E+01;
  COFD[5181] = 5.49330641E+00;
  COFD[5182] = -4.60498247E-01;
  COFD[5183] = 1.84639199E-02;
  COFD[5184] = -2.23842793E+01;
  COFD[5185] = 5.56066804E+00;
  COFD[5186] = -4.88405706E-01;
  COFD[5187] = 2.04357330E-02;
  COFD[5188] = -2.23903039E+01;
  COFD[5189] = 5.56066804E+00;
  COFD[5190] = -4.88405706E-01;
  COFD[5191] = 2.04357330E-02;
  COFD[5192] = -2.23961150E+01;
  COFD[5193] = 5.56066804E+00;
  COFD[5194] = -4.88405706E-01;
  COFD[5195] = 2.04357330E-02;
  COFD[5196] = -2.28055286E+01;
  COFD[5197] = 5.58523510E+00;
  COFD[5198] = -4.81201481E-01;
  COFD[5199] = 1.97107111E-02;
  COFD[5200] = -2.28018434E+01;
  COFD[5201] = 5.58523510E+00;
  COFD[5202] = -4.81201481E-01;
  COFD[5203] = 1.97107111E-02;
  COFD[5204] = -2.28056945E+01;
  COFD[5205] = 5.58523510E+00;
  COFD[5206] = -4.81201481E-01;
  COFD[5207] = 1.97107111E-02;
  COFD[5208] = -2.28094379E+01;
  COFD[5209] = 5.58523510E+00;
  COFD[5210] = -4.81201481E-01;
  COFD[5211] = 1.97107111E-02;
  COFD[5212] = -2.28142710E+01;
  COFD[5213] = 5.46711245E+00;
  COFD[5214] = -4.55648352E-01;
  COFD[5215] = 1.81956544E-02;
  COFD[5216] = -2.28169566E+01;
  COFD[5217] = 5.46711245E+00;
  COFD[5218] = -4.55648352E-01;
  COFD[5219] = 1.81956544E-02;
  COFD[5220] = -2.28106743E+01;
  COFD[5221] = 5.44605759E+00;
  COFD[5222] = -4.51812605E-01;
  COFD[5223] = 1.79852826E-02;
  COFD[5224] = -2.27264067E+01;
  COFD[5225] = 5.34358207E+00;
  COFD[5226] = -4.33525531E-01;
  COFD[5227] = 1.69942087E-02;
  COFD[5228] = -2.27195890E+01;
  COFD[5229] = 5.32470889E+00;
  COFD[5230] = -4.30280059E-01;
  COFD[5231] = 1.68219189E-02;
  COFD[5232] = -2.25883284E+01;
  COFD[5233] = 5.21373152E+00;
  COFD[5234] = -4.11240905E-01;
  COFD[5235] = 1.58129026E-02;
  COFD[5236] = -2.25890090E+01;
  COFD[5237] = 5.19903697E+00;
  COFD[5238] = -4.08754051E-01;
  COFD[5239] = 1.56823434E-02;
  COFD[5240] = -2.23956511E+01;
  COFD[5241] = 5.07018801E+00;
  COFD[5242] = -3.87535402E-01;
  COFD[5243] = 1.45842225E-02;
  COFD[5244] = -2.23984037E+01;
  COFD[5245] = 5.05627343E+00;
  COFD[5246] = -3.85275813E-01;
  COFD[5247] = 1.44683417E-02;
  COFD[5248] = -2.21481001E+01;
  COFD[5249] = 4.91019065E+00;
  COFD[5250] = -3.62076012E-01;
  COFD[5251] = 1.32946182E-02;
  COFD[5252] = -2.21417169E+01;
  COFD[5253] = 4.89399517E+00;
  COFD[5254] = -3.59520327E-01;
  COFD[5255] = 1.31658681E-02;
  COFD[5256] = -2.19360355E+01;
  COFD[5257] = 4.77045497E+00;
  COFD[5258] = -3.39955491E-01;
  COFD[5259] = 1.21784372E-02;
  COFD[5260] = -2.19203831E+01;
  COFD[5261] = 4.75243834E+00;
  COFD[5262] = -3.37056985E-01;
  COFD[5263] = 1.20310677E-02;
  COFD[5264] = -2.15051226E+01;
  COFD[5265] = 4.49401210E+00;
  COFD[5266] = -2.96300228E-01;
  COFD[5267] = 9.98228772E-03;
  COFD[5268] = -2.15051226E+01;
  COFD[5269] = 4.49401210E+00;
  COFD[5270] = -2.96300228E-01;
  COFD[5271] = 9.98228772E-03;
  COFD[5272] = -2.15051226E+01;
  COFD[5273] = 4.49401210E+00;
  COFD[5274] = -2.96300228E-01;
  COFD[5275] = 9.98228772E-03;
  COFD[5276] = -2.16062590E+01;
  COFD[5277] = 4.54192945E+00;
  COFD[5278] = -3.03755204E-01;
  COFD[5279] = 1.03536977E-02;
  COFD[5280] = -2.14350667E+01;
  COFD[5281] = 4.44599921E+00;
  COFD[5282] = -2.88841525E-01;
  COFD[5283] = 9.61119142E-03;
  COFD[5284] = -2.14350667E+01;
  COFD[5285] = 4.44599921E+00;
  COFD[5286] = -2.88841525E-01;
  COFD[5287] = 9.61119142E-03;
  COFD[5288] = -2.09896632E+01;
  COFD[5289] = 4.19291197E+00;
  COFD[5290] = -2.50134311E-01;
  COFD[5291] = 7.70504712E-03;
  COFD[5292] = -2.12290046E+01;
  COFD[5293] = 4.32707381E+00;
  COFD[5294] = -2.70563830E-01;
  COFD[5295] = 8.70791456E-03;
  COFD[5296] = -1.87434421E+01;
  COFD[5297] = 4.48550694E+00;
  COFD[5298] = -3.67277454E-01;
  COFD[5299] = 1.59194755E-02;
  COFD[5300] = -2.15154449E+01;
  COFD[5301] = 4.49401210E+00;
  COFD[5302] = -2.96300228E-01;
  COFD[5303] = 9.98228772E-03;
  COFD[5304] = -1.83542714E+01;
  COFD[5305] = 4.98756925E+00;
  COFD[5306] = -4.27526072E-01;
  COFD[5307] = 1.83341755E-02;
  COFD[5308] = -1.76808635E+01;
  COFD[5309] = 4.24719726E+00;
  COFD[5310] = -3.38206061E-01;
  COFD[5311] = 1.47350654E-02;
  COFD[5312] = -1.77028097E+01;
  COFD[5313] = 4.24719726E+00;
  COFD[5314] = -3.38206061E-01;
  COFD[5315] = 1.47350654E-02;
  COFD[5316] = -1.91261897E+01;
  COFD[5317] = 4.61801405E+00;
  COFD[5318] = -3.83535652E-01;
  COFD[5319] = 1.65862513E-02;
  COFD[5320] = -1.43135474E+01;
  COFD[5321] = 3.31177824E+00;
  COFD[5322] = -2.18945280E-01;
  COFD[5323] = 9.64764419E-03;
  COFD[5324] = -2.13884026E+01;
  COFD[5325] = 5.17440955E+00;
  COFD[5326] = -4.04678430E-01;
  COFD[5327] = 1.54706350E-02;
  COFD[5328] = -1.91345636E+01;
  COFD[5329] = 4.61801405E+00;
  COFD[5330] = -3.83535652E-01;
  COFD[5331] = 1.65862513E-02;
  COFD[5332] = -1.91174394E+01;
  COFD[5333] = 4.61801405E+00;
  COFD[5334] = -3.83535652E-01;
  COFD[5335] = 1.65862513E-02;
  COFD[5336] = -1.99577723E+01;
  COFD[5337] = 4.97875278E+00;
  COFD[5338] = -4.26485475E-01;
  COFD[5339] = 1.82931933E-02;
  COFD[5340] = -1.99577723E+01;
  COFD[5341] = 4.97875278E+00;
  COFD[5342] = -4.26485475E-01;
  COFD[5343] = 1.82931933E-02;
  COFD[5344] = -1.99835677E+01;
  COFD[5345] = 4.97875278E+00;
  COFD[5346] = -4.26485475E-01;
  COFD[5347] = 1.82931933E-02;
  COFD[5348] = -1.99269591E+01;
  COFD[5349] = 4.95514826E+00;
  COFD[5350] = -4.23691395E-01;
  COFD[5351] = 1.81828318E-02;
  COFD[5352] = -2.20898344E+01;
  COFD[5353] = 5.36053938E+00;
  COFD[5354] = -4.36434519E-01;
  COFD[5355] = 1.71484255E-02;
  COFD[5356] = -2.20998692E+01;
  COFD[5357] = 5.36053938E+00;
  COFD[5358] = -4.36434519E-01;
  COFD[5359] = 1.71484255E-02;
  COFD[5360] = -2.23105918E+01;
  COFD[5361] = 5.50872500E+00;
  COFD[5362] = -4.64427323E-01;
  COFD[5363] = 1.87105612E-02;
  COFD[5364] = -1.87733780E+01;
  COFD[5365] = 4.49191492E+00;
  COFD[5366] = -3.68041771E-01;
  COFD[5367] = 1.59498676E-02;
  COFD[5368] = -2.18653022E+01;
  COFD[5369] = 5.47368915E+00;
  COFD[5370] = -4.79424291E-01;
  COFD[5371] = 2.01372920E-02;
  COFD[5372] = -2.14369847E+01;
  COFD[5373] = 5.37331605E+00;
  COFD[5374] = -4.70491203E-01;
  COFD[5375] = 1.99134666E-02;
  COFD[5376] = -2.14486311E+01;
  COFD[5377] = 5.37331605E+00;
  COFD[5378] = -4.70491203E-01;
  COFD[5379] = 1.99134666E-02;
  COFD[5380] = -2.21933965E+01;
  COFD[5381] = 5.59472344E+00;
  COFD[5382] = -4.91421518E-01;
  COFD[5383] = 2.05117088E-02;
  COFD[5384] = -2.19933650E+01;
  COFD[5385] = 5.51276597E+00;
  COFD[5386] = -4.83701824E-01;
  COFD[5387] = 2.02915297E-02;
  COFD[5388] = -2.20033786E+01;
  COFD[5389] = 5.51276597E+00;
  COFD[5390] = -4.83701824E-01;
  COFD[5391] = 2.02915297E-02;
  COFD[5392] = -2.24674347E+01;
  COFD[5393] = 5.49330641E+00;
  COFD[5394] = -4.60498247E-01;
  COFD[5395] = 1.84639199E-02;
  COFD[5396] = -2.23903039E+01;
  COFD[5397] = 5.56066804E+00;
  COFD[5398] = -4.88405706E-01;
  COFD[5399] = 2.04357330E-02;
  COFD[5400] = -2.23964020E+01;
  COFD[5401] = 5.56066804E+00;
  COFD[5402] = -4.88405706E-01;
  COFD[5403] = 2.04357330E-02;
  COFD[5404] = -2.24022848E+01;
  COFD[5405] = 5.56066804E+00;
  COFD[5406] = -4.88405706E-01;
  COFD[5407] = 2.04357330E-02;
  COFD[5408] = -2.28124895E+01;
  COFD[5409] = 5.58523510E+00;
  COFD[5410] = -4.81201481E-01;
  COFD[5411] = 1.97107111E-02;
  COFD[5412] = -2.28087528E+01;
  COFD[5413] = 5.58523510E+00;
  COFD[5414] = -4.81201481E-01;
  COFD[5415] = 1.97107111E-02;
  COFD[5416] = -2.28126577E+01;
  COFD[5417] = 5.58523510E+00;
  COFD[5418] = -4.81201481E-01;
  COFD[5419] = 1.97107111E-02;
  COFD[5420] = -2.28164538E+01;
  COFD[5421] = 5.58523510E+00;
  COFD[5422] = -4.81201481E-01;
  COFD[5423] = 1.97107111E-02;
  COFD[5424] = -2.28218410E+01;
  COFD[5425] = 5.46711245E+00;
  COFD[5426] = -4.55648352E-01;
  COFD[5427] = 1.81956544E-02;
  COFD[5428] = -2.28245676E+01;
  COFD[5429] = 5.46711245E+00;
  COFD[5430] = -4.55648352E-01;
  COFD[5431] = 1.81956544E-02;
  COFD[5432] = -2.28183257E+01;
  COFD[5433] = 5.44605759E+00;
  COFD[5434] = -4.51812605E-01;
  COFD[5435] = 1.79852826E-02;
  COFD[5436] = -2.27345210E+01;
  COFD[5437] = 5.34358207E+00;
  COFD[5438] = -4.33525531E-01;
  COFD[5439] = 1.69942087E-02;
  COFD[5440] = -2.27277353E+01;
  COFD[5441] = 5.32470889E+00;
  COFD[5442] = -4.30280059E-01;
  COFD[5443] = 1.68219189E-02;
  COFD[5444] = -2.25968450E+01;
  COFD[5445] = 5.21373152E+00;
  COFD[5446] = -4.11240905E-01;
  COFD[5447] = 1.58129026E-02;
  COFD[5448] = -2.25975515E+01;
  COFD[5449] = 5.19903697E+00;
  COFD[5450] = -4.08754051E-01;
  COFD[5451] = 1.56823434E-02;
  COFD[5452] = -2.24044966E+01;
  COFD[5453] = 5.07018801E+00;
  COFD[5454] = -3.87535402E-01;
  COFD[5455] = 1.45842225E-02;
  COFD[5456] = -2.24072705E+01;
  COFD[5457] = 5.05627343E+00;
  COFD[5458] = -3.85275813E-01;
  COFD[5459] = 1.44683417E-02;
  COFD[5460] = -2.21572195E+01;
  COFD[5461] = 4.91019065E+00;
  COFD[5462] = -3.62076012E-01;
  COFD[5463] = 1.32946182E-02;
  COFD[5464] = -2.21508543E+01;
  COFD[5465] = 4.89399517E+00;
  COFD[5466] = -3.59520327E-01;
  COFD[5467] = 1.31658681E-02;
  COFD[5468] = -2.19453866E+01;
  COFD[5469] = 4.77045497E+00;
  COFD[5470] = -3.39955491E-01;
  COFD[5471] = 1.21784372E-02;
  COFD[5472] = -2.19297495E+01;
  COFD[5473] = 4.75243834E+00;
  COFD[5474] = -3.37056985E-01;
  COFD[5475] = 1.20310677E-02;
  COFD[5476] = -2.15148556E+01;
  COFD[5477] = 4.49401210E+00;
  COFD[5478] = -2.96300228E-01;
  COFD[5479] = 9.98228772E-03;
  COFD[5480] = -2.15148556E+01;
  COFD[5481] = 4.49401210E+00;
  COFD[5482] = -2.96300228E-01;
  COFD[5483] = 9.98228772E-03;
  COFD[5484] = -2.15148556E+01;
  COFD[5485] = 4.49401210E+00;
  COFD[5486] = -2.96300228E-01;
  COFD[5487] = 9.98228772E-03;
  COFD[5488] = -2.16159805E+01;
  COFD[5489] = 4.54192945E+00;
  COFD[5490] = -3.03755204E-01;
  COFD[5491] = 1.03536977E-02;
  COFD[5492] = -2.14451145E+01;
  COFD[5493] = 4.44599921E+00;
  COFD[5494] = -2.88841525E-01;
  COFD[5495] = 9.61119142E-03;
  COFD[5496] = -2.14451145E+01;
  COFD[5497] = 4.44599921E+00;
  COFD[5498] = -2.88841525E-01;
  COFD[5499] = 9.61119142E-03;
  COFD[5500] = -2.09999525E+01;
  COFD[5501] = 4.19291197E+00;
  COFD[5502] = -2.50134311E-01;
  COFD[5503] = 7.70504712E-03;
  COFD[5504] = -2.12391730E+01;
  COFD[5505] = 4.32707381E+00;
  COFD[5506] = -2.70563830E-01;
  COFD[5507] = 8.70791456E-03;
  COFD[5508] = -1.87483223E+01;
  COFD[5509] = 4.48550694E+00;
  COFD[5510] = -3.67277454E-01;
  COFD[5511] = 1.59194755E-02;
  COFD[5512] = -2.15249135E+01;
  COFD[5513] = 4.49401210E+00;
  COFD[5514] = -2.96300228E-01;
  COFD[5515] = 9.98228772E-03;
  COFD[5516] = -1.83545451E+01;
  COFD[5517] = 4.98756925E+00;
  COFD[5518] = -4.27526072E-01;
  COFD[5519] = 1.83341755E-02;
  COFD[5520] = -1.76840960E+01;
  COFD[5521] = 4.24719726E+00;
  COFD[5522] = -3.38206061E-01;
  COFD[5523] = 1.47350654E-02;
  COFD[5524] = -1.77061877E+01;
  COFD[5525] = 4.24719726E+00;
  COFD[5526] = -3.38206061E-01;
  COFD[5527] = 1.47350654E-02;
  COFD[5528] = -1.91313579E+01;
  COFD[5529] = 4.61801405E+00;
  COFD[5530] = -3.83535652E-01;
  COFD[5531] = 1.65862513E-02;
  COFD[5532] = -1.43140824E+01;
  COFD[5533] = 3.31177824E+00;
  COFD[5534] = -2.18945280E-01;
  COFD[5535] = 9.64764419E-03;
  COFD[5536] = -2.13919213E+01;
  COFD[5537] = 5.17440955E+00;
  COFD[5538] = -4.04678430E-01;
  COFD[5539] = 1.54706350E-02;
  COFD[5540] = -1.91398195E+01;
  COFD[5541] = 4.61801405E+00;
  COFD[5542] = -3.83535652E-01;
  COFD[5543] = 1.65862513E-02;
  COFD[5544] = -1.91225175E+01;
  COFD[5545] = 4.61801405E+00;
  COFD[5546] = -3.83535652E-01;
  COFD[5547] = 1.65862513E-02;
  COFD[5548] = -1.99607050E+01;
  COFD[5549] = 4.97875278E+00;
  COFD[5550] = -4.26485475E-01;
  COFD[5551] = 1.82931933E-02;
  COFD[5552] = -1.99607050E+01;
  COFD[5553] = 4.97875278E+00;
  COFD[5554] = -4.26485475E-01;
  COFD[5555] = 1.82931933E-02;
  COFD[5556] = -1.99866562E+01;
  COFD[5557] = 4.97875278E+00;
  COFD[5558] = -4.26485475E-01;
  COFD[5559] = 1.82931933E-02;
  COFD[5560] = -1.99301980E+01;
  COFD[5561] = 4.95514826E+00;
  COFD[5562] = -4.23691395E-01;
  COFD[5563] = 1.81828318E-02;
  COFD[5564] = -2.20946312E+01;
  COFD[5565] = 5.36053938E+00;
  COFD[5566] = -4.36434519E-01;
  COFD[5567] = 1.71484255E-02;
  COFD[5568] = -2.21047637E+01;
  COFD[5569] = 5.36053938E+00;
  COFD[5570] = -4.36434519E-01;
  COFD[5571] = 1.71484255E-02;
  COFD[5572] = -2.23155813E+01;
  COFD[5573] = 5.50872500E+00;
  COFD[5574] = -4.64427323E-01;
  COFD[5575] = 1.87105612E-02;
  COFD[5576] = -1.87780743E+01;
  COFD[5577] = 4.49191492E+00;
  COFD[5578] = -3.68041771E-01;
  COFD[5579] = 1.59498676E-02;
  COFD[5580] = -2.18713176E+01;
  COFD[5581] = 5.47368915E+00;
  COFD[5582] = -4.79424291E-01;
  COFD[5583] = 2.01372920E-02;
  COFD[5584] = -2.14414758E+01;
  COFD[5585] = 5.37331605E+00;
  COFD[5586] = -4.70491203E-01;
  COFD[5587] = 1.99134666E-02;
  COFD[5588] = -2.14532286E+01;
  COFD[5589] = 5.37331605E+00;
  COFD[5590] = -4.70491203E-01;
  COFD[5591] = 1.99134666E-02;
  COFD[5592] = -2.21980972E+01;
  COFD[5593] = 5.59472344E+00;
  COFD[5594] = -4.91421518E-01;
  COFD[5595] = 2.05117088E-02;
  COFD[5596] = -2.19981661E+01;
  COFD[5597] = 5.51276597E+00;
  COFD[5598] = -4.83701824E-01;
  COFD[5599] = 2.02915297E-02;
  COFD[5600] = -2.20082773E+01;
  COFD[5601] = 5.51276597E+00;
  COFD[5602] = -4.83701824E-01;
  COFD[5603] = 2.02915297E-02;
  COFD[5604] = -2.24733846E+01;
  COFD[5605] = 5.49330641E+00;
  COFD[5606] = -4.60498247E-01;
  COFD[5607] = 1.84639199E-02;
  COFD[5608] = -2.23961150E+01;
  COFD[5609] = 5.56066804E+00;
  COFD[5610] = -4.88405706E-01;
  COFD[5611] = 2.04357330E-02;
  COFD[5612] = -2.24022848E+01;
  COFD[5613] = 5.56066804E+00;
  COFD[5614] = -4.88405706E-01;
  COFD[5615] = 2.04357330E-02;
  COFD[5616] = -2.24082377E+01;
  COFD[5617] = 5.56066804E+00;
  COFD[5618] = -4.88405706E-01;
  COFD[5619] = 2.04357330E-02;
  COFD[5620] = -2.28192161E+01;
  COFD[5621] = 5.58523510E+00;
  COFD[5622] = -4.81201481E-01;
  COFD[5623] = 1.97107111E-02;
  COFD[5624] = -2.28154290E+01;
  COFD[5625] = 5.58523510E+00;
  COFD[5626] = -4.81201481E-01;
  COFD[5627] = 1.97107111E-02;
  COFD[5628] = -2.28193866E+01;
  COFD[5629] = 5.58523510E+00;
  COFD[5630] = -4.81201481E-01;
  COFD[5631] = 1.97107111E-02;
  COFD[5632] = -2.28232344E+01;
  COFD[5633] = 5.58523510E+00;
  COFD[5634] = -4.81201481E-01;
  COFD[5635] = 1.97107111E-02;
  COFD[5636] = -2.28291650E+01;
  COFD[5637] = 5.46711245E+00;
  COFD[5638] = -4.55648352E-01;
  COFD[5639] = 1.81956544E-02;
  COFD[5640] = -2.28319320E+01;
  COFD[5641] = 5.46711245E+00;
  COFD[5642] = -4.55648352E-01;
  COFD[5643] = 1.81956544E-02;
  COFD[5644] = -2.28257297E+01;
  COFD[5645] = 5.44605759E+00;
  COFD[5646] = -4.51812605E-01;
  COFD[5647] = 1.79852826E-02;
  COFD[5648] = -2.27423803E+01;
  COFD[5649] = 5.34358207E+00;
  COFD[5650] = -4.33525531E-01;
  COFD[5651] = 1.69942087E-02;
  COFD[5652] = -2.27356259E+01;
  COFD[5653] = 5.32470889E+00;
  COFD[5654] = -4.30280059E-01;
  COFD[5655] = 1.68219189E-02;
  COFD[5656] = -2.26051005E+01;
  COFD[5657] = 5.21373152E+00;
  COFD[5658] = -4.11240905E-01;
  COFD[5659] = 1.58129026E-02;
  COFD[5660] = -2.26058324E+01;
  COFD[5661] = 5.19903697E+00;
  COFD[5662] = -4.08754051E-01;
  COFD[5663] = 1.56823434E-02;
  COFD[5664] = -2.24130765E+01;
  COFD[5665] = 5.07018801E+00;
  COFD[5666] = -3.87535402E-01;
  COFD[5667] = 1.45842225E-02;
  COFD[5668] = -2.24158715E+01;
  COFD[5669] = 5.05627343E+00;
  COFD[5670] = -3.85275813E-01;
  COFD[5671] = 1.44683417E-02;
  COFD[5672] = -2.21660700E+01;
  COFD[5673] = 4.91019065E+00;
  COFD[5674] = -3.62076012E-01;
  COFD[5675] = 1.32946182E-02;
  COFD[5676] = -2.21597225E+01;
  COFD[5677] = 4.89399517E+00;
  COFD[5678] = -3.59520327E-01;
  COFD[5679] = 1.31658681E-02;
  COFD[5680] = -2.19544660E+01;
  COFD[5681] = 4.77045497E+00;
  COFD[5682] = -3.39955491E-01;
  COFD[5683] = 1.21784372E-02;
  COFD[5684] = -2.19388440E+01;
  COFD[5685] = 4.75243834E+00;
  COFD[5686] = -3.37056985E-01;
  COFD[5687] = 1.20310677E-02;
  COFD[5688] = -2.15243130E+01;
  COFD[5689] = 4.49401210E+00;
  COFD[5690] = -2.96300228E-01;
  COFD[5691] = 9.98228772E-03;
  COFD[5692] = -2.15243130E+01;
  COFD[5693] = 4.49401210E+00;
  COFD[5694] = -2.96300228E-01;
  COFD[5695] = 9.98228772E-03;
  COFD[5696] = -2.15243130E+01;
  COFD[5697] = 4.49401210E+00;
  COFD[5698] = -2.96300228E-01;
  COFD[5699] = 9.98228772E-03;
  COFD[5700] = -2.16254266E+01;
  COFD[5701] = 4.54192945E+00;
  COFD[5702] = -3.03755204E-01;
  COFD[5703] = 1.03536977E-02;
  COFD[5704] = -2.14548839E+01;
  COFD[5705] = 4.44599921E+00;
  COFD[5706] = -2.88841525E-01;
  COFD[5707] = 9.61119142E-03;
  COFD[5708] = -2.14548839E+01;
  COFD[5709] = 4.44599921E+00;
  COFD[5710] = -2.88841525E-01;
  COFD[5711] = 9.61119142E-03;
  COFD[5712] = -2.10099615E+01;
  COFD[5713] = 4.19291197E+00;
  COFD[5714] = -2.50134311E-01;
  COFD[5715] = 7.70504712E-03;
  COFD[5716] = -2.12490621E+01;
  COFD[5717] = 4.32707381E+00;
  COFD[5718] = -2.70563830E-01;
  COFD[5719] = 8.70791456E-03;
  COFD[5720] = -1.87530190E+01;
  COFD[5721] = 4.48550694E+00;
  COFD[5722] = -3.67277454E-01;
  COFD[5723] = 1.59194755E-02;
  COFD[5724] = -1.98610330E+01;
  COFD[5725] = 3.61510430E+00;
  COFD[5726] = -1.62429647E-01;
  COFD[5727] = 3.41379096E-03;
  COFD[5728] = -1.94091246E+01;
  COFD[5729] = 5.32291505E+00;
  COFD[5730] = -4.65883522E-01;
  COFD[5731] = 1.97916109E-02;
  COFD[5732] = -1.87877888E+01;
  COFD[5733] = 4.61260432E+00;
  COFD[5734] = -3.82854484E-01;
  COFD[5735] = 1.65575163E-02;
  COFD[5736] = -1.88113928E+01;
  COFD[5737] = 4.61260432E+00;
  COFD[5738] = -3.82854484E-01;
  COFD[5739] = 1.65575163E-02;
  COFD[5740] = -2.02564700E+01;
  COFD[5741] = 4.97613338E+00;
  COFD[5742] = -4.26175206E-01;
  COFD[5743] = 1.82809270E-02;
  COFD[5744] = -1.52614209E+01;
  COFD[5745] = 3.64565939E+00;
  COFD[5746] = -2.61726871E-01;
  COFD[5747] = 1.14799244E-02;
  COFD[5748] = -2.03436817E+01;
  COFD[5749] = 4.57152878E+00;
  COFD[5750] = -3.08371263E-01;
  COFD[5751] = 1.05838559E-02;
  COFD[5752] = -2.02658847E+01;
  COFD[5753] = 4.97613338E+00;
  COFD[5754] = -4.26175206E-01;
  COFD[5755] = 1.82809270E-02;
  COFD[5756] = -2.02466527E+01;
  COFD[5757] = 4.97613338E+00;
  COFD[5758] = -4.26175206E-01;
  COFD[5759] = 1.82809270E-02;
  COFD[5760] = -2.10296107E+01;
  COFD[5761] = 5.31360223E+00;
  COFD[5762] = -4.64787000E-01;
  COFD[5763] = 1.97483720E-02;
  COFD[5764] = -2.10296107E+01;
  COFD[5765] = 5.31360223E+00;
  COFD[5766] = -4.64787000E-01;
  COFD[5767] = 1.97483720E-02;
  COFD[5768] = -2.10571697E+01;
  COFD[5769] = 5.31360223E+00;
  COFD[5770] = -4.64787000E-01;
  COFD[5771] = 1.97483720E-02;
  COFD[5772] = -2.09912117E+01;
  COFD[5773] = 5.28557747E+00;
  COFD[5774] = -4.61402384E-01;
  COFD[5775] = 1.96111546E-02;
  COFD[5776] = -2.13239371E+01;
  COFD[5777] = 4.87252053E+00;
  COFD[5778] = -3.56127804E-01;
  COFD[5779] = 1.29948788E-02;
  COFD[5780] = -2.13351219E+01;
  COFD[5781] = 4.87252053E+00;
  COFD[5782] = -3.56127804E-01;
  COFD[5783] = 1.29948788E-02;
  COFD[5784] = -2.19971729E+01;
  COFD[5785] = 5.21365421E+00;
  COFD[5786] = -4.11227771E-01;
  COFD[5787] = 1.58122118E-02;
  COFD[5788] = -1.98830863E+01;
  COFD[5789] = 4.84731557E+00;
  COFD[5790] = -4.10638352E-01;
  COFD[5791] = 1.76543886E-02;
  COFD[5792] = -2.25016971E+01;
  COFD[5793] = 5.59178974E+00;
  COFD[5794] = -4.85668031E-01;
  COFD[5795] = 2.00491907E-02;
  COFD[5796] = -2.22816073E+01;
  COFD[5797] = 5.59185582E+00;
  COFD[5798] = -4.91155812E-01;
  COFD[5799] = 2.05043018E-02;
  COFD[5800] = -2.22944970E+01;
  COFD[5801] = 5.59185582E+00;
  COFD[5802] = -4.91155812E-01;
  COFD[5803] = 2.05043018E-02;
  COFD[5804] = -2.25170445E+01;
  COFD[5805] = 5.58249828E+00;
  COFD[5806] = -4.78873376E-01;
  COFD[5807] = 1.95316774E-02;
  COFD[5808] = -2.25006514E+01;
  COFD[5809] = 5.58206320E+00;
  COFD[5810] = -4.82956809E-01;
  COFD[5811] = 1.98731634E-02;
  COFD[5812] = -2.25118138E+01;
  COFD[5813] = 5.58206320E+00;
  COFD[5814] = -4.82956809E-01;
  COFD[5815] = 1.98731634E-02;
  COFD[5816] = -2.20420791E+01;
  COFD[5817] = 5.14570932E+00;
  COFD[5818] = -3.99877142E-01;
  COFD[5819] = 1.52199557E-02;
  COFD[5820] = -2.28055286E+01;
  COFD[5821] = 5.58523510E+00;
  COFD[5822] = -4.81201481E-01;
  COFD[5823] = 1.97107111E-02;
  COFD[5824] = -2.28124895E+01;
  COFD[5825] = 5.58523510E+00;
  COFD[5826] = -4.81201481E-01;
  COFD[5827] = 1.97107111E-02;
  COFD[5828] = -2.28192161E+01;
  COFD[5829] = 5.58523510E+00;
  COFD[5830] = -4.81201481E-01;
  COFD[5831] = 1.97107111E-02;
  COFD[5832] = -2.27782105E+01;
  COFD[5833] = 5.40563818E+00;
  COFD[5834] = -4.44444322E-01;
  COFD[5835] = 1.75813146E-02;
  COFD[5836] = -2.27738556E+01;
  COFD[5837] = 5.40563818E+00;
  COFD[5838] = -4.44444322E-01;
  COFD[5839] = 1.75813146E-02;
  COFD[5840] = -2.27784066E+01;
  COFD[5841] = 5.40563818E+00;
  COFD[5842] = -4.44444322E-01;
  COFD[5843] = 1.75813146E-02;
  COFD[5844] = -2.27828365E+01;
  COFD[5845] = 5.40563818E+00;
  COFD[5846] = -4.44444322E-01;
  COFD[5847] = 1.75813146E-02;
  COFD[5848] = -2.23528150E+01;
  COFD[5849] = 5.09597242E+00;
  COFD[5850] = -3.91720233E-01;
  COFD[5851] = 1.47988554E-02;
  COFD[5852] = -2.23560436E+01;
  COFD[5853] = 5.09597242E+00;
  COFD[5854] = -3.91720233E-01;
  COFD[5855] = 1.47988554E-02;
  COFD[5856] = -2.23065352E+01;
  COFD[5857] = 5.05640142E+00;
  COFD[5858] = -3.85296567E-01;
  COFD[5859] = 1.44694051E-02;
  COFD[5860] = -2.19668378E+01;
  COFD[5861] = 4.84253971E+00;
  COFD[5862] = -3.51393460E-01;
  COFD[5863] = 1.27562727E-02;
  COFD[5864] = -2.19236852E+01;
  COFD[5865] = 4.80817197E+00;
  COFD[5866] = -3.45980860E-01;
  COFD[5867] = 1.24840141E-02;
  COFD[5868] = -2.16264924E+01;
  COFD[5869] = 4.62444880E+00;
  COFD[5870] = -3.16789032E-01;
  COFD[5871] = 1.10089656E-02;
  COFD[5872] = -2.16101719E+01;
  COFD[5873] = 4.60241958E+00;
  COFD[5874] = -3.13266142E-01;
  COFD[5875] = 1.08303161E-02;
  COFD[5876] = -2.12774421E+01;
  COFD[5877] = 4.41372939E+00;
  COFD[5878] = -2.83873783E-01;
  COFD[5879] = 9.36532569E-03;
  COFD[5880] = -2.12605918E+01;
  COFD[5881] = 4.39158582E+00;
  COFD[5882] = -2.80470961E-01;
  COFD[5883] = 9.19710001E-03;
  COFD[5884] = -2.08875172E+01;
  COFD[5885] = 4.19325533E+00;
  COFD[5886] = -2.50186251E-01;
  COFD[5887] = 7.70758812E-03;
  COFD[5888] = -2.08615626E+01;
  COFD[5889] = 4.16888533E+00;
  COFD[5890] = -2.46500133E-01;
  COFD[5891] = 7.52727544E-03;
  COFD[5892] = -2.04884449E+01;
  COFD[5893] = 3.97419032E+00;
  COFD[5894] = -2.17151244E-01;
  COFD[5895] = 6.09602105E-03;
  COFD[5896] = -2.04422470E+01;
  COFD[5897] = 3.94332855E+00;
  COFD[5898] = -2.12471416E-01;
  COFD[5899] = 5.86705833E-03;
  COFD[5900] = -1.98602965E+01;
  COFD[5901] = 3.61510430E+00;
  COFD[5902] = -1.62429647E-01;
  COFD[5903] = 3.41379096E-03;
  COFD[5904] = -1.98602965E+01;
  COFD[5905] = 3.61510430E+00;
  COFD[5906] = -1.62429647E-01;
  COFD[5907] = 3.41379096E-03;
  COFD[5908] = -1.98602965E+01;
  COFD[5909] = 3.61510430E+00;
  COFD[5910] = -1.62429647E-01;
  COFD[5911] = 3.41379096E-03;
  COFD[5912] = -2.00028585E+01;
  COFD[5913] = 3.68035914E+00;
  COFD[5914] = -1.72246313E-01;
  COFD[5915] = 3.89112485E-03;
  COFD[5916] = -1.97359634E+01;
  COFD[5917] = 3.54254584E+00;
  COFD[5918] = -1.51588685E-01;
  COFD[5919] = 2.88891088E-03;
  COFD[5920] = -1.97359634E+01;
  COFD[5921] = 3.54254584E+00;
  COFD[5922] = -1.51588685E-01;
  COFD[5923] = 2.88891088E-03;
  COFD[5924] = -1.91370464E+01;
  COFD[5925] = 3.22676783E+00;
  COFD[5926] = -1.04666783E-01;
  COFD[5927] = 6.30082460E-04;
  COFD[5928] = -1.94433367E+01;
  COFD[5929] = 3.38805125E+00;
  COFD[5930] = -1.28605694E-01;
  COFD[5931] = 1.78139928E-03;
  COFD[5932] = -1.98609159E+01;
  COFD[5933] = 4.84231878E+00;
  COFD[5934] = -4.10101001E-01;
  COFD[5935] = 1.76356687E-02;
  COFD[5936] = -1.98544943E+01;
  COFD[5937] = 3.61510430E+00;
  COFD[5938] = -1.62429647E-01;
  COFD[5939] = 3.41379096E-03;
  COFD[5940] = -1.94089702E+01;
  COFD[5941] = 5.32291505E+00;
  COFD[5942] = -4.65883522E-01;
  COFD[5943] = 1.97916109E-02;
  COFD[5944] = -1.87858504E+01;
  COFD[5945] = 4.61260432E+00;
  COFD[5946] = -3.82854484E-01;
  COFD[5947] = 1.65575163E-02;
  COFD[5948] = -1.88093609E+01;
  COFD[5949] = 4.61260432E+00;
  COFD[5950] = -3.82854484E-01;
  COFD[5951] = 1.65575163E-02;
  COFD[5952] = -2.02532389E+01;
  COFD[5953] = 4.97613338E+00;
  COFD[5954] = -4.26175206E-01;
  COFD[5955] = 1.82809270E-02;
  COFD[5956] = -1.52611173E+01;
  COFD[5957] = 3.64565939E+00;
  COFD[5958] = -2.61726871E-01;
  COFD[5959] = 1.14799244E-02;
  COFD[5960] = -2.03415589E+01;
  COFD[5961] = 4.57152878E+00;
  COFD[5962] = -3.08371263E-01;
  COFD[5963] = 1.05838559E-02;
  COFD[5964] = -2.02625924E+01;
  COFD[5965] = 4.97613338E+00;
  COFD[5966] = -4.26175206E-01;
  COFD[5967] = 1.82809270E-02;
  COFD[5968] = -2.02434842E+01;
  COFD[5969] = 4.97613338E+00;
  COFD[5970] = -4.26175206E-01;
  COFD[5971] = 1.82809270E-02;
  COFD[5972] = -2.10278631E+01;
  COFD[5973] = 5.31360223E+00;
  COFD[5974] = -4.64787000E-01;
  COFD[5975] = 1.97483720E-02;
  COFD[5976] = -2.10278631E+01;
  COFD[5977] = 5.31360223E+00;
  COFD[5978] = -4.64787000E-01;
  COFD[5979] = 1.97483720E-02;
  COFD[5980] = -2.10553233E+01;
  COFD[5981] = 5.31360223E+00;
  COFD[5982] = -4.64787000E-01;
  COFD[5983] = 1.97483720E-02;
  COFD[5984] = -2.09892692E+01;
  COFD[5985] = 5.28557747E+00;
  COFD[5986] = -4.61402384E-01;
  COFD[5987] = 1.96111546E-02;
  COFD[5988] = -2.13209625E+01;
  COFD[5989] = 4.87252053E+00;
  COFD[5990] = -3.56127804E-01;
  COFD[5991] = 1.29948788E-02;
  COFD[5992] = -2.13320802E+01;
  COFD[5993] = 4.87252053E+00;
  COFD[5994] = -3.56127804E-01;
  COFD[5995] = 1.29948788E-02;
  COFD[5996] = -2.19940656E+01;
  COFD[5997] = 5.21365421E+00;
  COFD[5998] = -4.11227771E-01;
  COFD[5999] = 1.58122118E-02;
  COFD[6000] = -1.98801803E+01;
  COFD[6001] = 4.84731557E+00;
  COFD[6002] = -4.10638352E-01;
  COFD[6003] = 1.76543886E-02;
  COFD[6004] = -2.24978649E+01;
  COFD[6005] = 5.59178974E+00;
  COFD[6006] = -4.85668031E-01;
  COFD[6007] = 2.00491907E-02;
  COFD[6008] = -2.22788407E+01;
  COFD[6009] = 5.59185582E+00;
  COFD[6010] = -4.91155812E-01;
  COFD[6011] = 2.05043018E-02;
  COFD[6012] = -2.22916584E+01;
  COFD[6013] = 5.59185582E+00;
  COFD[6014] = -4.91155812E-01;
  COFD[6015] = 2.05043018E-02;
  COFD[6016] = -2.25141356E+01;
  COFD[6017] = 5.58249828E+00;
  COFD[6018] = -4.78873376E-01;
  COFD[6019] = 1.95316774E-02;
  COFD[6020] = -2.24976738E+01;
  COFD[6021] = 5.58206320E+00;
  COFD[6022] = -4.82956809E-01;
  COFD[6023] = 1.98731634E-02;
  COFD[6024] = -2.25087692E+01;
  COFD[6025] = 5.58206320E+00;
  COFD[6026] = -4.82956809E-01;
  COFD[6027] = 1.98731634E-02;
  COFD[6028] = -2.20382941E+01;
  COFD[6029] = 5.14570932E+00;
  COFD[6030] = -3.99877142E-01;
  COFD[6031] = 1.52199557E-02;
  COFD[6032] = -2.28018434E+01;
  COFD[6033] = 5.58523510E+00;
  COFD[6034] = -4.81201481E-01;
  COFD[6035] = 1.97107111E-02;
  COFD[6036] = -2.28087528E+01;
  COFD[6037] = 5.58523510E+00;
  COFD[6038] = -4.81201481E-01;
  COFD[6039] = 1.97107111E-02;
  COFD[6040] = -2.28154290E+01;
  COFD[6041] = 5.58523510E+00;
  COFD[6042] = -4.81201481E-01;
  COFD[6043] = 1.97107111E-02;
  COFD[6044] = -2.27738556E+01;
  COFD[6045] = 5.40563818E+00;
  COFD[6046] = -4.44444322E-01;
  COFD[6047] = 1.75813146E-02;
  COFD[6048] = -2.27695384E+01;
  COFD[6049] = 5.40563818E+00;
  COFD[6050] = -4.44444322E-01;
  COFD[6051] = 1.75813146E-02;
  COFD[6052] = -2.27740500E+01;
  COFD[6053] = 5.40563818E+00;
  COFD[6054] = -4.44444322E-01;
  COFD[6055] = 1.75813146E-02;
  COFD[6056] = -2.27784413E+01;
  COFD[6057] = 5.40563818E+00;
  COFD[6058] = -4.44444322E-01;
  COFD[6059] = 1.75813146E-02;
  COFD[6060] = -2.23480079E+01;
  COFD[6061] = 5.09597242E+00;
  COFD[6062] = -3.91720233E-01;
  COFD[6063] = 1.47988554E-02;
  COFD[6064] = -2.23512055E+01;
  COFD[6065] = 5.09597242E+00;
  COFD[6066] = -3.91720233E-01;
  COFD[6067] = 1.47988554E-02;
  COFD[6068] = -2.23016666E+01;
  COFD[6069] = 5.05640142E+00;
  COFD[6070] = -3.85296567E-01;
  COFD[6071] = 1.44694051E-02;
  COFD[6072] = -2.19616149E+01;
  COFD[6073] = 4.84253971E+00;
  COFD[6074] = -3.51393460E-01;
  COFD[6075] = 1.27562727E-02;
  COFD[6076] = -2.19184376E+01;
  COFD[6077] = 4.80817197E+00;
  COFD[6078] = -3.45980860E-01;
  COFD[6079] = 1.24840141E-02;
  COFD[6080] = -2.16209549E+01;
  COFD[6081] = 4.62444880E+00;
  COFD[6082] = -3.16789032E-01;
  COFD[6083] = 1.10089656E-02;
  COFD[6084] = -2.16046139E+01;
  COFD[6085] = 4.60241958E+00;
  COFD[6086] = -3.13266142E-01;
  COFD[6087] = 1.08303161E-02;
  COFD[6088] = -2.12716426E+01;
  COFD[6089] = 4.41372939E+00;
  COFD[6090] = -2.83873783E-01;
  COFD[6091] = 9.36532569E-03;
  COFD[6092] = -2.12547751E+01;
  COFD[6093] = 4.39158582E+00;
  COFD[6094] = -2.80470961E-01;
  COFD[6095] = 9.19710001E-03;
  COFD[6096] = -2.08814960E+01;
  COFD[6097] = 4.19325533E+00;
  COFD[6098] = -2.50186251E-01;
  COFD[6099] = 7.70758812E-03;
  COFD[6100] = -2.08555268E+01;
  COFD[6101] = 4.16888533E+00;
  COFD[6102] = -2.46500133E-01;
  COFD[6103] = 7.52727544E-03;
  COFD[6104] = -2.04822338E+01;
  COFD[6105] = 3.97419032E+00;
  COFD[6106] = -2.17151244E-01;
  COFD[6107] = 6.09602105E-03;
  COFD[6108] = -2.04360233E+01;
  COFD[6109] = 3.94332855E+00;
  COFD[6110] = -2.12471416E-01;
  COFD[6111] = 5.86705833E-03;
  COFD[6112] = -1.98537674E+01;
  COFD[6113] = 3.61510430E+00;
  COFD[6114] = -1.62429647E-01;
  COFD[6115] = 3.41379096E-03;
  COFD[6116] = -1.98537674E+01;
  COFD[6117] = 3.61510430E+00;
  COFD[6118] = -1.62429647E-01;
  COFD[6119] = 3.41379096E-03;
  COFD[6120] = -1.98537674E+01;
  COFD[6121] = 3.61510430E+00;
  COFD[6122] = -1.62429647E-01;
  COFD[6123] = 3.41379096E-03;
  COFD[6124] = -1.99963391E+01;
  COFD[6125] = 3.68035914E+00;
  COFD[6126] = -1.72246313E-01;
  COFD[6127] = 3.89112485E-03;
  COFD[6128] = -1.97291674E+01;
  COFD[6129] = 3.54254584E+00;
  COFD[6130] = -1.51588685E-01;
  COFD[6131] = 2.88891088E-03;
  COFD[6132] = -1.97291674E+01;
  COFD[6133] = 3.54254584E+00;
  COFD[6134] = -1.51588685E-01;
  COFD[6135] = 2.88891088E-03;
  COFD[6136] = -1.91300427E+01;
  COFD[6137] = 3.22676783E+00;
  COFD[6138] = -1.04666783E-01;
  COFD[6139] = 6.30082460E-04;
  COFD[6140] = -1.94364373E+01;
  COFD[6141] = 3.38805125E+00;
  COFD[6142] = -1.28605694E-01;
  COFD[6143] = 1.78139928E-03;
  COFD[6144] = -1.98580097E+01;
  COFD[6145] = 4.84231878E+00;
  COFD[6146] = -4.10101001E-01;
  COFD[6147] = 1.76356687E-02;
  COFD[6148] = -1.98613280E+01;
  COFD[6149] = 3.61510430E+00;
  COFD[6150] = -1.62429647E-01;
  COFD[6151] = 3.41379096E-03;
  COFD[6152] = -1.94091316E+01;
  COFD[6153] = 5.32291505E+00;
  COFD[6154] = -4.65883522E-01;
  COFD[6155] = 1.97916109E-02;
  COFD[6156] = -1.87878758E+01;
  COFD[6157] = 4.61260432E+00;
  COFD[6158] = -3.82854484E-01;
  COFD[6159] = 1.65575163E-02;
  COFD[6160] = -1.88114840E+01;
  COFD[6161] = 4.61260432E+00;
  COFD[6162] = -3.82854484E-01;
  COFD[6163] = 1.65575163E-02;
  COFD[6164] = -2.02566153E+01;
  COFD[6165] = 4.97613338E+00;
  COFD[6166] = -4.26175206E-01;
  COFD[6167] = 1.82809270E-02;
  COFD[6168] = -1.52614345E+01;
  COFD[6169] = 3.64565939E+00;
  COFD[6170] = -2.61726871E-01;
  COFD[6171] = 1.14799244E-02;
  COFD[6172] = -2.03437771E+01;
  COFD[6173] = 4.57152878E+00;
  COFD[6174] = -3.08371263E-01;
  COFD[6175] = 1.05838559E-02;
  COFD[6176] = -2.02660328E+01;
  COFD[6177] = 4.97613338E+00;
  COFD[6178] = -4.26175206E-01;
  COFD[6179] = 1.82809270E-02;
  COFD[6180] = -2.02467952E+01;
  COFD[6181] = 4.97613338E+00;
  COFD[6182] = -4.26175206E-01;
  COFD[6183] = 1.82809270E-02;
  COFD[6184] = -2.10296892E+01;
  COFD[6185] = 5.31360223E+00;
  COFD[6186] = -4.64787000E-01;
  COFD[6187] = 1.97483720E-02;
  COFD[6188] = -2.10296892E+01;
  COFD[6189] = 5.31360223E+00;
  COFD[6190] = -4.64787000E-01;
  COFD[6191] = 1.97483720E-02;
  COFD[6192] = -2.10572526E+01;
  COFD[6193] = 5.31360223E+00;
  COFD[6194] = -4.64787000E-01;
  COFD[6195] = 1.97483720E-02;
  COFD[6196] = -2.09912989E+01;
  COFD[6197] = 5.28557747E+00;
  COFD[6198] = -4.61402384E-01;
  COFD[6199] = 1.96111546E-02;
  COFD[6200] = -2.13240709E+01;
  COFD[6201] = 4.87252053E+00;
  COFD[6202] = -3.56127804E-01;
  COFD[6203] = 1.29948788E-02;
  COFD[6204] = -2.13352587E+01;
  COFD[6205] = 4.87252053E+00;
  COFD[6206] = -3.56127804E-01;
  COFD[6207] = 1.29948788E-02;
  COFD[6208] = -2.19973126E+01;
  COFD[6209] = 5.21365421E+00;
  COFD[6210] = -4.11227771E-01;
  COFD[6211] = 1.58122118E-02;
  COFD[6212] = -1.98832169E+01;
  COFD[6213] = 4.84731557E+00;
  COFD[6214] = -4.10638352E-01;
  COFD[6215] = 1.76543886E-02;
  COFD[6216] = -2.25018696E+01;
  COFD[6217] = 5.59178974E+00;
  COFD[6218] = -4.85668031E-01;
  COFD[6219] = 2.00491907E-02;
  COFD[6220] = -2.22817317E+01;
  COFD[6221] = 5.59185582E+00;
  COFD[6222] = -4.91155812E-01;
  COFD[6223] = 2.05043018E-02;
  COFD[6224] = -2.22946247E+01;
  COFD[6225] = 5.59185582E+00;
  COFD[6226] = -4.91155812E-01;
  COFD[6227] = 2.05043018E-02;
  COFD[6228] = -2.25171753E+01;
  COFD[6229] = 5.58249828E+00;
  COFD[6230] = -4.78873376E-01;
  COFD[6231] = 1.95316774E-02;
  COFD[6232] = -2.25007852E+01;
  COFD[6233] = 5.58206320E+00;
  COFD[6234] = -4.82956809E-01;
  COFD[6235] = 1.98731634E-02;
  COFD[6236] = -2.25119507E+01;
  COFD[6237] = 5.58206320E+00;
  COFD[6238] = -4.82956809E-01;
  COFD[6239] = 1.98731634E-02;
  COFD[6240] = -2.20422494E+01;
  COFD[6241] = 5.14570932E+00;
  COFD[6242] = -3.99877142E-01;
  COFD[6243] = 1.52199557E-02;
  COFD[6244] = -2.28056945E+01;
  COFD[6245] = 5.58523510E+00;
  COFD[6246] = -4.81201481E-01;
  COFD[6247] = 1.97107111E-02;
  COFD[6248] = -2.28126577E+01;
  COFD[6249] = 5.58523510E+00;
  COFD[6250] = -4.81201481E-01;
  COFD[6251] = 1.97107111E-02;
  COFD[6252] = -2.28193866E+01;
  COFD[6253] = 5.58523510E+00;
  COFD[6254] = -4.81201481E-01;
  COFD[6255] = 1.97107111E-02;
  COFD[6256] = -2.27784066E+01;
  COFD[6257] = 5.40563818E+00;
  COFD[6258] = -4.44444322E-01;
  COFD[6259] = 1.75813146E-02;
  COFD[6260] = -2.27740500E+01;
  COFD[6261] = 5.40563818E+00;
  COFD[6262] = -4.44444322E-01;
  COFD[6263] = 1.75813146E-02;
  COFD[6264] = -2.27786027E+01;
  COFD[6265] = 5.40563818E+00;
  COFD[6266] = -4.44444322E-01;
  COFD[6267] = 1.75813146E-02;
  COFD[6268] = -2.27830344E+01;
  COFD[6269] = 5.40563818E+00;
  COFD[6270] = -4.44444322E-01;
  COFD[6271] = 1.75813146E-02;
  COFD[6272] = -2.23530316E+01;
  COFD[6273] = 5.09597242E+00;
  COFD[6274] = -3.91720233E-01;
  COFD[6275] = 1.47988554E-02;
  COFD[6276] = -2.23562615E+01;
  COFD[6277] = 5.09597242E+00;
  COFD[6278] = -3.91720233E-01;
  COFD[6279] = 1.47988554E-02;
  COFD[6280] = -2.23067545E+01;
  COFD[6281] = 5.05640142E+00;
  COFD[6282] = -3.85296567E-01;
  COFD[6283] = 1.44694051E-02;
  COFD[6284] = -2.19670732E+01;
  COFD[6285] = 4.84253971E+00;
  COFD[6286] = -3.51393460E-01;
  COFD[6287] = 1.27562727E-02;
  COFD[6288] = -2.19239217E+01;
  COFD[6289] = 4.80817197E+00;
  COFD[6290] = -3.45980860E-01;
  COFD[6291] = 1.24840141E-02;
  COFD[6292] = -2.16267421E+01;
  COFD[6293] = 4.62444880E+00;
  COFD[6294] = -3.16789032E-01;
  COFD[6295] = 1.10089656E-02;
  COFD[6296] = -2.16104224E+01;
  COFD[6297] = 4.60241958E+00;
  COFD[6298] = -3.13266142E-01;
  COFD[6299] = 1.08303161E-02;
  COFD[6300] = -2.12777037E+01;
  COFD[6301] = 4.41372939E+00;
  COFD[6302] = -2.83873783E-01;
  COFD[6303] = 9.36532569E-03;
  COFD[6304] = -2.12608541E+01;
  COFD[6305] = 4.39158582E+00;
  COFD[6306] = -2.80470961E-01;
  COFD[6307] = 9.19710001E-03;
  COFD[6308] = -2.08877888E+01;
  COFD[6309] = 4.19325533E+00;
  COFD[6310] = -2.50186251E-01;
  COFD[6311] = 7.70758812E-03;
  COFD[6312] = -2.08618348E+01;
  COFD[6313] = 4.16888533E+00;
  COFD[6314] = -2.46500133E-01;
  COFD[6315] = 7.52727544E-03;
  COFD[6316] = -2.04887251E+01;
  COFD[6317] = 3.97419032E+00;
  COFD[6318] = -2.17151244E-01;
  COFD[6319] = 6.09602105E-03;
  COFD[6320] = -2.04425278E+01;
  COFD[6321] = 3.94332855E+00;
  COFD[6322] = -2.12471416E-01;
  COFD[6323] = 5.86705833E-03;
  COFD[6324] = -1.98605911E+01;
  COFD[6325] = 3.61510430E+00;
  COFD[6326] = -1.62429647E-01;
  COFD[6327] = 3.41379096E-03;
  COFD[6328] = -1.98605911E+01;
  COFD[6329] = 3.61510430E+00;
  COFD[6330] = -1.62429647E-01;
  COFD[6331] = 3.41379096E-03;
  COFD[6332] = -1.98605911E+01;
  COFD[6333] = 3.61510430E+00;
  COFD[6334] = -1.62429647E-01;
  COFD[6335] = 3.41379096E-03;
  COFD[6336] = -2.00031527E+01;
  COFD[6337] = 3.68035914E+00;
  COFD[6338] = -1.72246313E-01;
  COFD[6339] = 3.89112485E-03;
  COFD[6340] = -1.97362702E+01;
  COFD[6341] = 3.54254584E+00;
  COFD[6342] = -1.51588685E-01;
  COFD[6343] = 2.88891088E-03;
  COFD[6344] = -1.97362702E+01;
  COFD[6345] = 3.54254584E+00;
  COFD[6346] = -1.51588685E-01;
  COFD[6347] = 2.88891088E-03;
  COFD[6348] = -1.91373627E+01;
  COFD[6349] = 3.22676783E+00;
  COFD[6350] = -1.04666783E-01;
  COFD[6351] = 6.30082460E-04;
  COFD[6352] = -1.94436482E+01;
  COFD[6353] = 3.38805125E+00;
  COFD[6354] = -1.28605694E-01;
  COFD[6355] = 1.78139928E-03;
  COFD[6356] = -1.98610465E+01;
  COFD[6357] = 4.84231878E+00;
  COFD[6358] = -4.10101001E-01;
  COFD[6359] = 1.76356687E-02;
  COFD[6360] = -1.98680102E+01;
  COFD[6361] = 3.61510430E+00;
  COFD[6362] = -1.62429647E-01;
  COFD[6363] = 3.41379096E-03;
  COFD[6364] = -1.94092873E+01;
  COFD[6365] = 5.32291505E+00;
  COFD[6366] = -4.65883522E-01;
  COFD[6367] = 1.97916109E-02;
  COFD[6368] = -1.87898376E+01;
  COFD[6369] = 4.61260432E+00;
  COFD[6370] = -3.82854484E-01;
  COFD[6371] = 1.65575163E-02;
  COFD[6372] = -1.88135408E+01;
  COFD[6373] = 4.61260432E+00;
  COFD[6374] = -3.82854484E-01;
  COFD[6375] = 1.65575163E-02;
  COFD[6376] = -2.02598943E+01;
  COFD[6377] = 4.97613338E+00;
  COFD[6378] = -4.26175206E-01;
  COFD[6379] = 1.82809270E-02;
  COFD[6380] = -1.52617406E+01;
  COFD[6381] = 3.64565939E+00;
  COFD[6382] = -2.61726871E-01;
  COFD[6383] = 1.14799244E-02;
  COFD[6384] = -2.03459263E+01;
  COFD[6385] = 4.57152878E+00;
  COFD[6386] = -3.08371263E-01;
  COFD[6387] = 1.05838559E-02;
  COFD[6388] = -2.02693743E+01;
  COFD[6389] = 4.97613338E+00;
  COFD[6390] = -4.26175206E-01;
  COFD[6391] = 1.82809270E-02;
  COFD[6392] = -2.02500103E+01;
  COFD[6393] = 4.97613338E+00;
  COFD[6394] = -4.26175206E-01;
  COFD[6395] = 1.82809270E-02;
  COFD[6396] = -2.10314572E+01;
  COFD[6397] = 5.31360223E+00;
  COFD[6398] = -4.64787000E-01;
  COFD[6399] = 1.97483720E-02;
  COFD[6400] = -2.10314572E+01;
  COFD[6401] = 5.31360223E+00;
  COFD[6402] = -4.64787000E-01;
  COFD[6403] = 1.97483720E-02;
  COFD[6404] = -2.10591209E+01;
  COFD[6405] = 5.31360223E+00;
  COFD[6406] = -4.64787000E-01;
  COFD[6407] = 1.97483720E-02;
  COFD[6408] = -2.09932649E+01;
  COFD[6409] = 5.28557747E+00;
  COFD[6410] = -4.61402384E-01;
  COFD[6411] = 1.96111546E-02;
  COFD[6412] = -2.13270879E+01;
  COFD[6413] = 4.87252053E+00;
  COFD[6414] = -3.56127804E-01;
  COFD[6415] = 1.29948788E-02;
  COFD[6416] = -2.13383442E+01;
  COFD[6417] = 4.87252053E+00;
  COFD[6418] = -3.56127804E-01;
  COFD[6419] = 1.29948788E-02;
  COFD[6420] = -2.20004651E+01;
  COFD[6421] = 5.21365421E+00;
  COFD[6422] = -4.11227771E-01;
  COFD[6423] = 1.58122118E-02;
  COFD[6424] = -1.98861639E+01;
  COFD[6425] = 4.84731557E+00;
  COFD[6426] = -4.10638352E-01;
  COFD[6427] = 1.76543886E-02;
  COFD[6428] = -2.25057636E+01;
  COFD[6429] = 5.59178974E+00;
  COFD[6430] = -4.85668031E-01;
  COFD[6431] = 2.00491907E-02;
  COFD[6432] = -2.22845366E+01;
  COFD[6433] = 5.59185582E+00;
  COFD[6434] = -4.91155812E-01;
  COFD[6435] = 2.05043018E-02;
  COFD[6436] = -2.22975030E+01;
  COFD[6437] = 5.59185582E+00;
  COFD[6438] = -4.91155812E-01;
  COFD[6439] = 2.05043018E-02;
  COFD[6440] = -2.25201254E+01;
  COFD[6441] = 5.58249828E+00;
  COFD[6442] = -4.78873376E-01;
  COFD[6443] = 1.95316774E-02;
  COFD[6444] = -2.25038054E+01;
  COFD[6445] = 5.58206320E+00;
  COFD[6446] = -4.82956809E-01;
  COFD[6447] = 1.98731634E-02;
  COFD[6448] = -2.25150392E+01;
  COFD[6449] = 5.58206320E+00;
  COFD[6450] = -4.82956809E-01;
  COFD[6451] = 1.98731634E-02;
  COFD[6452] = -2.20460949E+01;
  COFD[6453] = 5.14570932E+00;
  COFD[6454] = -3.99877142E-01;
  COFD[6455] = 1.52199557E-02;
  COFD[6456] = -2.28094379E+01;
  COFD[6457] = 5.58523510E+00;
  COFD[6458] = -4.81201481E-01;
  COFD[6459] = 1.97107111E-02;
  COFD[6460] = -2.28164538E+01;
  COFD[6461] = 5.58523510E+00;
  COFD[6462] = -4.81201481E-01;
  COFD[6463] = 1.97107111E-02;
  COFD[6464] = -2.28232344E+01;
  COFD[6465] = 5.58523510E+00;
  COFD[6466] = -4.81201481E-01;
  COFD[6467] = 1.97107111E-02;
  COFD[6468] = -2.27828365E+01;
  COFD[6469] = 5.40563818E+00;
  COFD[6470] = -4.44444322E-01;
  COFD[6471] = 1.75813146E-02;
  COFD[6472] = -2.27784413E+01;
  COFD[6473] = 5.40563818E+00;
  COFD[6474] = -4.44444322E-01;
  COFD[6475] = 1.75813146E-02;
  COFD[6476] = -2.27830344E+01;
  COFD[6477] = 5.40563818E+00;
  COFD[6478] = -4.44444322E-01;
  COFD[6479] = 1.75813146E-02;
  COFD[6480] = -2.27875057E+01;
  COFD[6481] = 5.40563818E+00;
  COFD[6482] = -4.44444322E-01;
  COFD[6483] = 1.75813146E-02;
  COFD[6484] = -2.23579262E+01;
  COFD[6485] = 5.09597242E+00;
  COFD[6486] = -3.91720233E-01;
  COFD[6487] = 1.47988554E-02;
  COFD[6488] = -2.23611880E+01;
  COFD[6489] = 5.09597242E+00;
  COFD[6490] = -3.91720233E-01;
  COFD[6491] = 1.47988554E-02;
  COFD[6492] = -2.23117124E+01;
  COFD[6493] = 5.05640142E+00;
  COFD[6494] = -3.85296567E-01;
  COFD[6495] = 1.44694051E-02;
  COFD[6496] = -2.19723959E+01;
  COFD[6497] = 4.84253971E+00;
  COFD[6498] = -3.51393460E-01;
  COFD[6499] = 1.27562727E-02;
  COFD[6500] = -2.19292698E+01;
  COFD[6501] = 4.80817197E+00;
  COFD[6502] = -3.45980860E-01;
  COFD[6503] = 1.24840141E-02;
  COFD[6504] = -2.16323892E+01;
  COFD[6505] = 4.62444880E+00;
  COFD[6506] = -3.16789032E-01;
  COFD[6507] = 1.10089656E-02;
  COFD[6508] = -2.16160906E+01;
  COFD[6509] = 4.60241958E+00;
  COFD[6510] = -3.13266142E-01;
  COFD[6511] = 1.08303161E-02;
  COFD[6512] = -2.12836213E+01;
  COFD[6513] = 4.41372939E+00;
  COFD[6514] = -2.83873783E-01;
  COFD[6515] = 9.36532569E-03;
  COFD[6516] = -2.12667895E+01;
  COFD[6517] = 4.39158582E+00;
  COFD[6518] = -2.80470961E-01;
  COFD[6519] = 9.19710001E-03;
  COFD[6520] = -2.08939354E+01;
  COFD[6521] = 4.19325533E+00;
  COFD[6522] = -2.50186251E-01;
  COFD[6523] = 7.70758812E-03;
  COFD[6524] = -2.08679966E+01;
  COFD[6525] = 4.16888533E+00;
  COFD[6526] = -2.46500133E-01;
  COFD[6527] = 7.52727544E-03;
  COFD[6528] = -2.04950681E+01;
  COFD[6529] = 3.97419032E+00;
  COFD[6530] = -2.17151244E-01;
  COFD[6531] = 6.09602105E-03;
  COFD[6532] = -2.04488838E+01;
  COFD[6533] = 3.94332855E+00;
  COFD[6534] = -2.12471416E-01;
  COFD[6535] = 5.86705833E-03;
  COFD[6536] = -1.98672634E+01;
  COFD[6537] = 3.61510430E+00;
  COFD[6538] = -1.62429647E-01;
  COFD[6539] = 3.41379096E-03;
  COFD[6540] = -1.98672634E+01;
  COFD[6541] = 3.61510430E+00;
  COFD[6542] = -1.62429647E-01;
  COFD[6543] = 3.41379096E-03;
  COFD[6544] = -1.98672634E+01;
  COFD[6545] = 3.61510430E+00;
  COFD[6546] = -1.62429647E-01;
  COFD[6547] = 3.41379096E-03;
  COFD[6548] = -2.00098150E+01;
  COFD[6549] = 3.68035914E+00;
  COFD[6550] = -1.72246313E-01;
  COFD[6551] = 3.89112485E-03;
  COFD[6552] = -1.97432192E+01;
  COFD[6553] = 3.54254584E+00;
  COFD[6554] = -1.51588685E-01;
  COFD[6555] = 2.88891088E-03;
  COFD[6556] = -1.97432192E+01;
  COFD[6557] = 3.54254584E+00;
  COFD[6558] = -1.51588685E-01;
  COFD[6559] = 2.88891088E-03;
  COFD[6560] = -1.91445273E+01;
  COFD[6561] = 3.22676783E+00;
  COFD[6562] = -1.04666783E-01;
  COFD[6563] = 6.30082460E-04;
  COFD[6564] = -1.94507045E+01;
  COFD[6565] = 3.38805125E+00;
  COFD[6566] = -1.28605694E-01;
  COFD[6567] = 1.78139928E-03;
  COFD[6568] = -1.98639938E+01;
  COFD[6569] = 4.84231878E+00;
  COFD[6570] = -4.10101001E-01;
  COFD[6571] = 1.76356687E-02;
  COFD[6572] = -1.79641953E+01;
  COFD[6573] = 2.68406243E+00;
  COFD[6574] = -2.49058117E-02;
  COFD[6575] = -3.18217796E-03;
  COFD[6576] = -1.99878889E+01;
  COFD[6577] = 5.47248098E+00;
  COFD[6578] = -4.79290468E-01;
  COFD[6579] = 2.01323903E-02;
  COFD[6580] = -1.96267194E+01;
  COFD[6581] = 4.88238340E+00;
  COFD[6582] = -4.14880316E-01;
  COFD[6583] = 1.78258928E-02;
  COFD[6584] = -1.96513830E+01;
  COFD[6585] = 4.88238340E+00;
  COFD[6586] = -4.14880316E-01;
  COFD[6587] = 1.78258928E-02;
  COFD[6588] = -2.10673190E+01;
  COFD[6589] = 5.22065615E+00;
  COFD[6590] = -4.53751850E-01;
  COFD[6591] = 1.93099506E-02;
  COFD[6592] = -1.61866111E+01;
  COFD[6593] = 3.97811734E+00;
  COFD[6594] = -3.04543772E-01;
  COFD[6595] = 1.33243270E-02;
  COFD[6596] = -1.90109309E+01;
  COFD[6597] = 3.88639599E+00;
  COFD[6598] = -2.03781856E-01;
  COFD[6599] = 5.44050761E-03;
  COFD[6600] = -2.10774499E+01;
  COFD[6601] = 5.22065615E+00;
  COFD[6602] = -4.53751850E-01;
  COFD[6603] = 1.93099506E-02;
  COFD[6604] = -2.10567703E+01;
  COFD[6605] = 5.22065615E+00;
  COFD[6606] = -4.53751850E-01;
  COFD[6607] = 1.93099506E-02;
  COFD[6608] = -2.16185142E+01;
  COFD[6609] = 5.46403569E+00;
  COFD[6610] = -4.78350420E-01;
  COFD[6611] = 2.00977393E-02;
  COFD[6612] = -2.16185142E+01;
  COFD[6613] = 5.46403569E+00;
  COFD[6614] = -4.78350420E-01;
  COFD[6615] = 2.00977393E-02;
  COFD[6616] = -2.16471880E+01;
  COFD[6617] = 5.46403569E+00;
  COFD[6618] = -4.78350420E-01;
  COFD[6619] = 2.00977393E-02;
  COFD[6620] = -2.15968629E+01;
  COFD[6621] = 5.44280136E+00;
  COFD[6622] = -4.75998855E-01;
  COFD[6623] = 2.00116091E-02;
  COFD[6624] = -2.03498784E+01;
  COFD[6625] = 4.33469236E+00;
  COFD[6626] = -2.71728538E-01;
  COFD[6627] = 8.76524142E-03;
  COFD[6628] = -2.03618430E+01;
  COFD[6629] = 4.33469236E+00;
  COFD[6630] = -2.71728538E-01;
  COFD[6631] = 8.76524142E-03;
  COFD[6632] = -2.12309086E+01;
  COFD[6633] = 4.76264361E+00;
  COFD[6634] = -3.38700190E-01;
  COFD[6635] = 1.21146321E-02;
  COFD[6636] = -2.07935801E+01;
  COFD[6637] = 5.13870075E+00;
  COFD[6638] = -4.45087556E-01;
  COFD[6639] = 1.90141513E-02;
  COFD[6640] = -2.26255602E+01;
  COFD[6641] = 5.52088531E+00;
  COFD[6642] = -4.66799303E-01;
  COFD[6643] = 1.88452220E-02;
  COFD[6644] = -2.25311979E+01;
  COFD[6645] = 5.58497731E+00;
  COFD[6646] = -4.81782064E-01;
  COFD[6647] = 1.97602508E-02;
  COFD[6648] = -2.25449207E+01;
  COFD[6649] = 5.58497731E+00;
  COFD[6650] = -4.81782064E-01;
  COFD[6651] = 1.97602508E-02;
  COFD[6652] = -2.24096903E+01;
  COFD[6653] = 5.41604244E+00;
  COFD[6654] = -4.46391067E-01;
  COFD[6655] = 1.76894436E-02;
  COFD[6656] = -2.25927761E+01;
  COFD[6657] = 5.50251732E+00;
  COFD[6658] = -4.62858785E-01;
  COFD[6659] = 1.86120573E-02;
  COFD[6660] = -2.26047176E+01;
  COFD[6661] = 5.50251732E+00;
  COFD[6662] = -4.62858785E-01;
  COFD[6663] = 1.86120573E-02;
  COFD[6664] = -2.12138975E+01;
  COFD[6665] = 4.66550450E+00;
  COFD[6666] = -3.23297137E-01;
  COFD[6667] = 1.13374150E-02;
  COFD[6668] = -2.28142710E+01;
  COFD[6669] = 5.46711245E+00;
  COFD[6670] = -4.55648352E-01;
  COFD[6671] = 1.81956544E-02;
  COFD[6672] = -2.28218410E+01;
  COFD[6673] = 5.46711245E+00;
  COFD[6674] = -4.55648352E-01;
  COFD[6675] = 1.81956544E-02;
  COFD[6676] = -2.28291650E+01;
  COFD[6677] = 5.46711245E+00;
  COFD[6678] = -4.55648352E-01;
  COFD[6679] = 1.81956544E-02;
  COFD[6680] = -2.23528150E+01;
  COFD[6681] = 5.09597242E+00;
  COFD[6682] = -3.91720233E-01;
  COFD[6683] = 1.47988554E-02;
  COFD[6684] = -2.23480079E+01;
  COFD[6685] = 5.09597242E+00;
  COFD[6686] = -3.91720233E-01;
  COFD[6687] = 1.47988554E-02;
  COFD[6688] = -2.23530316E+01;
  COFD[6689] = 5.09597242E+00;
  COFD[6690] = -3.91720233E-01;
  COFD[6691] = 1.47988554E-02;
  COFD[6692] = -2.23579262E+01;
  COFD[6693] = 5.09597242E+00;
  COFD[6694] = -3.91720233E-01;
  COFD[6695] = 1.47988554E-02;
  COFD[6696] = -2.15052198E+01;
  COFD[6697] = 4.60438096E+00;
  COFD[6698] = -3.13580143E-01;
  COFD[6699] = 1.08462412E-02;
  COFD[6700] = -2.15088259E+01;
  COFD[6701] = 4.60438096E+00;
  COFD[6702] = -3.13580143E-01;
  COFD[6703] = 1.08462412E-02;
  COFD[6704] = -2.14436212E+01;
  COFD[6705] = 4.55836707E+00;
  COFD[6706] = -3.06311508E-01;
  COFD[6707] = 1.04809485E-02;
  COFD[6708] = -2.09926096E+01;
  COFD[6709] = 4.29644275E+00;
  COFD[6710] = -2.65881077E-01;
  COFD[6711] = 8.47752275E-03;
  COFD[6712] = -2.09302737E+01;
  COFD[6713] = 4.25424085E+00;
  COFD[6714] = -2.59427864E-01;
  COFD[6715] = 8.16009340E-03;
  COFD[6716] = -2.03719013E+01;
  COFD[6717] = 3.96005658E+00;
  COFD[6718] = -2.15023838E-01;
  COFD[6719] = 5.99243668E-03;
  COFD[6720] = -2.03315554E+01;
  COFD[6721] = 3.92807904E+00;
  COFD[6722] = -2.10143114E-01;
  COFD[6723] = 5.75266218E-03;
  COFD[6724] = -1.99572085E+01;
  COFD[6725] = 3.72188482E+00;
  COFD[6726] = -1.78555760E-01;
  COFD[6727] = 4.19961806E-03;
  COFD[6728] = -1.99409213E+01;
  COFD[6729] = 3.70025563E+00;
  COFD[6730] = -1.75262481E-01;
  COFD[6731] = 4.03842910E-03;
  COFD[6732] = -1.94608337E+01;
  COFD[6733] = 3.45627503E+00;
  COFD[6734] = -1.38749652E-01;
  COFD[6735] = 2.26961182E-03;
  COFD[6736] = -1.94327462E+01;
  COFD[6737] = 3.43141909E+00;
  COFD[6738] = -1.35054012E-01;
  COFD[6739] = 2.09180741E-03;
  COFD[6740] = -1.90327818E+01;
  COFD[6741] = 3.22670299E+00;
  COFD[6742] = -1.04657166E-01;
  COFD[6743] = 6.29620572E-04;
  COFD[6744] = -1.89787521E+01;
  COFD[6745] = 3.19312443E+00;
  COFD[6746] = -9.96826718E-02;
  COFD[6747] = 3.91060295E-04;
  COFD[6748] = -1.79633368E+01;
  COFD[6749] = 2.68406243E+00;
  COFD[6750] = -2.49058117E-02;
  COFD[6751] = -3.18217796E-03;
  COFD[6752] = -1.79633368E+01;
  COFD[6753] = 2.68406243E+00;
  COFD[6754] = -2.49058117E-02;
  COFD[6755] = -3.18217796E-03;
  COFD[6756] = -1.79633368E+01;
  COFD[6757] = 2.68406243E+00;
  COFD[6758] = -2.49058117E-02;
  COFD[6759] = -3.18217796E-03;
  COFD[6760] = -1.81581189E+01;
  COFD[6761] = 2.77116239E+00;
  COFD[6762] = -3.77250246E-02;
  COFD[6763] = -2.56819995E-03;
  COFD[6764] = -1.78252903E+01;
  COFD[6765] = 2.60486558E+00;
  COFD[6766] = -1.32252668E-02;
  COFD[6767] = -3.74170980E-03;
  COFD[6768] = -1.78252903E+01;
  COFD[6769] = 2.60486558E+00;
  COFD[6770] = -1.32252668E-02;
  COFD[6771] = -3.74170980E-03;
  COFD[6772] = -1.72077541E+01;
  COFD[6773] = 2.28214674E+00;
  COFD[6774] = 3.43434056E-02;
  COFD[6775] = -6.01398563E-03;
  COFD[6776] = -1.75400768E+01;
  COFD[6777] = 2.45372496E+00;
  COFD[6778] = 9.16587873E-03;
  COFD[6779] = -4.81554146E-03;
  COFD[6780] = -2.07714631E+01;
  COFD[6781] = 5.13381106E+00;
  COFD[6782] = -4.44579059E-01;
  COFD[6783] = 1.89972323E-02;
  COFD[6784] = -1.79693333E+01;
  COFD[6785] = 2.68406243E+00;
  COFD[6786] = -2.49058117E-02;
  COFD[6787] = -3.18217796E-03;
  COFD[6788] = -1.99879922E+01;
  COFD[6789] = 5.47248098E+00;
  COFD[6790] = -4.79290468E-01;
  COFD[6791] = 2.01323903E-02;
  COFD[6792] = -1.96280719E+01;
  COFD[6793] = 4.88238340E+00;
  COFD[6794] = -4.14880316E-01;
  COFD[6795] = 1.78258928E-02;
  COFD[6796] = -1.96528039E+01;
  COFD[6797] = 4.88238340E+00;
  COFD[6798] = -4.14880316E-01;
  COFD[6799] = 1.78258928E-02;
  COFD[6800] = -2.10696468E+01;
  COFD[6801] = 5.22065615E+00;
  COFD[6802] = -4.53751850E-01;
  COFD[6803] = 1.93099506E-02;
  COFD[6804] = -1.61868148E+01;
  COFD[6805] = 3.97811734E+00;
  COFD[6806] = -3.04543772E-01;
  COFD[6807] = 1.33243270E-02;
  COFD[6808] = -1.90124187E+01;
  COFD[6809] = 3.88639599E+00;
  COFD[6810] = -2.03781856E-01;
  COFD[6811] = 5.44050761E-03;
  COFD[6812] = -2.10798254E+01;
  COFD[6813] = 5.22065615E+00;
  COFD[6814] = -4.53751850E-01;
  COFD[6815] = 1.93099506E-02;
  COFD[6816] = -2.10590493E+01;
  COFD[6817] = 5.22065615E+00;
  COFD[6818] = -4.53751850E-01;
  COFD[6819] = 1.93099506E-02;
  COFD[6820] = -2.16197278E+01;
  COFD[6821] = 5.46403569E+00;
  COFD[6822] = -4.78350420E-01;
  COFD[6823] = 2.00977393E-02;
  COFD[6824] = -2.16197278E+01;
  COFD[6825] = 5.46403569E+00;
  COFD[6826] = -4.78350420E-01;
  COFD[6827] = 2.00977393E-02;
  COFD[6828] = -2.16484734E+01;
  COFD[6829] = 5.46403569E+00;
  COFD[6830] = -4.78350420E-01;
  COFD[6831] = 2.00977393E-02;
  COFD[6832] = -2.15982184E+01;
  COFD[6833] = 5.44280136E+00;
  COFD[6834] = -4.75998855E-01;
  COFD[6835] = 2.00116091E-02;
  COFD[6836] = -2.03520076E+01;
  COFD[6837] = 4.33469236E+00;
  COFD[6838] = -2.71728538E-01;
  COFD[6839] = 8.76524142E-03;
  COFD[6840] = -2.03640239E+01;
  COFD[6841] = 4.33469236E+00;
  COFD[6842] = -2.71728538E-01;
  COFD[6843] = 8.76524142E-03;
  COFD[6844] = -2.12331402E+01;
  COFD[6845] = 4.76264361E+00;
  COFD[6846] = -3.38700190E-01;
  COFD[6847] = 1.21146321E-02;
  COFD[6848] = -2.07956566E+01;
  COFD[6849] = 5.13870075E+00;
  COFD[6850] = -4.45087556E-01;
  COFD[6851] = 1.90141513E-02;
  COFD[6852] = -2.26283634E+01;
  COFD[6853] = 5.52088531E+00;
  COFD[6854] = -4.66799303E-01;
  COFD[6855] = 1.88452220E-02;
  COFD[6856] = -2.25331679E+01;
  COFD[6857] = 5.58497731E+00;
  COFD[6858] = -4.81782064E-01;
  COFD[6859] = 1.97602508E-02;
  COFD[6860] = -2.25469457E+01;
  COFD[6861] = 5.58497731E+00;
  COFD[6862] = -4.81782064E-01;
  COFD[6863] = 1.97602508E-02;
  COFD[6864] = -2.24117691E+01;
  COFD[6865] = 5.41604244E+00;
  COFD[6866] = -4.46391067E-01;
  COFD[6867] = 1.76894436E-02;
  COFD[6868] = -2.25949076E+01;
  COFD[6869] = 5.50251732E+00;
  COFD[6870] = -4.62858785E-01;
  COFD[6871] = 1.86120573E-02;
  COFD[6872] = -2.26069007E+01;
  COFD[6873] = 5.50251732E+00;
  COFD[6874] = -4.62858785E-01;
  COFD[6875] = 1.86120573E-02;
  COFD[6876] = -2.12166627E+01;
  COFD[6877] = 4.66550450E+00;
  COFD[6878] = -3.23297137E-01;
  COFD[6879] = 1.13374150E-02;
  COFD[6880] = -2.28169566E+01;
  COFD[6881] = 5.46711245E+00;
  COFD[6882] = -4.55648352E-01;
  COFD[6883] = 1.81956544E-02;
  COFD[6884] = -2.28245676E+01;
  COFD[6885] = 5.46711245E+00;
  COFD[6886] = -4.55648352E-01;
  COFD[6887] = 1.81956544E-02;
  COFD[6888] = -2.28319320E+01;
  COFD[6889] = 5.46711245E+00;
  COFD[6890] = -4.55648352E-01;
  COFD[6891] = 1.81956544E-02;
  COFD[6892] = -2.23560436E+01;
  COFD[6893] = 5.09597242E+00;
  COFD[6894] = -3.91720233E-01;
  COFD[6895] = 1.47988554E-02;
  COFD[6896] = -2.23512055E+01;
  COFD[6897] = 5.09597242E+00;
  COFD[6898] = -3.91720233E-01;
  COFD[6899] = 1.47988554E-02;
  COFD[6900] = -2.23562615E+01;
  COFD[6901] = 5.09597242E+00;
  COFD[6902] = -3.91720233E-01;
  COFD[6903] = 1.47988554E-02;
  COFD[6904] = -2.23611880E+01;
  COFD[6905] = 5.09597242E+00;
  COFD[6906] = -3.91720233E-01;
  COFD[6907] = 1.47988554E-02;
  COFD[6908] = -2.15088259E+01;
  COFD[6909] = 4.60438096E+00;
  COFD[6910] = -3.13580143E-01;
  COFD[6911] = 1.08462412E-02;
  COFD[6912] = -2.15124581E+01;
  COFD[6913] = 4.60438096E+00;
  COFD[6914] = -3.13580143E-01;
  COFD[6915] = 1.08462412E-02;
  COFD[6916] = -2.14472792E+01;
  COFD[6917] = 4.55836707E+00;
  COFD[6918] = -3.06311508E-01;
  COFD[6919] = 1.04809485E-02;
  COFD[6920] = -2.09965707E+01;
  COFD[6921] = 4.29644275E+00;
  COFD[6922] = -2.65881077E-01;
  COFD[6923] = 8.47752275E-03;
  COFD[6924] = -2.09342562E+01;
  COFD[6925] = 4.25424085E+00;
  COFD[6926] = -2.59427864E-01;
  COFD[6927] = 8.16009340E-03;
  COFD[6928] = -2.03761364E+01;
  COFD[6929] = 3.96005658E+00;
  COFD[6930] = -2.15023838E-01;
  COFD[6931] = 5.99243668E-03;
  COFD[6932] = -2.03358084E+01;
  COFD[6933] = 3.92807904E+00;
  COFD[6934] = -2.10143114E-01;
  COFD[6935] = 5.75266218E-03;
  COFD[6936] = -1.99616752E+01;
  COFD[6937] = 3.72188482E+00;
  COFD[6938] = -1.78555760E-01;
  COFD[6939] = 4.19961806E-03;
  COFD[6940] = -1.99454033E+01;
  COFD[6941] = 3.70025563E+00;
  COFD[6942] = -1.75262481E-01;
  COFD[6943] = 4.03842910E-03;
  COFD[6944] = -1.94654989E+01;
  COFD[6945] = 3.45627503E+00;
  COFD[6946] = -1.38749652E-01;
  COFD[6947] = 2.26961182E-03;
  COFD[6948] = -1.94374245E+01;
  COFD[6949] = 3.43141909E+00;
  COFD[6950] = -1.35054012E-01;
  COFD[6951] = 2.09180741E-03;
  COFD[6952] = -1.90376189E+01;
  COFD[6953] = 3.22670299E+00;
  COFD[6954] = -1.04657166E-01;
  COFD[6955] = 6.29620572E-04;
  COFD[6956] = -1.89836007E+01;
  COFD[6957] = 3.19312443E+00;
  COFD[6958] = -9.96826718E-02;
  COFD[6959] = 3.91060295E-04;
  COFD[6960] = -1.79684660E+01;
  COFD[6961] = 2.68406243E+00;
  COFD[6962] = -2.49058117E-02;
  COFD[6963] = -3.18217796E-03;
  COFD[6964] = -1.79684660E+01;
  COFD[6965] = 2.68406243E+00;
  COFD[6966] = -2.49058117E-02;
  COFD[6967] = -3.18217796E-03;
  COFD[6968] = -1.79684660E+01;
  COFD[6969] = 2.68406243E+00;
  COFD[6970] = -2.49058117E-02;
  COFD[6971] = -3.18217796E-03;
  COFD[6972] = -1.81632392E+01;
  COFD[6973] = 2.77116239E+00;
  COFD[6974] = -3.77250246E-02;
  COFD[6975] = -2.56819995E-03;
  COFD[6976] = -1.78306685E+01;
  COFD[6977] = 2.60486558E+00;
  COFD[6978] = -1.32252668E-02;
  COFD[6979] = -3.74170980E-03;
  COFD[6980] = -1.78306685E+01;
  COFD[6981] = 2.60486558E+00;
  COFD[6982] = -1.32252668E-02;
  COFD[6983] = -3.74170980E-03;
  COFD[6984] = -1.72133288E+01;
  COFD[6985] = 2.28214674E+00;
  COFD[6986] = 3.43434056E-02;
  COFD[6987] = -6.01398563E-03;
  COFD[6988] = -1.75455525E+01;
  COFD[6989] = 2.45372496E+00;
  COFD[6990] = 9.16587873E-03;
  COFD[6991] = -4.81554146E-03;
  COFD[6992] = -2.07735397E+01;
  COFD[6993] = 5.13381106E+00;
  COFD[6994] = -4.44579059E-01;
  COFD[6995] = 1.89972323E-02;
  COFD[6996] = -1.78013977E+01;
  COFD[6997] = 2.59587009E+00;
  COFD[6998] = -1.18871887E-02;
  COFD[6999] = -3.80613440E-03;
  COFD[7000] = -2.00936752E+01;
  COFD[7001] = 5.49784223E+00;
  COFD[7002] = -4.82080865E-01;
  COFD[7003] = 2.02336554E-02;
  COFD[7004] = -1.97500130E+01;
  COFD[7005] = 4.91686557E+00;
  COFD[7006] = -4.19132771E-01;
  COFD[7007] = 1.80015468E-02;
  COFD[7008] = -1.97748119E+01;
  COFD[7009] = 4.91686557E+00;
  COFD[7010] = -4.19132771E-01;
  COFD[7011] = 1.80015468E-02;
  COFD[7012] = -2.11739695E+01;
  COFD[7013] = 5.24746668E+00;
  COFD[7014] = -4.56860091E-01;
  COFD[7015] = 1.94300718E-02;
  COFD[7016] = -1.62900174E+01;
  COFD[7017] = 4.00742472E+00;
  COFD[7018] = -3.08303480E-01;
  COFD[7019] = 1.34859597E-02;
  COFD[7020] = -1.89282836E+01;
  COFD[7021] = 3.83078430E+00;
  COFD[7022] = -1.95235475E-01;
  COFD[7023] = 5.01957298E-03;
  COFD[7024] = -2.11841950E+01;
  COFD[7025] = 5.24746668E+00;
  COFD[7026] = -4.56860091E-01;
  COFD[7027] = 1.94300718E-02;
  COFD[7028] = -2.11633243E+01;
  COFD[7029] = 5.24746668E+00;
  COFD[7030] = -4.56860091E-01;
  COFD[7031] = 1.94300718E-02;
  COFD[7032] = -2.17223367E+01;
  COFD[7033] = 5.48994516E+00;
  COFD[7034] = -4.81227667E-01;
  COFD[7035] = 2.02034730E-02;
  COFD[7036] = -2.17223367E+01;
  COFD[7037] = 5.48994516E+00;
  COFD[7038] = -4.81227667E-01;
  COFD[7039] = 2.02034730E-02;
  COFD[7040] = -2.17511523E+01;
  COFD[7041] = 5.48994516E+00;
  COFD[7042] = -4.81227667E-01;
  COFD[7043] = 2.02034730E-02;
  COFD[7044] = -2.16987087E+01;
  COFD[7045] = 5.46787363E+00;
  COFD[7046] = -4.78778598E-01;
  COFD[7047] = 2.01135684E-02;
  COFD[7048] = -2.02526088E+01;
  COFD[7049] = 4.27348456E+00;
  COFD[7050] = -2.62370434E-01;
  COFD[7051] = 8.30483319E-03;
  COFD[7052] = -2.02646757E+01;
  COFD[7053] = 4.27348456E+00;
  COFD[7054] = -2.62370434E-01;
  COFD[7055] = 8.30483319E-03;
  COFD[7056] = -2.11732228E+01;
  COFD[7057] = 4.71779001E+00;
  COFD[7058] = -3.31563320E-01;
  COFD[7059] = 1.17538445E-02;
  COFD[7060] = -2.08665572E+01;
  COFD[7061] = 5.15159479E+00;
  COFD[7062] = -4.46223576E-01;
  COFD[7063] = 1.90413223E-02;
  COFD[7064] = -2.26402130E+01;
  COFD[7065] = 5.50652998E+00;
  COFD[7066] = -4.63916297E-01;
  COFD[7067] = 1.86793236E-02;
  COFD[7068] = -2.25768690E+01;
  COFD[7069] = 5.58521828E+00;
  COFD[7070] = -4.80992964E-01;
  COFD[7071] = 1.96934867E-02;
  COFD[7072] = -2.25907006E+01;
  COFD[7073] = 5.58521828E+00;
  COFD[7074] = -4.80992964E-01;
  COFD[7075] = 1.96934867E-02;
  COFD[7076] = -2.24136614E+01;
  COFD[7077] = 5.39792162E+00;
  COFD[7078] = -4.42987859E-01;
  COFD[7079] = 1.75002253E-02;
  COFD[7080] = -2.26247547E+01;
  COFD[7081] = 5.49685743E+00;
  COFD[7082] = -4.61237933E-01;
  COFD[7083] = 1.85069626E-02;
  COFD[7084] = -2.26367984E+01;
  COFD[7085] = 5.49685743E+00;
  COFD[7086] = -4.61237933E-01;
  COFD[7087] = 1.85069626E-02;
  COFD[7088] = -2.11513700E+01;
  COFD[7089] = 4.61826518E+00;
  COFD[7090] = -3.15802915E-01;
  COFD[7091] = 1.09590086E-02;
  COFD[7092] = -2.28106743E+01;
  COFD[7093] = 5.44605759E+00;
  COFD[7094] = -4.51812605E-01;
  COFD[7095] = 1.79852826E-02;
  COFD[7096] = -2.28183257E+01;
  COFD[7097] = 5.44605759E+00;
  COFD[7098] = -4.51812605E-01;
  COFD[7099] = 1.79852826E-02;
  COFD[7100] = -2.28257297E+01;
  COFD[7101] = 5.44605759E+00;
  COFD[7102] = -4.51812605E-01;
  COFD[7103] = 1.79852826E-02;
  COFD[7104] = -2.23065352E+01;
  COFD[7105] = 5.05640142E+00;
  COFD[7106] = -3.85296567E-01;
  COFD[7107] = 1.44694051E-02;
  COFD[7108] = -2.23016666E+01;
  COFD[7109] = 5.05640142E+00;
  COFD[7110] = -3.85296567E-01;
  COFD[7111] = 1.44694051E-02;
  COFD[7112] = -2.23067545E+01;
  COFD[7113] = 5.05640142E+00;
  COFD[7114] = -3.85296567E-01;
  COFD[7115] = 1.44694051E-02;
  COFD[7116] = -2.23117124E+01;
  COFD[7117] = 5.05640142E+00;
  COFD[7118] = -3.85296567E-01;
  COFD[7119] = 1.44694051E-02;
  COFD[7120] = -2.14436212E+01;
  COFD[7121] = 4.55836707E+00;
  COFD[7122] = -3.06311508E-01;
  COFD[7123] = 1.04809485E-02;
  COFD[7124] = -2.14472792E+01;
  COFD[7125] = 4.55836707E+00;
  COFD[7126] = -3.06311508E-01;
  COFD[7127] = 1.04809485E-02;
  COFD[7128] = -2.13628187E+01;
  COFD[7129] = 4.50412964E+00;
  COFD[7130] = -2.97874548E-01;
  COFD[7131] = 1.00607279E-02;
  COFD[7132] = -2.08917891E+01;
  COFD[7133] = 4.23399690E+00;
  COFD[7134] = -2.56350936E-01;
  COFD[7135] = 8.00919397E-03;
  COFD[7136] = -2.08083338E+01;
  COFD[7137] = 4.18266871E+00;
  COFD[7138] = -2.48584875E-01;
  COFD[7139] = 7.62924950E-03;
  COFD[7140] = -2.02727638E+01;
  COFD[7141] = 3.89823541E+00;
  COFD[7142] = -2.05588364E-01;
  COFD[7143] = 5.52911322E-03;
  COFD[7144] = -2.02386360E+01;
  COFD[7145] = 3.86907398E+00;
  COFD[7146] = -2.01119985E-01;
  COFD[7147] = 5.30936890E-03;
  COFD[7148] = -1.98479637E+01;
  COFD[7149] = 3.65580620E+00;
  COFD[7150] = -1.68544413E-01;
  COFD[7151] = 3.71085836E-03;
  COFD[7152] = -1.98199427E+01;
  COFD[7153] = 3.62922326E+00;
  COFD[7154] = -1.64547414E-01;
  COFD[7155] = 3.51656961E-03;
  COFD[7156] = -1.93266656E+01;
  COFD[7157] = 3.38034058E+00;
  COFD[7158] = -1.27459665E-01;
  COFD[7159] = 1.72623659E-03;
  COFD[7160] = -1.92968185E+01;
  COFD[7161] = 3.35479985E+00;
  COFD[7162] = -1.23664883E-01;
  COFD[7163] = 1.54362710E-03;
  COFD[7164] = -1.89022776E+01;
  COFD[7165] = 3.15286622E+00;
  COFD[7166] = -9.37357695E-02;
  COFD[7167] = 1.06702410E-04;
  COFD[7168] = -1.88420208E+01;
  COFD[7169] = 3.11676225E+00;
  COFD[7170] = -8.84173079E-02;
  COFD[7171] = -1.47332117E-04;
  COFD[7172] = -1.78005216E+01;
  COFD[7173] = 2.59587009E+00;
  COFD[7174] = -1.18871887E-02;
  COFD[7175] = -3.80613440E-03;
  COFD[7176] = -1.78005216E+01;
  COFD[7177] = 2.59587009E+00;
  COFD[7178] = -1.18871887E-02;
  COFD[7179] = -3.80613440E-03;
  COFD[7180] = -1.78005216E+01;
  COFD[7181] = 2.59587009E+00;
  COFD[7182] = -1.18871887E-02;
  COFD[7183] = -3.80613440E-03;
  COFD[7184] = -1.79711118E+01;
  COFD[7185] = 2.67252841E+00;
  COFD[7186] = -2.32071323E-02;
  COFD[7187] = -3.26353143E-03;
  COFD[7188] = -1.76909689E+01;
  COFD[7189] = 2.52865597E+00;
  COFD[7190] = -1.90423231E-03;
  COFD[7191] = -4.28587976E-03;
  COFD[7192] = -1.76909689E+01;
  COFD[7193] = 2.52865597E+00;
  COFD[7194] = -1.90423231E-03;
  COFD[7195] = -4.28587976E-03;
  COFD[7196] = -1.70509233E+01;
  COFD[7197] = 2.19748999E+00;
  COFD[7198] = 4.66971441E-02;
  COFD[7199] = -6.59908261E-03;
  COFD[7200] = -1.73938638E+01;
  COFD[7201] = 2.37303724E+00;
  COFD[7202] = 2.10369053E-02;
  COFD[7203] = -5.38165037E-03;
  COFD[7204] = -2.08488159E+01;
  COFD[7205] = 5.14859291E+00;
  COFD[7206] = -4.45988615E-01;
  COFD[7207] = 1.90375090E-02;
  COFD[7208] = -1.71023549E+01;
  COFD[7209] = 2.22992608E+00;
  COFD[7210] = 4.19679647E-02;
  COFD[7211] = -6.37519657E-03;
  COFD[7212] = -2.04125771E+01;
  COFD[7213] = 5.57739710E+00;
  COFD[7214] = -4.89778630E-01;
  COFD[7215] = 2.04637924E-02;
  COFD[7216] = -2.01678752E+01;
  COFD[7217] = 5.04165097E+00;
  COFD[7218] = -4.33913744E-01;
  COFD[7219] = 1.85861246E-02;
  COFD[7220] = -2.01934178E+01;
  COFD[7221] = 5.04165097E+00;
  COFD[7222] = -4.33913744E-01;
  COFD[7223] = 1.85861246E-02;
  COFD[7224] = -2.15776504E+01;
  COFD[7225] = 5.35995365E+00;
  COFD[7226] = -4.69587823E-01;
  COFD[7227] = 1.99080702E-02;
  COFD[7228] = -1.66550985E+01;
  COFD[7229] = 4.12489968E+00;
  COFD[7230] = -3.23119338E-01;
  COFD[7231] = 1.41122711E-02;
  COFD[7232] = -1.83523817E+01;
  COFD[7233] = 3.52256138E+00;
  COFD[7234] = -1.48611326E-01;
  COFD[7235] = 2.74505262E-03;
  COFD[7236] = -2.15884087E+01;
  COFD[7237] = 5.35995365E+00;
  COFD[7238] = -4.69587823E-01;
  COFD[7239] = 1.99080702E-02;
  COFD[7240] = -2.15664626E+01;
  COFD[7241] = 5.35995365E+00;
  COFD[7242] = -4.69587823E-01;
  COFD[7243] = 1.99080702E-02;
  COFD[7244] = -2.20524593E+01;
  COFD[7245] = 5.57296554E+00;
  COFD[7246] = -4.89394407E-01;
  COFD[7247] = 2.04545698E-02;
  COFD[7248] = -2.20524593E+01;
  COFD[7249] = 5.57296554E+00;
  COFD[7250] = -4.89394407E-01;
  COFD[7251] = 2.04545698E-02;
  COFD[7252] = -2.20820509E+01;
  COFD[7253] = 5.57296554E+00;
  COFD[7254] = -4.89394407E-01;
  COFD[7255] = 2.04545698E-02;
  COFD[7256] = -2.20571987E+01;
  COFD[7257] = 5.56221277E+00;
  COFD[7258] = -4.88535386E-01;
  COFD[7259] = 2.04385478E-02;
  COFD[7260] = -1.96379077E+01;
  COFD[7261] = 3.94748284E+00;
  COFD[7262] = -2.13105313E-01;
  COFD[7263] = 5.89820150E-03;
  COFD[7264] = -1.96505480E+01;
  COFD[7265] = 3.94748284E+00;
  COFD[7266] = -2.13105313E-01;
  COFD[7267] = 5.89820150E-03;
  COFD[7268] = -2.08139238E+01;
  COFD[7269] = 4.49808464E+00;
  COFD[7270] = -2.96933784E-01;
  COFD[7271] = 1.00138496E-02;
  COFD[7272] = -2.12462427E+01;
  COFD[7273] = 5.25612649E+00;
  COFD[7274] = -4.57885944E-01;
  COFD[7275] = 1.94706895E-02;
  COFD[7276] = -2.26428111E+01;
  COFD[7277] = 5.43854589E+00;
  COFD[7278] = -4.50460433E-01;
  COFD[7279] = 1.79115741E-02;
  COFD[7280] = -2.26391595E+01;
  COFD[7281] = 5.54906697E+00;
  COFD[7282] = -4.72198999E-01;
  COFD[7283] = 1.91488843E-02;
  COFD[7284] = -2.26535978E+01;
  COFD[7285] = 5.54906697E+00;
  COFD[7286] = -4.72198999E-01;
  COFD[7287] = 1.91488843E-02;
  COFD[7288] = -2.22712203E+01;
  COFD[7289] = 5.27184216E+00;
  COFD[7290] = -4.21373345E-01;
  COFD[7291] = 1.63542609E-02;
  COFD[7292] = -2.25658144E+01;
  COFD[7293] = 5.40653540E+00;
  COFD[7294] = -4.44612351E-01;
  COFD[7295] = 1.75906515E-02;
  COFD[7296] = -2.25784310E+01;
  COFD[7297] = 5.40653540E+00;
  COFD[7298] = -4.44612351E-01;
  COFD[7299] = 1.75906515E-02;
  COFD[7300] = -2.07454253E+01;
  COFD[7301] = 4.37720767E+00;
  COFD[7302] = -2.78259024E-01;
  COFD[7303] = 9.08774918E-03;
  COFD[7304] = -2.27264067E+01;
  COFD[7305] = 5.34358207E+00;
  COFD[7306] = -4.33525531E-01;
  COFD[7307] = 1.69942087E-02;
  COFD[7308] = -2.27345210E+01;
  COFD[7309] = 5.34358207E+00;
  COFD[7310] = -4.33525531E-01;
  COFD[7311] = 1.69942087E-02;
  COFD[7312] = -2.27423803E+01;
  COFD[7313] = 5.34358207E+00;
  COFD[7314] = -4.33525531E-01;
  COFD[7315] = 1.69942087E-02;
  COFD[7316] = -2.19668378E+01;
  COFD[7317] = 4.84253971E+00;
  COFD[7318] = -3.51393460E-01;
  COFD[7319] = 1.27562727E-02;
  COFD[7320] = -2.19616149E+01;
  COFD[7321] = 4.84253971E+00;
  COFD[7322] = -3.51393460E-01;
  COFD[7323] = 1.27562727E-02;
  COFD[7324] = -2.19670732E+01;
  COFD[7325] = 4.84253971E+00;
  COFD[7326] = -3.51393460E-01;
  COFD[7327] = 1.27562727E-02;
  COFD[7328] = -2.19723959E+01;
  COFD[7329] = 4.84253971E+00;
  COFD[7330] = -3.51393460E-01;
  COFD[7331] = 1.27562727E-02;
  COFD[7332] = -2.09926096E+01;
  COFD[7333] = 4.29644275E+00;
  COFD[7334] = -2.65881077E-01;
  COFD[7335] = 8.47752275E-03;
  COFD[7336] = -2.09965707E+01;
  COFD[7337] = 4.29644275E+00;
  COFD[7338] = -2.65881077E-01;
  COFD[7339] = 8.47752275E-03;
  COFD[7340] = -2.08917891E+01;
  COFD[7341] = 4.23399690E+00;
  COFD[7342] = -2.56350936E-01;
  COFD[7343] = 8.00919397E-03;
  COFD[7344] = -2.02931537E+01;
  COFD[7345] = 3.90905923E+00;
  COFD[7346] = -2.07240428E-01;
  COFD[7347] = 5.61016042E-03;
  COFD[7348] = -2.02344478E+01;
  COFD[7349] = 3.86852145E+00;
  COFD[7350] = -2.01034989E-01;
  COFD[7351] = 5.30518009E-03;
  COFD[7352] = -1.97882319E+01;
  COFD[7353] = 3.62109503E+00;
  COFD[7354] = -1.63328103E-01;
  COFD[7355] = 3.45738977E-03;
  COFD[7356] = -1.97271976E+01;
  COFD[7357] = 3.58054547E+00;
  COFD[7358] = -1.57260781E-01;
  COFD[7359] = 3.16341133E-03;
  COFD[7360] = -1.91738684E+01;
  COFD[7361] = 3.29927367E+00;
  COFD[7362] = -1.15421965E-01;
  COFD[7363] = 1.14722453E-03;
  COFD[7364] = -1.91414895E+01;
  COFD[7365] = 3.27124232E+00;
  COFD[7366] = -1.11264111E-01;
  COFD[7367] = 9.47365002E-04;
  COFD[7368] = -1.86224107E+01;
  COFD[7369] = 3.01293116E+00;
  COFD[7370] = -7.31811485E-02;
  COFD[7371] = -8.74503577E-04;
  COFD[7372] = -1.85739749E+01;
  COFD[7373] = 2.97960589E+00;
  COFD[7374] = -6.82975765E-02;
  COFD[7375] = -1.10754786E-03;
  COFD[7376] = -1.80237996E+01;
  COFD[7377] = 2.70981781E+00;
  COFD[7378] = -2.87009191E-02;
  COFD[7379] = -3.00031484E-03;
  COFD[7380] = -1.79473979E+01;
  COFD[7381] = 2.66651767E+00;
  COFD[7382] = -2.23220307E-02;
  COFD[7383] = -3.30588605E-03;
  COFD[7384] = -1.71013716E+01;
  COFD[7385] = 2.22992608E+00;
  COFD[7386] = 4.19679647E-02;
  COFD[7387] = -6.37519657E-03;
  COFD[7388] = -1.71013716E+01;
  COFD[7389] = 2.22992608E+00;
  COFD[7390] = 4.19679647E-02;
  COFD[7391] = -6.37519657E-03;
  COFD[7392] = -1.71013716E+01;
  COFD[7393] = 2.22992608E+00;
  COFD[7394] = 4.19679647E-02;
  COFD[7395] = -6.37519657E-03;
  COFD[7396] = -1.72678897E+01;
  COFD[7397] = 2.30401734E+00;
  COFD[7398] = 3.11443222E-02;
  COFD[7399] = -5.86207495E-03;
  COFD[7400] = -1.69703233E+01;
  COFD[7401] = 2.15337734E+00;
  COFD[7402] = 5.31165264E-02;
  COFD[7403] = -6.90242414E-03;
  COFD[7404] = -1.69703233E+01;
  COFD[7405] = 2.15337734E+00;
  COFD[7406] = 5.31165264E-02;
  COFD[7407] = -6.90242414E-03;
  COFD[7408] = -1.62220084E+01;
  COFD[7409] = 1.77893537E+00;
  COFD[7410] = 1.07314353E-01;
  COFD[7411] = -9.45375635E-03;
  COFD[7412] = -1.66106763E+01;
  COFD[7413] = 1.97256518E+00;
  COFD[7414] = 7.93547823E-02;
  COFD[7415] = -8.14046199E-03;
  COFD[7416] = -2.12157081E+01;
  COFD[7417] = 5.24766160E+00;
  COFD[7418] = -4.56882620E-01;
  COFD[7419] = 1.94309393E-02;
  COFD[7420] = -1.69925821E+01;
  COFD[7421] = 2.16947571E+00;
  COFD[7422] = 5.07757587E-02;
  COFD[7423] = -6.79188381E-03;
  COFD[7424] = -2.04804861E+01;
  COFD[7425] = 5.58854463E+00;
  COFD[7426] = -4.90844442E-01;
  COFD[7427] = 2.04953696E-02;
  COFD[7428] = -2.02500061E+01;
  COFD[7429] = 5.06040254E+00;
  COFD[7430] = -4.36131707E-01;
  COFD[7431] = 1.86738271E-02;
  COFD[7432] = -2.02755984E+01;
  COFD[7433] = 5.06040254E+00;
  COFD[7434] = -4.36131707E-01;
  COFD[7435] = 1.86738271E-02;
  COFD[7436] = -2.16319557E+01;
  COFD[7437] = 5.36662551E+00;
  COFD[7438] = -4.70010078E-01;
  COFD[7439] = 1.99083076E-02;
  COFD[7440] = -1.67231563E+01;
  COFD[7441] = 4.13947631E+00;
  COFD[7442] = -3.24881593E-01;
  COFD[7443] = 1.41834423E-02;
  COFD[7444] = -1.82597110E+01;
  COFD[7445] = 3.46551126E+00;
  COFD[7446] = -1.40122736E-01;
  COFD[7447] = 2.33569887E-03;
  COFD[7448] = -2.16427504E+01;
  COFD[7449] = 5.36662551E+00;
  COFD[7450] = -4.70010078E-01;
  COFD[7451] = 1.99083076E-02;
  COFD[7452] = -2.16207309E+01;
  COFD[7453] = 5.36662551E+00;
  COFD[7454] = -4.70010078E-01;
  COFD[7455] = 1.99083076E-02;
  COFD[7456] = -2.21137255E+01;
  COFD[7457] = 5.58321831E+00;
  COFD[7458] = -4.90326754E-01;
  COFD[7459] = 2.04795763E-02;
  COFD[7460] = -2.21137255E+01;
  COFD[7461] = 5.58321831E+00;
  COFD[7462] = -4.90326754E-01;
  COFD[7463] = 2.04795763E-02;
  COFD[7464] = -2.21433687E+01;
  COFD[7465] = 5.58321831E+00;
  COFD[7466] = -4.90326754E-01;
  COFD[7467] = 2.04795763E-02;
  COFD[7468] = -2.21157538E+01;
  COFD[7469] = 5.57102296E+00;
  COFD[7470] = -4.89236974E-01;
  COFD[7471] = 2.04514674E-02;
  COFD[7472] = -1.95761070E+01;
  COFD[7473] = 3.90427760E+00;
  COFD[7474] = -2.06510536E-01;
  COFD[7475] = 5.57435129E-03;
  COFD[7476] = -1.95887863E+01;
  COFD[7477] = 3.90427760E+00;
  COFD[7478] = -2.06510536E-01;
  COFD[7479] = 5.57435129E-03;
  COFD[7480] = -2.07654434E+01;
  COFD[7481] = 4.46038299E+00;
  COFD[7482] = -2.91070190E-01;
  COFD[7483] = 9.72188349E-03;
  COFD[7484] = -2.13358402E+01;
  COFD[7485] = 5.27837455E+00;
  COFD[7486] = -4.60532753E-01;
  COFD[7487] = 1.95759584E-02;
  COFD[7488] = -2.26478344E+01;
  COFD[7489] = 5.42345219E+00;
  COFD[7490] = -4.47736318E-01;
  COFD[7491] = 1.77629965E-02;
  COFD[7492] = -2.26508216E+01;
  COFD[7493] = 5.53769414E+00;
  COFD[7494] = -4.70025640E-01;
  COFD[7495] = 1.90268960E-02;
  COFD[7496] = -2.26653010E+01;
  COFD[7497] = 5.53769414E+00;
  COFD[7498] = -4.70025640E-01;
  COFD[7499] = 1.90268960E-02;
  COFD[7500] = -2.22685865E+01;
  COFD[7501] = 5.25382325E+00;
  COFD[7502] = -4.18230827E-01;
  COFD[7503] = 1.61861819E-02;
  COFD[7504] = -2.25757448E+01;
  COFD[7505] = 5.39437835E+00;
  COFD[7506] = -4.42315066E-01;
  COFD[7507] = 1.74626754E-02;
  COFD[7508] = -2.25884003E+01;
  COFD[7509] = 5.39437835E+00;
  COFD[7510] = -4.42315066E-01;
  COFD[7511] = 1.74626754E-02;
  COFD[7512] = -2.06859264E+01;
  COFD[7513] = 4.33504652E+00;
  COFD[7514] = -2.71782834E-01;
  COFD[7515] = 8.76792120E-03;
  COFD[7516] = -2.27195890E+01;
  COFD[7517] = 5.32470889E+00;
  COFD[7518] = -4.30280059E-01;
  COFD[7519] = 1.68219189E-02;
  COFD[7520] = -2.27277353E+01;
  COFD[7521] = 5.32470889E+00;
  COFD[7522] = -4.30280059E-01;
  COFD[7523] = 1.68219189E-02;
  COFD[7524] = -2.27356259E+01;
  COFD[7525] = 5.32470889E+00;
  COFD[7526] = -4.30280059E-01;
  COFD[7527] = 1.68219189E-02;
  COFD[7528] = -2.19236852E+01;
  COFD[7529] = 4.80817197E+00;
  COFD[7530] = -3.45980860E-01;
  COFD[7531] = 1.24840141E-02;
  COFD[7532] = -2.19184376E+01;
  COFD[7533] = 4.80817197E+00;
  COFD[7534] = -3.45980860E-01;
  COFD[7535] = 1.24840141E-02;
  COFD[7536] = -2.19239217E+01;
  COFD[7537] = 4.80817197E+00;
  COFD[7538] = -3.45980860E-01;
  COFD[7539] = 1.24840141E-02;
  COFD[7540] = -2.19292698E+01;
  COFD[7541] = 4.80817197E+00;
  COFD[7542] = -3.45980860E-01;
  COFD[7543] = 1.24840141E-02;
  COFD[7544] = -2.09302737E+01;
  COFD[7545] = 4.25424085E+00;
  COFD[7546] = -2.59427864E-01;
  COFD[7547] = 8.16009340E-03;
  COFD[7548] = -2.09342562E+01;
  COFD[7549] = 4.25424085E+00;
  COFD[7550] = -2.59427864E-01;
  COFD[7551] = 8.16009340E-03;
  COFD[7552] = -2.08083338E+01;
  COFD[7553] = 4.18266871E+00;
  COFD[7554] = -2.48584875E-01;
  COFD[7555] = 7.62924950E-03;
  COFD[7556] = -2.02344478E+01;
  COFD[7557] = 3.86852145E+00;
  COFD[7558] = -2.01034989E-01;
  COFD[7559] = 5.30518009E-03;
  COFD[7560] = -2.01796301E+01;
  COFD[7561] = 3.82967324E+00;
  COFD[7562] = -1.95064784E-01;
  COFD[7563] = 5.01116600E-03;
  COFD[7564] = -1.96917958E+01;
  COFD[7565] = 3.56456792E+00;
  COFD[7566] = -1.54874805E-01;
  COFD[7567] = 3.04791137E-03;
  COFD[7568] = -1.96251346E+01;
  COFD[7569] = 3.52173088E+00;
  COFD[7570] = -1.48487612E-01;
  COFD[7571] = 2.73907596E-03;
  COFD[7572] = -1.90776336E+01;
  COFD[7573] = 3.24345155E+00;
  COFD[7574] = -1.07141517E-01;
  COFD[7575] = 7.49045460E-04;
  COFD[7576] = -1.90463199E+01;
  COFD[7577] = 3.21600961E+00;
  COFD[7578] = -1.03071502E-01;
  COFD[7579] = 5.53469152E-04;
  COFD[7580] = -1.84893152E+01;
  COFD[7581] = 2.94155254E+00;
  COFD[7582] = -6.27203102E-02;
  COFD[7583] = -1.37383888E-03;
  COFD[7584] = -1.84374437E+01;
  COFD[7585] = 2.90678117E+00;
  COFD[7586] = -5.76230083E-02;
  COFD[7587] = -1.61734563E-03;
  COFD[7588] = -1.79037102E+01;
  COFD[7589] = 2.64390742E+00;
  COFD[7590] = -1.89931832E-02;
  COFD[7591] = -3.46515203E-03;
  COFD[7592] = -1.78367057E+01;
  COFD[7593] = 2.60473171E+00;
  COFD[7594] = -1.32053501E-02;
  COFD[7595] = -3.74266886E-03;
  COFD[7596] = -1.69915910E+01;
  COFD[7597] = 2.16947571E+00;
  COFD[7598] = 5.07757587E-02;
  COFD[7599] = -6.79188381E-03;
  COFD[7600] = -1.69915910E+01;
  COFD[7601] = 2.16947571E+00;
  COFD[7602] = 5.07757587E-02;
  COFD[7603] = -6.79188381E-03;
  COFD[7604] = -1.69915910E+01;
  COFD[7605] = 2.16947571E+00;
  COFD[7606] = 5.07757587E-02;
  COFD[7607] = -6.79188381E-03;
  COFD[7608] = -1.71625573E+01;
  COFD[7609] = 2.24537755E+00;
  COFD[7610] = 3.97133810E-02;
  COFD[7611] = -6.26838776E-03;
  COFD[7612] = -1.68535845E+01;
  COFD[7613] = 2.08995609E+00;
  COFD[7614] = 6.23355182E-02;
  COFD[7615] = -7.33798008E-03;
  COFD[7616] = -1.68535845E+01;
  COFD[7617] = 2.08995609E+00;
  COFD[7618] = 6.23355182E-02;
  COFD[7619] = -7.33798008E-03;
  COFD[7620] = -1.60780994E+01;
  COFD[7621] = 1.70424385E+00;
  COFD[7622] = 1.18095623E-01;
  COFD[7623] = -9.96103416E-03;
  COFD[7624] = -1.64902853E+01;
  COFD[7625] = 1.90799414E+00;
  COFD[7626] = 8.86853909E-02;
  COFD[7627] = -8.57885629E-03;
  COFD[7628] = -2.13042644E+01;
  COFD[7629] = 5.26942506E+00;
  COFD[7630] = -4.59459767E-01;
  COFD[7631] = 1.95328925E-02;
  COFD[7632] = -1.62450421E+01;
  COFD[7633] = 1.79898308E+00;
  COFD[7634] = 1.04422970E-01;
  COFD[7635] = -9.31788260E-03;
  COFD[7636] = -2.06420448E+01;
  COFD[7637] = 5.61233640E+00;
  COFD[7638] = -4.91245632E-01;
  COFD[7639] = 2.04073252E-02;
  COFD[7640] = -2.05574198E+01;
  COFD[7641] = 5.14795860E+00;
  COFD[7642] = -4.45935789E-01;
  COFD[7643] = 1.90364341E-02;
  COFD[7644] = -2.05835748E+01;
  COFD[7645] = 5.14795860E+00;
  COFD[7646] = -4.45935789E-01;
  COFD[7647] = 1.90364341E-02;
  COFD[7648] = -2.18432468E+01;
  COFD[7649] = 5.40768793E+00;
  COFD[7650] = -4.72942538E-01;
  COFD[7651] = 1.99389038E-02;
  COFD[7652] = -1.70329250E+01;
  COFD[7653] = 4.23969256E+00;
  COFD[7654] = -3.37288904E-01;
  COFD[7655] = 1.46975974E-02;
  COFD[7656] = -1.76500812E+01;
  COFD[7657] = 3.15831209E+00;
  COFD[7658] = -9.45393054E-02;
  COFD[7659] = 1.45090308E-04;
  COFD[7660] = -2.18544613E+01;
  COFD[7661] = 5.40768793E+00;
  COFD[7662] = -4.72942538E-01;
  COFD[7663] = 1.99389038E-02;
  COFD[7664] = -2.18315953E+01;
  COFD[7665] = 5.40768793E+00;
  COFD[7666] = -4.72942538E-01;
  COFD[7667] = 1.99389038E-02;
  COFD[7668] = -2.22894017E+01;
  COFD[7669] = 5.61199715E+00;
  COFD[7670] = -4.91433824E-01;
  COFD[7671] = 2.04245969E-02;
  COFD[7672] = -2.22894017E+01;
  COFD[7673] = 5.61199715E+00;
  COFD[7674] = -4.91433824E-01;
  COFD[7675] = 2.04245969E-02;
  COFD[7676] = -2.23196288E+01;
  COFD[7677] = 5.61199715E+00;
  COFD[7678] = -4.91433824E-01;
  COFD[7679] = 2.04245969E-02;
  COFD[7680] = -2.23089124E+01;
  COFD[7681] = 5.60657745E+00;
  COFD[7682] = -4.91280842E-01;
  COFD[7683] = 2.04393241E-02;
  COFD[7684] = -1.91422179E+01;
  COFD[7685] = 3.66719242E+00;
  COFD[7686] = -1.70260825E-01;
  COFD[7687] = 3.79442136E-03;
  COFD[7688] = -1.91553451E+01;
  COFD[7689] = 3.66719242E+00;
  COFD[7690] = -1.70260825E-01;
  COFD[7691] = 3.79442136E-03;
  COFD[7692] = -2.03091465E+01;
  COFD[7693] = 4.21268497E+00;
  COFD[7694] = -2.53125583E-01;
  COFD[7695] = 7.85139716E-03;
  COFD[7696] = -2.16479635E+01;
  COFD[7697] = 5.36415648E+00;
  COFD[7698] = -4.69836047E-01;
  COFD[7699] = 1.99067039E-02;
  COFD[7700] = -2.25594139E+01;
  COFD[7701] = 5.32923056E+00;
  COFD[7702] = -4.31065031E-01;
  COFD[7703] = 1.68637777E-02;
  COFD[7704] = -2.26655242E+01;
  COFD[7705] = 5.49155307E+00;
  COFD[7706] = -4.60156593E-01;
  COFD[7707] = 1.84445999E-02;
  COFD[7708] = -2.26804745E+01;
  COFD[7709] = 5.49155307E+00;
  COFD[7710] = -4.60156593E-01;
  COFD[7711] = 1.84445999E-02;
  COFD[7712] = -2.21166766E+01;
  COFD[7713] = 5.13519978E+00;
  COFD[7714] = -3.98132825E-01;
  COFD[7715] = 1.51293092E-02;
  COFD[7716] = -2.24320929E+01;
  COFD[7717] = 5.27966625E+00;
  COFD[7718] = -4.22746172E-01;
  COFD[7719] = 1.64279811E-02;
  COFD[7720] = -2.24451961E+01;
  COFD[7721] = 5.27966625E+00;
  COFD[7722] = -4.22746172E-01;
  COFD[7723] = 1.64279811E-02;
  COFD[7724] = -2.01683835E+01;
  COFD[7725] = 4.06006798E+00;
  COFD[7726] = -2.30066357E-01;
  COFD[7727] = 6.72473245E-03;
  COFD[7728] = -2.25883284E+01;
  COFD[7729] = 5.21373152E+00;
  COFD[7730] = -4.11240905E-01;
  COFD[7731] = 1.58129026E-02;
  COFD[7732] = -2.25968450E+01;
  COFD[7733] = 5.21373152E+00;
  COFD[7734] = -4.11240905E-01;
  COFD[7735] = 1.58129026E-02;
  COFD[7736] = -2.26051005E+01;
  COFD[7737] = 5.21373152E+00;
  COFD[7738] = -4.11240905E-01;
  COFD[7739] = 1.58129026E-02;
  COFD[7740] = -2.16264924E+01;
  COFD[7741] = 4.62444880E+00;
  COFD[7742] = -3.16789032E-01;
  COFD[7743] = 1.10089656E-02;
  COFD[7744] = -2.16209549E+01;
  COFD[7745] = 4.62444880E+00;
  COFD[7746] = -3.16789032E-01;
  COFD[7747] = 1.10089656E-02;
  COFD[7748] = -2.16267421E+01;
  COFD[7749] = 4.62444880E+00;
  COFD[7750] = -3.16789032E-01;
  COFD[7751] = 1.10089656E-02;
  COFD[7752] = -2.16323892E+01;
  COFD[7753] = 4.62444880E+00;
  COFD[7754] = -3.16789032E-01;
  COFD[7755] = 1.10089656E-02;
  COFD[7756] = -2.03719013E+01;
  COFD[7757] = 3.96005658E+00;
  COFD[7758] = -2.15023838E-01;
  COFD[7759] = 5.99243668E-03;
  COFD[7760] = -2.03761364E+01;
  COFD[7761] = 3.96005658E+00;
  COFD[7762] = -2.15023838E-01;
  COFD[7763] = 5.99243668E-03;
  COFD[7764] = -2.02727638E+01;
  COFD[7765] = 3.89823541E+00;
  COFD[7766] = -2.05588364E-01;
  COFD[7767] = 5.52911322E-03;
  COFD[7768] = -1.97882319E+01;
  COFD[7769] = 3.62109503E+00;
  COFD[7770] = -1.63328103E-01;
  COFD[7771] = 3.45738977E-03;
  COFD[7772] = -1.96917958E+01;
  COFD[7773] = 3.56456792E+00;
  COFD[7774] = -1.54874805E-01;
  COFD[7775] = 3.04791137E-03;
  COFD[7776] = -1.90788962E+01;
  COFD[7777] = 3.24795923E+00;
  COFD[7778] = -1.07810281E-01;
  COFD[7779] = 7.81209780E-04;
  COFD[7780] = -1.90199083E+01;
  COFD[7781] = 3.20887189E+00;
  COFD[7782] = -1.02013693E-01;
  COFD[7783] = 5.02708619E-04;
  COFD[7784] = -1.83659502E+01;
  COFD[7785] = 2.88571035E+00;
  COFD[7786] = -5.45325785E-02;
  COFD[7787] = -1.76508613E-03;
  COFD[7788] = -1.83129528E+01;
  COFD[7789] = 2.84904319E+00;
  COFD[7790] = -4.91596971E-02;
  COFD[7791] = -2.02153200E-03;
  COFD[7792] = -1.77237799E+01;
  COFD[7793] = 2.55843008E+00;
  COFD[7794] = -6.32267950E-03;
  COFD[7795] = -4.07387397E-03;
  COFD[7796] = -1.76962230E+01;
  COFD[7797] = 2.53412632E+00;
  COFD[7798] = -2.71561927E-03;
  COFD[7799] = -4.24696836E-03;
  COFD[7800] = -1.72790079E+01;
  COFD[7801] = 2.32181806E+00;
  COFD[7802] = 2.85392164E-02;
  COFD[7803] = -5.73831066E-03;
  COFD[7804] = -1.72112324E+01;
  COFD[7805] = 2.28271761E+00;
  COFD[7806] = 3.42599989E-02;
  COFD[7807] = -6.01003337E-03;
  COFD[7808] = -1.62439550E+01;
  COFD[7809] = 1.79898308E+00;
  COFD[7810] = 1.04422970E-01;
  COFD[7811] = -9.31788260E-03;
  COFD[7812] = -1.62439550E+01;
  COFD[7813] = 1.79898308E+00;
  COFD[7814] = 1.04422970E-01;
  COFD[7815] = -9.31788260E-03;
  COFD[7816] = -1.62439550E+01;
  COFD[7817] = 1.79898308E+00;
  COFD[7818] = 1.04422970E-01;
  COFD[7819] = -9.31788260E-03;
  COFD[7820] = -1.64316331E+01;
  COFD[7821] = 1.88148066E+00;
  COFD[7822] = 9.25151744E-02;
  COFD[7823] = -8.75875844E-03;
  COFD[7824] = -1.60744402E+01;
  COFD[7825] = 1.70515393E+00;
  COFD[7826] = 1.17964458E-01;
  COFD[7827] = -9.95487344E-03;
  COFD[7828] = -1.60744402E+01;
  COFD[7829] = 1.70515393E+00;
  COFD[7830] = 1.17964458E-01;
  COFD[7831] = -9.95487344E-03;
  COFD[7832] = -1.52506105E+01;
  COFD[7833] = 1.30025367E+00;
  COFD[7834] = 1.76119607E-01;
  COFD[7835] = -1.26754370E-02;
  COFD[7836] = -1.56831472E+01;
  COFD[7837] = 1.51210139E+00;
  COFD[7838] = 1.45705555E-01;
  COFD[7839] = -1.12527582E-02;
  COFD[7840] = -2.16312330E+01;
  COFD[7841] = 5.36160575E+00;
  COFD[7842] = -4.69678973E-01;
  COFD[7843] = 1.99069834E-02;
  COFD[7844] = -1.61488722E+01;
  COFD[7845] = 1.74526374E+00;
  COFD[7846] = 1.12174865E-01;
  COFD[7847] = -9.68245016E-03;
  COFD[7848] = -2.06825052E+01;
  COFD[7849] = 5.61207329E+00;
  COFD[7850] = -4.90835136E-01;
  COFD[7851] = 2.03746959E-02;
  COFD[7852] = -2.06088568E+01;
  COFD[7853] = 5.15356304E+00;
  COFD[7854] = -4.46375755E-01;
  COFD[7855] = 1.90436659E-02;
  COFD[7856] = -2.06350501E+01;
  COFD[7857] = 5.15356304E+00;
  COFD[7858] = -4.46375755E-01;
  COFD[7859] = 1.90436659E-02;
  COFD[7860] = -2.18914378E+01;
  COFD[7861] = 5.41245931E+00;
  COFD[7862] = -4.73255987E-01;
  COFD[7863] = 1.99402041E-02;
  COFD[7864] = -1.70961769E+01;
  COFD[7865] = 4.25191475E+00;
  COFD[7866] = -3.38783176E-01;
  COFD[7867] = 1.47586658E-02;
  COFD[7868] = -1.75950091E+01;
  COFD[7869] = 3.11831756E+00;
  COFD[7870] = -8.86463231E-02;
  COFD[7871] = -1.36388384E-04;
  COFD[7872] = -2.19026814E+01;
  COFD[7873] = 5.41245931E+00;
  COFD[7874] = -4.73255987E-01;
  COFD[7875] = 1.99402041E-02;
  COFD[7876] = -2.18797567E+01;
  COFD[7877] = 5.41245931E+00;
  COFD[7878] = -4.73255987E-01;
  COFD[7879] = 1.99402041E-02;
  COFD[7880] = -2.23258695E+01;
  COFD[7881] = 5.61225559E+00;
  COFD[7882] = -4.91099448E-01;
  COFD[7883] = 2.03956433E-02;
  COFD[7884] = -2.23258695E+01;
  COFD[7885] = 5.61225559E+00;
  COFD[7886] = -4.91099448E-01;
  COFD[7887] = 2.03956433E-02;
  COFD[7888] = -2.23561362E+01;
  COFD[7889] = 5.61225559E+00;
  COFD[7890] = -4.91099448E-01;
  COFD[7891] = 2.03956433E-02;
  COFD[7892] = -2.23528909E+01;
  COFD[7893] = 5.60999262E+00;
  COFD[7894] = -4.91398509E-01;
  COFD[7895] = 2.04317928E-02;
  COFD[7896] = -1.90919812E+01;
  COFD[7897] = 3.62969668E+00;
  COFD[7898] = -1.64618442E-01;
  COFD[7899] = 3.52001735E-03;
  COFD[7900] = -1.91051394E+01;
  COFD[7901] = 3.62969668E+00;
  COFD[7902] = -1.64618442E-01;
  COFD[7903] = 3.52001735E-03;
  COFD[7904] = -2.02590152E+01;
  COFD[7905] = 4.17520083E+00;
  COFD[7906] = -2.47455328E-01;
  COFD[7907] = 7.57399683E-03;
  COFD[7908] = -2.16968369E+01;
  COFD[7909] = 5.36943260E+00;
  COFD[7910] = -4.70208052E-01;
  COFD[7911] = 1.99101421E-02;
  COFD[7912] = -2.25658179E+01;
  COFD[7913] = 5.31570530E+00;
  COFD[7914] = -4.28739621E-01;
  COFD[7915] = 1.67404194E-02;
  COFD[7916] = -2.26813649E+01;
  COFD[7917] = 5.48250826E+00;
  COFD[7918] = -4.58439553E-01;
  COFD[7919] = 1.83484716E-02;
  COFD[7920] = -2.26963476E+01;
  COFD[7921] = 5.48250826E+00;
  COFD[7922] = -4.58439553E-01;
  COFD[7923] = 1.83484716E-02;
  COFD[7924] = -2.21119557E+01;
  COFD[7925] = 5.11715687E+00;
  COFD[7926] = -3.95151704E-01;
  COFD[7927] = 1.49747613E-02;
  COFD[7928] = -2.24383688E+01;
  COFD[7929] = 5.26665057E+00;
  COFD[7930] = -4.20468031E-01;
  COFD[7931] = 1.63058218E-02;
  COFD[7932] = -2.24515029E+01;
  COFD[7933] = 5.26665057E+00;
  COFD[7934] = -4.20468031E-01;
  COFD[7935] = 1.63058218E-02;
  COFD[7936] = -2.01155328E+01;
  COFD[7937] = 4.02171524E+00;
  COFD[7938] = -2.24290198E-01;
  COFD[7939] = 6.44316390E-03;
  COFD[7940] = -2.25890090E+01;
  COFD[7941] = 5.19903697E+00;
  COFD[7942] = -4.08754051E-01;
  COFD[7943] = 1.56823434E-02;
  COFD[7944] = -2.25975515E+01;
  COFD[7945] = 5.19903697E+00;
  COFD[7946] = -4.08754051E-01;
  COFD[7947] = 1.56823434E-02;
  COFD[7948] = -2.26058324E+01;
  COFD[7949] = 5.19903697E+00;
  COFD[7950] = -4.08754051E-01;
  COFD[7951] = 1.56823434E-02;
  COFD[7952] = -2.16101719E+01;
  COFD[7953] = 4.60241958E+00;
  COFD[7954] = -3.13266142E-01;
  COFD[7955] = 1.08303161E-02;
  COFD[7956] = -2.16046139E+01;
  COFD[7957] = 4.60241958E+00;
  COFD[7958] = -3.13266142E-01;
  COFD[7959] = 1.08303161E-02;
  COFD[7960] = -2.16104224E+01;
  COFD[7961] = 4.60241958E+00;
  COFD[7962] = -3.13266142E-01;
  COFD[7963] = 1.08303161E-02;
  COFD[7964] = -2.16160906E+01;
  COFD[7965] = 4.60241958E+00;
  COFD[7966] = -3.13266142E-01;
  COFD[7967] = 1.08303161E-02;
  COFD[7968] = -2.03315554E+01;
  COFD[7969] = 3.92807904E+00;
  COFD[7970] = -2.10143114E-01;
  COFD[7971] = 5.75266218E-03;
  COFD[7972] = -2.03358084E+01;
  COFD[7973] = 3.92807904E+00;
  COFD[7974] = -2.10143114E-01;
  COFD[7975] = 5.75266218E-03;
  COFD[7976] = -2.02386360E+01;
  COFD[7977] = 3.86907398E+00;
  COFD[7978] = -2.01119985E-01;
  COFD[7979] = 5.30936890E-03;
  COFD[7980] = -1.97271976E+01;
  COFD[7981] = 3.58054547E+00;
  COFD[7982] = -1.57260781E-01;
  COFD[7983] = 3.16341133E-03;
  COFD[7984] = -1.96251346E+01;
  COFD[7985] = 3.52173088E+00;
  COFD[7986] = -1.48487612E-01;
  COFD[7987] = 2.73907596E-03;
  COFD[7988] = -1.90199083E+01;
  COFD[7989] = 3.20887189E+00;
  COFD[7990] = -1.02013693E-01;
  COFD[7991] = 5.02708619E-04;
  COFD[7992] = -1.89650054E+01;
  COFD[7993] = 3.17181253E+00;
  COFD[7994] = -9.65320066E-02;
  COFD[7995] = 2.40309925E-04;
  COFD[7996] = -1.82763647E+01;
  COFD[7997] = 2.83363069E+00;
  COFD[7998] = -4.69009938E-02;
  COFD[7999] = -2.12932795E-03;
  COFD[8000] = -1.82247102E+01;
  COFD[8001] = 2.79757221E+00;
  COFD[8002] = -4.16050900E-02;
  COFD[8003] = -2.38255791E-03;
  COFD[8004] = -1.76682898E+01;
  COFD[8005] = 2.52103069E+00;
  COFD[8006] = -7.74191076E-04;
  COFD[8007] = -4.34004563E-03;
  COFD[8008] = -1.76365445E+01;
  COFD[8009] = 2.49506662E+00;
  COFD[8010] = 3.06241345E-03;
  COFD[8011] = -4.52364271E-03;
  COFD[8012] = -1.72080641E+01;
  COFD[8013] = 2.27827331E+00;
  COFD[8014] = 3.49093006E-02;
  COFD[8015] = -6.04080004E-03;
  COFD[8016] = -1.71435915E+01;
  COFD[8017] = 2.24077538E+00;
  COFD[8018] = 4.03852119E-02;
  COFD[8019] = -6.30020799E-03;
  COFD[8020] = -1.61477780E+01;
  COFD[8021] = 1.74526374E+00;
  COFD[8022] = 1.12174865E-01;
  COFD[8023] = -9.68245016E-03;
  COFD[8024] = -1.61477780E+01;
  COFD[8025] = 1.74526374E+00;
  COFD[8026] = 1.12174865E-01;
  COFD[8027] = -9.68245016E-03;
  COFD[8028] = -1.61477780E+01;
  COFD[8029] = 1.74526374E+00;
  COFD[8030] = 1.12174865E-01;
  COFD[8031] = -9.68245016E-03;
  COFD[8032] = -1.63505072E+01;
  COFD[8033] = 1.83434099E+00;
  COFD[8034] = 9.93214060E-02;
  COFD[8035] = -9.07837035E-03;
  COFD[8036] = -1.59845042E+01;
  COFD[8037] = 1.65425119E+00;
  COFD[8038] = 1.25289488E-01;
  COFD[8039] = -1.02981417E-02;
  COFD[8040] = -1.59845042E+01;
  COFD[8041] = 1.65425119E+00;
  COFD[8042] = 1.25289488E-01;
  COFD[8043] = -1.02981417E-02;
  COFD[8044] = -1.51554732E+01;
  COFD[8045] = 1.24747772E+00;
  COFD[8046] = 1.83682020E-01;
  COFD[8047] = -1.30286208E-02;
  COFD[8048] = -1.55886121E+01;
  COFD[8049] = 1.45929070E+00;
  COFD[8050] = 1.53302110E-01;
  COFD[8051] = -1.16088255E-02;
  COFD[8052] = -2.16795672E+01;
  COFD[8053] = 5.36659793E+00;
  COFD[8054] = -4.70008133E-01;
  COFD[8055] = 1.99082896E-02;
  COFD[8056] = -1.54004377E+01;
  COFD[8057] = 1.38485345E+00;
  COFD[8058] = 1.63989484E-01;
  COFD[8059] = -1.21088577E-02;
  COFD[8060] = -2.07168035E+01;
  COFD[8061] = 5.58797624E+00;
  COFD[8062] = -4.84623564E-01;
  COFD[8063] = 1.99817352E-02;
  COFD[8064] = -2.08840874E+01;
  COFD[8065] = 5.23394577E+00;
  COFD[8066] = -4.55294957E-01;
  COFD[8067] = 1.93696950E-02;
  COFD[8068] = -2.09107212E+01;
  COFD[8069] = 5.23394577E+00;
  COFD[8070] = -4.55294957E-01;
  COFD[8071] = 1.93696950E-02;
  COFD[8072] = -2.21426228E+01;
  COFD[8073] = 5.47842731E+00;
  COFD[8074] = -4.79952894E-01;
  COFD[8075] = 2.01568406E-02;
  COFD[8076] = -1.73560950E+01;
  COFD[8077] = 4.33584314E+00;
  COFD[8078] = -3.48938603E-01;
  COFD[8079] = 1.51686902E-02;
  COFD[8080] = -1.68531525E+01;
  COFD[8081] = 2.76314344E+00;
  COFD[8082] = -3.65464735E-02;
  COFD[8083] = -2.62462500E-03;
  COFD[8084] = -2.21542057E+01;
  COFD[8085] = 5.47842731E+00;
  COFD[8086] = -4.79952894E-01;
  COFD[8087] = 2.01568406E-02;
  COFD[8088] = -2.21305975E+01;
  COFD[8089] = 5.47842731E+00;
  COFD[8090] = -4.79952894E-01;
  COFD[8091] = 2.01568406E-02;
  COFD[8092] = -2.23654179E+01;
  COFD[8093] = 5.58969231E+00;
  COFD[8094] = -4.85146102E-01;
  COFD[8095] = 2.00165025E-02;
  COFD[8096] = -2.23654179E+01;
  COFD[8097] = 5.58969231E+00;
  COFD[8098] = -4.85146102E-01;
  COFD[8099] = 2.00165025E-02;
  COFD[8100] = -2.23961398E+01;
  COFD[8101] = 5.58969231E+00;
  COFD[8102] = -4.85146102E-01;
  COFD[8103] = 2.00165025E-02;
  COFD[8104] = -2.24147233E+01;
  COFD[8105] = 5.59714923E+00;
  COFD[8106] = -4.86899964E-01;
  COFD[8107] = 2.01242645E-02;
  COFD[8108] = -1.85269876E+01;
  COFD[8109] = 3.34746301E+00;
  COFD[8110] = -1.22575165E-01;
  COFD[8111] = 1.49120224E-03;
  COFD[8112] = -1.85405054E+01;
  COFD[8113] = 3.34746301E+00;
  COFD[8114] = -1.22575165E-01;
  COFD[8115] = 1.49120224E-03;
  COFD[8116] = -1.97604342E+01;
  COFD[8117] = 3.91924248E+00;
  COFD[8118] = -2.08794500E-01;
  COFD[8119] = 5.68642902E-03;
  COFD[8120] = -2.18744947E+01;
  COFD[8121] = 5.40581593E+00;
  COFD[8122] = -4.72804333E-01;
  COFD[8123] = 1.99370903E-02;
  COFD[8124] = -2.24455334E+01;
  COFD[8125] = 5.21716989E+00;
  COFD[8126] = -4.11825254E-01;
  COFD[8127] = 1.58436458E-02;
  COFD[8128] = -2.26097243E+01;
  COFD[8129] = 5.40751776E+00;
  COFD[8130] = -4.44796499E-01;
  COFD[8131] = 1.76008889E-02;
  COFD[8132] = -2.26250831E+01;
  COFD[8133] = 5.40751776E+00;
  COFD[8134] = -4.44796499E-01;
  COFD[8135] = 1.76008889E-02;
  COFD[8136] = -2.18596576E+01;
  COFD[8137] = 4.96464859E+00;
  COFD[8138] = -3.70657753E-01;
  COFD[8139] = 1.37267014E-02;
  COFD[8140] = -2.23077679E+01;
  COFD[8141] = 5.16629594E+00;
  COFD[8142] = -4.03322392E-01;
  COFD[8143] = 1.53998221E-02;
  COFD[8144] = -2.23212614E+01;
  COFD[8145] = 5.16629594E+00;
  COFD[8146] = -4.03322392E-01;
  COFD[8147] = 1.53998221E-02;
  COFD[8148] = -1.97003035E+01;
  COFD[8149] = 3.79996103E+00;
  COFD[8150] = -1.90497694E-01;
  COFD[8151] = 4.78603172E-03;
  COFD[8152] = -2.23956511E+01;
  COFD[8153] = 5.07018801E+00;
  COFD[8154] = -3.87535402E-01;
  COFD[8155] = 1.45842225E-02;
  COFD[8156] = -2.24044966E+01;
  COFD[8157] = 5.07018801E+00;
  COFD[8158] = -3.87535402E-01;
  COFD[8159] = 1.45842225E-02;
  COFD[8160] = -2.24130765E+01;
  COFD[8161] = 5.07018801E+00;
  COFD[8162] = -3.87535402E-01;
  COFD[8163] = 1.45842225E-02;
  COFD[8164] = -2.12774421E+01;
  COFD[8165] = 4.41372939E+00;
  COFD[8166] = -2.83873783E-01;
  COFD[8167] = 9.36532569E-03;
  COFD[8168] = -2.12716426E+01;
  COFD[8169] = 4.41372939E+00;
  COFD[8170] = -2.83873783E-01;
  COFD[8171] = 9.36532569E-03;
  COFD[8172] = -2.12777037E+01;
  COFD[8173] = 4.41372939E+00;
  COFD[8174] = -2.83873783E-01;
  COFD[8175] = 9.36532569E-03;
  COFD[8176] = -2.12836213E+01;
  COFD[8177] = 4.41372939E+00;
  COFD[8178] = -2.83873783E-01;
  COFD[8179] = 9.36532569E-03;
  COFD[8180] = -1.99572085E+01;
  COFD[8181] = 3.72188482E+00;
  COFD[8182] = -1.78555760E-01;
  COFD[8183] = 4.19961806E-03;
  COFD[8184] = -1.99616752E+01;
  COFD[8185] = 3.72188482E+00;
  COFD[8186] = -1.78555760E-01;
  COFD[8187] = 4.19961806E-03;
  COFD[8188] = -1.98479637E+01;
  COFD[8189] = 3.65580620E+00;
  COFD[8190] = -1.68544413E-01;
  COFD[8191] = 3.71085836E-03;
  COFD[8192] = -1.91738684E+01;
  COFD[8193] = 3.29927367E+00;
  COFD[8194] = -1.15421965E-01;
  COFD[8195] = 1.14722453E-03;
  COFD[8196] = -1.90776336E+01;
  COFD[8197] = 3.24345155E+00;
  COFD[8198] = -1.07141517E-01;
  COFD[8199] = 7.49045460E-04;
  COFD[8200] = -1.83659502E+01;
  COFD[8201] = 2.88571035E+00;
  COFD[8202] = -5.45325785E-02;
  COFD[8203] = -1.76508613E-03;
  COFD[8204] = -1.82763647E+01;
  COFD[8205] = 2.83363069E+00;
  COFD[8206] = -4.69009938E-02;
  COFD[8207] = -2.12932795E-03;
  COFD[8208] = -1.76386321E+01;
  COFD[8209] = 2.51509845E+00;
  COFD[8210] = 1.02670796E-04;
  COFD[8211] = -4.38201691E-03;
  COFD[8212] = -1.76055419E+01;
  COFD[8213] = 2.48711127E+00;
  COFD[8214] = 4.23730662E-03;
  COFD[8215] = -4.57984365E-03;
  COFD[8216] = -1.70866988E+01;
  COFD[8217] = 2.22837243E+00;
  COFD[8218] = 4.21945850E-02;
  COFD[8219] = -6.38593308E-03;
  COFD[8220] = -1.70480275E+01;
  COFD[8221] = 2.19974886E+00;
  COFD[8222] = 4.63679485E-02;
  COFD[8223] = -6.58350992E-03;
  COFD[8224] = -1.65620353E+01;
  COFD[8225] = 1.95984412E+00;
  COFD[8226] = 8.11931925E-02;
  COFD[8227] = -8.22685123E-03;
  COFD[8228] = -1.64868934E+01;
  COFD[8229] = 1.91809628E+00;
  COFD[8230] = 8.72256197E-02;
  COFD[8231] = -8.51026021E-03;
  COFD[8232] = -1.53992570E+01;
  COFD[8233] = 1.38485345E+00;
  COFD[8234] = 1.63989484E-01;
  COFD[8235] = -1.21088577E-02;
  COFD[8236] = -1.53992570E+01;
  COFD[8237] = 1.38485345E+00;
  COFD[8238] = 1.63989484E-01;
  COFD[8239] = -1.21088577E-02;
  COFD[8240] = -1.53992570E+01;
  COFD[8241] = 1.38485345E+00;
  COFD[8242] = 1.63989484E-01;
  COFD[8243] = -1.21088577E-02;
  COFD[8244] = -1.56095653E+01;
  COFD[8245] = 1.47685497E+00;
  COFD[8246] = 1.50778364E-01;
  COFD[8247] = -1.14906180E-02;
  COFD[8248] = -1.52407610E+01;
  COFD[8249] = 1.29532808E+00;
  COFD[8250] = 1.76825909E-01;
  COFD[8251] = -1.27084392E-02;
  COFD[8252] = -1.52407610E+01;
  COFD[8253] = 1.29532808E+00;
  COFD[8254] = 1.76825909E-01;
  COFD[8255] = -1.27084392E-02;
  COFD[8256] = -1.43889652E+01;
  COFD[8257] = 8.79322917E-01;
  COFD[8258] = 2.36346086E-01;
  COFD[8259] = -1.54836830E-02;
  COFD[8260] = -1.48245663E+01;
  COFD[8261] = 1.09196780E+00;
  COFD[8262] = 2.05935790E-01;
  COFD[8263] = -1.40664564E-02;
  COFD[8264] = -2.18580027E+01;
  COFD[8265] = 5.40322773E+00;
  COFD[8266] = -4.72630192E-01;
  COFD[8267] = 1.99360102E-02;
  COFD[8268] = -1.53464320E+01;
  COFD[8269] = 1.34923135E+00;
  COFD[8270] = 1.69096035E-01;
  COFD[8271] = -1.23472697E-02;
  COFD[8272] = -2.07541880E+01;
  COFD[8273] = 5.58528362E+00;
  COFD[8274] = -4.83934962E-01;
  COFD[8275] = 1.99381553E-02;
  COFD[8276] = -2.09462082E+01;
  COFD[8277] = 5.24344916E+00;
  COFD[8278] = -4.56395528E-01;
  COFD[8279] = 1.94121732E-02;
  COFD[8280] = -2.09728725E+01;
  COFD[8281] = 5.24344916E+00;
  COFD[8282] = -4.56395528E-01;
  COFD[8283] = 1.94121732E-02;
  COFD[8284] = -2.22029597E+01;
  COFD[8285] = 5.48767364E+00;
  COFD[8286] = -4.80980618E-01;
  COFD[8287] = 2.01946539E-02;
  COFD[8288] = -1.74178161E+01;
  COFD[8289] = 4.34629433E+00;
  COFD[8290] = -3.50240651E-01;
  COFD[8291] = 1.52229544E-02;
  COFD[8292] = -1.68094617E+01;
  COFD[8293] = 2.72701180E+00;
  COFD[8294] = -3.12353506E-02;
  COFD[8295] = -2.87882139E-03;
  COFD[8296] = -2.22145663E+01;
  COFD[8297] = 5.48767364E+00;
  COFD[8298] = -4.80980618E-01;
  COFD[8299] = 2.01946539E-02;
  COFD[8300] = -2.21909103E+01;
  COFD[8301] = 5.48767364E+00;
  COFD[8302] = -4.80980618E-01;
  COFD[8303] = 2.01946539E-02;
  COFD[8304] = -2.23985448E+01;
  COFD[8305] = 5.58772453E+00;
  COFD[8306] = -4.84560536E-01;
  COFD[8307] = 1.99777728E-02;
  COFD[8308] = -2.23985448E+01;
  COFD[8309] = 5.58772453E+00;
  COFD[8310] = -4.84560536E-01;
  COFD[8311] = 1.99777728E-02;
  COFD[8312] = -2.24292981E+01;
  COFD[8313] = 5.58772453E+00;
  COFD[8314] = -4.84560536E-01;
  COFD[8315] = 1.99777728E-02;
  COFD[8316] = -2.24447072E+01;
  COFD[8317] = 5.59387804E+00;
  COFD[8318] = -4.86146181E-01;
  COFD[8319] = 2.00782989E-02;
  COFD[8320] = -1.84998832E+01;
  COFD[8321] = 3.31983385E+00;
  COFD[8322] = -1.18473006E-01;
  COFD[8323] = 1.29390803E-03;
  COFD[8324] = -1.85134261E+01;
  COFD[8325] = 3.31983385E+00;
  COFD[8326] = -1.18473006E-01;
  COFD[8327] = 1.29390803E-03;
  COFD[8328] = -1.97484160E+01;
  COFD[8329] = 3.89787850E+00;
  COFD[8330] = -2.05533896E-01;
  COFD[8331] = 5.52644140E-03;
  COFD[8332] = -2.19204750E+01;
  COFD[8333] = 5.40951483E+00;
  COFD[8334] = -4.73078075E-01;
  COFD[8335] = 1.99407243E-02;
  COFD[8336] = -2.24605872E+01;
  COFD[8337] = 5.20714730E+00;
  COFD[8338] = -4.10123218E-01;
  COFD[8339] = 1.57541368E-02;
  COFD[8340] = -2.26317876E+01;
  COFD[8341] = 5.40103531E+00;
  COFD[8342] = -4.43581849E-01;
  COFD[8343] = 1.75334494E-02;
  COFD[8344] = -2.26471726E+01;
  COFD[8345] = 5.40103531E+00;
  COFD[8346] = -4.43581849E-01;
  COFD[8347] = 1.75334494E-02;
  COFD[8348] = -2.18549490E+01;
  COFD[8349] = 4.94651955E+00;
  COFD[8350] = -3.67802173E-01;
  COFD[8351] = 1.35829359E-02;
  COFD[8352] = -2.23188386E+01;
  COFD[8353] = 5.15529711E+00;
  COFD[8354] = -4.01471911E-01;
  COFD[8355] = 1.53029101E-02;
  COFD[8356] = -2.23323572E+01;
  COFD[8357] = 5.15529711E+00;
  COFD[8358] = -4.01471911E-01;
  COFD[8359] = 1.53029101E-02;
  COFD[8360] = -1.96904509E+01;
  COFD[8361] = 3.77969775E+00;
  COFD[8362] = -1.87385896E-01;
  COFD[8363] = 4.63278252E-03;
  COFD[8364] = -2.23984037E+01;
  COFD[8365] = 5.05627343E+00;
  COFD[8366] = -3.85275813E-01;
  COFD[8367] = 1.44683417E-02;
  COFD[8368] = -2.24072705E+01;
  COFD[8369] = 5.05627343E+00;
  COFD[8370] = -3.85275813E-01;
  COFD[8371] = 1.44683417E-02;
  COFD[8372] = -2.24158715E+01;
  COFD[8373] = 5.05627343E+00;
  COFD[8374] = -3.85275813E-01;
  COFD[8375] = 1.44683417E-02;
  COFD[8376] = -2.12605918E+01;
  COFD[8377] = 4.39158582E+00;
  COFD[8378] = -2.80470961E-01;
  COFD[8379] = 9.19710001E-03;
  COFD[8380] = -2.12547751E+01;
  COFD[8381] = 4.39158582E+00;
  COFD[8382] = -2.80470961E-01;
  COFD[8383] = 9.19710001E-03;
  COFD[8384] = -2.12608541E+01;
  COFD[8385] = 4.39158582E+00;
  COFD[8386] = -2.80470961E-01;
  COFD[8387] = 9.19710001E-03;
  COFD[8388] = -2.12667895E+01;
  COFD[8389] = 4.39158582E+00;
  COFD[8390] = -2.80470961E-01;
  COFD[8391] = 9.19710001E-03;
  COFD[8392] = -1.99409213E+01;
  COFD[8393] = 3.70025563E+00;
  COFD[8394] = -1.75262481E-01;
  COFD[8395] = 4.03842910E-03;
  COFD[8396] = -1.99454033E+01;
  COFD[8397] = 3.70025563E+00;
  COFD[8398] = -1.75262481E-01;
  COFD[8399] = 4.03842910E-03;
  COFD[8400] = -1.98199427E+01;
  COFD[8401] = 3.62922326E+00;
  COFD[8402] = -1.64547414E-01;
  COFD[8403] = 3.51656961E-03;
  COFD[8404] = -1.91414895E+01;
  COFD[8405] = 3.27124232E+00;
  COFD[8406] = -1.11264111E-01;
  COFD[8407] = 9.47365002E-04;
  COFD[8408] = -1.90463199E+01;
  COFD[8409] = 3.21600961E+00;
  COFD[8410] = -1.03071502E-01;
  COFD[8411] = 5.53469152E-04;
  COFD[8412] = -1.83129528E+01;
  COFD[8413] = 2.84904319E+00;
  COFD[8414] = -4.91596971E-02;
  COFD[8415] = -2.02153200E-03;
  COFD[8416] = -1.82247102E+01;
  COFD[8417] = 2.79757221E+00;
  COFD[8418] = -4.16050900E-02;
  COFD[8419] = -2.38255791E-03;
  COFD[8420] = -1.76055419E+01;
  COFD[8421] = 2.48711127E+00;
  COFD[8422] = 4.23730662E-03;
  COFD[8423] = -4.57984365E-03;
  COFD[8424] = -1.75717374E+01;
  COFD[8425] = 2.45895686E+00;
  COFD[8426] = 8.39368621E-03;
  COFD[8427] = -4.77861605E-03;
  COFD[8428] = -1.70460958E+01;
  COFD[8429] = 2.19761029E+00;
  COFD[8430] = 4.66796131E-02;
  COFD[8431] = -6.59825332E-03;
  COFD[8432] = -1.70073593E+01;
  COFD[8433] = 2.16911121E+00;
  COFD[8434] = 5.08287625E-02;
  COFD[8435] = -6.79438711E-03;
  COFD[8436] = -1.65160135E+01;
  COFD[8437] = 1.92715048E+00;
  COFD[8438] = 8.59171014E-02;
  COFD[8439] = -8.44876465E-03;
  COFD[8440] = -1.64401812E+01;
  COFD[8441] = 1.88518497E+00;
  COFD[8442] = 9.19802070E-02;
  COFD[8443] = -8.73363317E-03;
  COFD[8444] = -1.53452449E+01;
  COFD[8445] = 1.34923135E+00;
  COFD[8446] = 1.69096035E-01;
  COFD[8447] = -1.23472697E-02;
  COFD[8448] = -1.53452449E+01;
  COFD[8449] = 1.34923135E+00;
  COFD[8450] = 1.69096035E-01;
  COFD[8451] = -1.23472697E-02;
  COFD[8452] = -1.53452449E+01;
  COFD[8453] = 1.34923135E+00;
  COFD[8454] = 1.69096035E-01;
  COFD[8455] = -1.23472697E-02;
  COFD[8456] = -1.55513131E+01;
  COFD[8457] = 1.43934880E+00;
  COFD[8458] = 1.56166010E-01;
  COFD[8459] = -1.17428520E-02;
  COFD[8460] = -1.51835942E+01;
  COFD[8461] = 1.25831860E+00;
  COFD[8462] = 1.82129529E-01;
  COFD[8463] = -1.29561566E-02;
  COFD[8464] = -1.51835942E+01;
  COFD[8465] = 1.25831860E+00;
  COFD[8466] = 1.82129529E-01;
  COFD[8467] = -1.29561566E-02;
  COFD[8468] = -1.43308943E+01;
  COFD[8469] = 8.42267716E-01;
  COFD[8470] = 2.41633768E-01;
  COFD[8471] = -1.57296417E-02;
  COFD[8472] = -1.47710431E+01;
  COFD[8473] = 1.05667043E+00;
  COFD[8474] = 2.10986202E-01;
  COFD[8475] = -1.43017536E-02;
  COFD[8476] = -2.19034857E+01;
  COFD[8477] = 5.40667263E+00;
  COFD[8478] = -4.72867562E-01;
  COFD[8479] = 1.99379187E-02;
  COFD[8480] = -1.46746702E+01;
  COFD[8481] = 1.02870676E+00;
  COFD[8482] = 2.14984638E-01;
  COFD[8483] = -1.44879090E-02;
  COFD[8484] = -2.08359032E+01;
  COFD[8485] = 5.58518783E+00;
  COFD[8486] = -4.81282144E-01;
  COFD[8487] = 1.97176495E-02;
  COFD[8488] = -2.12416101E+01;
  COFD[8489] = 5.33751161E+00;
  COFD[8490] = -4.67531962E-01;
  COFD[8491] = 1.98534391E-02;
  COFD[8492] = -2.12686288E+01;
  COFD[8493] = 5.33751161E+00;
  COFD[8494] = -4.67531962E-01;
  COFD[8495] = 1.98534391E-02;
  COFD[8496] = -2.24428055E+01;
  COFD[8497] = 5.55319328E+00;
  COFD[8498] = -4.87759313E-01;
  COFD[8499] = 2.04205124E-02;
  COFD[8500] = -1.76841386E+01;
  COFD[8501] = 4.43623609E+00;
  COFD[8502] = -3.61391880E-01;
  COFD[8503] = 1.56853368E-02;
  COFD[8504] = -1.62777166E+01;
  COFD[8505] = 2.46665777E+00;
  COFD[8506] = 7.25684399E-03;
  COFD[8507] = -4.72424494E-03;
  COFD[8508] = -2.24546921E+01;
  COFD[8509] = 5.55319328E+00;
  COFD[8510] = -4.87759313E-01;
  COFD[8511] = 2.04205124E-02;
  COFD[8512] = -2.24304725E+01;
  COFD[8513] = 5.55319328E+00;
  COFD[8514] = -4.87759313E-01;
  COFD[8515] = 2.04205124E-02;
  COFD[8516] = -2.24759590E+01;
  COFD[8517] = 5.58488808E+00;
  COFD[8518] = -4.81505670E-01;
  COFD[8519] = 1.97377350E-02;
  COFD[8520] = -2.24759590E+01;
  COFD[8521] = 5.58488808E+00;
  COFD[8522] = -4.81505670E-01;
  COFD[8523] = 1.97377350E-02;
  COFD[8524] = -2.25070771E+01;
  COFD[8525] = 5.58488808E+00;
  COFD[8526] = -4.81505670E-01;
  COFD[8527] = 1.97377350E-02;
  COFD[8528] = -2.25078396E+01;
  COFD[8529] = 5.58461787E+00;
  COFD[8530] = -4.82178861E-01;
  COFD[8531] = 1.97950972E-02;
  COFD[8532] = -1.80000247E+01;
  COFD[8533] = 3.07345302E+00;
  COFD[8534] = -8.20536856E-02;
  COFD[8535] = -4.51137426E-04;
  COFD[8536] = -1.80138627E+01;
  COFD[8537] = 3.07345302E+00;
  COFD[8538] = -8.20536856E-02;
  COFD[8539] = -4.51137426E-04;
  COFD[8540] = -1.94135901E+01;
  COFD[8541] = 3.71792259E+00;
  COFD[8542] = -1.77952253E-01;
  COFD[8543] = 4.17008632E-03;
  COFD[8544] = -2.21149546E+01;
  COFD[8545] = 5.45837402E+00;
  COFD[8546] = -4.77716491E-01;
  COFD[8547] = 2.00742141E-02;
  COFD[8548] = -2.23014058E+01;
  COFD[8549] = 5.09843164E+00;
  COFD[8550] = -3.92118361E-01;
  COFD[8551] = 1.48192579E-02;
  COFD[8552] = -2.25351154E+01;
  COFD[8553] = 5.32200412E+00;
  COFD[8554] = -4.29810296E-01;
  COFD[8555] = 1.67968656E-02;
  COFD[8556] = -2.25508077E+01;
  COFD[8557] = 5.32200412E+00;
  COFD[8558] = -4.29810296E-01;
  COFD[8559] = 1.67968656E-02;
  COFD[8560] = -2.15864547E+01;
  COFD[8561] = 4.79387853E+00;
  COFD[8562] = -3.43720861E-01;
  COFD[8563] = 1.23700578E-02;
  COFD[8564] = -2.21295087E+01;
  COFD[8565] = 5.03586935E+00;
  COFD[8566] = -3.81976071E-01;
  COFD[8567] = 1.42995069E-02;
  COFD[8568] = -2.21433222E+01;
  COFD[8569] = 5.03586935E+00;
  COFD[8570] = -3.81976071E-01;
  COFD[8571] = 1.42995069E-02;
  COFD[8572] = -1.92768391E+01;
  COFD[8573] = 3.56517881E+00;
  COFD[8574] = -1.54966016E-01;
  COFD[8575] = 3.05232702E-03;
  COFD[8576] = -2.21481001E+01;
  COFD[8577] = 4.91019065E+00;
  COFD[8578] = -3.62076012E-01;
  COFD[8579] = 1.32946182E-02;
  COFD[8580] = -2.21572195E+01;
  COFD[8581] = 4.91019065E+00;
  COFD[8582] = -3.62076012E-01;
  COFD[8583] = 1.32946182E-02;
  COFD[8584] = -2.21660700E+01;
  COFD[8585] = 4.91019065E+00;
  COFD[8586] = -3.62076012E-01;
  COFD[8587] = 1.32946182E-02;
  COFD[8588] = -2.08875172E+01;
  COFD[8589] = 4.19325533E+00;
  COFD[8590] = -2.50186251E-01;
  COFD[8591] = 7.70758812E-03;
  COFD[8592] = -2.08814960E+01;
  COFD[8593] = 4.19325533E+00;
  COFD[8594] = -2.50186251E-01;
  COFD[8595] = 7.70758812E-03;
  COFD[8596] = -2.08877888E+01;
  COFD[8597] = 4.19325533E+00;
  COFD[8598] = -2.50186251E-01;
  COFD[8599] = 7.70758812E-03;
  COFD[8600] = -2.08939354E+01;
  COFD[8601] = 4.19325533E+00;
  COFD[8602] = -2.50186251E-01;
  COFD[8603] = 7.70758812E-03;
  COFD[8604] = -1.94608337E+01;
  COFD[8605] = 3.45627503E+00;
  COFD[8606] = -1.38749652E-01;
  COFD[8607] = 2.26961182E-03;
  COFD[8608] = -1.94654989E+01;
  COFD[8609] = 3.45627503E+00;
  COFD[8610] = -1.38749652E-01;
  COFD[8611] = 2.26961182E-03;
  COFD[8612] = -1.93266656E+01;
  COFD[8613] = 3.38034058E+00;
  COFD[8614] = -1.27459665E-01;
  COFD[8615] = 1.72623659E-03;
  COFD[8616] = -1.86224107E+01;
  COFD[8617] = 3.01293116E+00;
  COFD[8618] = -7.31811485E-02;
  COFD[8619] = -8.74503577E-04;
  COFD[8620] = -1.84893152E+01;
  COFD[8621] = 2.94155254E+00;
  COFD[8622] = -6.27203102E-02;
  COFD[8623] = -1.37383888E-03;
  COFD[8624] = -1.77237799E+01;
  COFD[8625] = 2.55843008E+00;
  COFD[8626] = -6.32267950E-03;
  COFD[8627] = -4.07387397E-03;
  COFD[8628] = -1.76682898E+01;
  COFD[8629] = 2.52103069E+00;
  COFD[8630] = -7.74191076E-04;
  COFD[8631] = -4.34004563E-03;
  COFD[8632] = -1.70866988E+01;
  COFD[8633] = 2.22837243E+00;
  COFD[8634] = 4.21945850E-02;
  COFD[8635] = -6.38593308E-03;
  COFD[8636] = -1.70460958E+01;
  COFD[8637] = 2.19761029E+00;
  COFD[8638] = 4.66796131E-02;
  COFD[8639] = -6.59825332E-03;
  COFD[8640] = -1.64603499E+01;
  COFD[8641] = 1.91201651E+00;
  COFD[8642] = 8.81041778E-02;
  COFD[8643] = -8.55154551E-03;
  COFD[8644] = -1.64162642E+01;
  COFD[8645] = 1.88142640E+00;
  COFD[8646] = 9.25230102E-02;
  COFD[8647] = -8.75912646E-03;
  COFD[8648] = -1.58768288E+01;
  COFD[8649] = 1.61945878E+00;
  COFD[8650] = 1.30286421E-01;
  COFD[8651] = -1.05317289E-02;
  COFD[8652] = -1.57951282E+01;
  COFD[8653] = 1.57520853E+00;
  COFD[8654] = 1.36639744E-01;
  COFD[8655] = -1.08286563E-02;
  COFD[8656] = -1.46734049E+01;
  COFD[8657] = 1.02870676E+00;
  COFD[8658] = 2.14984638E-01;
  COFD[8659] = -1.44879090E-02;
  COFD[8660] = -1.46734049E+01;
  COFD[8661] = 1.02870676E+00;
  COFD[8662] = 2.14984638E-01;
  COFD[8663] = -1.44879090E-02;
  COFD[8664] = -1.46734049E+01;
  COFD[8665] = 1.02870676E+00;
  COFD[8666] = 2.14984638E-01;
  COFD[8667] = -1.44879090E-02;
  COFD[8668] = -1.48753967E+01;
  COFD[8669] = 1.11690017E+00;
  COFD[8670] = 2.02362955E-01;
  COFD[8671] = -1.38996262E-02;
  COFD[8672] = -1.45087618E+01;
  COFD[8673] = 9.35690838E-01;
  COFD[8674] = 2.28295914E-01;
  COFD[8675] = -1.51088791E-02;
  COFD[8676] = -1.45087618E+01;
  COFD[8677] = 9.35690838E-01;
  COFD[8678] = 2.28295914E-01;
  COFD[8679] = -1.51088791E-02;
  COFD[8680] = -1.36559179E+01;
  COFD[8681] = 5.19878694E-01;
  COFD[8682] = 2.87633537E-01;
  COFD[8683] = -1.78690080E-02;
  COFD[8684] = -1.40894144E+01;
  COFD[8685] = 7.31458802E-01;
  COFD[8686] = 2.57430647E-01;
  COFD[8687] = -1.64638268E-02;
  COFD[8688] = -2.20902743E+01;
  COFD[8689] = 5.45237285E+00;
  COFD[8690] = -4.77075672E-01;
  COFD[8691] = 2.00518642E-02;
  COFD[8692] = -1.46203241E+01;
  COFD[8693] = 9.94330848E-01;
  COFD[8694] = 2.19902430E-01;
  COFD[8695] = -1.47171735E-02;
  COFD[8696] = -2.08746358E+01;
  COFD[8697] = 5.58521622E+00;
  COFD[8698] = -4.81014671E-01;
  COFD[8699] = 1.96952964E-02;
  COFD[8700] = -2.12927711E+01;
  COFD[8701] = 5.34414631E+00;
  COFD[8702] = -4.68238030E-01;
  COFD[8703] = 1.98779007E-02;
  COFD[8704] = -2.13198145E+01;
  COFD[8705] = 5.34414631E+00;
  COFD[8706] = -4.68238030E-01;
  COFD[8707] = 1.98779007E-02;
  COFD[8708] = -2.24883897E+01;
  COFD[8709] = 5.55793029E+00;
  COFD[8710] = -4.88170533E-01;
  COFD[8711] = 2.04302911E-02;
  COFD[8712] = -1.77370430E+01;
  COFD[8713] = 4.44459213E+00;
  COFD[8714] = -3.62399607E-01;
  COFD[8715] = 1.57258496E-02;
  COFD[8716] = -1.62527662E+01;
  COFD[8717] = 2.44062989E+00;
  COFD[8718] = 1.10981222E-02;
  COFD[8719] = -4.90788998E-03;
  COFD[8720] = -2.25002960E+01;
  COFD[8721] = 5.55793029E+00;
  COFD[8722] = -4.88170533E-01;
  COFD[8723] = 2.04302911E-02;
  COFD[8724] = -2.24760366E+01;
  COFD[8725] = 5.55793029E+00;
  COFD[8726] = -4.88170533E-01;
  COFD[8727] = 2.04302911E-02;
  COFD[8728] = -2.25101726E+01;
  COFD[8729] = 5.58519141E+00;
  COFD[8730] = -4.81277367E-01;
  COFD[8731] = 1.97172346E-02;
  COFD[8732] = -2.25101726E+01;
  COFD[8733] = 5.58519141E+00;
  COFD[8734] = -4.81277367E-01;
  COFD[8735] = 1.97172346E-02;
  COFD[8736] = -2.25413162E+01;
  COFD[8737] = 5.58519141E+00;
  COFD[8738] = -4.81277367E-01;
  COFD[8739] = 1.97172346E-02;
  COFD[8740] = -2.25423020E+01;
  COFD[8741] = 5.58490857E+00;
  COFD[8742] = -4.81943660E-01;
  COFD[8743] = 1.97740434E-02;
  COFD[8744] = -1.79575696E+01;
  COFD[8745] = 3.04109524E+00;
  COFD[8746] = -7.73097243E-02;
  COFD[8747] = -6.77522484E-04;
  COFD[8748] = -1.79714284E+01;
  COFD[8749] = 3.04109524E+00;
  COFD[8750] = -7.73097243E-02;
  COFD[8751] = -6.77522484E-04;
  COFD[8752] = -1.94002125E+01;
  COFD[8753] = 3.69773613E+00;
  COFD[8754] = -1.74879178E-01;
  COFD[8755] = 4.01967668E-03;
  COFD[8756] = -2.21693686E+01;
  COFD[8757] = 5.46715955E+00;
  COFD[8758] = -4.78699053E-01;
  COFD[8759] = 2.01106334E-02;
  COFD[8760] = -2.23041648E+01;
  COFD[8761] = 5.08480808E+00;
  COFD[8762] = -3.89912767E-01;
  COFD[8763] = 1.47062570E-02;
  COFD[8764] = -2.25457395E+01;
  COFD[8765] = 5.31236460E+00;
  COFD[8766] = -4.28177190E-01;
  COFD[8767] = 1.67109235E-02;
  COFD[8768] = -2.25614534E+01;
  COFD[8769] = 5.31236460E+00;
  COFD[8770] = -4.28177190E-01;
  COFD[8771] = 1.67109235E-02;
  COFD[8772] = -2.15876129E+01;
  COFD[8773] = 4.77996453E+00;
  COFD[8774] = -3.41483820E-01;
  COFD[8775] = 1.22561537E-02;
  COFD[8776] = -2.21291632E+01;
  COFD[8777] = 5.02172689E+00;
  COFD[8778] = -3.79713172E-01;
  COFD[8779] = 1.41845745E-02;
  COFD[8780] = -2.21429975E+01;
  COFD[8781] = 5.02172689E+00;
  COFD[8782] = -3.79713172E-01;
  COFD[8783] = 1.41845745E-02;
  COFD[8784] = -1.92450104E+01;
  COFD[8785] = 3.53733698E+00;
  COFD[8786] = -1.50812570E-01;
  COFD[8787] = 2.85140727E-03;
  COFD[8788] = -2.21417169E+01;
  COFD[8789] = 4.89399517E+00;
  COFD[8790] = -3.59520327E-01;
  COFD[8791] = 1.31658681E-02;
  COFD[8792] = -2.21508543E+01;
  COFD[8793] = 4.89399517E+00;
  COFD[8794] = -3.59520327E-01;
  COFD[8795] = 1.31658681E-02;
  COFD[8796] = -2.21597225E+01;
  COFD[8797] = 4.89399517E+00;
  COFD[8798] = -3.59520327E-01;
  COFD[8799] = 1.31658681E-02;
  COFD[8800] = -2.08615626E+01;
  COFD[8801] = 4.16888533E+00;
  COFD[8802] = -2.46500133E-01;
  COFD[8803] = 7.52727544E-03;
  COFD[8804] = -2.08555268E+01;
  COFD[8805] = 4.16888533E+00;
  COFD[8806] = -2.46500133E-01;
  COFD[8807] = 7.52727544E-03;
  COFD[8808] = -2.08618348E+01;
  COFD[8809] = 4.16888533E+00;
  COFD[8810] = -2.46500133E-01;
  COFD[8811] = 7.52727544E-03;
  COFD[8812] = -2.08679966E+01;
  COFD[8813] = 4.16888533E+00;
  COFD[8814] = -2.46500133E-01;
  COFD[8815] = 7.52727544E-03;
  COFD[8816] = -1.94327462E+01;
  COFD[8817] = 3.43141909E+00;
  COFD[8818] = -1.35054012E-01;
  COFD[8819] = 2.09180741E-03;
  COFD[8820] = -1.94374245E+01;
  COFD[8821] = 3.43141909E+00;
  COFD[8822] = -1.35054012E-01;
  COFD[8823] = 2.09180741E-03;
  COFD[8824] = -1.92968185E+01;
  COFD[8825] = 3.35479985E+00;
  COFD[8826] = -1.23664883E-01;
  COFD[8827] = 1.54362710E-03;
  COFD[8828] = -1.85739749E+01;
  COFD[8829] = 2.97960589E+00;
  COFD[8830] = -6.82975765E-02;
  COFD[8831] = -1.10754786E-03;
  COFD[8832] = -1.84374437E+01;
  COFD[8833] = 2.90678117E+00;
  COFD[8834] = -5.76230083E-02;
  COFD[8835] = -1.61734563E-03;
  COFD[8836] = -1.76962230E+01;
  COFD[8837] = 2.53412632E+00;
  COFD[8838] = -2.71561927E-03;
  COFD[8839] = -4.24696836E-03;
  COFD[8840] = -1.76365445E+01;
  COFD[8841] = 2.49506662E+00;
  COFD[8842] = 3.06241345E-03;
  COFD[8843] = -4.52364271E-03;
  COFD[8844] = -1.70480275E+01;
  COFD[8845] = 2.19974886E+00;
  COFD[8846] = 4.63679485E-02;
  COFD[8847] = -6.58350992E-03;
  COFD[8848] = -1.70073593E+01;
  COFD[8849] = 2.16911121E+00;
  COFD[8850] = 5.08287625E-02;
  COFD[8851] = -6.79438711E-03;
  COFD[8852] = -1.64162642E+01;
  COFD[8853] = 1.88142640E+00;
  COFD[8854] = 9.25230102E-02;
  COFD[8855] = -8.75912646E-03;
  COFD[8856] = -1.63717733E+01;
  COFD[8857] = 1.85076855E+00;
  COFD[8858] = 9.69498546E-02;
  COFD[8859] = -8.96701578E-03;
  COFD[8860] = -1.58282415E+01;
  COFD[8861] = 1.58723024E+00;
  COFD[8862] = 1.34913922E-01;
  COFD[8863] = -1.07480061E-02;
  COFD[8864] = -1.57455878E+01;
  COFD[8865] = 1.54263346E+00;
  COFD[8866] = 1.41317075E-01;
  COFD[8867] = -1.10473254E-02;
  COFD[8868] = -1.46190530E+01;
  COFD[8869] = 9.94330848E-01;
  COFD[8870] = 2.19902430E-01;
  COFD[8871] = -1.47171735E-02;
  COFD[8872] = -1.46190530E+01;
  COFD[8873] = 9.94330848E-01;
  COFD[8874] = 2.19902430E-01;
  COFD[8875] = -1.47171735E-02;
  COFD[8876] = -1.46190530E+01;
  COFD[8877] = 9.94330848E-01;
  COFD[8878] = 2.19902430E-01;
  COFD[8879] = -1.47171735E-02;
  COFD[8880] = -1.48216698E+01;
  COFD[8881] = 1.08277276E+00;
  COFD[8882] = 2.07252450E-01;
  COFD[8883] = -1.41278714E-02;
  COFD[8884] = -1.44527111E+01;
  COFD[8885] = 9.00592968E-01;
  COFD[8886] = 2.33311114E-01;
  COFD[8887] = -1.53425385E-02;
  COFD[8888] = -1.44527111E+01;
  COFD[8889] = 9.00592968E-01;
  COFD[8890] = 2.33311114E-01;
  COFD[8891] = -1.53425385E-02;
  COFD[8892] = -1.36081553E+01;
  COFD[8893] = 4.88593901E-01;
  COFD[8894] = 2.92092101E-01;
  COFD[8895] = -1.80757720E-02;
  COFD[8896] = -1.40317416E+01;
  COFD[8897] = 6.95865823E-01;
  COFD[8898] = 2.62499652E-01;
  COFD[8899] = -1.66993047E-02;
  COFD[8900] = -2.21414190E+01;
  COFD[8901] = 5.45978982E+00;
  COFD[8902] = -4.77871946E-01;
  COFD[8903] = 2.00798414E-02;
  COFD[8904] = -1.40460915E+01;
  COFD[8905] = 7.18763378E-01;
  COFD[8906] = 2.59237872E-01;
  COFD[8907] = -1.65477278E-02;
  COFD[8908] = -2.09388450E+01;
  COFD[8909] = 5.57974996E+00;
  COFD[8910] = -4.78112864E-01;
  COFD[8911] = 1.94826410E-02;
  COFD[8912] = -2.14367497E+01;
  COFD[8913] = 5.37405372E+00;
  COFD[8914] = -4.70540525E-01;
  COFD[8915] = 1.99137160E-02;
  COFD[8916] = -2.14640843E+01;
  COFD[8917] = 5.37405372E+00;
  COFD[8918] = -4.70540525E-01;
  COFD[8919] = 1.99137160E-02;
  COFD[8920] = -2.26547956E+01;
  COFD[8921] = 5.59528609E+00;
  COFD[8922] = -4.91473190E-01;
  COFD[8923] = 2.05131236E-02;
  COFD[8924] = -1.79421312E+01;
  COFD[8925] = 4.50796148E+00;
  COFD[8926] = -3.69986604E-01;
  COFD[8927] = 1.60286525E-02;
  COFD[8928] = -1.58057803E+01;
  COFD[8929] = 2.22000952E+00;
  COFD[8930] = 4.34143206E-02;
  COFD[8931] = -6.44371681E-03;
  COFD[8932] = -2.26669368E+01;
  COFD[8933] = 5.59528609E+00;
  COFD[8934] = -4.91473190E-01;
  COFD[8935] = 2.05131236E-02;
  COFD[8936] = -2.26422048E+01;
  COFD[8937] = 5.59528609E+00;
  COFD[8938] = -4.91473190E-01;
  COFD[8939] = 2.05131236E-02;
  COFD[8940] = -2.25790297E+01;
  COFD[8941] = 5.58175450E+00;
  COFD[8942] = -4.78660487E-01;
  COFD[8943] = 1.95178220E-02;
  COFD[8944] = -2.25790297E+01;
  COFD[8945] = 5.58175450E+00;
  COFD[8946] = -4.78660487E-01;
  COFD[8947] = 1.95178220E-02;
  COFD[8948] = -2.26104723E+01;
  COFD[8949] = 5.58175450E+00;
  COFD[8950] = -4.78660487E-01;
  COFD[8951] = 1.95178220E-02;
  COFD[8952] = -2.26201690E+01;
  COFD[8953] = 5.58491601E+00;
  COFD[8954] = -4.79798668E-01;
  COFD[8955] = 1.95960400E-02;
  COFD[8956] = -1.74019209E+01;
  COFD[8957] = 2.77201495E+00;
  COFD[8958] = -3.78503295E-02;
  COFD[8959] = -2.56220054E-03;
  COFD[8960] = -1.74160262E+01;
  COFD[8961] = 2.77201495E+00;
  COFD[8962] = -3.78503295E-02;
  COFD[8963] = -2.56220054E-03;
  COFD[8964] = -1.89983820E+01;
  COFD[8965] = 3.49209787E+00;
  COFD[8966] = -1.44076215E-01;
  COFD[8967] = 2.52615376E-03;
  COFD[8968] = -2.23927590E+01;
  COFD[8969] = 5.52880430E+00;
  COFD[8970] = -4.85323223E-01;
  COFD[8971] = 2.03436366E-02;
  COFD[8972] = -2.21269336E+01;
  COFD[8973] = 4.97192306E+00;
  COFD[8974] = -3.71804005E-01;
  COFD[8975] = 1.37844212E-02;
  COFD[8976] = -2.24546794E+01;
  COFD[8977] = 5.23807779E+00;
  COFD[8978] = -4.15451615E-01;
  COFD[8979] = 1.60367849E-02;
  COFD[8980] = -2.24706491E+01;
  COFD[8981] = 5.23807779E+00;
  COFD[8982] = -4.15451615E-01;
  COFD[8983] = 1.60367849E-02;
  COFD[8984] = -2.13890556E+01;
  COFD[8985] = 4.65974918E+00;
  COFD[8986] = -3.22390767E-01;
  COFD[8987] = 1.12918650E-02;
  COFD[8988] = -2.19115752E+01;
  COFD[8989] = 4.89350049E+00;
  COFD[8990] = -3.59442064E-01;
  COFD[8991] = 1.31619214E-02;
  COFD[8992] = -2.19256559E+01;
  COFD[8993] = 4.89350049E+00;
  COFD[8994] = -3.59442064E-01;
  COFD[8995] = 1.31619214E-02;
  COFD[8996] = -1.88405662E+01;
  COFD[8997] = 3.33125761E+00;
  COFD[8998] = -1.20168824E-01;
  COFD[8999] = 1.37545815E-03;
  COFD[9000] = -2.19360355E+01;
  COFD[9001] = 4.77045497E+00;
  COFD[9002] = -3.39955491E-01;
  COFD[9003] = 1.21784372E-02;
  COFD[9004] = -2.19453866E+01;
  COFD[9005] = 4.77045497E+00;
  COFD[9006] = -3.39955491E-01;
  COFD[9007] = 1.21784372E-02;
  COFD[9008] = -2.19544660E+01;
  COFD[9009] = 4.77045497E+00;
  COFD[9010] = -3.39955491E-01;
  COFD[9011] = 1.21784372E-02;
  COFD[9012] = -2.04884449E+01;
  COFD[9013] = 3.97419032E+00;
  COFD[9014] = -2.17151244E-01;
  COFD[9015] = 6.09602105E-03;
  COFD[9016] = -2.04822338E+01;
  COFD[9017] = 3.97419032E+00;
  COFD[9018] = -2.17151244E-01;
  COFD[9019] = 6.09602105E-03;
  COFD[9020] = -2.04887251E+01;
  COFD[9021] = 3.97419032E+00;
  COFD[9022] = -2.17151244E-01;
  COFD[9023] = 6.09602105E-03;
  COFD[9024] = -2.04950681E+01;
  COFD[9025] = 3.97419032E+00;
  COFD[9026] = -2.17151244E-01;
  COFD[9027] = 6.09602105E-03;
  COFD[9028] = -1.90327818E+01;
  COFD[9029] = 3.22670299E+00;
  COFD[9030] = -1.04657166E-01;
  COFD[9031] = 6.29620572E-04;
  COFD[9032] = -1.90376189E+01;
  COFD[9033] = 3.22670299E+00;
  COFD[9034] = -1.04657166E-01;
  COFD[9035] = 6.29620572E-04;
  COFD[9036] = -1.89022776E+01;
  COFD[9037] = 3.15286622E+00;
  COFD[9038] = -9.37357695E-02;
  COFD[9039] = 1.06702410E-04;
  COFD[9040] = -1.80237996E+01;
  COFD[9041] = 2.70981781E+00;
  COFD[9042] = -2.87009191E-02;
  COFD[9043] = -3.00031484E-03;
  COFD[9044] = -1.79037102E+01;
  COFD[9045] = 2.64390742E+00;
  COFD[9046] = -1.89931832E-02;
  COFD[9047] = -3.46515203E-03;
  COFD[9048] = -1.72790079E+01;
  COFD[9049] = 2.32181806E+00;
  COFD[9050] = 2.85392164E-02;
  COFD[9051] = -5.73831066E-03;
  COFD[9052] = -1.72080641E+01;
  COFD[9053] = 2.27827331E+00;
  COFD[9054] = 3.49093006E-02;
  COFD[9055] = -6.04080004E-03;
  COFD[9056] = -1.65620353E+01;
  COFD[9057] = 1.95984412E+00;
  COFD[9058] = 8.11931925E-02;
  COFD[9059] = -8.22685123E-03;
  COFD[9060] = -1.65160135E+01;
  COFD[9061] = 1.92715048E+00;
  COFD[9062] = 8.59171014E-02;
  COFD[9063] = -8.44876465E-03;
  COFD[9064] = -1.58768288E+01;
  COFD[9065] = 1.61945878E+00;
  COFD[9066] = 1.30286421E-01;
  COFD[9067] = -1.05317289E-02;
  COFD[9068] = -1.58282415E+01;
  COFD[9069] = 1.58723024E+00;
  COFD[9070] = 1.34913922E-01;
  COFD[9071] = -1.07480061E-02;
  COFD[9072] = -1.52744229E+01;
  COFD[9073] = 1.31960863E+00;
  COFD[9074] = 1.73344299E-01;
  COFD[9075] = -1.25457703E-02;
  COFD[9076] = -1.51866283E+01;
  COFD[9077] = 1.27286589E+00;
  COFD[9078] = 1.80046035E-01;
  COFD[9079] = -1.28588976E-02;
  COFD[9080] = -1.40447492E+01;
  COFD[9081] = 7.18763378E-01;
  COFD[9082] = 2.59237872E-01;
  COFD[9083] = -1.65477278E-02;
  COFD[9084] = -1.40447492E+01;
  COFD[9085] = 7.18763378E-01;
  COFD[9086] = 2.59237872E-01;
  COFD[9087] = -1.65477278E-02;
  COFD[9088] = -1.40447492E+01;
  COFD[9089] = 7.18763378E-01;
  COFD[9090] = 2.59237872E-01;
  COFD[9091] = -1.65477278E-02;
  COFD[9092] = -1.42557605E+01;
  COFD[9093] = 8.10499162E-01;
  COFD[9094] = 2.46166208E-01;
  COFD[9095] = -1.59404478E-02;
  COFD[9096] = -1.38696867E+01;
  COFD[9097] = 6.20774670E-01;
  COFD[9098] = 2.73203413E-01;
  COFD[9099] = -1.71972787E-02;
  COFD[9100] = -1.38696867E+01;
  COFD[9101] = 6.20774670E-01;
  COFD[9102] = 2.73203413E-01;
  COFD[9103] = -1.71972787E-02;
  COFD[9104] = -1.30691380E+01;
  COFD[9105] = 2.27790842E-01;
  COFD[9106] = 3.29172943E-01;
  COFD[9107] = -1.97930349E-02;
  COFD[9108] = -1.34919805E+01;
  COFD[9109] = 4.34069354E-01;
  COFD[9110] = 2.99858223E-01;
  COFD[9111] = -1.84358359E-02;
  COFD[9112] = -2.23702158E+01;
  COFD[9113] = 5.52375635E+00;
  COFD[9114] = -4.84828265E-01;
  COFD[9115] = 2.03285256E-02;
  COFD[9116] = -1.39499410E+01;
  COFD[9117] = 6.68848217E-01;
  COFD[9118] = 2.66350983E-01;
  COFD[9119] = -1.68784757E-02;
  COFD[9120] = -2.09567932E+01;
  COFD[9121] = 5.57406673E+00;
  COFD[9122] = -4.76936581E-01;
  COFD[9123] = 1.94140919E-02;
  COFD[9124] = -2.14760319E+01;
  COFD[9125] = 5.37855795E+00;
  COFD[9126] = -4.70848636E-01;
  COFD[9127] = 1.99158969E-02;
  COFD[9128] = -2.15033870E+01;
  COFD[9129] = 5.37855795E+00;
  COFD[9130] = -4.70848636E-01;
  COFD[9131] = 1.99158969E-02;
  COFD[9132] = -2.26914190E+01;
  COFD[9133] = 5.59897074E+00;
  COFD[9134] = -4.91655801E-01;
  COFD[9135] = 2.05094389E-02;
  COFD[9136] = -1.79977913E+01;
  COFD[9137] = 4.52066822E+00;
  COFD[9138] = -3.71551624E-01;
  COFD[9139] = 1.60931690E-02;
  COFD[9140] = -1.57426638E+01;
  COFD[9141] = 2.18116680E+00;
  COFD[9142] = 4.90755572E-02;
  COFD[9143] = -6.71158203E-03;
  COFD[9144] = -2.27035769E+01;
  COFD[9145] = 5.59897074E+00;
  COFD[9146] = -4.91655801E-01;
  COFD[9147] = 2.05094389E-02;
  COFD[9148] = -2.26788112E+01;
  COFD[9149] = 5.59897074E+00;
  COFD[9150] = -4.91655801E-01;
  COFD[9151] = 2.05094389E-02;
  COFD[9152] = -2.25990233E+01;
  COFD[9153] = 5.57844215E+00;
  COFD[9154] = -4.77821874E-01;
  COFD[9155] = 1.94651835E-02;
  COFD[9156] = -2.25990233E+01;
  COFD[9157] = 5.57844215E+00;
  COFD[9158] = -4.77821874E-01;
  COFD[9159] = 1.94651835E-02;
  COFD[9160] = -2.26304869E+01;
  COFD[9161] = 5.57844215E+00;
  COFD[9162] = -4.77821874E-01;
  COFD[9163] = 1.94651835E-02;
  COFD[9164] = -2.26463354E+01;
  COFD[9165] = 5.58422596E+00;
  COFD[9166] = -4.79336463E-01;
  COFD[9167] = 1.95612739E-02;
  COFD[9168] = -1.73211183E+01;
  COFD[9169] = 2.72579131E+00;
  COFD[9170] = -3.10554256E-02;
  COFD[9171] = -2.88744758E-03;
  COFD[9172] = -1.73352411E+01;
  COFD[9173] = 2.72579131E+00;
  COFD[9174] = -3.10554256E-02;
  COFD[9175] = -2.88744758E-03;
  COFD[9176] = -1.89416987E+01;
  COFD[9177] = 3.45624144E+00;
  COFD[9178] = -1.38744659E-01;
  COFD[9179] = 2.26937154E-03;
  COFD[9180] = -2.24403702E+01;
  COFD[9181] = 5.53721632E+00;
  COFD[9182] = -4.86151296E-01;
  COFD[9183] = 2.03691055E-02;
  COFD[9184] = -2.21016561E+01;
  COFD[9185] = 4.94882195E+00;
  COFD[9186] = -3.68164829E-01;
  COFD[9187] = 1.36011930E-02;
  COFD[9188] = -2.24563053E+01;
  COFD[9189] = 5.22687847E+00;
  COFD[9190] = -4.13492829E-01;
  COFD[9191] = 1.59319574E-02;
  COFD[9192] = -2.24722931E+01;
  COFD[9193] = 5.22687847E+00;
  COFD[9194] = -4.13492829E-01;
  COFD[9195] = 1.59319574E-02;
  COFD[9196] = -2.13664595E+01;
  COFD[9197] = 4.63804668E+00;
  COFD[9198] = -3.18954675E-01;
  COFD[9199] = 1.11186092E-02;
  COFD[9200] = -2.18879484E+01;
  COFD[9201] = 4.87168366E+00;
  COFD[9202] = -3.55995797E-01;
  COFD[9203] = 1.29882292E-02;
  COFD[9204] = -2.19020466E+01;
  COFD[9205] = 4.87168366E+00;
  COFD[9206] = -3.55995797E-01;
  COFD[9207] = 1.29882292E-02;
  COFD[9208] = -1.87844881E+01;
  COFD[9209] = 3.29589989E+00;
  COFD[9210] = -1.14921439E-01;
  COFD[9211] = 1.12316566E-03;
  COFD[9212] = -2.19203831E+01;
  COFD[9213] = 4.75243834E+00;
  COFD[9214] = -3.37056985E-01;
  COFD[9215] = 1.20310677E-02;
  COFD[9216] = -2.19297495E+01;
  COFD[9217] = 4.75243834E+00;
  COFD[9218] = -3.37056985E-01;
  COFD[9219] = 1.20310677E-02;
  COFD[9220] = -2.19388440E+01;
  COFD[9221] = 4.75243834E+00;
  COFD[9222] = -3.37056985E-01;
  COFD[9223] = 1.20310677E-02;
  COFD[9224] = -2.04422470E+01;
  COFD[9225] = 3.94332855E+00;
  COFD[9226] = -2.12471416E-01;
  COFD[9227] = 5.86705833E-03;
  COFD[9228] = -2.04360233E+01;
  COFD[9229] = 3.94332855E+00;
  COFD[9230] = -2.12471416E-01;
  COFD[9231] = 5.86705833E-03;
  COFD[9232] = -2.04425278E+01;
  COFD[9233] = 3.94332855E+00;
  COFD[9234] = -2.12471416E-01;
  COFD[9235] = 5.86705833E-03;
  COFD[9236] = -2.04488838E+01;
  COFD[9237] = 3.94332855E+00;
  COFD[9238] = -2.12471416E-01;
  COFD[9239] = 5.86705833E-03;
  COFD[9240] = -1.89787521E+01;
  COFD[9241] = 3.19312443E+00;
  COFD[9242] = -9.96826718E-02;
  COFD[9243] = 3.91060295E-04;
  COFD[9244] = -1.89836007E+01;
  COFD[9245] = 3.19312443E+00;
  COFD[9246] = -9.96826718E-02;
  COFD[9247] = 3.91060295E-04;
  COFD[9248] = -1.88420208E+01;
  COFD[9249] = 3.11676225E+00;
  COFD[9250] = -8.84173079E-02;
  COFD[9251] = -1.47332117E-04;
  COFD[9252] = -1.79473979E+01;
  COFD[9253] = 2.66651767E+00;
  COFD[9254] = -2.23220307E-02;
  COFD[9255] = -3.30588605E-03;
  COFD[9256] = -1.78367057E+01;
  COFD[9257] = 2.60473171E+00;
  COFD[9258] = -1.32053501E-02;
  COFD[9259] = -3.74266886E-03;
  COFD[9260] = -1.72112324E+01;
  COFD[9261] = 2.28271761E+00;
  COFD[9262] = 3.42599989E-02;
  COFD[9263] = -6.01003337E-03;
  COFD[9264] = -1.71435915E+01;
  COFD[9265] = 2.24077538E+00;
  COFD[9266] = 4.03852119E-02;
  COFD[9267] = -6.30020799E-03;
  COFD[9268] = -1.64868934E+01;
  COFD[9269] = 1.91809628E+00;
  COFD[9270] = 8.72256197E-02;
  COFD[9271] = -8.51026021E-03;
  COFD[9272] = -1.64401812E+01;
  COFD[9273] = 1.88518497E+00;
  COFD[9274] = 9.19802070E-02;
  COFD[9275] = -8.73363317E-03;
  COFD[9276] = -1.57951282E+01;
  COFD[9277] = 1.57520853E+00;
  COFD[9278] = 1.36639744E-01;
  COFD[9279] = -1.08286563E-02;
  COFD[9280] = -1.57455878E+01;
  COFD[9281] = 1.54263346E+00;
  COFD[9282] = 1.41317075E-01;
  COFD[9283] = -1.10473254E-02;
  COFD[9284] = -1.51866283E+01;
  COFD[9285] = 1.27286589E+00;
  COFD[9286] = 1.80046035E-01;
  COFD[9287] = -1.28588976E-02;
  COFD[9288] = -1.50972936E+01;
  COFD[9289] = 1.22557031E+00;
  COFD[9290] = 1.86816623E-01;
  COFD[9291] = -1.31748031E-02;
  COFD[9292] = -1.39485934E+01;
  COFD[9293] = 6.68848217E-01;
  COFD[9294] = 2.66350983E-01;
  COFD[9295] = -1.68784757E-02;
  COFD[9296] = -1.39485934E+01;
  COFD[9297] = 6.68848217E-01;
  COFD[9298] = 2.66350983E-01;
  COFD[9299] = -1.68784757E-02;
  COFD[9300] = -1.39485934E+01;
  COFD[9301] = 6.68848217E-01;
  COFD[9302] = 2.66350983E-01;
  COFD[9303] = -1.68784757E-02;
  COFD[9304] = -1.41657531E+01;
  COFD[9305] = 7.63219050E-01;
  COFD[9306] = 2.52909425E-01;
  COFD[9307] = -1.62540076E-02;
  COFD[9308] = -1.37904679E+01;
  COFD[9309] = 5.77897315E-01;
  COFD[9310] = 2.79341300E-01;
  COFD[9311] = -1.74832102E-02;
  COFD[9312] = -1.37904679E+01;
  COFD[9313] = 5.77897315E-01;
  COFD[9314] = 2.79341300E-01;
  COFD[9315] = -1.74832102E-02;
  COFD[9316] = -1.29864152E+01;
  COFD[9317] = 1.83949768E-01;
  COFD[9318] = 3.35386196E-01;
  COFD[9319] = -2.00797618E-02;
  COFD[9320] = -1.34078465E+01;
  COFD[9321] = 3.89413100E-01;
  COFD[9322] = 3.06208761E-01;
  COFD[9323] = -1.87299474E-02;
  COFD[9324] = -2.24179518E+01;
  COFD[9325] = 5.53218678E+00;
  COFD[9326] = -4.85657384E-01;
  COFD[9327] = 2.03539768E-02;
  COFD[9328] = -1.28650288E+01;
  COFD[9329] = 1.40407102E-01;
  COFD[9330] = 3.41555146E-01;
  COFD[9331] = -2.03644864E-02;
  COFD[9332] = -2.09727759E+01;
  COFD[9333] = 5.49979971E+00;
  COFD[9334] = -4.62000942E-01;
  COFD[9335] = 1.85549745E-02;
  COFD[9336] = -2.17904194E+01;
  COFD[9337] = 5.43781703E+00;
  COFD[9338] = -4.75415362E-01;
  COFD[9339] = 1.99887429E-02;
  COFD[9340] = -2.18182567E+01;
  COFD[9341] = 5.43781703E+00;
  COFD[9342] = -4.75415362E-01;
  COFD[9343] = 1.99887429E-02;
  COFD[9344] = -2.28847737E+01;
  COFD[9345] = 5.60324057E+00;
  COFD[9346] = -4.88278590E-01;
  COFD[9347] = 2.02076422E-02;
  COFD[9348] = -1.85196303E+01;
  COFD[9349] = 4.68077396E+00;
  COFD[9350] = -3.91229141E-01;
  COFD[9351] = 1.69020200E-02;
  COFD[9352] = -1.47119901E+01;
  COFD[9353] = 1.67339458E+00;
  COFD[9354] = 1.22536705E-01;
  COFD[9355] = -1.01692680E-02;
  COFD[9356] = -2.28973304E+01;
  COFD[9357] = 5.60324057E+00;
  COFD[9358] = -4.88278590E-01;
  COFD[9359] = 2.02076422E-02;
  COFD[9360] = -2.28717628E+01;
  COFD[9361] = 5.60324057E+00;
  COFD[9362] = -4.88278590E-01;
  COFD[9363] = 2.02076422E-02;
  COFD[9364] = -2.26015143E+01;
  COFD[9365] = 5.50133264E+00;
  COFD[9366] = -4.62484498E-01;
  COFD[9367] = 1.85871217E-02;
  COFD[9368] = -2.26015143E+01;
  COFD[9369] = 5.50133264E+00;
  COFD[9370] = -4.62484498E-01;
  COFD[9371] = 1.85871217E-02;
  COFD[9372] = -2.26334715E+01;
  COFD[9373] = 5.50133264E+00;
  COFD[9374] = -4.62484498E-01;
  COFD[9375] = 1.85871217E-02;
  COFD[9376] = -2.26488809E+01;
  COFD[9377] = 5.50690143E+00;
  COFD[9378] = -4.64003349E-01;
  COFD[9379] = 1.86846584E-02;
  COFD[9380] = -1.64533847E+01;
  COFD[9381] = 2.28170571E+00;
  COFD[9382] = 3.44078407E-02;
  COFD[9383] = -6.01703889E-03;
  COFD[9384] = -1.64679239E+01;
  COFD[9385] = 2.28170571E+00;
  COFD[9386] = 3.44078407E-02;
  COFD[9387] = -6.01703889E-03;
  COFD[9388] = -1.81185070E+01;
  COFD[9389] = 3.03095915E+00;
  COFD[9390] = -7.58238868E-02;
  COFD[9391] = -7.48420472E-04;
  COFD[9392] = -2.27743540E+01;
  COFD[9393] = 5.60263382E+00;
  COFD[9394] = -4.91348327E-01;
  COFD[9395] = 2.04651120E-02;
  COFD[9396] = -2.17125432E+01;
  COFD[9397] = 4.69815223E+00;
  COFD[9398] = -3.28454103E-01;
  COFD[9399] = 1.15970636E-02;
  COFD[9400] = -2.22063772E+01;
  COFD[9401] = 5.03874797E+00;
  COFD[9402] = -3.82440213E-01;
  COFD[9403] = 1.43232015E-02;
  COFD[9404] = -2.22227952E+01;
  COFD[9405] = 5.03874797E+00;
  COFD[9406] = -3.82440213E-01;
  COFD[9407] = 1.43232015E-02;
  COFD[9408] = -2.08908603E+01;
  COFD[9409] = 4.35422933E+00;
  COFD[9410] = -2.74727512E-01;
  COFD[9411] = 8.91328380E-03;
  COFD[9412] = -2.14951419E+01;
  COFD[9413] = 4.62311744E+00;
  COFD[9414] = -3.16576672E-01;
  COFD[9415] = 1.09982058E-02;
  COFD[9416] = -2.15096562E+01;
  COFD[9417] = 4.62311744E+00;
  COFD[9418] = -3.16576672E-01;
  COFD[9419] = 1.09982058E-02;
  COFD[9420] = -1.78373202E+01;
  COFD[9421] = 2.81667592E+00;
  COFD[9422] = -4.44112417E-02;
  COFD[9423] = -2.24836515E-03;
  COFD[9424] = -2.15051226E+01;
  COFD[9425] = 4.49401210E+00;
  COFD[9426] = -2.96300228E-01;
  COFD[9427] = 9.98228772E-03;
  COFD[9428] = -2.15148556E+01;
  COFD[9429] = 4.49401210E+00;
  COFD[9430] = -2.96300228E-01;
  COFD[9431] = 9.98228772E-03;
  COFD[9432] = -2.15243130E+01;
  COFD[9433] = 4.49401210E+00;
  COFD[9434] = -2.96300228E-01;
  COFD[9435] = 9.98228772E-03;
  COFD[9436] = -1.98602965E+01;
  COFD[9437] = 3.61510430E+00;
  COFD[9438] = -1.62429647E-01;
  COFD[9439] = 3.41379096E-03;
  COFD[9440] = -1.98537674E+01;
  COFD[9441] = 3.61510430E+00;
  COFD[9442] = -1.62429647E-01;
  COFD[9443] = 3.41379096E-03;
  COFD[9444] = -1.98605911E+01;
  COFD[9445] = 3.61510430E+00;
  COFD[9446] = -1.62429647E-01;
  COFD[9447] = 3.41379096E-03;
  COFD[9448] = -1.98672634E+01;
  COFD[9449] = 3.61510430E+00;
  COFD[9450] = -1.62429647E-01;
  COFD[9451] = 3.41379096E-03;
  COFD[9452] = -1.79633368E+01;
  COFD[9453] = 2.68406243E+00;
  COFD[9454] = -2.49058117E-02;
  COFD[9455] = -3.18217796E-03;
  COFD[9456] = -1.79684660E+01;
  COFD[9457] = 2.68406243E+00;
  COFD[9458] = -2.49058117E-02;
  COFD[9459] = -3.18217796E-03;
  COFD[9460] = -1.78005216E+01;
  COFD[9461] = 2.59587009E+00;
  COFD[9462] = -1.18871887E-02;
  COFD[9463] = -3.80613440E-03;
  COFD[9464] = -1.71013716E+01;
  COFD[9465] = 2.22992608E+00;
  COFD[9466] = 4.19679647E-02;
  COFD[9467] = -6.37519657E-03;
  COFD[9468] = -1.69915910E+01;
  COFD[9469] = 2.16947571E+00;
  COFD[9470] = 5.07757587E-02;
  COFD[9471] = -6.79188381E-03;
  COFD[9472] = -1.62439550E+01;
  COFD[9473] = 1.79898308E+00;
  COFD[9474] = 1.04422970E-01;
  COFD[9475] = -9.31788260E-03;
  COFD[9476] = -1.61477780E+01;
  COFD[9477] = 1.74526374E+00;
  COFD[9478] = 1.12174865E-01;
  COFD[9479] = -9.68245016E-03;
  COFD[9480] = -1.53992570E+01;
  COFD[9481] = 1.38485345E+00;
  COFD[9482] = 1.63989484E-01;
  COFD[9483] = -1.21088577E-02;
  COFD[9484] = -1.53452449E+01;
  COFD[9485] = 1.34923135E+00;
  COFD[9486] = 1.69096035E-01;
  COFD[9487] = -1.23472697E-02;
  COFD[9488] = -1.46734049E+01;
  COFD[9489] = 1.02870676E+00;
  COFD[9490] = 2.14984638E-01;
  COFD[9491] = -1.44879090E-02;
  COFD[9492] = -1.46190530E+01;
  COFD[9493] = 9.94330848E-01;
  COFD[9494] = 2.19902430E-01;
  COFD[9495] = -1.47171735E-02;
  COFD[9496] = -1.40447492E+01;
  COFD[9497] = 7.18763378E-01;
  COFD[9498] = 2.59237872E-01;
  COFD[9499] = -1.65477278E-02;
  COFD[9500] = -1.39485934E+01;
  COFD[9501] = 6.68848217E-01;
  COFD[9502] = 2.66350983E-01;
  COFD[9503] = -1.68784757E-02;
  COFD[9504] = -1.28635472E+01;
  COFD[9505] = 1.40407102E-01;
  COFD[9506] = 3.41555146E-01;
  COFD[9507] = -2.03644864E-02;
  COFD[9508] = -1.28635472E+01;
  COFD[9509] = 1.40407102E-01;
  COFD[9510] = 3.41555146E-01;
  COFD[9511] = -2.03644864E-02;
  COFD[9512] = -1.28635472E+01;
  COFD[9513] = 1.40407102E-01;
  COFD[9514] = 3.41555146E-01;
  COFD[9515] = -2.03644864E-02;
  COFD[9516] = -1.30620602E+01;
  COFD[9517] = 2.26455242E-01;
  COFD[9518] = 3.29362482E-01;
  COFD[9519] = -1.98017964E-02;
  COFD[9520] = -1.27043736E+01;
  COFD[9521] = 4.81478906E-02;
  COFD[9522] = 3.54630676E-01;
  COFD[9523] = -2.09687597E-02;
  COFD[9524] = -1.27043736E+01;
  COFD[9525] = 4.81478906E-02;
  COFD[9526] = 3.54630676E-01;
  COFD[9527] = -2.09687597E-02;
  COFD[9528] = -1.17864674E+01;
  COFD[9529] = -3.91721760E-01;
  COFD[9530] = 4.16686717E-01;
  COFD[9531] = -2.38259465E-02;
  COFD[9532] = -1.22684686E+01;
  COFD[9533] = -1.61500371E-01;
  COFD[9534] = 3.84217824E-01;
  COFD[9535] = -2.23309656E-02;
  COFD[9536] = -2.27624063E+01;
  COFD[9537] = 5.60192583E+00;
  COFD[9538] = -4.91455403E-01;
  COFD[9539] = 2.04776556E-02;
  COFD[9540] = -1.28650288E+01;
  COFD[9541] = 1.40407102E-01;
  COFD[9542] = 3.41555146E-01;
  COFD[9543] = -2.03644864E-02;
  COFD[9544] = -2.09727759E+01;
  COFD[9545] = 5.49979971E+00;
  COFD[9546] = -4.62000942E-01;
  COFD[9547] = 1.85549745E-02;
  COFD[9548] = -2.17904194E+01;
  COFD[9549] = 5.43781703E+00;
  COFD[9550] = -4.75415362E-01;
  COFD[9551] = 1.99887429E-02;
  COFD[9552] = -2.18182567E+01;
  COFD[9553] = 5.43781703E+00;
  COFD[9554] = -4.75415362E-01;
  COFD[9555] = 1.99887429E-02;
  COFD[9556] = -2.28847737E+01;
  COFD[9557] = 5.60324057E+00;
  COFD[9558] = -4.88278590E-01;
  COFD[9559] = 2.02076422E-02;
  COFD[9560] = -1.85196303E+01;
  COFD[9561] = 4.68077396E+00;
  COFD[9562] = -3.91229141E-01;
  COFD[9563] = 1.69020200E-02;
  COFD[9564] = -1.47119901E+01;
  COFD[9565] = 1.67339458E+00;
  COFD[9566] = 1.22536705E-01;
  COFD[9567] = -1.01692680E-02;
  COFD[9568] = -2.28973304E+01;
  COFD[9569] = 5.60324057E+00;
  COFD[9570] = -4.88278590E-01;
  COFD[9571] = 2.02076422E-02;
  COFD[9572] = -2.28717628E+01;
  COFD[9573] = 5.60324057E+00;
  COFD[9574] = -4.88278590E-01;
  COFD[9575] = 2.02076422E-02;
  COFD[9576] = -2.26015143E+01;
  COFD[9577] = 5.50133264E+00;
  COFD[9578] = -4.62484498E-01;
  COFD[9579] = 1.85871217E-02;
  COFD[9580] = -2.26015143E+01;
  COFD[9581] = 5.50133264E+00;
  COFD[9582] = -4.62484498E-01;
  COFD[9583] = 1.85871217E-02;
  COFD[9584] = -2.26334715E+01;
  COFD[9585] = 5.50133264E+00;
  COFD[9586] = -4.62484498E-01;
  COFD[9587] = 1.85871217E-02;
  COFD[9588] = -2.26488809E+01;
  COFD[9589] = 5.50690143E+00;
  COFD[9590] = -4.64003349E-01;
  COFD[9591] = 1.86846584E-02;
  COFD[9592] = -1.64533847E+01;
  COFD[9593] = 2.28170571E+00;
  COFD[9594] = 3.44078407E-02;
  COFD[9595] = -6.01703889E-03;
  COFD[9596] = -1.64679239E+01;
  COFD[9597] = 2.28170571E+00;
  COFD[9598] = 3.44078407E-02;
  COFD[9599] = -6.01703889E-03;
  COFD[9600] = -1.81185070E+01;
  COFD[9601] = 3.03095915E+00;
  COFD[9602] = -7.58238868E-02;
  COFD[9603] = -7.48420472E-04;
  COFD[9604] = -2.27743540E+01;
  COFD[9605] = 5.60263382E+00;
  COFD[9606] = -4.91348327E-01;
  COFD[9607] = 2.04651120E-02;
  COFD[9608] = -2.17125432E+01;
  COFD[9609] = 4.69815223E+00;
  COFD[9610] = -3.28454103E-01;
  COFD[9611] = 1.15970636E-02;
  COFD[9612] = -2.22063772E+01;
  COFD[9613] = 5.03874797E+00;
  COFD[9614] = -3.82440213E-01;
  COFD[9615] = 1.43232015E-02;
  COFD[9616] = -2.22227952E+01;
  COFD[9617] = 5.03874797E+00;
  COFD[9618] = -3.82440213E-01;
  COFD[9619] = 1.43232015E-02;
  COFD[9620] = -2.08908603E+01;
  COFD[9621] = 4.35422933E+00;
  COFD[9622] = -2.74727512E-01;
  COFD[9623] = 8.91328380E-03;
  COFD[9624] = -2.14951419E+01;
  COFD[9625] = 4.62311744E+00;
  COFD[9626] = -3.16576672E-01;
  COFD[9627] = 1.09982058E-02;
  COFD[9628] = -2.15096562E+01;
  COFD[9629] = 4.62311744E+00;
  COFD[9630] = -3.16576672E-01;
  COFD[9631] = 1.09982058E-02;
  COFD[9632] = -1.78373202E+01;
  COFD[9633] = 2.81667592E+00;
  COFD[9634] = -4.44112417E-02;
  COFD[9635] = -2.24836515E-03;
  COFD[9636] = -2.15051226E+01;
  COFD[9637] = 4.49401210E+00;
  COFD[9638] = -2.96300228E-01;
  COFD[9639] = 9.98228772E-03;
  COFD[9640] = -2.15148556E+01;
  COFD[9641] = 4.49401210E+00;
  COFD[9642] = -2.96300228E-01;
  COFD[9643] = 9.98228772E-03;
  COFD[9644] = -2.15243130E+01;
  COFD[9645] = 4.49401210E+00;
  COFD[9646] = -2.96300228E-01;
  COFD[9647] = 9.98228772E-03;
  COFD[9648] = -1.98602965E+01;
  COFD[9649] = 3.61510430E+00;
  COFD[9650] = -1.62429647E-01;
  COFD[9651] = 3.41379096E-03;
  COFD[9652] = -1.98537674E+01;
  COFD[9653] = 3.61510430E+00;
  COFD[9654] = -1.62429647E-01;
  COFD[9655] = 3.41379096E-03;
  COFD[9656] = -1.98605911E+01;
  COFD[9657] = 3.61510430E+00;
  COFD[9658] = -1.62429647E-01;
  COFD[9659] = 3.41379096E-03;
  COFD[9660] = -1.98672634E+01;
  COFD[9661] = 3.61510430E+00;
  COFD[9662] = -1.62429647E-01;
  COFD[9663] = 3.41379096E-03;
  COFD[9664] = -1.79633368E+01;
  COFD[9665] = 2.68406243E+00;
  COFD[9666] = -2.49058117E-02;
  COFD[9667] = -3.18217796E-03;
  COFD[9668] = -1.79684660E+01;
  COFD[9669] = 2.68406243E+00;
  COFD[9670] = -2.49058117E-02;
  COFD[9671] = -3.18217796E-03;
  COFD[9672] = -1.78005216E+01;
  COFD[9673] = 2.59587009E+00;
  COFD[9674] = -1.18871887E-02;
  COFD[9675] = -3.80613440E-03;
  COFD[9676] = -1.71013716E+01;
  COFD[9677] = 2.22992608E+00;
  COFD[9678] = 4.19679647E-02;
  COFD[9679] = -6.37519657E-03;
  COFD[9680] = -1.69915910E+01;
  COFD[9681] = 2.16947571E+00;
  COFD[9682] = 5.07757587E-02;
  COFD[9683] = -6.79188381E-03;
  COFD[9684] = -1.62439550E+01;
  COFD[9685] = 1.79898308E+00;
  COFD[9686] = 1.04422970E-01;
  COFD[9687] = -9.31788260E-03;
  COFD[9688] = -1.61477780E+01;
  COFD[9689] = 1.74526374E+00;
  COFD[9690] = 1.12174865E-01;
  COFD[9691] = -9.68245016E-03;
  COFD[9692] = -1.53992570E+01;
  COFD[9693] = 1.38485345E+00;
  COFD[9694] = 1.63989484E-01;
  COFD[9695] = -1.21088577E-02;
  COFD[9696] = -1.53452449E+01;
  COFD[9697] = 1.34923135E+00;
  COFD[9698] = 1.69096035E-01;
  COFD[9699] = -1.23472697E-02;
  COFD[9700] = -1.46734049E+01;
  COFD[9701] = 1.02870676E+00;
  COFD[9702] = 2.14984638E-01;
  COFD[9703] = -1.44879090E-02;
  COFD[9704] = -1.46190530E+01;
  COFD[9705] = 9.94330848E-01;
  COFD[9706] = 2.19902430E-01;
  COFD[9707] = -1.47171735E-02;
  COFD[9708] = -1.40447492E+01;
  COFD[9709] = 7.18763378E-01;
  COFD[9710] = 2.59237872E-01;
  COFD[9711] = -1.65477278E-02;
  COFD[9712] = -1.39485934E+01;
  COFD[9713] = 6.68848217E-01;
  COFD[9714] = 2.66350983E-01;
  COFD[9715] = -1.68784757E-02;
  COFD[9716] = -1.28635472E+01;
  COFD[9717] = 1.40407102E-01;
  COFD[9718] = 3.41555146E-01;
  COFD[9719] = -2.03644864E-02;
  COFD[9720] = -1.28635472E+01;
  COFD[9721] = 1.40407102E-01;
  COFD[9722] = 3.41555146E-01;
  COFD[9723] = -2.03644864E-02;
  COFD[9724] = -1.28635472E+01;
  COFD[9725] = 1.40407102E-01;
  COFD[9726] = 3.41555146E-01;
  COFD[9727] = -2.03644864E-02;
  COFD[9728] = -1.30620602E+01;
  COFD[9729] = 2.26455242E-01;
  COFD[9730] = 3.29362482E-01;
  COFD[9731] = -1.98017964E-02;
  COFD[9732] = -1.27043736E+01;
  COFD[9733] = 4.81478906E-02;
  COFD[9734] = 3.54630676E-01;
  COFD[9735] = -2.09687597E-02;
  COFD[9736] = -1.27043736E+01;
  COFD[9737] = 4.81478906E-02;
  COFD[9738] = 3.54630676E-01;
  COFD[9739] = -2.09687597E-02;
  COFD[9740] = -1.17864674E+01;
  COFD[9741] = -3.91721760E-01;
  COFD[9742] = 4.16686717E-01;
  COFD[9743] = -2.38259465E-02;
  COFD[9744] = -1.22684686E+01;
  COFD[9745] = -1.61500371E-01;
  COFD[9746] = 3.84217824E-01;
  COFD[9747] = -2.23309656E-02;
  COFD[9748] = -2.27624063E+01;
  COFD[9749] = 5.60192583E+00;
  COFD[9750] = -4.91455403E-01;
  COFD[9751] = 2.04776556E-02;
  COFD[9752] = -1.28650288E+01;
  COFD[9753] = 1.40407102E-01;
  COFD[9754] = 3.41555146E-01;
  COFD[9755] = -2.03644864E-02;
  COFD[9756] = -2.09727759E+01;
  COFD[9757] = 5.49979971E+00;
  COFD[9758] = -4.62000942E-01;
  COFD[9759] = 1.85549745E-02;
  COFD[9760] = -2.17904194E+01;
  COFD[9761] = 5.43781703E+00;
  COFD[9762] = -4.75415362E-01;
  COFD[9763] = 1.99887429E-02;
  COFD[9764] = -2.18182567E+01;
  COFD[9765] = 5.43781703E+00;
  COFD[9766] = -4.75415362E-01;
  COFD[9767] = 1.99887429E-02;
  COFD[9768] = -2.28847737E+01;
  COFD[9769] = 5.60324057E+00;
  COFD[9770] = -4.88278590E-01;
  COFD[9771] = 2.02076422E-02;
  COFD[9772] = -1.85196303E+01;
  COFD[9773] = 4.68077396E+00;
  COFD[9774] = -3.91229141E-01;
  COFD[9775] = 1.69020200E-02;
  COFD[9776] = -1.47119901E+01;
  COFD[9777] = 1.67339458E+00;
  COFD[9778] = 1.22536705E-01;
  COFD[9779] = -1.01692680E-02;
  COFD[9780] = -2.28973304E+01;
  COFD[9781] = 5.60324057E+00;
  COFD[9782] = -4.88278590E-01;
  COFD[9783] = 2.02076422E-02;
  COFD[9784] = -2.28717628E+01;
  COFD[9785] = 5.60324057E+00;
  COFD[9786] = -4.88278590E-01;
  COFD[9787] = 2.02076422E-02;
  COFD[9788] = -2.26015143E+01;
  COFD[9789] = 5.50133264E+00;
  COFD[9790] = -4.62484498E-01;
  COFD[9791] = 1.85871217E-02;
  COFD[9792] = -2.26015143E+01;
  COFD[9793] = 5.50133264E+00;
  COFD[9794] = -4.62484498E-01;
  COFD[9795] = 1.85871217E-02;
  COFD[9796] = -2.26334715E+01;
  COFD[9797] = 5.50133264E+00;
  COFD[9798] = -4.62484498E-01;
  COFD[9799] = 1.85871217E-02;
  COFD[9800] = -2.26488809E+01;
  COFD[9801] = 5.50690143E+00;
  COFD[9802] = -4.64003349E-01;
  COFD[9803] = 1.86846584E-02;
  COFD[9804] = -1.64533847E+01;
  COFD[9805] = 2.28170571E+00;
  COFD[9806] = 3.44078407E-02;
  COFD[9807] = -6.01703889E-03;
  COFD[9808] = -1.64679239E+01;
  COFD[9809] = 2.28170571E+00;
  COFD[9810] = 3.44078407E-02;
  COFD[9811] = -6.01703889E-03;
  COFD[9812] = -1.81185070E+01;
  COFD[9813] = 3.03095915E+00;
  COFD[9814] = -7.58238868E-02;
  COFD[9815] = -7.48420472E-04;
  COFD[9816] = -2.27743540E+01;
  COFD[9817] = 5.60263382E+00;
  COFD[9818] = -4.91348327E-01;
  COFD[9819] = 2.04651120E-02;
  COFD[9820] = -2.17125432E+01;
  COFD[9821] = 4.69815223E+00;
  COFD[9822] = -3.28454103E-01;
  COFD[9823] = 1.15970636E-02;
  COFD[9824] = -2.22063772E+01;
  COFD[9825] = 5.03874797E+00;
  COFD[9826] = -3.82440213E-01;
  COFD[9827] = 1.43232015E-02;
  COFD[9828] = -2.22227952E+01;
  COFD[9829] = 5.03874797E+00;
  COFD[9830] = -3.82440213E-01;
  COFD[9831] = 1.43232015E-02;
  COFD[9832] = -2.08908603E+01;
  COFD[9833] = 4.35422933E+00;
  COFD[9834] = -2.74727512E-01;
  COFD[9835] = 8.91328380E-03;
  COFD[9836] = -2.14951419E+01;
  COFD[9837] = 4.62311744E+00;
  COFD[9838] = -3.16576672E-01;
  COFD[9839] = 1.09982058E-02;
  COFD[9840] = -2.15096562E+01;
  COFD[9841] = 4.62311744E+00;
  COFD[9842] = -3.16576672E-01;
  COFD[9843] = 1.09982058E-02;
  COFD[9844] = -1.78373202E+01;
  COFD[9845] = 2.81667592E+00;
  COFD[9846] = -4.44112417E-02;
  COFD[9847] = -2.24836515E-03;
  COFD[9848] = -2.15051226E+01;
  COFD[9849] = 4.49401210E+00;
  COFD[9850] = -2.96300228E-01;
  COFD[9851] = 9.98228772E-03;
  COFD[9852] = -2.15148556E+01;
  COFD[9853] = 4.49401210E+00;
  COFD[9854] = -2.96300228E-01;
  COFD[9855] = 9.98228772E-03;
  COFD[9856] = -2.15243130E+01;
  COFD[9857] = 4.49401210E+00;
  COFD[9858] = -2.96300228E-01;
  COFD[9859] = 9.98228772E-03;
  COFD[9860] = -1.98602965E+01;
  COFD[9861] = 3.61510430E+00;
  COFD[9862] = -1.62429647E-01;
  COFD[9863] = 3.41379096E-03;
  COFD[9864] = -1.98537674E+01;
  COFD[9865] = 3.61510430E+00;
  COFD[9866] = -1.62429647E-01;
  COFD[9867] = 3.41379096E-03;
  COFD[9868] = -1.98605911E+01;
  COFD[9869] = 3.61510430E+00;
  COFD[9870] = -1.62429647E-01;
  COFD[9871] = 3.41379096E-03;
  COFD[9872] = -1.98672634E+01;
  COFD[9873] = 3.61510430E+00;
  COFD[9874] = -1.62429647E-01;
  COFD[9875] = 3.41379096E-03;
  COFD[9876] = -1.79633368E+01;
  COFD[9877] = 2.68406243E+00;
  COFD[9878] = -2.49058117E-02;
  COFD[9879] = -3.18217796E-03;
  COFD[9880] = -1.79684660E+01;
  COFD[9881] = 2.68406243E+00;
  COFD[9882] = -2.49058117E-02;
  COFD[9883] = -3.18217796E-03;
  COFD[9884] = -1.78005216E+01;
  COFD[9885] = 2.59587009E+00;
  COFD[9886] = -1.18871887E-02;
  COFD[9887] = -3.80613440E-03;
  COFD[9888] = -1.71013716E+01;
  COFD[9889] = 2.22992608E+00;
  COFD[9890] = 4.19679647E-02;
  COFD[9891] = -6.37519657E-03;
  COFD[9892] = -1.69915910E+01;
  COFD[9893] = 2.16947571E+00;
  COFD[9894] = 5.07757587E-02;
  COFD[9895] = -6.79188381E-03;
  COFD[9896] = -1.62439550E+01;
  COFD[9897] = 1.79898308E+00;
  COFD[9898] = 1.04422970E-01;
  COFD[9899] = -9.31788260E-03;
  COFD[9900] = -1.61477780E+01;
  COFD[9901] = 1.74526374E+00;
  COFD[9902] = 1.12174865E-01;
  COFD[9903] = -9.68245016E-03;
  COFD[9904] = -1.53992570E+01;
  COFD[9905] = 1.38485345E+00;
  COFD[9906] = 1.63989484E-01;
  COFD[9907] = -1.21088577E-02;
  COFD[9908] = -1.53452449E+01;
  COFD[9909] = 1.34923135E+00;
  COFD[9910] = 1.69096035E-01;
  COFD[9911] = -1.23472697E-02;
  COFD[9912] = -1.46734049E+01;
  COFD[9913] = 1.02870676E+00;
  COFD[9914] = 2.14984638E-01;
  COFD[9915] = -1.44879090E-02;
  COFD[9916] = -1.46190530E+01;
  COFD[9917] = 9.94330848E-01;
  COFD[9918] = 2.19902430E-01;
  COFD[9919] = -1.47171735E-02;
  COFD[9920] = -1.40447492E+01;
  COFD[9921] = 7.18763378E-01;
  COFD[9922] = 2.59237872E-01;
  COFD[9923] = -1.65477278E-02;
  COFD[9924] = -1.39485934E+01;
  COFD[9925] = 6.68848217E-01;
  COFD[9926] = 2.66350983E-01;
  COFD[9927] = -1.68784757E-02;
  COFD[9928] = -1.28635472E+01;
  COFD[9929] = 1.40407102E-01;
  COFD[9930] = 3.41555146E-01;
  COFD[9931] = -2.03644864E-02;
  COFD[9932] = -1.28635472E+01;
  COFD[9933] = 1.40407102E-01;
  COFD[9934] = 3.41555146E-01;
  COFD[9935] = -2.03644864E-02;
  COFD[9936] = -1.28635472E+01;
  COFD[9937] = 1.40407102E-01;
  COFD[9938] = 3.41555146E-01;
  COFD[9939] = -2.03644864E-02;
  COFD[9940] = -1.30620602E+01;
  COFD[9941] = 2.26455242E-01;
  COFD[9942] = 3.29362482E-01;
  COFD[9943] = -1.98017964E-02;
  COFD[9944] = -1.27043736E+01;
  COFD[9945] = 4.81478906E-02;
  COFD[9946] = 3.54630676E-01;
  COFD[9947] = -2.09687597E-02;
  COFD[9948] = -1.27043736E+01;
  COFD[9949] = 4.81478906E-02;
  COFD[9950] = 3.54630676E-01;
  COFD[9951] = -2.09687597E-02;
  COFD[9952] = -1.17864674E+01;
  COFD[9953] = -3.91721760E-01;
  COFD[9954] = 4.16686717E-01;
  COFD[9955] = -2.38259465E-02;
  COFD[9956] = -1.22684686E+01;
  COFD[9957] = -1.61500371E-01;
  COFD[9958] = 3.84217824E-01;
  COFD[9959] = -2.23309656E-02;
  COFD[9960] = -2.27624063E+01;
  COFD[9961] = 5.60192583E+00;
  COFD[9962] = -4.91455403E-01;
  COFD[9963] = 2.04776556E-02;
  COFD[9964] = -1.30635373E+01;
  COFD[9965] = 2.26455242E-01;
  COFD[9966] = 3.29362482E-01;
  COFD[9967] = -1.98017964E-02;
  COFD[9968] = -2.09750990E+01;
  COFD[9969] = 5.50429364E+00;
  COFD[9970] = -4.63372495E-01;
  COFD[9971] = 1.86455814E-02;
  COFD[9972] = -2.17411393E+01;
  COFD[9973] = 5.41958585E+00;
  COFD[9974] = -4.73477571E-01;
  COFD[9975] = 1.99215358E-02;
  COFD[9976] = -2.17689618E+01;
  COFD[9977] = 5.41958585E+00;
  COFD[9978] = -4.73477571E-01;
  COFD[9979] = 1.99215358E-02;
  COFD[9980] = -2.28924392E+01;
  COFD[9981] = 5.61013561E+00;
  COFD[9982] = -4.89933558E-01;
  COFD[9983] = 2.03098561E-02;
  COFD[9984] = -1.84634396E+01;
  COFD[9985] = 4.65797225E+00;
  COFD[9986] = -3.88483952E-01;
  COFD[9987] = 1.67915384E-02;
  COFD[9988] = -1.49248327E+01;
  COFD[9989] = 1.76546946E+00;
  COFD[9990] = 1.09258240E-01;
  COFD[9991] = -9.54522038E-03;
  COFD[9992] = -2.29049835E+01;
  COFD[9993] = 5.61013561E+00;
  COFD[9994] = -4.89933558E-01;
  COFD[9995] = 2.03098561E-02;
  COFD[9996] = -2.28794409E+01;
  COFD[9997] = 5.61013561E+00;
  COFD[9998] = -4.89933558E-01;
  COFD[9999] = 2.03098561E-02;
  COFD[10000] = -2.26049038E+01;
  COFD[10001] = 5.50714270E+00;
  COFD[10002] = -4.64060018E-01;
  COFD[10003] = 1.86881341E-02;
  COFD[10004] = -2.26049038E+01;
  COFD[10005] = 5.50714270E+00;
  COFD[10006] = -4.64060018E-01;
  COFD[10007] = 1.86881341E-02;
  COFD[10008] = -2.26368459E+01;
  COFD[10009] = 5.50714270E+00;
  COFD[10010] = -4.64060018E-01;
  COFD[10011] = 1.86881341E-02;
  COFD[10012] = -2.26685949E+01;
  COFD[10013] = 5.51963910E+00;
  COFD[10014] = -4.66555705E-01;
  COFD[10015] = 1.88313890E-02;
  COFD[10016] = -1.66244838E+01;
  COFD[10017] = 2.35716270E+00;
  COFD[10018] = 2.33630190E-02;
  COFD[10019] = -5.49227499E-03;
  COFD[10020] = -1.66390101E+01;
  COFD[10021] = 2.35716270E+00;
  COFD[10022] = 2.33630190E-02;
  COFD[10023] = -5.49227499E-03;
  COFD[10024] = -1.83038270E+01;
  COFD[10025] = 3.11287717E+00;
  COFD[10026] = -8.78456308E-02;
  COFD[10027] = -1.74642045E-04;
  COFD[10028] = -2.27595631E+01;
  COFD[10029] = 5.59981860E+00;
  COFD[10030] = -4.91614072E-01;
  COFD[10031] = 2.05016331E-02;
  COFD[10032] = -2.17986999E+01;
  COFD[10033] = 4.73948321E+00;
  COFD[10034] = -3.35004943E-01;
  COFD[10035] = 1.19275825E-02;
  COFD[10036] = -2.22774154E+01;
  COFD[10037] = 5.07362417E+00;
  COFD[10038] = -3.88094414E-01;
  COFD[10039] = 1.46129219E-02;
  COFD[10040] = -2.22938200E+01;
  COFD[10041] = 5.07362417E+00;
  COFD[10042] = -3.88094414E-01;
  COFD[10043] = 1.46129219E-02;
  COFD[10044] = -2.10053277E+01;
  COFD[10045] = 4.40732366E+00;
  COFD[10046] = -2.82889322E-01;
  COFD[10047] = 9.31663975E-03;
  COFD[10048] = -2.15817963E+01;
  COFD[10049] = 4.66482266E+00;
  COFD[10050] = -3.23189752E-01;
  COFD[10051] = 1.13320181E-02;
  COFD[10052] = -2.15962977E+01;
  COFD[10053] = 4.66482266E+00;
  COFD[10054] = -3.23189752E-01;
  COFD[10055] = 1.13320181E-02;
  COFD[10056] = -1.80427104E+01;
  COFD[10057] = 2.90760528E+00;
  COFD[10058] = -5.77438179E-02;
  COFD[10059] = -1.61157463E-03;
  COFD[10060] = -2.16062590E+01;
  COFD[10061] = 4.54192945E+00;
  COFD[10062] = -3.03755204E-01;
  COFD[10063] = 1.03536977E-02;
  COFD[10064] = -2.16159805E+01;
  COFD[10065] = 4.54192945E+00;
  COFD[10066] = -3.03755204E-01;
  COFD[10067] = 1.03536977E-02;
  COFD[10068] = -2.16254266E+01;
  COFD[10069] = 4.54192945E+00;
  COFD[10070] = -3.03755204E-01;
  COFD[10071] = 1.03536977E-02;
  COFD[10072] = -2.00028585E+01;
  COFD[10073] = 3.68035914E+00;
  COFD[10074] = -1.72246313E-01;
  COFD[10075] = 3.89112485E-03;
  COFD[10076] = -1.99963391E+01;
  COFD[10077] = 3.68035914E+00;
  COFD[10078] = -1.72246313E-01;
  COFD[10079] = 3.89112485E-03;
  COFD[10080] = -2.00031527E+01;
  COFD[10081] = 3.68035914E+00;
  COFD[10082] = -1.72246313E-01;
  COFD[10083] = 3.89112485E-03;
  COFD[10084] = -2.00098150E+01;
  COFD[10085] = 3.68035914E+00;
  COFD[10086] = -1.72246313E-01;
  COFD[10087] = 3.89112485E-03;
  COFD[10088] = -1.81581189E+01;
  COFD[10089] = 2.77116239E+00;
  COFD[10090] = -3.77250246E-02;
  COFD[10091] = -2.56819995E-03;
  COFD[10092] = -1.81632392E+01;
  COFD[10093] = 2.77116239E+00;
  COFD[10094] = -3.77250246E-02;
  COFD[10095] = -2.56819995E-03;
  COFD[10096] = -1.79711118E+01;
  COFD[10097] = 2.67252841E+00;
  COFD[10098] = -2.32071323E-02;
  COFD[10099] = -3.26353143E-03;
  COFD[10100] = -1.72678897E+01;
  COFD[10101] = 2.30401734E+00;
  COFD[10102] = 3.11443222E-02;
  COFD[10103] = -5.86207495E-03;
  COFD[10104] = -1.71625573E+01;
  COFD[10105] = 2.24537755E+00;
  COFD[10106] = 3.97133810E-02;
  COFD[10107] = -6.26838776E-03;
  COFD[10108] = -1.64316331E+01;
  COFD[10109] = 1.88148066E+00;
  COFD[10110] = 9.25151744E-02;
  COFD[10111] = -8.75875844E-03;
  COFD[10112] = -1.63505072E+01;
  COFD[10113] = 1.83434099E+00;
  COFD[10114] = 9.93214060E-02;
  COFD[10115] = -9.07837035E-03;
  COFD[10116] = -1.56095653E+01;
  COFD[10117] = 1.47685497E+00;
  COFD[10118] = 1.50778364E-01;
  COFD[10119] = -1.14906180E-02;
  COFD[10120] = -1.55513131E+01;
  COFD[10121] = 1.43934880E+00;
  COFD[10122] = 1.56166010E-01;
  COFD[10123] = -1.17428520E-02;
  COFD[10124] = -1.48753967E+01;
  COFD[10125] = 1.11690017E+00;
  COFD[10126] = 2.02362955E-01;
  COFD[10127] = -1.38996262E-02;
  COFD[10128] = -1.48216698E+01;
  COFD[10129] = 1.08277276E+00;
  COFD[10130] = 2.07252450E-01;
  COFD[10131] = -1.41278714E-02;
  COFD[10132] = -1.42557605E+01;
  COFD[10133] = 8.10499162E-01;
  COFD[10134] = 2.46166208E-01;
  COFD[10135] = -1.59404478E-02;
  COFD[10136] = -1.41657531E+01;
  COFD[10137] = 7.63219050E-01;
  COFD[10138] = 2.52909425E-01;
  COFD[10139] = -1.62540076E-02;
  COFD[10140] = -1.30620602E+01;
  COFD[10141] = 2.26455242E-01;
  COFD[10142] = 3.29362482E-01;
  COFD[10143] = -1.98017964E-02;
  COFD[10144] = -1.30620602E+01;
  COFD[10145] = 2.26455242E-01;
  COFD[10146] = 3.29362482E-01;
  COFD[10147] = -1.98017964E-02;
  COFD[10148] = -1.30620602E+01;
  COFD[10149] = 2.26455242E-01;
  COFD[10150] = 3.29362482E-01;
  COFD[10151] = -1.98017964E-02;
  COFD[10152] = -1.32691270E+01;
  COFD[10153] = 3.16452414E-01;
  COFD[10154] = 3.16572048E-01;
  COFD[10155] = -1.92093720E-02;
  COFD[10156] = -1.29160144E+01;
  COFD[10157] = 1.39889301E-01;
  COFD[10158] = 3.41628534E-01;
  COFD[10159] = -2.03678767E-02;
  COFD[10160] = -1.29160144E+01;
  COFD[10161] = 1.39889301E-01;
  COFD[10162] = 3.41628534E-01;
  COFD[10163] = -2.03678767E-02;
  COFD[10164] = -1.20233597E+01;
  COFD[10165] = -2.89416415E-01;
  COFD[10166] = 4.02237665E-01;
  COFD[10167] = -2.31592968E-02;
  COFD[10168] = -1.24841063E+01;
  COFD[10169] = -6.86597662E-02;
  COFD[10170] = 3.71153707E-01;
  COFD[10171] = -2.17314375E-02;
  COFD[10172] = -2.27467840E+01;
  COFD[10173] = 5.59873321E+00;
  COFD[10174] = -4.91665779E-01;
  COFD[10175] = 2.05114831E-02;
  COFD[10176] = -1.27059833E+01;
  COFD[10177] = 4.81478906E-02;
  COFD[10178] = 3.54630676E-01;
  COFD[10179] = -2.09687597E-02;
  COFD[10180] = -2.09816459E+01;
  COFD[10181] = 5.49082104E+00;
  COFD[10182] = -4.60014303E-01;
  COFD[10183] = 1.84365627E-02;
  COFD[10184] = -2.18770313E+01;
  COFD[10185] = 5.46038651E+00;
  COFD[10186] = -4.77939293E-01;
  COFD[10187] = 2.00823652E-02;
  COFD[10188] = -2.19052670E+01;
  COFD[10189] = 5.46038651E+00;
  COFD[10190] = -4.77939293E-01;
  COFD[10191] = 2.00823652E-02;
  COFD[10192] = -2.29058182E+01;
  COFD[10193] = 5.59504443E+00;
  COFD[10194] = -4.86415566E-01;
  COFD[10195] = 2.00947399E-02;
  COFD[10196] = -1.85877757E+01;
  COFD[10197] = 4.69975029E+00;
  COFD[10198] = -3.93412211E-01;
  COFD[10199] = 1.69852534E-02;
  COFD[10200] = -1.45392396E+01;
  COFD[10201] = 1.58706272E+00;
  COFD[10202] = 1.34937972E-01;
  COFD[10203] = -1.07491300E-02;
  COFD[10204] = -2.29187135E+01;
  COFD[10205] = 5.59504443E+00;
  COFD[10206] = -4.86415566E-01;
  COFD[10207] = 2.00947399E-02;
  COFD[10208] = -2.28924656E+01;
  COFD[10209] = 5.59504443E+00;
  COFD[10210] = -4.86415566E-01;
  COFD[10211] = 2.00947399E-02;
  COFD[10212] = -2.26219796E+01;
  COFD[10213] = 5.49570925E+00;
  COFD[10214] = -4.60969345E-01;
  COFD[10215] = 1.84906305E-02;
  COFD[10216] = -2.26219796E+01;
  COFD[10217] = 5.49570925E+00;
  COFD[10218] = -4.60969345E-01;
  COFD[10219] = 1.84906305E-02;
  COFD[10220] = -2.26543431E+01;
  COFD[10221] = 5.49570925E+00;
  COFD[10222] = -4.60969345E-01;
  COFD[10223] = 1.84906305E-02;
  COFD[10224] = -2.26705837E+01;
  COFD[10225] = 5.50119356E+00;
  COFD[10226] = -4.62439469E-01;
  COFD[10227] = 1.85841071E-02;
  COFD[10228] = -1.63128560E+01;
  COFD[10229] = 2.20684400E+00;
  COFD[10230] = 4.53338465E-02;
  COFD[10231] = -6.53458896E-03;
  COFD[10232] = -1.63277465E+01;
  COFD[10233] = 2.20684400E+00;
  COFD[10234] = 4.53338465E-02;
  COFD[10235] = -6.53458896E-03;
  COFD[10236] = -1.79466180E+01;
  COFD[10237] = 2.94168818E+00;
  COFD[10238] = -6.27401942E-02;
  COFD[10239] = -1.37288894E-03;
  COFD[10240] = -2.28218040E+01;
  COFD[10241] = 5.60692017E+00;
  COFD[10242] = -4.91295058E-01;
  COFD[10243] = 2.04387644E-02;
  COFD[10244] = -2.16564571E+01;
  COFD[10245] = 4.65505428E+00;
  COFD[10246] = -3.21651467E-01;
  COFD[10247] = 1.12547138E-02;
  COFD[10248] = -2.21555521E+01;
  COFD[10249] = 5.00070625E+00;
  COFD[10250] = -3.76355283E-01;
  COFD[10251] = 1.40141622E-02;
  COFD[10252] = -2.21723313E+01;
  COFD[10253] = 5.00070625E+00;
  COFD[10254] = -3.76355283E-01;
  COFD[10255] = 1.40141622E-02;
  COFD[10256] = -2.08019949E+01;
  COFD[10257] = 4.29990973E+00;
  COFD[10258] = -2.66411377E-01;
  COFD[10259] = 8.50361424E-03;
  COFD[10260] = -2.14462502E+01;
  COFD[10261] = 4.58545934E+00;
  COFD[10262] = -3.10556391E-01;
  COFD[10263] = 1.06931834E-02;
  COFD[10264] = -2.14611157E+01;
  COFD[10265] = 4.58545934E+00;
  COFD[10266] = -3.10556391E-01;
  COFD[10267] = 1.06931834E-02;
  COFD[10268] = -1.76677009E+01;
  COFD[10269] = 2.72650149E+00;
  COFD[10270] = -3.11601195E-02;
  COFD[10271] = -2.88242823E-03;
  COFD[10272] = -2.14350667E+01;
  COFD[10273] = 4.44599921E+00;
  COFD[10274] = -2.88841525E-01;
  COFD[10275] = 9.61119142E-03;
  COFD[10276] = -2.14451145E+01;
  COFD[10277] = 4.44599921E+00;
  COFD[10278] = -2.88841525E-01;
  COFD[10279] = 9.61119142E-03;
  COFD[10280] = -2.14548839E+01;
  COFD[10281] = 4.44599921E+00;
  COFD[10282] = -2.88841525E-01;
  COFD[10283] = 9.61119142E-03;
  COFD[10284] = -1.97359634E+01;
  COFD[10285] = 3.54254584E+00;
  COFD[10286] = -1.51588685E-01;
  COFD[10287] = 2.88891088E-03;
  COFD[10288] = -1.97291674E+01;
  COFD[10289] = 3.54254584E+00;
  COFD[10290] = -1.51588685E-01;
  COFD[10291] = 2.88891088E-03;
  COFD[10292] = -1.97362702E+01;
  COFD[10293] = 3.54254584E+00;
  COFD[10294] = -1.51588685E-01;
  COFD[10295] = 2.88891088E-03;
  COFD[10296] = -1.97432192E+01;
  COFD[10297] = 3.54254584E+00;
  COFD[10298] = -1.51588685E-01;
  COFD[10299] = 2.88891088E-03;
  COFD[10300] = -1.78252903E+01;
  COFD[10301] = 2.60486558E+00;
  COFD[10302] = -1.32252668E-02;
  COFD[10303] = -3.74170980E-03;
  COFD[10304] = -1.78306685E+01;
  COFD[10305] = 2.60486558E+00;
  COFD[10306] = -1.32252668E-02;
  COFD[10307] = -3.74170980E-03;
  COFD[10308] = -1.76909689E+01;
  COFD[10309] = 2.52865597E+00;
  COFD[10310] = -1.90423231E-03;
  COFD[10311] = -4.28587976E-03;
  COFD[10312] = -1.69703233E+01;
  COFD[10313] = 2.15337734E+00;
  COFD[10314] = 5.31165264E-02;
  COFD[10315] = -6.90242414E-03;
  COFD[10316] = -1.68535845E+01;
  COFD[10317] = 2.08995609E+00;
  COFD[10318] = 6.23355182E-02;
  COFD[10319] = -7.33798008E-03;
  COFD[10320] = -1.60744402E+01;
  COFD[10321] = 1.70515393E+00;
  COFD[10322] = 1.17964458E-01;
  COFD[10323] = -9.95487344E-03;
  COFD[10324] = -1.59845042E+01;
  COFD[10325] = 1.65425119E+00;
  COFD[10326] = 1.25289488E-01;
  COFD[10327] = -1.02981417E-02;
  COFD[10328] = -1.52407610E+01;
  COFD[10329] = 1.29532808E+00;
  COFD[10330] = 1.76825909E-01;
  COFD[10331] = -1.27084392E-02;
  COFD[10332] = -1.51835942E+01;
  COFD[10333] = 1.25831860E+00;
  COFD[10334] = 1.82129529E-01;
  COFD[10335] = -1.29561566E-02;
  COFD[10336] = -1.45087618E+01;
  COFD[10337] = 9.35690838E-01;
  COFD[10338] = 2.28295914E-01;
  COFD[10339] = -1.51088791E-02;
  COFD[10340] = -1.44527111E+01;
  COFD[10341] = 9.00592968E-01;
  COFD[10342] = 2.33311114E-01;
  COFD[10343] = -1.53425385E-02;
  COFD[10344] = -1.38696867E+01;
  COFD[10345] = 6.20774670E-01;
  COFD[10346] = 2.73203413E-01;
  COFD[10347] = -1.71972787E-02;
  COFD[10348] = -1.37904679E+01;
  COFD[10349] = 5.77897315E-01;
  COFD[10350] = 2.79341300E-01;
  COFD[10351] = -1.74832102E-02;
  COFD[10352] = -1.27043736E+01;
  COFD[10353] = 4.81478906E-02;
  COFD[10354] = 3.54630676E-01;
  COFD[10355] = -2.09687597E-02;
  COFD[10356] = -1.27043736E+01;
  COFD[10357] = 4.81478906E-02;
  COFD[10358] = 3.54630676E-01;
  COFD[10359] = -2.09687597E-02;
  COFD[10360] = -1.27043736E+01;
  COFD[10361] = 4.81478906E-02;
  COFD[10362] = 3.54630676E-01;
  COFD[10363] = -2.09687597E-02;
  COFD[10364] = -1.29160144E+01;
  COFD[10365] = 1.39889301E-01;
  COFD[10366] = 3.41628534E-01;
  COFD[10367] = -2.03678767E-02;
  COFD[10368] = -1.25394850E+01;
  COFD[10369] = -4.80135853E-02;
  COFD[10370] = 3.68241930E-01;
  COFD[10371] = -2.15974735E-02;
  COFD[10372] = -1.25394850E+01;
  COFD[10373] = -4.80135853E-02;
  COFD[10374] = 3.68241930E-01;
  COFD[10375] = -2.15974735E-02;
  COFD[10376] = -1.16109448E+01;
  COFD[10377] = -4.93356528E-01;
  COFD[10378] = 4.31025285E-01;
  COFD[10379] = -2.44867682E-02;
  COFD[10380] = -1.21103757E+01;
  COFD[10381] = -2.54815099E-01;
  COFD[10382] = 3.97347047E-01;
  COFD[10383] = -2.29334921E-02;
  COFD[10384] = -2.28072905E+01;
  COFD[10385] = 5.60504512E+00;
  COFD[10386] = -4.91228535E-01;
  COFD[10387] = 2.04427740E-02;
  COFD[10388] = -1.27059833E+01;
  COFD[10389] = 4.81478906E-02;
  COFD[10390] = 3.54630676E-01;
  COFD[10391] = -2.09687597E-02;
  COFD[10392] = -2.09816459E+01;
  COFD[10393] = 5.49082104E+00;
  COFD[10394] = -4.60014303E-01;
  COFD[10395] = 1.84365627E-02;
  COFD[10396] = -2.18770313E+01;
  COFD[10397] = 5.46038651E+00;
  COFD[10398] = -4.77939293E-01;
  COFD[10399] = 2.00823652E-02;
  COFD[10400] = -2.19052670E+01;
  COFD[10401] = 5.46038651E+00;
  COFD[10402] = -4.77939293E-01;
  COFD[10403] = 2.00823652E-02;
  COFD[10404] = -2.29058182E+01;
  COFD[10405] = 5.59504443E+00;
  COFD[10406] = -4.86415566E-01;
  COFD[10407] = 2.00947399E-02;
  COFD[10408] = -1.85877757E+01;
  COFD[10409] = 4.69975029E+00;
  COFD[10410] = -3.93412211E-01;
  COFD[10411] = 1.69852534E-02;
  COFD[10412] = -1.45392396E+01;
  COFD[10413] = 1.58706272E+00;
  COFD[10414] = 1.34937972E-01;
  COFD[10415] = -1.07491300E-02;
  COFD[10416] = -2.29187135E+01;
  COFD[10417] = 5.59504443E+00;
  COFD[10418] = -4.86415566E-01;
  COFD[10419] = 2.00947399E-02;
  COFD[10420] = -2.28924656E+01;
  COFD[10421] = 5.59504443E+00;
  COFD[10422] = -4.86415566E-01;
  COFD[10423] = 2.00947399E-02;
  COFD[10424] = -2.26219796E+01;
  COFD[10425] = 5.49570925E+00;
  COFD[10426] = -4.60969345E-01;
  COFD[10427] = 1.84906305E-02;
  COFD[10428] = -2.26219796E+01;
  COFD[10429] = 5.49570925E+00;
  COFD[10430] = -4.60969345E-01;
  COFD[10431] = 1.84906305E-02;
  COFD[10432] = -2.26543431E+01;
  COFD[10433] = 5.49570925E+00;
  COFD[10434] = -4.60969345E-01;
  COFD[10435] = 1.84906305E-02;
  COFD[10436] = -2.26705837E+01;
  COFD[10437] = 5.50119356E+00;
  COFD[10438] = -4.62439469E-01;
  COFD[10439] = 1.85841071E-02;
  COFD[10440] = -1.63128560E+01;
  COFD[10441] = 2.20684400E+00;
  COFD[10442] = 4.53338465E-02;
  COFD[10443] = -6.53458896E-03;
  COFD[10444] = -1.63277465E+01;
  COFD[10445] = 2.20684400E+00;
  COFD[10446] = 4.53338465E-02;
  COFD[10447] = -6.53458896E-03;
  COFD[10448] = -1.79466180E+01;
  COFD[10449] = 2.94168818E+00;
  COFD[10450] = -6.27401942E-02;
  COFD[10451] = -1.37288894E-03;
  COFD[10452] = -2.28218040E+01;
  COFD[10453] = 5.60692017E+00;
  COFD[10454] = -4.91295058E-01;
  COFD[10455] = 2.04387644E-02;
  COFD[10456] = -2.16564571E+01;
  COFD[10457] = 4.65505428E+00;
  COFD[10458] = -3.21651467E-01;
  COFD[10459] = 1.12547138E-02;
  COFD[10460] = -2.21555521E+01;
  COFD[10461] = 5.00070625E+00;
  COFD[10462] = -3.76355283E-01;
  COFD[10463] = 1.40141622E-02;
  COFD[10464] = -2.21723313E+01;
  COFD[10465] = 5.00070625E+00;
  COFD[10466] = -3.76355283E-01;
  COFD[10467] = 1.40141622E-02;
  COFD[10468] = -2.08019949E+01;
  COFD[10469] = 4.29990973E+00;
  COFD[10470] = -2.66411377E-01;
  COFD[10471] = 8.50361424E-03;
  COFD[10472] = -2.14462502E+01;
  COFD[10473] = 4.58545934E+00;
  COFD[10474] = -3.10556391E-01;
  COFD[10475] = 1.06931834E-02;
  COFD[10476] = -2.14611157E+01;
  COFD[10477] = 4.58545934E+00;
  COFD[10478] = -3.10556391E-01;
  COFD[10479] = 1.06931834E-02;
  COFD[10480] = -1.76677009E+01;
  COFD[10481] = 2.72650149E+00;
  COFD[10482] = -3.11601195E-02;
  COFD[10483] = -2.88242823E-03;
  COFD[10484] = -2.14350667E+01;
  COFD[10485] = 4.44599921E+00;
  COFD[10486] = -2.88841525E-01;
  COFD[10487] = 9.61119142E-03;
  COFD[10488] = -2.14451145E+01;
  COFD[10489] = 4.44599921E+00;
  COFD[10490] = -2.88841525E-01;
  COFD[10491] = 9.61119142E-03;
  COFD[10492] = -2.14548839E+01;
  COFD[10493] = 4.44599921E+00;
  COFD[10494] = -2.88841525E-01;
  COFD[10495] = 9.61119142E-03;
  COFD[10496] = -1.97359634E+01;
  COFD[10497] = 3.54254584E+00;
  COFD[10498] = -1.51588685E-01;
  COFD[10499] = 2.88891088E-03;
  COFD[10500] = -1.97291674E+01;
  COFD[10501] = 3.54254584E+00;
  COFD[10502] = -1.51588685E-01;
  COFD[10503] = 2.88891088E-03;
  COFD[10504] = -1.97362702E+01;
  COFD[10505] = 3.54254584E+00;
  COFD[10506] = -1.51588685E-01;
  COFD[10507] = 2.88891088E-03;
  COFD[10508] = -1.97432192E+01;
  COFD[10509] = 3.54254584E+00;
  COFD[10510] = -1.51588685E-01;
  COFD[10511] = 2.88891088E-03;
  COFD[10512] = -1.78252903E+01;
  COFD[10513] = 2.60486558E+00;
  COFD[10514] = -1.32252668E-02;
  COFD[10515] = -3.74170980E-03;
  COFD[10516] = -1.78306685E+01;
  COFD[10517] = 2.60486558E+00;
  COFD[10518] = -1.32252668E-02;
  COFD[10519] = -3.74170980E-03;
  COFD[10520] = -1.76909689E+01;
  COFD[10521] = 2.52865597E+00;
  COFD[10522] = -1.90423231E-03;
  COFD[10523] = -4.28587976E-03;
  COFD[10524] = -1.69703233E+01;
  COFD[10525] = 2.15337734E+00;
  COFD[10526] = 5.31165264E-02;
  COFD[10527] = -6.90242414E-03;
  COFD[10528] = -1.68535845E+01;
  COFD[10529] = 2.08995609E+00;
  COFD[10530] = 6.23355182E-02;
  COFD[10531] = -7.33798008E-03;
  COFD[10532] = -1.60744402E+01;
  COFD[10533] = 1.70515393E+00;
  COFD[10534] = 1.17964458E-01;
  COFD[10535] = -9.95487344E-03;
  COFD[10536] = -1.59845042E+01;
  COFD[10537] = 1.65425119E+00;
  COFD[10538] = 1.25289488E-01;
  COFD[10539] = -1.02981417E-02;
  COFD[10540] = -1.52407610E+01;
  COFD[10541] = 1.29532808E+00;
  COFD[10542] = 1.76825909E-01;
  COFD[10543] = -1.27084392E-02;
  COFD[10544] = -1.51835942E+01;
  COFD[10545] = 1.25831860E+00;
  COFD[10546] = 1.82129529E-01;
  COFD[10547] = -1.29561566E-02;
  COFD[10548] = -1.45087618E+01;
  COFD[10549] = 9.35690838E-01;
  COFD[10550] = 2.28295914E-01;
  COFD[10551] = -1.51088791E-02;
  COFD[10552] = -1.44527111E+01;
  COFD[10553] = 9.00592968E-01;
  COFD[10554] = 2.33311114E-01;
  COFD[10555] = -1.53425385E-02;
  COFD[10556] = -1.38696867E+01;
  COFD[10557] = 6.20774670E-01;
  COFD[10558] = 2.73203413E-01;
  COFD[10559] = -1.71972787E-02;
  COFD[10560] = -1.37904679E+01;
  COFD[10561] = 5.77897315E-01;
  COFD[10562] = 2.79341300E-01;
  COFD[10563] = -1.74832102E-02;
  COFD[10564] = -1.27043736E+01;
  COFD[10565] = 4.81478906E-02;
  COFD[10566] = 3.54630676E-01;
  COFD[10567] = -2.09687597E-02;
  COFD[10568] = -1.27043736E+01;
  COFD[10569] = 4.81478906E-02;
  COFD[10570] = 3.54630676E-01;
  COFD[10571] = -2.09687597E-02;
  COFD[10572] = -1.27043736E+01;
  COFD[10573] = 4.81478906E-02;
  COFD[10574] = 3.54630676E-01;
  COFD[10575] = -2.09687597E-02;
  COFD[10576] = -1.29160144E+01;
  COFD[10577] = 1.39889301E-01;
  COFD[10578] = 3.41628534E-01;
  COFD[10579] = -2.03678767E-02;
  COFD[10580] = -1.25394850E+01;
  COFD[10581] = -4.80135853E-02;
  COFD[10582] = 3.68241930E-01;
  COFD[10583] = -2.15974735E-02;
  COFD[10584] = -1.25394850E+01;
  COFD[10585] = -4.80135853E-02;
  COFD[10586] = 3.68241930E-01;
  COFD[10587] = -2.15974735E-02;
  COFD[10588] = -1.16109448E+01;
  COFD[10589] = -4.93356528E-01;
  COFD[10590] = 4.31025285E-01;
  COFD[10591] = -2.44867682E-02;
  COFD[10592] = -1.21103757E+01;
  COFD[10593] = -2.54815099E-01;
  COFD[10594] = 3.97347047E-01;
  COFD[10595] = -2.29334921E-02;
  COFD[10596] = -2.28072905E+01;
  COFD[10597] = 5.60504512E+00;
  COFD[10598] = -4.91228535E-01;
  COFD[10599] = 2.04427740E-02;
  COFD[10600] = -1.17881849E+01;
  COFD[10601] = -3.91721760E-01;
  COFD[10602] = 4.16686717E-01;
  COFD[10603] = -2.38259465E-02;
  COFD[10604] = -2.09454015E+01;
  COFD[10605] = 5.40752766E+00;
  COFD[10606] = -4.44798355E-01;
  COFD[10607] = 1.76009922E-02;
  COFD[10608] = -2.22377094E+01;
  COFD[10609] = 5.55025841E+00;
  COFD[10610] = -4.87461003E-01;
  COFD[10611] = 2.04108189E-02;
  COFD[10612] = -2.22662414E+01;
  COFD[10613] = 5.55025841E+00;
  COFD[10614] = -4.87461003E-01;
  COFD[10615] = 2.04108189E-02;
  COFD[10616] = -2.30376932E+01;
  COFD[10617] = 5.58490491E+00;
  COFD[10618] = -4.81582466E-01;
  COFD[10619] = 1.97440305E-02;
  COFD[10620] = -1.89368624E+01;
  COFD[10621] = 4.79578544E+00;
  COFD[10622] = -4.04706288E-01;
  COFD[10623] = 1.74277270E-02;
  COFD[10624] = -1.37015889E+01;
  COFD[10625] = 1.17648896E+00;
  COFD[10626] = 1.93830875E-01;
  COFD[10627] = -1.35014210E-02;
  COFD[10628] = -2.30508458E+01;
  COFD[10629] = 5.58490491E+00;
  COFD[10630] = -4.81582466E-01;
  COFD[10631] = 1.97440305E-02;
  COFD[10632] = -2.30240812E+01;
  COFD[10633] = 5.58490491E+00;
  COFD[10634] = -4.81582466E-01;
  COFD[10635] = 1.97440305E-02;
  COFD[10636] = -2.25800355E+01;
  COFD[10637] = 5.41345955E+00;
  COFD[10638] = -4.45914240E-01;
  COFD[10639] = 1.76631357E-02;
  COFD[10640] = -2.25800355E+01;
  COFD[10641] = 5.41345955E+00;
  COFD[10642] = -4.45914240E-01;
  COFD[10643] = 1.76631357E-02;
  COFD[10644] = -2.26127005E+01;
  COFD[10645] = 5.41345955E+00;
  COFD[10646] = -4.45914240E-01;
  COFD[10647] = 1.76631357E-02;
  COFD[10648] = -2.26578671E+01;
  COFD[10649] = 5.43122974E+00;
  COFD[10650] = -4.49142070E-01;
  COFD[10651] = 1.78397165E-02;
  COFD[10652] = -1.55803417E+01;
  COFD[10653] = 1.83949630E+00;
  COFD[10654] = 9.85772022E-02;
  COFD[10655] = -9.04342798E-03;
  COFD[10656] = -1.55954979E+01;
  COFD[10657] = 1.83949630E+00;
  COFD[10658] = 9.85772022E-02;
  COFD[10659] = -9.04342798E-03;
  COFD[10660] = -1.71902076E+01;
  COFD[10661] = 2.55784884E+00;
  COFD[10662] = -6.23635356E-03;
  COFD[10663] = -4.07802535E-03;
  COFD[10664] = -2.29445186E+01;
  COFD[10665] = 5.59715632E+00;
  COFD[10666] = -4.86901590E-01;
  COFD[10667] = 2.01243635E-02;
  COFD[10668] = -2.13469905E+01;
  COFD[10669] = 4.45569641E+00;
  COFD[10670] = -2.90341515E-01;
  COFD[10671] = 9.68562258E-03;
  COFD[10672] = -2.18428894E+01;
  COFD[10673] = 4.80248377E+00;
  COFD[10674] = -3.45087398E-01;
  COFD[10675] = 1.24391407E-02;
  COFD[10676] = -2.18599410E+01;
  COFD[10677] = 4.80248377E+00;
  COFD[10678] = -3.45087398E-01;
  COFD[10679] = 1.24391407E-02;
  COFD[10680] = -2.02866233E+01;
  COFD[10681] = 4.01670907E+00;
  COFD[10682] = -2.23536702E-01;
  COFD[10683] = 6.40647982E-03;
  COFD[10684] = -2.10706574E+01;
  COFD[10685] = 4.36117214E+00;
  COFD[10686] = -2.75794091E-01;
  COFD[10687] = 8.96595975E-03;
  COFD[10688] = -2.10857885E+01;
  COFD[10689] = 4.36117214E+00;
  COFD[10690] = -2.75794091E-01;
  COFD[10691] = 8.96595975E-03;
  COFD[10692] = -1.70354634E+01;
  COFD[10693] = 2.39587658E+00;
  COFD[10694] = 1.76887928E-02;
  COFD[10695] = -5.22236064E-03;
  COFD[10696] = -2.09896632E+01;
  COFD[10697] = 4.19291197E+00;
  COFD[10698] = -2.50134311E-01;
  COFD[10699] = 7.70504712E-03;
  COFD[10700] = -2.09999525E+01;
  COFD[10701] = 4.19291197E+00;
  COFD[10702] = -2.50134311E-01;
  COFD[10703] = 7.70504712E-03;
  COFD[10704] = -2.10099615E+01;
  COFD[10705] = 4.19291197E+00;
  COFD[10706] = -2.50134311E-01;
  COFD[10707] = 7.70504712E-03;
  COFD[10708] = -1.91370464E+01;
  COFD[10709] = 3.22676783E+00;
  COFD[10710] = -1.04666783E-01;
  COFD[10711] = 6.30082460E-04;
  COFD[10712] = -1.91300427E+01;
  COFD[10713] = 3.22676783E+00;
  COFD[10714] = -1.04666783E-01;
  COFD[10715] = 6.30082460E-04;
  COFD[10716] = -1.91373627E+01;
  COFD[10717] = 3.22676783E+00;
  COFD[10718] = -1.04666783E-01;
  COFD[10719] = 6.30082460E-04;
  COFD[10720] = -1.91445273E+01;
  COFD[10721] = 3.22676783E+00;
  COFD[10722] = -1.04666783E-01;
  COFD[10723] = 6.30082460E-04;
  COFD[10724] = -1.72077541E+01;
  COFD[10725] = 2.28214674E+00;
  COFD[10726] = 3.43434056E-02;
  COFD[10727] = -6.01398563E-03;
  COFD[10728] = -1.72133288E+01;
  COFD[10729] = 2.28214674E+00;
  COFD[10730] = 3.43434056E-02;
  COFD[10731] = -6.01398563E-03;
  COFD[10732] = -1.70509233E+01;
  COFD[10733] = 2.19748999E+00;
  COFD[10734] = 4.66971441E-02;
  COFD[10735] = -6.59908261E-03;
  COFD[10736] = -1.62220084E+01;
  COFD[10737] = 1.77893537E+00;
  COFD[10738] = 1.07314353E-01;
  COFD[10739] = -9.45375635E-03;
  COFD[10740] = -1.60780994E+01;
  COFD[10741] = 1.70424385E+00;
  COFD[10742] = 1.18095623E-01;
  COFD[10743] = -9.96103416E-03;
  COFD[10744] = -1.52506105E+01;
  COFD[10745] = 1.30025367E+00;
  COFD[10746] = 1.76119607E-01;
  COFD[10747] = -1.26754370E-02;
  COFD[10748] = -1.51554732E+01;
  COFD[10749] = 1.24747772E+00;
  COFD[10750] = 1.83682020E-01;
  COFD[10751] = -1.30286208E-02;
  COFD[10752] = -1.43889652E+01;
  COFD[10753] = 8.79322917E-01;
  COFD[10754] = 2.36346086E-01;
  COFD[10755] = -1.54836830E-02;
  COFD[10756] = -1.43308943E+01;
  COFD[10757] = 8.42267716E-01;
  COFD[10758] = 2.41633768E-01;
  COFD[10759] = -1.57296417E-02;
  COFD[10760] = -1.36559179E+01;
  COFD[10761] = 5.19878694E-01;
  COFD[10762] = 2.87633537E-01;
  COFD[10763] = -1.78690080E-02;
  COFD[10764] = -1.36081553E+01;
  COFD[10765] = 4.88593901E-01;
  COFD[10766] = 2.92092101E-01;
  COFD[10767] = -1.80757720E-02;
  COFD[10768] = -1.30691380E+01;
  COFD[10769] = 2.27790842E-01;
  COFD[10770] = 3.29172943E-01;
  COFD[10771] = -1.97930349E-02;
  COFD[10772] = -1.29864152E+01;
  COFD[10773] = 1.83949768E-01;
  COFD[10774] = 3.35386196E-01;
  COFD[10775] = -2.00797618E-02;
  COFD[10776] = -1.17864674E+01;
  COFD[10777] = -3.91721760E-01;
  COFD[10778] = 4.16686717E-01;
  COFD[10779] = -2.38259465E-02;
  COFD[10780] = -1.17864674E+01;
  COFD[10781] = -3.91721760E-01;
  COFD[10782] = 4.16686717E-01;
  COFD[10783] = -2.38259465E-02;
  COFD[10784] = -1.17864674E+01;
  COFD[10785] = -3.91721760E-01;
  COFD[10786] = 4.16686717E-01;
  COFD[10787] = -2.38259465E-02;
  COFD[10788] = -1.20233597E+01;
  COFD[10789] = -2.89416415E-01;
  COFD[10790] = 4.02237665E-01;
  COFD[10791] = -2.31592968E-02;
  COFD[10792] = -1.16109448E+01;
  COFD[10793] = -4.93356528E-01;
  COFD[10794] = 4.31025285E-01;
  COFD[10795] = -2.44867682E-02;
  COFD[10796] = -1.16109448E+01;
  COFD[10797] = -4.93356528E-01;
  COFD[10798] = 4.31025285E-01;
  COFD[10799] = -2.44867682E-02;
  COFD[10800] = -1.06319950E+01;
  COFD[10801] = -9.58117096E-01;
  COFD[10802] = 4.96177145E-01;
  COFD[10803] = -2.74706698E-02;
  COFD[10804] = -1.11508705E+01;
  COFD[10805] = -7.12832362E-01;
  COFD[10806] = 4.61804152E-01;
  COFD[10807] = -2.58961896E-02;
  COFD[10808] = -2.29399218E+01;
  COFD[10809] = 5.59959439E+00;
  COFD[10810] = -4.87463559E-01;
  COFD[10811] = 2.01585952E-02;
  COFD[10812] = -1.22701310E+01;
  COFD[10813] = -1.61500371E-01;
  COFD[10814] = 3.84217824E-01;
  COFD[10815] = -2.23309656E-02;
  COFD[10816] = -2.09649992E+01;
  COFD[10817] = 5.45055984E+00;
  COFD[10818] = -4.52626477E-01;
  COFD[10819] = 1.80297457E-02;
  COFD[10820] = -2.20665268E+01;
  COFD[10821] = 5.51007247E+00;
  COFD[10822] = -4.83411907E-01;
  COFD[10823] = 2.02812924E-02;
  COFD[10824] = -2.20949114E+01;
  COFD[10825] = 5.51007247E+00;
  COFD[10826] = -4.83411907E-01;
  COFD[10827] = 2.02812924E-02;
  COFD[10828] = -2.29515207E+01;
  COFD[10829] = 5.58219321E+00;
  COFD[10830] = -4.82941269E-01;
  COFD[10831] = 1.98711890E-02;
  COFD[10832] = -1.87542772E+01;
  COFD[10833] = 4.74513688E+00;
  COFD[10834] = -3.98725524E-01;
  COFD[10835] = 1.71922391E-02;
  COFD[10836] = -1.41324917E+01;
  COFD[10837] = 1.38727136E+00;
  COFD[10838] = 1.63642976E-01;
  COFD[10839] = -1.20926895E-02;
  COFD[10840] = -2.29645447E+01;
  COFD[10841] = 5.58219321E+00;
  COFD[10842] = -4.82941269E-01;
  COFD[10843] = 1.98711890E-02;
  COFD[10844] = -2.29380382E+01;
  COFD[10845] = 5.58219321E+00;
  COFD[10846] = -4.82941269E-01;
  COFD[10847] = 1.98711890E-02;
  COFD[10848] = -2.26059105E+01;
  COFD[10849] = 5.45743664E+00;
  COFD[10850] = -4.53877300E-01;
  COFD[10851] = 1.80982969E-02;
  COFD[10852] = -2.26059105E+01;
  COFD[10853] = 5.45743664E+00;
  COFD[10854] = -4.53877300E-01;
  COFD[10855] = 1.80982969E-02;
  COFD[10856] = -2.26384257E+01;
  COFD[10857] = 5.45743664E+00;
  COFD[10858] = -4.53877300E-01;
  COFD[10859] = 1.80982969E-02;
  COFD[10860] = -2.26836499E+01;
  COFD[10861] = 5.47552771E+00;
  COFD[10862] = -4.57173951E-01;
  COFD[10863] = 1.82791721E-02;
  COFD[10864] = -1.59635369E+01;
  COFD[10865] = 2.03061309E+00;
  COFD[10866] = 7.09547643E-02;
  COFD[10867] = -7.74512315E-03;
  COFD[10868] = -1.59785605E+01;
  COFD[10869] = 2.03061309E+00;
  COFD[10870] = 7.09547643E-02;
  COFD[10871] = -7.74512315E-03;
  COFD[10872] = -1.75421842E+01;
  COFD[10873] = 2.73943771E+00;
  COFD[10874] = -3.30649537E-02;
  COFD[10875] = -2.79117250E-03;
  COFD[10876] = -2.29034442E+01;
  COFD[10877] = 5.61183042E+00;
  COFD[10878] = -4.90566396E-01;
  COFD[10879] = 2.03536798E-02;
  COFD[10880] = -2.15260200E+01;
  COFD[10881] = 4.56640766E+00;
  COFD[10882] = -3.07568513E-01;
  COFD[10883] = 1.05437086E-02;
  COFD[10884] = -2.20003434E+01;
  COFD[10885] = 4.90271383E+00;
  COFD[10886] = -3.60896715E-01;
  COFD[10887] = 1.32352181E-02;
  COFD[10888] = -2.20172593E+01;
  COFD[10889] = 4.90271383E+00;
  COFD[10890] = -3.60896715E-01;
  COFD[10891] = 1.32352181E-02;
  COFD[10892] = -2.05654423E+01;
  COFD[10893] = 4.16804380E+00;
  COFD[10894] = -2.46372859E-01;
  COFD[10895] = 7.52105030E-03;
  COFD[10896] = -2.12768078E+01;
  COFD[10897] = 4.48188359E+00;
  COFD[10898] = -2.94414571E-01;
  COFD[10899] = 9.88838906E-03;
  COFD[10900] = -2.12918063E+01;
  COFD[10901] = 4.48188359E+00;
  COFD[10902] = -2.94414571E-01;
  COFD[10903] = 9.88838906E-03;
  COFD[10904] = -1.73379092E+01;
  COFD[10905] = 2.55561949E+00;
  COFD[10906] = -5.90530207E-03;
  COFD[10907] = -4.09393782E-03;
  COFD[10908] = -2.12290046E+01;
  COFD[10909] = 4.32707381E+00;
  COFD[10910] = -2.70563830E-01;
  COFD[10911] = 8.70791456E-03;
  COFD[10912] = -2.12391730E+01;
  COFD[10913] = 4.32707381E+00;
  COFD[10914] = -2.70563830E-01;
  COFD[10915] = 8.70791456E-03;
  COFD[10916] = -2.12490621E+01;
  COFD[10917] = 4.32707381E+00;
  COFD[10918] = -2.70563830E-01;
  COFD[10919] = 8.70791456E-03;
  COFD[10920] = -1.94433367E+01;
  COFD[10921] = 3.38805125E+00;
  COFD[10922] = -1.28605694E-01;
  COFD[10923] = 1.78139928E-03;
  COFD[10924] = -1.94364373E+01;
  COFD[10925] = 3.38805125E+00;
  COFD[10926] = -1.28605694E-01;
  COFD[10927] = 1.78139928E-03;
  COFD[10928] = -1.94436482E+01;
  COFD[10929] = 3.38805125E+00;
  COFD[10930] = -1.28605694E-01;
  COFD[10931] = 1.78139928E-03;
  COFD[10932] = -1.94507045E+01;
  COFD[10933] = 3.38805125E+00;
  COFD[10934] = -1.28605694E-01;
  COFD[10935] = 1.78139928E-03;
  COFD[10936] = -1.75400768E+01;
  COFD[10937] = 2.45372496E+00;
  COFD[10938] = 9.16587873E-03;
  COFD[10939] = -4.81554146E-03;
  COFD[10940] = -1.75455525E+01;
  COFD[10941] = 2.45372496E+00;
  COFD[10942] = 9.16587873E-03;
  COFD[10943] = -4.81554146E-03;
  COFD[10944] = -1.73938638E+01;
  COFD[10945] = 2.37303724E+00;
  COFD[10946] = 2.10369053E-02;
  COFD[10947] = -5.38165037E-03;
  COFD[10948] = -1.66106763E+01;
  COFD[10949] = 1.97256518E+00;
  COFD[10950] = 7.93547823E-02;
  COFD[10951] = -8.14046199E-03;
  COFD[10952] = -1.64902853E+01;
  COFD[10953] = 1.90799414E+00;
  COFD[10954] = 8.86853909E-02;
  COFD[10955] = -8.57885629E-03;
  COFD[10956] = -1.56831472E+01;
  COFD[10957] = 1.51210139E+00;
  COFD[10958] = 1.45705555E-01;
  COFD[10959] = -1.12527582E-02;
  COFD[10960] = -1.55886121E+01;
  COFD[10961] = 1.45929070E+00;
  COFD[10962] = 1.53302110E-01;
  COFD[10963] = -1.16088255E-02;
  COFD[10964] = -1.48245663E+01;
  COFD[10965] = 1.09196780E+00;
  COFD[10966] = 2.05935790E-01;
  COFD[10967] = -1.40664564E-02;
  COFD[10968] = -1.47710431E+01;
  COFD[10969] = 1.05667043E+00;
  COFD[10970] = 2.10986202E-01;
  COFD[10971] = -1.43017536E-02;
  COFD[10972] = -1.40894144E+01;
  COFD[10973] = 7.31458802E-01;
  COFD[10974] = 2.57430647E-01;
  COFD[10975] = -1.64638268E-02;
  COFD[10976] = -1.40317416E+01;
  COFD[10977] = 6.95865823E-01;
  COFD[10978] = 2.62499652E-01;
  COFD[10979] = -1.66993047E-02;
  COFD[10980] = -1.34919805E+01;
  COFD[10981] = 4.34069354E-01;
  COFD[10982] = 2.99858223E-01;
  COFD[10983] = -1.84358359E-02;
  COFD[10984] = -1.34078465E+01;
  COFD[10985] = 3.89413100E-01;
  COFD[10986] = 3.06208761E-01;
  COFD[10987] = -1.87299474E-02;
  COFD[10988] = -1.22684686E+01;
  COFD[10989] = -1.61500371E-01;
  COFD[10990] = 3.84217824E-01;
  COFD[10991] = -2.23309656E-02;
  COFD[10992] = -1.22684686E+01;
  COFD[10993] = -1.61500371E-01;
  COFD[10994] = 3.84217824E-01;
  COFD[10995] = -2.23309656E-02;
  COFD[10996] = -1.22684686E+01;
  COFD[10997] = -1.61500371E-01;
  COFD[10998] = 3.84217824E-01;
  COFD[10999] = -2.23309656E-02;
  COFD[11000] = -1.24841063E+01;
  COFD[11001] = -6.86597662E-02;
  COFD[11002] = 3.71153707E-01;
  COFD[11003] = -2.17314375E-02;
  COFD[11004] = -1.21103757E+01;
  COFD[11005] = -2.54815099E-01;
  COFD[11006] = 3.97347047E-01;
  COFD[11007] = -2.29334921E-02;
  COFD[11008] = -1.21103757E+01;
  COFD[11009] = -2.54815099E-01;
  COFD[11010] = 3.97347047E-01;
  COFD[11011] = -2.29334921E-02;
  COFD[11012] = -1.11508705E+01;
  COFD[11013] = -7.12832362E-01;
  COFD[11014] = 4.61804152E-01;
  COFD[11015] = -2.58961896E-02;
  COFD[11016] = -1.16357512E+01;
  COFD[11017] = -4.81860216E-01;
  COFD[11018] = 4.29406287E-01;
  COFD[11019] = -2.44123168E-02;
  COFD[11020] = -2.28938469E+01;
  COFD[11021] = 5.61204588E+00;
  COFD[11022] = -4.90798632E-01;
  COFD[11023] = 2.03718133E-02;
  COFD[11024] = -2.27628265E+01;
  COFD[11025] = 5.60192583E+00;
  COFD[11026] = -4.91455403E-01;
  COFD[11027] = 2.04776556E-02;
  COFD[11028] = -1.42894603E+01;
  COFD[11029] = 3.67490723E+00;
  COFD[11030] = -2.65114792E-01;
  COFD[11031] = 1.16092671E-02;
  COFD[11032] = -1.40756909E+01;
  COFD[11033] = 3.07549274E+00;
  COFD[11034] = -1.88889344E-01;
  COFD[11035] = 8.37152866E-03;
  COFD[11036] = -1.40949183E+01;
  COFD[11037] = 3.07549274E+00;
  COFD[11038] = -1.88889344E-01;
  COFD[11039] = 8.37152866E-03;
  COFD[11040] = -1.52486292E+01;
  COFD[11041] = 3.35922578E+00;
  COFD[11042] = -2.25181399E-01;
  COFD[11043] = 9.92132878E-03;
  COFD[11044] = -1.16906458E+01;
  COFD[11045] = 2.47469981E+00;
  COFD[11046] = -1.10436257E-01;
  COFD[11047] = 4.95273813E-03;
  COFD[11048] = -2.10643264E+01;
  COFD[11049] = 5.53614864E+00;
  COFD[11050] = -4.86046753E-01;
  COFD[11051] = 2.03659193E-02;
  COFD[11052] = -1.52554785E+01;
  COFD[11053] = 3.35922578E+00;
  COFD[11054] = -2.25181399E-01;
  COFD[11055] = 9.92132878E-03;
  COFD[11056] = -1.52414498E+01;
  COFD[11057] = 3.35922578E+00;
  COFD[11058] = -2.25181399E-01;
  COFD[11059] = 9.92132878E-03;
  COFD[11060] = -1.59404910E+01;
  COFD[11061] = 3.66853818E+00;
  COFD[11062] = -2.64346221E-01;
  COFD[11063] = 1.15784613E-02;
  COFD[11064] = -1.59404910E+01;
  COFD[11065] = 3.66853818E+00;
  COFD[11066] = -2.64346221E-01;
  COFD[11067] = 1.15784613E-02;
  COFD[11068] = -1.59633426E+01;
  COFD[11069] = 3.66853818E+00;
  COFD[11070] = -2.64346221E-01;
  COFD[11071] = 1.15784613E-02;
  COFD[11072] = -1.59327344E+01;
  COFD[11073] = 3.65620899E+00;
  COFD[11074] = -2.62933804E-01;
  COFD[11075] = 1.15253223E-02;
  COFD[11076] = -2.04750606E+01;
  COFD[11077] = 5.23112374E+00;
  COFD[11078] = -4.54967682E-01;
  COFD[11079] = 1.93570423E-02;
  COFD[11080] = -2.04833743E+01;
  COFD[11081] = 5.23112374E+00;
  COFD[11082] = -4.54967682E-01;
  COFD[11083] = 1.93570423E-02;
  COFD[11084] = -2.02268939E+01;
  COFD[11085] = 5.13632099E+00;
  COFD[11086] = -4.44839130E-01;
  COFD[11087] = 1.90058356E-02;
  COFD[11088] = -1.50031706E+01;
  COFD[11089] = 3.26223357E+00;
  COFD[11090] = -2.12746642E-01;
  COFD[11091] = 9.38912883E-03;
  COFD[11092] = -1.81432499E+01;
  COFD[11093] = 4.37565431E+00;
  COFD[11094] = -3.53906025E-01;
  COFD[11095] = 1.53760786E-02;
  COFD[11096] = -1.76002073E+01;
  COFD[11097] = 4.19171952E+00;
  COFD[11098] = -3.31354810E-01;
  COFD[11099] = 1.44520623E-02;
  COFD[11100] = -1.76099599E+01;
  COFD[11101] = 4.19171952E+00;
  COFD[11102] = -3.31354810E-01;
  COFD[11103] = 1.44520623E-02;
  COFD[11104] = -1.85864196E+01;
  COFD[11105] = 4.54915847E+00;
  COFD[11106] = -3.75000738E-01;
  COFD[11107] = 1.62324821E-02;
  COFD[11108] = -1.83166409E+01;
  COFD[11109] = 4.42045763E+00;
  COFD[11110] = -3.59451578E-01;
  COFD[11111] = 1.56056164E-02;
  COFD[11112] = -1.83249359E+01;
  COFD[11113] = 4.42045763E+00;
  COFD[11114] = -3.59451578E-01;
  COFD[11115] = 1.56056164E-02;
  COFD[11116] = -2.02693704E+01;
  COFD[11117] = 5.10426133E+00;
  COFD[11118] = -4.41256919E-01;
  COFD[11119] = 1.88737290E-02;
  COFD[11120] = -1.87434421E+01;
  COFD[11121] = 4.48550694E+00;
  COFD[11122] = -3.67277454E-01;
  COFD[11123] = 1.59194755E-02;
  COFD[11124] = -1.87483223E+01;
  COFD[11125] = 4.48550694E+00;
  COFD[11126] = -3.67277454E-01;
  COFD[11127] = 1.59194755E-02;
  COFD[11128] = -1.87530190E+01;
  COFD[11129] = 4.48550694E+00;
  COFD[11130] = -3.67277454E-01;
  COFD[11131] = 1.59194755E-02;
  COFD[11132] = -1.98609159E+01;
  COFD[11133] = 4.84231878E+00;
  COFD[11134] = -4.10101001E-01;
  COFD[11135] = 1.76356687E-02;
  COFD[11136] = -1.98580097E+01;
  COFD[11137] = 4.84231878E+00;
  COFD[11138] = -4.10101001E-01;
  COFD[11139] = 1.76356687E-02;
  COFD[11140] = -1.98610465E+01;
  COFD[11141] = 4.84231878E+00;
  COFD[11142] = -4.10101001E-01;
  COFD[11143] = 1.76356687E-02;
  COFD[11144] = -1.98639938E+01;
  COFD[11145] = 4.84231878E+00;
  COFD[11146] = -4.10101001E-01;
  COFD[11147] = 1.76356687E-02;
  COFD[11148] = -2.07714631E+01;
  COFD[11149] = 5.13381106E+00;
  COFD[11150] = -4.44579059E-01;
  COFD[11151] = 1.89972323E-02;
  COFD[11152] = -2.07735397E+01;
  COFD[11153] = 5.13381106E+00;
  COFD[11154] = -4.44579059E-01;
  COFD[11155] = 1.89972323E-02;
  COFD[11156] = -2.08488159E+01;
  COFD[11157] = 5.14859291E+00;
  COFD[11158] = -4.45988615E-01;
  COFD[11159] = 1.90375090E-02;
  COFD[11160] = -2.12157081E+01;
  COFD[11161] = 5.24766160E+00;
  COFD[11162] = -4.56882620E-01;
  COFD[11163] = 1.94309393E-02;
  COFD[11164] = -2.13042644E+01;
  COFD[11165] = 5.26942506E+00;
  COFD[11166] = -4.59459767E-01;
  COFD[11167] = 1.95328925E-02;
  COFD[11168] = -2.16312330E+01;
  COFD[11169] = 5.36160575E+00;
  COFD[11170] = -4.69678973E-01;
  COFD[11171] = 1.99069834E-02;
  COFD[11172] = -2.16795672E+01;
  COFD[11173] = 5.36659793E+00;
  COFD[11174] = -4.70008133E-01;
  COFD[11175] = 1.99082896E-02;
  COFD[11176] = -2.18580027E+01;
  COFD[11177] = 5.40322773E+00;
  COFD[11178] = -4.72630192E-01;
  COFD[11179] = 1.99360102E-02;
  COFD[11180] = -2.19034857E+01;
  COFD[11181] = 5.40667263E+00;
  COFD[11182] = -4.72867562E-01;
  COFD[11183] = 1.99379187E-02;
  COFD[11184] = -2.20902743E+01;
  COFD[11185] = 5.45237285E+00;
  COFD[11186] = -4.77075672E-01;
  COFD[11187] = 2.00518642E-02;
  COFD[11188] = -2.21414190E+01;
  COFD[11189] = 5.45978982E+00;
  COFD[11190] = -4.77871946E-01;
  COFD[11191] = 2.00798414E-02;
  COFD[11192] = -2.23702158E+01;
  COFD[11193] = 5.52375635E+00;
  COFD[11194] = -4.84828265E-01;
  COFD[11195] = 2.03285256E-02;
  COFD[11196] = -2.24179518E+01;
  COFD[11197] = 5.53218678E+00;
  COFD[11198] = -4.85657384E-01;
  COFD[11199] = 2.03539768E-02;
  COFD[11200] = -2.27624063E+01;
  COFD[11201] = 5.60192583E+00;
  COFD[11202] = -4.91455403E-01;
  COFD[11203] = 2.04776556E-02;
  COFD[11204] = -2.27624063E+01;
  COFD[11205] = 5.60192583E+00;
  COFD[11206] = -4.91455403E-01;
  COFD[11207] = 2.04776556E-02;
  COFD[11208] = -2.27624063E+01;
  COFD[11209] = 5.60192583E+00;
  COFD[11210] = -4.91455403E-01;
  COFD[11211] = 2.04776556E-02;
  COFD[11212] = -2.27467840E+01;
  COFD[11213] = 5.59873321E+00;
  COFD[11214] = -4.91665779E-01;
  COFD[11215] = 2.05114831E-02;
  COFD[11216] = -2.28072905E+01;
  COFD[11217] = 5.60504512E+00;
  COFD[11218] = -4.91228535E-01;
  COFD[11219] = 2.04427740E-02;
  COFD[11220] = -2.28072905E+01;
  COFD[11221] = 5.60504512E+00;
  COFD[11222] = -4.91228535E-01;
  COFD[11223] = 2.04427740E-02;
  COFD[11224] = -2.29399218E+01;
  COFD[11225] = 5.59959439E+00;
  COFD[11226] = -4.87463559E-01;
  COFD[11227] = 2.01585952E-02;
  COFD[11228] = -2.28938469E+01;
  COFD[11229] = 5.61204588E+00;
  COFD[11230] = -4.90798632E-01;
  COFD[11231] = 2.03718133E-02;
  COFD[11232] = -1.49828551E+01;
  COFD[11233] = 3.25781069E+00;
  COFD[11234] = -2.12199367E-01;
  COFD[11235] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 1;
  KTDIF[1] = 5;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = -2.32473219E-01;
  COFTD[1] = 9.16129716E-04;
  COFTD[2] = -3.79155489E-07;
  COFTD[3] = 5.37766351E-11;
  COFTD[4] = 0.00000000E+00;
  COFTD[5] = 0.00000000E+00;
  COFTD[6] = 0.00000000E+00;
  COFTD[7] = 0.00000000E+00;
  COFTD[8] = 2.35281489E-01;
  COFTD[9] = 4.65667373E-04;
  COFTD[10] = -2.60938016E-07;
  COFTD[11] = 4.49268709E-11;
  COFTD[12] = 2.37051899E-01;
  COFTD[13] = 4.69171356E-04;
  COFTD[14] = -2.62901483E-07;
  COFTD[15] = 4.52649298E-11;
  COFTD[16] = 1.80186380E-01;
  COFTD[17] = 6.02880848E-04;
  COFTD[18] = -3.27062078E-07;
  COFTD[19] = 5.50169005E-11;
  COFTD[20] = 1.44152190E-01;
  COFTD[21] = 7.99993584E-05;
  COFTD[22] = -4.89707442E-08;
  COFTD[23] = 9.14277269E-12;
  COFTD[24] = -1.74351746E-01;
  COFTD[25] = 8.62242165E-04;
  COFTD[26] = -3.79543417E-07;
  COFTD[27] = 5.60259034E-11;
  COFTD[28] = 1.80513126E-01;
  COFTD[29] = 6.03974096E-04;
  COFTD[30] = -3.27655164E-07;
  COFTD[31] = 5.51166667E-11;
  COFTD[32] = 1.79839678E-01;
  COFTD[33] = 6.01720824E-04;
  COFTD[34] = -3.26432767E-07;
  COFTD[35] = 5.49110406E-11;
  COFTD[36] = 9.90747140E-02;
  COFTD[37] = 6.44198017E-04;
  COFTD[38] = -3.38484184E-07;
  COFTD[39] = 5.57353833E-11;
  COFTD[40] = 9.90747140E-02;
  COFTD[41] = 6.44198017E-04;
  COFTD[42] = -3.38484184E-07;
  COFTD[43] = 5.57353833E-11;
  COFTD[44] = 1.00038655E-01;
  COFTD[45] = 6.50465703E-04;
  COFTD[46] = -3.41777446E-07;
  COFTD[47] = 5.62776574E-11;
  COFTD[48] = 1.05123703E-01;
  COFTD[49] = 6.50663360E-04;
  COFTD[50] = -3.42563171E-07;
  COFTD[51] = 5.64801866E-11;
  COFTD[52] = -1.60980730E-01;
  COFTD[53] = 9.03804574E-04;
  COFTD[54] = -4.06926592E-07;
  COFTD[55] = 6.09200234E-11;
  COFTD[56] = -1.61357064E-01;
  COFTD[57] = 9.05917454E-04;
  COFTD[58] = -4.07877889E-07;
  COFTD[59] = 6.10624399E-11;
  COFTD[60] = -1.31244138E-01;
  COFTD[61] = 9.03898764E-04;
  COFTD[62] = -4.17830295E-07;
  COFTD[63] = 6.35723824E-11;
  COFTD[64] = 2.00119185E-01;
  COFTD[65] = 5.64791694E-04;
  COFTD[66] = -3.09444383E-07;
  COFTD[67] = 5.24137469E-11;
  COFTD[68] = -2.00308977E-02;
  COFTD[69] = 8.50438113E-04;
  COFTD[70] = -4.21063477E-07;
  COFTD[71] = 6.67958138E-11;
  COFTD[72] = 1.63244604E-02;
  COFTD[73] = 7.90131000E-04;
  COFTD[74] = -3.98291254E-07;
  COFTD[75] = 6.38849501E-11;
  COFTD[76] = 1.63717030E-02;
  COFTD[77] = 7.92417622E-04;
  COFTD[78] = -3.99443901E-07;
  COFTD[79] = 6.40698319E-11;
  COFTD[80] = -5.08743421E-02;
  COFTD[81] = 8.54340362E-04;
  COFTD[82] = -4.15925370E-07;
  COFTD[83] = 6.53061561E-11;
  COFTD[84] = -2.71689899E-02;
  COFTD[85] = 8.37231102E-04;
  COFTD[86] = -4.12886635E-07;
  COFTD[87] = 6.53403612E-11;
  COFTD[88] = -2.72323151E-02;
  COFTD[89] = 8.39182512E-04;
  COFTD[90] = -4.13848987E-07;
  COFTD[91] = 6.54926559E-11;
  COFTD[92] = -1.41799447E-01;
  COFTD[93] = 9.22438273E-04;
  COFTD[94] = -4.23685013E-07;
  COFTD[95] = 6.42120066E-11;
  COFTD[96] = -4.05264355E-02;
  COFTD[97] = 8.65034494E-04;
  COFTD[98] = -4.23754623E-07;
  COFTD[99] = 6.67873033E-11;
  COFTD[100] = -4.05741399E-02;
  COFTD[101] = 8.66052741E-04;
  COFTD[102] = -4.24253431E-07;
  COFTD[103] = 6.68659197E-11;
  COFTD[104] = -4.06196633E-02;
  COFTD[105] = 8.67024435E-04;
  COFTD[106] = -4.24729436E-07;
  COFTD[107] = 6.69409420E-11;
  COFTD[108] = -1.04600639E-01;
  COFTD[109] = 9.18520347E-04;
  COFTD[110] = -4.33727277E-07;
  COFTD[111] = 6.68515219E-11;
  COFTD[112] = -1.04534832E-01;
  COFTD[113] = 9.17942482E-04;
  COFTD[114] = -4.33454408E-07;
  COFTD[115] = 6.68094638E-11;
  COFTD[116] = -1.04603590E-01;
  COFTD[117] = 9.18546258E-04;
  COFTD[118] = -4.33739512E-07;
  COFTD[119] = 6.68534077E-11;
  COFTD[120] = -1.04669963E-01;
  COFTD[121] = 9.19129092E-04;
  COFTD[122] = -4.34014727E-07;
  COFTD[123] = 6.68958274E-11;
  COFTD[124] = -1.49470017E-01;
  COFTD[125] = 9.39836937E-04;
  COFTD[126] = -4.29897941E-07;
  COFTD[127] = 6.49890671E-11;
  COFTD[128] = -1.49532693E-01;
  COFTD[129] = 9.40231034E-04;
  COFTD[130] = -4.30078208E-07;
  COFTD[131] = 6.50163186E-11;
  COFTD[132] = -1.53409629E-01;
  COFTD[133] = 9.41152813E-04;
  COFTD[134] = -4.29144055E-07;
  COFTD[135] = 6.47496563E-11;
  COFTD[136] = -1.70681717E-01;
  COFTD[137] = 9.45804136E-04;
  COFTD[138] = -4.24958076E-07;
  COFTD[139] = 6.35382171E-11;
  COFTD[140] = -1.73186677E-01;
  COFTD[141] = 9.45866222E-04;
  COFTD[142] = -4.23987662E-07;
  COFTD[143] = 6.33007683E-11;
  COFTD[144] = -1.87225880E-01;
  COFTD[145] = 9.46155112E-04;
  COFTD[146] = -4.18273792E-07;
  COFTD[147] = 6.19098425E-11;
  COFTD[148] = -1.88901062E-01;
  COFTD[149] = 9.45827894E-04;
  COFTD[150] = -4.17371688E-07;
  COFTD[151] = 6.17061042E-11;
  COFTD[152] = -2.00326797E-01;
  COFTD[153] = 9.43206411E-04;
  COFTD[154] = -4.10815084E-07;
  COFTD[155] = 6.02382335E-11;
  COFTD[156] = -2.01409577E-01;
  COFTD[157] = 9.42757436E-04;
  COFTD[158] = -4.10067600E-07;
  COFTD[159] = 6.00772853E-11;
  COFTD[160] = -2.10628102E-01;
  COFTD[161] = 9.38318430E-04;
  COFTD[162] = -4.03217097E-07;
  COFTD[163] = 5.86175281E-11;
  COFTD[164] = -2.11550069E-01;
  COFTD[165] = 9.37688881E-04;
  COFTD[166] = -4.02415206E-07;
  COFTD[167] = 5.84513118E-11;
  COFTD[168] = -2.18698457E-01;
  COFTD[169] = 9.32462257E-04;
  COFTD[170] = -3.95892983E-07;
  COFTD[171] = 5.71051456E-11;
  COFTD[172] = -2.19848467E-01;
  COFTD[173] = 9.31300061E-04;
  COFTD[174] = -3.94646969E-07;
  COFTD[175] = 5.68547858E-11;
  COFTD[176] = -2.32456841E-01;
  COFTD[177] = 9.16065173E-04;
  COFTD[178] = -3.79128777E-07;
  COFTD[179] = 5.37728464E-11;
  COFTD[180] = -2.32456841E-01;
  COFTD[181] = 9.16065173E-04;
  COFTD[182] = -3.79128777E-07;
  COFTD[183] = 5.37728464E-11;
  COFTD[184] = -2.32456841E-01;
  COFTD[185] = 9.16065173E-04;
  COFTD[186] = -3.79128777E-07;
  COFTD[187] = 5.37728464E-11;
  COFTD[188] = -2.30604706E-01;
  COFTD[189] = 9.19203996E-04;
  COFTD[190] = -3.81973633E-07;
  COFTD[191] = 5.43234320E-11;
  COFTD[192] = -2.34683739E-01;
  COFTD[193] = 9.14438684E-04;
  COFTD[194] = -3.76888486E-07;
  COFTD[195] = 5.33062577E-11;
  COFTD[196] = -2.34683739E-01;
  COFTD[197] = 9.14438684E-04;
  COFTD[198] = -3.76888486E-07;
  COFTD[199] = 5.33062577E-11;
  COFTD[200] = -2.42317841E-01;
  COFTD[201] = 8.98733708E-04;
  COFTD[202] = -3.63149024E-07;
  COFTD[203] = 5.06734515E-11;
  COFTD[204] = -2.38573600E-01;
  COFTD[205] = 9.07159457E-04;
  COFTD[206] = -3.70373634E-07;
  COFTD[207] = 5.20505995E-11;
  COFTD[208] = 2.01521521E-01;
  COFTD[209] = 5.62743751E-04;
  COFTD[210] = -3.08519054E-07;
  COFTD[211] = 5.22805672E-11;
  COFTD[212] = 1.95741220E-02;
  COFTD[213] = 8.31428465E-04;
  COFTD[214] = -4.19561913E-07;
  COFTD[215] = 6.73417788E-11;
  COFTD[216] = -1.44152190E-01;
  COFTD[217] = -7.99993584E-05;
  COFTD[218] = 4.89707442E-08;
  COFTD[219] = -9.14277269E-12;
  COFTD[220] = 4.06676789E-01;
  COFTD[221] = 3.84699853E-05;
  COFTD[222] = -2.54843294E-08;
  COFTD[223] = 5.86294132E-12;
  COFTD[224] = 4.12890501E-01;
  COFTD[225] = 3.90577773E-05;
  COFTD[226] = -2.58737105E-08;
  COFTD[227] = 5.95252260E-12;
  COFTD[228] = 4.28228101E-01;
  COFTD[229] = 1.20872486E-04;
  COFTD[230] = -7.70263335E-08;
  COFTD[231] = 1.52677960E-11;
  COFTD[232] = 0.00000000E+00;
  COFTD[233] = 0.00000000E+00;
  COFTD[234] = 0.00000000E+00;
  COFTD[235] = 0.00000000E+00;
  COFTD[236] = 2.27466103E-02;
  COFTD[237] = 6.73071543E-04;
  COFTD[238] = -3.40932103E-07;
  COFTD[239] = 5.48493184E-11;
  COFTD[240] = 4.29786829E-01;
  COFTD[241] = 1.21312456E-04;
  COFTD[242] = -7.73067054E-08;
  COFTD[243] = 1.53233700E-11;
  COFTD[244] = 4.26576987E-01;
  COFTD[245] = 1.20406440E-04;
  COFTD[246] = -7.67293441E-08;
  COFTD[247] = 1.52089282E-11;
  COFTD[248] = 3.24743582E-01;
  COFTD[249] = 1.77796660E-04;
  COFTD[250] = -1.08933575E-07;
  COFTD[251] = 2.03593720E-11;
  COFTD[252] = 3.24743582E-01;
  COFTD[253] = 1.77796660E-04;
  COFTD[254] = -1.08933575E-07;
  COFTD[255] = 2.03593720E-11;
  COFTD[256] = 3.31188133E-01;
  COFTD[257] = 1.81325042E-04;
  COFTD[258] = -1.11095367E-07;
  COFTD[259] = 2.07634046E-11;
  COFTD[260] = 3.39554500E-01;
  COFTD[261] = 1.79333587E-04;
  COFTD[262] = -1.10134815E-07;
  COFTD[263] = 2.06425572E-11;
  COFTD[264] = 1.22118967E-01;
  COFTD[265] = 6.18369499E-04;
  COFTD[266] = -3.28420406E-07;
  COFTD[267] = 5.44599896E-11;
  COFTD[268] = 1.22692619E-01;
  COFTD[269] = 6.21274281E-04;
  COFTD[270] = -3.29963157E-07;
  COFTD[271] = 5.47158146E-11;
  COFTD[272] = 1.40313353E-01;
  COFTD[273] = 6.01262661E-04;
  COFTD[274] = -3.21913277E-07;
  COFTD[275] = 5.36675963E-11;
  COFTD[276] = 4.30602469E-01;
  COFTD[277] = 9.35955212E-05;
  COFTD[278] = -6.03979306E-08;
  COFTD[279] = 1.23114290E-11;
  COFTD[280] = 2.93190141E-01;
  COFTD[281] = 4.01428114E-04;
  COFTD[282] = -2.30704675E-07;
  COFTD[283] = 4.05174676E-11;
  COFTD[284] = 3.05611370E-01;
  COFTD[285] = 3.24503916E-04;
  COFTD[286] = -1.89888419E-07;
  COFTD[287] = 3.38661408E-11;
  COFTD[288] = 3.07390533E-01;
  COFTD[289] = 3.26393065E-04;
  COFTD[290] = -1.90993884E-07;
  COFTD[291] = 3.40632978E-11;
  COFTD[292] = 2.49016176E-01;
  COFTD[293] = 4.29034331E-04;
  COFTD[294] = -2.42667349E-07;
  COFTD[295] = 4.20799172E-11;
  COFTD[296] = 2.72758271E-01;
  COFTD[297] = 3.94400799E-04;
  COFTD[298] = -2.25799420E-07;
  COFTD[299] = 3.95323710E-11;
  COFTD[300] = 2.74035711E-01;
  COFTD[301] = 3.96247941E-04;
  COFTD[302] = -2.26856932E-07;
  COFTD[303] = 3.97175174E-11;
  COFTD[304] = 1.59647280E-01;
  COFTD[305] = 6.04189783E-04;
  COFTD[306] = -3.25568248E-07;
  COFTD[307] = 5.45132450E-11;
  COFTD[308] = 2.71945062E-01;
  COFTD[309] = 4.30812732E-04;
  COFTD[310] = -2.45083425E-07;
  COFTD[311] = 4.26911430E-11;
  COFTD[312] = 2.72586795E-01;
  COFTD[313] = 4.31829359E-04;
  COFTD[314] = -2.45661770E-07;
  COFTD[315] = 4.27918850E-11;
  COFTD[316] = 2.73199845E-01;
  COFTD[317] = 4.32800547E-04;
  COFTD[318] = -2.46214265E-07;
  COFTD[319] = 4.28881244E-11;
  COFTD[320] = 2.11488756E-01;
  COFTD[321] = 5.48043055E-04;
  COFTD[322] = -3.01831774E-07;
  COFTD[323] = 5.13133698E-11;
  COFTD[324] = 2.11222471E-01;
  COFTD[325] = 5.47353014E-04;
  COFTD[326] = -3.01451738E-07;
  COFTD[327] = 5.12487611E-11;
  COFTD[328] = 2.11500700E-01;
  COFTD[329] = 5.48074004E-04;
  COFTD[330] = -3.01848819E-07;
  COFTD[331] = 5.13162676E-11;
  COFTD[332] = 2.11769443E-01;
  COFTD[333] = 5.48770414E-04;
  COFTD[334] = -3.02232363E-07;
  COFTD[335] = 5.13814725E-11;
  COFTD[336] = 1.58396101E-01;
  COFTD[337] = 6.35597673E-04;
  COFTD[338] = -3.41439546E-07;
  COFTD[339] = 5.70515995E-11;
  COFTD[340] = 1.58529051E-01;
  COFTD[341] = 6.36131164E-04;
  COFTD[342] = -3.41726134E-07;
  COFTD[343] = 5.70994860E-11;
  COFTD[344] = 1.53358438E-01;
  COFTD[345] = 6.43873723E-04;
  COFTD[346] = -3.45082948E-07;
  COFTD[347] = 5.75702016E-11;
  COFTD[348] = 1.30463447E-01;
  COFTD[349] = 6.81796796E-04;
  COFTD[350] = -3.61585604E-07;
  COFTD[351] = 5.99025499E-11;
  COFTD[352] = 1.26779385E-01;
  COFTD[353] = 6.87063273E-04;
  COFTD[354] = -3.63785542E-07;
  COFTD[355] = 6.02023932E-11;
  COFTD[356] = 1.05942671E-01;
  COFTD[357] = 7.18848555E-04;
  COFTD[358] = -3.77076057E-07;
  COFTD[359] = 6.20225689E-11;
  COFTD[360] = 1.03244669E-01;
  COFTD[361] = 7.22550275E-04;
  COFTD[362] = -3.78567885E-07;
  COFTD[363] = 6.22200997E-11;
  COFTD[364] = 8.44926326E-02;
  COFTD[365] = 7.49323727E-04;
  COFTD[366] = -3.89336188E-07;
  COFTD[367] = 6.36479819E-11;
  COFTD[368] = 8.25976773E-02;
  COFTD[369] = 7.51846915E-04;
  COFTD[370] = -3.90320243E-07;
  COFTD[371] = 6.37747376E-11;
  COFTD[372] = 6.60203320E-02;
  COFTD[373] = 7.74269824E-04;
  COFTD[374] = -3.99007487E-07;
  COFTD[375] = 6.48893661E-11;
  COFTD[376] = 6.42551462E-02;
  COFTD[377] = 7.76497976E-04;
  COFTD[378] = -3.99842171E-07;
  COFTD[379] = 6.49928891E-11;
  COFTD[380] = 5.02866745E-02;
  COFTD[381] = 7.94635109E-04;
  COFTD[382] = -4.06630112E-07;
  COFTD[383] = 6.58364054E-11;
  COFTD[384] = 4.78618973E-02;
  COFTD[385] = 7.97470178E-04;
  COFTD[386] = -4.07638597E-07;
  COFTD[387] = 6.59548109E-11;
  COFTD[388] = 1.95713637E-02;
  COFTD[389] = 8.31311304E-04;
  COFTD[390] = -4.19502791E-07;
  COFTD[391] = 6.73322894E-11;
  COFTD[392] = 1.95713637E-02;
  COFTD[393] = 8.31311304E-04;
  COFTD[394] = -4.19502791E-07;
  COFTD[395] = 6.73322894E-11;
  COFTD[396] = 1.95713637E-02;
  COFTD[397] = 8.31311304E-04;
  COFTD[398] = -4.19502791E-07;
  COFTD[399] = 6.73322894E-11;
  COFTD[400] = 2.42287950E-02;
  COFTD[401] = 8.26439872E-04;
  COFTD[402] = -4.17936294E-07;
  COFTD[403] = 6.71697638E-11;
  COFTD[404] = 1.49563336E-02;
  COFTD[405] = 8.39180881E-04;
  COFTD[406] = -4.22562254E-07;
  COFTD[407] = 6.77329243E-11;
  COFTD[408] = 1.49563336E-02;
  COFTD[409] = 8.39180881E-04;
  COFTD[410] = -4.22562254E-07;
  COFTD[411] = 6.77329243E-11;
  COFTD[412] = -6.12558167E-03;
  COFTD[413] = 8.61898370E-04;
  COFTD[414] = -4.29733612E-07;
  COFTD[415] = 6.84641982E-11;
  COFTD[416] = 4.65223723E-03;
  COFTD[417] = 8.50497228E-04;
  COFTD[418] = -4.26212406E-07;
  COFTD[419] = 6.81161229E-11;
  COFTD[420] = 4.31330748E-01;
  COFTD[421] = 9.20535689E-05;
  COFTD[422] = -5.94508898E-08;
  COFTD[423] = 1.21437846E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[53];
  amrex::Real SIG[53];
  amrex::Real wt[53];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: NC12H26
  Tci[0] = 1.316 * EPS[0];
  ai[0] = (5.55 * avogadro * avogadro * EPS[0] * boltzmann * 1e-24 * SIG[0] *
           SIG[0] * SIG[0]) /
          (wt[0] * wt[0]);
  bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]);
  acentric_i[0] = 0.0;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: OH
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: HO2
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2
  // Imported from NIST
  Tci[5] = 33.145000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (2.015880 * 2.015880 * 12.964000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (2.015880 * 12.964000);
  acentric_i[5] = -0.219000;

  // species 6: H2O
  // Imported from NIST
  Tci[6] = 647.096000;
  ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] /
          (18.015340 * 18.015340 * 220.640000);
  bi[6] = 0.08664 * Rcst * Tci[6] / (18.015340 * 220.640000);
  acentric_i[6] = 0.344300;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: O2
  // Imported from NIST
  Tci[8] = 154.581000;
  ai[8] = 1e6 * 0.42748 * Rcst * Rcst * Tci[8] * Tci[8] /
          (31.998800 * 31.998800 * 50.430466);
  bi[8] = 0.08664 * Rcst * Tci[8] / (31.998800 * 50.430466);
  acentric_i[8] = 0.022200;

  // species 9: CH2
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: CH2*
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: CH3
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: CH4
  // Imported from NIST
  Tci[12] = 190.560000;
  ai[12] = 1e6 * 0.42748 * Rcst * Rcst * Tci[12] * Tci[12] /
           (16.043030 * 16.043030 * 45.990000);
  bi[12] = 0.08664 * Rcst * Tci[12] / (16.043030 * 45.990000);
  acentric_i[12] = 0.011000;

  // species 13: HCO
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: CH2O
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: CH3O
  Tci[15] = 1.316 * EPS[15];
  ai[15] = (5.55 * avogadro * avogadro * EPS[15] * boltzmann * 1e-24 * SIG[15] *
            SIG[15] * SIG[15]) /
           (wt[15] * wt[15]);
  bi[15] = 0.855 * avogadro * 1e-24 * SIG[15] * SIG[15] * SIG[15] / (wt[15]);
  acentric_i[15] = 0.0;

  // species 16: CO
  // Imported from NIST
  Tci[16] = 132.850000;
  ai[16] = 1e6 * 0.42748 * Rcst * Rcst * Tci[16] * Tci[16] /
           (28.010000 * 28.010000 * 34.940000);
  bi[16] = 0.08664 * Rcst * Tci[16] / (28.010000 * 34.940000);
  acentric_i[16] = 0.045000;

  // species 17: CO2
  // Imported from NIST
  Tci[17] = 304.120000;
  ai[17] = 1e6 * 0.42748 * Rcst * Rcst * Tci[17] * Tci[17] /
           (44.009950 * 44.009950 * 73.740000);
  bi[17] = 0.08664 * Rcst * Tci[17] / (44.009950 * 73.740000);
  acentric_i[17] = 0.225000;

  // species 18: C2H2
  // Imported from NIST
  Tci[18] = 308.300000;
  ai[18] = 1e6 * 0.42748 * Rcst * Rcst * Tci[18] * Tci[18] /
           (26.038000 * 26.038000 * 61.140000);
  bi[18] = 0.08664 * Rcst * Tci[18] / (26.038000 * 61.140000);
  acentric_i[18] = 0.189000;

  // species 19: C2H3
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C2H4
  // Imported from NIST
  Tci[20] = 282.340000;
  ai[20] = 1e6 * 0.42748 * Rcst * Rcst * Tci[20] * Tci[20] /
           (28.054000 * 28.054000 * 50.410000);
  bi[20] = 0.08664 * Rcst * Tci[20] / (28.054000 * 50.410000);
  acentric_i[20] = 0.087000;

  // species 21: C2H5
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: C2H6
  // Imported from NIST
  Tci[22] = 305.320000;
  ai[22] = 1e6 * 0.42748 * Rcst * Rcst * Tci[22] * Tci[22] /
           (30.070120 * 30.070120 * 48.720000);
  bi[22] = 0.08664 * Rcst * Tci[22] / (30.070120 * 48.720000);
  acentric_i[22] = 0.099000;

  // species 23: CH2CHO
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: aC3H5
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: C3H6
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: nC3H7
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: C2H3CHO
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: C4H7
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: C4H81
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: pC4H9
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C5H9
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: C5H10
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: PXC5H11
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: C6H12
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: PXC6H13
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: C7H14
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: PXC7H15
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: C8H16
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;

  // species 39: PXC8H17
  Tci[39] = 1.316 * EPS[39];
  ai[39] = (5.55 * avogadro * avogadro * EPS[39] * boltzmann * 1e-24 * SIG[39] *
            SIG[39] * SIG[39]) /
           (wt[39] * wt[39]);
  bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]);
  acentric_i[39] = 0.0;

  // species 40: C9H18
  Tci[40] = 1.316 * EPS[40];
  ai[40] = (5.55 * avogadro * avogadro * EPS[40] * boltzmann * 1e-24 * SIG[40] *
            SIG[40] * SIG[40]) /
           (wt[40] * wt[40]);
  bi[40] = 0.855 * avogadro * 1e-24 * SIG[40] * SIG[40] * SIG[40] / (wt[40]);
  acentric_i[40] = 0.0;

  // species 41: PXC9H19
  Tci[41] = 1.316 * EPS[41];
  ai[41] = (5.55 * avogadro * avogadro * EPS[41] * boltzmann * 1e-24 * SIG[41] *
            SIG[41] * SIG[41]) /
           (wt[41] * wt[41]);
  bi[41] = 0.855 * avogadro * 1e-24 * SIG[41] * SIG[41] * SIG[41] / (wt[41]);
  acentric_i[41] = 0.0;

  // species 42: C10H20
  Tci[42] = 1.316 * EPS[42];
  ai[42] = (5.55 * avogadro * avogadro * EPS[42] * boltzmann * 1e-24 * SIG[42] *
            SIG[42] * SIG[42]) /
           (wt[42] * wt[42]);
  bi[42] = 0.855 * avogadro * 1e-24 * SIG[42] * SIG[42] * SIG[42] / (wt[42]);
  acentric_i[42] = 0.0;

  // species 43: PXC10H21
  Tci[43] = 1.316 * EPS[43];
  ai[43] = (5.55 * avogadro * avogadro * EPS[43] * boltzmann * 1e-24 * SIG[43] *
            SIG[43] * SIG[43]) /
           (wt[43] * wt[43]);
  bi[43] = 0.855 * avogadro * 1e-24 * SIG[43] * SIG[43] * SIG[43] / (wt[43]);
  acentric_i[43] = 0.0;

  // species 44: PXC12H25
  Tci[44] = 1.316 * EPS[44];
  ai[44] = (5.55 * avogadro * avogadro * EPS[44] * boltzmann * 1e-24 * SIG[44] *
            SIG[44] * SIG[44]) /
           (wt[44] * wt[44]);
  bi[44] = 0.855 * avogadro * 1e-24 * SIG[44] * SIG[44] * SIG[44] / (wt[44]);
  acentric_i[44] = 0.0;

  // species 45: SXC12H25
  Tci[45] = 1.316 * EPS[45];
  ai[45] = (5.55 * avogadro * avogadro * EPS[45] * boltzmann * 1e-24 * SIG[45] *
            SIG[45] * SIG[45]) /
           (wt[45] * wt[45]);
  bi[45] = 0.855 * avogadro * 1e-24 * SIG[45] * SIG[45] * SIG[45] / (wt[45]);
  acentric_i[45] = 0.0;

  // species 46: S3XC12H25
  Tci[46] = 1.316 * EPS[46];
  ai[46] = (5.55 * avogadro * avogadro * EPS[46] * boltzmann * 1e-24 * SIG[46] *
            SIG[46] * SIG[46]) /
           (wt[46] * wt[46]);
  bi[46] = 0.855 * avogadro * 1e-24 * SIG[46] * SIG[46] * SIG[46] / (wt[46]);
  acentric_i[46] = 0.0;

  // species 47: C12H24
  Tci[47] = 1.316 * EPS[47];
  ai[47] = (5.55 * avogadro * avogadro * EPS[47] * boltzmann * 1e-24 * SIG[47] *
            SIG[47] * SIG[47]) /
           (wt[47] * wt[47]);
  bi[47] = 0.855 * avogadro * 1e-24 * SIG[47] * SIG[47] * SIG[47] / (wt[47]);
  acentric_i[47] = 0.0;

  // species 48: C12H25O2
  Tci[48] = 1.316 * EPS[48];
  ai[48] = (5.55 * avogadro * avogadro * EPS[48] * boltzmann * 1e-24 * SIG[48] *
            SIG[48] * SIG[48]) /
           (wt[48] * wt[48]);
  bi[48] = 0.855 * avogadro * 1e-24 * SIG[48] * SIG[48] * SIG[48] / (wt[48]);
  acentric_i[48] = 0.0;

  // species 49: C12OOH
  Tci[49] = 1.316 * EPS[49];
  ai[49] = (5.55 * avogadro * avogadro * EPS[49] * boltzmann * 1e-24 * SIG[49] *
            SIG[49] * SIG[49]) /
           (wt[49] * wt[49]);
  bi[49] = 0.855 * avogadro * 1e-24 * SIG[49] * SIG[49] * SIG[49] / (wt[49]);
  acentric_i[49] = 0.0;

  // species 50: O2C12H24OOH
  Tci[50] = 1.316 * EPS[50];
  ai[50] = (5.55 * avogadro * avogadro * EPS[50] * boltzmann * 1e-24 * SIG[50] *
            SIG[50] * SIG[50]) /
           (wt[50] * wt[50]);
  bi[50] = 0.855 * avogadro * 1e-24 * SIG[50] * SIG[50] * SIG[50] / (wt[50]);
  acentric_i[50] = 0.0;

  // species 51: OC12H23OOH
  Tci[51] = 1.316 * EPS[51];
  ai[51] = (5.55 * avogadro * avogadro * EPS[51] * boltzmann * 1e-24 * SIG[51] *
            SIG[51] * SIG[51]) /
           (wt[51] * wt[51]);
  bi[51] = 0.855 * avogadro * 1e-24 * SIG[51] * SIG[51] * SIG[51] / (wt[51]);
  acentric_i[51] = 0.0;

  // species 52: N2
  // Imported from NIST
  Tci[52] = 126.192000;
  ai[52] = 1e6 * 0.42748 * Rcst * Rcst * Tci[52] * Tci[52] /
           (28.013400 * 28.013400 * 33.958000);
  bi[52] = 0.08664 * Rcst * Tci[52] / (28.013400 * 33.958000);
  acentric_i[52] = 0.037200;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: NC12H26
  // Computed from Lennard-Jones
  sqrtOneOverTc[0] = 3.1014444518975e-02;
  sqrtAsti[0] = 5.1456132490395e+04;
  Bi[0] = 1.0578236621500e+00;
  Fomega[0] = 4.8508000000000e-01;

  // species 1: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 7.2391579785311e-02;
  sqrtAsti[1] = 5.8451221185793e+05;
  Bi[1] = 4.4006634563410e+00;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 9.7460146948181e-02;
  sqrtAsti[2] = 4.2500156012386e+04;
  Bi[2] = 6.6930234851885e-01;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 9.7460146948181e-02;
  sqrtAsti[3] = 3.9981183985545e+04;
  Bi[3] = 6.2963299076575e-01;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 8.4114315417892e-02;
  sqrtAsti[4] = 3.3657825710980e+04;
  Bi[4] = 6.4505861132042e-01;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: H2
  // Imported from NIST
  sqrtOneOverTc[5] = 1.7369646834812e-01;
  sqrtAsti[5] = 2.4824229305911e+05;
  Bi[5] = 9.1362254169923e+00;
  Fomega[5] = 1.3798618890700e-01;

  // species 6: H2O
  // Imported from NIST
  sqrtOneOverTc[6] = 3.9311140369715e-02;
  sqrtAsti[6] = 1.3145468419592e+05;
  Bi[6] = 1.1727204136223e+00;
  Fomega[6] = 1.0013577274636e+00;

  // species 7: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[7] = 8.4114315417892e-02;
  sqrtAsti[7] = 3.2660380884830e+04;
  Bi[7] = 6.2594239211036e-01;
  Fomega[7] = 4.8508000000000e-01;

  // species 8: O2
  // Imported from NIST
  sqrtOneOverTc[8] = 8.0430717653241e-02;
  sqrtAsti[8] = 3.6980081924740e+04;
  Bi[8] = 6.9005216444999e-01;
  Fomega[8] = 5.1945301904908e-01;

  // species 9: CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[9] = 7.2642504557751e-02;
  sqrtAsti[9] = 1.0564067619908e+05;
  Bi[9] = 2.0142023516102e+00;
  Fomega[9] = 4.8508000000000e-01;

  // species 10: CH2*
  // Computed from Lennard-Jones
  sqrtOneOverTc[10] = 7.2642504557751e-02;
  sqrtAsti[10] = 1.0564067619908e+05;
  Bi[10] = 2.0142023516102e+00;
  Fomega[10] = 4.8508000000000e-01;

  // species 11: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[11] = 7.2642504557751e-02;
  sqrtAsti[11] = 9.8558148656101e+04;
  Bi[11] = 1.8791630452967e+00;
  Fomega[11] = 4.8508000000000e-01;

  // species 12: CH4
  // Imported from NIST
  sqrtOneOverTc[12] = 7.2440948474968e-02;
  sqrtAsti[12] = 9.5215046085708e+04;
  Bi[12] = 1.8605203320660e+00;
  Fomega[12] = 5.0213035482700e-01;

  // species 13: HCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[13] = 3.9062261583604e-02;
  sqrtAsti[13] = 8.7202351509582e+04;
  Bi[13] = 8.2098075206475e-01;
  Fomega[13] = 4.8508000000000e-01;

  // species 14: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 3.9062261583604e-02;
  sqrtAsti[14] = 8.4274889632487e+04;
  Bi[14] = 7.9341968505345e-01;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: CH3O
  // Computed from Lennard-Jones
  sqrtOneOverTc[15] = 4.2687825036676e-02;
  sqrtAsti[15] = 7.7751566794340e+04;
  Bi[15] = 8.3360142526260e-01;
  Fomega[15] = 4.8508000000000e-01;

  // species 16: CO
  // Imported from NIST
  sqrtOneOverTc[16] = 8.6759935530451e-02;
  sqrtAsti[16] = 4.3619324712923e+04;
  Bi[16] = 9.7786303823350e-01;
  Fomega[16] = 5.5459948367500e-01;

  // species 17: CO2
  // Imported from NIST
  sqrtOneOverTc[17] = 5.7342616962522e-02;
  sqrtAsti[17] = 4.3745610142919e+04;
  Bi[17] = 6.7506167841745e-01;
  Fomega[17] = 8.2653709187500e-01;

  // species 18: C2H2
  // Imported from NIST
  sqrtOneOverTc[18] = 5.6952558345025e-02;
  sqrtAsti[18] = 8.2318059295808e+04;
  Bi[18] = 1.3950602011188e+00;
  Fomega[18] = 7.7293553202700e-01;

  // species 19: C2H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 6.0297445312864e-02;
  sqrtAsti[19] = 7.3975040719223e+04;
  Bi[19] = 1.3120960627055e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: C2H4
  // Imported from NIST
  sqrtOneOverTc[20] = 5.9513267432530e-02;
  sqrtAsti[20] = 7.7056842134487e+04;
  Bi[20] = 1.4381805192666e+00;
  Fomega[20] = 6.1893034120300e-01;

  // species 21: C2H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 5.4879915006830e-02;
  sqrtAsti[21] = 8.1297663542693e+04;
  Bi[21] = 1.4105965766665e+00;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: C2H6
  // Imported from NIST
  sqrtOneOverTc[22] = 5.7229819101749e-02;
  sqrtAsti[22] = 7.9078494187583e+04;
  Bi[22] = 1.5012924285481e+00;
  Fomega[22] = 6.3721234098700e-01;

  // species 23: CH2CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 4.1747340173827e-02;
  sqrtAsti[23] = 6.3965473795593e+04;
  Bi[23] = 7.4845537905146e-01;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: aC3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 5.3367780663448e-02;
  sqrtAsti[24] = 7.3719333603301e+04;
  Bi[24] = 1.5501433096373e+00;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[25] = 5.3367780663448e-02;
  sqrtAsti[25] = 7.1953475180922e+04;
  Bi[25] = 1.5130114815887e+00;
  Fomega[25] = 4.8508000000000e-01;

  // species 26: nC3H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[26] = 5.3367780663448e-02;
  sqrtAsti[26] = 7.0270235769881e+04;
  Bi[26] = 1.4776169360332e+00;
  Fomega[26] = 4.8508000000000e-01;

  // species 27: C2H3CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 4.6135788482041e-02;
  sqrtAsti[27] = 6.6157754759138e+04;
  Bi[27] = 1.2735494969810e+00;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: C4H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 4.6135788482041e-02;
  sqrtAsti[28] = 6.7315215296122e+04;
  Bi[28] = 1.2958308348229e+00;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: C4H81
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 4.6135788482041e-02;
  sqrtAsti[29] = 6.6105873722398e+04;
  Bi[29] = 1.2725507770503e+00;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: pC4H9
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 4.6135788482041e-02;
  sqrtAsti[30] = 6.4939217781643e+04;
  Bi[30] = 1.2500924259181e+00;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: C5H9
  // Computed from Lennard-Jones
  sqrtOneOverTc[31] = 4.1161098668794e-02;
  sqrtAsti[31] = 6.3056889132792e+04;
  Bi[31] = 1.1354840738966e+00;
  Fomega[31] = 4.8508000000000e-01;

  // species 32: C5H10
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 4.1161098668794e-02;
  sqrtAsti[32] = 6.2150617738397e+04;
  Bi[32] = 1.1191645765488e+00;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: PXC5H11
  // Computed from Lennard-Jones
  sqrtOneOverTc[33] = 4.0724245189331e-02;
  sqrtAsti[33] = 6.3726929182318e+04;
  Bi[33] = 1.1683651201719e+00;
  Fomega[33] = 4.8508000000000e-01;

  // species 34: C6H12
  // Computed from Lennard-Jones
  sqrtOneOverTc[34] = 3.8804844986539e-02;
  sqrtAsti[34] = 5.9407396038950e+04;
  Bi[34] = 1.0905945541772e+00;
  Fomega[34] = 4.8508000000000e-01;

  // species 35: PXC6H13
  // Computed from Lennard-Jones
  sqrtOneOverTc[35] = 3.8516043613074e-02;
  sqrtAsti[35] = 6.0950580887956e+04;
  Bi[35] = 1.1445111369784e+00;
  Fomega[35] = 4.8508000000000e-01;

  // species 36: C7H14
  // Computed from Lennard-Jones
  sqrtOneOverTc[36] = 3.6904181877360e-02;
  sqrtAsti[36] = 5.7120979432138e+04;
  Bi[36] = 1.0638971124616e+00;
  Fomega[36] = 4.8508000000000e-01;

  // species 37: PXC7H15
  // Computed from Lennard-Jones
  sqrtOneOverTc[37] = 3.6704638684418e-02;
  sqrtAsti[37] = 5.8715520860924e+04;
  Bi[37] = 1.1234160350619e+00;
  Fomega[37] = 4.8508000000000e-01;

  // species 38: C8H16
  // Computed from Lennard-Jones
  sqrtOneOverTc[38] = 3.5338331985524e-02;
  sqrtAsti[38] = 5.5208418427035e+04;
  Bi[38] = 1.0414821401872e+00;
  Fomega[38] = 4.8508000000000e-01;

  // species 39: PXC8H17
  // Computed from Lennard-Jones
  sqrtOneOverTc[39] = 3.5204390902918e-02;
  sqrtAsti[39] = 5.6963423368589e+04;
  Bi[39] = 1.1102445863352e+00;
  Fomega[39] = 4.8508000000000e-01;

  // species 40: C9H18
  // Computed from Lennard-Jones
  sqrtOneOverTc[40] = 3.4050394668680e-02;
  sqrtAsti[40] = 5.3850581531838e+04;
  Bi[40] = 1.0349675658670e+00;
  Fomega[40] = 4.8508000000000e-01;

  // species 41: PXC9H19
  // Computed from Lennard-Jones
  sqrtOneOverTc[41] = 3.3930445313395e-02;
  sqrtAsti[41] = 5.5349654184140e+04;
  Bi[41] = 1.0943707698953e+00;
  Fomega[41] = 4.8508000000000e-01;

  // species 42: C10H20
  // Computed from Lennard-Jones
  sqrtOneOverTc[42] = 3.2991829049137e-02;
  sqrtAsti[42] = 5.2976223699251e+04;
  Bi[42] = 1.0448018099258e+00;
  Fomega[42] = 4.8508000000000e-01;

  // species 43: PXC10H21
  // Computed from Lennard-Jones
  sqrtOneOverTc[43] = 3.2832432738125e-02;
  sqrtAsti[43] = 5.4026979430911e+04;
  Bi[43] = 1.0839178734815e+00;
  Fomega[43] = 4.8508000000000e-01;

  // species 44: PXC12H25
  // Computed from Lennard-Jones
  sqrtOneOverTc[44] = 3.1014444518975e-02;
  sqrtAsti[44] = 5.1762440698828e+04;
  Bi[44] = 1.0641206777846e+00;
  Fomega[44] = 4.8508000000000e-01;

  // species 45: SXC12H25
  // Computed from Lennard-Jones
  sqrtOneOverTc[45] = 3.1014444518975e-02;
  sqrtAsti[45] = 5.1762440698828e+04;
  Bi[45] = 1.0641206777846e+00;
  Fomega[45] = 4.8508000000000e-01;

  // species 46: S3XC12H25
  // Computed from Lennard-Jones
  sqrtOneOverTc[46] = 3.1014444518975e-02;
  sqrtAsti[46] = 5.1762440698828e+04;
  Bi[46] = 1.0641206777846e+00;
  Fomega[46] = 4.8508000000000e-01;

  // species 47: C12H24
  // Computed from Lennard-Jones
  sqrtOneOverTc[47] = 3.1306811898358e-02;
  sqrtAsti[47] = 5.2059003377425e+04;
  Bi[47] = 1.0902090135340e+00;
  Fomega[47] = 4.8508000000000e-01;

  // species 48: C12H25O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[48] = 3.0723150843303e-02;
  sqrtAsti[48] = 4.4463960034668e+04;
  Bi[48] = 9.1611631219699e-01;
  Fomega[48] = 4.8508000000000e-01;

  // species 49: C12OOH
  // Computed from Lennard-Jones
  sqrtOneOverTc[49] = 3.0723150843303e-02;
  sqrtAsti[49] = 4.4463960034668e+04;
  Bi[49] = 9.1611631219699e-01;
  Fomega[49] = 4.8508000000000e-01;

  // species 50: O2C12H24OOH
  // Computed from Lennard-Jones
  sqrtOneOverTc[50] = 2.9434684406124e-02;
  sqrtAsti[50] = 4.3085521729946e+04;
  Bi[50] = 9.1504547270258e-01;
  Fomega[50] = 4.8508000000000e-01;

  // species 51: OC12H23OOH
  // Computed from Lennard-Jones
  sqrtOneOverTc[51] = 3.0088533807312e-02;
  sqrtAsti[51] = 4.3790717178360e+04;
  Bi[51] = 9.1571259283709e-01;
  Fomega[51] = 4.8508000000000e-01;

  // species 52: N2
  // Imported from NIST
  sqrtOneOverTc[52] = 8.9019282240563e-02;
  sqrtAsti[52] = 4.2022983929562e+04;
  Bi[52] = 9.5560052221563e-01;
  Fomega[52] = 5.4259343186608e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  O
2  C
3  N
*/

// Species
#define H2_ID 0
#define H_ID 1
#define O_ID 2
#define O2_ID 3
#define OH_ID 4
#define H2O_ID 5
#define HO2_ID 6
#define H2O2_ID 7
#define CH3_ID 8
#define CH4_ID 9
#define CO_ID 10
#define CO2_ID 11
#define CH2O_ID 12
#define C2H2_ID 13
#define C2H4_ID 14
#define C2H6_ID 15
#define HCCO_ID 16
#define CH2CO_ID 17
#define CH3CHO_ID 18
#define aC3H5_ID 19
#define C3H6_ID 20
#define N2_ID 21

#define NUM_ELEMENTS 4
#define NUM_SPECIES 22
#define NUM_IONS 0
#define NUM_REACTIONS 206

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(int* i, int* nspec, int* ki, int* nu);
void CKKFKR(
  amrex::Real* P,
  amrex::Real* T,
  amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int* mm, int* kk, int* ii, int* nfit)
{
  *mm = 4;
  *kk = 22;
  *ii = 206;
  *nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 1.0 / 2.016000;   // H2
  imw_new[1] = 1.0 / 1.008000;   // H
  imw_new[2] = 1.0 / 15.999000;  // O
  imw_new[3] = 1.0 / 31.998000;  // O2
  imw_new[4] = 1.0 / 17.007000;  // OH
  imw_new[5] = 1.0 / 18.015000;  // H2O
  imw_new[6] = 1.0 / 33.006000;  // HO2
  imw_new[7] = 1.0 / 34.014000;  // H2O2
  imw_new[8] = 1.0 / 15.035000;  // CH3
  imw_new[9] = 1.0 / 16.043000;  // CH4
  imw_new[10] = 1.0 / 28.010000; // CO
  imw_new[11] = 1.0 / 44.009000; // CO2
  imw_new[12] = 1.0 / 30.026000; // CH2O
  imw_new[13] = 1.0 / 26.038000; // C2H2
  imw_new[14] = 1.0 / 28.054000; // C2H4
  imw_new[15] = 1.0 / 30.070000; // C2H6
  imw_new[16] = 1.0 / 41.029000; // HCCO
  imw_new[17] = 1.0 / 42.037000; // CH2CO
  imw_new[18] = 1.0 / 44.053000; // CH3CHO
  imw_new[19] = 1.0 / 41.073000; // aC3H5
  imw_new[20] = 1.0 / 42.081000; // C3H6
  imw_new[21] = 1.0 / 28.014000; // N2
}

//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 2.016000;   // H2
  mw_new[1] = 1.008000;   // H
  mw_new[2] = 15.999000;  // O
  mw_new[3] = 31.998000;  // O2
  mw_new[4] = 17.007000;  // OH
  mw_new[5] = 18.015000;  // H2O
  mw_new[6] = 33.006000;  // HO2
  mw_new[7] = 34.014000;  // H2O2
  mw_new[8] = 15.035000;  // CH3
  mw_new[9] = 16.043000;  // CH4
  mw_new[10] = 28.010000; // CO
  mw_new[11] = 44.009000; // CO2
  mw_new[12] = 30.026000; // CH2O
  mw_new[13] = 26.038000; // C2H2
  mw_new[14] = 28.054000; // C2H4
  mw_new[15] = 30.070000; // C2H6
  mw_new[16] = 41.029000; // HCCO
  mw_new[17] = 42.037000; // CH2CO
  mw_new[18] = 44.053000; // CH3CHO
  mw_new[19] = 41.073000; // aC3H5
  mw_new[20] = 42.081000; // C3H6
  mw_new[21] = 28.014000; // N2
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real* ru, amrex::Real* ruc, amrex::Real* pa)
{
  *ru = 8.31446261815324e+07;
  *ruc = 1.98721558317399615845;
  *pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +2.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +2.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute Cp/R at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +3.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +3.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 3: O2
    species[3] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 4: OH
    species[4] = +3.615080560000000e+03 * invT + 4.095940888000000e+00 -
                 3.992015430000000e+00 * tc[0] + 1.200658760000000e-03 * tc[1] -
                 7.696564016666666e-07 * tc[2] + 3.234277775000000e-10 * tc[3] -
                 6.820573500000000e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                 3.673590400000000e+00 * tc[0] - 1.005475875000000e-03 * tc[1] -
                 9.550364266666668e-07 * tc[2] + 5.725978541666666e-10 * tc[3] -
                 1.271928670000000e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                 5.149876130000000e+00 * tc[0] + 6.835489400000000e-03 * tc[1] -
                 8.196676650000000e-06 * tc[2] + 4.039525216666667e-09 * tc[3] -
                 8.334697800000000e-13 * tc[4];
    // species 10: CO
    species[10] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * tc[0] -
                  8.827510500000000e-03 * tc[1] +
                  3.954850166666666e-06 * tc[2] -
                  1.439646583333334e-09 * tc[3] + 2.533240550000000e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.042918040000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * tc[0] -
                  9.059436050000000e-03 * tc[1] +
                  2.899124566666666e-06 * tc[2] -
                  7.786646400000000e-10 * tc[3] + 1.007288075000000e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.157287800000000e+04 * invT + 6.264436000000000e-01 -
                  4.729459500000000e+00 * tc[0] +
                  1.596642900000000e-03 * tc[1] -
                  7.922486833333334e-06 * tc[2] +
                  4.788217583333333e-09 * tc[3] - 1.096555600000000e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 21: N2
    species[21] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041202000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427000000000e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 3: O2
    species[3] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 4: OH
    species[4] = +3.858657000000000e+03 * invT - 1.383808430000000e+00 -
                 3.092887670000000e+00 * tc[0] - 2.742148580000000e-04 * tc[1] -
                 2.108420466666667e-08 * tc[2] + 7.328846300000000e-12 * tc[3] -
                 5.870618800000000e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                 2.285717720000000e+00 * tc[0] - 3.619950185000000e-03 * tc[1] +
                 4.978572466666667e-07 * tc[2] - 4.964038700000000e-11 * tc[3] +
                 2.335771970000000e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                 7.485149500000000e-02 * tc[0] - 6.695473350000000e-03 * tc[1] +
                 9.554763483333333e-07 * tc[2] - 1.019104458333333e-10 * tc[3] +
                 5.090761500000000e-15 * tc[4];
    // species 10: CO
    species[10] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * tc[0] -
                  2.042670050000000e-03 * tc[1] +
                  2.655757833333333e-07 * tc[2] -
                  2.385504333333333e-11 * tc[3] + 9.703915999999999e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.551053110000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * tc[0] -
                  4.501798725000000e-03 * tc[1] +
                  6.948993916666666e-07 * tc[2] -
                  7.694549016666667e-11 * tc[3] + 3.974191005000000e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.259312200000000e+04 * invT + 8.884902499999999e+00 -
                  5.404110800000000e+00 * tc[0] -
                  5.861529500000000e-03 * tc[1] +
                  7.043856166666666e-07 * tc[2] -
                  5.697704250000000e-11 * tc[3] + 2.049243150000000e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 21: N2
    species[21] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439884000000000e-04 * tc[1] +
                  9.474600000000001e-08 * tc[2] -
                  8.414198333333333e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                 3.489816650000000e+00 * tc[0] - 1.619177705000000e-04 * tc[1] +
                 2.814984416666667e-07 * tc[2] - 2.635144391666666e-10 * tc[3] +
                 7.030453350000001e-14 * tc[4];
    // species 1: CH2
    species[1] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 2: CH2*
    species[2] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 3: HCO
    species[3] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                 4.221185840000000e+00 * tc[0] + 1.621962660000000e-03 * tc[1] -
                 2.296657433333333e-06 * tc[2] + 1.109534108333333e-09 * tc[3] -
                 2.168844325000000e-13 * tc[4];
    // species 4: CH3O
    species[4] = +9.786011000000000e+02 * invT - 1.104597300000000e+01 -
                 2.106204000000000e+00 * tc[0] - 3.608297500000000e-03 * tc[1] -
                 8.897453333333333e-07 * tc[2] + 6.148030000000000e-10 * tc[3] -
                 1.037805000000000e-13 * tc[4];
    // species 5: H2CC
    species[5] = +4.862179400000000e+04 * invT - 2.638842700000001e+00 -
                 3.281548300000000e+00 * tc[0] - 3.488239550000000e-03 * tc[1] +
                 3.975874000000000e-07 * tc[2] + 1.008702666666667e-10 * tc[3] -
                 4.909477250000000e-14 * tc[4];
    // species 6: C2H3
    species[6] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                 3.212466450000000e+00 * tc[0] - 7.573958100000000e-04 * tc[1] -
                 4.320156866666666e-06 * tc[2] + 2.980482058333333e-09 * tc[3] -
                 7.357543650000000e-13 * tc[4];
    // species 7: C2H5
    species[7] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                 4.306465680000000e+00 * tc[0] + 2.093294460000000e-03 * tc[1] -
                 8.285713450000000e-06 * tc[2] + 4.992721716666666e-09 * tc[3] -
                 1.152545020000000e-12 * tc[4];
    // species 8: CH2CHO
    species[8] = +1.521476600000000e+03 * invT - 6.162391100000001e+00 -
                 3.409062400000000e+00 * tc[0] - 5.369287000000000e-03 * tc[1] -
                 3.152487500000000e-07 * tc[2] - 5.965485916666667e-10 * tc[3] -
                 1.433692550000000e-13 * tc[4];
    // species 9: nC3H7
    species[9] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                 1.049117300000000e+00 * tc[0] - 1.300448650000000e-02 * tc[1] -
                 3.923752666666667e-07 * tc[2] + 1.632927666666667e-09 * tc[3] -
                 4.686010350000000e-13 * tc[4];
  } else {
    // species 0: CH
    species[0] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                 2.878464730000000e+00 * tc[0] - 4.854568405000000e-04 * tc[1] -
                 2.407427583333333e-08 * tc[2] + 1.089065408333333e-11 * tc[3] -
                 8.803969149999999e-16 * tc[4];
    // species 1: CH2
    species[1] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 2: CH2*
    species[2] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 3: HCO
    species[3] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                 2.772174380000000e+00 * tc[0] - 2.478477630000000e-03 * tc[1] +
                 4.140760216666667e-07 * tc[2] - 4.909681483333334e-11 * tc[3] +
                 2.667543555000000e-15 * tc[4];
    // species 4: CH3O
    species[4] = +1.278325200000000e+02 * invT + 8.412240000000000e-01 -
                 3.770799000000000e+00 * tc[0] - 3.935748500000000e-03 * tc[1] +
                 4.427306666666667e-07 * tc[2] - 3.287025833333333e-11 * tc[3] +
                 1.056308000000000e-15 * tc[4];
    // species 5: H2CC
    species[5] = +4.831668800000000e+04 * invT + 3.637796990000000e+00 -
                 4.278034000000000e+00 * tc[0] - 2.378140200000000e-03 * tc[1] +
                 2.716834833333333e-07 * tc[2] - 2.121900500000000e-11 * tc[3] +
                 7.443189499999999e-16 * tc[4];
    // species 6: C2H3
    species[6] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                 3.016724000000000e+00 * tc[0] - 5.165114600000000e-03 * tc[1] +
                 7.801372483333333e-07 * tc[2] - 8.480274000000000e-11 * tc[3] +
                 4.313035205000000e-15 * tc[4];
    // species 7: C2H5
    species[7] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                 1.954656420000000e+00 * tc[0] - 8.698636100000001e-03 * tc[1] +
                 1.330344446666667e-06 * tc[2] - 1.460147408333333e-10 * tc[3] +
                 7.482078800000000e-15 * tc[4];
    // species 8: CH2CHO
    species[8] = +4.903217800000000e+02 * invT + 1.100775780000000e+01 -
                 5.975669900000000e+00 * tc[0] - 4.065295700000000e-03 * tc[1] +
                 4.572707500000000e-07 * tc[2] - 3.391920083333333e-11 * tc[3] +
                 1.088008550000000e-15 * tc[4];
    // species 9: nC3H7
    species[9] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                 7.709747900000000e+00 * tc[0] - 8.015742500000001e-03 * tc[1] +
                 8.786706333333332e-07 * tc[2] - 6.324029333333334e-11 * tc[3] +
                 1.943135950000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 3: O2
    species[3] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 4: OH
    species[4] = +3.61508056e+03 * invT + 3.09594089e+00 -
                 3.99201543e+00 * tc[0] + 1.20065876e-03 * tc[1] -
                 7.69656402e-07 * tc[2] + 3.23427778e-10 * tc[3] -
                 6.82057350e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.64449988e+04 * invT + 1.06902607e+00 -
                 3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                 9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                 1.27192867e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.02466476e+04 * invT + 8.79117989e+00 -
                 5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                 8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                 8.33469780e-13 * tc[4];
    // species 10: CO
    species[10] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * tc[0] - 8.82751050e-03 * tc[1] +
                  3.95485017e-06 * tc[2] - 1.43964658e-09 * tc[3] +
                  2.53324055e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.04291804e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * tc[0] - 9.05943605e-03 * tc[1] +
                  2.89912457e-06 * tc[2] - 7.78664640e-10 * tc[3] +
                  1.00728807e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.15728780e+04 * invT - 3.73556400e-01 -
                  4.72945950e+00 * tc[0] + 1.59664290e-03 * tc[1] -
                  7.92248683e-06 * tc[2] + 4.78821758e-09 * tc[3] -
                  1.09655560e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 21: N2
    species[21] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242700e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 3: O2
    species[3] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 4: OH
    species[4] = +3.85865700e+03 * invT - 2.38380843e+00 -
                 3.09288767e+00 * tc[0] - 2.74214858e-04 * tc[1] -
                 2.10842047e-08 * tc[2] + 7.32884630e-12 * tc[3] -
                 5.87061880e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.67755843e+04 * invT - 7.19435407e+00 -
                 2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                 4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                 2.33577197e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.46834459e+03 * invT - 1.93624665e+01 -
                 7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                 9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                 5.09076150e-15 * tc[4];
    // species 10: CO
    species[10] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * tc[0] - 2.04267005e-03 * tc[1] +
                  2.65575783e-07 * tc[2] - 2.38550433e-11 * tc[3] +
                  9.70391600e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.55105311e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * tc[0] - 4.50179872e-03 * tc[1] +
                  6.94899392e-07 * tc[2] - 7.69454902e-11 * tc[3] +
                  3.97419100e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.25931220e+04 * invT + 7.88490250e+00 -
                  5.40411080e+00 * tc[0] - 5.86152950e-03 * tc[1] +
                  7.04385617e-07 * tc[2] - 5.69770425e-11 * tc[3] +
                  2.04924315e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 21: N2
    species[21] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                  9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +2.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +2.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +3.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +3.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +3.48981665e+00 + 1.61917771e-04 * tc[1] -
                 5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                 2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 1: CH2
    species[1] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 2: CH2*
    species[2] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 3: HCO
    species[3] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                 4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                 8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 4: CH3O
    species[4] = +2.10620400e+00 + 3.60829750e-03 * tc[1] +
                 1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                 4.15122000e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 5: H2CC
    species[5] = +3.28154830e+00 + 3.48823955e-03 * tc[1] -
                 7.95174800e-07 * tc[2] - 3.02610800e-10 * tc[3] +
                 1.96379090e-13 * tc[4] + 4.86217940e+04 * invT;
    // species 6: C2H3
    species[6] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                 8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                 2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 7: C2H5
    species[7] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                 1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                 4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 8: CH2CHO
    species[8] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                 6.30497500e-07 * tc[2] + 1.78964578e-09 * tc[3] +
                 5.73477020e-13 * tc[4] + 1.52147660e+03 * invT;
    // species 9: nC3H7
    species[9] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                 7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                 1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
  } else {
    // species 0: CH
    species[0] = +2.87846473e+00 + 4.85456840e-04 * tc[1] +
                 4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                 3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 1: CH2
    species[1] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 2: CH2*
    species[2] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 3: HCO
    species[3] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                 8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                 1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 4: CH3O
    species[4] = +3.77079900e+00 + 3.93574850e-03 * tc[1] -
                 8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                 4.22523200e-15 * tc[4] + 1.27832520e+02 * invT;
    // species 5: H2CC
    species[5] = +4.27803400e+00 + 2.37814020e-03 * tc[1] -
                 5.43366967e-07 * tc[2] + 6.36570150e-11 * tc[3] -
                 2.97727580e-15 * tc[4] + 4.83166880e+04 * invT;
    // species 6: C2H3
    species[6] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                 1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                 1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 7: C2H5
    species[7] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                 2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                 2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 8: CH2CHO
    species[8] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                 9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                 4.35203420e-15 * tc[4] + 4.90321780e+02 * invT;
    // species 9: nC3H7
    species[9] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                 1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                 7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 1: H
    species[1] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 3: O2
    species[3] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 4: OH
    species[4] = +3.99201543e+00 * tc[0] - 2.40131752e-03 * tc[1] +
                 2.30896920e-06 * tc[2] - 1.29371111e-09 * tc[3] +
                 3.41028675e-13 * tc[4] - 1.03925458e-01;
    // species 5: H2O
    species[5] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 6: HO2
    species[6] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 8: CH3
    species[8] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                 2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                 6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 9: CH4
    species[9] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                 2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                 4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 10: CO
    species[10] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 11: CO2
    species[11] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 12: CH2O
    species[12] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 13: C2H2
    species[13] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 14: C2H4
    species[14] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 15: C2H6
    species[15] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 16: HCCO
    species[16] = +2.25172140e+00 * tc[0] + 1.76550210e-02 * tc[1] -
                  1.18645505e-05 * tc[2] + 5.75858633e-09 * tc[3] -
                  1.26662028e-12 * tc[4] + 1.24904170e+01;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 * tc[0] + 1.81188721e-02 * tc[1] -
                  8.69737370e-06 * tc[2] + 3.11465856e-09 * tc[3] -
                  5.03644037e-13 * tc[4] + 1.22156480e+01;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 * tc[0] - 3.19328580e-03 * tc[1] +
                  2.37674605e-05 * tc[2] - 1.91528703e-08 * tc[3] +
                  5.48277800e-12 * tc[4] + 4.10301590e+00;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 20: C3H6
    species[20] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 21: N2
    species[21] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213500e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 1: H
    species[1] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 3: O2
    species[3] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 4: OH
    species[4] = +3.09288767e+00 * tc[0] + 5.48429716e-04 * tc[1] +
                 6.32526140e-08 * tc[2] - 2.93153852e-11 * tc[3] +
                 2.93530940e-15 * tc[4] + 4.47669610e+00;
    // species 5: H2O
    species[5] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 6: HO2
    species[6] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 8: CH3
    species[8] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                 1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                 1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 9: CH4
    species[9] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                 2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                 2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 10: CO
    species[10] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 11: CO2
    species[11] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 12: CH2O
    species[12] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 13: C2H2
    species[13] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 14: C2H4
    species[14] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 15: C2H6
    species[15] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 16: HCCO
    species[16] = +5.62820580e+00 * tc[0] + 4.08534010e-03 * tc[1] -
                  7.96727350e-07 * tc[2] + 9.54201733e-11 * tc[3] -
                  4.85195800e-15 * tc[4] - 3.93025950e+00;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 * tc[0] + 9.00359745e-03 * tc[1] -
                  2.08469817e-06 * tc[2] + 3.07781961e-10 * tc[3] -
                  1.98709550e-14 * tc[4] + 6.32247205e-01;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 * tc[0] + 1.17230590e-02 * tc[1] -
                  2.11315685e-06 * tc[2] + 2.27908170e-10 * tc[3] -
                  1.02462158e-14 * tc[4] - 3.48079170e+00;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 20: C3H6
    species[20] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 21: N2
    species[21] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                  2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real* T, const amrex::Real* x, amrex::Real* cpbl)
{
  int id; // loop counter
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[22];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (id = 0; id < 22; ++id) {
    result += x[id] * cpor[id];
  }

  *cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real* T, const amrex::Real* y, amrex::Real* cpbs)
{
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[22], tresult[22];                  //  temporary storage
  amrex::Real imw[22];

  get_imw(imw);

  cp_R(cpor, tc);

  for (int i = 0; i < 22; i++) {
    tresult[i] = cpor[i] * y[i] * imw[i];
  }
  for (const auto& tr : tresult) {
    result += tr;
  }

  *cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real* T, const amrex::Real* x, amrex::Real* cvbl)
{
  int id; // loop counter
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[22];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (id = 0; id < 22; ++id) {
    result += x[id] * cvor[id];
  }

  *cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real* T, const amrex::Real* y, amrex::Real* cvbs)
{
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[22];                               //  temporary storage
  amrex::Real imw[22];

  get_imw(imw);

  cv_R(cvor, tc);

  // multiply by y/molecularweight
  result += cvor[0] * y[0] * imw[0];    // H2
  result += cvor[1] * y[1] * imw[1];    // H
  result += cvor[2] * y[2] * imw[2];    // O
  result += cvor[3] * y[3] * imw[3];    // O2
  result += cvor[4] * y[4] * imw[4];    // OH
  result += cvor[5] * y[5] * imw[5];    // H2O
  result += cvor[6] * y[6] * imw[6];    // HO2
  result += cvor[7] * y[7] * imw[7];    // H2O2
  result += cvor[8] * y[8] * imw[8];    // CH3
  result += cvor[9] * y[9] * imw[9];    // CH4
  result += cvor[10] * y[10] * imw[10]; // CO
  result += cvor[11] * y[11] * imw[11]; // CO2
  result += cvor[12] * y[12] * imw[12]; // CH2O
  result += cvor[13] * y[13] * imw[13]; // C2H2
  result += cvor[14] * y[14] * imw[14]; // C2H4
  result += cvor[15] * y[15] * imw[15]; // C2H6
  result += cvor[16] * y[16] * imw[16]; // HCCO
  result += cvor[17] * y[17] * imw[17]; // CH2CO
  result += cvor[18] * y[18] * imw[18]; // CH3CHO
  result += cvor[19] * y[19] * imw[19]; // aC3H5
  result += cvor[20] * y[20] * imw[20]; // C3H6
  result += cvor[21] * y[21] * imw[21]; // N2

  *cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real* T, const amrex::Real* x, amrex::Real* hbml)
{
  int id; // loop counter
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[22];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (id = 0; id < 22; ++id) {
    result += x[id] * hml[id];
  }

  *hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real* T, const amrex::Real* y, amrex::Real* hbms)
{
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[22], tmp[22];                       //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  amrex::Real imw[22];

  get_imw(imw);

  speciesEnthalpy(hml, tc);

  int id;
  for (id = 0; id < 22; ++id) {
    tmp[id] = y[id] * hml[id] * imw[id];
  }
  for (id = 0; id < 22; ++id) {
    result += tmp[id];
  }

  *hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real* T, const amrex::Real* x, amrex::Real* ubml)
{
  int id; // loop counter
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[22];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (id = 0; id < 22; ++id) {
    result += x[id] * uml[id];
  }

  *ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real* T, const amrex::Real* y, amrex::Real* ubms)
{
  amrex::Real result = 0;
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real ums[22];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  amrex::Real imw[22];

  get_imw(imw);

  speciesInternalEnergy(ums, tc);

  // perform dot product + scaling by wt
  result += y[0] * ums[0] * imw[0];    // H2
  result += y[1] * ums[1] * imw[1];    // H
  result += y[2] * ums[2] * imw[2];    // O
  result += y[3] * ums[3] * imw[3];    // O2
  result += y[4] * ums[4] * imw[4];    // OH
  result += y[5] * ums[5] * imw[5];    // H2O
  result += y[6] * ums[6] * imw[6];    // HO2
  result += y[7] * ums[7] * imw[7];    // H2O2
  result += y[8] * ums[8] * imw[8];    // CH3
  result += y[9] * ums[9] * imw[9];    // CH4
  result += y[10] * ums[10] * imw[10]; // CO
  result += y[11] * ums[11] * imw[11]; // CO2
  result += y[12] * ums[12] * imw[12]; // CH2O
  result += y[13] * ums[13] * imw[13]; // C2H2
  result += y[14] * ums[14] * imw[14]; // C2H4
  result += y[15] * ums[15] * imw[15]; // C2H6
  result += y[16] * ums[16] * imw[16]; // HCCO
  result += y[17] * ums[17] * imw[17]; // CH2CO
  result += y[18] * ums[18] * imw[18]; // CH3CHO
  result += y[19] * ums[19] * imw[19]; // aC3H5
  result += y[20] * ums[20] * imw[20]; // C3H6
  result += y[21] * ums[21] * imw[21]; // N2

  *ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* sbml)
{
  int id; // loop counter
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(*P / 1013250.0);
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (id = 0; id < 22; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  *sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(*P / 1013250.0);
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  amrex::Real x[22];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual
  amrex::Real imw[22];

  get_imw(imw);

  // Compute inverse of mean molecular wt first
  YOW += y[0] * imw[0];   // H2
  YOW += y[1] * imw[1];   // H
  YOW += y[2] * imw[2];   // O
  YOW += y[3] * imw[3];   // O2
  YOW += y[4] * imw[4];   // OH
  YOW += y[5] * imw[5];   // H2O
  YOW += y[6] * imw[6];   // HO2
  YOW += y[7] * imw[7];   // H2O2
  YOW += y[8] * imw[8];   // CH3
  YOW += y[9] * imw[9];   // CH4
  YOW += y[10] * imw[10]; // CO
  YOW += y[11] * imw[11]; // CO2
  YOW += y[12] * imw[12]; // CH2O
  YOW += y[13] * imw[13]; // C2H2
  YOW += y[14] * imw[14]; // C2H4
  YOW += y[15] * imw[15]; // C2H6
  YOW += y[16] * imw[16]; // HCCO
  YOW += y[17] * imw[17]; // CH2CO
  YOW += y[18] * imw[18]; // CH3CHO
  YOW += y[19] * imw[19]; // aC3H5
  YOW += y[20] * imw[20]; // C3H6
  YOW += y[21] * imw[21]; // N2
  // Now compute y to x conversion
  x[0] = y[0] / (2.016000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (33.006000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (15.035000 * YOW);
  x[9] = y[9] / (16.043000 * YOW);
  x[10] = y[10] / (28.010000 * YOW);
  x[11] = y[11] / (44.009000 * YOW);
  x[12] = y[12] / (30.026000 * YOW);
  x[13] = y[13] / (26.038000 * YOW);
  x[14] = y[14] / (28.054000 * YOW);
  x[15] = y[15] / (30.070000 * YOW);
  x[16] = y[16] / (41.029000 * YOW);
  x[17] = y[17] / (42.037000 * YOW);
  x[18] = y[18] / (44.053000 * YOW);
  x[19] = y[19] / (41.073000 * YOW);
  x[20] = y[20] / (42.081000 * YOW);
  x[21] = y[21] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  result += x[0] * (sor[0] - log((x[0] + 1e-100)) - logPratio);
  result += x[1] * (sor[1] - log((x[1] + 1e-100)) - logPratio);
  result += x[2] * (sor[2] - log((x[2] + 1e-100)) - logPratio);
  result += x[3] * (sor[3] - log((x[3] + 1e-100)) - logPratio);
  result += x[4] * (sor[4] - log((x[4] + 1e-100)) - logPratio);
  result += x[5] * (sor[5] - log((x[5] + 1e-100)) - logPratio);
  result += x[6] * (sor[6] - log((x[6] + 1e-100)) - logPratio);
  result += x[7] * (sor[7] - log((x[7] + 1e-100)) - logPratio);
  result += x[8] * (sor[8] - log((x[8] + 1e-100)) - logPratio);
  result += x[9] * (sor[9] - log((x[9] + 1e-100)) - logPratio);
  result += x[10] * (sor[10] - log((x[10] + 1e-100)) - logPratio);
  result += x[11] * (sor[11] - log((x[11] + 1e-100)) - logPratio);
  result += x[12] * (sor[12] - log((x[12] + 1e-100)) - logPratio);
  result += x[13] * (sor[13] - log((x[13] + 1e-100)) - logPratio);
  result += x[14] * (sor[14] - log((x[14] + 1e-100)) - logPratio);
  result += x[15] * (sor[15] - log((x[15] + 1e-100)) - logPratio);
  result += x[16] * (sor[16] - log((x[16] + 1e-100)) - logPratio);
  result += x[17] * (sor[17] - log((x[17] + 1e-100)) - logPratio);
  result += x[18] * (sor[18] - log((x[18] + 1e-100)) - logPratio);
  result += x[19] * (sor[19] - log((x[19] + 1e-100)) - logPratio);
  result += x[20] * (sor[20] - log((x[20] + 1e-100)) - logPratio);
  result += x[21] * (sor[21] - log((x[21] + 1e-100)) - logPratio);
  // Scale by R/W
  *sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real* e, const amrex::Real* y, amrex::Real* t, int* ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real ein = *e;
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  int i; //  loop counter
  CKUBMS(&tmin, y, &emin);
  CKUBMS(&tmax, y, &emax);
  if (ein < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(&tmin, y, &cv);
    *t = tmin - (emin - ein) / cv;
    *ierr = 1;
    return;
  }
  if (ein > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(&tmax, y, &cv);
    *t = tmax - (emax - ein) / cv;
    *ierr = 1;
    return;
  }
  t1 = *t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (ein - emin);
  }
  for (i = 0; i < maxiter; ++i) {
    CKUBMS(&t1, y, &e1);
    CKCVBS(&t1, y, &cv);
    dt = (ein - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  *t = t1;
  *ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real* h, const amrex::Real* y, amrex::Real* t, int* ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real hin = *h;
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  int i; //  loop counter
  CKHBMS(&tmin, y, &hmin);
  CKHBMS(&tmax, y, &hmax);
  if (hin < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(&tmin, y, &cp);
    *t = tmin - (hmin - hin) / cp;
    *ierr = 1;
    return;
  }
  if (hin > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(&tmax, y, &cp);
    *t = tmax - (hmax - hin) / cp;
    *ierr = 1;
    return;
  }
  t1 = *t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (hin - hmin);
  }
  for (i = 0; i < maxiter; ++i) {
    CKHBMS(&t1, y, &h1);
    CKCPBS(&t1, y, &cp);
    dt = (hin - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  *t = t1;
  *ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real* rho,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* P)
{
  amrex::Real XW = 0;                           //  To hold mean molecular wt
  XW += x[0] * 2.016000;                        // H2
  XW += x[1] * 1.008000;                        // H
  XW += x[2] * 15.999000;                       // O
  XW += x[3] * 31.998000;                       // O2
  XW += x[4] * 17.007000;                       // OH
  XW += x[5] * 18.015000;                       // H2O
  XW += x[6] * 33.006000;                       // HO2
  XW += x[7] * 34.014000;                       // H2O2
  XW += x[8] * 15.035000;                       // CH3
  XW += x[9] * 16.043000;                       // CH4
  XW += x[10] * 28.010000;                      // CO
  XW += x[11] * 44.009000;                      // CO2
  XW += x[12] * 30.026000;                      // CH2O
  XW += x[13] * 26.038000;                      // C2H2
  XW += x[14] * 28.054000;                      // C2H4
  XW += x[15] * 30.070000;                      // C2H6
  XW += x[16] * 41.029000;                      // HCCO
  XW += x[17] * 42.037000;                      // CH2CO
  XW += x[18] * 44.053000;                      // CH3CHO
  XW += x[19] * 41.073000;                      // aC3H5
  XW += x[20] * 42.081000;                      // C3H6
  XW += x[21] * 28.014000;                      // N2
  *P = *rho * 8.31446261815324e+07 * (*T) / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real* rho,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* P)
{
  amrex::Real YOW = 0; //  for computing mean MW
  amrex::Real imw[22];

  get_imw(imw);

  YOW += y[0] * imw[0];                          // H2
  YOW += y[1] * imw[1];                          // H
  YOW += y[2] * imw[2];                          // O
  YOW += y[3] * imw[3];                          // O2
  YOW += y[4] * imw[4];                          // OH
  YOW += y[5] * imw[5];                          // H2O
  YOW += y[6] * imw[6];                          // HO2
  YOW += y[7] * imw[7];                          // H2O2
  YOW += y[8] * imw[8];                          // CH3
  YOW += y[9] * imw[9];                          // CH4
  YOW += y[10] * imw[10];                        // CO
  YOW += y[11] * imw[11];                        // CO2
  YOW += y[12] * imw[12];                        // CH2O
  YOW += y[13] * imw[13];                        // C2H2
  YOW += y[14] * imw[14];                        // C2H4
  YOW += y[15] * imw[15];                        // C2H6
  YOW += y[16] * imw[16];                        // HCCO
  YOW += y[17] * imw[17];                        // CH2CO
  YOW += y[18] * imw[18];                        // CH3CHO
  YOW += y[19] * imw[19];                        // aC3H5
  YOW += y[20] * imw[20];                        // C3H6
  YOW += y[21] * imw[21];                        // N2
  *P = *rho * 8.31446261815324e+07 * (*T) * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real* rho,
  const amrex::Real* T,
  const amrex::Real* c,
  amrex::Real* P)
{
  int id; // loop counter
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  *P = *rho * 8.31446261815324e+07 * (*T) * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* rho)
{
  amrex::Real XW = 0;                             //  To hold mean molecular wt
  XW += x[0] * 2.016000;                          // H2
  XW += x[1] * 1.008000;                          // H
  XW += x[2] * 15.999000;                         // O
  XW += x[3] * 31.998000;                         // O2
  XW += x[4] * 17.007000;                         // OH
  XW += x[5] * 18.015000;                         // H2O
  XW += x[6] * 33.006000;                         // HO2
  XW += x[7] * 34.014000;                         // H2O2
  XW += x[8] * 15.035000;                         // CH3
  XW += x[9] * 16.043000;                         // CH4
  XW += x[10] * 28.010000;                        // CO
  XW += x[11] * 44.009000;                        // CO2
  XW += x[12] * 30.026000;                        // CH2O
  XW += x[13] * 26.038000;                        // C2H2
  XW += x[14] * 28.054000;                        // C2H4
  XW += x[15] * 30.070000;                        // C2H6
  XW += x[16] * 41.029000;                        // HCCO
  XW += x[17] * 42.037000;                        // CH2CO
  XW += x[18] * 44.053000;                        // CH3CHO
  XW += x[19] * 41.073000;                        // aC3H5
  XW += x[20] * 42.081000;                        // C3H6
  XW += x[21] * 28.014000;                        // N2
  *rho = *P * XW / (8.31446261815324e+07 * (*T)); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* rho)
{
  amrex::Real YOW = 0;
  amrex::Real tmp[22];
  amrex::Real imw[22];

  get_imw(imw);

  for (int i = 0; i < 22; i++) {
    tmp[i] = y[i] * imw[i];
  }
  for (const auto& tp : tmp) {
    YOW += tp;
  }

  *rho = *P / (8.31446261815324e+07 * (*T) * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* c,
  amrex::Real* rho)
{
  int id; // loop counter
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  *rho = *P * W / (sumC * (*T) * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real* wt)
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real* y, amrex::Real* wtm)
{
  amrex::Real YOW = 0;
  amrex::Real tmp[22];
  amrex::Real imw[22];

  get_imw(imw);

  for (int i = 0; i < 22; i++) {
    tmp[i] = y[i] * imw[i];
  }
  for (const auto& tp : tmp) {
    YOW += tp;
  }

  *wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real* x, amrex::Real* wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  *wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real* c, amrex::Real* wtm)
{
  int id; // loop counter
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  *wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real* T, amrex::Real* cpor)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real* T, amrex::Real* hort)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real* T, amrex::Real* sor)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real* y, amrex::Real* x)
{
  amrex::Real YOW = 0;
  amrex::Real tmp[22];
  amrex::Real imw[22];

  get_imw(imw);

  for (int i = 0; i < 22; i++) {
    tmp[i] = y[i] * imw[i];
  }
  for (const auto& tp : tmp) {
    YOW += tp;
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 22; i++) {
    x[i] = y[i] * imw[i] * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* c)
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;
  amrex::Real imw[22];

  get_imw(imw);

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    c[i] = y[i] * imw[i];
  }
  for (int i = 0; i < 22; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = (*P) / (YOW * 8.31446261815324e+07 * (*T));
  // Now compute conversion

  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] * imw[i];
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real* rho,
  amrex::Real* /*T*/,
  const amrex::Real* y,
  amrex::Real* c)
{
  amrex::Real imw[22];

  get_imw(imw);

  for (int i = 0; i < 22; i++) {
    c[i] = (*rho) * y[i] * imw[i];
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real* x, amrex::Real* y)
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 2.016000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 33.006000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 15.035000 * XWinv;
  y[9] = x[9] * 16.043000 * XWinv;
  y[10] = x[10] * 28.010000 * XWinv;
  y[11] = x[11] * 44.009000 * XWinv;
  y[12] = x[12] * 30.026000 * XWinv;
  y[13] = x[13] * 26.038000 * XWinv;
  y[14] = x[14] * 28.054000 * XWinv;
  y[15] = x[15] * 30.070000 * XWinv;
  y[16] = x[16] * 41.029000 * XWinv;
  y[17] = x[17] * 42.037000 * XWinv;
  y[18] = x[18] * 44.053000 * XWinv;
  y[19] = x[19] * 41.073000 * XWinv;
  y[20] = x[20] * 42.081000 * XWinv;
  y[21] = x[21] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* c)
{
  int id;                                                  // loop counter
  amrex::Real PORT = (*P) / (8.31446261815324e+07 * (*T)); // P/RT

  // Compute conversion, see Eq 10
  for (id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real* rho,
  const amrex::Real* /*T*/,
  const amrex::Real* x,
  amrex::Real* c)
{
  int id;             // loop counter
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  ROW = (*rho) / XW;

  // Compute conversion, see Eq 11
  for (id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real* c, amrex::Real* x)
{
  int id; // loop counter
  amrex::Real sumC = 0;

  // compute sum of c
  for (id = 0; id < 22; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (id = 0; id < 22; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real* c, amrex::Real* y)
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 2.016000;   // H2
  CW += c[1] * 1.008000;   // H
  CW += c[2] * 15.999000;  // O
  CW += c[3] * 31.998000;  // O2
  CW += c[4] * 17.007000;  // OH
  CW += c[5] * 18.015000;  // H2O
  CW += c[6] * 33.006000;  // HO2
  CW += c[7] * 34.014000;  // H2O2
  CW += c[8] * 15.035000;  // CH3
  CW += c[9] * 16.043000;  // CH4
  CW += c[10] * 28.010000; // CO
  CW += c[11] * 44.009000; // CO2
  CW += c[12] * 30.026000; // CH2O
  CW += c[13] * 26.038000; // C2H2
  CW += c[14] * 28.054000; // C2H4
  CW += c[15] * 30.070000; // C2H6
  CW += c[16] * 41.029000; // HCCO
  CW += c[17] * 42.037000; // CH2CO
  CW += c[18] * 44.053000; // CH3CHO
  CW += c[19] * 41.073000; // aC3H5
  CW += c[20] * 42.081000; // C3H6
  CW += c[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 2.016000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 33.006000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 15.035000 * CWinv;
  y[9] = c[9] * 16.043000 * CWinv;
  y[10] = c[10] * 28.010000 * CWinv;
  y[11] = c[11] * 44.009000 * CWinv;
  y[12] = c[12] * 30.026000 * CWinv;
  y[13] = c[13] * 26.038000 * CWinv;
  y[14] = c[14] * 28.054000 * CWinv;
  y[15] = c[15] * 30.070000 * CWinv;
  y[16] = c[16] * 41.029000 * CWinv;
  y[17] = c[17] * 42.037000 * CWinv;
  y[18] = c[18] * 44.053000 * CWinv;
  y[19] = c[19] * 41.073000 * CWinv;
  y[20] = c[20] * 42.081000 * CWinv;
  y[21] = c[21] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real* T, amrex::Real* cvml)
{
  int id;              // loop counter
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real* T, amrex::Real* cpml)
{
  int id;              // loop counter
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real* T, amrex::Real* uml)
{
  int id;              // loop counter
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real* T, amrex::Real* hml)
{
  int id;              // loop counter
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real* T, amrex::Real* sml)
{
  int id;              // loop counter
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real* T, amrex::Real* cvms)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 4.124237409798234e+07;  // H2
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 2.598431970171023e+06;  // O2
  cvms[4] *= 4.888847308845322e+06;  // OH
  cvms[5] *= 4.615299815794193e+06;  // H2O
  cvms[6] *= 2.519076112874398e+06;  // HO2
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 5.530071578419182e+06;  // CH3
  cvms[9] *= 5.182610869633635e+06;  // CH4
  cvms[10] *= 2.968390795484913e+06; // CO
  cvms[11] *= 1.889264154639560e+06; // CO2
  cvms[12] *= 2.769087663409458e+06; // CH2O
  cvms[13] *= 3.193203248388218e+06; // C2H2
  cvms[14] *= 2.963735160103101e+06; // C2H4
  cvms[15] *= 2.765035789209591e+06; // C2H6
  cvms[16] *= 2.026484344769124e+06; // HCCO
  cvms[17] *= 1.977891528451897e+06; // CH2CO
  cvms[18] *= 1.887377163451579e+06; // CH3CHO
  cvms[19] *= 2.024313446340233e+06; // aC3H5
  cvms[20] *= 1.975823440068734e+06; // C3H6
  cvms[21] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real* T, amrex::Real* cpms)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 4.124237409798234e+07;  // H2
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 2.598431970171023e+06;  // O2
  cpms[4] *= 4.888847308845322e+06;  // OH
  cpms[5] *= 4.615299815794193e+06;  // H2O
  cpms[6] *= 2.519076112874398e+06;  // HO2
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 5.530071578419182e+06;  // CH3
  cpms[9] *= 5.182610869633635e+06;  // CH4
  cpms[10] *= 2.968390795484913e+06; // CO
  cpms[11] *= 1.889264154639560e+06; // CO2
  cpms[12] *= 2.769087663409458e+06; // CH2O
  cpms[13] *= 3.193203248388218e+06; // C2H2
  cpms[14] *= 2.963735160103101e+06; // C2H4
  cpms[15] *= 2.765035789209591e+06; // C2H6
  cpms[16] *= 2.026484344769124e+06; // HCCO
  cpms[17] *= 1.977891528451897e+06; // CH2CO
  cpms[18] *= 1.887377163451579e+06; // CH3CHO
  cpms[19] *= 2.024313446340233e+06; // aC3H5
  cpms[20] *= 1.975823440068734e+06; // C3H6
  cpms[21] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real* T, amrex::Real* ums)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  amrex::Real imw[22];

  get_imw(imw);

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 22; i++) {
    ums[i] *= RT * imw[i];
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real* T, amrex::Real* hms)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  amrex::Real imw[22];

  get_imw(imw);

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 22; i++) {
    hms[i] *= RT * imw[i];
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real* T, amrex::Real* sms)
{
  amrex::Real tT = *T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 4.124237409798234e+07;  // H2
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 2.598431970171023e+06;  // O2
  sms[4] *= 4.888847308845322e+06;  // OH
  sms[5] *= 4.615299815794193e+06;  // H2O
  sms[6] *= 2.519076112874398e+06;  // HO2
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 5.530071578419182e+06;  // CH3
  sms[9] *= 5.182610869633635e+06;  // CH4
  sms[10] *= 2.968390795484913e+06; // CO
  sms[11] *= 1.889264154639560e+06; // CO2
  sms[12] *= 2.769087663409458e+06; // CH2O
  sms[13] *= 3.193203248388218e+06; // C2H2
  sms[14] *= 2.963735160103101e+06; // C2H4
  sms[15] *= 2.765035789209591e+06; // C2H6
  sms[16] *= 2.026484344769124e+06; // HCCO
  sms[17] *= 1.977891528451897e+06; // CH2CO
  sms[18] *= 1.887377163451579e+06; // CH3CHO
  sms[19] *= 2.024313446340233e+06; // aC3H5
  sms[20] *= 1.975823440068734e+06; // C3H6
  sms[21] *= 2.967966951578939e+06; // N2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 2: CH + CO (+M) <=> HCCO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[0] * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[10]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
            (sc[16]);
  }

  {
    // reaction 3: H + HCO (+M) <=> CH2O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[1] * 1350000000000 *
                             exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[1]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) *
            (sc[12]);
  }

  {
    // reaction 4: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[2] * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[1]);
    qr[2] = Corr * k_f[2] * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) *
            (sc[8]);
  }

  {
    // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[3] * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (sc[10]);
    qr[3] = Corr * k_f[3] * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
            (sc[17]);
  }

  {
    // reaction 6: CH2O + H (+M) <=> CH3O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[4] * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[1] * sc[12]);
    qr[4] =
      Corr * k_f[4] * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) * (1.0);
  }

  {
    // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[5] * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[5] = Corr * k_f[5] * (sc[8]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) *
            (sc[18]);
  }

  {
    // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[6] * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[6] = Corr * k_f[6] * (1.0);
    qr[6] = Corr * k_f[6] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
            (refCinv) * (sc[1] * sc[13]);
  }

  {
    // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[7] * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[7] = Corr * k_f[7] * (sc[1] * sc[17]);
    qr[7] =
      Corr * k_f[7] * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) * (1.0);
  }

  {
    // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[8] * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[8] = Corr * k_f[8] * (sc[1]);
    qr[8] = Corr * k_f[8] * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) *
            (sc[14]);
  }

  {
    // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[9] * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[9] = Corr * k_f[9] * (sc[8]);
    qr[9] = Corr * k_f[9] * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) *
            (sc[20]);
  }

  {
    // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[10] * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[10] = Corr * k_f[10] * (sc[1]);
    qr[10] = Corr * k_f[10] * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) *
             (refC) * (sc[18]);
  }

  {
    // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[11] * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[11] = Corr * k_f[11] * (sc[14]);
    qr[11] = Corr * k_f[11] * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
             (refCinv) * (sc[0]);
  }

  {
    // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[12] * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[12] = Corr * k_f[12] * (sc[1] * sc[14]);
    qr[12] = Corr * k_f[12] * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) *
             (refC) * (1.0);
  }

  {
    // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[13] * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[13] = Corr * k_f[13] * (sc[1]);
    qr[13] = Corr * k_f[13] * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) *
             (refC) * (sc[15]);
  }

  {
    // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[14] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[14] = Corr * k_f[14] * (sc[1] * sc[20]);
    qr[14] = Corr * k_f[14] * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) *
             (refC) * (1.0);
  }

  {
    // reaction 20: C2H2 (+M) <=> H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (2.5 - 1) * sc[13] +
                       (2.5 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[15] * 2450000000 *
                             exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    qf[15] = Corr * k_f[15] * (sc[13]);
    qr[15] = Corr * k_f[15] * exp(-(g_RT[13] - g_RT_qss[5])) * (1.0);
  }

  {
    // reaction 33: HCO + M <=> CO + H + M
    const amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                             (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                             (3 - 1) * sc[14] + (3 - 1) * sc[15];
    qf[16] = Corr * k_f[16] * (1.0);
    qr[16] = Corr * k_f[16] * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (refCinv) * (sc[1] * sc[10]);
  }

  {
    // reaction 54: CH + O <=> CO + H
    qf[17] = k_f[17] * (sc[2]);
    qr[17] = k_f[17] * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
             (sc[1] * sc[10]);
  }

  {
    // reaction 55: CH + OH <=> H + HCO
    qf[18] = k_f[18] * (sc[4]);
    qr[18] = k_f[18] * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 56: CH + H2 <=> CH2 + H
    qf[19] = k_f[19] * (sc[0]);
    qr[19] =
      k_f[19] * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) * (sc[1]);
  }

  {
    // reaction 57: CH + H2O <=> CH2O + H
    qf[20] = k_f[20] * (sc[5]);
    qr[20] = k_f[20] * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 58: CH + O2 <=> HCO + O
    qf[21] = k_f[21] * (sc[3]);
    qr[21] = k_f[21] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[2]);
  }

  {
    // reaction 59: CH + CO2 <=> CO + HCO
    qf[22] = k_f[22] * (sc[11]);
    qr[22] = k_f[22] *
             exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[10]);
  }

  {
    // reaction 60: H + HCO <=> CO + H2
    qf[23] = k_f[23] * (sc[1]);
    qr[23] = k_f[23] * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 61: HCO + O <=> CO + OH
    qf[24] = k_f[24] * (sc[2]);
    qr[24] = k_f[24] * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
             (sc[4] * sc[10]);
  }

  {
    // reaction 62: HCO + O <=> CO2 + H
    qf[25] = k_f[25] * (sc[2]);
    qr[25] = k_f[25] * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 63: HCO + OH <=> CO + H2O
    qf[26] = k_f[26] * (sc[4]);
    qr[26] = k_f[26] * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 64: HCO + O2 <=> CO + HO2
    qf[27] = k_f[27] * (sc[3]);
    qr[27] = k_f[27] * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
             (sc[6] * sc[10]);
  }

  {
    // reaction 65: CH2 + H2 <=> CH3 + H
    qf[28] = k_f[28] * (sc[0]);
    qr[28] = k_f[28] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 66: CH2 + O <=> H + HCO
    qf[29] = k_f[29] * (sc[2]);
    qr[29] = k_f[29] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 67: CH2 + O2 <=> HCO + OH
    qf[30] = k_f[30] * (sc[3]);
    qr[30] =
      k_f[30] * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 68: CH2 + O2 <=> CO2 + 2 H
    qf[31] = k_f[31] * (sc[3]);
    qr[31] = k_f[31] *
             exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
             (refCinv) * (sc[1] * sc[1] * sc[11]);
  }

  {
    // reaction 69: CH2 + OH <=> CH2O + H
    qf[32] = k_f[32] * (sc[4]);
    qr[32] = k_f[32] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 70: CH2 + OH <=> CH + H2O
    qf[33] = k_f[33] * (sc[4]);
    qr[33] =
      k_f[33] * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 71: CH2 + HO2 <=> CH2O + OH
    qf[34] = k_f[34] * (sc[6]);
    qr[34] = k_f[34] * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 72: CH + CH2 <=> C2H2 + H
    // Remove forward reaction
    // qf[35] = k_f[35] * (1.0);
    qf[35] = 0.0;
    qr[35] = k_f[35] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 73: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[36] = k_f[36] * (1.0);
    qf[36] = 0.0;
    qr[36] = k_f[36] * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 74: CH2* + N2 <=> CH2 + N2
    qf[37] = k_f[37] * (sc[21]);
    qr[37] = k_f[37] * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[21]);
  }

  {
    // reaction 75: CH2* + H <=> CH + H2
    qf[38] = k_f[38] * (sc[1]);
    qr[38] = k_f[38] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
             (sc[0]);
  }

  {
    // reaction 76: CH2* + O <=> CO + H2
    qf[39] = k_f[39] * (sc[2]);
    qr[39] = k_f[39] * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 77: CH2* + O <=> H + HCO
    qf[40] = k_f[40] * (sc[2]);
    qr[40] = k_f[40] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 78: CH2* + OH <=> CH2O + H
    qf[41] = k_f[41] * (sc[4]);
    qr[41] = k_f[41] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 79: CH2* + H2 <=> CH3 + H
    qf[42] = k_f[42] * (sc[0]);
    qr[42] = k_f[42] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 80: CH2* + O2 <=> CO + H + OH
    qf[43] = k_f[43] * (sc[3]);
    qr[43] = k_f[43] *
             exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
             (refCinv) * (sc[1] * sc[4] * sc[10]);
  }

  {
    // reaction 81: CH2* + O2 <=> CO + H2O
    qf[44] = k_f[44] * (sc[3]);
    qr[44] = k_f[44] * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 82: CH2* + H2O <=> CH2 + H2O
    qf[45] = k_f[45] * (sc[5]);
    qr[45] =
      k_f[45] * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 83: CH2* + CO <=> CH2 + CO
    qf[46] = k_f[46] * (sc[10]);
    qr[46] = k_f[46] * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[10]);
  }

  {
    // reaction 84: CH2* + CO2 <=> CH2 + CO2
    qf[47] = k_f[47] * (sc[11]);
    qr[47] = k_f[47] * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[11]);
  }

  {
    // reaction 85: CH2* + CO2 <=> CH2O + CO
    qf[48] = k_f[48] * (sc[11]);
    qr[48] = k_f[48] * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
             (sc[10] * sc[12]);
  }

  {
    // reaction 86: CH2O + H <=> H2 + HCO
    qf[49] = k_f[49] * (sc[1] * sc[12]);
    qr[49] =
      k_f[49] * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) * (sc[0]);
  }

  {
    // reaction 87: CH2O + O <=> HCO + OH
    qf[50] = k_f[50] * (sc[2] * sc[12]);
    qr[50] =
      k_f[50] * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 88: CH2O + OH <=> H2O + HCO
    qf[51] = k_f[51] * (sc[4] * sc[12]);
    qr[51] =
      k_f[51] * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) * (sc[5]);
  }

  {
    // reaction 89: CH2O + O2 <=> HCO + HO2
    qf[52] = k_f[52] * (sc[3] * sc[12]);
    qr[52] =
      k_f[52] * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 90: CH2O + HO2 <=> H2O2 + HCO
    qf[53] = k_f[53] * (sc[6] * sc[12]);
    qr[53] =
      k_f[53] * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 91: CH + CH2O <=> CH2CO + H
    qf[54] = k_f[54] * (sc[12]);
    qr[54] = k_f[54] * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 93: CH3 + OH <=> CH2 + H2O
    qf[55] = k_f[55] * (sc[4] * sc[8]);
    qr[55] =
      k_f[55] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 94: CH3 + OH <=> CH2* + H2O
    qf[56] = k_f[56] * (sc[4] * sc[8]);
    qr[56] =
      k_f[56] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 95: CH3 + O2 <=> CH3O + O
    qf[57] = k_f[57] * (sc[3] * sc[8]);
    qr[57] =
      k_f[57] * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) * (sc[2]);
  }

  {
    // reaction 98: CH3 + HO2 <=> CH3O + OH
    qf[58] = k_f[58] * (sc[6] * sc[8]);
    qr[58] =
      k_f[58] * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) * (sc[4]);
  }

  {
    // reaction 100: CH + CH3 <=> C2H3 + H
    qf[59] = k_f[59] * (sc[8]);
    qr[59] = k_f[59] * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
             (sc[1]);
  }

  {
    // reaction 101: CH3 + HCO <=> CH4 + CO
    qf[60] = k_f[60] * (sc[8]);
    qr[60] = k_f[60] * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
             (sc[9] * sc[10]);
  }

  {
    // reaction 102: CH2O + CH3 <=> CH4 + HCO
    qf[61] = k_f[61] * (sc[8] * sc[12]);
    qr[61] =
      k_f[61] * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) * (sc[9]);
  }

  {
    // reaction 103: CH2 + CH3 <=> C2H4 + H
    qf[62] = k_f[62] * (sc[8]);
    qr[62] = k_f[62] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 104: CH2* + CH3 <=> C2H4 + H
    qf[63] = k_f[63] * (sc[8]);
    qr[63] = k_f[63] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 105: 2 CH3 <=> C2H5 + H
    qf[64] = k_f[64] * (sc[8] * sc[8]);
    qr[64] =
      k_f[64] * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) * (sc[1]);
  }

  {
    // reaction 107: CH3O + H <=> CH2O + H2
    qf[65] = k_f[65] * (sc[1]);
    qr[65] = k_f[65] * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
             (sc[0] * sc[12]);
  }

  {
    // reaction 108: CH3O + H <=> CH3 + OH
    qf[66] = k_f[66] * (sc[1]);
    qr[66] = k_f[66] * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) *
             (sc[4] * sc[8]);
  }

  {
    // reaction 109: CH3O + H <=> CH2* + H2O
    qf[67] = k_f[67] * (sc[1]);
    qr[67] =
      k_f[67] * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) * (sc[5]);
  }

  {
    // reaction 110: CH3O + O <=> CH2O + OH
    qf[68] = k_f[68] * (sc[2]);
    qr[68] = k_f[68] * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 111: CH3O + OH <=> CH2O + H2O
    qf[69] = k_f[69] * (sc[4]);
    qr[69] = k_f[69] * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 112: CH3O + O2 <=> CH2O + HO2
    qf[70] = k_f[70] * (sc[3]);
    qr[70] = k_f[70] * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 116: CH + CH4 <=> C2H4 + H
    qf[71] = k_f[71] * (sc[9]);
    qr[71] = k_f[71] * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 117: CH2 + CH4 <=> 2 CH3
    qf[72] = k_f[72] * (sc[9]);
    qr[72] = k_f[72] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 118: CH2* + CH4 <=> 2 CH3
    qf[73] = k_f[73] * (sc[9]);
    qr[73] = k_f[73] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 119: H + HCCO <=> CH2* + CO
    qf[74] = k_f[74] * (sc[1] * sc[16]);
    qr[74] =
      k_f[74] * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) * (sc[10]);
  }

  {
    // reaction 122: CH + HCCO <=> C2H2 + CO
    qf[75] = k_f[75] * (sc[16]);
    qr[75] = k_f[75] * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
             (sc[10] * sc[13]);
  }

  {
    // reaction 123: CH2 + HCCO <=> C2H3 + CO
    qf[76] = k_f[76] * (sc[16]);
    qr[76] = k_f[76] *
             exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 126: C2H2 + O <=> CH2 + CO
    qf[77] = k_f[77] * (sc[2] * sc[13]);
    qr[77] =
      k_f[77] * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) * (sc[10]);
  }

  {
    // reaction 129: C2H2 + HCO <=> C2H3 + CO
    qf[78] = k_f[78] * (sc[13]);
    qr[78] = k_f[78] *
             exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 130: H + H2CC <=> C2H2 + H
    qf[79] = k_f[79] * (sc[1]);
    qr[79] = k_f[79] * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 131: H2CC + O <=> CH2 + CO
    qf[80] = k_f[80] * (sc[2]);
    qr[80] = k_f[80] * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[10]);
  }

  {
    // reaction 132: H2CC + OH <=> CH2CO + H
    qf[81] = k_f[81] * (sc[4]);
    qr[81] = k_f[81] * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 133: H2CC + O2 <=> CH2 + CO2
    qf[82] = k_f[82] * (sc[3]);
    qr[82] = k_f[82] * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[11]);
  }

  {
    // reaction 137: CH2CO + O <=> CH2 + CO2
    qf[83] = k_f[83] * (sc[2] * sc[17]);
    qr[83] =
      k_f[83] * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) * (sc[11]);
  }

  {
    // reaction 139: C2H3 + H <=> C2H2 + H2
    qf[84] = k_f[84] * (sc[1]);
    qr[84] = k_f[84] * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 140: C2H3 + H <=> H2 + H2CC
    qf[85] = k_f[85] * (sc[1]);
    qr[85] = k_f[85] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
             (sc[0]);
  }

  {
    // reaction 141: C2H3 + O <=> CH2CO + H
    qf[86] = k_f[86] * (sc[2]);
    qr[86] = k_f[86] * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 142: C2H3 + O <=> CH3 + CO
    qf[87] = k_f[87] * (sc[2]);
    qr[87] = k_f[87] * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 143: C2H3 + OH <=> C2H2 + H2O
    qf[88] = k_f[88] * (sc[4]);
    qr[88] = k_f[88] * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
             (sc[5] * sc[13]);
  }

  {
    // reaction 144: C2H3 + O2 <=> C2H2 + HO2
    qf[89] = k_f[89] * (sc[3]);
    qr[89] = k_f[89] * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
             (sc[6] * sc[13]);
  }

  {
    // reaction 145: C2H3 + O2 <=> CH2CHO + O
    qf[90] = k_f[90] * (sc[3]);
    qr[90] = k_f[90] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[2]);
  }

  {
    // reaction 146: C2H3 + O2 <=> CH2O + HCO
    qf[91] = k_f[91] * (sc[3]);
    qr[91] = k_f[91] * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
             (sc[12]);
  }

  {
    // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
    qf[92] = k_f[92] * (sc[6]);
    qr[92] = k_f[92] * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[4]);
  }

  {
    // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
    qf[93] = k_f[93] * (sc[7]);
    qr[93] = k_f[93] * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
             (sc[6] * sc[14]);
  }

  {
    // reaction 149: C2H3 + HCO <=> C2H4 + CO
    // Remove forward reaction
    // qf[94] = k_f[94] * (1.0);
    qf[94] = 0.0;
    qr[94] = k_f[94] *
             exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
             (sc[10] * sc[14]);
  }

  {
    // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
    qf[95] = k_f[95] * (sc[8]);
    qr[95] = k_f[95] * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
             (sc[9] * sc[13]);
  }

  {
    // reaction 151: C2H3 + CH3 <=> H + aC3H5
    qf[96] = k_f[96] * (sc[8]);
    qr[96] = k_f[96] * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
             (sc[1] * sc[19]);
  }

  {
    // reaction 152: CH2CHO <=> CH3 + CO
    qf[97] = k_f[97] * (1.0);
    qr[97] = k_f[97] * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 153: CH2CHO + H <=> CH3 + HCO
    qf[98] = k_f[98] * (sc[1]);
    qr[98] =
      k_f[98] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) * (sc[8]);
  }

  {
    // reaction 154: CH2CHO + H <=> CH2CO + H2
    qf[99] = k_f[99] * (sc[1]);
    qr[99] = k_f[99] * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
             (sc[0] * sc[17]);
  }

  {
    // reaction 155: CH2CHO + O <=> CH2CO + OH
    qf[100] = k_f[100] * (sc[2]);
    qr[100] = k_f[100] * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
              (sc[4] * sc[17]);
  }

  {
    // reaction 156: CH2CHO + OH <=> CH2CO + H2O
    qf[101] = k_f[101] * (sc[4]);
    qr[101] = k_f[101] * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
              (sc[5] * sc[17]);
  }

  {
    // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
    qf[102] = k_f[102] * (sc[3]);
    qr[102] = k_f[102] * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
              (sc[6] * sc[17]);
  }

  {
    // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
    qf[103] = k_f[103] * (sc[3]);
    qr[103] = k_f[103] *
              exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
              (refCinv) * (sc[4] * sc[10] * sc[12]);
  }

  {
    // reaction 159: C2H4 + H <=> C2H3 + H2
    qf[104] = k_f[104] * (sc[1] * sc[14]);
    qr[104] =
      k_f[104] * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) * (sc[0]);
  }

  {
    // reaction 160: C2H4 + O <=> C2H3 + OH
    qf[105] = k_f[105] * (sc[2] * sc[14]);
    qr[105] =
      k_f[105] * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) * (sc[4]);
  }

  {
    // reaction 161: C2H4 + O <=> CH3 + HCO
    qf[106] = k_f[106] * (sc[2] * sc[14]);
    qr[106] =
      k_f[106] * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) * (sc[8]);
  }

  {
    // reaction 162: C2H4 + O <=> CH2 + CH2O
    qf[107] = k_f[107] * (sc[2] * sc[14]);
    qr[107] =
      k_f[107] * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) * (sc[12]);
  }

  {
    // reaction 163: C2H4 + OH <=> C2H3 + H2O
    qf[108] = k_f[108] * (sc[4] * sc[14]);
    qr[108] =
      k_f[108] * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) * (sc[5]);
  }

  {
    // reaction 164: C2H4 + O2 <=> C2H3 + HO2
    qf[109] = k_f[109] * (sc[3] * sc[14]);
    qr[109] =
      k_f[109] * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) * (sc[6]);
  }

  {
    // reaction 166: C2H4 + HCO <=> C2H5 + CO
    qf[110] = k_f[110] * (sc[14]);
    qr[110] = k_f[110] *
              exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
              (sc[10]);
  }

  {
    // reaction 167: C2H4 + CH2 <=> H + aC3H5
    qf[111] = k_f[111] * (sc[14]);
    qr[111] = k_f[111] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
    qf[112] = k_f[112] * (sc[14]);
    qr[112] = k_f[112] *
              exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 169: C2H4 + CH2* <=> H + aC3H5
    qf[113] = k_f[113] * (sc[14]);
    qr[113] = k_f[113] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
    qf[114] = k_f[114] * (sc[8] * sc[14]);
    qr[114] =
      k_f[114] * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) * (sc[9]);
  }

  {
    // reaction 171: C2H4 + CH3 <=> nC3H7
    qf[115] = k_f[115] * (sc[8] * sc[14]);
    qr[115] =
      k_f[115] * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (1.0);
  }

  {
    // reaction 172: C2H5 + H <=> C2H4 + H2
    qf[116] = k_f[116] * (sc[1]);
    qr[116] = k_f[116] * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
              (sc[0] * sc[14]);
  }

  {
    // reaction 173: C2H5 + O <=> CH2O + CH3
    qf[117] = k_f[117] * (sc[2]);
    qr[117] = k_f[117] * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (sc[8] * sc[12]);
  }

  {
    // reaction 174: C2H5 + O <=> CH3CHO + H
    qf[118] = k_f[118] * (sc[2]);
    qr[118] = k_f[118] * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
              (sc[1] * sc[18]);
  }

  {
    // reaction 175: C2H5 + O2 <=> C2H4 + HO2
    qf[119] = k_f[119] * (sc[3]);
    qr[119] = k_f[119] * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
              (sc[6] * sc[14]);
  }

  {
    // reaction 176: C2H5 + HO2 <=> C2H6 + O2
    qf[120] = k_f[120] * (sc[6]);
    qr[120] = k_f[120] * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
              (sc[3] * sc[15]);
  }

  {
    // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
    qf[121] = k_f[121] * (sc[6]);
    qr[121] = k_f[121] * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
              (sc[7] * sc[14]);
  }

  {
    // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
    qf[122] = k_f[122] * (sc[6]);
    qr[122] = k_f[122] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (refCinv) * (sc[4] * sc[8] * sc[12]);
  }

  {
    // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
    qf[123] = k_f[123] * (sc[7]);
    qr[123] = k_f[123] * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
              (sc[6] * sc[15]);
  }

  {
    // reaction 180: C2H5 + HCO <=> C2H6 + CO
    // Remove forward reaction
    // qf[124] = k_f[124] * (1.0);
    qf[124] = 0.0;
    qr[124] = k_f[124] *
              exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
              (sc[10] * sc[15]);
  }

  {
    // reaction 181: C2H6 + H <=> C2H5 + H2
    qf[125] = k_f[125] * (sc[1] * sc[15]);
    qr[125] =
      k_f[125] * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) * (sc[0]);
  }

  {
    // reaction 182: C2H6 + O <=> C2H5 + OH
    qf[126] = k_f[126] * (sc[2] * sc[15]);
    qr[126] =
      k_f[126] * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) * (sc[4]);
  }

  {
    // reaction 183: C2H6 + OH <=> C2H5 + H2O
    qf[127] = k_f[127] * (sc[4] * sc[15]);
    qr[127] =
      k_f[127] * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) * (sc[5]);
  }

  {
    // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
    qf[128] = k_f[128] * (sc[15]);
    qr[128] = k_f[128] *
              exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) * (sc[8]);
  }

  {
    // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
    qf[129] = k_f[129] * (sc[8] * sc[15]);
    qr[129] =
      k_f[129] * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) * (sc[9]);
  }

  {
    // reaction 186: H + aC3H5 <=> CH4 + H2CC
    qf[130] = k_f[130] * (sc[1] * sc[19]);
    qr[130] =
      k_f[130] * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
    qf[131] = k_f[131] * (sc[6] * sc[19]);
    qr[131] = k_f[131] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
              (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 189: HCO + aC3H5 <=> C3H6 + CO
    qf[132] = k_f[132] * (sc[19]);
    qr[132] = k_f[132] * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
              (sc[10] * sc[20]);
  }

  {
    // reaction 193: C3H6 + O => C2H5 + HCO
    qf[133] = k_f[133] * (sc[2] * sc[20]);
    qr[133] = 0.0;
  }

  {
    // reaction 198: H + nC3H7 <=> C2H5 + CH3
    qf[134] = k_f[134] * (sc[1]);
    qr[134] = k_f[134] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
              (sc[8]);
  }

  {
    // reaction 199: H + nC3H7 <=> C3H6 + H2
    qf[135] = k_f[135] * (sc[1]);
    qr[135] = k_f[135] * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
              (sc[0] * sc[20]);
  }

  {
    // reaction 200: O + nC3H7 <=> C2H5 + CH2O
    qf[136] = k_f[136] * (sc[2]);
    qr[136] = k_f[136] *
              exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) * (sc[12]);
  }

  {
    // reaction 201: OH + nC3H7 <=> C3H6 + H2O
    qf[137] = k_f[137] * (sc[4]);
    qr[137] = k_f[137] * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
              (sc[5] * sc[20]);
  }

  {
    // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
    qf[138] = k_f[138] * (sc[3]);
    qr[138] = k_f[138] * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
              (sc[6] * sc[20]);
  }

  {
    // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
    qf[139] = k_f[139] * (sc[6]);
    qr[139] =
      k_f[139] *
      exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
    qf[140] = k_f[140] * (sc[8]);
    qr[140] = k_f[140] * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
              (sc[9] * sc[20]);
  }

  {
    // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
    // Remove forward reaction
    // qf[141] = k_f[141] * (1.0);
    qf[141] = 0.0;
    qr[141] = k_f[141] *
              exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
              (sc[8] * sc[19]);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  k_f[0] = 50000000;
  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  k_f[1] = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  k_f[2] = 25000000000 * exp((-0.8) * tc[0]);
  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  k_f[3] = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  k_f[4] = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f[5] = 18000000;
  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  k_f[6] = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  k_f[7] = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  k_f[8] = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f[9] = 25000000;
  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f[10] = 100000000;
  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  k_f[11] = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  k_f[12] = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  k_f[13] = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  k_f[14] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  k_f[15] = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  // reaction 33: HCO + M <=> CO + H + M
  k_f[16] = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 54: CH + O <=> CO + H
  k_f[17] = 57000000;
  // reaction 55: CH + OH <=> H + HCO
  k_f[18] = 30000000;
  // reaction 56: CH + H2 <=> CH2 + H
  k_f[19] = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  // reaction 57: CH + H2O <=> CH2O + H
  k_f[20] = 5710000 * exp(-(-379.928582682563) * invT);
  // reaction 58: CH + O2 <=> HCO + O
  k_f[21] = 33000000;
  // reaction 59: CH + CO2 <=> CO + HCO
  k_f[22] = 3400000 * exp(-(347.219499405257) * invT);
  // reaction 60: H + HCO <=> CO + H2
  k_f[23] = 73400000;
  // reaction 61: HCO + O <=> CO + OH
  k_f[24] = 30000000;
  // reaction 62: HCO + O <=> CO2 + H
  k_f[25] = 30000000;
  // reaction 63: HCO + OH <=> CO + H2O
  k_f[26] = 50000000;
  // reaction 64: HCO + O2 <=> CO + HO2
  k_f[27] = 7600000 * exp(-(201.286666321888) * invT);
  // reaction 65: CH2 + H2 <=> CH3 + H
  k_f[28] = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  // reaction 66: CH2 + O <=> H + HCO
  k_f[29] = 80000000;
  // reaction 67: CH2 + O2 <=> HCO + OH
  k_f[30] = 10560000 * exp(-(754.82499870708) * invT);
  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  k_f[31] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 69: CH2 + OH <=> CH2O + H
  k_f[32] = 20000000;
  // reaction 70: CH2 + OH <=> CH + H2O
  k_f[33] = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  // reaction 71: CH2 + HO2 <=> CH2O + OH
  k_f[34] = 20000000;
  // reaction 72: CH + CH2 <=> C2H2 + H
  k_f[35] = 40000000;
  // reaction 73: 2 CH2 <=> C2H2 + H2
  k_f[36] = 32000000;
  // reaction 74: CH2* + N2 <=> CH2 + N2
  k_f[37] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 75: CH2* + H <=> CH + H2
  k_f[38] = 30000000;
  // reaction 76: CH2* + O <=> CO + H2
  k_f[39] = 15000000;
  // reaction 77: CH2* + O <=> H + HCO
  k_f[40] = 15000000;
  // reaction 78: CH2* + OH <=> CH2O + H
  k_f[41] = 30000000;
  // reaction 79: CH2* + H2 <=> CH3 + H
  k_f[42] = 70000000;
  // reaction 80: CH2* + O2 <=> CO + H + OH
  k_f[43] = 28000000;
  // reaction 81: CH2* + O2 <=> CO + H2O
  k_f[44] = 12000000;
  // reaction 82: CH2* + H2O <=> CH2 + H2O
  k_f[45] = 30000000;
  // reaction 83: CH2* + CO <=> CH2 + CO
  k_f[46] = 9000000;
  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  k_f[47] = 7000000;
  // reaction 85: CH2* + CO2 <=> CH2O + CO
  k_f[48] = 14000000;
  // reaction 86: CH2O + H <=> H2 + HCO
  k_f[49] = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  // reaction 87: CH2O + O <=> HCO + OH
  k_f[50] = 39000000 * exp(-(1781.38699694871) * invT);
  // reaction 88: CH2O + OH <=> H2O + HCO
  k_f[51] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 89: CH2O + O2 <=> HCO + HO2
  k_f[52] = 100000000 * exp(-(20128.6666321888) * invT);
  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  k_f[53] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 91: CH + CH2O <=> CH2CO + H
  k_f[54] = 94600000 * exp(-(-259.156582889431) * invT);
  // reaction 93: CH3 + OH <=> CH2 + H2O
  k_f[55] = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  // reaction 94: CH3 + OH <=> CH2* + H2O
  k_f[56] = 25010000;
  // reaction 95: CH3 + O2 <=> CH3O + O
  k_f[57] = 30830000 * exp(-(14492.6399751759) * invT);
  // reaction 98: CH3 + HO2 <=> CH3O + OH
  k_f[58] = 13400000;
  // reaction 100: CH + CH3 <=> C2H3 + H
  k_f[59] = 30000000;
  // reaction 101: CH3 + HCO <=> CH4 + CO
  k_f[60] = 8480000;
  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  k_f[61] = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  // reaction 103: CH2 + CH3 <=> C2H4 + H
  k_f[62] = 40000000;
  // reaction 104: CH2* + CH3 <=> C2H4 + H
  k_f[63] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 105: 2 CH3 <=> C2H5 + H
  k_f[64] = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  // reaction 107: CH3O + H <=> CH2O + H2
  k_f[65] = 20000000;
  // reaction 108: CH3O + H <=> CH3 + OH
  k_f[66] = 32000000;
  // reaction 109: CH3O + H <=> CH2* + H2O
  k_f[67] = 16000000;
  // reaction 110: CH3O + O <=> CH2O + OH
  k_f[68] = 10000000;
  // reaction 111: CH3O + OH <=> CH2O + H2O
  k_f[69] = 5000000;
  // reaction 112: CH3O + O2 <=> CH2O + HO2
  k_f[70] = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  // reaction 116: CH + CH4 <=> C2H4 + H
  k_f[71] = 60000000;
  // reaction 117: CH2 + CH4 <=> 2 CH3
  k_f[72] = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  // reaction 118: CH2* + CH4 <=> 2 CH3
  k_f[73] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 119: H + HCCO <=> CH2* + CO
  k_f[74] = 100000000;
  // reaction 122: CH + HCCO <=> C2H2 + CO
  k_f[75] = 50000000;
  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  k_f[76] = 30000000;
  // reaction 126: C2H2 + O <=> CH2 + CO
  k_f[77] = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  k_f[78] = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  // reaction 130: H + H2CC <=> C2H2 + H
  k_f[79] = 100000000;
  // reaction 131: H2CC + O <=> CH2 + CO
  k_f[80] = 100000000;
  // reaction 132: H2CC + OH <=> CH2CO + H
  k_f[81] = 20000000;
  // reaction 133: H2CC + O2 <=> CH2 + CO2
  k_f[82] = 10000000;
  // reaction 137: CH2CO + O <=> CH2 + CO2
  k_f[83] = 1750000 * exp(-(679.342498836372) * invT);
  // reaction 139: C2H3 + H <=> C2H2 + H2
  k_f[84] = 30000000;
  // reaction 140: C2H3 + H <=> H2 + H2CC
  k_f[85] = 60000000;
  // reaction 141: C2H3 + O <=> CH2CO + H
  k_f[86] = 48000000;
  // reaction 142: C2H3 + O <=> CH3 + CO
  k_f[87] = 48000000;
  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  k_f[88] = 30110000;
  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  k_f[89] = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  k_f[90] = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  k_f[91] = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  k_f[92] = 10000000;
  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  k_f[93] = 12100 * exp(-(-299.917132819613) * invT);
  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  k_f[94] = 90330000;
  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  k_f[95] = 392000;
  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  k_f[96] = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  // reaction 152: CH2CHO <=> CH3 + CO
  k_f[97] = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  // reaction 153: CH2CHO + H <=> CH3 + HCO
  k_f[98] = 90000000;
  // reaction 154: CH2CHO + H <=> CH2CO + H2
  k_f[99] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 155: CH2CHO + O <=> CH2CO + OH
  k_f[100] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  k_f[101] = 10000000 * exp(-(1006.43333160944) * invT);
  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  k_f[102] = 140000;
  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  k_f[103] = 18000;
  // reaction 159: C2H4 + H <=> C2H3 + H2
  k_f[104] = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  // reaction 160: C2H4 + O <=> C2H3 + OH
  k_f[105] = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  // reaction 161: C2H4 + O <=> CH3 + HCO
  k_f[106] = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 162: C2H4 + O <=> CH2 + CH2O
  k_f[107] = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  k_f[108] = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  k_f[109] = 42200000 * exp(-(30595.573280927) * invT);
  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  k_f[110] = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  k_f[111] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  k_f[112] = 50000000;
  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  k_f[113] = 50000000;
  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  k_f[114] = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  // reaction 171: C2H4 + CH3 <=> nC3H7
  k_f[115] = 330000 * exp(-(3874.76832669634) * invT);
  // reaction 172: C2H5 + H <=> C2H4 + H2
  k_f[116] = 2000000;
  // reaction 173: C2H5 + O <=> CH2O + CH3
  k_f[117] = 16040000;
  // reaction 174: C2H5 + O <=> CH3CHO + H
  k_f[118] = 80200000;
  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  k_f[119] = 20000;
  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  k_f[120] = 300000;
  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  k_f[121] = 300000;
  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f[122] = 24000000;
  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  k_f[123] = 8700 * exp(-(490.133032493797) * invT);
  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  k_f[124] = 120000000;
  // reaction 181: C2H6 + H <=> C2H5 + H2
  k_f[125] = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  // reaction 182: C2H6 + O <=> C2H5 + OH
  k_f[126] = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  k_f[127] = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  k_f[128] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  k_f[129] = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  k_f[130] = 20000000 * exp(-(1006.43333160944) * invT);
  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f[131] = 6600000;
  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  k_f[132] = 60000000;
  // reaction 193: C3H6 + O => C2H5 + HCO
  k_f[133] = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  k_f[134] = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  // reaction 199: H + nC3H7 <=> C3H6 + H2
  k_f[135] = 1800000;
  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  k_f[136] = 96000000;
  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  k_f[137] = 24000000;
  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  k_f[138] = 90000;
  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f[139] = 24000000;
  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  k_f[140] = 11000000;
  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  k_f[141] = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between CH3O  nC3H7  C2H5  CH2CHO  H2CC  C2H3  HCO  CH2*  CH2
  // CH QSSA species 4: CH3O

  amrex::Real CH3O_num = epsilon + 1.0 * qf_co[4] + 1.0 * qf_co[57] +
                         1.0 * qf_co[58] + 1.0 * qr_co[65] + 1.0 * qr_co[66] +
                         1.0 * qr_co[68] + 1.0 * qr_co[69] + 1.0 * qr_co[70];
  amrex::Real CH3O_denom = epsilon - qr_co[4] - qr_co[57] - qr_co[58] -
                           qf_co[65] - qf_co[66] - qf_co[67] - qf_co[68] -
                           qf_co[69] - qf_co[70];
  amrex::Real CH3O_rhs = -CH3O_num / CH3O_denom;

  amrex::Real CH3O_CH2D = (epsilon + 1.0 * qr_co[67]) / CH3O_denom;

  // QSSA species 9: nC3H7

  amrex::Real nC3H7_num = epsilon + 1.0 * qf_co[14] + 1.0 * qf_co[115] +
                          1.0 * qr_co[135] + 1.0 * qr_co[137] +
                          1.0 * qr_co[138] + 1.0 * qr_co[140];
  amrex::Real nC3H7_denom = epsilon - qr_co[14] - qr_co[115] - qf_co[134] -
                            qf_co[135] - qf_co[136] - qf_co[137] - qf_co[138] -
                            qf_co[139] - qf_co[140];
  amrex::Real nC3H7_rhs = -nC3H7_num / nC3H7_denom;

  amrex::Real nC3H7_C2H5 =
    (epsilon + 1.0 * qr_co[134] + 1.0 * qr_co[136] + 1.0 * qr_co[139]) /
    nC3H7_denom;

  // QSSA species 7: C2H5

  amrex::Real C2H5_num =
    epsilon + 1.0 * qf_co[12] + 1.0 * qr_co[13] + 1.0 * qf_co[64] +
    1.0 * qr_co[116] + 1.0 * qr_co[117] + 1.0 * qr_co[118] + 1.0 * qr_co[119] +
    1.0 * qr_co[120] + 1.0 * qr_co[121] + 1.0 * qr_co[122] + 1.0 * qr_co[123] +
    1.0 * qr_co[124] + 1.0 * qf_co[125] + 1.0 * qf_co[126] + 1.0 * qf_co[127] +
    1.0 * qf_co[129] + 1.0 * qr_co[141];
  amrex::Real C2H5_denom =
    epsilon - qr_co[12] - qf_co[13] - qr_co[64] - qr_co[110] - qf_co[116] -
    qf_co[117] - qf_co[118] - qf_co[119] - qf_co[120] - qf_co[121] -
    qf_co[122] - qf_co[123] - qr_co[125] - qr_co[126] - qr_co[127] -
    qr_co[128] - qr_co[129] - qr_co[134] - qr_co[136] - qr_co[139];
  amrex::Real C2H5_rhs = -C2H5_num / C2H5_denom;

  amrex::Real C2H5_nC3H7 =
    (epsilon + 1.0 * qf_co[134] + 1.0 * qf_co[136] + 1.0 * qf_co[139]) /
    C2H5_denom;
  amrex::Real C2H5_HCO = (epsilon + 1.0 * qf_co[110]) / C2H5_denom;
  amrex::Real C2H5_CH2D = (epsilon + 1.0 * qf_co[128]) / C2H5_denom;

  // QSSA species 8: CH2CHO

  amrex::Real CH2CHO_num = epsilon + 1.0 * qf_co[7] + 1.0 * qr_co[10] +
                           1.0 * qr_co[97] + 1.0 * qr_co[99] +
                           1.0 * qr_co[100] + 1.0 * qr_co[101] +
                           1.0 * qr_co[102] + 1.0 * qr_co[103];
  amrex::Real CH2CHO_denom = epsilon - qr_co[7] - qf_co[10] - qr_co[90] -
                             qr_co[92] - qf_co[97] - qf_co[98] - qf_co[99] -
                             qf_co[100] - qf_co[101] - qf_co[102] - qf_co[103];
  amrex::Real CH2CHO_rhs = -CH2CHO_num / CH2CHO_denom;

  amrex::Real CH2CHO_C2H3 =
    (epsilon + 1.0 * qf_co[90] + 1.0 * qf_co[92]) / CH2CHO_denom;
  amrex::Real CH2CHO_HCO = (epsilon + 1.0 * qr_co[98]) / CH2CHO_denom;

  // QSSA species 5: H2CC

  amrex::Real H2CC_num = epsilon + 1.0 * qf_co[11] + 1.0 * qf_co[15] +
                         1.0 * qr_co[79] + 1.0 * qr_co[81] + 1.0 * qf_co[130];
  amrex::Real H2CC_denom = epsilon - qr_co[11] - qr_co[15] - qf_co[79] -
                           qf_co[80] - qf_co[81] - qf_co[82] - qr_co[85] -
                           qr_co[112] - qr_co[130];
  amrex::Real H2CC_rhs = -H2CC_num / H2CC_denom;

  amrex::Real H2CC_C2H3 = (epsilon + 1.0 * qf_co[85]) / H2CC_denom;
  amrex::Real H2CC_CH2D = (epsilon + 1.0 * qf_co[112]) / H2CC_denom;
  amrex::Real H2CC_CH2 =
    (epsilon + 1.0 * qr_co[80] + 1.0 * qr_co[82]) / H2CC_denom;

  // QSSA species 6: C2H3

  amrex::Real C2H3_num =
    epsilon + 1.0 * qr_co[6] + 1.0 * qr_co[8] + 1.0 * qr_co[9] +
    1.0 * qr_co[84] + 1.0 * qr_co[86] + 1.0 * qr_co[87] + 1.0 * qr_co[88] +
    1.0 * qr_co[89] + 1.0 * qr_co[93] + 1.0 * qr_co[94] + 1.0 * qr_co[95] +
    1.0 * qr_co[96] + 1.0 * qf_co[104] + 1.0 * qf_co[105] + 1.0 * qf_co[108] +
    1.0 * qf_co[109] + 1.0 * qf_co[114] + 1.0 * qf_co[131] + 1.0 * qr_co[141];
  amrex::Real C2H3_denom =
    epsilon - qf_co[6] - qf_co[8] - qf_co[9] - qr_co[59] - qr_co[76] -
    qr_co[78] - qf_co[84] - qf_co[85] - qf_co[86] - qf_co[87] - qf_co[88] -
    qf_co[89] - qf_co[90] - qf_co[91] - qf_co[92] - qf_co[93] - qf_co[95] -
    qf_co[96] - qr_co[104] - qr_co[105] - qr_co[108] - qr_co[109] - qr_co[114] -
    qr_co[131];
  amrex::Real C2H3_rhs = -C2H3_num / C2H3_denom;

  amrex::Real C2H3_CH2CHO =
    (epsilon + 1.0 * qr_co[90] + 1.0 * qr_co[92]) / C2H3_denom;
  amrex::Real C2H3_H2CC = (epsilon + 1.0 * qr_co[85]) / C2H3_denom;
  amrex::Real C2H3_HCO =
    (epsilon + 1.0 * qf_co[78] + 1.0 * qr_co[91]) / C2H3_denom;
  amrex::Real C2H3_CH2 = (epsilon + 1.0 * qf_co[76]) / C2H3_denom;
  amrex::Real C2H3_CH = (epsilon + 1.0 * qf_co[59]) / C2H3_denom;

  // QSSA species 3: HCO

  amrex::Real HCO_num =
    epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[5] + 1.0 * qr_co[16] +
    1.0 * qr_co[23] + 1.0 * qr_co[24] + 1.0 * qr_co[25] + 1.0 * qr_co[26] +
    1.0 * qr_co[27] + 1.0 * qf_co[49] + 1.0 * qf_co[50] + 1.0 * qf_co[51] +
    1.0 * qf_co[52] + 1.0 * qf_co[53] + 1.0 * qr_co[60] + 1.0 * qf_co[61] +
    1.0 * qr_co[94] + 1.0 * qf_co[106] + 1.0 * qr_co[124] + 1.0 * qr_co[132];
  amrex::Real HCO_denom =
    epsilon - qf_co[1] - qf_co[5] - qf_co[16] - qr_co[18] - qr_co[21] -
    qr_co[22] - qf_co[23] - qf_co[24] - qf_co[25] - qf_co[26] - qf_co[27] -
    qr_co[29] - qr_co[30] - qr_co[40] - qr_co[49] - qr_co[50] - qr_co[51] -
    qr_co[52] - qr_co[53] - qf_co[60] - qr_co[61] - qf_co[78] - qr_co[91] -
    qr_co[98] - qr_co[106] - qf_co[110] - qf_co[132];
  amrex::Real HCO_rhs = -HCO_num / HCO_denom;

  amrex::Real HCO_C2H5 = (epsilon + 1.0 * qr_co[110]) / HCO_denom;
  amrex::Real HCO_CH2CHO = (epsilon + 1.0 * qf_co[98]) / HCO_denom;
  amrex::Real HCO_C2H3 =
    (epsilon + 1.0 * qr_co[78] + 1.0 * qf_co[91]) / HCO_denom;
  amrex::Real HCO_CH2D = (epsilon + 1.0 * qf_co[40]) / HCO_denom;
  amrex::Real HCO_CH2 =
    (epsilon + 1.0 * qf_co[29] + 1.0 * qf_co[30]) / HCO_denom;
  amrex::Real HCO_CH =
    (epsilon + 1.0 * qf_co[18] + 1.0 * qf_co[21] + 1.0 * qf_co[22]) / HCO_denom;

  // QSSA species 2: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[39] + 1.0 * qr_co[41] +
                         1.0 * qr_co[42] + 1.0 * qr_co[43] + 1.0 * qr_co[44] +
                         1.0 * qr_co[48] + 1.0 * qf_co[56] + 1.0 * qr_co[63] +
                         1.0 * qr_co[73] + 1.0 * qf_co[74] + 1.0 * qr_co[113];
  amrex::Real CH2D_denom =
    epsilon - qf_co[37] - qf_co[38] - qf_co[39] - qf_co[40] - qf_co[41] -
    qf_co[42] - qf_co[43] - qf_co[44] - qf_co[45] - qf_co[46] - qf_co[47] -
    qf_co[48] - qr_co[56] - qf_co[63] - qr_co[67] - qf_co[73] - qr_co[74] -
    qf_co[112] - qf_co[113] - qf_co[128];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_CH3O = (epsilon + 1.0 * qf_co[67]) / CH2D_denom;
  amrex::Real CH2D_C2H5 = (epsilon + 1.0 * qr_co[128]) / CH2D_denom;
  amrex::Real CH2D_H2CC = (epsilon + 1.0 * qr_co[112]) / CH2D_denom;
  amrex::Real CH2D_HCO = (epsilon + 1.0 * qr_co[40]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[37] + 1.0 * qr_co[45] +
                          1.0 * qr_co[46] + 1.0 * qr_co[47]) /
                         CH2D_denom;
  amrex::Real CH2D_CH = (epsilon + 1.0 * qr_co[38]) / CH2D_denom;

  // QSSA species 1: CH2

  amrex::Real CH2_num =
    epsilon + 1.0 * qr_co[2] + 1.0 * qr_co[3] + 1.0 * qr_co[28] +
    1.0 * qr_co[31] + 1.0 * qr_co[32] + 1.0 * qr_co[34] + 1.0 * qr_co[35] +
    2.0 * qr_co[36] + 1.0 * qf_co[55] + 1.0 * qr_co[62] + 1.0 * qr_co[72] +
    1.0 * qf_co[77] + 1.0 * qf_co[83] + 1.0 * qf_co[107] + 1.0 * qr_co[111];
  amrex::Real CH2_denom =
    epsilon - qf_co[2] - qf_co[3] - qr_co[19] - qf_co[28] - qf_co[29] -
    qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] - qf_co[34] - qf_co[36] -
    qr_co[37] - qr_co[45] - qr_co[46] - qr_co[47] - qr_co[55] - qf_co[62] -
    qf_co[72] - qf_co[76] - qr_co[77] - qr_co[80] - qr_co[82] - qr_co[83] -
    qr_co[107] - qf_co[111];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_H2CC =
    (epsilon + 1.0 * qf_co[80] + 1.0 * qf_co[82]) / CH2_denom;
  amrex::Real CH2_C2H3 = (epsilon + 1.0 * qr_co[76]) / CH2_denom;
  amrex::Real CH2_HCO =
    (epsilon + 1.0 * qr_co[29] + 1.0 * qr_co[30]) / CH2_denom;
  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[37] + 1.0 * qf_co[45] +
                          1.0 * qf_co[46] + 1.0 * qf_co[47]) /
                         CH2_denom;
  amrex::Real CH2_CH =
    (epsilon + 1.0 * qf_co[19] + 1.0 * qr_co[33]) / CH2_denom;

  // QSSA species 0: CH

  amrex::Real CH_num = epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[17] +
                       1.0 * qr_co[20] + 1.0 * qr_co[35] + 1.0 * qr_co[54] +
                       1.0 * qr_co[71] + 1.0 * qr_co[75];
  amrex::Real CH_denom = epsilon - qf_co[0] - qf_co[17] - qf_co[18] -
                         qf_co[19] - qf_co[20] - qf_co[21] - qf_co[22] -
                         qr_co[33] - qr_co[38] - qf_co[54] - qf_co[59] -
                         qf_co[71] - qf_co[75];
  amrex::Real CH_rhs = -CH_num / CH_denom;

  amrex::Real CH_C2H3 = (epsilon + 1.0 * qr_co[59]) / CH_denom;
  amrex::Real CH_HCO =
    (epsilon + 1.0 * qr_co[18] + 1.0 * qr_co[21] + 1.0 * qr_co[22]) / CH_denom;
  amrex::Real CH_CH2D = (epsilon + 1.0 * qf_co[38]) / CH_denom;
  amrex::Real CH_CH2 = (epsilon + 1.0 * qr_co[19] + 1.0 * qf_co[33]) / CH_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_CH3O;
  amrex::Real H_1 = C2H5_nC3H7;
  amrex::Real H_2 = HCO_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_3 = CH2D_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_4 = C2H3_CH2CHO;
  amrex::Real H_5 = HCO_CH2CHO;
  amrex::Real H_6 = C2H3_H2CC;
  amrex::Real H_7 = CH2D_H2CC;
  amrex::Real H_8 = CH2_H2CC;
  amrex::Real H_9 = (HCO_C2H3 - CH2CHO_C2H3 * H_5) /
                    ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_10 =
    (CH2_C2H3 - H2CC_C2H3 * H_8) / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_11 = CH_C2H3 / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_12 =
    (CH2D_HCO - C2H5_HCO * H_3) / (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                                   (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_13 = (CH2_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_10) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_14 = (CH_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_11) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_15 =
    ((CH2_CH2D - H2CC_CH2D * H_8) - (HCO_CH2D - C2H5_CH2D * H_2) * H_13) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_16 =
    (CH_CH2D - (HCO_CH2D - C2H5_CH2D * H_2) * H_14) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_17 =
    (((CH_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_11) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_14) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_16) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);
  sc_qss[0] =
    ((((CH_rhs - ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_11) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_14) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_16) -
     ((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) *
       H_17) /
    ((((1 - C2H3_CH * H_11) - (HCO_CH - C2H3_CH * H_9) * H_14) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_16) -
     (((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
       H_17);

  sc_qss[1] =
    (((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) -
     ((((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
       (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
      sc_qss[0])) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);

  sc_qss[2] =
    (((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
       H2CC_rhs * H_7) -
      (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
       ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
        H_12) -
     ((CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * sc_qss[0] +
      ((CH2D_CH2 - H2CC_CH2 * H_7) -
       (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
        sc_qss[1])) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);

  sc_qss[3] =
    ((((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
      ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) -
     ((HCO_CH - C2H3_CH * H_9) * sc_qss[0] +
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * sc_qss[1] +
      (HCO_CH2D - C2H5_CH2D * H_2) * sc_qss[2])) /
    (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
     (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);

  sc_qss[6] = (((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) -
               (C2H3_CH * sc_qss[0] + (C2H3_CH2 - H2CC_CH2 * H_6) * sc_qss[1] +
                (C2H3_HCO - CH2CHO_HCO * H_4) * sc_qss[3])) /
              ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);

  sc_qss[5] = H2CC_rhs - (+H2CC_CH2 * sc_qss[1] + H2CC_CH2D * sc_qss[2] +
                          H2CC_C2H3 * sc_qss[6]);

  sc_qss[8] = CH2CHO_rhs - (+CH2CHO_HCO * sc_qss[3] + CH2CHO_C2H3 * sc_qss[6]);

  sc_qss[7] = ((C2H5_rhs - nC3H7_rhs * H_1) -
               (+C2H5_CH2D * sc_qss[2] + C2H5_HCO * sc_qss[3])) /
              (1 - nC3H7_C2H5 * H_1);

  sc_qss[9] = nC3H7_rhs - (+nC3H7_C2H5 * sc_qss[7]);

  sc_qss[4] = CH3O_rhs - (+CH3O_CH2D * sc_qss[2]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: 2 OH (+M) <=> H2O2 (+M)
  qf[0] = (sc[4] * sc[4]);
  qr[0] = sc[7];

  // reaction 1: CO + H2 (+M) <=> CH2O (+M)
  qf[1] = sc[0] * sc[10];
  qr[1] = sc[12];

  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  qf[2] = sc[10] * sc_qss[0];
  qr[2] = sc[16];

  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc_qss[3];
  qr[3] = sc[12];

  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc_qss[1];
  qr[4] = sc[8];

  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  qf[5] = sc[10] * sc_qss[1];
  qr[5] = sc[17];

  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  qf[6] = sc[1] * sc[12];
  qr[6] = sc_qss[4];

  // reaction 7: CH3 + H (+M) <=> CH4 (+M)
  qf[7] = sc[1] * sc[8];
  qr[7] = sc[9];

  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  qf[8] = sc[8] * sc_qss[3];
  qr[8] = sc[18];

  // reaction 9: 2 CH3 (+M) <=> C2H6 (+M)
  qf[9] = (sc[8] * sc[8]);
  qr[9] = sc[15];

  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  qf[10] = sc_qss[6];
  qr[10] = sc[1] * sc[13];

  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[11] = sc[1] * sc[17];
  qr[11] = sc_qss[8];

  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  qf[12] = sc[1] * sc_qss[6];
  qr[12] = sc[14];

  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[13] = sc[8] * sc_qss[6];
  qr[13] = sc[20];

  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  qf[14] = sc[1] * sc_qss[8];
  qr[14] = sc[18];

  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  qf[15] = sc[14];
  qr[15] = sc[0] * sc_qss[5];

  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  qf[16] = sc[1] * sc[14];
  qr[16] = sc_qss[7];

  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  qf[17] = sc[1] * sc_qss[7];
  qr[17] = sc[15];

  // reaction 18: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[18] = sc[1] * sc[19];
  qr[18] = sc[20];

  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[19] = sc[1] * sc[20];
  qr[19] = sc_qss[9];

  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  qf[20] = sc[13];
  qr[20] = sc_qss[5];

  // reaction 21: 2 H + M <=> H2 + M
  qf[21] = (sc[1] * sc[1]);
  qr[21] = sc[0];

  // reaction 22: 2 H + H2 <=> H2 + H2
  qf[22] = sc[0] * (sc[1] * sc[1]);
  qr[22] = (sc[0] * sc[0]);

  // reaction 23: 2 H + H2O <=> H2 + H2O
  qf[23] = (sc[1] * sc[1]) * sc[5];
  qr[23] = sc[0] * sc[5];

  // reaction 24: 2 H + CO2 <=> H2 + CO2
  qf[24] = (sc[1] * sc[1]) * sc[11];
  qr[24] = sc[0] * sc[11];

  // reaction 25: H + OH + M <=> H2O + M
  qf[25] = sc[1] * sc[4];
  qr[25] = sc[5];

  // reaction 26: H + O + M <=> OH + M
  qf[26] = sc[1] * sc[2];
  qr[26] = sc[4];

  // reaction 27: 2 O + M <=> O2 + M
  qf[27] = (sc[2] * sc[2]);
  qr[27] = sc[3];

  // reaction 28: H + O2 + M <=> HO2 + M
  qf[28] = sc[1] * sc[3];
  qr[28] = sc[6];

  // reaction 29: H + O2 + O2 <=> HO2 + O2
  qf[29] = sc[1] * (sc[3] * sc[3]);
  qr[29] = sc[3] * sc[6];

  // reaction 30: H + O2 + H2O <=> HO2 + H2O
  qf[30] = sc[1] * sc[3] * sc[5];
  qr[30] = sc[5] * sc[6];

  // reaction 31: H + O2 + N2 <=> HO2 + N2
  qf[31] = sc[1] * sc[3] * sc[21];
  qr[31] = sc[6] * sc[21];

  // reaction 32: CO + O + M <=> CO2 + M
  qf[32] = sc[2] * sc[10];
  qr[32] = sc[11];

  // reaction 33: HCO + M <=> CO + H + M
  qf[33] = sc_qss[3];
  qr[33] = sc[1] * sc[10];

  // reaction 34: C2H2 + CH3 + M <=> aC3H5 + M
  qf[34] = sc[8] * sc[13];
  qr[34] = sc[19];

  // reaction 35: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[3];
  qr[35] = sc[2] * sc[4];

  // reaction 36: H2 + O <=> H + OH
  qf[36] = sc[0] * sc[2];
  qr[36] = sc[1] * sc[4];

  // reaction 37: H2 + OH <=> H + H2O
  qf[37] = sc[0] * sc[4];
  qr[37] = sc[1] * sc[5];

  // reaction 38: 2 OH <=> H2O + O
  qf[38] = (sc[4] * sc[4]);
  qr[38] = sc[2] * sc[5];

  // reaction 39: H + HO2 <=> H2O + O
  qf[39] = sc[1] * sc[6];
  qr[39] = sc[2] * sc[5];

  // reaction 40: H + HO2 <=> H2 + O2
  qf[40] = sc[1] * sc[6];
  qr[40] = sc[0] * sc[3];

  // reaction 41: H + HO2 <=> 2 OH
  qf[41] = sc[1] * sc[6];
  qr[41] = (sc[4] * sc[4]);

  // reaction 42: HO2 + O <=> O2 + OH
  qf[42] = sc[2] * sc[6];
  qr[42] = sc[3] * sc[4];

  // reaction 43: HO2 + OH <=> H2O + O2
  qf[43] = sc[4] * sc[6];
  qr[43] = sc[3] * sc[5];

  // reaction 44: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[6] * sc[6]);
  qr[44] = sc[3] * sc[7];

  // reaction 45: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[6] * sc[6]);
  qr[45] = sc[3] * sc[7];

  // reaction 46: H + H2O2 <=> H2 + HO2
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[0] * sc[6];

  // reaction 47: H + H2O2 <=> H2O + OH
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 48: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[4] * sc[6];

  // reaction 49: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[4] * sc[7];
  qr[49] = sc[5] * sc[6];

  // reaction 50: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[4] * sc[7];
  qr[50] = sc[5] * sc[6];

  // reaction 51: CO + OH <=> CO2 + H
  qf[51] = sc[4] * sc[10];
  qr[51] = sc[1] * sc[11];

  // reaction 52: CO + O2 <=> CO2 + O
  qf[52] = sc[3] * sc[10];
  qr[52] = sc[2] * sc[11];

  // reaction 53: CO + HO2 <=> CO2 + OH
  qf[53] = sc[6] * sc[10];
  qr[53] = sc[4] * sc[11];

  // reaction 54: CH + O <=> CO + H
  qf[54] = sc[2] * sc_qss[0];
  qr[54] = sc[1] * sc[10];

  // reaction 55: CH + OH <=> H + HCO
  qf[55] = sc[4] * sc_qss[0];
  qr[55] = sc[1] * sc_qss[3];

  // reaction 56: CH + H2 <=> CH2 + H
  qf[56] = sc[0] * sc_qss[0];
  qr[56] = sc[1] * sc_qss[1];

  // reaction 57: CH + H2O <=> CH2O + H
  qf[57] = sc[5] * sc_qss[0];
  qr[57] = sc[1] * sc[12];

  // reaction 58: CH + O2 <=> HCO + O
  qf[58] = sc[3] * sc_qss[0];
  qr[58] = sc[2] * sc_qss[3];

  // reaction 59: CH + CO2 <=> CO + HCO
  qf[59] = sc[11] * sc_qss[0];
  qr[59] = sc[10] * sc_qss[3];

  // reaction 60: H + HCO <=> CO + H2
  qf[60] = sc[1] * sc_qss[3];
  qr[60] = sc[0] * sc[10];

  // reaction 61: HCO + O <=> CO + OH
  qf[61] = sc[2] * sc_qss[3];
  qr[61] = sc[4] * sc[10];

  // reaction 62: HCO + O <=> CO2 + H
  qf[62] = sc[2] * sc_qss[3];
  qr[62] = sc[1] * sc[11];

  // reaction 63: HCO + OH <=> CO + H2O
  qf[63] = sc[4] * sc_qss[3];
  qr[63] = sc[5] * sc[10];

  // reaction 64: HCO + O2 <=> CO + HO2
  qf[64] = sc[3] * sc_qss[3];
  qr[64] = sc[6] * sc[10];

  // reaction 65: CH2 + H2 <=> CH3 + H
  qf[65] = sc[0] * sc_qss[1];
  qr[65] = sc[1] * sc[8];

  // reaction 66: CH2 + O <=> H + HCO
  qf[66] = sc[2] * sc_qss[1];
  qr[66] = sc[1] * sc_qss[3];

  // reaction 67: CH2 + O2 <=> HCO + OH
  qf[67] = sc[3] * sc_qss[1];
  qr[67] = sc[4] * sc_qss[3];

  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  qf[68] = sc[3] * sc_qss[1];
  qr[68] = (sc[1] * sc[1]) * sc[11];

  // reaction 69: CH2 + OH <=> CH2O + H
  qf[69] = sc[4] * sc_qss[1];
  qr[69] = sc[1] * sc[12];

  // reaction 70: CH2 + OH <=> CH + H2O
  qf[70] = sc[4] * sc_qss[1];
  qr[70] = sc[5] * sc_qss[0];

  // reaction 71: CH2 + HO2 <=> CH2O + OH
  qf[71] = sc[6] * sc_qss[1];
  qr[71] = sc[4] * sc[12];

  // reaction 72: CH + CH2 <=> C2H2 + H
  qf[72] = sc_qss[0] * sc_qss[1];
  qr[72] = sc[1] * sc[13];

  // reaction 73: 2 CH2 <=> C2H2 + H2
  qf[73] = sc_qss[1] * sc_qss[1];
  qr[73] = sc[0] * sc[13];

  // reaction 74: CH2* + N2 <=> CH2 + N2
  qf[74] = sc[21] * sc_qss[2];
  qr[74] = sc[21] * sc_qss[1];

  // reaction 75: CH2* + H <=> CH + H2
  qf[75] = sc[1] * sc_qss[2];
  qr[75] = sc[0] * sc_qss[0];

  // reaction 76: CH2* + O <=> CO + H2
  qf[76] = sc[2] * sc_qss[2];
  qr[76] = sc[0] * sc[10];

  // reaction 77: CH2* + O <=> H + HCO
  qf[77] = sc[2] * sc_qss[2];
  qr[77] = sc[1] * sc_qss[3];

  // reaction 78: CH2* + OH <=> CH2O + H
  qf[78] = sc[4] * sc_qss[2];
  qr[78] = sc[1] * sc[12];

  // reaction 79: CH2* + H2 <=> CH3 + H
  qf[79] = sc[0] * sc_qss[2];
  qr[79] = sc[1] * sc[8];

  // reaction 80: CH2* + O2 <=> CO + H + OH
  qf[80] = sc[3] * sc_qss[2];
  qr[80] = sc[1] * sc[4] * sc[10];

  // reaction 81: CH2* + O2 <=> CO + H2O
  qf[81] = sc[3] * sc_qss[2];
  qr[81] = sc[5] * sc[10];

  // reaction 82: CH2* + H2O <=> CH2 + H2O
  qf[82] = sc[5] * sc_qss[2];
  qr[82] = sc[5] * sc_qss[1];

  // reaction 83: CH2* + CO <=> CH2 + CO
  qf[83] = sc[10] * sc_qss[2];
  qr[83] = sc[10] * sc_qss[1];

  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  qf[84] = sc[11] * sc_qss[2];
  qr[84] = sc[11] * sc_qss[1];

  // reaction 85: CH2* + CO2 <=> CH2O + CO
  qf[85] = sc[11] * sc_qss[2];
  qr[85] = sc[10] * sc[12];

  // reaction 86: CH2O + H <=> H2 + HCO
  qf[86] = sc[1] * sc[12];
  qr[86] = sc[0] * sc_qss[3];

  // reaction 87: CH2O + O <=> HCO + OH
  qf[87] = sc[2] * sc[12];
  qr[87] = sc[4] * sc_qss[3];

  // reaction 88: CH2O + OH <=> H2O + HCO
  qf[88] = sc[4] * sc[12];
  qr[88] = sc[5] * sc_qss[3];

  // reaction 89: CH2O + O2 <=> HCO + HO2
  qf[89] = sc[3] * sc[12];
  qr[89] = sc[6] * sc_qss[3];

  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  qf[90] = sc[6] * sc[12];
  qr[90] = sc[7] * sc_qss[3];

  // reaction 91: CH + CH2O <=> CH2CO + H
  qf[91] = sc[12] * sc_qss[0];
  qr[91] = sc[1] * sc[17];

  // reaction 92: CH3 + O <=> CH2O + H
  qf[92] = sc[2] * sc[8];
  qr[92] = sc[1] * sc[12];

  // reaction 93: CH3 + OH <=> CH2 + H2O
  qf[93] = sc[4] * sc[8];
  qr[93] = sc[5] * sc_qss[1];

  // reaction 94: CH3 + OH <=> CH2* + H2O
  qf[94] = sc[4] * sc[8];
  qr[94] = sc[5] * sc_qss[2];

  // reaction 95: CH3 + O2 <=> CH3O + O
  qf[95] = sc[3] * sc[8];
  qr[95] = sc[2] * sc_qss[4];

  // reaction 96: CH3 + O2 <=> CH2O + OH
  qf[96] = sc[3] * sc[8];
  qr[96] = sc[4] * sc[12];

  // reaction 97: CH3 + HO2 <=> CH4 + O2
  qf[97] = sc[6] * sc[8];
  qr[97] = sc[3] * sc[9];

  // reaction 98: CH3 + HO2 <=> CH3O + OH
  qf[98] = sc[6] * sc[8];
  qr[98] = sc[4] * sc_qss[4];

  // reaction 99: CH3 + H2O2 <=> CH4 + HO2
  qf[99] = sc[7] * sc[8];
  qr[99] = sc[6] * sc[9];

  // reaction 100: CH + CH3 <=> C2H3 + H
  qf[100] = sc[8] * sc_qss[0];
  qr[100] = sc[1] * sc_qss[6];

  // reaction 101: CH3 + HCO <=> CH4 + CO
  qf[101] = sc[8] * sc_qss[3];
  qr[101] = sc[9] * sc[10];

  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  qf[102] = sc[8] * sc[12];
  qr[102] = sc[9] * sc_qss[3];

  // reaction 103: CH2 + CH3 <=> C2H4 + H
  qf[103] = sc[8] * sc_qss[1];
  qr[103] = sc[1] * sc[14];

  // reaction 104: CH2* + CH3 <=> C2H4 + H
  qf[104] = sc[8] * sc_qss[2];
  qr[104] = sc[1] * sc[14];

  // reaction 105: 2 CH3 <=> C2H5 + H
  qf[105] = (sc[8] * sc[8]);
  qr[105] = sc[1] * sc_qss[7];

  // reaction 106: CH3 + HCCO <=> C2H4 + CO
  qf[106] = sc[8] * sc[16];
  qr[106] = sc[10] * sc[14];

  // reaction 107: CH3O + H <=> CH2O + H2
  qf[107] = sc[1] * sc_qss[4];
  qr[107] = sc[0] * sc[12];

  // reaction 108: CH3O + H <=> CH3 + OH
  qf[108] = sc[1] * sc_qss[4];
  qr[108] = sc[4] * sc[8];

  // reaction 109: CH3O + H <=> CH2* + H2O
  qf[109] = sc[1] * sc_qss[4];
  qr[109] = sc[5] * sc_qss[2];

  // reaction 110: CH3O + O <=> CH2O + OH
  qf[110] = sc[2] * sc_qss[4];
  qr[110] = sc[4] * sc[12];

  // reaction 111: CH3O + OH <=> CH2O + H2O
  qf[111] = sc[4] * sc_qss[4];
  qr[111] = sc[5] * sc[12];

  // reaction 112: CH3O + O2 <=> CH2O + HO2
  qf[112] = sc[3] * sc_qss[4];
  qr[112] = sc[6] * sc[12];

  // reaction 113: CH4 + H <=> CH3 + H2
  qf[113] = sc[1] * sc[9];
  qr[113] = sc[0] * sc[8];

  // reaction 114: CH4 + O <=> CH3 + OH
  qf[114] = sc[2] * sc[9];
  qr[114] = sc[4] * sc[8];

  // reaction 115: CH4 + OH <=> CH3 + H2O
  qf[115] = sc[4] * sc[9];
  qr[115] = sc[5] * sc[8];

  // reaction 116: CH + CH4 <=> C2H4 + H
  qf[116] = sc[9] * sc_qss[0];
  qr[116] = sc[1] * sc[14];

  // reaction 117: CH2 + CH4 <=> 2 CH3
  qf[117] = sc[9] * sc_qss[1];
  qr[117] = (sc[8] * sc[8]);

  // reaction 118: CH2* + CH4 <=> 2 CH3
  qf[118] = sc[9] * sc_qss[2];
  qr[118] = (sc[8] * sc[8]);

  // reaction 119: H + HCCO <=> CH2* + CO
  qf[119] = sc[1] * sc[16];
  qr[119] = sc[10] * sc_qss[2];

  // reaction 120: HCCO + O <=> 2 CO + H
  qf[120] = sc[2] * sc[16];
  qr[120] = sc[1] * (sc[10] * sc[10]);

  // reaction 121: HCCO + O2 <=> 2 CO + OH
  qf[121] = sc[3] * sc[16];
  qr[121] = sc[4] * (sc[10] * sc[10]);

  // reaction 122: CH + HCCO <=> C2H2 + CO
  qf[122] = sc[16] * sc_qss[0];
  qr[122] = sc[10] * sc[13];

  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  qf[123] = sc[16] * sc_qss[1];
  qr[123] = sc[10] * sc_qss[6];

  // reaction 124: 2 HCCO <=> C2H2 + 2 CO
  qf[124] = (sc[16] * sc[16]);
  qr[124] = (sc[10] * sc[10]) * sc[13];

  // reaction 125: C2H2 + O <=> H + HCCO
  qf[125] = sc[2] * sc[13];
  qr[125] = sc[1] * sc[16];

  // reaction 126: C2H2 + O <=> CH2 + CO
  qf[126] = sc[2] * sc[13];
  qr[126] = sc[10] * sc_qss[1];

  // reaction 127: C2H2 + OH <=> CH2CO + H
  qf[127] = sc[4] * sc[13];
  qr[127] = sc[1] * sc[17];

  // reaction 128: C2H2 + OH <=> CH3 + CO
  qf[128] = sc[4] * sc[13];
  qr[128] = sc[8] * sc[10];

  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  qf[129] = sc[13] * sc_qss[3];
  qr[129] = sc[10] * sc_qss[6];

  // reaction 130: H + H2CC <=> C2H2 + H
  qf[130] = sc[1] * sc_qss[5];
  qr[130] = sc[1] * sc[13];

  // reaction 131: H2CC + O <=> CH2 + CO
  qf[131] = sc[2] * sc_qss[5];
  qr[131] = sc[10] * sc_qss[1];

  // reaction 132: H2CC + OH <=> CH2CO + H
  qf[132] = sc[4] * sc_qss[5];
  qr[132] = sc[1] * sc[17];

  // reaction 133: H2CC + O2 <=> CH2 + CO2
  qf[133] = sc[3] * sc_qss[5];
  qr[133] = sc[11] * sc_qss[1];

  // reaction 134: CH2CO + H <=> H2 + HCCO
  qf[134] = sc[1] * sc[17];
  qr[134] = sc[0] * sc[16];

  // reaction 135: CH2CO + H <=> CH3 + CO
  qf[135] = sc[1] * sc[17];
  qr[135] = sc[8] * sc[10];

  // reaction 136: CH2CO + O <=> HCCO + OH
  qf[136] = sc[2] * sc[17];
  qr[136] = sc[4] * sc[16];

  // reaction 137: CH2CO + O <=> CH2 + CO2
  qf[137] = sc[2] * sc[17];
  qr[137] = sc[11] * sc_qss[1];

  // reaction 138: CH2CO + OH <=> H2O + HCCO
  qf[138] = sc[4] * sc[17];
  qr[138] = sc[5] * sc[16];

  // reaction 139: C2H3 + H <=> C2H2 + H2
  qf[139] = sc[1] * sc_qss[6];
  qr[139] = sc[0] * sc[13];

  // reaction 140: C2H3 + H <=> H2 + H2CC
  qf[140] = sc[1] * sc_qss[6];
  qr[140] = sc[0] * sc_qss[5];

  // reaction 141: C2H3 + O <=> CH2CO + H
  qf[141] = sc[2] * sc_qss[6];
  qr[141] = sc[1] * sc[17];

  // reaction 142: C2H3 + O <=> CH3 + CO
  qf[142] = sc[2] * sc_qss[6];
  qr[142] = sc[8] * sc[10];

  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  qf[143] = sc[4] * sc_qss[6];
  qr[143] = sc[5] * sc[13];

  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  qf[144] = sc[3] * sc_qss[6];
  qr[144] = sc[6] * sc[13];

  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  qf[145] = sc[3] * sc_qss[6];
  qr[145] = sc[2] * sc_qss[8];

  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  qf[146] = sc[3] * sc_qss[6];
  qr[146] = sc[12] * sc_qss[3];

  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  qf[147] = sc[6] * sc_qss[6];
  qr[147] = sc[4] * sc_qss[8];

  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  qf[148] = sc[7] * sc_qss[6];
  qr[148] = sc[6] * sc[14];

  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  qf[149] = sc_qss[3] * sc_qss[6];
  qr[149] = sc[10] * sc[14];

  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  qf[150] = sc[8] * sc_qss[6];
  qr[150] = sc[9] * sc[13];

  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  qf[151] = sc[8] * sc_qss[6];
  qr[151] = sc[1] * sc[19];

  // reaction 152: CH2CHO <=> CH3 + CO
  qf[152] = sc_qss[8];
  qr[152] = sc[8] * sc[10];

  // reaction 153: CH2CHO + H <=> CH3 + HCO
  qf[153] = sc[1] * sc_qss[8];
  qr[153] = sc[8] * sc_qss[3];

  // reaction 154: CH2CHO + H <=> CH2CO + H2
  qf[154] = sc[1] * sc_qss[8];
  qr[154] = sc[0] * sc[17];

  // reaction 155: CH2CHO + O <=> CH2CO + OH
  qf[155] = sc[2] * sc_qss[8];
  qr[155] = sc[4] * sc[17];

  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  qf[156] = sc[4] * sc_qss[8];
  qr[156] = sc[5] * sc[17];

  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  qf[157] = sc[3] * sc_qss[8];
  qr[157] = sc[6] * sc[17];

  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  qf[158] = sc[3] * sc_qss[8];
  qr[158] = sc[4] * sc[10] * sc[12];

  // reaction 159: C2H4 + H <=> C2H3 + H2
  qf[159] = sc[1] * sc[14];
  qr[159] = sc[0] * sc_qss[6];

  // reaction 160: C2H4 + O <=> C2H3 + OH
  qf[160] = sc[2] * sc[14];
  qr[160] = sc[4] * sc_qss[6];

  // reaction 161: C2H4 + O <=> CH3 + HCO
  qf[161] = sc[2] * sc[14];
  qr[161] = sc[8] * sc_qss[3];

  // reaction 162: C2H4 + O <=> CH2 + CH2O
  qf[162] = sc[2] * sc[14];
  qr[162] = sc[12] * sc_qss[1];

  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  qf[163] = sc[4] * sc[14];
  qr[163] = sc[5] * sc_qss[6];

  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  qf[164] = sc[3] * sc[14];
  qr[164] = sc[6] * sc_qss[6];

  // reaction 165: C2H4 + HO2 <=> CH3CHO + OH
  qf[165] = sc[6] * sc[14];
  qr[165] = sc[4] * sc[18];

  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  qf[166] = sc[14] * sc_qss[3];
  qr[166] = sc[10] * sc_qss[7];

  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  qf[167] = sc[14] * sc_qss[1];
  qr[167] = sc[1] * sc[19];

  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  qf[168] = sc[14] * sc_qss[2];
  qr[168] = sc[9] * sc_qss[5];

  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  qf[169] = sc[14] * sc_qss[2];
  qr[169] = sc[1] * sc[19];

  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  qf[170] = sc[8] * sc[14];
  qr[170] = sc[9] * sc_qss[6];

  // reaction 171: C2H4 + CH3 <=> nC3H7
  qf[171] = sc[8] * sc[14];
  qr[171] = sc_qss[9];

  // reaction 172: C2H5 + H <=> C2H4 + H2
  qf[172] = sc[1] * sc_qss[7];
  qr[172] = sc[0] * sc[14];

  // reaction 173: C2H5 + O <=> CH2O + CH3
  qf[173] = sc[2] * sc_qss[7];
  qr[173] = sc[8] * sc[12];

  // reaction 174: C2H5 + O <=> CH3CHO + H
  qf[174] = sc[2] * sc_qss[7];
  qr[174] = sc[1] * sc[18];

  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  qf[175] = sc[3] * sc_qss[7];
  qr[175] = sc[6] * sc[14];

  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  qf[176] = sc[6] * sc_qss[7];
  qr[176] = sc[3] * sc[15];

  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  qf[177] = sc[6] * sc_qss[7];
  qr[177] = sc[7] * sc[14];

  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[178] = sc[6] * sc_qss[7];
  qr[178] = sc[4] * sc[8] * sc[12];

  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  qf[179] = sc[7] * sc_qss[7];
  qr[179] = sc[6] * sc[15];

  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  qf[180] = sc_qss[3] * sc_qss[7];
  qr[180] = sc[10] * sc[15];

  // reaction 181: C2H6 + H <=> C2H5 + H2
  qf[181] = sc[1] * sc[15];
  qr[181] = sc[0] * sc_qss[7];

  // reaction 182: C2H6 + O <=> C2H5 + OH
  qf[182] = sc[2] * sc[15];
  qr[182] = sc[4] * sc_qss[7];

  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  qf[183] = sc[4] * sc[15];
  qr[183] = sc[5] * sc_qss[7];

  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  qf[184] = sc[15] * sc_qss[2];
  qr[184] = sc[8] * sc_qss[7];

  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  qf[185] = sc[8] * sc[15];
  qr[185] = sc[9] * sc_qss[7];

  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  qf[186] = sc[1] * sc[19];
  qr[186] = sc[9] * sc_qss[5];

  // reaction 187: HO2 + aC3H5 <=> C3H6 + O2
  qf[187] = sc[6] * sc[19];
  qr[187] = sc[3] * sc[20];

  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[188] = sc[6] * sc[19];
  qr[188] = sc[4] * sc[12] * sc_qss[6];

  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  qf[189] = sc[19] * sc_qss[3];
  qr[189] = sc[10] * sc[20];

  // reaction 190: C3H6 + H <=> C2H4 + CH3
  qf[190] = sc[1] * sc[20];
  qr[190] = sc[8] * sc[14];

  // reaction 191: C3H6 + H <=> H2 + aC3H5
  qf[191] = sc[1] * sc[20];
  qr[191] = sc[0] * sc[19];

  // reaction 192: C3H6 + O <=> CH2CO + CH3 + H
  qf[192] = sc[2] * sc[20];
  qr[192] = sc[1] * sc[8] * sc[17];

  // reaction 193: C3H6 + O => C2H5 + HCO
  qf[193] = sc[2] * sc[20];
  qr[193] = 0.0;

  // reaction 194: C3H6 + O <=> OH + aC3H5
  qf[194] = sc[2] * sc[20];
  qr[194] = sc[4] * sc[19];

  // reaction 195: C3H6 + OH <=> H2O + aC3H5
  qf[195] = sc[4] * sc[20];
  qr[195] = sc[5] * sc[19];

  // reaction 196: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[196] = sc[6] * sc[20];
  qr[196] = sc[7] * sc[19];

  // reaction 197: C3H6 + CH3 <=> CH4 + aC3H5
  qf[197] = sc[8] * sc[20];
  qr[197] = sc[9] * sc[19];

  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  qf[198] = sc[1] * sc_qss[9];
  qr[198] = sc[8] * sc_qss[7];

  // reaction 199: H + nC3H7 <=> C3H6 + H2
  qf[199] = sc[1] * sc_qss[9];
  qr[199] = sc[0] * sc[20];

  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  qf[200] = sc[2] * sc_qss[9];
  qr[200] = sc[12] * sc_qss[7];

  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  qf[201] = sc[4] * sc_qss[9];
  qr[201] = sc[5] * sc[20];

  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  qf[202] = sc[3] * sc_qss[9];
  qr[202] = sc[6] * sc[20];

  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[203] = sc[6] * sc_qss[9];
  qr[203] = sc[4] * sc[12] * sc_qss[7];

  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  qf[204] = sc[8] * sc_qss[9];
  qr[204] = sc[9] * sc[20];

  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[205] = sc_qss[6] * sc_qss[7];
  qr[205] = sc[8] * sc[19];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 10; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  2 OH (+M) <=> H2O2 (+M)
  k_f = 74000000 * exp((-0.37) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2300000 * exp(-0.9 * tc[0] - (-855.468331868023) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC);
  // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC);
  // reaction 2:  CH + CO (+M) <=> HCCO (+M)
  k_f = 50000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - (974.227464997937) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-tc[1] * 0.00421940928270042) +
    0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC);
  // reaction 3:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC);
  // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC);
  // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-tc[1] * 0.00363636363636364) +
    0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC);
  // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC);
  // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f = 18000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - (2566.40499560407) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.3827) * exp(-tc[1] * 0.0764759865402264) +
    0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC);
  // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC);
  // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) * (refCinv);
  // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-tc[1] * 0.000585823081429408) +
    0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC);
  // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC);
  // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC);
  // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f = 100000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - (2365.11832928218) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.45) * exp(-tc[1] * 0.000112359550561798) +
    0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC);
  // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
  k_f = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - (50251.2162472593) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2655) * exp(-tc[1] * 0.00555555555555556) +
    0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) * (refCinv);
  // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - (3507.4201606589) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0247000000000001) * exp(-tc[1] * 0.00476190476190476) +
    0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC);
  // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC);
  // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[15];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC);
  // reaction 20:  C2H2 (+M) <=> H2CC (+M)
  k_f = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - (25009.8682904946) * invT);
  Corr = redP / (1. + redP);
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5]));
  // reaction 21:  2 H + M <=> H2 + M
  k_f = 1000000 * exp((-1) * tc[0]);
  Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] + (-1) * sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 22:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 23:  2 H + H2O <=> H2 + H2O
  k_f = 60000000 * exp((-1.25) * tc[0]);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 24:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 25:  H + OH + M <=> H2O + M
  k_f = 22000000000 * exp((-2) * tc[0]);
  Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] + sc[9] + (2) * sc[13] +
         (2) * sc[14] + (2) * sc[15];
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 26:  H + O + M <=> OH + M
  k_f = 500000 * exp((-1) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 27:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] + (0.75) * sc[10] +
         (2.6) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 28:  H + O2 + M <=> HO2 + M
  k_f = 2800000 * exp((-0.86) * tc[0]);
  Corr = mixture + (-1) * sc[3] + (-1) * sc[5] + (-0.25) * sc[10] +
         (0.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (0.5) * sc[15] +
         (-1) * sc[21];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 29:  H + O2 + O2 <=> HO2 + O2
  k_f = 300000000 * exp((-1.72) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 30:  H + O2 + H2O <=> HO2 + H2O
  k_f = 16520000 * exp((-0.76) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 31:  H + O2 + N2 <=> HO2 + N2
  k_f = 26000000 * exp((-1.24) * tc[0]);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 32:  CO + O + M <=> CO2 + M
  k_f = 602 * exp(-(1509.64999741416) * invT);
  Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
         (2.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC);
  // reaction 33:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) * (refCinv);
  // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
  k_f = 2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
  Corr = mixture;
  qf[34] *= Corr * k_f;
  qr[34] *= Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC);
  // reaction 35:  H + O2 <=> O + OH
  k_f = 83000000 * exp(-(7252.86180424342) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 36:  H2 + O <=> H + OH
  k_f = 0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 37:  H2 + OH <=> H + H2O
  k_f = 216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 38:  2 OH <=> H2O + O
  k_f = 0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 39:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6]));
  // reaction 40:  H + HO2 <=> H2 + O2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6]));
  // reaction 41:  H + HO2 <=> 2 OH
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6]));
  // reaction 42:  HO2 + O <=> O2 + OH
  k_f = 20000000;
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 43:  HO2 + OH <=> H2O + O2
  k_f = 46400000 * exp(-(-251.60833290236) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6]));
  // reaction 44:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 45:  2 HO2 <=> H2O2 + O2
  k_f = 420000000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 46:  H + H2O2 <=> H2 + HO2
  k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7]));
  // reaction 47:  H + H2O2 <=> H2O + OH
  k_f = 10000000 * exp(-(1811.57999689699) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 48:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 49:  H2O2 + OH <=> H2O + HO2
  k_f = 1750000 * exp(-(161.02933305751) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 50:  H2O2 + OH <=> H2O + HO2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 51:  CO + OH <=> CO2 + H
  k_f = 47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11]));
  // reaction 52:  CO + O2 <=> CO2 + O
  k_f = 2500000 * exp(-(24053.7566254656) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11]));
  // reaction 53:  CO + HO2 <=> CO2 + OH
  k_f = 150000000 * exp(-(11875.9133129914) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11]));
  // reaction 54:  CH + O <=> CO + H
  k_f = 57000000;
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0]));
  // reaction 55:  CH + OH <=> H + HCO
  k_f = 30000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 56:  CH + H2 <=> CH2 + H
  k_f = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1]));
  // reaction 57:  CH + H2O <=> CH2O + H
  k_f = 5710000 * exp(-(-379.928582682563) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0]));
  // reaction 58:  CH + O2 <=> HCO + O
  k_f = 33000000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 59:  CH + CO2 <=> CO + HCO
  k_f = 3400000 * exp(-(347.219499405257) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 60:  H + HCO <=> CO + H2
  k_f = 73400000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3]));
  // reaction 61:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3]));
  // reaction 62:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3]));
  // reaction 63:  HCO + OH <=> CO + H2O
  k_f = 50000000;
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3]));
  // reaction 64:  HCO + O2 <=> CO + HO2
  k_f = 7600000 * exp(-(201.286666321888) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3]));
  // reaction 65:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1]));
  // reaction 66:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 67:  CH2 + O2 <=> HCO + OH
  k_f = 10560000 * exp(-(754.82499870708) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 68:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f *
            exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
            (refCinv);
  // reaction 69:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1]));
  // reaction 70:  CH2 + OH <=> CH + H2O
  k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 71:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1]));
  // reaction 72:  CH + CH2 <=> C2H2 + H
  k_f = 40000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1]));
  // reaction 73:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1]));
  // reaction 74:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 75:  CH2* + H <=> CH + H2
  k_f = 30000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2]));
  // reaction 76:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2]));
  // reaction 77:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3]));
  // reaction 78:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2]));
  // reaction 79:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2]));
  // reaction 80:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[80] *= k_f;
  qr[80] *= k_f *
            exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
            (refCinv);
  // reaction 81:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2]));
  // reaction 82:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 83:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 84:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 85:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2]));
  // reaction 86:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3]));
  // reaction 87:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3]));
  // reaction 88:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3]));
  // reaction 89:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3]));
  // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3]));
  // reaction 91:  CH + CH2O <=> CH2CO + H
  k_f = 94600000 * exp(-(-259.156582889431) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0]));
  // reaction 92:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12]));
  // reaction 93:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1]));
  // reaction 94:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2]));
  // reaction 95:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4]));
  // reaction 96:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 97:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9]));
  // reaction 98:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4]));
  // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9]));
  // reaction 100:  CH + CH3 <=> C2H3 + H
  k_f = 30000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6]));
  // reaction 101:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3]));
  // reaction 102:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3]));
  // reaction 103:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1]));
  // reaction 104:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2]));
  // reaction 105:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7]));
  // reaction 106:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16]));
  // reaction 107:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4]));
  // reaction 108:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4]));
  // reaction 109:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4]));
  // reaction 110:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4]));
  // reaction 111:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4]));
  // reaction 112:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4]));
  // reaction 113:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9]));
  // reaction 114:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9]));
  // reaction 115:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 116:  CH + CH4 <=> C2H4 + H
  k_f = 60000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0]));
  // reaction 117:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1]));
  // reaction 118:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2]));
  // reaction 119:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2]));
  // reaction 120:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 121:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 122:  CH + HCCO <=> C2H2 + CO
  k_f = 50000000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0]));
  // reaction 123:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6]));
  // reaction 124:  2 HCCO <=> C2H2 + 2 CO
  k_f = 10000000;
  qf[124] *= k_f;
  qr[124] *= k_f *
             exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
             (refCinv);
  // reaction 125:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16]));
  // reaction 126:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1]));
  // reaction 127:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17]));
  // reaction 128:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13]));
  // reaction 129:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6]));
  // reaction 130:  H + H2CC <=> C2H2 + H
  k_f = 100000000;
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5]));
  // reaction 131:  H2CC + O <=> CH2 + CO
  k_f = 100000000;
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 132:  H2CC + OH <=> CH2CO + H
  k_f = 20000000;
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5]));
  // reaction 133:  H2CC + O2 <=> CH2 + CO2
  k_f = 10000000;
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 134:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17]));
  // reaction 135:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17]));
  // reaction 136:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17]));
  // reaction 137:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1]));
  // reaction 138:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17]));
  // reaction 139:  C2H3 + H <=> C2H2 + H2
  k_f = 30000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6]));
  // reaction 140:  C2H3 + H <=> H2 + H2CC
  k_f = 60000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 141:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6]));
  // reaction 142:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6]));
  // reaction 143:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6]));
  // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6]));
  // reaction 145:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 146:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6]));
  // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6]));
  // reaction 149:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6]));
  // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6]));
  // reaction 151:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6]));
  // reaction 152:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv);
  // reaction 153:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8]));
  // reaction 154:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8]));
  // reaction 155:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8]));
  // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8]));
  // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8]));
  // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[158] *= k_f;
  qr[158] *= k_f *
             exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
             (refCinv);
  // reaction 159:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6]));
  // reaction 160:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6]));
  // reaction 161:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3]));
  // reaction 162:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1]));
  // reaction 163:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6]));
  // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6]));
  // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
  k_f = 2000000 * exp(-(7045.03332126608) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18]));
  // reaction 166:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7]));
  // reaction 167:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1]));
  // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
  k_f = 50000000;
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5]));
  // reaction 169:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2]));
  // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6]));
  // reaction 171:  C2H4 + CH3 <=> nC3H7
  k_f = 330000 * exp(-(3874.76832669634) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC);
  // reaction 172:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7]));
  // reaction 173:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7]));
  // reaction 174:  C2H5 + O <=> CH3CHO + H
  k_f = 80200000;
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7]));
  // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7]));
  // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7]));
  // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7]));
  // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[178] *= k_f;
  qr[178] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
             (refCinv);
  // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7]));
  // reaction 180:  C2H5 + HCO <=> C2H6 + CO
  k_f = 120000000;
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7]));
  // reaction 181:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7]));
  // reaction 182:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7]));
  // reaction 183:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7]));
  // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7]));
  // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7]));
  // reaction 186:  H + aC3H5 <=> CH4 + H2CC
  k_f = 20000000 * exp(-(1006.43333160944) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5]));
  // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20]));
  // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[188] *= k_f;
  qr[188] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
             (refCinv);
  // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3]));
  // reaction 190:  C3H6 + H <=> C2H4 + CH3
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20]));
  // reaction 191:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20]));
  // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
             (refCinv);
  // reaction 193:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[2] + g_RT[20] - g_RT_qss[3] - g_RT_qss[7]));
  // reaction 194:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20]));
  // reaction 195:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20]));
  // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20]));
  // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20]));
  // reaction 198:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 199:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9]));
  // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9]));
  // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9]));
  // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[203] *= k_f;
  qr[203] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
             (refCinv);
  // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9]));
  // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142], qf_qss[142], qr_qss[142];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real* T, amrex::Real* C, amrex::Real* wdot)
{
  int id; // loop counter

  // convert to SI
  for (id = 0; id < 22; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, *T);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* wdot)
{
  int id;            // loop counter
  amrex::Real c[22]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;
  amrex::Real imw[22];

  get_imw(imw);

  // Compute inverse of mean molecular wt first
  YOW += y[0] * imw[0];   // H2
  YOW += y[1] * imw[1];   // H
  YOW += y[2] * imw[2];   // O
  YOW += y[3] * imw[3];   // O2
  YOW += y[4] * imw[4];   // OH
  YOW += y[5] * imw[5];   // H2O
  YOW += y[6] * imw[6];   // HO2
  YOW += y[7] * imw[7];   // H2O2
  YOW += y[8] * imw[8];   // CH3
  YOW += y[9] * imw[9];   // CH4
  YOW += y[10] * imw[10]; // CO
  YOW += y[11] * imw[11]; // CO2
  YOW += y[12] * imw[12]; // CH2O
  YOW += y[13] * imw[13]; // C2H2
  YOW += y[14] * imw[14]; // C2H4
  YOW += y[15] * imw[15]; // C2H6
  YOW += y[16] * imw[16]; // HCCO
  YOW += y[17] * imw[17]; // CH2CO
  YOW += y[18] * imw[18]; // CH3CHO
  YOW += y[19] * imw[19]; // aC3H5
  YOW += y[20] * imw[20]; // C3H6
  YOW += y[21] * imw[21]; // N2
  // PW/RT (see Eq. 7)
  PWORT = (*P) / (YOW * 8.31446261815324e+07 * (*T));
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  c[0] = PWORT * y[0] * imw[0];
  c[1] = PWORT * y[1] * imw[1];
  c[2] = PWORT * y[2] * imw[2];
  c[3] = PWORT * y[3] * imw[3];
  c[4] = PWORT * y[4] * imw[4];
  c[5] = PWORT * y[5] * imw[5];
  c[6] = PWORT * y[6] * imw[6];
  c[7] = PWORT * y[7] * imw[7];
  c[8] = PWORT * y[8] * imw[8];
  c[9] = PWORT * y[9] * imw[9];
  c[10] = PWORT * y[10] * imw[10];
  c[11] = PWORT * y[11] * imw[11];
  c[12] = PWORT * y[12] * imw[12];
  c[13] = PWORT * y[13] * imw[13];
  c[14] = PWORT * y[14] * imw[14];
  c[15] = PWORT * y[15] * imw[15];
  c[16] = PWORT * y[16] * imw[16];
  c[17] = PWORT * y[17] * imw[17];
  c[18] = PWORT * y[18] * imw[18];
  c[19] = PWORT * y[19] * imw[19];
  c[20] = PWORT * y[20] * imw[20];
  c[21] = PWORT * y[21] * imw[21];

  // convert to chemkin units
  productionRate(wdot, c, *T);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real* P,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* wdot)
{
  int id;            // loop counter
  amrex::Real c[22]; // temporary storage
  amrex::Real PORT =
    1e6 * (*P) /
    (8.31446261815324e+07 * (*T)); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, *T);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real* rho,
  const amrex::Real* T,
  const amrex::Real* y,
  amrex::Real* wdot)
{
  int id;            // loop counter
  amrex::Real c[22]; // temporary storage
  amrex::Real imw[22];

  get_imw(imw);

  // See Eq 8 with an extra 1e6 so c goes to SI
  c[0] = 1e6 * (*rho) * y[0] * imw[0];
  c[1] = 1e6 * (*rho) * y[1] * imw[1];
  c[2] = 1e6 * (*rho) * y[2] * imw[2];
  c[3] = 1e6 * (*rho) * y[3] * imw[3];
  c[4] = 1e6 * (*rho) * y[4] * imw[4];
  c[5] = 1e6 * (*rho) * y[5] * imw[5];
  c[6] = 1e6 * (*rho) * y[6] * imw[6];
  c[7] = 1e6 * (*rho) * y[7] * imw[7];
  c[8] = 1e6 * (*rho) * y[8] * imw[8];
  c[9] = 1e6 * (*rho) * y[9] * imw[9];
  c[10] = 1e6 * (*rho) * y[10] * imw[10];
  c[11] = 1e6 * (*rho) * y[11] * imw[11];
  c[12] = 1e6 * (*rho) * y[12] * imw[12];
  c[13] = 1e6 * (*rho) * y[13] * imw[13];
  c[14] = 1e6 * (*rho) * y[14] * imw[14];
  c[15] = 1e6 * (*rho) * y[15] * imw[15];
  c[16] = 1e6 * (*rho) * y[16] * imw[16];
  c[17] = 1e6 * (*rho) * y[17] * imw[17];
  c[18] = 1e6 * (*rho) * y[18] * imw[18];
  c[19] = 1e6 * (*rho) * y[19] * imw[19];
  c[20] = 1e6 * (*rho) * y[20] * imw[20];
  c[21] = 1e6 * (*rho) * y[21] * imw[21];

  // call productionRate
  productionRate(wdot, c, *T);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real* rho,
  const amrex::Real* T,
  const amrex::Real* x,
  amrex::Real* wdot)
{
  int id;             // loop counter
  amrex::Real c[22];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * (*rho) / XW;

  // Compute conversion, see Eq 11
  for (id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, *T);

  // convert to chemkin units
  for (id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int* kcharge)
{
  kcharge[0] = 0;  // H2
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // O2
  kcharge[4] = 0;  // OH
  kcharge[5] = 0;  // H2O
  kcharge[6] = 0;  // HO2
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // CH3
  kcharge[9] = 0;  // CH4
  kcharge[10] = 0; // CO
  kcharge[11] = 0; // CO2
  kcharge[12] = 0; // CH2O
  kcharge[13] = 0; // C2H2
  kcharge[14] = 0; // C2H4
  kcharge[15] = 0; // C2H6
  kcharge[16] = 0; // HCCO
  kcharge[17] = 0; // CH2CO
  kcharge[18] = 0; // CH3CHO
  kcharge[19] = 0; // aC3H5
  kcharge[20] = 0; // C3H6
  kcharge[21] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real* zk)
{
  amrex::Real imw[22];
  get_imw(imw);

  int kchrg[22];
  CKCHRG(kchrg);

  for (int id = 0; id < 22; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw[id];
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 3: O2
    species[3] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 4: OH
    species[4] = -2.40131752e-03 + 9.23587682e-06 * tc[1] -
                 1.16434000e-08 * tc[2] + 5.45645880e-12 * tc[3];
    // species 5: H2O
    species[5] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 6: HO2
    species[6] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 8: CH3
    species[8] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                 2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 9: CH4
    species[9] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                 1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 10: CO
    species[10] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 11: CO2
    species[11] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 12: CH2O
    species[12] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 13: C2H2
    species[13] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 14: C2H4
    species[14] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 15: C2H6
    species[15] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 16: HCCO
    species[16] = +1.76550210e-02 - 4.74582020e-05 * tc[1] +
                  5.18272770e-08 * tc[2] - 2.02659244e-11 * tc[3];
    // species 17: CH2CO
    species[17] = +1.81188721e-02 - 3.47894948e-05 * tc[1] +
                  2.80319270e-08 * tc[2] - 8.05830460e-12 * tc[3];
    // species 18: CH3CHO
    species[18] = -3.19328580e-03 + 9.50698420e-05 * tc[1] -
                  1.72375833e-07 * tc[2] + 8.77244480e-11 * tc[3];
    // species 19: aC3H5
    species[19] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 20: C3H6
    species[20] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 21: N2
    species[21] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
  } else {
    // species 0: H2
    species[0] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 3: O2
    species[3] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 4: OH
    species[4] = +5.48429716e-04 + 2.53010456e-07 * tc[1] -
                 2.63838467e-10 * tc[2] + 4.69649504e-14 * tc[3];
    // species 5: H2O
    species[5] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 6: HO2
    species[6] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 8: CH3
    species[8] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                 1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 9: CH4
    species[9] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                 3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 10: CO
    species[10] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 11: CO2
    species[11] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 12: CH2O
    species[12] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 13: C2H2
    species[13] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 14: C2H4
    species[14] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 15: C2H6
    species[15] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 16: HCCO
    species[16] = +4.08534010e-03 - 3.18690940e-06 * tc[1] +
                  8.58781560e-10 * tc[2] - 7.76313280e-14 * tc[3];
    // species 17: CH2CO
    species[17] = +9.00359745e-03 - 8.33879270e-06 * tc[1] +
                  2.77003765e-09 * tc[2] - 3.17935280e-13 * tc[3];
    // species 18: CH3CHO
    species[18] = +1.17230590e-02 - 8.45262740e-06 * tc[1] +
                  2.05117353e-09 * tc[2] - 1.63939452e-13 * tc[3];
    // species 19: aC3H5
    species[19] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 20: C3H6
    species[20] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 21: N2
    species[21] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                  3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 90;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 9966;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 22;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.01600000E+00;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 3.30060000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 1.50350000E+01;
  WT[9] = 1.60430000E+01;
  WT[10] = 2.80100000E+01;
  WT[11] = 4.40090000E+01;
  WT[12] = 3.00260000E+01;
  WT[13] = 2.60380000E+01;
  WT[14] = 2.80540000E+01;
  WT[15] = 3.00700000E+01;
  WT[16] = 4.10290000E+01;
  WT[17] = 4.20370000E+01;
  WT[18] = 4.40530000E+01;
  WT[19] = 4.10730000E+01;
  WT[20] = 4.20810000E+01;
  WT[21] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 3.80000000E+01;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 1.07400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.44000000E+02;
  EPS[9] = 1.41400000E+02;
  EPS[10] = 9.81000000E+01;
  EPS[11] = 2.44000000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 2.09000000E+02;
  EPS[14] = 2.80800000E+02;
  EPS[15] = 2.52300000E+02;
  EPS[16] = 1.50000000E+02;
  EPS[17] = 4.36000000E+02;
  EPS[18] = 4.36000000E+02;
  EPS[19] = 2.66800000E+02;
  EPS[20] = 2.66800000E+02;
  EPS[21] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.92000000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.45800000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.80000000E+00;
  SIG[9] = 3.74600000E+00;
  SIG[10] = 3.65000000E+00;
  SIG[11] = 3.76300000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 4.10000000E+00;
  SIG[14] = 3.97100000E+00;
  SIG[15] = 4.30200000E+00;
  SIG[16] = 2.50000000E+00;
  SIG[17] = 3.97000000E+00;
  SIG[18] = 3.97000000E+00;
  SIG[19] = 4.98200000E+00;
  SIG[20] = 4.98200000E+00;
  SIG[21] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 7.90000000E-01;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 2.60000000E+00;
  POL[10] = 1.95000000E+00;
  POL[11] = 2.65000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 2.80000000E+02;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 0.00000000E+00;
  ZROT[9] = 1.30000000E+01;
  ZROT[10] = 1.80000000E+00;
  ZROT[11] = 2.10000000E+00;
  ZROT[12] = 2.00000000E+00;
  ZROT[13] = 2.50000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.00000000E+00;
  ZROT[17] = 2.00000000E+00;
  ZROT[18] = 2.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 1;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.38347555E+01;
  COFETA[1] = 1.00106621E+00;
  COFETA[2] = -4.98105694E-02;
  COFETA[3] = 2.31450475E-03;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.71618439E+01;
  COFETA[13] = 2.68036374E+00;
  COFETA[14] = -2.72570227E-01;
  COFETA[15] = 1.21650964E-02;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.05420930E+01;
  COFETA[21] = -1.37777266E+00;
  COFETA[22] = 4.20502561E-01;
  COFETA[23] = -2.40627344E-02;
  COFETA[24] = -1.71463359E+01;
  COFETA[25] = 2.68036374E+00;
  COFETA[26] = -2.72570227E-01;
  COFETA[27] = 1.21650964E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -2.02316522E+01;
  COFETA[33] = 3.63241793E+00;
  COFETA[34] = -3.95581049E-01;
  COFETA[35] = 1.74725495E-02;
  COFETA[36] = -2.00094678E+01;
  COFETA[37] = 3.57220167E+00;
  COFETA[38] = -3.87936446E-01;
  COFETA[39] = 1.71483254E-02;
  COFETA[40] = -1.66188439E+01;
  COFETA[41] = 2.40307799E+00;
  COFETA[42] = -2.36167638E-01;
  COFETA[43] = 1.05714061E-02;
  COFETA[44] = -2.40015087E+01;
  COFETA[45] = 5.14359547E+00;
  COFETA[46] = -5.74269731E-01;
  COFETA[47] = 2.44937679E-02;
  COFETA[48] = -1.98330663E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -2.33666497E+01;
  COFETA[53] = 4.80350223E+00;
  COFETA[54] = -5.38341336E-01;
  COFETA[55] = 2.32747213E-02;
  COFETA[56] = -2.50655480E+01;
  COFETA[57] = 5.33982977E+00;
  COFETA[58] = -5.89982992E-01;
  COFETA[59] = 2.47780650E-02;
  COFETA[60] = -2.46410962E+01;
  COFETA[61] = 5.19497183E+00;
  COFETA[62] = -5.78827339E-01;
  COFETA[63] = 2.46050921E-02;
  COFETA[64] = -1.92183918E+01;
  COFETA[65] = 3.75164499E+00;
  COFETA[66] = -4.10390993E-01;
  COFETA[67] = 1.80861665E-02;
  COFETA[68] = -2.23395728E+01;
  COFETA[69] = 3.86433912E+00;
  COFETA[70] = -3.41553983E-01;
  COFETA[71] = 1.17083447E-02;
  COFETA[72] = -2.23161511E+01;
  COFETA[73] = 3.86433912E+00;
  COFETA[74] = -3.41553983E-01;
  COFETA[75] = 1.17083447E-02;
  COFETA[76] = -2.51527894E+01;
  COFETA[77] = 5.30723075E+00;
  COFETA[78] = -5.89742369E-01;
  COFETA[79] = 2.49294033E-02;
  COFETA[80] = -2.51406667E+01;
  COFETA[81] = 5.30723075E+00;
  COFETA[82] = -5.89742369E-01;
  COFETA[83] = 2.49294033E-02;
  COFETA[84] = -1.65695492E+01;
  COFETA[85] = 2.39056562E+00;
  COFETA[86] = -2.34558144E-01;
  COFETA[87] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 9.24082480E+00;
  COFLAM[1] = -4.69567526E-01;
  COFLAM[2] = 1.15980102E-01;
  COFLAM[3] = -2.61033156E-03;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = -1.93717634E+00;
  COFLAM[13] = 2.89110257E+00;
  COFLAM[14] = -2.71096988E-01;
  COFLAM[15] = 1.15344939E-02;
  COFLAM[16] = 1.41666231E+01;
  COFLAM[17] = -3.24630273E+00;
  COFLAM[18] = 5.33877875E-01;
  COFLAM[19] = -2.32905027E-02;
  COFLAM[20] = 2.33729836E+01;
  COFLAM[21] = -8.96536178E+00;
  COFLAM[22] = 1.52828630E+00;
  COFLAM[23] = -7.58551616E-02;
  COFLAM[24] = -1.12959874E+00;
  COFLAM[25] = 2.34014328E+00;
  COFLAM[26] = -1.63245076E-01;
  COFLAM[27] = 5.80319843E-03;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = 1.39937895E+01;
  COFLAM[33] = -4.64256403E+00;
  COFLAM[34] = 9.07728510E-01;
  COFLAM[35] = -4.77274380E-02;
  COFLAM[36] = 1.33091614E+01;
  COFLAM[37] = -4.96140250E+00;
  COFLAM[38] = 1.03295495E+00;
  COFLAM[39] = -5.63420011E-02;
  COFLAM[40] = 1.18777275E+01;
  COFLAM[41] = -3.15463597E+00;
  COFLAM[42] = 6.01972754E-01;
  COFLAM[43] = -3.03211015E-02;
  COFLAM[44] = -1.13649201E+01;
  COFLAM[45] = 5.88177354E+00;
  COFLAM[46] = -5.68651792E-01;
  COFLAM[47] = 2.03561484E-02;
  COFLAM[48] = 5.39305623E+00;
  COFLAM[49] = -2.39312259E+00;
  COFLAM[50] = 7.39585006E-01;
  COFLAM[51] = -4.58435469E-02;
  COFLAM[52] = -7.70164041E+00;
  COFLAM[53] = 4.56884430E+00;
  COFLAM[54] = -4.04747578E-01;
  COFLAM[55] = 1.40841066E-02;
  COFLAM[56] = -1.46152767E+01;
  COFLAM[57] = 6.36251222E+00;
  COFLAM[58] = -5.03831917E-01;
  COFLAM[59] = 1.26120967E-02;
  COFLAM[60] = -1.09902158E+01;
  COFLAM[61] = 4.70647555E+00;
  COFLAM[62] = -2.52272322E-01;
  COFLAM[63] = 1.75186734E-04;
  COFLAM[64] = -5.96382011E+00;
  COFLAM[65] = 4.39355990E+00;
  COFLAM[66] = -3.97598235E-01;
  COFLAM[67] = 1.39749618E-02;
  COFLAM[68] = -8.32870491E+00;
  COFLAM[69] = 3.97067241E+00;
  COFLAM[70] = -2.21252281E-01;
  COFLAM[71] = 1.47870386E-03;
  COFLAM[72] = -9.88396235E+00;
  COFLAM[73] = 4.13890943E+00;
  COFLAM[74] = -1.74918796E-01;
  COFLAM[75] = -3.28392968E-03;
  COFLAM[76] = -2.14189910E+01;
  COFLAM[77] = 9.40840962E+00;
  COFLAM[78] = -9.66247319E-01;
  COFLAM[79] = 3.55085303E-02;
  COFLAM[80] = -1.70514626E+01;
  COFLAM[81] = 7.35906672E+00;
  COFLAM[82] = -6.52820712E-01;
  COFLAM[83] = 1.99982085E-02;
  COFLAM[84] = 1.29305954E+01;
  COFLAM[85] = -3.52816965E+00;
  COFLAM[86] = 6.45498434E-01;
  COFLAM[87] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.03270769E+01;
  COFD[1] = 2.19285409E+00;
  COFD[2] = -7.54492786E-02;
  COFD[3] = 3.51398213E-03;
  COFD[4] = -1.14366544E+01;
  COFD[5] = 2.78323501E+00;
  COFD[6] = -1.51214064E-01;
  COFD[7] = 6.75150012E-03;
  COFD[8] = -1.09595844E+01;
  COFD[9] = 2.30836460E+00;
  COFD[10] = -8.76339315E-02;
  COFD[11] = 3.90878445E-03;
  COFD[12] = -1.18989101E+01;
  COFD[13] = 2.57507000E+00;
  COFD[14] = -1.24033737E-01;
  COFD[15] = 5.56694959E-03;
  COFD[16] = -1.09629118E+01;
  COFD[17] = 2.30836460E+00;
  COFD[18] = -8.76339315E-02;
  COFD[19] = 3.90878445E-03;
  COFD[20] = -1.71983144E+01;
  COFD[21] = 4.63881440E+00;
  COFD[22] = -3.86139677E-01;
  COFD[23] = 1.66955099E-02;
  COFD[24] = -1.18998160E+01;
  COFD[25] = 2.57507000E+00;
  COFD[26] = -1.24033737E-01;
  COFD[27] = 5.56694959E-03;
  COFD[28] = -1.19006697E+01;
  COFD[29] = 2.57507000E+00;
  COFD[30] = -1.24033737E-01;
  COFD[31] = 5.56694959E-03;
  COFD[32] = -1.25141403E+01;
  COFD[33] = 2.77873601E+00;
  COFD[34] = -1.50637360E-01;
  COFD[35] = 6.72684281E-03;
  COFD[36] = -1.24693714E+01;
  COFD[37] = 2.76686648E+00;
  COFD[38] = -1.49120141E-01;
  COFD[39] = 6.66220432E-03;
  COFD[40] = -1.17159884E+01;
  COFD[41] = 2.48123210E+00;
  COFD[42] = -1.11322604E-01;
  COFD[43] = 4.99282389E-03;
  COFD[44] = -1.37794466E+01;
  COFD[45] = 3.23973858E+00;
  COFD[46] = -2.09989036E-01;
  COFD[47] = 9.27667906E-03;
  COFD[48] = -1.60528433E+01;
  COFD[49] = 4.11188603E+00;
  COFD[50] = -3.21540884E-01;
  COFD[51] = 1.40482564E-02;
  COFD[52] = -1.34709956E+01;
  COFD[53] = 3.09379603E+00;
  COFD[54] = -1.91268635E-01;
  COFD[55] = 8.47480224E-03;
  COFD[56] = -1.42229344E+01;
  COFD[57] = 3.38669384E+00;
  COFD[58] = -2.28784122E-01;
  COFD[59] = 1.00790953E-02;
  COFD[60] = -1.39924933E+01;
  COFD[61] = 3.26384506E+00;
  COFD[62] = -2.12947087E-01;
  COFD[63] = 9.39743888E-03;
  COFD[64] = -1.22004476E+01;
  COFD[65] = 2.80725489E+00;
  COFD[66] = -1.54291406E-01;
  COFD[67] = 6.88290911E-03;
  COFD[68] = -1.57035004E+01;
  COFD[69] = 3.93614244E+00;
  COFD[70] = -2.99111497E-01;
  COFD[71] = 1.30888229E-02;
  COFD[72] = -1.57045486E+01;
  COFD[73] = 3.93614244E+00;
  COFD[74] = -2.99111497E-01;
  COFD[75] = 1.30888229E-02;
  COFD[76] = -1.43129867E+01;
  COFD[77] = 3.31177824E+00;
  COFD[78] = -2.18945280E-01;
  COFD[79] = 9.64764419E-03;
  COFD[80] = -1.43135474E+01;
  COFD[81] = 3.31177824E+00;
  COFD[82] = -2.18945280E-01;
  COFD[83] = 9.64764419E-03;
  COFD[84] = -1.16906458E+01;
  COFD[85] = 2.47469981E+00;
  COFD[86] = -1.10436257E-01;
  COFD[87] = 4.95273813E-03;
  COFD[88] = -1.14366544E+01;
  COFD[89] = 2.78323501E+00;
  COFD[90] = -1.51214064E-01;
  COFD[91] = 6.75150012E-03;
  COFD[92] = -1.47968875E+01;
  COFD[93] = 4.23027636E+00;
  COFD[94] = -3.36139991E-01;
  COFD[95] = 1.46507621E-02;
  COFD[96] = -1.34230419E+01;
  COFD[97] = 3.48624238E+00;
  COFD[98] = -2.41554467E-01;
  COFD[99] = 1.06263545E-02;
  COFD[100] = -1.46550238E+01;
  COFD[101] = 3.83606243E+00;
  COFD[102] = -2.86076532E-01;
  COFD[103] = 1.25205829E-02;
  COFD[104] = -1.34248014E+01;
  COFD[105] = 3.48624238E+00;
  COFD[106] = -2.41554467E-01;
  COFD[107] = 1.06263545E-02;
  COFD[108] = -1.95739720E+01;
  COFD[109] = 5.61113230E+00;
  COFD[110] = -4.90190187E-01;
  COFD[111] = 2.03260675E-02;
  COFD[112] = -1.46554904E+01;
  COFD[113] = 3.83606243E+00;
  COFD[114] = -2.86076532E-01;
  COFD[115] = 1.25205829E-02;
  COFD[116] = -1.46559297E+01;
  COFD[117] = 3.83606243E+00;
  COFD[118] = -2.86076532E-01;
  COFD[119] = 1.25205829E-02;
  COFD[120] = -1.57995045E+01;
  COFD[121] = 4.22225052E+00;
  COFD[122] = -3.35156428E-01;
  COFD[123] = 1.46104855E-02;
  COFD[124] = -1.57199190E+01;
  COFD[125] = 4.19936335E+00;
  COFD[126] = -3.32311009E-01;
  COFD[127] = 1.44921003E-02;
  COFD[128] = -1.43151328E+01;
  COFD[129] = 3.68038508E+00;
  COFD[130] = -2.65779346E-01;
  COFD[131] = 1.16360771E-02;
  COFD[132] = -1.76147183E+01;
  COFD[133] = 4.86049500E+00;
  COFD[134] = -4.12200578E-01;
  COFD[135] = 1.77160971E-02;
  COFD[136] = -1.97550243E+01;
  COFD[137] = 5.56931926E+00;
  COFD[138] = -4.89105511E-01;
  COFD[139] = 2.04493129E-02;
  COFD[140] = -1.72232379E+01;
  COFD[141] = 4.69060745E+00;
  COFD[142] = -3.92369888E-01;
  COFD[143] = 1.69459661E-02;
  COFD[144] = -1.82252070E+01;
  COFD[145] = 5.05237312E+00;
  COFD[146] = -4.35182396E-01;
  COFD[147] = 1.86363074E-02;
  COFD[148] = -1.79345106E+01;
  COFD[149] = 4.91373893E+00;
  COFD[150] = -4.18747629E-01;
  COFD[151] = 1.79856610E-02;
  COFD[152] = -1.54460977E+01;
  COFD[153] = 4.26819983E+00;
  COFD[154] = -3.40766379E-01;
  COFD[155] = 1.48393361E-02;
  COFD[156] = -1.94688845E+01;
  COFD[157] = 5.43830787E+00;
  COFD[158] = -4.75472880E-01;
  COFD[159] = 1.99909996E-02;
  COFD[160] = -1.94694206E+01;
  COFD[161] = 5.43830787E+00;
  COFD[162] = -4.75472880E-01;
  COFD[163] = 1.99909996E-02;
  COFD[164] = -1.83539845E+01;
  COFD[165] = 4.98756925E+00;
  COFD[166] = -4.27526072E-01;
  COFD[167] = 1.83341755E-02;
  COFD[168] = -1.83542714E+01;
  COFD[169] = 4.98756925E+00;
  COFD[170] = -4.27526072E-01;
  COFD[171] = 1.83341755E-02;
  COFD[172] = -1.42894603E+01;
  COFD[173] = 3.67490723E+00;
  COFD[174] = -2.65114792E-01;
  COFD[175] = 1.16092671E-02;
  COFD[176] = -1.09595844E+01;
  COFD[177] = 2.30836460E+00;
  COFD[178] = -8.76339315E-02;
  COFD[179] = 3.90878445E-03;
  COFD[180] = -1.34230419E+01;
  COFD[181] = 3.48624238E+00;
  COFD[182] = -2.41554467E-01;
  COFD[183] = 1.06263545E-02;
  COFD[184] = -1.32093517E+01;
  COFD[185] = 2.90778936E+00;
  COFD[186] = -1.67388544E-01;
  COFD[187] = 7.45220609E-03;
  COFD[188] = -1.43139120E+01;
  COFD[189] = 3.17651319E+00;
  COFD[190] = -2.02028974E-01;
  COFD[191] = 8.94232502E-03;
  COFD[192] = -1.32243932E+01;
  COFD[193] = 2.90778936E+00;
  COFD[194] = -1.67388544E-01;
  COFD[195] = 7.45220609E-03;
  COFD[196] = -1.94093476E+01;
  COFD[197] = 5.16013126E+00;
  COFD[198] = -4.46824543E-01;
  COFD[199] = 1.90464887E-02;
  COFD[200] = -1.43190281E+01;
  COFD[201] = 3.17651319E+00;
  COFD[202] = -2.02028974E-01;
  COFD[203] = 8.94232502E-03;
  COFD[204] = -1.43238892E+01;
  COFD[205] = 3.17651319E+00;
  COFD[206] = -2.02028974E-01;
  COFD[207] = 8.94232502E-03;
  COFD[208] = -1.50766073E+01;
  COFD[209] = 3.47945612E+00;
  COFD[210] = -2.40703722E-01;
  COFD[211] = 1.05907441E-02;
  COFD[212] = -1.50270285E+01;
  COFD[213] = 3.46140064E+00;
  COFD[214] = -2.38440092E-01;
  COFD[215] = 1.04960087E-02;
  COFD[216] = -1.40998907E+01;
  COFD[217] = 3.08120012E+00;
  COFD[218] = -1.89629903E-01;
  COFD[219] = 8.40361952E-03;
  COFD[220] = -1.70534750E+01;
  COFD[221] = 4.14240922E+00;
  COFD[222] = -3.25239774E-01;
  COFD[223] = 1.41980687E-02;
  COFD[224] = -1.94373032E+01;
  COFD[225] = 5.02567894E+00;
  COFD[226] = -4.32045169E-01;
  COFD[227] = 1.85132214E-02;
  COFD[228] = -1.65488277E+01;
  COFD[229] = 3.95035840E+00;
  COFD[230] = -3.00959418E-01;
  COFD[231] = 1.31692593E-02;
  COFD[232] = -1.74792034E+01;
  COFD[233] = 4.29676909E+00;
  COFD[234] = -3.44085306E-01;
  COFD[235] = 1.49671135E-02;
  COFD[236] = -1.72556425E+01;
  COFD[237] = 4.17889917E+00;
  COFD[238] = -3.29752510E-01;
  COFD[239] = 1.43850275E-02;
  COFD[240] = -1.49500258E+01;
  COFD[241] = 3.52327209E+00;
  COFD[242] = -2.46286208E-01;
  COFD[243] = 1.08285963E-02;
  COFD[244] = -1.90883170E+01;
  COFD[245] = 4.84384483E+00;
  COFD[246] = -4.10265575E-01;
  COFD[247] = 1.76414287E-02;
  COFD[248] = -1.90946650E+01;
  COFD[249] = 4.84384483E+00;
  COFD[250] = -4.10265575E-01;
  COFD[251] = 1.76414287E-02;
  COFD[252] = -1.76774947E+01;
  COFD[253] = 4.24719726E+00;
  COFD[254] = -3.38206061E-01;
  COFD[255] = 1.47350654E-02;
  COFD[256] = -1.76808635E+01;
  COFD[257] = 4.24719726E+00;
  COFD[258] = -3.38206061E-01;
  COFD[259] = 1.47350654E-02;
  COFD[260] = -1.40756909E+01;
  COFD[261] = 3.07549274E+00;
  COFD[262] = -1.88889344E-01;
  COFD[263] = 8.37152866E-03;
  COFD[264] = -1.18989101E+01;
  COFD[265] = 2.57507000E+00;
  COFD[266] = -1.24033737E-01;
  COFD[267] = 5.56694959E-03;
  COFD[268] = -1.46550238E+01;
  COFD[269] = 3.83606243E+00;
  COFD[270] = -2.86076532E-01;
  COFD[271] = 1.25205829E-02;
  COFD[272] = -1.43139120E+01;
  COFD[273] = 3.17651319E+00;
  COFD[274] = -2.02028974E-01;
  COFD[275] = 8.94232502E-03;
  COFD[276] = -1.55511233E+01;
  COFD[277] = 3.48070094E+00;
  COFD[278] = -2.40859499E-01;
  COFD[279] = 1.05972514E-02;
  COFD[280] = -1.43340695E+01;
  COFD[281] = 3.17651319E+00;
  COFD[282] = -2.02028974E-01;
  COFD[283] = 8.94232502E-03;
  COFD[284] = -2.12652444E+01;
  COFD[285] = 5.59961822E+00;
  COFD[286] = -4.91624856E-01;
  COFD[287] = 2.05035546E-02;
  COFD[288] = -1.55588172E+01;
  COFD[289] = 3.48070094E+00;
  COFD[290] = -2.40859499E-01;
  COFD[291] = 1.05972514E-02;
  COFD[292] = -1.55661647E+01;
  COFD[293] = 3.48070094E+00;
  COFD[294] = -2.40859499E-01;
  COFD[295] = 1.05972514E-02;
  COFD[296] = -1.63493305E+01;
  COFD[297] = 3.82388595E+00;
  COFD[298] = -2.84480724E-01;
  COFD[299] = 1.24506311E-02;
  COFD[300] = -1.62724429E+01;
  COFD[301] = 3.79163564E+00;
  COFD[302] = -2.80257365E-01;
  COFD[303] = 1.22656902E-02;
  COFD[304] = -1.52721010E+01;
  COFD[305] = 3.36790500E+00;
  COFD[306] = -2.26321740E-01;
  COFD[307] = 9.97135055E-03;
  COFD[308] = -1.84688303E+01;
  COFD[309] = 4.49330851E+00;
  COFD[310] = -3.68208715E-01;
  COFD[311] = 1.59565402E-02;
  COFD[312] = -2.08293167E+01;
  COFD[313] = 5.35267674E+00;
  COFD[314] = -4.69010505E-01;
  COFD[315] = 1.98979152E-02;
  COFD[316] = -1.78834868E+01;
  COFD[317] = 4.29613154E+00;
  COFD[318] = -3.44012526E-01;
  COFD[319] = 1.49643715E-02;
  COFD[320] = -1.89544717E+01;
  COFD[321] = 4.68595732E+00;
  COFD[322] = -3.91842840E-01;
  COFD[323] = 1.69262542E-02;
  COFD[324] = -1.86424488E+01;
  COFD[325] = 4.53572533E+00;
  COFD[326] = -3.73386925E-01;
  COFD[327] = 1.61678881E-02;
  COFD[328] = -1.64169341E+01;
  COFD[329] = 3.89309916E+00;
  COFD[330] = -2.93528188E-01;
  COFD[331] = 1.28463177E-02;
  COFD[332] = -2.05184780E+01;
  COFD[333] = 5.18417470E+00;
  COFD[334] = -4.49491573E-01;
  COFD[335] = 1.91438508E-02;
  COFD[336] = -2.05284666E+01;
  COFD[337] = 5.18417470E+00;
  COFD[338] = -4.49491573E-01;
  COFD[339] = 1.91438508E-02;
  COFD[340] = -1.91121670E+01;
  COFD[341] = 4.61801405E+00;
  COFD[342] = -3.83535652E-01;
  COFD[343] = 1.65862513E-02;
  COFD[344] = -1.91174394E+01;
  COFD[345] = 4.61801405E+00;
  COFD[346] = -3.83535652E-01;
  COFD[347] = 1.65862513E-02;
  COFD[348] = -1.52414498E+01;
  COFD[349] = 3.35922578E+00;
  COFD[350] = -2.25181399E-01;
  COFD[351] = 9.92132878E-03;
  COFD[352] = -1.09629118E+01;
  COFD[353] = 2.30836460E+00;
  COFD[354] = -8.76339315E-02;
  COFD[355] = 3.90878445E-03;
  COFD[356] = -1.34248014E+01;
  COFD[357] = 3.48624238E+00;
  COFD[358] = -2.41554467E-01;
  COFD[359] = 1.06263545E-02;
  COFD[360] = -1.32243932E+01;
  COFD[361] = 2.90778936E+00;
  COFD[362] = -1.67388544E-01;
  COFD[363] = 7.45220609E-03;
  COFD[364] = -1.43340695E+01;
  COFD[365] = 3.17651319E+00;
  COFD[366] = -2.02028974E-01;
  COFD[367] = 8.94232502E-03;
  COFD[368] = -1.32399011E+01;
  COFD[369] = 2.90778936E+00;
  COFD[370] = -1.67388544E-01;
  COFD[371] = 7.45220609E-03;
  COFD[372] = -1.94252948E+01;
  COFD[373] = 5.16013126E+00;
  COFD[374] = -4.46824543E-01;
  COFD[375] = 1.90464887E-02;
  COFD[376] = -1.43393972E+01;
  COFD[377] = 3.17651319E+00;
  COFD[378] = -2.02028974E-01;
  COFD[379] = 8.94232502E-03;
  COFD[380] = -1.43444614E+01;
  COFD[381] = 3.17651319E+00;
  COFD[382] = -2.02028974E-01;
  COFD[383] = 8.94232502E-03;
  COFD[384] = -1.50911746E+01;
  COFD[385] = 3.47945612E+00;
  COFD[386] = -2.40703722E-01;
  COFD[387] = 1.05907441E-02;
  COFD[388] = -1.50420909E+01;
  COFD[389] = 3.46140064E+00;
  COFD[390] = -2.38440092E-01;
  COFD[391] = 1.04960087E-02;
  COFD[392] = -1.41191170E+01;
  COFD[393] = 3.08120012E+00;
  COFD[394] = -1.89629903E-01;
  COFD[395] = 8.40361952E-03;
  COFD[396] = -1.70756953E+01;
  COFD[397] = 4.14240922E+00;
  COFD[398] = -3.25239774E-01;
  COFD[399] = 1.41980687E-02;
  COFD[400] = -1.94570202E+01;
  COFD[401] = 5.02567894E+00;
  COFD[402] = -4.32045169E-01;
  COFD[403] = 1.85132214E-02;
  COFD[404] = -1.65675292E+01;
  COFD[405] = 3.95035840E+00;
  COFD[406] = -3.00959418E-01;
  COFD[407] = 1.31692593E-02;
  COFD[408] = -1.74984410E+01;
  COFD[409] = 4.29676909E+00;
  COFD[410] = -3.44085306E-01;
  COFD[411] = 1.49671135E-02;
  COFD[412] = -1.72753698E+01;
  COFD[413] = 4.17889917E+00;
  COFD[414] = -3.29752510E-01;
  COFD[415] = 1.43850275E-02;
  COFD[416] = -1.49718147E+01;
  COFD[417] = 3.52327209E+00;
  COFD[418] = -2.46286208E-01;
  COFD[419] = 1.08285963E-02;
  COFD[420] = -1.91102567E+01;
  COFD[421] = 4.84384483E+00;
  COFD[422] = -4.10265575E-01;
  COFD[423] = 1.76414287E-02;
  COFD[424] = -1.91168913E+01;
  COFD[425] = 4.84384483E+00;
  COFD[426] = -4.10265575E-01;
  COFD[427] = 1.76414287E-02;
  COFD[428] = -1.76992903E+01;
  COFD[429] = 4.24719726E+00;
  COFD[430] = -3.38206061E-01;
  COFD[431] = 1.47350654E-02;
  COFD[432] = -1.77028097E+01;
  COFD[433] = 4.24719726E+00;
  COFD[434] = -3.38206061E-01;
  COFD[435] = 1.47350654E-02;
  COFD[436] = -1.40949183E+01;
  COFD[437] = 3.07549274E+00;
  COFD[438] = -1.88889344E-01;
  COFD[439] = 8.37152866E-03;
  COFD[440] = -1.71983144E+01;
  COFD[441] = 4.63881440E+00;
  COFD[442] = -3.86139677E-01;
  COFD[443] = 1.66955099E-02;
  COFD[444] = -1.95739720E+01;
  COFD[445] = 5.61113230E+00;
  COFD[446] = -4.90190187E-01;
  COFD[447] = 2.03260675E-02;
  COFD[448] = -1.94093476E+01;
  COFD[449] = 5.16013126E+00;
  COFD[450] = -4.46824543E-01;
  COFD[451] = 1.90464887E-02;
  COFD[452] = -2.12652444E+01;
  COFD[453] = 5.59961822E+00;
  COFD[454] = -4.91624856E-01;
  COFD[455] = 2.05035546E-02;
  COFD[456] = -1.94252948E+01;
  COFD[457] = 5.16013126E+00;
  COFD[458] = -4.46824543E-01;
  COFD[459] = 1.90464887E-02;
  COFD[460] = -1.19157788E+01;
  COFD[461] = 9.28952533E-01;
  COFD[462] = 2.42107483E-01;
  COFD[463] = -1.59824150E-02;
  COFD[464] = -2.06463656E+01;
  COFD[465] = 5.41688482E+00;
  COFD[466] = -4.73387188E-01;
  COFD[467] = 1.99280175E-02;
  COFD[468] = -2.06516251E+01;
  COFD[469] = 5.41688482E+00;
  COFD[470] = -4.73387188E-01;
  COFD[471] = 1.99280175E-02;
  COFD[472] = -2.12831283E+01;
  COFD[473] = 5.61184117E+00;
  COFD[474] = -4.90532156E-01;
  COFD[475] = 2.03507922E-02;
  COFD[476] = -2.14087360E+01;
  COFD[477] = 5.57281993E+00;
  COFD[478] = -4.76690860E-01;
  COFD[479] = 1.94000702E-02;
  COFD[480] = -2.11388255E+01;
  COFD[481] = 5.55529689E+00;
  COFD[482] = -4.87942530E-01;
  COFD[483] = 2.04249057E-02;
  COFD[484] = -2.07653629E+01;
  COFD[485] = 5.01091988E+00;
  COFD[486] = -3.77985581E-01;
  COFD[487] = 1.40968617E-02;
  COFD[488] = -1.77563175E+01;
  COFD[489] = 3.57475686E+00;
  COFD[490] = -1.56396297E-01;
  COFD[491] = 3.12157721E-03;
  COFD[492] = -2.15095920E+01;
  COFD[493] = 5.46737673E+00;
  COFD[494] = -4.55696085E-01;
  COFD[495] = 1.81982625E-02;
  COFD[496] = -2.08812277E+01;
  COFD[497] = 5.08859217E+00;
  COFD[498] = -3.90525428E-01;
  COFD[499] = 1.47376395E-02;
  COFD[500] = -2.12661812E+01;
  COFD[501] = 5.24930667E+00;
  COFD[502] = -4.17435088E-01;
  COFD[503] = 1.61434424E-02;
  COFD[504] = -2.10440599E+01;
  COFD[505] = 5.59806282E+00;
  COFD[506] = -4.87109535E-01;
  COFD[507] = 2.01370226E-02;
  COFD[508] = -1.87383877E+01;
  COFD[509] = 3.96926341E+00;
  COFD[510] = -2.16412264E-01;
  COFD[511] = 6.06012078E-03;
  COFD[512] = -1.87452995E+01;
  COFD[513] = 3.96926341E+00;
  COFD[514] = -2.16412264E-01;
  COFD[515] = 6.06012078E-03;
  COFD[516] = -2.13847376E+01;
  COFD[517] = 5.17440955E+00;
  COFD[518] = -4.04678430E-01;
  COFD[519] = 1.54706350E-02;
  COFD[520] = -2.13884026E+01;
  COFD[521] = 5.17440955E+00;
  COFD[522] = -4.04678430E-01;
  COFD[523] = 1.54706350E-02;
  COFD[524] = -2.10643264E+01;
  COFD[525] = 5.53614864E+00;
  COFD[526] = -4.86046753E-01;
  COFD[527] = 2.03659193E-02;
  COFD[528] = -1.18998160E+01;
  COFD[529] = 2.57507000E+00;
  COFD[530] = -1.24033737E-01;
  COFD[531] = 5.56694959E-03;
  COFD[532] = -1.46554904E+01;
  COFD[533] = 3.83606243E+00;
  COFD[534] = -2.86076532E-01;
  COFD[535] = 1.25205829E-02;
  COFD[536] = -1.43190281E+01;
  COFD[537] = 3.17651319E+00;
  COFD[538] = -2.02028974E-01;
  COFD[539] = 8.94232502E-03;
  COFD[540] = -1.55588172E+01;
  COFD[541] = 3.48070094E+00;
  COFD[542] = -2.40859499E-01;
  COFD[543] = 1.05972514E-02;
  COFD[544] = -1.43393972E+01;
  COFD[545] = 3.17651319E+00;
  COFD[546] = -2.02028974E-01;
  COFD[547] = 8.94232502E-03;
  COFD[548] = -2.06463656E+01;
  COFD[549] = 5.41688482E+00;
  COFD[550] = -4.73387188E-01;
  COFD[551] = 1.99280175E-02;
  COFD[552] = -1.55666313E+01;
  COFD[553] = 3.48070094E+00;
  COFD[554] = -2.40859499E-01;
  COFD[555] = 1.05972514E-02;
  COFD[556] = -1.55740954E+01;
  COFD[557] = 3.48070094E+00;
  COFD[558] = -2.40859499E-01;
  COFD[559] = 1.05972514E-02;
  COFD[560] = -1.63542358E+01;
  COFD[561] = 3.82388595E+00;
  COFD[562] = -2.84480724E-01;
  COFD[563] = 1.24506311E-02;
  COFD[564] = -1.62775683E+01;
  COFD[565] = 3.79163564E+00;
  COFD[566] = -2.80257365E-01;
  COFD[567] = 1.22656902E-02;
  COFD[568] = -1.52792799E+01;
  COFD[569] = 3.36790500E+00;
  COFD[570] = -2.26321740E-01;
  COFD[571] = 9.97135055E-03;
  COFD[572] = -1.84777509E+01;
  COFD[573] = 4.49330851E+00;
  COFD[574] = -3.68208715E-01;
  COFD[575] = 1.59565402E-02;
  COFD[576] = -2.08367641E+01;
  COFD[577] = 5.35267674E+00;
  COFD[578] = -4.69010505E-01;
  COFD[579] = 1.98979152E-02;
  COFD[580] = -1.78903850E+01;
  COFD[581] = 4.29613154E+00;
  COFD[582] = -3.44012526E-01;
  COFD[583] = 1.49643715E-02;
  COFD[584] = -1.89616566E+01;
  COFD[585] = 4.68595732E+00;
  COFD[586] = -3.91842840E-01;
  COFD[587] = 1.69262542E-02;
  COFD[588] = -1.86499019E+01;
  COFD[589] = 4.53572533E+00;
  COFD[590] = -3.73386925E-01;
  COFD[591] = 1.61678881E-02;
  COFD[592] = -1.64255877E+01;
  COFD[593] = 3.89309916E+00;
  COFD[594] = -2.93528188E-01;
  COFD[595] = 1.28463177E-02;
  COFD[596] = -2.05272244E+01;
  COFD[597] = 5.18417470E+00;
  COFD[598] = -4.49491573E-01;
  COFD[599] = 1.91438508E-02;
  COFD[600] = -2.05373910E+01;
  COFD[601] = 5.18417470E+00;
  COFD[602] = -4.49491573E-01;
  COFD[603] = 1.91438508E-02;
  COFD[604] = -1.91208247E+01;
  COFD[605] = 4.61801405E+00;
  COFD[606] = -3.83535652E-01;
  COFD[607] = 1.65862513E-02;
  COFD[608] = -1.91261897E+01;
  COFD[609] = 4.61801405E+00;
  COFD[610] = -3.83535652E-01;
  COFD[611] = 1.65862513E-02;
  COFD[612] = -1.52486292E+01;
  COFD[613] = 3.35922578E+00;
  COFD[614] = -2.25181399E-01;
  COFD[615] = 9.92132878E-03;
  COFD[616] = -1.19006697E+01;
  COFD[617] = 2.57507000E+00;
  COFD[618] = -1.24033737E-01;
  COFD[619] = 5.56694959E-03;
  COFD[620] = -1.46559297E+01;
  COFD[621] = 3.83606243E+00;
  COFD[622] = -2.86076532E-01;
  COFD[623] = 1.25205829E-02;
  COFD[624] = -1.43238892E+01;
  COFD[625] = 3.17651319E+00;
  COFD[626] = -2.02028974E-01;
  COFD[627] = 8.94232502E-03;
  COFD[628] = -1.55661647E+01;
  COFD[629] = 3.48070094E+00;
  COFD[630] = -2.40859499E-01;
  COFD[631] = 1.05972514E-02;
  COFD[632] = -1.43444614E+01;
  COFD[633] = 3.17651319E+00;
  COFD[634] = -2.02028974E-01;
  COFD[635] = 8.94232502E-03;
  COFD[636] = -2.06516251E+01;
  COFD[637] = 5.41688482E+00;
  COFD[638] = -4.73387188E-01;
  COFD[639] = 1.99280175E-02;
  COFD[640] = -1.55740954E+01;
  COFD[641] = 3.48070094E+00;
  COFD[642] = -2.40859499E-01;
  COFD[643] = 1.05972514E-02;
  COFD[644] = -1.55816727E+01;
  COFD[645] = 3.48070094E+00;
  COFD[646] = -2.40859499E-01;
  COFD[647] = 1.05972514E-02;
  COFD[648] = -1.63588948E+01;
  COFD[649] = 3.82388595E+00;
  COFD[650] = -2.84480724E-01;
  COFD[651] = 1.24506311E-02;
  COFD[652] = -1.62824385E+01;
  COFD[653] = 3.79163564E+00;
  COFD[654] = -2.80257365E-01;
  COFD[655] = 1.22656902E-02;
  COFD[656] = -1.52861287E+01;
  COFD[657] = 3.36790500E+00;
  COFD[658] = -2.26321740E-01;
  COFD[659] = 9.97135055E-03;
  COFD[660] = -1.84862906E+01;
  COFD[661] = 4.49330851E+00;
  COFD[662] = -3.68208715E-01;
  COFD[663] = 1.59565402E-02;
  COFD[664] = -2.08438728E+01;
  COFD[665] = 5.35267674E+00;
  COFD[666] = -4.69010505E-01;
  COFD[667] = 1.98979152E-02;
  COFD[668] = -1.78969625E+01;
  COFD[669] = 4.29613154E+00;
  COFD[670] = -3.44012526E-01;
  COFD[671] = 1.49643715E-02;
  COFD[672] = -1.89685112E+01;
  COFD[673] = 4.68595732E+00;
  COFD[674] = -3.91842840E-01;
  COFD[675] = 1.69262542E-02;
  COFD[676] = -1.86570161E+01;
  COFD[677] = 4.53572533E+00;
  COFD[678] = -3.73386925E-01;
  COFD[679] = 1.61678881E-02;
  COFD[680] = -1.64338675E+01;
  COFD[681] = 3.89309916E+00;
  COFD[682] = -2.93528188E-01;
  COFD[683] = 1.28463177E-02;
  COFD[684] = -2.05355943E+01;
  COFD[685] = 5.18417470E+00;
  COFD[686] = -4.49491573E-01;
  COFD[687] = 1.91438508E-02;
  COFD[688] = -2.05459343E+01;
  COFD[689] = 5.18417470E+00;
  COFD[690] = -4.49491573E-01;
  COFD[691] = 1.91438508E-02;
  COFD[692] = -1.91291085E+01;
  COFD[693] = 4.61801405E+00;
  COFD[694] = -3.83535652E-01;
  COFD[695] = 1.65862513E-02;
  COFD[696] = -1.91345636E+01;
  COFD[697] = 4.61801405E+00;
  COFD[698] = -3.83535652E-01;
  COFD[699] = 1.65862513E-02;
  COFD[700] = -1.52554785E+01;
  COFD[701] = 3.35922578E+00;
  COFD[702] = -2.25181399E-01;
  COFD[703] = 9.92132878E-03;
  COFD[704] = -1.25141403E+01;
  COFD[705] = 2.77873601E+00;
  COFD[706] = -1.50637360E-01;
  COFD[707] = 6.72684281E-03;
  COFD[708] = -1.57995045E+01;
  COFD[709] = 4.22225052E+00;
  COFD[710] = -3.35156428E-01;
  COFD[711] = 1.46104855E-02;
  COFD[712] = -1.50766073E+01;
  COFD[713] = 3.47945612E+00;
  COFD[714] = -2.40703722E-01;
  COFD[715] = 1.05907441E-02;
  COFD[716] = -1.63493305E+01;
  COFD[717] = 3.82388595E+00;
  COFD[718] = -2.84480724E-01;
  COFD[719] = 1.24506311E-02;
  COFD[720] = -1.50911746E+01;
  COFD[721] = 3.47945612E+00;
  COFD[722] = -2.40703722E-01;
  COFD[723] = 1.05907441E-02;
  COFD[724] = -2.12831283E+01;
  COFD[725] = 5.61184117E+00;
  COFD[726] = -4.90532156E-01;
  COFD[727] = 2.03507922E-02;
  COFD[728] = -1.63542358E+01;
  COFD[729] = 3.82388595E+00;
  COFD[730] = -2.84480724E-01;
  COFD[731] = 1.24506311E-02;
  COFD[732] = -1.63588948E+01;
  COFD[733] = 3.82388595E+00;
  COFD[734] = -2.84480724E-01;
  COFD[735] = 1.24506311E-02;
  COFD[736] = -1.73374523E+01;
  COFD[737] = 4.21416723E+00;
  COFD[738] = -3.34163932E-01;
  COFD[739] = 1.45697432E-02;
  COFD[740] = -1.72738845E+01;
  COFD[741] = 4.19029808E+00;
  COFD[742] = -3.31177076E-01;
  COFD[743] = 1.44446234E-02;
  COFD[744] = -1.59862997E+01;
  COFD[745] = 3.67388294E+00;
  COFD[746] = -2.64990709E-01;
  COFD[747] = 1.16042706E-02;
  COFD[748] = -1.93276406E+01;
  COFD[749] = 4.85015581E+00;
  COFD[750] = -4.10945109E-01;
  COFD[751] = 1.76651398E-02;
  COFD[752] = -2.14449532E+01;
  COFD[753] = 5.56531152E+00;
  COFD[754] = -4.88789821E-01;
  COFD[755] = 2.04437116E-02;
  COFD[756] = -1.88463801E+01;
  COFD[757] = 4.68393046E+00;
  COFD[758] = -3.91610863E-01;
  COFD[759] = 1.69174645E-02;
  COFD[760] = -1.98646724E+01;
  COFD[761] = 5.04367502E+00;
  COFD[762] = -4.34153325E-01;
  COFD[763] = 1.85956055E-02;
  COFD[764] = -1.95552136E+01;
  COFD[765] = 4.90255048E+00;
  COFD[766] = -4.17368501E-01;
  COFD[767] = 1.79287358E-02;
  COFD[768] = -1.72828280E+01;
  COFD[769] = 4.26063341E+00;
  COFD[770] = -3.39848064E-01;
  COFD[771] = 1.48021313E-02;
  COFD[772] = -2.11606942E+01;
  COFD[773] = 5.42846112E+00;
  COFD[774] = -4.74321870E-01;
  COFD[775] = 1.99459749E-02;
  COFD[776] = -2.11667588E+01;
  COFD[777] = 5.42846112E+00;
  COFD[778] = -4.74321870E-01;
  COFD[779] = 1.99459749E-02;
  COFD[780] = -1.99803480E+01;
  COFD[781] = 4.97875278E+00;
  COFD[782] = -4.26485475E-01;
  COFD[783] = 1.82931933E-02;
  COFD[784] = -1.99835677E+01;
  COFD[785] = 4.97875278E+00;
  COFD[786] = -4.26485475E-01;
  COFD[787] = 1.82931933E-02;
  COFD[788] = -1.59633426E+01;
  COFD[789] = 3.66853818E+00;
  COFD[790] = -2.64346221E-01;
  COFD[791] = 1.15784613E-02;
  COFD[792] = -1.24693714E+01;
  COFD[793] = 2.76686648E+00;
  COFD[794] = -1.49120141E-01;
  COFD[795] = 6.66220432E-03;
  COFD[796] = -1.57199190E+01;
  COFD[797] = 4.19936335E+00;
  COFD[798] = -3.32311009E-01;
  COFD[799] = 1.44921003E-02;
  COFD[800] = -1.50270285E+01;
  COFD[801] = 3.46140064E+00;
  COFD[802] = -2.38440092E-01;
  COFD[803] = 1.04960087E-02;
  COFD[804] = -1.62724429E+01;
  COFD[805] = 3.79163564E+00;
  COFD[806] = -2.80257365E-01;
  COFD[807] = 1.22656902E-02;
  COFD[808] = -1.50420909E+01;
  COFD[809] = 3.46140064E+00;
  COFD[810] = -2.38440092E-01;
  COFD[811] = 1.04960087E-02;
  COFD[812] = -2.14087360E+01;
  COFD[813] = 5.57281993E+00;
  COFD[814] = -4.76690860E-01;
  COFD[815] = 1.94000702E-02;
  COFD[816] = -1.62775683E+01;
  COFD[817] = 3.79163564E+00;
  COFD[818] = -2.80257365E-01;
  COFD[819] = 1.22656902E-02;
  COFD[820] = -1.62824385E+01;
  COFD[821] = 3.79163564E+00;
  COFD[822] = -2.80257365E-01;
  COFD[823] = 1.22656902E-02;
  COFD[824] = -1.72738845E+01;
  COFD[825] = 4.19029808E+00;
  COFD[826] = -3.31177076E-01;
  COFD[827] = 1.44446234E-02;
  COFD[828] = -1.72167712E+01;
  COFD[829] = 4.16886779E+00;
  COFD[830] = -3.28518156E-01;
  COFD[831] = 1.43341626E-02;
  COFD[832] = -1.59525075E+01;
  COFD[833] = 3.66023858E+00;
  COFD[834] = -2.63401043E-01;
  COFD[835] = 1.15432000E-02;
  COFD[836] = -1.92867532E+01;
  COFD[837] = 4.83375900E+00;
  COFD[838] = -4.09146560E-01;
  COFD[839] = 1.76006599E-02;
  COFD[840] = -2.14082433E+01;
  COFD[841] = 5.55346617E+00;
  COFD[842] = -4.87783156E-01;
  COFD[843] = 2.04210886E-02;
  COFD[844] = -1.87897289E+01;
  COFD[845] = 4.66162351E+00;
  COFD[846] = -3.88920477E-01;
  COFD[847] = 1.68089648E-02;
  COFD[848] = -1.98075051E+01;
  COFD[849] = 5.02169524E+00;
  COFD[850] = -4.31582804E-01;
  COFD[851] = 1.84953568E-02;
  COFD[852] = -1.94823661E+01;
  COFD[853] = 4.87333294E+00;
  COFD[854] = -4.13769241E-01;
  COFD[855] = 1.77802244E-02;
  COFD[856] = -1.72316133E+01;
  COFD[857] = 4.24011069E+00;
  COFD[858] = -3.37339810E-01;
  COFD[859] = 1.46996679E-02;
  COFD[860] = -2.11309194E+01;
  COFD[861] = 5.41773516E+00;
  COFD[862] = -4.73414338E-01;
  COFD[863] = 1.99258685E-02;
  COFD[864] = -2.11372801E+01;
  COFD[865] = 5.41773516E+00;
  COFD[866] = -4.73414338E-01;
  COFD[867] = 1.99258685E-02;
  COFD[868] = -1.99235836E+01;
  COFD[869] = 4.95514826E+00;
  COFD[870] = -4.23691395E-01;
  COFD[871] = 1.81828318E-02;
  COFD[872] = -1.99269591E+01;
  COFD[873] = 4.95514826E+00;
  COFD[874] = -4.23691395E-01;
  COFD[875] = 1.81828318E-02;
  COFD[876] = -1.59327344E+01;
  COFD[877] = 3.65620899E+00;
  COFD[878] = -2.62933804E-01;
  COFD[879] = 1.15253223E-02;
  COFD[880] = -1.17159884E+01;
  COFD[881] = 2.48123210E+00;
  COFD[882] = -1.11322604E-01;
  COFD[883] = 4.99282389E-03;
  COFD[884] = -1.43151328E+01;
  COFD[885] = 3.68038508E+00;
  COFD[886] = -2.65779346E-01;
  COFD[887] = 1.16360771E-02;
  COFD[888] = -1.40998907E+01;
  COFD[889] = 3.08120012E+00;
  COFD[890] = -1.89629903E-01;
  COFD[891] = 8.40361952E-03;
  COFD[892] = -1.52721010E+01;
  COFD[893] = 3.36790500E+00;
  COFD[894] = -2.26321740E-01;
  COFD[895] = 9.97135055E-03;
  COFD[896] = -1.41191170E+01;
  COFD[897] = 3.08120012E+00;
  COFD[898] = -1.89629903E-01;
  COFD[899] = 8.40361952E-03;
  COFD[900] = -2.11388255E+01;
  COFD[901] = 5.55529689E+00;
  COFD[902] = -4.87942530E-01;
  COFD[903] = 2.04249057E-02;
  COFD[904] = -1.52792799E+01;
  COFD[905] = 3.36790500E+00;
  COFD[906] = -2.26321740E-01;
  COFD[907] = 9.97135055E-03;
  COFD[908] = -1.52861287E+01;
  COFD[909] = 3.36790500E+00;
  COFD[910] = -2.26321740E-01;
  COFD[911] = 9.97135055E-03;
  COFD[912] = -1.59862997E+01;
  COFD[913] = 3.67388294E+00;
  COFD[914] = -2.64990709E-01;
  COFD[915] = 1.16042706E-02;
  COFD[916] = -1.59525075E+01;
  COFD[917] = 3.66023858E+00;
  COFD[918] = -2.63401043E-01;
  COFD[919] = 1.15432000E-02;
  COFD[920] = -1.50233391E+01;
  COFD[921] = 3.26660767E+00;
  COFD[922] = -2.13287177E-01;
  COFD[923] = 9.41137857E-03;
  COFD[924] = -1.81735675E+01;
  COFD[925] = 4.38391495E+00;
  COFD[926] = -3.54941287E-01;
  COFD[927] = 1.54195107E-02;
  COFD[928] = -2.05128629E+01;
  COFD[929] = 5.23843909E+00;
  COFD[930] = -4.55815614E-01;
  COFD[931] = 1.93898040E-02;
  COFD[932] = -1.76285583E+01;
  COFD[933] = 4.19935698E+00;
  COFD[934] = -3.32310212E-01;
  COFD[935] = 1.44920670E-02;
  COFD[936] = -1.86157710E+01;
  COFD[937] = 4.55689508E+00;
  COFD[938] = -3.75937921E-01;
  COFD[939] = 1.62703488E-02;
  COFD[940] = -1.83538331E+01;
  COFD[941] = 4.42828044E+00;
  COFD[942] = -3.60417833E-01;
  COFD[943] = 1.56455103E-02;
  COFD[944] = -1.60261598E+01;
  COFD[945] = 3.73312045E+00;
  COFD[946] = -2.72579779E-01;
  COFD[947] = 1.19290272E-02;
  COFD[948] = -2.02922626E+01;
  COFD[949] = 5.11106992E+00;
  COFD[950] = -4.42047129E-01;
  COFD[951] = 1.89042990E-02;
  COFD[952] = -2.03014971E+01;
  COFD[953] = 5.11106992E+00;
  COFD[954] = -4.42047129E-01;
  COFD[955] = 1.89042990E-02;
  COFD[956] = -1.87684982E+01;
  COFD[957] = 4.49191492E+00;
  COFD[958] = -3.68041771E-01;
  COFD[959] = 1.59498676E-02;
  COFD[960] = -1.87733780E+01;
  COFD[961] = 4.49191492E+00;
  COFD[962] = -3.68041771E-01;
  COFD[963] = 1.59498676E-02;
  COFD[964] = -1.50031706E+01;
  COFD[965] = 3.26223357E+00;
  COFD[966] = -2.12746642E-01;
  COFD[967] = 9.38912883E-03;
  COFD[968] = -1.37794466E+01;
  COFD[969] = 3.23973858E+00;
  COFD[970] = -2.09989036E-01;
  COFD[971] = 9.27667906E-03;
  COFD[972] = -1.76147183E+01;
  COFD[973] = 4.86049500E+00;
  COFD[974] = -4.12200578E-01;
  COFD[975] = 1.77160971E-02;
  COFD[976] = -1.70534750E+01;
  COFD[977] = 4.14240922E+00;
  COFD[978] = -3.25239774E-01;
  COFD[979] = 1.41980687E-02;
  COFD[980] = -1.84688303E+01;
  COFD[981] = 4.49330851E+00;
  COFD[982] = -3.68208715E-01;
  COFD[983] = 1.59565402E-02;
  COFD[984] = -1.70756953E+01;
  COFD[985] = 4.14240922E+00;
  COFD[986] = -3.25239774E-01;
  COFD[987] = 1.41980687E-02;
  COFD[988] = -2.07653629E+01;
  COFD[989] = 5.01091988E+00;
  COFD[990] = -3.77985581E-01;
  COFD[991] = 1.40968617E-02;
  COFD[992] = -1.84777509E+01;
  COFD[993] = 4.49330851E+00;
  COFD[994] = -3.68208715E-01;
  COFD[995] = 1.59565402E-02;
  COFD[996] = -1.84862906E+01;
  COFD[997] = 4.49330851E+00;
  COFD[998] = -3.68208715E-01;
  COFD[999] = 1.59565402E-02;
  COFD[1000] = -1.93276406E+01;
  COFD[1001] = 4.85015581E+00;
  COFD[1002] = -4.10945109E-01;
  COFD[1003] = 1.76651398E-02;
  COFD[1004] = -1.92867532E+01;
  COFD[1005] = 4.83375900E+00;
  COFD[1006] = -4.09146560E-01;
  COFD[1007] = 1.76006599E-02;
  COFD[1008] = -1.81735675E+01;
  COFD[1009] = 4.38391495E+00;
  COFD[1010] = -3.54941287E-01;
  COFD[1011] = 1.54195107E-02;
  COFD[1012] = -2.13425604E+01;
  COFD[1013] = 5.40460130E+00;
  COFD[1014] = -4.72718910E-01;
  COFD[1015] = 1.99362717E-02;
  COFD[1016] = -2.19317665E+01;
  COFD[1017] = 5.45216133E+00;
  COFD[1018] = -4.52916925E-01;
  COFD[1019] = 1.80456400E-02;
  COFD[1020] = -2.09191230E+01;
  COFD[1021] = 5.30153901E+00;
  COFD[1022] = -4.63335119E-01;
  COFD[1023] = 1.96897053E-02;
  COFD[1024] = -2.16802565E+01;
  COFD[1025] = 5.52918296E+00;
  COFD[1026] = -4.85360709E-01;
  COFD[1027] = 2.03448006E-02;
  COFD[1028] = -2.14326420E+01;
  COFD[1029] = 5.41729961E+00;
  COFD[1030] = -4.73400281E-01;
  COFD[1031] = 1.99269567E-02;
  COFD[1032] = -1.94485902E+01;
  COFD[1033] = 4.91446566E+00;
  COFD[1034] = -4.18837152E-01;
  COFD[1035] = 1.79893537E-02;
  COFD[1036] = -2.22116629E+01;
  COFD[1037] = 5.54251230E+00;
  COFD[1038] = -4.70946314E-01;
  COFD[1039] = 1.90785869E-02;
  COFD[1040] = -2.22235050E+01;
  COFD[1041] = 5.54251230E+00;
  COFD[1042] = -4.70946314E-01;
  COFD[1043] = 1.90785869E-02;
  COFD[1044] = -2.18590684E+01;
  COFD[1045] = 5.47368915E+00;
  COFD[1046] = -4.79424291E-01;
  COFD[1047] = 2.01372920E-02;
  COFD[1048] = -2.18653022E+01;
  COFD[1049] = 5.47368915E+00;
  COFD[1050] = -4.79424291E-01;
  COFD[1051] = 2.01372920E-02;
  COFD[1052] = -1.81432499E+01;
  COFD[1053] = 4.37565431E+00;
  COFD[1054] = -3.53906025E-01;
  COFD[1055] = 1.53760786E-02;
  COFD[1056] = -1.60528433E+01;
  COFD[1057] = 4.11188603E+00;
  COFD[1058] = -3.21540884E-01;
  COFD[1059] = 1.40482564E-02;
  COFD[1060] = -1.97550243E+01;
  COFD[1061] = 5.56931926E+00;
  COFD[1062] = -4.89105511E-01;
  COFD[1063] = 2.04493129E-02;
  COFD[1064] = -1.94373032E+01;
  COFD[1065] = 5.02567894E+00;
  COFD[1066] = -4.32045169E-01;
  COFD[1067] = 1.85132214E-02;
  COFD[1068] = -2.08293167E+01;
  COFD[1069] = 5.35267674E+00;
  COFD[1070] = -4.69010505E-01;
  COFD[1071] = 1.98979152E-02;
  COFD[1072] = -1.94570202E+01;
  COFD[1073] = 5.02567894E+00;
  COFD[1074] = -4.32045169E-01;
  COFD[1075] = 1.85132214E-02;
  COFD[1076] = -1.77563175E+01;
  COFD[1077] = 3.57475686E+00;
  COFD[1078] = -1.56396297E-01;
  COFD[1079] = 3.12157721E-03;
  COFD[1080] = -2.08367641E+01;
  COFD[1081] = 5.35267674E+00;
  COFD[1082] = -4.69010505E-01;
  COFD[1083] = 1.98979152E-02;
  COFD[1084] = -2.08438728E+01;
  COFD[1085] = 5.35267674E+00;
  COFD[1086] = -4.69010505E-01;
  COFD[1087] = 1.98979152E-02;
  COFD[1088] = -2.14449532E+01;
  COFD[1089] = 5.56531152E+00;
  COFD[1090] = -4.88789821E-01;
  COFD[1091] = 2.04437116E-02;
  COFD[1092] = -2.14082433E+01;
  COFD[1093] = 5.55346617E+00;
  COFD[1094] = -4.87783156E-01;
  COFD[1095] = 2.04210886E-02;
  COFD[1096] = -2.05128629E+01;
  COFD[1097] = 5.23843909E+00;
  COFD[1098] = -4.55815614E-01;
  COFD[1099] = 1.93898040E-02;
  COFD[1100] = -2.19317665E+01;
  COFD[1101] = 5.45216133E+00;
  COFD[1102] = -4.52916925E-01;
  COFD[1103] = 1.80456400E-02;
  COFD[1104] = -1.90499374E+01;
  COFD[1105] = 3.99221757E+00;
  COFD[1106] = -2.19854880E-01;
  COFD[1107] = 6.22736279E-03;
  COFD[1108] = -2.20036321E+01;
  COFD[1109] = 5.55935694E+00;
  COFD[1110] = -4.74154740E-01;
  COFD[1111] = 1.92584304E-02;
  COFD[1112] = -2.16379525E+01;
  COFD[1113] = 5.29019717E+00;
  COFD[1114] = -4.24502606E-01;
  COFD[1115] = 1.65197343E-02;
  COFD[1116] = -2.19399756E+01;
  COFD[1117] = 5.41841631E+00;
  COFD[1118] = -4.46818971E-01;
  COFD[1119] = 1.77127652E-02;
  COFD[1120] = -2.14303411E+01;
  COFD[1121] = 5.59268435E+00;
  COFD[1122] = -4.91232974E-01;
  COFD[1123] = 2.05064746E-02;
  COFD[1124] = -2.01015275E+01;
  COFD[1125] = 4.41511629E+00;
  COFD[1126] = -2.84086963E-01;
  COFD[1127] = 9.37586971E-03;
  COFD[1128] = -2.01111534E+01;
  COFD[1129] = 4.41511629E+00;
  COFD[1130] = -2.84086963E-01;
  COFD[1131] = 9.37586971E-03;
  COFD[1132] = -2.20947854E+01;
  COFD[1133] = 5.36053938E+00;
  COFD[1134] = -4.36434519E-01;
  COFD[1135] = 1.71484255E-02;
  COFD[1136] = -2.20998692E+01;
  COFD[1137] = 5.36053938E+00;
  COFD[1138] = -4.36434519E-01;
  COFD[1139] = 1.71484255E-02;
  COFD[1140] = -2.04833743E+01;
  COFD[1141] = 5.23112374E+00;
  COFD[1142] = -4.54967682E-01;
  COFD[1143] = 1.93570423E-02;
  COFD[1144] = -1.34709956E+01;
  COFD[1145] = 3.09379603E+00;
  COFD[1146] = -1.91268635E-01;
  COFD[1147] = 8.47480224E-03;
  COFD[1148] = -1.72232379E+01;
  COFD[1149] = 4.69060745E+00;
  COFD[1150] = -3.92369888E-01;
  COFD[1151] = 1.69459661E-02;
  COFD[1152] = -1.65488277E+01;
  COFD[1153] = 3.95035840E+00;
  COFD[1154] = -3.00959418E-01;
  COFD[1155] = 1.31692593E-02;
  COFD[1156] = -1.78834868E+01;
  COFD[1157] = 4.29613154E+00;
  COFD[1158] = -3.44012526E-01;
  COFD[1159] = 1.49643715E-02;
  COFD[1160] = -1.65675292E+01;
  COFD[1161] = 3.95035840E+00;
  COFD[1162] = -3.00959418E-01;
  COFD[1163] = 1.31692593E-02;
  COFD[1164] = -2.15095920E+01;
  COFD[1165] = 5.46737673E+00;
  COFD[1166] = -4.55696085E-01;
  COFD[1167] = 1.81982625E-02;
  COFD[1168] = -1.78903850E+01;
  COFD[1169] = 4.29613154E+00;
  COFD[1170] = -3.44012526E-01;
  COFD[1171] = 1.49643715E-02;
  COFD[1172] = -1.78969625E+01;
  COFD[1173] = 4.29613154E+00;
  COFD[1174] = -3.44012526E-01;
  COFD[1175] = 1.49643715E-02;
  COFD[1176] = -1.88463801E+01;
  COFD[1177] = 4.68393046E+00;
  COFD[1178] = -3.91610863E-01;
  COFD[1179] = 1.69174645E-02;
  COFD[1180] = -1.87897289E+01;
  COFD[1181] = 4.66162351E+00;
  COFD[1182] = -3.88920477E-01;
  COFD[1183] = 1.68089648E-02;
  COFD[1184] = -1.76285583E+01;
  COFD[1185] = 4.19935698E+00;
  COFD[1186] = -3.32310212E-01;
  COFD[1187] = 1.44920670E-02;
  COFD[1188] = -2.09191230E+01;
  COFD[1189] = 5.30153901E+00;
  COFD[1190] = -4.63335119E-01;
  COFD[1191] = 1.96897053E-02;
  COFD[1192] = -2.20036321E+01;
  COFD[1193] = 5.55935694E+00;
  COFD[1194] = -4.74154740E-01;
  COFD[1195] = 1.92584304E-02;
  COFD[1196] = -2.03766918E+01;
  COFD[1197] = 5.13263469E+00;
  COFD[1198] = -4.44457285E-01;
  COFD[1199] = 1.89932102E-02;
  COFD[1200] = -2.12121345E+01;
  COFD[1201] = 5.39823225E+00;
  COFD[1202] = -4.72294645E-01;
  COFD[1203] = 1.99340225E-02;
  COFD[1204] = -2.10944068E+01;
  COFD[1205] = 5.34286099E+00;
  COFD[1206] = -4.68100992E-01;
  COFD[1207] = 1.98731399E-02;
  COFD[1208] = -1.88646025E+01;
  COFD[1209] = 4.72476764E+00;
  COFD[1210] = -3.96306836E-01;
  COFD[1211] = 1.70964541E-02;
  COFD[1212] = -2.21065263E+01;
  COFD[1213] = 5.58360799E+00;
  COFD[1214] = -4.82701436E-01;
  COFD[1215] = 1.98437922E-02;
  COFD[1216] = -2.21153557E+01;
  COFD[1217] = 5.58360799E+00;
  COFD[1218] = -4.82701436E-01;
  COFD[1219] = 1.98437922E-02;
  COFD[1220] = -2.14323161E+01;
  COFD[1221] = 5.37331605E+00;
  COFD[1222] = -4.70491203E-01;
  COFD[1223] = 1.99134666E-02;
  COFD[1224] = -2.14369847E+01;
  COFD[1225] = 5.37331605E+00;
  COFD[1226] = -4.70491203E-01;
  COFD[1227] = 1.99134666E-02;
  COFD[1228] = -1.76002073E+01;
  COFD[1229] = 4.19171952E+00;
  COFD[1230] = -3.31354810E-01;
  COFD[1231] = 1.44520623E-02;
  COFD[1232] = -1.42229344E+01;
  COFD[1233] = 3.38669384E+00;
  COFD[1234] = -2.28784122E-01;
  COFD[1235] = 1.00790953E-02;
  COFD[1236] = -1.82252070E+01;
  COFD[1237] = 5.05237312E+00;
  COFD[1238] = -4.35182396E-01;
  COFD[1239] = 1.86363074E-02;
  COFD[1240] = -1.74792034E+01;
  COFD[1241] = 4.29676909E+00;
  COFD[1242] = -3.44085306E-01;
  COFD[1243] = 1.49671135E-02;
  COFD[1244] = -1.89544717E+01;
  COFD[1245] = 4.68595732E+00;
  COFD[1246] = -3.91842840E-01;
  COFD[1247] = 1.69262542E-02;
  COFD[1248] = -1.74984410E+01;
  COFD[1249] = 4.29676909E+00;
  COFD[1250] = -3.44085306E-01;
  COFD[1251] = 1.49671135E-02;
  COFD[1252] = -2.08812277E+01;
  COFD[1253] = 5.08859217E+00;
  COFD[1254] = -3.90525428E-01;
  COFD[1255] = 1.47376395E-02;
  COFD[1256] = -1.89616566E+01;
  COFD[1257] = 4.68595732E+00;
  COFD[1258] = -3.91842840E-01;
  COFD[1259] = 1.69262542E-02;
  COFD[1260] = -1.89685112E+01;
  COFD[1261] = 4.68595732E+00;
  COFD[1262] = -3.91842840E-01;
  COFD[1263] = 1.69262542E-02;
  COFD[1264] = -1.98646724E+01;
  COFD[1265] = 5.04367502E+00;
  COFD[1266] = -4.34153325E-01;
  COFD[1267] = 1.85956055E-02;
  COFD[1268] = -1.98075051E+01;
  COFD[1269] = 5.02169524E+00;
  COFD[1270] = -4.31582804E-01;
  COFD[1271] = 1.84953568E-02;
  COFD[1272] = -1.86157710E+01;
  COFD[1273] = 4.55689508E+00;
  COFD[1274] = -3.75937921E-01;
  COFD[1275] = 1.62703488E-02;
  COFD[1276] = -2.16802565E+01;
  COFD[1277] = 5.52918296E+00;
  COFD[1278] = -4.85360709E-01;
  COFD[1279] = 2.03448006E-02;
  COFD[1280] = -2.16379525E+01;
  COFD[1281] = 5.29019717E+00;
  COFD[1282] = -4.24502606E-01;
  COFD[1283] = 1.65197343E-02;
  COFD[1284] = -2.12121345E+01;
  COFD[1285] = 5.39823225E+00;
  COFD[1286] = -4.72294645E-01;
  COFD[1287] = 1.99340225E-02;
  COFD[1288] = -2.19327379E+01;
  COFD[1289] = 5.60638188E+00;
  COFD[1290] = -4.91272522E-01;
  COFD[1291] = 2.04396264E-02;
  COFD[1292] = -2.18273535E+01;
  COFD[1293] = 5.55753905E+00;
  COFD[1294] = -4.88136714E-01;
  COFD[1295] = 2.04294957E-02;
  COFD[1296] = -1.99081518E+01;
  COFD[1297] = 5.09311649E+00;
  COFD[1298] = -4.39965178E-01;
  COFD[1299] = 1.88238537E-02;
  COFD[1300] = -2.20453687E+01;
  COFD[1301] = 5.44448440E+00;
  COFD[1302] = -4.51529024E-01;
  COFD[1303] = 1.79698119E-02;
  COFD[1304] = -2.20546120E+01;
  COFD[1305] = 5.44448440E+00;
  COFD[1306] = -4.51529024E-01;
  COFD[1307] = 1.79698119E-02;
  COFD[1308] = -2.21885121E+01;
  COFD[1309] = 5.59472344E+00;
  COFD[1310] = -4.91421518E-01;
  COFD[1311] = 2.05117088E-02;
  COFD[1312] = -2.21933965E+01;
  COFD[1313] = 5.59472344E+00;
  COFD[1314] = -4.91421518E-01;
  COFD[1315] = 2.05117088E-02;
  COFD[1316] = -1.85864196E+01;
  COFD[1317] = 4.54915847E+00;
  COFD[1318] = -3.75000738E-01;
  COFD[1319] = 1.62324821E-02;
  COFD[1320] = -1.39924933E+01;
  COFD[1321] = 3.26384506E+00;
  COFD[1322] = -2.12947087E-01;
  COFD[1323] = 9.39743888E-03;
  COFD[1324] = -1.79345106E+01;
  COFD[1325] = 4.91373893E+00;
  COFD[1326] = -4.18747629E-01;
  COFD[1327] = 1.79856610E-02;
  COFD[1328] = -1.72556425E+01;
  COFD[1329] = 4.17889917E+00;
  COFD[1330] = -3.29752510E-01;
  COFD[1331] = 1.43850275E-02;
  COFD[1332] = -1.86424488E+01;
  COFD[1333] = 4.53572533E+00;
  COFD[1334] = -3.73386925E-01;
  COFD[1335] = 1.61678881E-02;
  COFD[1336] = -1.72753698E+01;
  COFD[1337] = 4.17889917E+00;
  COFD[1338] = -3.29752510E-01;
  COFD[1339] = 1.43850275E-02;
  COFD[1340] = -2.12661812E+01;
  COFD[1341] = 5.24930667E+00;
  COFD[1342] = -4.17435088E-01;
  COFD[1343] = 1.61434424E-02;
  COFD[1344] = -1.86499019E+01;
  COFD[1345] = 4.53572533E+00;
  COFD[1346] = -3.73386925E-01;
  COFD[1347] = 1.61678881E-02;
  COFD[1348] = -1.86570161E+01;
  COFD[1349] = 4.53572533E+00;
  COFD[1350] = -3.73386925E-01;
  COFD[1351] = 1.61678881E-02;
  COFD[1352] = -1.95552136E+01;
  COFD[1353] = 4.90255048E+00;
  COFD[1354] = -4.17368501E-01;
  COFD[1355] = 1.79287358E-02;
  COFD[1356] = -1.94823661E+01;
  COFD[1357] = 4.87333294E+00;
  COFD[1358] = -4.13769241E-01;
  COFD[1359] = 1.77802244E-02;
  COFD[1360] = -1.83538331E+01;
  COFD[1361] = 4.42828044E+00;
  COFD[1362] = -3.60417833E-01;
  COFD[1363] = 1.56455103E-02;
  COFD[1364] = -2.14326420E+01;
  COFD[1365] = 5.41729961E+00;
  COFD[1366] = -4.73400281E-01;
  COFD[1367] = 1.99269567E-02;
  COFD[1368] = -2.19399756E+01;
  COFD[1369] = 5.41841631E+00;
  COFD[1370] = -4.46818971E-01;
  COFD[1371] = 1.77127652E-02;
  COFD[1372] = -2.10944068E+01;
  COFD[1373] = 5.34286099E+00;
  COFD[1374] = -4.68100992E-01;
  COFD[1375] = 1.98731399E-02;
  COFD[1376] = -2.18273535E+01;
  COFD[1377] = 5.55753905E+00;
  COFD[1378] = -4.88136714E-01;
  COFD[1379] = 2.04294957E-02;
  COFD[1380] = -2.15746130E+01;
  COFD[1381] = 5.44803850E+00;
  COFD[1382] = -4.76610560E-01;
  COFD[1383] = 2.00355294E-02;
  COFD[1384] = -1.96408096E+01;
  COFD[1385] = 4.95923807E+00;
  COFD[1386] = -4.24176182E-01;
  COFD[1387] = 1.82020215E-02;
  COFD[1388] = -2.22159601E+01;
  COFD[1389] = 5.51722375E+00;
  COFD[1390] = -4.66081431E-01;
  COFD[1391] = 1.88044011E-02;
  COFD[1392] = -2.22255943E+01;
  COFD[1393] = 5.51722375E+00;
  COFD[1394] = -4.66081431E-01;
  COFD[1395] = 1.88044011E-02;
  COFD[1396] = -2.19982906E+01;
  COFD[1397] = 5.51276597E+00;
  COFD[1398] = -4.83701824E-01;
  COFD[1399] = 2.02915297E-02;
  COFD[1400] = -2.20033786E+01;
  COFD[1401] = 5.51276597E+00;
  COFD[1402] = -4.83701824E-01;
  COFD[1403] = 2.02915297E-02;
  COFD[1404] = -1.83249359E+01;
  COFD[1405] = 4.42045763E+00;
  COFD[1406] = -3.59451578E-01;
  COFD[1407] = 1.56056164E-02;
  COFD[1408] = -1.22004476E+01;
  COFD[1409] = 2.80725489E+00;
  COFD[1410] = -1.54291406E-01;
  COFD[1411] = 6.88290911E-03;
  COFD[1412] = -1.54460977E+01;
  COFD[1413] = 4.26819983E+00;
  COFD[1414] = -3.40766379E-01;
  COFD[1415] = 1.48393361E-02;
  COFD[1416] = -1.49500258E+01;
  COFD[1417] = 3.52327209E+00;
  COFD[1418] = -2.46286208E-01;
  COFD[1419] = 1.08285963E-02;
  COFD[1420] = -1.64169341E+01;
  COFD[1421] = 3.89309916E+00;
  COFD[1422] = -2.93528188E-01;
  COFD[1423] = 1.28463177E-02;
  COFD[1424] = -1.49718147E+01;
  COFD[1425] = 3.52327209E+00;
  COFD[1426] = -2.46286208E-01;
  COFD[1427] = 1.08285963E-02;
  COFD[1428] = -2.10440599E+01;
  COFD[1429] = 5.59806282E+00;
  COFD[1430] = -4.87109535E-01;
  COFD[1431] = 2.01370226E-02;
  COFD[1432] = -1.64255877E+01;
  COFD[1433] = 3.89309916E+00;
  COFD[1434] = -2.93528188E-01;
  COFD[1435] = 1.28463177E-02;
  COFD[1436] = -1.64338675E+01;
  COFD[1437] = 3.89309916E+00;
  COFD[1438] = -2.93528188E-01;
  COFD[1439] = 1.28463177E-02;
  COFD[1440] = -1.72828280E+01;
  COFD[1441] = 4.26063341E+00;
  COFD[1442] = -3.39848064E-01;
  COFD[1443] = 1.48021313E-02;
  COFD[1444] = -1.72316133E+01;
  COFD[1445] = 4.24011069E+00;
  COFD[1446] = -3.37339810E-01;
  COFD[1447] = 1.46996679E-02;
  COFD[1448] = -1.60261598E+01;
  COFD[1449] = 3.73312045E+00;
  COFD[1450] = -2.72579779E-01;
  COFD[1451] = 1.19290272E-02;
  COFD[1452] = -1.94485902E+01;
  COFD[1453] = 4.91446566E+00;
  COFD[1454] = -4.18837152E-01;
  COFD[1455] = 1.79893537E-02;
  COFD[1456] = -2.14303411E+01;
  COFD[1457] = 5.59268435E+00;
  COFD[1458] = -4.91232974E-01;
  COFD[1459] = 2.05064746E-02;
  COFD[1460] = -1.88646025E+01;
  COFD[1461] = 4.72476764E+00;
  COFD[1462] = -3.96306836E-01;
  COFD[1463] = 1.70964541E-02;
  COFD[1464] = -1.99081518E+01;
  COFD[1465] = 5.09311649E+00;
  COFD[1466] = -4.39965178E-01;
  COFD[1467] = 1.88238537E-02;
  COFD[1468] = -1.96408096E+01;
  COFD[1469] = 4.95923807E+00;
  COFD[1470] = -4.24176182E-01;
  COFD[1471] = 1.82020215E-02;
  COFD[1472] = -1.72414795E+01;
  COFD[1473] = 4.29808578E+00;
  COFD[1474] = -3.44235570E-01;
  COFD[1475] = 1.49727727E-02;
  COFD[1476] = -2.12621849E+01;
  COFD[1477] = 5.47935225E+00;
  COFD[1478] = -4.80056796E-01;
  COFD[1479] = 2.01607180E-02;
  COFD[1480] = -2.12736166E+01;
  COFD[1481] = 5.47935225E+00;
  COFD[1482] = -4.80056796E-01;
  COFD[1483] = 2.01607180E-02;
  COFD[1484] = -2.01223105E+01;
  COFD[1485] = 5.03101171E+00;
  COFD[1486] = -4.32665019E-01;
  COFD[1487] = 1.85372086E-02;
  COFD[1488] = -2.01283319E+01;
  COFD[1489] = 5.03101171E+00;
  COFD[1490] = -4.32665019E-01;
  COFD[1491] = 1.85372086E-02;
  COFD[1492] = -1.59884349E+01;
  COFD[1493] = 3.72220402E+00;
  COFD[1494] = -2.71150591E-01;
  COFD[1495] = 1.18665265E-02;
  COFD[1496] = -1.57035004E+01;
  COFD[1497] = 3.93614244E+00;
  COFD[1498] = -2.99111497E-01;
  COFD[1499] = 1.30888229E-02;
  COFD[1500] = -1.94688845E+01;
  COFD[1501] = 5.43830787E+00;
  COFD[1502] = -4.75472880E-01;
  COFD[1503] = 1.99909996E-02;
  COFD[1504] = -1.90883170E+01;
  COFD[1505] = 4.84384483E+00;
  COFD[1506] = -4.10265575E-01;
  COFD[1507] = 1.76414287E-02;
  COFD[1508] = -2.05184780E+01;
  COFD[1509] = 5.18417470E+00;
  COFD[1510] = -4.49491573E-01;
  COFD[1511] = 1.91438508E-02;
  COFD[1512] = -1.91102567E+01;
  COFD[1513] = 4.84384483E+00;
  COFD[1514] = -4.10265575E-01;
  COFD[1515] = 1.76414287E-02;
  COFD[1516] = -1.87383877E+01;
  COFD[1517] = 3.96926341E+00;
  COFD[1518] = -2.16412264E-01;
  COFD[1519] = 6.06012078E-03;
  COFD[1520] = -2.05272244E+01;
  COFD[1521] = 5.18417470E+00;
  COFD[1522] = -4.49491573E-01;
  COFD[1523] = 1.91438508E-02;
  COFD[1524] = -2.05355943E+01;
  COFD[1525] = 5.18417470E+00;
  COFD[1526] = -4.49491573E-01;
  COFD[1527] = 1.91438508E-02;
  COFD[1528] = -2.11606942E+01;
  COFD[1529] = 5.42846112E+00;
  COFD[1530] = -4.74321870E-01;
  COFD[1531] = 1.99459749E-02;
  COFD[1532] = -2.11309194E+01;
  COFD[1533] = 5.41773516E+00;
  COFD[1534] = -4.73414338E-01;
  COFD[1535] = 1.99258685E-02;
  COFD[1536] = -2.02922626E+01;
  COFD[1537] = 5.11106992E+00;
  COFD[1538] = -4.42047129E-01;
  COFD[1539] = 1.89042990E-02;
  COFD[1540] = -2.22116629E+01;
  COFD[1541] = 5.54251230E+00;
  COFD[1542] = -4.70946314E-01;
  COFD[1543] = 1.90785869E-02;
  COFD[1544] = -2.01015275E+01;
  COFD[1545] = 4.41511629E+00;
  COFD[1546] = -2.84086963E-01;
  COFD[1547] = 9.37586971E-03;
  COFD[1548] = -2.21065263E+01;
  COFD[1549] = 5.58360799E+00;
  COFD[1550] = -4.82701436E-01;
  COFD[1551] = 1.98437922E-02;
  COFD[1552] = -2.20453687E+01;
  COFD[1553] = 5.44448440E+00;
  COFD[1554] = -4.51529024E-01;
  COFD[1555] = 1.79698119E-02;
  COFD[1556] = -2.22159601E+01;
  COFD[1557] = 5.51722375E+00;
  COFD[1558] = -4.66081431E-01;
  COFD[1559] = 1.88044011E-02;
  COFD[1560] = -2.12621849E+01;
  COFD[1561] = 5.47935225E+00;
  COFD[1562] = -4.80056796E-01;
  COFD[1563] = 2.01607180E-02;
  COFD[1564] = -2.09002680E+01;
  COFD[1565] = 4.72895031E+00;
  COFD[1566] = -3.33332771E-01;
  COFD[1567] = 1.18431478E-02;
  COFD[1568] = -2.09118417E+01;
  COFD[1569] = 4.72895031E+00;
  COFD[1570] = -3.33332771E-01;
  COFD[1571] = 1.18431478E-02;
  COFD[1572] = -2.24554479E+01;
  COFD[1573] = 5.49330641E+00;
  COFD[1574] = -4.60498247E-01;
  COFD[1575] = 1.84639199E-02;
  COFD[1576] = -2.24615428E+01;
  COFD[1577] = 5.49330641E+00;
  COFD[1578] = -4.60498247E-01;
  COFD[1579] = 1.84639199E-02;
  COFD[1580] = -2.02646659E+01;
  COFD[1581] = 5.10426133E+00;
  COFD[1582] = -4.41256919E-01;
  COFD[1583] = 1.88737290E-02;
  COFD[1584] = -1.57045486E+01;
  COFD[1585] = 3.93614244E+00;
  COFD[1586] = -2.99111497E-01;
  COFD[1587] = 1.30888229E-02;
  COFD[1588] = -1.94694206E+01;
  COFD[1589] = 5.43830787E+00;
  COFD[1590] = -4.75472880E-01;
  COFD[1591] = 1.99909996E-02;
  COFD[1592] = -1.90946650E+01;
  COFD[1593] = 4.84384483E+00;
  COFD[1594] = -4.10265575E-01;
  COFD[1595] = 1.76414287E-02;
  COFD[1596] = -2.05284666E+01;
  COFD[1597] = 5.18417470E+00;
  COFD[1598] = -4.49491573E-01;
  COFD[1599] = 1.91438508E-02;
  COFD[1600] = -1.91168913E+01;
  COFD[1601] = 4.84384483E+00;
  COFD[1602] = -4.10265575E-01;
  COFD[1603] = 1.76414287E-02;
  COFD[1604] = -1.87452995E+01;
  COFD[1605] = 3.96926341E+00;
  COFD[1606] = -2.16412264E-01;
  COFD[1607] = 6.06012078E-03;
  COFD[1608] = -2.05373910E+01;
  COFD[1609] = 5.18417470E+00;
  COFD[1610] = -4.49491573E-01;
  COFD[1611] = 1.91438508E-02;
  COFD[1612] = -2.05459343E+01;
  COFD[1613] = 5.18417470E+00;
  COFD[1614] = -4.49491573E-01;
  COFD[1615] = 1.91438508E-02;
  COFD[1616] = -2.11667588E+01;
  COFD[1617] = 5.42846112E+00;
  COFD[1618] = -4.74321870E-01;
  COFD[1619] = 1.99459749E-02;
  COFD[1620] = -2.11372801E+01;
  COFD[1621] = 5.41773516E+00;
  COFD[1622] = -4.73414338E-01;
  COFD[1623] = 1.99258685E-02;
  COFD[1624] = -2.03014971E+01;
  COFD[1625] = 5.11106992E+00;
  COFD[1626] = -4.42047129E-01;
  COFD[1627] = 1.89042990E-02;
  COFD[1628] = -2.22235050E+01;
  COFD[1629] = 5.54251230E+00;
  COFD[1630] = -4.70946314E-01;
  COFD[1631] = 1.90785869E-02;
  COFD[1632] = -2.01111534E+01;
  COFD[1633] = 4.41511629E+00;
  COFD[1634] = -2.84086963E-01;
  COFD[1635] = 9.37586971E-03;
  COFD[1636] = -2.21153557E+01;
  COFD[1637] = 5.58360799E+00;
  COFD[1638] = -4.82701436E-01;
  COFD[1639] = 1.98437922E-02;
  COFD[1640] = -2.20546120E+01;
  COFD[1641] = 5.44448440E+00;
  COFD[1642] = -4.51529024E-01;
  COFD[1643] = 1.79698119E-02;
  COFD[1644] = -2.22255943E+01;
  COFD[1645] = 5.51722375E+00;
  COFD[1646] = -4.66081431E-01;
  COFD[1647] = 1.88044011E-02;
  COFD[1648] = -2.12736166E+01;
  COFD[1649] = 5.47935225E+00;
  COFD[1650] = -4.80056796E-01;
  COFD[1651] = 2.01607180E-02;
  COFD[1652] = -2.09118417E+01;
  COFD[1653] = 4.72895031E+00;
  COFD[1654] = -3.33332771E-01;
  COFD[1655] = 1.18431478E-02;
  COFD[1656] = -2.09236897E+01;
  COFD[1657] = 4.72895031E+00;
  COFD[1658] = -3.33332771E-01;
  COFD[1659] = 1.18431478E-02;
  COFD[1660] = -2.24668858E+01;
  COFD[1661] = 5.49330641E+00;
  COFD[1662] = -4.60498247E-01;
  COFD[1663] = 1.84639199E-02;
  COFD[1664] = -2.24731226E+01;
  COFD[1665] = 5.49330641E+00;
  COFD[1666] = -4.60498247E-01;
  COFD[1667] = 1.84639199E-02;
  COFD[1668] = -2.02739012E+01;
  COFD[1669] = 5.10426133E+00;
  COFD[1670] = -4.41256919E-01;
  COFD[1671] = 1.88737290E-02;
  COFD[1672] = -1.43129867E+01;
  COFD[1673] = 3.31177824E+00;
  COFD[1674] = -2.18945280E-01;
  COFD[1675] = 9.64764419E-03;
  COFD[1676] = -1.83539845E+01;
  COFD[1677] = 4.98756925E+00;
  COFD[1678] = -4.27526072E-01;
  COFD[1679] = 1.83341755E-02;
  COFD[1680] = -1.76774947E+01;
  COFD[1681] = 4.24719726E+00;
  COFD[1682] = -3.38206061E-01;
  COFD[1683] = 1.47350654E-02;
  COFD[1684] = -1.91121670E+01;
  COFD[1685] = 4.61801405E+00;
  COFD[1686] = -3.83535652E-01;
  COFD[1687] = 1.65862513E-02;
  COFD[1688] = -1.76992903E+01;
  COFD[1689] = 4.24719726E+00;
  COFD[1690] = -3.38206061E-01;
  COFD[1691] = 1.47350654E-02;
  COFD[1692] = -2.13847376E+01;
  COFD[1693] = 5.17440955E+00;
  COFD[1694] = -4.04678430E-01;
  COFD[1695] = 1.54706350E-02;
  COFD[1696] = -1.91208247E+01;
  COFD[1697] = 4.61801405E+00;
  COFD[1698] = -3.83535652E-01;
  COFD[1699] = 1.65862513E-02;
  COFD[1700] = -1.91291085E+01;
  COFD[1701] = 4.61801405E+00;
  COFD[1702] = -3.83535652E-01;
  COFD[1703] = 1.65862513E-02;
  COFD[1704] = -1.99803480E+01;
  COFD[1705] = 4.97875278E+00;
  COFD[1706] = -4.26485475E-01;
  COFD[1707] = 1.82931933E-02;
  COFD[1708] = -1.99235836E+01;
  COFD[1709] = 4.95514826E+00;
  COFD[1710] = -4.23691395E-01;
  COFD[1711] = 1.81828318E-02;
  COFD[1712] = -1.87684982E+01;
  COFD[1713] = 4.49191492E+00;
  COFD[1714] = -3.68041771E-01;
  COFD[1715] = 1.59498676E-02;
  COFD[1716] = -2.18590684E+01;
  COFD[1717] = 5.47368915E+00;
  COFD[1718] = -4.79424291E-01;
  COFD[1719] = 2.01372920E-02;
  COFD[1720] = -2.20947854E+01;
  COFD[1721] = 5.36053938E+00;
  COFD[1722] = -4.36434519E-01;
  COFD[1723] = 1.71484255E-02;
  COFD[1724] = -2.14323161E+01;
  COFD[1725] = 5.37331605E+00;
  COFD[1726] = -4.70491203E-01;
  COFD[1727] = 1.99134666E-02;
  COFD[1728] = -2.21885121E+01;
  COFD[1729] = 5.59472344E+00;
  COFD[1730] = -4.91421518E-01;
  COFD[1731] = 2.05117088E-02;
  COFD[1732] = -2.19982906E+01;
  COFD[1733] = 5.51276597E+00;
  COFD[1734] = -4.83701824E-01;
  COFD[1735] = 2.02915297E-02;
  COFD[1736] = -2.01223105E+01;
  COFD[1737] = 5.03101171E+00;
  COFD[1738] = -4.32665019E-01;
  COFD[1739] = 1.85372086E-02;
  COFD[1740] = -2.24554479E+01;
  COFD[1741] = 5.49330641E+00;
  COFD[1742] = -4.60498247E-01;
  COFD[1743] = 1.84639199E-02;
  COFD[1744] = -2.24668858E+01;
  COFD[1745] = 5.49330641E+00;
  COFD[1746] = -4.60498247E-01;
  COFD[1747] = 1.84639199E-02;
  COFD[1748] = -2.23842793E+01;
  COFD[1749] = 5.56066804E+00;
  COFD[1750] = -4.88405706E-01;
  COFD[1751] = 2.04357330E-02;
  COFD[1752] = -2.23903039E+01;
  COFD[1753] = 5.56066804E+00;
  COFD[1754] = -4.88405706E-01;
  COFD[1755] = 2.04357330E-02;
  COFD[1756] = -1.87434421E+01;
  COFD[1757] = 4.48550694E+00;
  COFD[1758] = -3.67277454E-01;
  COFD[1759] = 1.59194755E-02;
  COFD[1760] = -1.43135474E+01;
  COFD[1761] = 3.31177824E+00;
  COFD[1762] = -2.18945280E-01;
  COFD[1763] = 9.64764419E-03;
  COFD[1764] = -1.83542714E+01;
  COFD[1765] = 4.98756925E+00;
  COFD[1766] = -4.27526072E-01;
  COFD[1767] = 1.83341755E-02;
  COFD[1768] = -1.76808635E+01;
  COFD[1769] = 4.24719726E+00;
  COFD[1770] = -3.38206061E-01;
  COFD[1771] = 1.47350654E-02;
  COFD[1772] = -1.91174394E+01;
  COFD[1773] = 4.61801405E+00;
  COFD[1774] = -3.83535652E-01;
  COFD[1775] = 1.65862513E-02;
  COFD[1776] = -1.77028097E+01;
  COFD[1777] = 4.24719726E+00;
  COFD[1778] = -3.38206061E-01;
  COFD[1779] = 1.47350654E-02;
  COFD[1780] = -2.13884026E+01;
  COFD[1781] = 5.17440955E+00;
  COFD[1782] = -4.04678430E-01;
  COFD[1783] = 1.54706350E-02;
  COFD[1784] = -1.91261897E+01;
  COFD[1785] = 4.61801405E+00;
  COFD[1786] = -3.83535652E-01;
  COFD[1787] = 1.65862513E-02;
  COFD[1788] = -1.91345636E+01;
  COFD[1789] = 4.61801405E+00;
  COFD[1790] = -3.83535652E-01;
  COFD[1791] = 1.65862513E-02;
  COFD[1792] = -1.99835677E+01;
  COFD[1793] = 4.97875278E+00;
  COFD[1794] = -4.26485475E-01;
  COFD[1795] = 1.82931933E-02;
  COFD[1796] = -1.99269591E+01;
  COFD[1797] = 4.95514826E+00;
  COFD[1798] = -4.23691395E-01;
  COFD[1799] = 1.81828318E-02;
  COFD[1800] = -1.87733780E+01;
  COFD[1801] = 4.49191492E+00;
  COFD[1802] = -3.68041771E-01;
  COFD[1803] = 1.59498676E-02;
  COFD[1804] = -2.18653022E+01;
  COFD[1805] = 5.47368915E+00;
  COFD[1806] = -4.79424291E-01;
  COFD[1807] = 2.01372920E-02;
  COFD[1808] = -2.20998692E+01;
  COFD[1809] = 5.36053938E+00;
  COFD[1810] = -4.36434519E-01;
  COFD[1811] = 1.71484255E-02;
  COFD[1812] = -2.14369847E+01;
  COFD[1813] = 5.37331605E+00;
  COFD[1814] = -4.70491203E-01;
  COFD[1815] = 1.99134666E-02;
  COFD[1816] = -2.21933965E+01;
  COFD[1817] = 5.59472344E+00;
  COFD[1818] = -4.91421518E-01;
  COFD[1819] = 2.05117088E-02;
  COFD[1820] = -2.20033786E+01;
  COFD[1821] = 5.51276597E+00;
  COFD[1822] = -4.83701824E-01;
  COFD[1823] = 2.02915297E-02;
  COFD[1824] = -2.01283319E+01;
  COFD[1825] = 5.03101171E+00;
  COFD[1826] = -4.32665019E-01;
  COFD[1827] = 1.85372086E-02;
  COFD[1828] = -2.24615428E+01;
  COFD[1829] = 5.49330641E+00;
  COFD[1830] = -4.60498247E-01;
  COFD[1831] = 1.84639199E-02;
  COFD[1832] = -2.24731226E+01;
  COFD[1833] = 5.49330641E+00;
  COFD[1834] = -4.60498247E-01;
  COFD[1835] = 1.84639199E-02;
  COFD[1836] = -2.23903039E+01;
  COFD[1837] = 5.56066804E+00;
  COFD[1838] = -4.88405706E-01;
  COFD[1839] = 2.04357330E-02;
  COFD[1840] = -2.23964020E+01;
  COFD[1841] = 5.56066804E+00;
  COFD[1842] = -4.88405706E-01;
  COFD[1843] = 2.04357330E-02;
  COFD[1844] = -1.87483223E+01;
  COFD[1845] = 4.48550694E+00;
  COFD[1846] = -3.67277454E-01;
  COFD[1847] = 1.59194755E-02;
  COFD[1848] = -1.16906458E+01;
  COFD[1849] = 2.47469981E+00;
  COFD[1850] = -1.10436257E-01;
  COFD[1851] = 4.95273813E-03;
  COFD[1852] = -1.42894603E+01;
  COFD[1853] = 3.67490723E+00;
  COFD[1854] = -2.65114792E-01;
  COFD[1855] = 1.16092671E-02;
  COFD[1856] = -1.40756909E+01;
  COFD[1857] = 3.07549274E+00;
  COFD[1858] = -1.88889344E-01;
  COFD[1859] = 8.37152866E-03;
  COFD[1860] = -1.52414498E+01;
  COFD[1861] = 3.35922578E+00;
  COFD[1862] = -2.25181399E-01;
  COFD[1863] = 9.92132878E-03;
  COFD[1864] = -1.40949183E+01;
  COFD[1865] = 3.07549274E+00;
  COFD[1866] = -1.88889344E-01;
  COFD[1867] = 8.37152866E-03;
  COFD[1868] = -2.10643264E+01;
  COFD[1869] = 5.53614864E+00;
  COFD[1870] = -4.86046753E-01;
  COFD[1871] = 2.03659193E-02;
  COFD[1872] = -1.52486292E+01;
  COFD[1873] = 3.35922578E+00;
  COFD[1874] = -2.25181399E-01;
  COFD[1875] = 9.92132878E-03;
  COFD[1876] = -1.52554785E+01;
  COFD[1877] = 3.35922578E+00;
  COFD[1878] = -2.25181399E-01;
  COFD[1879] = 9.92132878E-03;
  COFD[1880] = -1.59633426E+01;
  COFD[1881] = 3.66853818E+00;
  COFD[1882] = -2.64346221E-01;
  COFD[1883] = 1.15784613E-02;
  COFD[1884] = -1.59327344E+01;
  COFD[1885] = 3.65620899E+00;
  COFD[1886] = -2.62933804E-01;
  COFD[1887] = 1.15253223E-02;
  COFD[1888] = -1.50031706E+01;
  COFD[1889] = 3.26223357E+00;
  COFD[1890] = -2.12746642E-01;
  COFD[1891] = 9.38912883E-03;
  COFD[1892] = -1.81432499E+01;
  COFD[1893] = 4.37565431E+00;
  COFD[1894] = -3.53906025E-01;
  COFD[1895] = 1.53760786E-02;
  COFD[1896] = -2.04833743E+01;
  COFD[1897] = 5.23112374E+00;
  COFD[1898] = -4.54967682E-01;
  COFD[1899] = 1.93570423E-02;
  COFD[1900] = -1.76002073E+01;
  COFD[1901] = 4.19171952E+00;
  COFD[1902] = -3.31354810E-01;
  COFD[1903] = 1.44520623E-02;
  COFD[1904] = -1.85864196E+01;
  COFD[1905] = 4.54915847E+00;
  COFD[1906] = -3.75000738E-01;
  COFD[1907] = 1.62324821E-02;
  COFD[1908] = -1.83249359E+01;
  COFD[1909] = 4.42045763E+00;
  COFD[1910] = -3.59451578E-01;
  COFD[1911] = 1.56056164E-02;
  COFD[1912] = -1.59884349E+01;
  COFD[1913] = 3.72220402E+00;
  COFD[1914] = -2.71150591E-01;
  COFD[1915] = 1.18665265E-02;
  COFD[1916] = -2.02646659E+01;
  COFD[1917] = 5.10426133E+00;
  COFD[1918] = -4.41256919E-01;
  COFD[1919] = 1.88737290E-02;
  COFD[1920] = -2.02739012E+01;
  COFD[1921] = 5.10426133E+00;
  COFD[1922] = -4.41256919E-01;
  COFD[1923] = 1.88737290E-02;
  COFD[1924] = -1.87434421E+01;
  COFD[1925] = 4.48550694E+00;
  COFD[1926] = -3.67277454E-01;
  COFD[1927] = 1.59194755E-02;
  COFD[1928] = -1.87483223E+01;
  COFD[1929] = 4.48550694E+00;
  COFD[1930] = -3.67277454E-01;
  COFD[1931] = 1.59194755E-02;
  COFD[1932] = -1.49828551E+01;
  COFD[1933] = 3.25781069E+00;
  COFD[1934] = -2.12199367E-01;
  COFD[1935] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = -1.44152190E-01;
  COFTD[5] = -7.99993584E-05;
  COFTD[6] = 4.89707442E-08;
  COFTD[7] = -9.14277269E-12;
  COFTD[8] = 4.06676789E-01;
  COFTD[9] = 3.84699853E-05;
  COFTD[10] = -2.54843294E-08;
  COFTD[11] = 5.86294132E-12;
  COFTD[12] = 4.26576987E-01;
  COFTD[13] = 1.20406440E-04;
  COFTD[14] = -7.67293441E-08;
  COFTD[15] = 1.52089282E-11;
  COFTD[16] = 4.12890501E-01;
  COFTD[17] = 3.90577773E-05;
  COFTD[18] = -2.58737105E-08;
  COFTD[19] = 5.95252260E-12;
  COFTD[20] = 2.27466103E-02;
  COFTD[21] = 6.73071543E-04;
  COFTD[22] = -3.40932103E-07;
  COFTD[23] = 5.48493184E-11;
  COFTD[24] = 4.28228101E-01;
  COFTD[25] = 1.20872486E-04;
  COFTD[26] = -7.70263335E-08;
  COFTD[27] = 1.52677960E-11;
  COFTD[28] = 4.29786829E-01;
  COFTD[29] = 1.21312456E-04;
  COFTD[30] = -7.73067054E-08;
  COFTD[31] = 1.53233700E-11;
  COFTD[32] = 3.31188133E-01;
  COFTD[33] = 1.81325042E-04;
  COFTD[34] = -1.11095367E-07;
  COFTD[35] = 2.07634046E-11;
  COFTD[36] = 3.39554500E-01;
  COFTD[37] = 1.79333587E-04;
  COFTD[38] = -1.10134815E-07;
  COFTD[39] = 2.06425572E-11;
  COFTD[40] = 4.30602469E-01;
  COFTD[41] = 9.35955212E-05;
  COFTD[42] = -6.03979306E-08;
  COFTD[43] = 1.23114290E-11;
  COFTD[44] = 2.93190141E-01;
  COFTD[45] = 4.01428114E-04;
  COFTD[46] = -2.30704675E-07;
  COFTD[47] = 4.05174676E-11;
  COFTD[48] = 1.22692619E-01;
  COFTD[49] = 6.21274281E-04;
  COFTD[50] = -3.29963157E-07;
  COFTD[51] = 5.47158146E-11;
  COFTD[52] = 3.05611370E-01;
  COFTD[53] = 3.24503916E-04;
  COFTD[54] = -1.89888419E-07;
  COFTD[55] = 3.38661408E-11;
  COFTD[56] = 2.49016176E-01;
  COFTD[57] = 4.29034331E-04;
  COFTD[58] = -2.42667349E-07;
  COFTD[59] = 4.20799172E-11;
  COFTD[60] = 2.74035711E-01;
  COFTD[61] = 3.96247941E-04;
  COFTD[62] = -2.26856932E-07;
  COFTD[63] = 3.97175174E-11;
  COFTD[64] = 3.86105710E-01;
  COFTD[65] = 2.28759408E-04;
  COFTD[66] = -1.39424407E-07;
  COFTD[67] = 2.58988578E-11;
  COFTD[68] = 1.59288295E-01;
  COFTD[69] = 6.02831194E-04;
  COFTD[70] = -3.24836171E-07;
  COFTD[71] = 5.43906658E-11;
  COFTD[72] = 1.59990556E-01;
  COFTD[73] = 6.05488919E-04;
  COFTD[74] = -3.26268289E-07;
  COFTD[75] = 5.46304600E-11;
  COFTD[76] = 2.71945062E-01;
  COFTD[77] = 4.30812732E-04;
  COFTD[78] = -2.45083425E-07;
  COFTD[79] = 4.26911430E-11;
  COFTD[80] = 2.72586795E-01;
  COFTD[81] = 4.31829359E-04;
  COFTD[82] = -2.45661770E-07;
  COFTD[83] = 4.27918850E-11;
  COFTD[84] = 4.31330748E-01;
  COFTD[85] = 9.20535689E-05;
  COFTD[86] = -5.94508898E-08;
  COFTD[87] = 1.21437846E-11;
  COFTD[88] = 1.44152190E-01;
  COFTD[89] = 7.99993584E-05;
  COFTD[90] = -4.89707442E-08;
  COFTD[91] = 9.14277269E-12;
  COFTD[92] = 0.00000000E+00;
  COFTD[93] = 0.00000000E+00;
  COFTD[94] = 0.00000000E+00;
  COFTD[95] = 0.00000000E+00;
  COFTD[96] = 2.35281489E-01;
  COFTD[97] = 4.65667373E-04;
  COFTD[98] = -2.60938016E-07;
  COFTD[99] = 4.49268709E-11;
  COFTD[100] = 1.79839678E-01;
  COFTD[101] = 6.01720824E-04;
  COFTD[102] = -3.26432767E-07;
  COFTD[103] = 5.49110406E-11;
  COFTD[104] = 2.37051899E-01;
  COFTD[105] = 4.69171356E-04;
  COFTD[106] = -2.62901483E-07;
  COFTD[107] = 4.52649298E-11;
  COFTD[108] = -1.74351746E-01;
  COFTD[109] = 8.62242165E-04;
  COFTD[110] = -3.79543417E-07;
  COFTD[111] = 5.60259034E-11;
  COFTD[112] = 1.80186380E-01;
  COFTD[113] = 6.02880848E-04;
  COFTD[114] = -3.27062078E-07;
  COFTD[115] = 5.50169005E-11;
  COFTD[116] = 1.80513126E-01;
  COFTD[117] = 6.03974096E-04;
  COFTD[118] = -3.27655164E-07;
  COFTD[119] = 5.51166667E-11;
  COFTD[120] = 1.00038655E-01;
  COFTD[121] = 6.50465703E-04;
  COFTD[122] = -3.41777446E-07;
  COFTD[123] = 5.62776574E-11;
  COFTD[124] = 1.05123703E-01;
  COFTD[125] = 6.50663360E-04;
  COFTD[126] = -3.42563171E-07;
  COFTD[127] = 5.64801866E-11;
  COFTD[128] = 2.00119185E-01;
  COFTD[129] = 5.64791694E-04;
  COFTD[130] = -3.09444383E-07;
  COFTD[131] = 5.24137469E-11;
  COFTD[132] = -2.00308977E-02;
  COFTD[133] = 8.50438113E-04;
  COFTD[134] = -4.21063477E-07;
  COFTD[135] = 6.67958138E-11;
  COFTD[136] = -1.61357064E-01;
  COFTD[137] = 9.05917454E-04;
  COFTD[138] = -4.07877889E-07;
  COFTD[139] = 6.10624399E-11;
  COFTD[140] = 1.63244604E-02;
  COFTD[141] = 7.90131000E-04;
  COFTD[142] = -3.98291254E-07;
  COFTD[143] = 6.38849501E-11;
  COFTD[144] = -5.08743421E-02;
  COFTD[145] = 8.54340362E-04;
  COFTD[146] = -4.15925370E-07;
  COFTD[147] = 6.53061561E-11;
  COFTD[148] = -2.72323151E-02;
  COFTD[149] = 8.39182512E-04;
  COFTD[150] = -4.13848987E-07;
  COFTD[151] = 6.54926559E-11;
  COFTD[152] = 9.86932164E-02;
  COFTD[153] = 7.20973229E-04;
  COFTD[154] = -3.77134366E-07;
  COFTD[155] = 6.19201176E-11;
  COFTD[156] = -1.41640200E-01;
  COFTD[157] = 9.21402335E-04;
  COFTD[158] = -4.23209196E-07;
  COFTD[159] = 6.41398937E-11;
  COFTD[160] = -1.41951569E-01;
  COFTD[161] = 9.23427864E-04;
  COFTD[162] = -4.24139542E-07;
  COFTD[163] = 6.42808932E-11;
  COFTD[164] = -4.05264355E-02;
  COFTD[165] = 8.65034494E-04;
  COFTD[166] = -4.23754623E-07;
  COFTD[167] = 6.67873033E-11;
  COFTD[168] = -4.05741399E-02;
  COFTD[169] = 8.66052741E-04;
  COFTD[170] = -4.24253431E-07;
  COFTD[171] = 6.68659197E-11;
  COFTD[172] = 2.01521521E-01;
  COFTD[173] = 5.62743751E-04;
  COFTD[174] = -3.08519054E-07;
  COFTD[175] = 5.22805672E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[22];
  amrex::Real SIG[22];
  amrex::Real wt[22];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: H2
  // Imported from NIST
  Tci[0] = 33.145000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (2.015880 * 2.015880 * 12.964000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (2.015880 * 12.964000);
  acentric_i[0] = -0.219000;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O2
  // Imported from NIST
  Tci[3] = 154.581000;
  ai[3] = 1e6 * 0.42748 * Rcst * Rcst * Tci[3] * Tci[3] /
          (31.998800 * 31.998800 * 50.430466);
  bi[3] = 0.08664 * Rcst * Tci[3] / (31.998800 * 50.430466);
  acentric_i[3] = 0.022200;

  // species 4: OH
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2O
  // Imported from NIST
  Tci[5] = 647.096000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (18.015340 * 18.015340 * 220.640000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (18.015340 * 220.640000);
  acentric_i[5] = 0.344300;

  // species 6: HO2
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: CH3
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: CH4
  // Imported from NIST
  Tci[9] = 190.560000;
  ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] /
          (16.043030 * 16.043030 * 45.990000);
  bi[9] = 0.08664 * Rcst * Tci[9] / (16.043030 * 45.990000);
  acentric_i[9] = 0.011000;

  // species 10: CO
  // Imported from NIST
  Tci[10] = 132.850000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (28.010000 * 28.010000 * 34.940000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (28.010000 * 34.940000);
  acentric_i[10] = 0.045000;

  // species 11: CO2
  // Imported from NIST
  Tci[11] = 304.120000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (44.009950 * 44.009950 * 73.740000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (44.009950 * 73.740000);
  acentric_i[11] = 0.225000;

  // species 12: CH2O
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: C2H2
  // Imported from NIST
  Tci[13] = 308.300000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (26.038000 * 26.038000 * 61.140000);
  bi[13] = 0.08664 * Rcst * Tci[13] / (26.038000 * 61.140000);
  acentric_i[13] = 0.189000;

  // species 14: C2H4
  // Imported from NIST
  Tci[14] = 282.340000;
  ai[14] = 1e6 * 0.42748 * Rcst * Rcst * Tci[14] * Tci[14] /
           (28.054000 * 28.054000 * 50.410000);
  bi[14] = 0.08664 * Rcst * Tci[14] / (28.054000 * 50.410000);
  acentric_i[14] = 0.087000;

  // species 15: C2H6
  // Imported from NIST
  Tci[15] = 305.320000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (30.070120 * 30.070120 * 48.720000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (30.070120 * 48.720000);
  acentric_i[15] = 0.099000;

  // species 16: HCCO
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: CH2CO
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: CH3CHO
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: aC3H5
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C3H6
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: N2
  // Imported from NIST
  Tci[21] = 126.192000;
  ai[21] = 1e6 * 0.42748 * Rcst * Rcst * Tci[21] * Tci[21] /
           (28.013400 * 28.013400 * 33.958000);
  bi[21] = 0.08664 * Rcst * Tci[21] / (28.013400 * 33.958000);
  acentric_i[21] = 0.037200;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  Ar
1  N
2  H
3  O
4  C
*/

// Species
#define AR_ID 0
#define N2_ID 1
#define H_ID 2
#define O_ID 3
#define OH_ID 4
#define HO2_ID 5
#define H2_ID 6
#define H2O_ID 7
#define H2O2_ID 8
#define O2_ID 9
#define CH3_ID 10
#define CH4_ID 11
#define HCO_ID 12
#define CH2O_ID 13
#define CH3O_ID 14
#define CH3OH_ID 15
#define CO_ID 16
#define CO2_ID 17
#define C2H2_ID 18
#define C2H3_ID 19
#define C2H4_ID 20
#define C2H5_ID 21
#define C2H6_ID 22
#define HCCO_ID 23
#define CH2CO_ID 24
#define CH2CHO_ID 25
#define CH2OCH2_ID 26
#define aC3H4_ID 27
#define aC3H5_ID 28
#define C3H6_ID 29
#define nC3H7_ID 30
#define C4H81_ID 31
#define N_ID 32
#define NO_ID 33
#define NO2_ID 34
#define HCNO_ID 35
#define HNCO_ID 36
#define NCO_ID 37
#define CH3O2_ID 38

#define NUM_ELEMENTS 5
#define NUM_SPECIES 39
#define NUM_IONS 0
#define NUM_REACTIONS 269

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 5;
  kk = 39;
  ii = 269;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[39] = {
  0.0250312891113892, // AR
  0.0356964374955379, // N2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0312090381374446, // CH3OH
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0232315019165989, // CH2CHO
  0.0226999296302181, // CH2OCH2
  0.0249594409085237, // aC3H4
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0232077792476038, // nC3H7
  0.0178227703714265, // C4H81
  0.0713928749910759, // N
  0.0333266679997334, // NO
  0.0217367677426367, // NO2
  0.0232423009877978, // HCNO
  0.0232423009877978, // HNCO
  0.0237998905205036, // NCO
  0.0212616673399528, // CH3O2
};
const amrex::Real h_global_imw[39] = {
  0.0250312891113892, // AR
  0.0356964374955379, // N2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0312090381374446, // CH3OH
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0232315019165989, // CH2CHO
  0.0226999296302181, // CH2OCH2
  0.0249594409085237, // aC3H4
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0232077792476038, // nC3H7
  0.0178227703714265, // C4H81
  0.0713928749910759, // N
  0.0333266679997334, // NO
  0.0217367677426367, // NO2
  0.0232423009877978, // HCNO
  0.0232423009877978, // HNCO
  0.0237998905205036, // NCO
  0.0212616673399528, // CH3O2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[39] = {
  39.950000, // AR
  28.014000, // N2
  1.008000,  // H
  15.999000, // O
  17.007000, // OH
  33.006000, // HO2
  2.016000,  // H2
  18.015000, // H2O
  34.014000, // H2O2
  31.998000, // O2
  15.035000, // CH3
  16.043000, // CH4
  29.018000, // HCO
  30.026000, // CH2O
  31.034000, // CH3O
  32.042000, // CH3OH
  28.010000, // CO
  44.009000, // CO2
  26.038000, // C2H2
  27.046000, // C2H3
  28.054000, // C2H4
  29.062000, // C2H5
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  43.045000, // CH2CHO
  44.053000, // CH2OCH2
  40.065000, // aC3H4
  41.073000, // aC3H5
  42.081000, // C3H6
  43.089000, // nC3H7
  56.108000, // C4H81
  14.007000, // N
  30.006000, // NO
  46.005000, // NO2
  43.025000, // HCNO
  43.025000, // HNCO
  42.017000, // NCO
  47.033000, // CH3O2
};
const amrex::Real h_global_mw[39] = {
  39.950000, // AR
  28.014000, // N2
  1.008000,  // H
  15.999000, // O
  17.007000, // OH
  33.006000, // HO2
  2.016000,  // H2
  18.015000, // H2O
  34.014000, // H2O2
  31.998000, // O2
  15.035000, // CH3
  16.043000, // CH4
  29.018000, // HCO
  30.026000, // CH2O
  31.034000, // CH3O
  32.042000, // CH3OH
  28.010000, // CO
  44.009000, // CO2
  26.038000, // C2H2
  27.046000, // C2H3
  28.054000, // C2H4
  29.062000, // C2H5
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  43.045000, // CH2CHO
  44.053000, // CH2OCH2
  40.065000, // aC3H4
  41.073000, // aC3H5
  42.081000, // C3H6
  43.089000, // nC3H7
  56.108000, // C4H81
  14.007000, // N
  30.006000, // NO
  46.005000, // NO2
  43.025000, // HCNO
  43.025000, // HNCO
  42.017000, // NCO
  47.033000, // CH3O2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0250312891113892;  // AR
  imw_new[1] = 0.0356964374955379;  // N2
  imw_new[2] = 0.9920634920634921;  // H
  imw_new[3] = 0.0625039064941559;  // O
  imw_new[4] = 0.0587993179279120;  // OH
  imw_new[5] = 0.0302975216627280;  // HO2
  imw_new[6] = 0.4960317460317460;  // H2
  imw_new[7] = 0.0555092978073827;  // H2O
  imw_new[8] = 0.0293996589639560;  // H2O2
  imw_new[9] = 0.0312519532470779;  // O2
  imw_new[10] = 0.0665114732291320; // CH3
  imw_new[11] = 0.0623324814560868; // CH4
  imw_new[12] = 0.0344613688055690; // HCO
  imw_new[13] = 0.0333044694598015; // CH2O
  imw_new[14] = 0.0322227234645872; // CH3O
  imw_new[15] = 0.0312090381374446; // CH3OH
  imw_new[16] = 0.0357015351660121; // CO
  imw_new[17] = 0.0227226249176305; // CO2
  imw_new[18] = 0.0384054074813734; // C2H2
  imw_new[19] = 0.0369740442209569; // C2H3
  imw_new[20] = 0.0356455407428531; // C2H4
  imw_new[21] = 0.0344091941366733; // C2H5
  imw_new[22] = 0.0332557366145660; // C2H6
  imw_new[23] = 0.0243730044602598; // HCCO
  imw_new[24] = 0.0237885672145967; // CH2CO
  imw_new[25] = 0.0232315019165989; // CH2CHO
  imw_new[26] = 0.0226999296302181; // CH2OCH2
  imw_new[27] = 0.0249594409085237; // aC3H4
  imw_new[28] = 0.0243468945535997; // aC3H5
  imw_new[29] = 0.0237636938285687; // C3H6
  imw_new[30] = 0.0232077792476038; // nC3H7
  imw_new[31] = 0.0178227703714265; // C4H81
  imw_new[32] = 0.0713928749910759; // N
  imw_new[33] = 0.0333266679997334; // NO
  imw_new[34] = 0.0217367677426367; // NO2
  imw_new[35] = 0.0232423009877978; // HCNO
  imw_new[36] = 0.0232423009877978; // HNCO
  imw_new[37] = 0.0237998905205036; // NCO
  imw_new[38] = 0.0212616673399528; // CH3O2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 39.950000;  // AR
  mw_new[1] = 28.014000;  // N2
  mw_new[2] = 1.008000;   // H
  mw_new[3] = 15.999000;  // O
  mw_new[4] = 17.007000;  // OH
  mw_new[5] = 33.006000;  // HO2
  mw_new[6] = 2.016000;   // H2
  mw_new[7] = 18.015000;  // H2O
  mw_new[8] = 34.014000;  // H2O2
  mw_new[9] = 31.998000;  // O2
  mw_new[10] = 15.035000; // CH3
  mw_new[11] = 16.043000; // CH4
  mw_new[12] = 29.018000; // HCO
  mw_new[13] = 30.026000; // CH2O
  mw_new[14] = 31.034000; // CH3O
  mw_new[15] = 32.042000; // CH3OH
  mw_new[16] = 28.010000; // CO
  mw_new[17] = 44.009000; // CO2
  mw_new[18] = 26.038000; // C2H2
  mw_new[19] = 27.046000; // C2H3
  mw_new[20] = 28.054000; // C2H4
  mw_new[21] = 29.062000; // C2H5
  mw_new[22] = 30.070000; // C2H6
  mw_new[23] = 41.029000; // HCCO
  mw_new[24] = 42.037000; // CH2CO
  mw_new[25] = 43.045000; // CH2CHO
  mw_new[26] = 44.053000; // CH2OCH2
  mw_new[27] = 40.065000; // aC3H4
  mw_new[28] = 41.073000; // aC3H5
  mw_new[29] = 42.081000; // C3H6
  mw_new[30] = 43.089000; // nC3H7
  mw_new[31] = 56.108000; // C4H81
  mw_new[32] = 14.007000; // N
  mw_new[33] = 30.006000; // NO
  mw_new[34] = 46.005000; // NO2
  mw_new[35] = 43.025000; // HCNO
  mw_new[36] = 43.025000; // HNCO
  mw_new[37] = 42.017000; // NCO
  mw_new[38] = 47.033000; // CH3O2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +1.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485400e-12 * tc[4];
    // species 2: H
    species[2] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 3: O
    species[3] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 4: OH
    species[4] = +3.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 5: HO2
    species[5] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 6: H2
    species[6] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 7: H2O
    species[7] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 8: H2O2
    species[8] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 9: O2
    species[9] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 10: CH3
    species[10] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                  5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                  2.54385734e-12 * tc[4];
    // species 11: CH4
    species[11] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 12: HCO
    species[12] = +3.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 13: CH2O
    species[13] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 14: CH3O
    species[14] = +2.71180502e+00 - 2.80463306e-03 * tc[1] +
                  3.76550971e-05 * tc[2] - 4.73072089e-08 * tc[3] +
                  1.86588420e-11 * tc[4];
    // species 15: CH3OH
    species[15] = +4.71539582e+00 - 1.52309129e-02 * tc[1] +
                  6.52441155e-05 * tc[2] - 7.10806889e-08 * tc[3] +
                  2.61352698e-11 * tc[4];
    // species 16: CO
    species[16] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 17: CO2
    species[17] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 18: C2H2
    species[18] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 19: C2H3
    species[19] = +2.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 20: C2H4
    species[20] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 21: C2H5
    species[21] = +3.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 22: C2H6
    species[22] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 23: HCCO
    species[23] = +1.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 24: CH2CO
    species[24] = +1.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 25: CH2CHO
    species[25] = +2.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 26: CH2OCH2
    species[26] = +2.75905320e+00 - 9.44121800e-03 * tc[1] +
                  8.03097210e-05 * tc[2] - 1.00807880e-07 * tc[3] +
                  4.00399210e-11 * tc[4];
    // species 27: aC3H4
    species[27] = +1.61304450e+00 + 1.21225750e-02 * tc[1] +
                  1.85398800e-05 * tc[2] - 3.45251490e-08 * tc[3] +
                  1.53350790e-11 * tc[4];
    // species 28: aC3H5
    species[28] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 29: C3H6
    species[29] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 30: nC3H7
    species[30] = +4.91173000e-02 + 2.60089730e-02 * tc[1] +
                  2.35425160e-06 * tc[2] - 1.95951320e-08 * tc[3] +
                  9.37202070e-12 * tc[4];
    // species 31: C4H81
    species[31] = +1.81138000e-01 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 32: N
    species[32] = +1.50000000e+00 + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 33: NO
    species[33] = +3.21847630e+00 - 4.63897600e-03 * tc[1] +
                  1.10410220e-05 * tc[2] - 9.33613540e-09 * tc[3] +
                  2.80357700e-12 * tc[4];
    // species 34: NO2
    species[34] = +2.94403120e+00 - 1.58542900e-03 * tc[1] +
                  1.66578120e-05 * tc[2] - 2.04754260e-08 * tc[3] +
                  7.83505640e-12 * tc[4];
    // species 37: NCO
    species[37] = +1.82693080e+00 + 8.80516880e-03 * tc[1] -
                  8.38661340e-06 * tc[2] + 4.80169640e-09 * tc[3] -
                  1.33135950e-12 * tc[4];
    // species 38: CH3O2
    species[38] = +7.35339000e-01 + 2.22003400e-02 * tc[1] -
                  1.88414600e-05 * tc[2] + 9.50131400e-09 * tc[3] -
                  2.21726900e-12 * tc[4];
  } else {
    // species 1: N2
    species[1] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                 5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 2: H
    species[2] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 3: O
    species[3] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 4: OH
    species[4] = +1.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 5: HO2
    species[5] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 6: H2
    species[6] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 7: H2O
    species[7] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 8: H2O2
    species[8] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 9: O2
    species[9] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 10: CH3
    species[10] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                  2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                  4.67154394e-14 * tc[4];
    // species 11: CH4
    species[11] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 12: HCO
    species[12] = +1.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 13: CH2O
    species[13] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 14: CH3O
    species[14] = +3.75779238e+00 + 7.44142474e-03 * tc[1] -
                  2.69705176e-06 * tc[2] + 4.38090504e-10 * tc[3] -
                  2.63537098e-14 * tc[4];
    // species 15: CH3OH
    species[15] = +7.89707910e-01 + 1.40938292e-02 * tc[1] -
                  6.36500835e-06 * tc[2] + 1.38171085e-09 * tc[3] -
                  1.17060220e-13 * tc[4];
    // species 16: CO
    species[16] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 17: CO2
    species[17] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 18: C2H2
    species[18] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 19: C2H3
    species[19] = +2.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 20: C2H4
    species[20] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 21: C2H5
    species[21] = +9.54656420e-01 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 22: C2H6
    species[22] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 23: HCCO
    species[23] = +4.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 24: CH2CO
    species[24] = +3.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +4.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 26: CH2OCH2
    species[26] = +4.48876410e+00 + 1.20461900e-02 * tc[1] -
                  4.33369310e-06 * tc[2] + 7.00283110e-10 * tc[3] -
                  4.19490880e-14 * tc[4];
    // species 27: aC3H4
    species[27] = +5.31687220e+00 + 1.11337280e-02 * tc[1] -
                  3.96293780e-06 * tc[2] + 6.35642380e-10 * tc[3] -
                  3.78755400e-14 * tc[4];
    // species 28: aC3H5
    species[28] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 29: C3H6
    species[29] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 30: nC3H7
    species[30] = +6.70974790e+00 + 1.60314850e-02 * tc[1] -
                  5.27202380e-06 * tc[2] + 7.58883520e-10 * tc[3] -
                  3.88627190e-14 * tc[4];
    // species 31: C4H81
    species[31] = +1.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 32: N
    species[32] = +1.41594290e+00 + 1.74890650e-04 * tc[1] -
                  1.19023690e-07 * tc[2] + 3.02262450e-11 * tc[3] -
                  2.03609820e-15 * tc[4];
    // species 33: NO
    species[33] = +2.26060560e+00 + 1.19110430e-03 * tc[1] -
                  4.29170480e-07 * tc[2] + 6.94576690e-11 * tc[3] -
                  4.03360990e-15 * tc[4];
    // species 34: NO2
    species[34] = +3.88475420e+00 + 2.17239560e-03 * tc[1] -
                  8.28069060e-07 * tc[2] + 1.57475100e-10 * tc[3] -
                  1.05108950e-14 * tc[4];
    // species 37: NCO
    species[37] = +4.15218450e+00 + 2.30517610e-03 * tc[1] -
                  8.80331530e-07 * tc[2] + 1.47890980e-10 * tc[3] -
                  9.09779960e-15 * tc[4];
    // species 38: CH3O2
    species[38] = +7.00891500e+00 + 5.46924100e-03 * tc[1] -
                  1.24339200e-06 * tc[2] + 1.49181300e-10 * tc[3] -
                  7.61853300e-15 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +1.64727989e+00 + 1.27505342e-02 * tc[1] -
                  1.04794236e-05 * tc[2] + 4.41432836e-09 * tc[3] -
                  7.57521466e-13 * tc[4];
  } else {
    // species 35: HCNO
    species[35] = +5.59860456e+00 + 3.02778626e-03 * tc[1] -
                  1.07704346e-06 * tc[2] + 1.71666528e-10 * tc[3] -
                  1.01439391e-14 * tc[4];
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +2.63096317e+00 + 7.30282357e-03 * tc[1] -
                  2.28050003e-06 * tc[2] - 6.61271298e-10 * tc[3] +
                  3.62235752e-13 * tc[4];
  } else {
    // species 36: HNCO
    species[36] = +5.22395134e+00 + 3.17864004e-03 * tc[1] -
                  1.09378755e-06 * tc[2] + 1.70735163e-10 * tc[3] -
                  9.95021955e-15 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +2.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485400e-12 * tc[4];
    // species 2: H
    species[2] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 3: O
    species[3] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 4: OH
    species[4] = +4.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 5: HO2
    species[5] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 6: H2
    species[6] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 7: H2O
    species[7] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 8: H2O2
    species[8] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 9: O2
    species[9] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 10: CH3
    species[10] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                  5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                  2.54385734e-12 * tc[4];
    // species 11: CH4
    species[11] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 12: HCO
    species[12] = +4.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 13: CH2O
    species[13] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 14: CH3O
    species[14] = +3.71180502e+00 - 2.80463306e-03 * tc[1] +
                  3.76550971e-05 * tc[2] - 4.73072089e-08 * tc[3] +
                  1.86588420e-11 * tc[4];
    // species 15: CH3OH
    species[15] = +5.71539582e+00 - 1.52309129e-02 * tc[1] +
                  6.52441155e-05 * tc[2] - 7.10806889e-08 * tc[3] +
                  2.61352698e-11 * tc[4];
    // species 16: CO
    species[16] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 17: CO2
    species[17] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 18: C2H2
    species[18] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 19: C2H3
    species[19] = +3.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 20: C2H4
    species[20] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 21: C2H5
    species[21] = +4.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 22: C2H6
    species[22] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 23: HCCO
    species[23] = +2.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 24: CH2CO
    species[24] = +2.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 25: CH2CHO
    species[25] = +3.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 26: CH2OCH2
    species[26] = +3.75905320e+00 - 9.44121800e-03 * tc[1] +
                  8.03097210e-05 * tc[2] - 1.00807880e-07 * tc[3] +
                  4.00399210e-11 * tc[4];
    // species 27: aC3H4
    species[27] = +2.61304450e+00 + 1.21225750e-02 * tc[1] +
                  1.85398800e-05 * tc[2] - 3.45251490e-08 * tc[3] +
                  1.53350790e-11 * tc[4];
    // species 28: aC3H5
    species[28] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 29: C3H6
    species[29] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 30: nC3H7
    species[30] = +1.04911730e+00 + 2.60089730e-02 * tc[1] +
                  2.35425160e-06 * tc[2] - 1.95951320e-08 * tc[3] +
                  9.37202070e-12 * tc[4];
    // species 31: C4H81
    species[31] = +1.18113800e+00 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 32: N
    species[32] = +2.50000000e+00 + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 33: NO
    species[33] = +4.21847630e+00 - 4.63897600e-03 * tc[1] +
                  1.10410220e-05 * tc[2] - 9.33613540e-09 * tc[3] +
                  2.80357700e-12 * tc[4];
    // species 34: NO2
    species[34] = +3.94403120e+00 - 1.58542900e-03 * tc[1] +
                  1.66578120e-05 * tc[2] - 2.04754260e-08 * tc[3] +
                  7.83505640e-12 * tc[4];
    // species 37: NCO
    species[37] = +2.82693080e+00 + 8.80516880e-03 * tc[1] -
                  8.38661340e-06 * tc[2] + 4.80169640e-09 * tc[3] -
                  1.33135950e-12 * tc[4];
    // species 38: CH3O2
    species[38] = +1.73533900e+00 + 2.22003400e-02 * tc[1] -
                  1.88414600e-05 * tc[2] + 9.50131400e-09 * tc[3] -
                  2.21726900e-12 * tc[4];
  } else {
    // species 1: N2
    species[1] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                 5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 2: H
    species[2] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 3: O
    species[3] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 4: OH
    species[4] = +2.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 5: HO2
    species[5] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 6: H2
    species[6] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 7: H2O
    species[7] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 8: H2O2
    species[8] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 9: O2
    species[9] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 10: CH3
    species[10] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                  2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                  4.67154394e-14 * tc[4];
    // species 11: CH4
    species[11] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 12: HCO
    species[12] = +2.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 13: CH2O
    species[13] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 14: CH3O
    species[14] = +4.75779238e+00 + 7.44142474e-03 * tc[1] -
                  2.69705176e-06 * tc[2] + 4.38090504e-10 * tc[3] -
                  2.63537098e-14 * tc[4];
    // species 15: CH3OH
    species[15] = +1.78970791e+00 + 1.40938292e-02 * tc[1] -
                  6.36500835e-06 * tc[2] + 1.38171085e-09 * tc[3] -
                  1.17060220e-13 * tc[4];
    // species 16: CO
    species[16] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 17: CO2
    species[17] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 18: C2H2
    species[18] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 19: C2H3
    species[19] = +3.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 20: C2H4
    species[20] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 21: C2H5
    species[21] = +1.95465642e+00 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 22: C2H6
    species[22] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 23: HCCO
    species[23] = +5.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 24: CH2CO
    species[24] = +4.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +5.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 26: CH2OCH2
    species[26] = +5.48876410e+00 + 1.20461900e-02 * tc[1] -
                  4.33369310e-06 * tc[2] + 7.00283110e-10 * tc[3] -
                  4.19490880e-14 * tc[4];
    // species 27: aC3H4
    species[27] = +6.31687220e+00 + 1.11337280e-02 * tc[1] -
                  3.96293780e-06 * tc[2] + 6.35642380e-10 * tc[3] -
                  3.78755400e-14 * tc[4];
    // species 28: aC3H5
    species[28] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 29: C3H6
    species[29] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 30: nC3H7
    species[30] = +7.70974790e+00 + 1.60314850e-02 * tc[1] -
                  5.27202380e-06 * tc[2] + 7.58883520e-10 * tc[3] -
                  3.88627190e-14 * tc[4];
    // species 31: C4H81
    species[31] = +2.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 32: N
    species[32] = +2.41594290e+00 + 1.74890650e-04 * tc[1] -
                  1.19023690e-07 * tc[2] + 3.02262450e-11 * tc[3] -
                  2.03609820e-15 * tc[4];
    // species 33: NO
    species[33] = +3.26060560e+00 + 1.19110430e-03 * tc[1] -
                  4.29170480e-07 * tc[2] + 6.94576690e-11 * tc[3] -
                  4.03360990e-15 * tc[4];
    // species 34: NO2
    species[34] = +4.88475420e+00 + 2.17239560e-03 * tc[1] -
                  8.28069060e-07 * tc[2] + 1.57475100e-10 * tc[3] -
                  1.05108950e-14 * tc[4];
    // species 37: NCO
    species[37] = +5.15218450e+00 + 2.30517610e-03 * tc[1] -
                  8.80331530e-07 * tc[2] + 1.47890980e-10 * tc[3] -
                  9.09779960e-15 * tc[4];
    // species 38: CH3O2
    species[38] = +8.00891500e+00 + 5.46924100e-03 * tc[1] -
                  1.24339200e-06 * tc[2] + 1.49181300e-10 * tc[3] -
                  7.61853300e-15 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +2.64727989e+00 + 1.27505342e-02 * tc[1] -
                  1.04794236e-05 * tc[2] + 4.41432836e-09 * tc[3] -
                  7.57521466e-13 * tc[4];
  } else {
    // species 35: HCNO
    species[35] = +6.59860456e+00 + 3.02778626e-03 * tc[1] -
                  1.07704346e-06 * tc[2] + 1.71666528e-10 * tc[3] -
                  1.01439391e-14 * tc[4];
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +3.63096317e+00 + 7.30282357e-03 * tc[1] -
                  2.28050003e-06 * tc[2] - 6.61271298e-10 * tc[3] +
                  3.62235752e-13 * tc[4];
  } else {
    // species 36: HNCO
    species[36] = +6.22395134e+00 + 3.17864004e-03 * tc[1] -
                  1.09378755e-06 * tc[2] + 1.70735163e-10 * tc[3] -
                  9.95021955e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = -7.453750000000000e+02 * invT - 1.866000000000000e+00 -
               2.500000000000000e+00 * tc[0] - 0.000000000000000e+00 * tc[1] -
               0.000000000000000e+00 * tc[2] - 0.000000000000000e+00 * tc[3] -
               0.000000000000000e+00 * tc[4];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                 3.298677000000000e+00 * tc[0] - 7.041202000000000e-04 * tc[1] +
                 6.605369999999999e-07 * tc[2] - 4.701262500000001e-10 * tc[3] +
                 1.222427000000000e-13 * tc[4];
    // species 2: H
    species[2] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 3: O
    species[3] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 4: OH
    species[4] = +3.381538120000000e+03 * invT + 4.815738570000000e+00 -
                 4.125305610000000e+00 * tc[0] + 1.612724695000000e-03 * tc[1] -
                 1.087941151666667e-06 * tc[2] + 4.832113691666666e-10 * tc[3] -
                 1.031186895000000e-13 * tc[4];
    // species 5: HO2
    species[5] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 6: H2
    species[6] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 7: H2O
    species[7] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 8: H2O2
    species[8] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 9: O2
    species[9] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 10: CH3
    species[10] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                  3.673590400000000e+00 * tc[0] -
                  1.005475875000000e-03 * tc[1] -
                  9.550364266666668e-07 * tc[2] +
                  5.725978541666666e-10 * tc[3] - 1.271928670000000e-13 * tc[4];
    // species 11: CH4
    species[11] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                  5.149876130000000e+00 * tc[0] +
                  6.835489400000000e-03 * tc[1] -
                  8.196676650000000e-06 * tc[2] +
                  4.039525216666667e-09 * tc[3] - 8.334697800000000e-13 * tc[4];
    // species 12: HCO
    species[12] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                  4.221185840000000e+00 * tc[0] +
                  1.621962660000000e-03 * tc[1] -
                  2.296657433333333e-06 * tc[2] +
                  1.109534108333333e-09 * tc[3] - 2.168844325000000e-13 * tc[4];
    // species 13: CH2O
    species[13] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 14: CH3O
    species[14] = +1.295697600000000e+03 * invT - 2.860603620000000e+00 -
                  3.711805020000000e+00 * tc[0] +
                  1.402316530000000e-03 * tc[1] -
                  6.275849516666667e-06 * tc[2] +
                  3.942267408333333e-09 * tc[3] - 9.329421000000001e-13 * tc[4];
    // species 15: CH3OH
    species[15] = -2.564276560000000e+04 * invT + 7.219494050000001e+00 -
                  5.715395820000000e+00 * tc[0] +
                  7.615456450000000e-03 * tc[1] -
                  1.087401925000000e-05 * tc[2] +
                  5.923390741666667e-09 * tc[3] - 1.306763490000000e-12 * tc[4];
    // species 16: CO
    species[16] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 17: CO2
    species[17] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 19: C2H3
    species[19] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                  3.212466450000000e+00 * tc[0] -
                  7.573958100000000e-04 * tc[1] -
                  4.320156866666666e-06 * tc[2] +
                  2.980482058333333e-09 * tc[3] - 7.357543650000000e-13 * tc[4];
    // species 20: C2H4
    species[20] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 21: C2H5
    species[21] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                  4.306465680000000e+00 * tc[0] +
                  2.093294460000000e-03 * tc[1] -
                  8.285713450000000e-06 * tc[2] +
                  4.992721716666666e-09 * tc[3] - 1.152545020000000e-12 * tc[4];
    // species 22: C2H6
    species[22] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 23: HCCO
    species[23] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * tc[0] -
                  8.827510500000000e-03 * tc[1] +
                  3.954850166666666e-06 * tc[2] -
                  1.439646583333334e-09 * tc[3] + 2.533240550000000e-13 * tc[4];
    // species 24: CH2CO
    species[24] = -7.270000000000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * tc[0] -
                  9.059436050000000e-03 * tc[1] +
                  2.899124566666666e-06 * tc[2] -
                  7.786646400000000e-10 * tc[3] + 1.007288075000000e-13 * tc[4];
    // species 25: CH2CHO
    species[25] = +6.200000000000000e+01 * invT - 6.162391100000001e+00 -
                  3.409062400000000e+00 * tc[0] -
                  5.369287000000000e-03 * tc[1] -
                  3.152487500000000e-07 * tc[2] +
                  5.965485916666667e-10 * tc[3] - 1.433692550000000e-13 * tc[4];
    // species 26: CH2OCH2
    species[26] = -7.560814300000000e+03 * invT - 4.090694300000001e+00 -
                  3.759053200000000e+00 * tc[0] +
                  4.720609000000000e-03 * tc[1] -
                  1.338495350000000e-05 * tc[2] +
                  8.400656666666666e-09 * tc[3] - 2.001996050000000e-12 * tc[4];
    // species 27: aC3H4
    species[27] = +2.154156700000000e+04 * invT - 7.613094500000000e+00 -
                  2.613044500000000e+00 * tc[0] -
                  6.061287500000000e-03 * tc[1] -
                  3.089980000000000e-06 * tc[2] +
                  2.877095750000000e-09 * tc[3] - 7.667539500000001e-13 * tc[4];
    // species 28: aC3H5
    species[28] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 29: C3H6
    species[29] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 30: nC3H7
    species[30] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                  1.049117300000000e+00 * tc[0] -
                  1.300448650000000e-02 * tc[1] -
                  3.923752666666667e-07 * tc[2] +
                  1.632927666666667e-09 * tc[3] - 4.686010350000000e-13 * tc[4];
    // species 31: C4H81
    species[31] = -1.790400400000000e+03 * invT - 1.988133100000000e+01 -
                  1.181138000000000e+00 * tc[0] -
                  1.542669000000000e-02 * tc[1] -
                  8.477541166666667e-07 * tc[2] +
                  2.054574000000000e-09 * tc[3] - 5.555096499999999e-13 * tc[4];
    // species 32: N
    species[32] = +5.610463700000000e+04 * invT - 1.693908700000000e+00 -
                  2.500000000000000e+00 * tc[0] -
                  0.000000000000000e+00 * tc[1] -
                  0.000000000000000e+00 * tc[2] -
                  0.000000000000000e+00 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 33: NO
    species[33] = +9.844623000000000e+03 * invT + 1.937629900000000e+00 -
                  4.218476300000000e+00 * tc[0] +
                  2.319488000000000e-03 * tc[1] -
                  1.840170333333333e-06 * tc[2] +
                  7.780112833333333e-10 * tc[3] - 1.401788500000000e-13 * tc[4];
    // species 34: NO2
    species[34] = +2.896617900000000e+03 * invT - 2.367960500000000e+00 -
                  3.944031200000000e+00 * tc[0] +
                  7.927145000000000e-04 * tc[1] -
                  2.776302000000000e-06 * tc[2] +
                  1.706285500000000e-09 * tc[3] - 3.917528200000000e-13 * tc[4];
    // species 37: NCO
    species[37] = +1.468247700000000e+04 * invT - 6.723533800000000e+00 -
                  2.826930800000000e+00 * tc[0] -
                  4.402584400000000e-03 * tc[1] +
                  1.397768900000000e-06 * tc[2] -
                  4.001413666666666e-10 * tc[3] + 6.656797500000001e-14 * tc[4];
    // species 38: CH3O2
    species[38] = +7.400789000000000e+02 * invT - 1.422992100000000e+01 -
                  1.735339000000000e+00 * tc[0] -
                  1.110017000000000e-02 * tc[1] +
                  3.140243333333333e-06 * tc[2] -
                  7.917761666666666e-10 * tc[3] + 1.108634500000000e-13 * tc[4];
  } else {
    // species 1: N2
    species[1] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                 2.926640000000000e+00 * tc[0] - 7.439884000000000e-04 * tc[1] +
                 9.474600000000001e-08 * tc[2] - 8.414198333333333e-12 * tc[3] +
                 3.376675500000000e-16 * tc[4];
    // species 2: H
    species[2] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 3: O
    species[3] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 4: OH
    species[4] = +3.718857740000000e+03 * invT - 2.836911870000000e+00 -
                 2.864728860000000e+00 * tc[0] - 5.282522400000000e-04 * tc[1] +
                 4.318045966666667e-08 * tc[2] - 2.543488950000000e-12 * tc[3] +
                 6.659793800000000e-17 * tc[4];
    // species 5: HO2
    species[5] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 6: H2
    species[6] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 7: H2O
    species[7] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 8: H2O2
    species[8] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 9: O2
    species[9] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 10: CH3
    species[10] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                  2.285717720000000e+00 * tc[0] -
                  3.619950185000000e-03 * tc[1] +
                  4.978572466666667e-07 * tc[2] -
                  4.964038700000000e-11 * tc[3] + 2.335771970000000e-15 * tc[4];
    // species 11: CH4
    species[11] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                  7.485149500000000e-02 * tc[0] -
                  6.695473350000000e-03 * tc[1] +
                  9.554763483333333e-07 * tc[2] -
                  1.019104458333333e-10 * tc[3] + 5.090761500000000e-15 * tc[4];
    // species 12: HCO
    species[12] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                  2.772174380000000e+00 * tc[0] -
                  2.478477630000000e-03 * tc[1] +
                  4.140760216666667e-07 * tc[2] -
                  4.909681483333334e-11 * tc[3] + 2.667543555000000e-15 * tc[4];
    // species 13: CH2O
    species[13] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 14: CH3O
    species[14] = +3.781119400000000e+02 * invT + 6.724592660000000e+00 -
                  4.757792380000000e+00 * tc[0] -
                  3.720712370000000e-03 * tc[1] +
                  4.495086266666666e-07 * tc[2] -
                  3.650754200000000e-11 * tc[3] + 1.317685490000000e-15 * tc[4];
    // species 15: CH3OH
    species[15] = -2.537487470000000e+04 * invT - 1.271265439000000e+01 -
                  1.789707910000000e+00 * tc[0] -
                  7.046914600000000e-03 * tc[1] +
                  1.060834725000000e-06 * tc[2] -
                  1.151425708333333e-10 * tc[3] + 5.853011000000000e-15 * tc[4];
    // species 16: CO
    species[16] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 17: CO2
    species[17] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 19: C2H3
    species[19] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                  3.016724000000000e+00 * tc[0] -
                  5.165114600000000e-03 * tc[1] +
                  7.801372483333333e-07 * tc[2] -
                  8.480274000000000e-11 * tc[3] + 4.313035205000000e-15 * tc[4];
    // species 20: C2H4
    species[20] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 21: C2H5
    species[21] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                  1.954656420000000e+00 * tc[0] -
                  8.698636100000001e-03 * tc[1] +
                  1.330344446666667e-06 * tc[2] -
                  1.460147408333333e-10 * tc[3] + 7.482078800000000e-15 * tc[4];
    // species 22: C2H6
    species[22] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 23: HCCO
    species[23] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * tc[0] -
                  2.042670050000000e-03 * tc[1] +
                  2.655757833333333e-07 * tc[2] -
                  2.385504333333333e-11 * tc[3] + 9.703915999999999e-16 * tc[4];
    // species 24: CH2CO
    species[24] = -7.778500000000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * tc[0] -
                  4.501798725000000e-03 * tc[1] +
                  6.948993916666666e-07 * tc[2] -
                  7.694549016666667e-11 * tc[3] + 3.974191005000000e-15 * tc[4];
    // species 25: CH2CHO
    species[25] = -9.695000000000000e+02 * invT + 1.100775780000000e+01 -
                  5.975669900000000e+00 * tc[0] -
                  4.065295700000000e-03 * tc[1] +
                  4.572707500000000e-07 * tc[2] -
                  3.391920083333333e-11 * tc[3] + 1.088008550000000e-15 * tc[4];
    // species 26: CH2OCH2
    species[26] = -9.180425100000000e+03 * invT + 1.256872460000000e+01 -
                  5.488764100000000e+00 * tc[0] -
                  6.023095000000000e-03 * tc[1] +
                  7.222821833333333e-07 * tc[2] -
                  5.835692583333333e-11 * tc[3] + 2.097454400000000e-15 * tc[4];
    // species 27: aC3H4
    species[27] = +2.011749500000000e+04 * invT + 1.731263820000000e+01 -
                  6.316872200000000e+00 * tc[0] -
                  5.566864000000000e-03 * tc[1] +
                  6.604896333333332e-07 * tc[2] -
                  5.297019833333334e-11 * tc[3] + 1.893777000000000e-15 * tc[4];
    // species 28: aC3H5
    species[28] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 29: C3H6
    species[29] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 30: nC3H7
    species[30] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                  7.709747900000000e+00 * tc[0] -
                  8.015742500000001e-03 * tc[1] +
                  8.786706333333332e-07 * tc[2] -
                  6.324029333333334e-11 * tc[3] + 1.943135950000000e-15 * tc[4];
    // species 31: C4H81
    species[31] = -2.139723100000000e+03 * invT - 1.348961690000000e+01 -
                  2.053584100000000e+00 * tc[0] -
                  1.717525350000000e-02 * tc[1] +
                  2.647199500000000e-06 * tc[2] -
                  2.757471833333334e-10 * tc[3] + 1.268052250000000e-14 * tc[4];
    // species 32: N
    species[32] = +5.613377300000000e+04 * invT - 2.233666700000000e+00 -
                  2.415942900000000e+00 * tc[0] -
                  8.744532500000000e-05 * tc[1] +
                  1.983728166666667e-08 * tc[2] -
                  2.518853750000000e-12 * tc[3] + 1.018049100000000e-16 * tc[4];
    // species 33: NO
    species[33] = +9.920974600000000e+03 * invT - 3.108697100000001e+00 -
                  3.260605600000000e+00 * tc[0] -
                  5.955521500000000e-04 * tc[1] +
                  7.152841333333333e-08 * tc[2] -
                  5.788139083333334e-12 * tc[3] + 2.016804950000000e-16 * tc[4];
    // species 34: NO2
    species[34] = +2.316498300000000e+03 * invT + 5.002171150000000e+00 -
                  4.884754200000000e+00 * tc[0] -
                  1.086197800000000e-03 * tc[1] +
                  1.380115100000000e-07 * tc[2] -
                  1.312292500000000e-11 * tc[3] + 5.255447500000000e-16 * tc[4];
    // species 37: NCO
    species[37] = +1.400412300000000e+04 * invT + 7.696450499999999e+00 -
                  5.152184500000000e+00 * tc[0] -
                  1.152588050000000e-03 * tc[1] +
                  1.467219216666667e-07 * tc[2] -
                  1.232424833333333e-11 * tc[3] + 4.548899800000000e-16 * tc[4];
    // species 38: CH3O2
    species[38] = -1.137869000000000e+03 * invT + 2.488295500000000e+01 -
                  8.008915000000000e+00 * tc[0] -
                  2.734620500000000e-03 * tc[1] +
                  2.072320000000000e-07 * tc[2] -
                  1.243177500000000e-11 * tc[3] + 3.809266500000000e-16 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +1.929902520000000e+04 * invT - 8.086017310000001e+00 -
                  2.647279890000000e+00 * tc[0] -
                  6.375267100000000e-03 * tc[1] +
                  1.746570600000000e-06 * tc[2] -
                  3.678606966666667e-10 * tc[3] + 3.787607330000000e-14 * tc[4];
  } else {
    // species 35: HCNO
    species[35] = +1.796613390000000e+04 * invT + 1.692926446000000e+01 -
                  6.598604560000000e+00 * tc[0] -
                  1.513893130000000e-03 * tc[1] +
                  1.795072433333333e-07 * tc[2] -
                  1.430554400000000e-11 * tc[3] + 5.071969550000000e-16 * tc[4];
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = -1.558736360000000e+04 * invT - 2.563614100000000e+00 -
                  3.630963170000000e+00 * tc[0] -
                  3.651411785000000e-03 * tc[1] +
                  3.800833383333333e-07 * tc[2] +
                  5.510594150000000e-11 * tc[3] - 1.811178760000000e-14 * tc[4];
  } else {
    // species 36: HNCO
    species[36] = -1.665993440000000e+04 * invT + 1.460619875000000e+01 -
                  6.223951340000000e+00 * tc[0] -
                  1.589320020000000e-03 * tc[1] +
                  1.822979250000000e-07 * tc[2] -
                  1.422793025000000e-11 * tc[3] + 4.975109775000000e-16 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: C
    species[0] = +8.544388320000000e+04 * invT - 1.977068930000000e+00 -
                 2.554239550000000e+00 * tc[0] + 1.607688620000000e-04 * tc[1] -
                 1.222987075000000e-07 * tc[2] + 6.101957408333333e-11 * tc[3] -
                 1.332607230000000e-14 * tc[4];
    // species 1: CH
    species[1] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                 3.489816650000000e+00 * tc[0] - 1.619177705000000e-04 * tc[1] +
                 2.814984416666667e-07 * tc[2] - 2.635144391666666e-10 * tc[3] +
                 7.030453350000001e-14 * tc[4];
    // species 2: CH2
    species[2] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 3: CH2*
    species[3] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 4: H2CC
    species[4] = +4.862179400000000e+04 * invT - 2.638842700000001e+00 -
                 3.281548300000000e+00 * tc[0] - 3.488239550000000e-03 * tc[1] +
                 3.975874000000000e-07 * tc[2] + 1.008702666666667e-10 * tc[3] -
                 4.909477250000000e-14 * tc[4];
  } else {
    // species 0: C
    species[0] = +8.545129530000000e+04 * invT - 2.308834850000000e+00 -
                 2.492668880000000e+00 * tc[0] - 2.399446420000000e-05 * tc[1] +
                 1.207225033333333e-08 * tc[2] - 3.119091908333333e-12 * tc[3] +
                 2.436389465000000e-16 * tc[4];
    // species 1: CH
    species[1] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                 2.878464730000000e+00 * tc[0] - 4.854568405000000e-04 * tc[1] -
                 2.407427583333333e-08 * tc[2] + 1.089065408333333e-11 * tc[3] -
                 8.803969149999999e-16 * tc[4];
    // species 2: CH2
    species[2] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 3: CH2*
    species[3] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 4: H2CC
    species[4] = +4.831668800000000e+04 * invT + 3.637796990000000e+00 -
                 4.278034000000000e+00 * tc[0] - 2.378140200000000e-03 * tc[1] +
                 2.716834833333333e-07 * tc[2] - 2.121900500000000e-11 * tc[3] +
                 7.443189499999999e-16 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = -7.45375000e+02 * invT - 2.86600000e+00 -
               2.50000000e+00 * tc[0] - 0.00000000e+00 * tc[1] -
               0.00000000e+00 * tc[2] - 0.00000000e+00 * tc[3] -
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = -1.02089990e+03 * invT - 1.65169500e+00 -
                 3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                 6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                 1.22242700e-13 * tc[4];
    // species 2: H
    species[2] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 3: O
    species[3] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 4: OH
    species[4] = +3.38153812e+03 * invT + 3.81573857e+00 -
                 4.12530561e+00 * tc[0] + 1.61272470e-03 * tc[1] -
                 1.08794115e-06 * tc[2] + 4.83211369e-10 * tc[3] -
                 1.03118689e-13 * tc[4];
    // species 5: HO2
    species[5] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 6: H2
    species[6] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 7: H2O
    species[7] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 8: H2O2
    species[8] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 9: O2
    species[9] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 10: CH3
    species[10] = +1.64449988e+04 * invT + 1.06902607e+00 -
                  3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                  9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                  1.27192867e-13 * tc[4];
    // species 11: CH4
    species[11] = -1.02466476e+04 * invT + 8.79117989e+00 -
                  5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                  8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                  8.33469780e-13 * tc[4];
    // species 12: HCO
    species[12] = +3.83956496e+03 * invT - 1.73186590e-01 -
                  4.22118584e+00 * tc[0] + 1.62196266e-03 * tc[1] -
                  2.29665743e-06 * tc[2] + 1.10953411e-09 * tc[3] -
                  2.16884432e-13 * tc[4];
    // species 13: CH2O
    species[13] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 14: CH3O
    species[14] = +1.29569760e+03 * invT - 3.86060362e+00 -
                  3.71180502e+00 * tc[0] + 1.40231653e-03 * tc[1] -
                  6.27584952e-06 * tc[2] + 3.94226741e-09 * tc[3] -
                  9.32942100e-13 * tc[4];
    // species 15: CH3OH
    species[15] = -2.56427656e+04 * invT + 6.21949405e+00 -
                  5.71539582e+00 * tc[0] + 7.61545645e-03 * tc[1] -
                  1.08740193e-05 * tc[2] + 5.92339074e-09 * tc[3] -
                  1.30676349e-12 * tc[4];
    // species 16: CO
    species[16] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 17: CO2
    species[17] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 19: C2H3
    species[19] = +3.48598468e+04 * invT - 6.29807380e+00 -
                  3.21246645e+00 * tc[0] - 7.57395810e-04 * tc[1] -
                  4.32015687e-06 * tc[2] + 2.98048206e-09 * tc[3] -
                  7.35754365e-13 * tc[4];
    // species 20: C2H4
    species[20] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 21: C2H5
    species[21] = +1.28416265e+04 * invT - 1.40074356e+00 -
                  4.30646568e+00 * tc[0] + 2.09329446e-03 * tc[1] -
                  8.28571345e-06 * tc[2] + 4.99272172e-09 * tc[3] -
                  1.15254502e-12 * tc[4];
    // species 22: C2H6
    species[22] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 23: HCCO
    species[23] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * tc[0] - 8.82751050e-03 * tc[1] +
                  3.95485017e-06 * tc[2] - 1.43964658e-09 * tc[3] +
                  2.53324055e-13 * tc[4];
    // species 24: CH2CO
    species[24] = -7.27000000e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * tc[0] - 9.05943605e-03 * tc[1] +
                  2.89912457e-06 * tc[2] - 7.78664640e-10 * tc[3] +
                  1.00728807e-13 * tc[4];
    // species 25: CH2CHO
    species[25] = +6.20000000e+01 * invT - 7.16239110e+00 -
                  3.40906240e+00 * tc[0] - 5.36928700e-03 * tc[1] -
                  3.15248750e-07 * tc[2] + 5.96548592e-10 * tc[3] -
                  1.43369255e-13 * tc[4];
    // species 26: CH2OCH2
    species[26] = -7.56081430e+03 * invT - 5.09069430e+00 -
                  3.75905320e+00 * tc[0] + 4.72060900e-03 * tc[1] -
                  1.33849535e-05 * tc[2] + 8.40065667e-09 * tc[3] -
                  2.00199605e-12 * tc[4];
    // species 27: aC3H4
    species[27] = +2.15415670e+04 * invT - 8.61309450e+00 -
                  2.61304450e+00 * tc[0] - 6.06128750e-03 * tc[1] -
                  3.08998000e-06 * tc[2] + 2.87709575e-09 * tc[3] -
                  7.66753950e-13 * tc[4];
    // species 28: aC3H5
    species[28] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 29: C3H6
    species[29] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 30: nC3H7
    species[30] = +1.03123460e+04 * invT - 2.10869167e+01 -
                  1.04911730e+00 * tc[0] - 1.30044865e-02 * tc[1] -
                  3.92375267e-07 * tc[2] + 1.63292767e-09 * tc[3] -
                  4.68601035e-13 * tc[4];
    // species 31: C4H81
    species[31] = -1.79040040e+03 * invT - 2.08813310e+01 -
                  1.18113800e+00 * tc[0] - 1.54266900e-02 * tc[1] -
                  8.47754117e-07 * tc[2] + 2.05457400e-09 * tc[3] -
                  5.55509650e-13 * tc[4];
    // species 32: N
    species[32] = +5.61046370e+04 * invT - 2.69390870e+00 -
                  2.50000000e+00 * tc[0] - 0.00000000e+00 * tc[1] -
                  0.00000000e+00 * tc[2] - 0.00000000e+00 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 33: NO
    species[33] = +9.84462300e+03 * invT + 9.37629900e-01 -
                  4.21847630e+00 * tc[0] + 2.31948800e-03 * tc[1] -
                  1.84017033e-06 * tc[2] + 7.78011283e-10 * tc[3] -
                  1.40178850e-13 * tc[4];
    // species 34: NO2
    species[34] = +2.89661790e+03 * invT - 3.36796050e+00 -
                  3.94403120e+00 * tc[0] + 7.92714500e-04 * tc[1] -
                  2.77630200e-06 * tc[2] + 1.70628550e-09 * tc[3] -
                  3.91752820e-13 * tc[4];
    // species 37: NCO
    species[37] = +1.46824770e+04 * invT - 7.72353380e+00 -
                  2.82693080e+00 * tc[0] - 4.40258440e-03 * tc[1] +
                  1.39776890e-06 * tc[2] - 4.00141367e-10 * tc[3] +
                  6.65679750e-14 * tc[4];
    // species 38: CH3O2
    species[38] = +7.40078900e+02 * invT - 1.52299210e+01 -
                  1.73533900e+00 * tc[0] - 1.11001700e-02 * tc[1] +
                  3.14024333e-06 * tc[2] - 7.91776167e-10 * tc[3] +
                  1.10863450e-13 * tc[4];
  } else {
    // species 1: N2
    species[1] = -9.22797700e+02 * invT - 4.05388800e+00 -
                 2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                 9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                 3.37667550e-16 * tc[4];
    // species 2: H
    species[2] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 3: O
    species[3] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 4: OH
    species[4] = +3.71885774e+03 * invT - 3.83691187e+00 -
                 2.86472886e+00 * tc[0] - 5.28252240e-04 * tc[1] +
                 4.31804597e-08 * tc[2] - 2.54348895e-12 * tc[3] +
                 6.65979380e-17 * tc[4];
    // species 5: HO2
    species[5] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 6: H2
    species[6] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 7: H2O
    species[7] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 8: H2O2
    species[8] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 9: O2
    species[9] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 10: CH3
    species[10] = +1.67755843e+04 * invT - 7.19435407e+00 -
                  2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                  4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                  2.33577197e-15 * tc[4];
    // species 11: CH4
    species[11] = -9.46834459e+03 * invT - 1.93624665e+01 -
                  7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                  9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                  5.09076150e-15 * tc[4];
    // species 12: HCO
    species[12] = +4.01191815e+03 * invT - 8.02617054e+00 -
                  2.77217438e+00 * tc[0] - 2.47847763e-03 * tc[1] +
                  4.14076022e-07 * tc[2] - 4.90968148e-11 * tc[3] +
                  2.66754356e-15 * tc[4];
    // species 13: CH2O
    species[13] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 14: CH3O
    species[14] = +3.78111940e+02 * invT + 5.72459266e+00 -
                  4.75779238e+00 * tc[0] - 3.72071237e-03 * tc[1] +
                  4.49508627e-07 * tc[2] - 3.65075420e-11 * tc[3] +
                  1.31768549e-15 * tc[4];
    // species 15: CH3OH
    species[15] = -2.53748747e+04 * invT - 1.37126544e+01 -
                  1.78970791e+00 * tc[0] - 7.04691460e-03 * tc[1] +
                  1.06083472e-06 * tc[2] - 1.15142571e-10 * tc[3] +
                  5.85301100e-15 * tc[4];
    // species 16: CO
    species[16] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 17: CO2
    species[17] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 18: C2H2
    species[18] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 19: C2H3
    species[19] = +3.46128739e+04 * invT - 5.77059978e+00 -
                  3.01672400e+00 * tc[0] - 5.16511460e-03 * tc[1] +
                  7.80137248e-07 * tc[2] - 8.48027400e-11 * tc[3] +
                  4.31303520e-15 * tc[4];
    // species 20: C2H4
    species[20] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 21: C2H5
    species[21] = +1.28575200e+04 * invT - 1.25077779e+01 -
                  1.95465642e+00 * tc[0] - 8.69863610e-03 * tc[1] +
                  1.33034445e-06 * tc[2] - 1.46014741e-10 * tc[3] +
                  7.48207880e-15 * tc[4];
    // species 22: C2H6
    species[22] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 23: HCCO
    species[23] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * tc[0] - 2.04267005e-03 * tc[1] +
                  2.65575783e-07 * tc[2] - 2.38550433e-11 * tc[3] +
                  9.70391600e-16 * tc[4];
    // species 24: CH2CO
    species[24] = -7.77850000e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * tc[0] - 4.50179872e-03 * tc[1] +
                  6.94899392e-07 * tc[2] - 7.69454902e-11 * tc[3] +
                  3.97419100e-15 * tc[4];
    // species 25: CH2CHO
    species[25] = -9.69500000e+02 * invT + 1.00077578e+01 -
                  5.97566990e+00 * tc[0] - 4.06529570e-03 * tc[1] +
                  4.57270750e-07 * tc[2] - 3.39192008e-11 * tc[3] +
                  1.08800855e-15 * tc[4];
    // species 26: CH2OCH2
    species[26] = -9.18042510e+03 * invT + 1.15687246e+01 -
                  5.48876410e+00 * tc[0] - 6.02309500e-03 * tc[1] +
                  7.22282183e-07 * tc[2] - 5.83569258e-11 * tc[3] +
                  2.09745440e-15 * tc[4];
    // species 27: aC3H4
    species[27] = +2.01174950e+04 * invT + 1.63126382e+01 -
                  6.31687220e+00 * tc[0] - 5.56686400e-03 * tc[1] +
                  6.60489633e-07 * tc[2] - 5.29701983e-11 * tc[3] +
                  1.89377700e-15 * tc[4];
    // species 28: aC3H5
    species[28] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 29: C3H6
    species[29] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 30: nC3H7
    species[30] = +7.97622360e+03 * invT + 2.22250449e+01 -
                  7.70974790e+00 * tc[0] - 8.01574250e-03 * tc[1] +
                  8.78670633e-07 * tc[2] - 6.32402933e-11 * tc[3] +
                  1.94313595e-15 * tc[4];
    // species 31: C4H81
    species[31] = -2.13972310e+03 * invT - 1.44896169e+01 -
                  2.05358410e+00 * tc[0] - 1.71752535e-02 * tc[1] +
                  2.64719950e-06 * tc[2] - 2.75747183e-10 * tc[3] +
                  1.26805225e-14 * tc[4];
    // species 32: N
    species[32] = +5.61337730e+04 * invT - 3.23366670e+00 -
                  2.41594290e+00 * tc[0] - 8.74453250e-05 * tc[1] +
                  1.98372817e-08 * tc[2] - 2.51885375e-12 * tc[3] +
                  1.01804910e-16 * tc[4];
    // species 33: NO
    species[33] = +9.92097460e+03 * invT - 4.10869710e+00 -
                  3.26060560e+00 * tc[0] - 5.95552150e-04 * tc[1] +
                  7.15284133e-08 * tc[2] - 5.78813908e-12 * tc[3] +
                  2.01680495e-16 * tc[4];
    // species 34: NO2
    species[34] = +2.31649830e+03 * invT + 4.00217115e+00 -
                  4.88475420e+00 * tc[0] - 1.08619780e-03 * tc[1] +
                  1.38011510e-07 * tc[2] - 1.31229250e-11 * tc[3] +
                  5.25544750e-16 * tc[4];
    // species 37: NCO
    species[37] = +1.40041230e+04 * invT + 6.69645050e+00 -
                  5.15218450e+00 * tc[0] - 1.15258805e-03 * tc[1] +
                  1.46721922e-07 * tc[2] - 1.23242483e-11 * tc[3] +
                  4.54889980e-16 * tc[4];
    // species 38: CH3O2
    species[38] = -1.13786900e+03 * invT + 2.38829550e+01 -
                  8.00891500e+00 * tc[0] - 2.73462050e-03 * tc[1] +
                  2.07232000e-07 * tc[2] - 1.24317750e-11 * tc[3] +
                  3.80926650e-16 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +1.92990252e+04 * invT - 9.08601731e+00 -
                  2.64727989e+00 * tc[0] - 6.37526710e-03 * tc[1] +
                  1.74657060e-06 * tc[2] - 3.67860697e-10 * tc[3] +
                  3.78760733e-14 * tc[4];
  } else {
    // species 35: HCNO
    species[35] = +1.79661339e+04 * invT + 1.59292645e+01 -
                  6.59860456e+00 * tc[0] - 1.51389313e-03 * tc[1] +
                  1.79507243e-07 * tc[2] - 1.43055440e-11 * tc[3] +
                  5.07196955e-16 * tc[4];
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = -1.55873636e+04 * invT - 3.56361410e+00 -
                  3.63096317e+00 * tc[0] - 3.65141179e-03 * tc[1] +
                  3.80083338e-07 * tc[2] + 5.51059415e-11 * tc[3] -
                  1.81117876e-14 * tc[4];
  } else {
    // species 36: HNCO
    species[36] = -1.66599344e+04 * invT + 1.36061988e+01 -
                  6.22395134e+00 * tc[0] - 1.58932002e-03 * tc[1] +
                  1.82297925e-07 * tc[2] - 1.42279302e-11 * tc[3] +
                  4.97510977e-16 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +1.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] - 7.45375000e+02 * invT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
    // species 2: H
    species[2] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 3: O
    species[3] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 4: OH
    species[4] = +3.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 5: HO2
    species[5] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 6: H2
    species[6] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 7: H2O
    species[7] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 8: H2O2
    species[8] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 9: O2
    species[9] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 10: CH3
    species[10] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                  1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                  5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 11: CH4
    species[11] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 12: HCO
    species[12] = +3.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 13: CH2O
    species[13] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 14: CH3O
    species[14] = +2.71180502e+00 - 1.40231653e-03 * tc[1] +
                  1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
                  3.73176840e-12 * tc[4] + 1.29569760e+03 * invT;
    // species 15: CH3OH
    species[15] = +4.71539582e+00 - 7.61545645e-03 * tc[1] +
                  2.17480385e-05 * tc[2] - 1.77701722e-08 * tc[3] +
                  5.22705396e-12 * tc[4] - 2.56427656e+04 * invT;
    // species 16: CO
    species[16] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 17: CO2
    species[17] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 18: C2H2
    species[18] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 19: C2H3
    species[19] = +2.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 20: C2H4
    species[20] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 21: C2H5
    species[21] = +3.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 22: C2H6
    species[22] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 23: HCCO
    species[23] = +1.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 24: CH2CO
    species[24] = +1.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.27000000e+03 * invT;
    // species 25: CH2CHO
    species[25] = +2.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 26: CH2OCH2
    species[26] = +2.75905320e+00 - 4.72060900e-03 * tc[1] +
                  2.67699070e-05 * tc[2] - 2.52019700e-08 * tc[3] +
                  8.00798420e-12 * tc[4] - 7.56081430e+03 * invT;
    // species 27: aC3H4
    species[27] = +1.61304450e+00 + 6.06128750e-03 * tc[1] +
                  6.17996000e-06 * tc[2] - 8.63128725e-09 * tc[3] +
                  3.06701580e-12 * tc[4] + 2.15415670e+04 * invT;
    // species 28: aC3H5
    species[28] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 29: C3H6
    species[29] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 30: nC3H7
    species[30] = +4.91173000e-02 + 1.30044865e-02 * tc[1] +
                  7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                  1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
    // species 31: C4H81
    species[31] = +1.81138000e-01 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 32: N
    species[32] = +1.50000000e+00 + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                  0.00000000e+00 * tc[4] + 5.61046370e+04 * invT;
    // species 33: NO
    species[33] = +3.21847630e+00 - 2.31948800e-03 * tc[1] +
                  3.68034067e-06 * tc[2] - 2.33403385e-09 * tc[3] +
                  5.60715400e-13 * tc[4] + 9.84462300e+03 * invT;
    // species 34: NO2
    species[34] = +2.94403120e+00 - 7.92714500e-04 * tc[1] +
                  5.55260400e-06 * tc[2] - 5.11885650e-09 * tc[3] +
                  1.56701128e-12 * tc[4] + 2.89661790e+03 * invT;
    // species 37: NCO
    species[37] = +1.82693080e+00 + 4.40258440e-03 * tc[1] -
                  2.79553780e-06 * tc[2] + 1.20042410e-09 * tc[3] -
                  2.66271900e-13 * tc[4] + 1.46824770e+04 * invT;
    // species 38: CH3O2
    species[38] = +7.35339000e-01 + 1.11001700e-02 * tc[1] -
                  6.28048667e-06 * tc[2] + 2.37532850e-09 * tc[3] -
                  4.43453800e-13 * tc[4] + 7.40078900e+02 * invT;
  } else {
    // species 1: N2
    species[1] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                 1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 2: H
    species[2] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 3: O
    species[3] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 4: OH
    species[4] = +1.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 5: HO2
    species[5] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 6: H2
    species[6] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 7: H2O
    species[7] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 8: H2O2
    species[8] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 9: O2
    species[9] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 10: CH3
    species[10] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                  9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                  9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 11: CH4
    species[11] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 12: HCO
    species[12] = +1.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 13: CH2O
    species[13] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 14: CH3O
    species[14] = +3.75779238e+00 + 3.72071237e-03 * tc[1] -
                  8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
                  5.27074196e-15 * tc[4] + 3.78111940e+02 * invT;
    // species 15: CH3OH
    species[15] = +7.89707910e-01 + 7.04691460e-03 * tc[1] -
                  2.12166945e-06 * tc[2] + 3.45427713e-10 * tc[3] -
                  2.34120440e-14 * tc[4] - 2.53748747e+04 * invT;
    // species 16: CO
    species[16] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 17: CO2
    species[17] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 18: C2H2
    species[18] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 19: C2H3
    species[19] = +2.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 20: C2H4
    species[20] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 21: C2H5
    species[21] = +9.54656420e-01 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 22: C2H6
    species[22] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 23: HCCO
    species[23] = +4.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 24: CH2CO
    species[24] = +3.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.77850000e+03 * invT;
    // species 25: CH2CHO
    species[25] = +4.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 26: CH2OCH2
    species[26] = +4.48876410e+00 + 6.02309500e-03 * tc[1] -
                  1.44456437e-06 * tc[2] + 1.75070777e-10 * tc[3] -
                  8.38981760e-15 * tc[4] - 9.18042510e+03 * invT;
    // species 27: aC3H4
    species[27] = +5.31687220e+00 + 5.56686400e-03 * tc[1] -
                  1.32097927e-06 * tc[2] + 1.58910595e-10 * tc[3] -
                  7.57510800e-15 * tc[4] + 2.01174950e+04 * invT;
    // species 28: aC3H5
    species[28] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 29: C3H6
    species[29] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 30: nC3H7
    species[30] = +6.70974790e+00 + 8.01574250e-03 * tc[1] -
                  1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                  7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
    // species 31: C4H81
    species[31] = +1.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 32: N
    species[32] = +1.41594290e+00 + 8.74453250e-05 * tc[1] -
                  3.96745633e-08 * tc[2] + 7.55656125e-12 * tc[3] -
                  4.07219640e-16 * tc[4] + 5.61337730e+04 * invT;
    // species 33: NO
    species[33] = +2.26060560e+00 + 5.95552150e-04 * tc[1] -
                  1.43056827e-07 * tc[2] + 1.73644173e-11 * tc[3] -
                  8.06721980e-16 * tc[4] + 9.92097460e+03 * invT;
    // species 34: NO2
    species[34] = +3.88475420e+00 + 1.08619780e-03 * tc[1] -
                  2.76023020e-07 * tc[2] + 3.93687750e-11 * tc[3] -
                  2.10217900e-15 * tc[4] + 2.31649830e+03 * invT;
    // species 37: NCO
    species[37] = +4.15218450e+00 + 1.15258805e-03 * tc[1] -
                  2.93443843e-07 * tc[2] + 3.69727450e-11 * tc[3] -
                  1.81955992e-15 * tc[4] + 1.40041230e+04 * invT;
    // species 38: CH3O2
    species[38] = +7.00891500e+00 + 2.73462050e-03 * tc[1] -
                  4.14464000e-07 * tc[2] + 3.72953250e-11 * tc[3] -
                  1.52370660e-15 * tc[4] - 1.13786900e+03 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +1.64727989e+00 + 6.37526710e-03 * tc[1] -
                  3.49314120e-06 * tc[2] + 1.10358209e-09 * tc[3] -
                  1.51504293e-13 * tc[4] + 1.92990252e+04 * invT;
  } else {
    // species 35: HCNO
    species[35] = +5.59860456e+00 + 1.51389313e-03 * tc[1] -
                  3.59014487e-07 * tc[2] + 4.29166320e-11 * tc[3] -
                  2.02878782e-15 * tc[4] + 1.79661339e+04 * invT;
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +2.63096317e+00 + 3.65141179e-03 * tc[1] -
                  7.60166677e-07 * tc[2] - 1.65317825e-10 * tc[3] +
                  7.24471504e-14 * tc[4] - 1.55873636e+04 * invT;
  } else {
    // species 36: HNCO
    species[36] = +5.22395134e+00 + 1.58932002e-03 * tc[1] -
                  3.64595850e-07 * tc[2] + 4.26837908e-11 * tc[3] -
                  1.99004391e-15 * tc[4] - 1.66599344e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +2.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] - 7.45375000e+02 * invT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
    // species 2: H
    species[2] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 3: O
    species[3] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 4: OH
    species[4] = +4.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 5: HO2
    species[5] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 6: H2
    species[6] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 7: H2O
    species[7] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 8: H2O2
    species[8] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 9: O2
    species[9] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 10: CH3
    species[10] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                  1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                  5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 11: CH4
    species[11] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 12: HCO
    species[12] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 13: CH2O
    species[13] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 14: CH3O
    species[14] = +3.71180502e+00 - 1.40231653e-03 * tc[1] +
                  1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
                  3.73176840e-12 * tc[4] + 1.29569760e+03 * invT;
    // species 15: CH3OH
    species[15] = +5.71539582e+00 - 7.61545645e-03 * tc[1] +
                  2.17480385e-05 * tc[2] - 1.77701722e-08 * tc[3] +
                  5.22705396e-12 * tc[4] - 2.56427656e+04 * invT;
    // species 16: CO
    species[16] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 17: CO2
    species[17] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 18: C2H2
    species[18] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 19: C2H3
    species[19] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 20: C2H4
    species[20] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 21: C2H5
    species[21] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 22: C2H6
    species[22] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 23: HCCO
    species[23] = +2.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 24: CH2CO
    species[24] = +2.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.27000000e+03 * invT;
    // species 25: CH2CHO
    species[25] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 26: CH2OCH2
    species[26] = +3.75905320e+00 - 4.72060900e-03 * tc[1] +
                  2.67699070e-05 * tc[2] - 2.52019700e-08 * tc[3] +
                  8.00798420e-12 * tc[4] - 7.56081430e+03 * invT;
    // species 27: aC3H4
    species[27] = +2.61304450e+00 + 6.06128750e-03 * tc[1] +
                  6.17996000e-06 * tc[2] - 8.63128725e-09 * tc[3] +
                  3.06701580e-12 * tc[4] + 2.15415670e+04 * invT;
    // species 28: aC3H5
    species[28] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 29: C3H6
    species[29] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 30: nC3H7
    species[30] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                  7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                  1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
    // species 31: C4H81
    species[31] = +1.18113800e+00 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 32: N
    species[32] = +2.50000000e+00 + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                  0.00000000e+00 * tc[4] + 5.61046370e+04 * invT;
    // species 33: NO
    species[33] = +4.21847630e+00 - 2.31948800e-03 * tc[1] +
                  3.68034067e-06 * tc[2] - 2.33403385e-09 * tc[3] +
                  5.60715400e-13 * tc[4] + 9.84462300e+03 * invT;
    // species 34: NO2
    species[34] = +3.94403120e+00 - 7.92714500e-04 * tc[1] +
                  5.55260400e-06 * tc[2] - 5.11885650e-09 * tc[3] +
                  1.56701128e-12 * tc[4] + 2.89661790e+03 * invT;
    // species 37: NCO
    species[37] = +2.82693080e+00 + 4.40258440e-03 * tc[1] -
                  2.79553780e-06 * tc[2] + 1.20042410e-09 * tc[3] -
                  2.66271900e-13 * tc[4] + 1.46824770e+04 * invT;
    // species 38: CH3O2
    species[38] = +1.73533900e+00 + 1.11001700e-02 * tc[1] -
                  6.28048667e-06 * tc[2] + 2.37532850e-09 * tc[3] -
                  4.43453800e-13 * tc[4] + 7.40078900e+02 * invT;
  } else {
    // species 1: N2
    species[1] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                 1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 2: H
    species[2] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 3: O
    species[3] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 4: OH
    species[4] = +2.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 5: HO2
    species[5] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 6: H2
    species[6] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 7: H2O
    species[7] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 8: H2O2
    species[8] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 9: O2
    species[9] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 10: CH3
    species[10] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                  9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                  9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 11: CH4
    species[11] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 12: HCO
    species[12] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 13: CH2O
    species[13] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 14: CH3O
    species[14] = +4.75779238e+00 + 3.72071237e-03 * tc[1] -
                  8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
                  5.27074196e-15 * tc[4] + 3.78111940e+02 * invT;
    // species 15: CH3OH
    species[15] = +1.78970791e+00 + 7.04691460e-03 * tc[1] -
                  2.12166945e-06 * tc[2] + 3.45427713e-10 * tc[3] -
                  2.34120440e-14 * tc[4] - 2.53748747e+04 * invT;
    // species 16: CO
    species[16] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 17: CO2
    species[17] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 18: C2H2
    species[18] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 19: C2H3
    species[19] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 20: C2H4
    species[20] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 21: C2H5
    species[21] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 22: C2H6
    species[22] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 23: HCCO
    species[23] = +5.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 24: CH2CO
    species[24] = +4.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.77850000e+03 * invT;
    // species 25: CH2CHO
    species[25] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 26: CH2OCH2
    species[26] = +5.48876410e+00 + 6.02309500e-03 * tc[1] -
                  1.44456437e-06 * tc[2] + 1.75070777e-10 * tc[3] -
                  8.38981760e-15 * tc[4] - 9.18042510e+03 * invT;
    // species 27: aC3H4
    species[27] = +6.31687220e+00 + 5.56686400e-03 * tc[1] -
                  1.32097927e-06 * tc[2] + 1.58910595e-10 * tc[3] -
                  7.57510800e-15 * tc[4] + 2.01174950e+04 * invT;
    // species 28: aC3H5
    species[28] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 29: C3H6
    species[29] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 30: nC3H7
    species[30] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                  1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                  7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
    // species 31: C4H81
    species[31] = +2.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 32: N
    species[32] = +2.41594290e+00 + 8.74453250e-05 * tc[1] -
                  3.96745633e-08 * tc[2] + 7.55656125e-12 * tc[3] -
                  4.07219640e-16 * tc[4] + 5.61337730e+04 * invT;
    // species 33: NO
    species[33] = +3.26060560e+00 + 5.95552150e-04 * tc[1] -
                  1.43056827e-07 * tc[2] + 1.73644173e-11 * tc[3] -
                  8.06721980e-16 * tc[4] + 9.92097460e+03 * invT;
    // species 34: NO2
    species[34] = +4.88475420e+00 + 1.08619780e-03 * tc[1] -
                  2.76023020e-07 * tc[2] + 3.93687750e-11 * tc[3] -
                  2.10217900e-15 * tc[4] + 2.31649830e+03 * invT;
    // species 37: NCO
    species[37] = +5.15218450e+00 + 1.15258805e-03 * tc[1] -
                  2.93443843e-07 * tc[2] + 3.69727450e-11 * tc[3] -
                  1.81955992e-15 * tc[4] + 1.40041230e+04 * invT;
    // species 38: CH3O2
    species[38] = +8.00891500e+00 + 2.73462050e-03 * tc[1] -
                  4.14464000e-07 * tc[2] + 3.72953250e-11 * tc[3] -
                  1.52370660e-15 * tc[4] - 1.13786900e+03 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +2.64727989e+00 + 6.37526710e-03 * tc[1] -
                  3.49314120e-06 * tc[2] + 1.10358209e-09 * tc[3] -
                  1.51504293e-13 * tc[4] + 1.92990252e+04 * invT;
  } else {
    // species 35: HCNO
    species[35] = +6.59860456e+00 + 1.51389313e-03 * tc[1] -
                  3.59014487e-07 * tc[2] + 4.29166320e-11 * tc[3] -
                  2.02878782e-15 * tc[4] + 1.79661339e+04 * invT;
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +3.63096317e+00 + 3.65141179e-03 * tc[1] -
                  7.60166677e-07 * tc[2] - 1.65317825e-10 * tc[3] +
                  7.24471504e-14 * tc[4] - 1.55873636e+04 * invT;
  } else {
    // species 36: HNCO
    species[36] = +6.22395134e+00 + 1.58932002e-03 * tc[1] -
                  3.64595850e-07 * tc[2] + 4.26837908e-11 * tc[3] -
                  1.99004391e-15 * tc[4] - 1.66599344e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: C
    species[0] = +2.55423955e+00 - 1.60768862e-04 * tc[1] +
                 2.44597415e-07 * tc[2] - 1.83058722e-10 * tc[3] +
                 5.33042892e-14 * tc[4] + 8.54438832e+04 * invT;
    // species 1: CH
    species[1] = +3.48981665e+00 + 1.61917771e-04 * tc[1] -
                 5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                 2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 2: CH2
    species[2] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 3: CH2*
    species[3] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 4: H2CC
    species[4] = +3.28154830e+00 + 3.48823955e-03 * tc[1] -
                 7.95174800e-07 * tc[2] - 3.02610800e-10 * tc[3] +
                 1.96379090e-13 * tc[4] + 4.86217940e+04 * invT;
  } else {
    // species 0: C
    species[0] = +2.49266888e+00 + 2.39944642e-05 * tc[1] -
                 2.41445007e-08 * tc[2] + 9.35727573e-12 * tc[3] -
                 9.74555786e-16 * tc[4] + 8.54512953e+04 * invT;
    // species 1: CH
    species[1] = +2.87846473e+00 + 4.85456840e-04 * tc[1] +
                 4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                 3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 2: CH2
    species[2] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 3: CH2*
    species[3] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 4: H2CC
    species[4] = +4.27803400e+00 + 2.37814020e-03 * tc[1] -
                 5.43366967e-07 * tc[2] + 6.36570150e-11 * tc[3] -
                 2.97727580e-15 * tc[4] + 4.83166880e+04 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +2.50000000e+00 * tc[0] + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 4.36600000e+00;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                 1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                 6.11213500e-13 * tc[4] + 3.95037200e+00;
    // species 2: H
    species[2] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 3: O
    species[3] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 4: OH
    species[4] = +4.12530561e+00 * tc[0] - 3.22544939e-03 * tc[1] +
                 3.26382346e-06 * tc[2] - 1.93284548e-09 * tc[3] +
                 5.15593447e-13 * tc[4] - 6.90432960e-01;
    // species 5: HO2
    species[5] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 6: H2
    species[6] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 7: H2O
    species[7] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 8: H2O2
    species[8] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 9: O2
    species[9] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 10: CH3
    species[10] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                  2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                  6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 11: CH4
    species[11] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                  2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                  4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 12: HCO
    species[12] = +4.22118584e+00 * tc[0] - 3.24392532e-03 * tc[1] +
                  6.88997230e-06 * tc[2] - 4.43813643e-09 * tc[3] +
                  1.08442216e-12 * tc[4] + 3.39437243e+00;
    // species 13: CH2O
    species[13] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 14: CH3O
    species[14] = +3.71180502e+00 * tc[0] - 2.80463306e-03 * tc[1] +
                  1.88275486e-05 * tc[2] - 1.57690696e-08 * tc[3] +
                  4.66471050e-12 * tc[4] + 6.57240864e+00;
    // species 15: CH3OH
    species[15] = +5.71539582e+00 * tc[0] - 1.52309129e-02 * tc[1] +
                  3.26220578e-05 * tc[2] - 2.36935630e-08 * tc[3] +
                  6.53381745e-12 * tc[4] - 1.50409823e+00;
    // species 16: CO
    species[16] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 17: CO2
    species[17] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 18: C2H2
    species[18] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 19: C2H3
    species[19] = +3.21246645e+00 * tc[0] + 1.51479162e-03 * tc[1] +
                  1.29604706e-05 * tc[2] - 1.19219282e-08 * tc[3] +
                  3.67877182e-12 * tc[4] + 8.51054025e+00;
    // species 20: C2H4
    species[20] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 21: C2H5
    species[21] = +4.30646568e+00 * tc[0] - 4.18658892e-03 * tc[1] +
                  2.48571403e-05 * tc[2] - 1.99708869e-08 * tc[3] +
                  5.76272510e-12 * tc[4] + 4.70720924e+00;
    // species 22: C2H6
    species[22] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 23: HCCO
    species[23] = +2.25172140e+00 * tc[0] + 1.76550210e-02 * tc[1] -
                  1.18645505e-05 * tc[2] + 5.75858633e-09 * tc[3] -
                  1.26662028e-12 * tc[4] + 1.24904170e+01;
    // species 24: CH2CO
    species[24] = +2.13583630e+00 * tc[0] + 1.81188721e-02 * tc[1] -
                  8.69737370e-06 * tc[2] + 3.11465856e-09 * tc[3] -
                  5.03644037e-13 * tc[4] + 1.22156480e+01;
    // species 25: CH2CHO
    species[25] = +3.40906240e+00 * tc[0] + 1.07385740e-02 * tc[1] +
                  9.45746250e-07 * tc[2] - 2.38619437e-09 * tc[3] +
                  7.16846275e-13 * tc[4] + 9.57145350e+00;
    // species 26: CH2OCH2
    species[26] = +3.75905320e+00 * tc[0] - 9.44121800e-03 * tc[1] +
                  4.01548605e-05 * tc[2] - 3.36026267e-08 * tc[3] +
                  1.00099802e-11 * tc[4] + 7.84974750e+00;
    // species 27: aC3H4
    species[27] = +2.61304450e+00 * tc[0] + 1.21225750e-02 * tc[1] +
                  9.26994000e-06 * tc[2] - 1.15083830e-08 * tc[3] +
                  3.83376975e-12 * tc[4] + 1.02261390e+01;
    // species 28: aC3H5
    species[28] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 29: C3H6
    species[29] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 30: nC3H7
    species[30] = +1.04911730e+00 * tc[0] + 2.60089730e-02 * tc[1] +
                  1.17712580e-06 * tc[2] - 6.53171067e-09 * tc[3] +
                  2.34300518e-12 * tc[4] + 2.11360340e+01;
    // species 31: C4H81
    species[31] = +1.18113800e+00 * tc[0] + 3.08533800e-02 * tc[1] +
                  2.54326235e-06 * tc[2] - 8.21829600e-09 * tc[3] +
                  2.77754825e-12 * tc[4] + 2.10624690e+01;
    // species 32: N
    species[32] = +2.50000000e+00 * tc[0] + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                  0.00000000e+00 * tc[4] + 4.19390870e+00;
    // species 33: NO
    species[33] = +4.21847630e+00 * tc[0] - 4.63897600e-03 * tc[1] +
                  5.52051100e-06 * tc[2] - 3.11204513e-09 * tc[3] +
                  7.00894250e-13 * tc[4] + 2.28084640e+00;
    // species 34: NO2
    species[34] = +3.94403120e+00 * tc[0] - 1.58542900e-03 * tc[1] +
                  8.32890600e-06 * tc[2] - 6.82514200e-09 * tc[3] +
                  1.95876410e-12 * tc[4] + 6.31199170e+00;
    // species 37: NCO
    species[37] = +2.82693080e+00 * tc[0] + 8.80516880e-03 * tc[1] -
                  4.19330670e-06 * tc[2] + 1.60056547e-09 * tc[3] -
                  3.32839875e-13 * tc[4] + 9.55046460e+00;
    // species 38: CH3O2
    species[38] = +1.73533900e+00 * tc[0] + 2.22003400e-02 * tc[1] -
                  9.42073000e-06 * tc[2] + 3.16710467e-09 * tc[3] -
                  5.54317250e-13 * tc[4] + 1.59652600e+01;
  } else {
    // species 1: N2
    species[1] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                 2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                 1.68833775e-15 * tc[4] + 5.98052800e+00;
    // species 2: H
    species[2] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 3: O
    species[3] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 4: OH
    species[4] = +2.86472886e+00 * tc[0] + 1.05650448e-03 * tc[1] -
                 1.29541379e-07 * tc[2] + 1.01739558e-11 * tc[3] -
                 3.32989690e-16 * tc[4] + 5.70164073e+00;
    // species 5: HO2
    species[5] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 6: H2
    species[6] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 7: H2O
    species[7] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 8: H2O2
    species[8] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 9: O2
    species[9] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 10: CH3
    species[10] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                  1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                  1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 11: CH4
    species[11] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                  2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                  2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 12: HCO
    species[12] = +2.77217438e+00 * tc[0] + 4.95695526e-03 * tc[1] -
                  1.24222806e-06 * tc[2] + 1.96387259e-10 * tc[3] -
                  1.33377178e-14 * tc[4] + 9.79834492e+00;
    // species 13: CH2O
    species[13] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 14: CH3O
    species[14] = +4.75779238e+00 * tc[0] + 7.44142474e-03 * tc[1] -
                  1.34852588e-06 * tc[2] + 1.46030168e-10 * tc[3] -
                  6.58842745e-15 * tc[4] - 1.96680028e+00;
    // species 15: CH3OH
    species[15] = +1.78970791e+00 * tc[0] + 1.40938292e-02 * tc[1] -
                  3.18250418e-06 * tc[2] + 4.60570283e-10 * tc[3] -
                  2.92650550e-14 * tc[4] + 1.45023623e+01;
    // species 16: CO
    species[16] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 17: CO2
    species[17] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 18: C2H2
    species[18] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 19: C2H3
    species[19] = +3.01672400e+00 * tc[0] + 1.03302292e-02 * tc[1] -
                  2.34041174e-06 * tc[2] + 3.39210960e-10 * tc[3] -
                  2.15651760e-14 * tc[4] + 7.78732378e+00;
    // species 20: C2H4
    species[20] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 21: C2H5
    species[21] = +1.95465642e+00 * tc[0] + 1.73972722e-02 * tc[1] -
                  3.99103334e-06 * tc[2] + 5.84058963e-10 * tc[3] -
                  3.74103940e-14 * tc[4] + 1.34624343e+01;
    // species 22: C2H6
    species[22] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 23: HCCO
    species[23] = +5.62820580e+00 * tc[0] + 4.08534010e-03 * tc[1] -
                  7.96727350e-07 * tc[2] + 9.54201733e-11 * tc[3] -
                  4.85195800e-15 * tc[4] - 3.93025950e+00;
    // species 24: CH2CO
    species[24] = +4.51129732e+00 * tc[0] + 9.00359745e-03 * tc[1] -
                  2.08469817e-06 * tc[2] + 3.07781961e-10 * tc[3] -
                  1.98709550e-14 * tc[4] + 6.32247205e-01;
    // species 25: CH2CHO
    species[25] = +5.97566990e+00 * tc[0] + 8.13059140e-03 * tc[1] -
                  1.37181225e-06 * tc[2] + 1.35676803e-10 * tc[3] -
                  5.44004275e-15 * tc[4] - 5.03208790e+00;
    // species 26: CH2OCH2
    species[26] = +5.48876410e+00 * tc[0] + 1.20461900e-02 * tc[1] -
                  2.16684655e-06 * tc[2] + 2.33427703e-10 * tc[3] -
                  1.04872720e-14 * tc[4] - 7.07996050e+00;
    // species 27: aC3H4
    species[27] = +6.31687220e+00 * tc[0] + 1.11337280e-02 * tc[1] -
                  1.98146890e-06 * tc[2] + 2.11880793e-10 * tc[3] -
                  9.46888500e-15 * tc[4] - 1.09957660e+01;
    // species 28: aC3H5
    species[28] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 29: C3H6
    species[29] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 30: nC3H7
    species[30] = +7.70974790e+00 * tc[0] + 1.60314850e-02 * tc[1] -
                  2.63601190e-06 * tc[2] + 2.52961173e-10 * tc[3] -
                  9.71567975e-15 * tc[4] - 1.55152970e+01;
    // species 31: C4H81
    species[31] = +2.05358410e+00 * tc[0] + 3.43505070e-02 * tc[1] -
                  7.94159850e-06 * tc[2] + 1.10298873e-09 * tc[3] -
                  6.34026125e-14 * tc[4] + 1.55432010e+01;
    // species 32: N
    species[32] = +2.41594290e+00 * tc[0] + 1.74890650e-04 * tc[1] -
                  5.95118450e-08 * tc[2] + 1.00754150e-11 * tc[3] -
                  5.09024550e-16 * tc[4] + 4.64960960e+00;
    // species 33: NO
    species[33] = +3.26060560e+00 * tc[0] + 1.19110430e-03 * tc[1] -
                  2.14585240e-07 * tc[2] + 2.31525563e-11 * tc[3] -
                  1.00840247e-15 * tc[4] + 6.36930270e+00;
    // species 34: NO2
    species[34] = +4.88475420e+00 * tc[0] + 2.17239560e-03 * tc[1] -
                  4.14034530e-07 * tc[2] + 5.24917000e-11 * tc[3] -
                  2.62772375e-15 * tc[4] - 1.17416950e-01;
    // species 37: NCO
    species[37] = +5.15218450e+00 * tc[0] + 2.30517610e-03 * tc[1] -
                  4.40165765e-07 * tc[2] + 4.92969933e-11 * tc[3] -
                  2.27444990e-15 * tc[4] - 2.54426600e+00;
    // species 38: CH3O2
    species[38] = +8.00891500e+00 * tc[0] + 5.46924100e-03 * tc[1] -
                  6.21696000e-07 * tc[2] + 4.97271000e-11 * tc[3] -
                  1.90463325e-15 * tc[4] - 1.68740400e+01;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +2.64727989e+00 * tc[0] + 1.27505342e-02 * tc[1] -
                  5.23971180e-06 * tc[2] + 1.47144279e-09 * tc[3] -
                  1.89380367e-13 * tc[4] + 1.07332972e+01;
  } else {
    // species 35: HCNO
    species[35] = +6.59860456e+00 * tc[0] + 3.02778626e-03 * tc[1] -
                  5.38521730e-07 * tc[2] + 5.72221760e-11 * tc[3] -
                  2.53598478e-15 * tc[4] - 1.03306599e+01;
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +3.63096317e+00 * tc[0] + 7.30282357e-03 * tc[1] -
                  1.14025001e-06 * tc[2] - 2.20423766e-10 * tc[3] +
                  9.05589380e-14 * tc[4] + 6.19457727e+00;
  } else {
    // species 36: HNCO
    species[36] = +6.22395134e+00 * tc[0] + 3.17864004e-03 * tc[1] -
                  5.46893775e-07 * tc[2] + 5.69117210e-11 * tc[3] -
                  2.48755489e-15 * tc[4] - 8.38224741e+00;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[39];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 39; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with no change at a midpoint T
  // species 0: AR
  result += y[0] *
            (+2.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
             0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
            0.0250312891113892;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: N2
    result +=
      y[1] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
    // species 2: H
    result +=
      y[2] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 3: O
    result +=
      y[3] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 4: OH
    result +=
      y[4] *
      (+4.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: HO2
    result +=
      y[5] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 6: H2
    result +=
      y[6] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 7: H2O
    result +=
      y[7] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 8: H2O2
    result +=
      y[8] *
      (+4.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 9: O2
    result +=
      y[9] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 10: CH3
    result +=
      y[10] *
      (+3.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 11: CH4
    result +=
      y[11] *
      (+5.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 12: HCO
    result +=
      y[12] *
      (+4.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3O
    result +=
      y[14] *
      (+3.71180502e+00 - 2.80463306e-03 * tc[1] + 3.76550971e-05 * tc[2] -
       4.73072089e-08 * tc[3] + 1.86588420e-11 * tc[4]) *
      0.0322227234645872;
    // species 15: CH3OH
    result +=
      y[15] *
      (+5.71539582e+00 - 1.52309129e-02 * tc[1] + 6.52441155e-05 * tc[2] -
       7.10806889e-08 * tc[3] + 2.61352698e-11 * tc[4]) *
      0.0312090381374446;
    // species 16: CO
    result +=
      y[16] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+3.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+4.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 23: HCCO
    result +=
      y[23] *
      (+2.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 24: CH2CO
    result +=
      y[24] *
      (+2.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+3.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 26: CH2OCH2
    result +=
      y[26] *
      (+3.75905320e+00 - 9.44121800e-03 * tc[1] + 8.03097210e-05 * tc[2] -
       1.00807880e-07 * tc[3] + 4.00399210e-11 * tc[4]) *
      0.0226999296302181;
    // species 27: aC3H4
    result +=
      y[27] *
      (+2.61304450e+00 + 1.21225750e-02 * tc[1] + 1.85398800e-05 * tc[2] -
       3.45251490e-08 * tc[3] + 1.53350790e-11 * tc[4]) *
      0.0249594409085237;
    // species 28: aC3H5
    result +=
      y[28] *
      (+1.36318350e+00 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 29: C3H6
    result +=
      y[29] *
      (+1.49330700e+00 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 30: nC3H7
    result +=
      y[30] *
      (+1.04911730e+00 + 2.60089730e-02 * tc[1] + 2.35425160e-06 * tc[2] -
       1.95951320e-08 * tc[3] + 9.37202070e-12 * tc[4]) *
      0.0232077792476038;
    // species 31: C4H81
    result +=
      y[31] *
      (+1.18113800e+00 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 32: N
    result +=
      y[32] *
      (+2.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0713928749910759;
    // species 33: NO
    result +=
      y[33] *
      (+4.21847630e+00 - 4.63897600e-03 * tc[1] + 1.10410220e-05 * tc[2] -
       9.33613540e-09 * tc[3] + 2.80357700e-12 * tc[4]) *
      0.0333266679997334;
    // species 34: NO2
    result +=
      y[34] *
      (+3.94403120e+00 - 1.58542900e-03 * tc[1] + 1.66578120e-05 * tc[2] -
       2.04754260e-08 * tc[3] + 7.83505640e-12 * tc[4]) *
      0.0217367677426367;
    // species 37: NCO
    result +=
      y[37] *
      (+2.82693080e+00 + 8.80516880e-03 * tc[1] - 8.38661340e-06 * tc[2] +
       4.80169640e-09 * tc[3] - 1.33135950e-12 * tc[4]) *
      0.0237998905205036;
    // species 38: CH3O2
    result +=
      y[38] *
      (+1.73533900e+00 + 2.22003400e-02 * tc[1] - 1.88414600e-05 * tc[2] +
       9.50131400e-09 * tc[3] - 2.21726900e-12 * tc[4]) *
      0.0212616673399528;
  } else {
    // species 1: N2
    result +=
      y[1] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 2: H
    result +=
      y[2] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 3: O
    result +=
      y[3] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 4: OH
    result +=
      y[4] *
      (+2.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 5: HO2
    result +=
      y[5] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 6: H2
    result +=
      y[6] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 7: H2O
    result +=
      y[7] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 8: H2O2
    result +=
      y[8] *
      (+4.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 9: O2
    result +=
      y[9] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 10: CH3
    result +=
      y[10] *
      (+2.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 11: CH4
    result +=
      y[11] *
      (+7.48514950e-02 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 12: HCO
    result +=
      y[12] *
      (+2.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3O
    result +=
      y[14] *
      (+4.75779238e+00 + 7.44142474e-03 * tc[1] - 2.69705176e-06 * tc[2] +
       4.38090504e-10 * tc[3] - 2.63537098e-14 * tc[4]) *
      0.0322227234645872;
    // species 15: CH3OH
    result +=
      y[15] *
      (+1.78970791e+00 + 1.40938292e-02 * tc[1] - 6.36500835e-06 * tc[2] +
       1.38171085e-09 * tc[3] - 1.17060220e-13 * tc[4]) *
      0.0312090381374446;
    // species 16: CO
    result +=
      y[16] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+3.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+1.95465642e+00 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 23: HCCO
    result +=
      y[23] *
      (+5.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 24: CH2CO
    result +=
      y[24] *
      (+4.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+5.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 26: CH2OCH2
    result +=
      y[26] *
      (+5.48876410e+00 + 1.20461900e-02 * tc[1] - 4.33369310e-06 * tc[2] +
       7.00283110e-10 * tc[3] - 4.19490880e-14 * tc[4]) *
      0.0226999296302181;
    // species 27: aC3H4
    result +=
      y[27] *
      (+6.31687220e+00 + 1.11337280e-02 * tc[1] - 3.96293780e-06 * tc[2] +
       6.35642380e-10 * tc[3] - 3.78755400e-14 * tc[4]) *
      0.0249594409085237;
    // species 28: aC3H5
    result +=
      y[28] *
      (+6.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 29: C3H6
    result +=
      y[29] *
      (+6.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 30: nC3H7
    result +=
      y[30] *
      (+7.70974790e+00 + 1.60314850e-02 * tc[1] - 5.27202380e-06 * tc[2] +
       7.58883520e-10 * tc[3] - 3.88627190e-14 * tc[4]) *
      0.0232077792476038;
    // species 31: C4H81
    result +=
      y[31] *
      (+2.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 32: N
    result +=
      y[32] *
      (+2.41594290e+00 + 1.74890650e-04 * tc[1] - 1.19023690e-07 * tc[2] +
       3.02262450e-11 * tc[3] - 2.03609820e-15 * tc[4]) *
      0.0713928749910759;
    // species 33: NO
    result +=
      y[33] *
      (+3.26060560e+00 + 1.19110430e-03 * tc[1] - 4.29170480e-07 * tc[2] +
       6.94576690e-11 * tc[3] - 4.03360990e-15 * tc[4]) *
      0.0333266679997334;
    // species 34: NO2
    result +=
      y[34] *
      (+4.88475420e+00 + 2.17239560e-03 * tc[1] - 8.28069060e-07 * tc[2] +
       1.57475100e-10 * tc[3] - 1.05108950e-14 * tc[4]) *
      0.0217367677426367;
    // species 37: NCO
    result +=
      y[37] *
      (+5.15218450e+00 + 2.30517610e-03 * tc[1] - 8.80331530e-07 * tc[2] +
       1.47890980e-10 * tc[3] - 9.09779960e-15 * tc[4]) *
      0.0237998905205036;
    // species 38: CH3O2
    result +=
      y[38] *
      (+8.00891500e+00 + 5.46924100e-03 * tc[1] - 1.24339200e-06 * tc[2] +
       1.49181300e-10 * tc[3] - 7.61853300e-15 * tc[4]) *
      0.0212616673399528;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 35: HCNO
    result +=
      y[35] *
      (+2.64727989e+00 + 1.27505342e-02 * tc[1] - 1.04794236e-05 * tc[2] +
       4.41432836e-09 * tc[3] - 7.57521466e-13 * tc[4]) *
      0.0232423009877978;
  } else {
    // species 35: HCNO
    result +=
      y[35] *
      (+6.59860456e+00 + 3.02778626e-03 * tc[1] - 1.07704346e-06 * tc[2] +
       1.71666528e-10 * tc[3] - 1.01439391e-14 * tc[4]) *
      0.0232423009877978;
  }

  // species with midpoint at T=1478 kelvin
  if (tT < 1478) {
    // species 36: HNCO
    result +=
      y[36] *
      (+3.63096317e+00 + 7.30282357e-03 * tc[1] - 2.28050003e-06 * tc[2] -
       6.61271298e-10 * tc[3] + 3.62235752e-13 * tc[4]) *
      0.0232423009877978;
  } else {
    // species 36: HNCO
    result +=
      y[36] *
      (+6.22395134e+00 + 3.17864004e-03 * tc[1] - 1.09378755e-06 * tc[2] +
       1.70735163e-10 * tc[3] - 9.95021955e-15 * tc[4]) *
      0.0232423009877978;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[39];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 39; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with no change at a midpoint T
  // species 0: AR
  result += y[0] *
            (+1.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
             0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
            0.0250312891113892;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: N2
    result +=
      y[1] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
    // species 2: H
    result +=
      y[2] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 3: O
    result +=
      y[3] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 4: OH
    result +=
      y[4] *
      (+3.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: HO2
    result +=
      y[5] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 6: H2
    result +=
      y[6] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 7: H2O
    result +=
      y[7] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 8: H2O2
    result +=
      y[8] *
      (+3.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 9: O2
    result +=
      y[9] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 10: CH3
    result +=
      y[10] *
      (+2.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 11: CH4
    result +=
      y[11] *
      (+4.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 12: HCO
    result +=
      y[12] *
      (+3.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3O
    result +=
      y[14] *
      (+2.71180502e+00 - 2.80463306e-03 * tc[1] + 3.76550971e-05 * tc[2] -
       4.73072089e-08 * tc[3] + 1.86588420e-11 * tc[4]) *
      0.0322227234645872;
    // species 15: CH3OH
    result +=
      y[15] *
      (+4.71539582e+00 - 1.52309129e-02 * tc[1] + 6.52441155e-05 * tc[2] -
       7.10806889e-08 * tc[3] + 2.61352698e-11 * tc[4]) *
      0.0312090381374446;
    // species 16: CO
    result +=
      y[16] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+2.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+3.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 23: HCCO
    result +=
      y[23] *
      (+1.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 24: CH2CO
    result +=
      y[24] *
      (+1.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+2.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 26: CH2OCH2
    result +=
      y[26] *
      (+2.75905320e+00 - 9.44121800e-03 * tc[1] + 8.03097210e-05 * tc[2] -
       1.00807880e-07 * tc[3] + 4.00399210e-11 * tc[4]) *
      0.0226999296302181;
    // species 27: aC3H4
    result +=
      y[27] *
      (+1.61304450e+00 + 1.21225750e-02 * tc[1] + 1.85398800e-05 * tc[2] -
       3.45251490e-08 * tc[3] + 1.53350790e-11 * tc[4]) *
      0.0249594409085237;
    // species 28: aC3H5
    result +=
      y[28] *
      (+3.63183500e-01 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 29: C3H6
    result +=
      y[29] *
      (+4.93307000e-01 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 30: nC3H7
    result +=
      y[30] *
      (+4.91173000e-02 + 2.60089730e-02 * tc[1] + 2.35425160e-06 * tc[2] -
       1.95951320e-08 * tc[3] + 9.37202070e-12 * tc[4]) *
      0.0232077792476038;
    // species 31: C4H81
    result +=
      y[31] *
      (+1.81138000e-01 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 32: N
    result +=
      y[32] *
      (+1.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0713928749910759;
    // species 33: NO
    result +=
      y[33] *
      (+3.21847630e+00 - 4.63897600e-03 * tc[1] + 1.10410220e-05 * tc[2] -
       9.33613540e-09 * tc[3] + 2.80357700e-12 * tc[4]) *
      0.0333266679997334;
    // species 34: NO2
    result +=
      y[34] *
      (+2.94403120e+00 - 1.58542900e-03 * tc[1] + 1.66578120e-05 * tc[2] -
       2.04754260e-08 * tc[3] + 7.83505640e-12 * tc[4]) *
      0.0217367677426367;
    // species 37: NCO
    result +=
      y[37] *
      (+1.82693080e+00 + 8.80516880e-03 * tc[1] - 8.38661340e-06 * tc[2] +
       4.80169640e-09 * tc[3] - 1.33135950e-12 * tc[4]) *
      0.0237998905205036;
    // species 38: CH3O2
    result +=
      y[38] *
      (+7.35339000e-01 + 2.22003400e-02 * tc[1] - 1.88414600e-05 * tc[2] +
       9.50131400e-09 * tc[3] - 2.21726900e-12 * tc[4]) *
      0.0212616673399528;
  } else {
    // species 1: N2
    result +=
      y[1] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 2: H
    result +=
      y[2] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 3: O
    result +=
      y[3] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 4: OH
    result +=
      y[4] *
      (+1.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 5: HO2
    result +=
      y[5] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 6: H2
    result +=
      y[6] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 7: H2O
    result +=
      y[7] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 8: H2O2
    result +=
      y[8] *
      (+3.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 9: O2
    result +=
      y[9] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 10: CH3
    result +=
      y[10] *
      (+1.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 11: CH4
    result +=
      y[11] *
      (-9.25148505e-01 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 12: HCO
    result +=
      y[12] *
      (+1.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3O
    result +=
      y[14] *
      (+3.75779238e+00 + 7.44142474e-03 * tc[1] - 2.69705176e-06 * tc[2] +
       4.38090504e-10 * tc[3] - 2.63537098e-14 * tc[4]) *
      0.0322227234645872;
    // species 15: CH3OH
    result +=
      y[15] *
      (+7.89707910e-01 + 1.40938292e-02 * tc[1] - 6.36500835e-06 * tc[2] +
       1.38171085e-09 * tc[3] - 1.17060220e-13 * tc[4]) *
      0.0312090381374446;
    // species 16: CO
    result +=
      y[16] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 17: CO2
    result +=
      y[17] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 18: C2H2
    result +=
      y[18] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 19: C2H3
    result +=
      y[19] *
      (+2.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 20: C2H4
    result +=
      y[20] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 21: C2H5
    result +=
      y[21] *
      (+9.54656420e-01 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 22: C2H6
    result +=
      y[22] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 23: HCCO
    result +=
      y[23] *
      (+4.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 24: CH2CO
    result +=
      y[24] *
      (+3.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+4.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 26: CH2OCH2
    result +=
      y[26] *
      (+4.48876410e+00 + 1.20461900e-02 * tc[1] - 4.33369310e-06 * tc[2] +
       7.00283110e-10 * tc[3] - 4.19490880e-14 * tc[4]) *
      0.0226999296302181;
    // species 27: aC3H4
    result +=
      y[27] *
      (+5.31687220e+00 + 1.11337280e-02 * tc[1] - 3.96293780e-06 * tc[2] +
       6.35642380e-10 * tc[3] - 3.78755400e-14 * tc[4]) *
      0.0249594409085237;
    // species 28: aC3H5
    result +=
      y[28] *
      (+5.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 29: C3H6
    result +=
      y[29] *
      (+5.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 30: nC3H7
    result +=
      y[30] *
      (+6.70974790e+00 + 1.60314850e-02 * tc[1] - 5.27202380e-06 * tc[2] +
       7.58883520e-10 * tc[3] - 3.88627190e-14 * tc[4]) *
      0.0232077792476038;
    // species 31: C4H81
    result +=
      y[31] *
      (+1.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 32: N
    result +=
      y[32] *
      (+1.41594290e+00 + 1.74890650e-04 * tc[1] - 1.19023690e-07 * tc[2] +
       3.02262450e-11 * tc[3] - 2.03609820e-15 * tc[4]) *
      0.0713928749910759;
    // species 33: NO
    result +=
      y[33] *
      (+2.26060560e+00 + 1.19110430e-03 * tc[1] - 4.29170480e-07 * tc[2] +
       6.94576690e-11 * tc[3] - 4.03360990e-15 * tc[4]) *
      0.0333266679997334;
    // species 34: NO2
    result +=
      y[34] *
      (+3.88475420e+00 + 2.17239560e-03 * tc[1] - 8.28069060e-07 * tc[2] +
       1.57475100e-10 * tc[3] - 1.05108950e-14 * tc[4]) *
      0.0217367677426367;
    // species 37: NCO
    result +=
      y[37] *
      (+4.15218450e+00 + 2.30517610e-03 * tc[1] - 8.80331530e-07 * tc[2] +
       1.47890980e-10 * tc[3] - 9.09779960e-15 * tc[4]) *
      0.0237998905205036;
    // species 38: CH3O2
    result +=
      y[38] *
      (+7.00891500e+00 + 5.46924100e-03 * tc[1] - 1.24339200e-06 * tc[2] +
       1.49181300e-10 * tc[3] - 7.61853300e-15 * tc[4]) *
      0.0212616673399528;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 35: HCNO
    result +=
      y[35] *
      (+1.64727989e+00 + 1.27505342e-02 * tc[1] - 1.04794236e-05 * tc[2] +
       4.41432836e-09 * tc[3] - 7.57521466e-13 * tc[4]) *
      0.0232423009877978;
  } else {
    // species 35: HCNO
    result +=
      y[35] *
      (+5.59860456e+00 + 3.02778626e-03 * tc[1] - 1.07704346e-06 * tc[2] +
       1.71666528e-10 * tc[3] - 1.01439391e-14 * tc[4]) *
      0.0232423009877978;
  }

  // species with midpoint at T=1478 kelvin
  if (tT < 1478) {
    // species 36: HNCO
    result +=
      y[36] *
      (+2.63096317e+00 + 7.30282357e-03 * tc[1] - 2.28050003e-06 * tc[2] -
       6.61271298e-10 * tc[3] + 3.62235752e-13 * tc[4]) *
      0.0232423009877978;
  } else {
    // species 36: HNCO
    result +=
      y[36] *
      (+5.22395134e+00 + 3.17864004e-03 * tc[1] - 1.09378755e-06 * tc[2] +
       1.70735163e-10 * tc[3] - 9.95021955e-15 * tc[4]) *
      0.0232423009877978;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[39];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 39; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  result +=
    y[0] *
    (+2.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
     0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4] - 7.45375000e+02 * invT) *
    0.0250312891113892;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: N2
    result += y[1] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
    // species 2: H
    result += y[2] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 3: O
    result += y[3] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 4: OH
    result += y[4] *
              (+4.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 5: HO2
    result += y[5] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 6: H2
    result += y[6] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 7: H2O
    result += y[7] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 8: H2O2
    result += y[8] *
              (+4.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 9: O2
    result += y[9] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 10: CH3
    result += y[10] *
              (+3.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 11: CH4
    result += y[11] *
              (+5.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 12: HCO
    result += y[12] *
              (+4.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3O
    result += y[14] *
              (+3.71180502e+00 - 1.40231653e-03 * tc[1] +
               1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
               3.73176840e-12 * tc[4] + 1.29569760e+03 * invT) *
              0.0322227234645872;
    // species 15: CH3OH
    result += y[15] *
              (+5.71539582e+00 - 7.61545645e-03 * tc[1] +
               2.17480385e-05 * tc[2] - 1.77701722e-08 * tc[3] +
               5.22705396e-12 * tc[4] - 2.56427656e+04 * invT) *
              0.0312090381374446;
    // species 16: CO
    result += y[16] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+3.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+4.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 23: HCCO
    result += y[23] *
              (+2.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 24: CH2CO
    result += y[24] *
              (+2.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.27000000e+03 * invT) *
              0.0237885672145967;
    // species 25: CH2CHO
    result += y[25] *
              (+3.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 26: CH2OCH2
    result += y[26] *
              (+3.75905320e+00 - 4.72060900e-03 * tc[1] +
               2.67699070e-05 * tc[2] - 2.52019700e-08 * tc[3] +
               8.00798420e-12 * tc[4] - 7.56081430e+03 * invT) *
              0.0226999296302181;
    // species 27: aC3H4
    result += y[27] *
              (+2.61304450e+00 + 6.06128750e-03 * tc[1] +
               6.17996000e-06 * tc[2] - 8.63128725e-09 * tc[3] +
               3.06701580e-12 * tc[4] + 2.15415670e+04 * invT) *
              0.0249594409085237;
    // species 28: aC3H5
    result += y[28] *
              (+1.36318350e+00 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 29: C3H6
    result += y[29] *
              (+1.49330700e+00 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 30: nC3H7
    result += y[30] *
              (+1.04911730e+00 + 1.30044865e-02 * tc[1] +
               7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
               1.87440414e-12 * tc[4] + 1.03123460e+04 * invT) *
              0.0232077792476038;
    // species 31: C4H81
    result += y[31] *
              (+1.18113800e+00 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 32: N
    result += y[32] *
              (+2.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 5.61046370e+04 * invT) *
              0.0713928749910759;
    // species 33: NO
    result += y[33] *
              (+4.21847630e+00 - 2.31948800e-03 * tc[1] +
               3.68034067e-06 * tc[2] - 2.33403385e-09 * tc[3] +
               5.60715400e-13 * tc[4] + 9.84462300e+03 * invT) *
              0.0333266679997334;
    // species 34: NO2
    result += y[34] *
              (+3.94403120e+00 - 7.92714500e-04 * tc[1] +
               5.55260400e-06 * tc[2] - 5.11885650e-09 * tc[3] +
               1.56701128e-12 * tc[4] + 2.89661790e+03 * invT) *
              0.0217367677426367;
    // species 37: NCO
    result += y[37] *
              (+2.82693080e+00 + 4.40258440e-03 * tc[1] -
               2.79553780e-06 * tc[2] + 1.20042410e-09 * tc[3] -
               2.66271900e-13 * tc[4] + 1.46824770e+04 * invT) *
              0.0237998905205036;
    // species 38: CH3O2
    result += y[38] *
              (+1.73533900e+00 + 1.11001700e-02 * tc[1] -
               6.28048667e-06 * tc[2] + 2.37532850e-09 * tc[3] -
               4.43453800e-13 * tc[4] + 7.40078900e+02 * invT) *
              0.0212616673399528;
  } else {
    // species 1: N2
    result += y[1] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 2: H
    result += y[2] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 3: O
    result += y[3] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 4: OH
    result += y[4] *
              (+2.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 5: HO2
    result += y[5] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 6: H2
    result += y[6] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 7: H2O
    result += y[7] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 8: H2O2
    result += y[8] *
              (+4.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 9: O2
    result += y[9] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 10: CH3
    result += y[10] *
              (+2.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 11: CH4
    result += y[11] *
              (+7.48514950e-02 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 12: HCO
    result += y[12] *
              (+2.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3O
    result += y[14] *
              (+4.75779238e+00 + 3.72071237e-03 * tc[1] -
               8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
               5.27074196e-15 * tc[4] + 3.78111940e+02 * invT) *
              0.0322227234645872;
    // species 15: CH3OH
    result += y[15] *
              (+1.78970791e+00 + 7.04691460e-03 * tc[1] -
               2.12166945e-06 * tc[2] + 3.45427713e-10 * tc[3] -
               2.34120440e-14 * tc[4] - 2.53748747e+04 * invT) *
              0.0312090381374446;
    // species 16: CO
    result += y[16] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+3.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+1.95465642e+00 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 23: HCCO
    result += y[23] *
              (+5.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 24: CH2CO
    result += y[24] *
              (+4.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.77850000e+03 * invT) *
              0.0237885672145967;
    // species 25: CH2CHO
    result += y[25] *
              (+5.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 26: CH2OCH2
    result += y[26] *
              (+5.48876410e+00 + 6.02309500e-03 * tc[1] -
               1.44456437e-06 * tc[2] + 1.75070777e-10 * tc[3] -
               8.38981760e-15 * tc[4] - 9.18042510e+03 * invT) *
              0.0226999296302181;
    // species 27: aC3H4
    result += y[27] *
              (+6.31687220e+00 + 5.56686400e-03 * tc[1] -
               1.32097927e-06 * tc[2] + 1.58910595e-10 * tc[3] -
               7.57510800e-15 * tc[4] + 2.01174950e+04 * invT) *
              0.0249594409085237;
    // species 28: aC3H5
    result += y[28] *
              (+6.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 29: C3H6
    result += y[29] *
              (+6.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 30: nC3H7
    result += y[30] *
              (+7.70974790e+00 + 8.01574250e-03 * tc[1] -
               1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
               7.77254380e-15 * tc[4] + 7.97622360e+03 * invT) *
              0.0232077792476038;
    // species 31: C4H81
    result += y[31] *
              (+2.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 32: N
    result += y[32] *
              (+2.41594290e+00 + 8.74453250e-05 * tc[1] -
               3.96745633e-08 * tc[2] + 7.55656125e-12 * tc[3] -
               4.07219640e-16 * tc[4] + 5.61337730e+04 * invT) *
              0.0713928749910759;
    // species 33: NO
    result += y[33] *
              (+3.26060560e+00 + 5.95552150e-04 * tc[1] -
               1.43056827e-07 * tc[2] + 1.73644173e-11 * tc[3] -
               8.06721980e-16 * tc[4] + 9.92097460e+03 * invT) *
              0.0333266679997334;
    // species 34: NO2
    result += y[34] *
              (+4.88475420e+00 + 1.08619780e-03 * tc[1] -
               2.76023020e-07 * tc[2] + 3.93687750e-11 * tc[3] -
               2.10217900e-15 * tc[4] + 2.31649830e+03 * invT) *
              0.0217367677426367;
    // species 37: NCO
    result += y[37] *
              (+5.15218450e+00 + 1.15258805e-03 * tc[1] -
               2.93443843e-07 * tc[2] + 3.69727450e-11 * tc[3] -
               1.81955992e-15 * tc[4] + 1.40041230e+04 * invT) *
              0.0237998905205036;
    // species 38: CH3O2
    result += y[38] *
              (+8.00891500e+00 + 2.73462050e-03 * tc[1] -
               4.14464000e-07 * tc[2] + 3.72953250e-11 * tc[3] -
               1.52370660e-15 * tc[4] - 1.13786900e+03 * invT) *
              0.0212616673399528;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 35: HCNO
    result += y[35] *
              (+2.64727989e+00 + 6.37526710e-03 * tc[1] -
               3.49314120e-06 * tc[2] + 1.10358209e-09 * tc[3] -
               1.51504293e-13 * tc[4] + 1.92990252e+04 * invT) *
              0.0232423009877978;
  } else {
    // species 35: HCNO
    result += y[35] *
              (+6.59860456e+00 + 1.51389313e-03 * tc[1] -
               3.59014487e-07 * tc[2] + 4.29166320e-11 * tc[3] -
               2.02878782e-15 * tc[4] + 1.79661339e+04 * invT) *
              0.0232423009877978;
  }

  // species with midpoint at T=1478 kelvin
  if (tT < 1478) {
    // species 36: HNCO
    result += y[36] *
              (+3.63096317e+00 + 3.65141179e-03 * tc[1] -
               7.60166677e-07 * tc[2] - 1.65317825e-10 * tc[3] +
               7.24471504e-14 * tc[4] - 1.55873636e+04 * invT) *
              0.0232423009877978;
  } else {
    // species 36: HNCO
    result += y[36] *
              (+6.22395134e+00 + 1.58932002e-03 * tc[1] -
               3.64595850e-07 * tc[2] + 4.26837908e-11 * tc[3] -
               1.99004391e-15 * tc[4] - 1.66599344e+04 * invT) *
              0.0232423009877978;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[39];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 39; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with no change at a midpoint T
  // species 0: AR
  result +=
    y[0] *
    (+1.50000000e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
     0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4] - 7.45375000e+02 * invT) *
    0.0250312891113892;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: N2
    result += y[1] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
    // species 2: H
    result += y[2] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 3: O
    result += y[3] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 4: OH
    result += y[4] *
              (+3.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 5: HO2
    result += y[5] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 6: H2
    result += y[6] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 7: H2O
    result += y[7] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 8: H2O2
    result += y[8] *
              (+3.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 9: O2
    result += y[9] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 10: CH3
    result += y[10] *
              (+2.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 11: CH4
    result += y[11] *
              (+4.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 12: HCO
    result += y[12] *
              (+3.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3O
    result += y[14] *
              (+2.71180502e+00 - 1.40231653e-03 * tc[1] +
               1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
               3.73176840e-12 * tc[4] + 1.29569760e+03 * invT) *
              0.0322227234645872;
    // species 15: CH3OH
    result += y[15] *
              (+4.71539582e+00 - 7.61545645e-03 * tc[1] +
               2.17480385e-05 * tc[2] - 1.77701722e-08 * tc[3] +
               5.22705396e-12 * tc[4] - 2.56427656e+04 * invT) *
              0.0312090381374446;
    // species 16: CO
    result += y[16] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+2.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+3.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 23: HCCO
    result += y[23] *
              (+1.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 24: CH2CO
    result += y[24] *
              (+1.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.27000000e+03 * invT) *
              0.0237885672145967;
    // species 25: CH2CHO
    result += y[25] *
              (+2.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 26: CH2OCH2
    result += y[26] *
              (+2.75905320e+00 - 4.72060900e-03 * tc[1] +
               2.67699070e-05 * tc[2] - 2.52019700e-08 * tc[3] +
               8.00798420e-12 * tc[4] - 7.56081430e+03 * invT) *
              0.0226999296302181;
    // species 27: aC3H4
    result += y[27] *
              (+1.61304450e+00 + 6.06128750e-03 * tc[1] +
               6.17996000e-06 * tc[2] - 8.63128725e-09 * tc[3] +
               3.06701580e-12 * tc[4] + 2.15415670e+04 * invT) *
              0.0249594409085237;
    // species 28: aC3H5
    result += y[28] *
              (+3.63183500e-01 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 29: C3H6
    result += y[29] *
              (+4.93307000e-01 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 30: nC3H7
    result += y[30] *
              (+4.91173000e-02 + 1.30044865e-02 * tc[1] +
               7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
               1.87440414e-12 * tc[4] + 1.03123460e+04 * invT) *
              0.0232077792476038;
    // species 31: C4H81
    result += y[31] *
              (+1.81138000e-01 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 32: N
    result += y[32] *
              (+1.50000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 5.61046370e+04 * invT) *
              0.0713928749910759;
    // species 33: NO
    result += y[33] *
              (+3.21847630e+00 - 2.31948800e-03 * tc[1] +
               3.68034067e-06 * tc[2] - 2.33403385e-09 * tc[3] +
               5.60715400e-13 * tc[4] + 9.84462300e+03 * invT) *
              0.0333266679997334;
    // species 34: NO2
    result += y[34] *
              (+2.94403120e+00 - 7.92714500e-04 * tc[1] +
               5.55260400e-06 * tc[2] - 5.11885650e-09 * tc[3] +
               1.56701128e-12 * tc[4] + 2.89661790e+03 * invT) *
              0.0217367677426367;
    // species 37: NCO
    result += y[37] *
              (+1.82693080e+00 + 4.40258440e-03 * tc[1] -
               2.79553780e-06 * tc[2] + 1.20042410e-09 * tc[3] -
               2.66271900e-13 * tc[4] + 1.46824770e+04 * invT) *
              0.0237998905205036;
    // species 38: CH3O2
    result += y[38] *
              (+7.35339000e-01 + 1.11001700e-02 * tc[1] -
               6.28048667e-06 * tc[2] + 2.37532850e-09 * tc[3] -
               4.43453800e-13 * tc[4] + 7.40078900e+02 * invT) *
              0.0212616673399528;
  } else {
    // species 1: N2
    result += y[1] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 2: H
    result += y[2] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 3: O
    result += y[3] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 4: OH
    result += y[4] *
              (+1.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 5: HO2
    result += y[5] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 6: H2
    result += y[6] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 7: H2O
    result += y[7] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 8: H2O2
    result += y[8] *
              (+3.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 9: O2
    result += y[9] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 10: CH3
    result += y[10] *
              (+1.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 11: CH4
    result += y[11] *
              (-9.25148505e-01 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 12: HCO
    result += y[12] *
              (+1.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3O
    result += y[14] *
              (+3.75779238e+00 + 3.72071237e-03 * tc[1] -
               8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
               5.27074196e-15 * tc[4] + 3.78111940e+02 * invT) *
              0.0322227234645872;
    // species 15: CH3OH
    result += y[15] *
              (+7.89707910e-01 + 7.04691460e-03 * tc[1] -
               2.12166945e-06 * tc[2] + 3.45427713e-10 * tc[3] -
               2.34120440e-14 * tc[4] - 2.53748747e+04 * invT) *
              0.0312090381374446;
    // species 16: CO
    result += y[16] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 17: CO2
    result += y[17] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 18: C2H2
    result += y[18] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 19: C2H3
    result += y[19] *
              (+2.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 20: C2H4
    result += y[20] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 21: C2H5
    result += y[21] *
              (+9.54656420e-01 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 22: C2H6
    result += y[22] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 23: HCCO
    result += y[23] *
              (+4.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 24: CH2CO
    result += y[24] *
              (+3.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.77850000e+03 * invT) *
              0.0237885672145967;
    // species 25: CH2CHO
    result += y[25] *
              (+4.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 26: CH2OCH2
    result += y[26] *
              (+4.48876410e+00 + 6.02309500e-03 * tc[1] -
               1.44456437e-06 * tc[2] + 1.75070777e-10 * tc[3] -
               8.38981760e-15 * tc[4] - 9.18042510e+03 * invT) *
              0.0226999296302181;
    // species 27: aC3H4
    result += y[27] *
              (+5.31687220e+00 + 5.56686400e-03 * tc[1] -
               1.32097927e-06 * tc[2] + 1.58910595e-10 * tc[3] -
               7.57510800e-15 * tc[4] + 2.01174950e+04 * invT) *
              0.0249594409085237;
    // species 28: aC3H5
    result += y[28] *
              (+5.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 29: C3H6
    result += y[29] *
              (+5.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 30: nC3H7
    result += y[30] *
              (+6.70974790e+00 + 8.01574250e-03 * tc[1] -
               1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
               7.77254380e-15 * tc[4] + 7.97622360e+03 * invT) *
              0.0232077792476038;
    // species 31: C4H81
    result += y[31] *
              (+1.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 32: N
    result += y[32] *
              (+1.41594290e+00 + 8.74453250e-05 * tc[1] -
               3.96745633e-08 * tc[2] + 7.55656125e-12 * tc[3] -
               4.07219640e-16 * tc[4] + 5.61337730e+04 * invT) *
              0.0713928749910759;
    // species 33: NO
    result += y[33] *
              (+2.26060560e+00 + 5.95552150e-04 * tc[1] -
               1.43056827e-07 * tc[2] + 1.73644173e-11 * tc[3] -
               8.06721980e-16 * tc[4] + 9.92097460e+03 * invT) *
              0.0333266679997334;
    // species 34: NO2
    result += y[34] *
              (+3.88475420e+00 + 1.08619780e-03 * tc[1] -
               2.76023020e-07 * tc[2] + 3.93687750e-11 * tc[3] -
               2.10217900e-15 * tc[4] + 2.31649830e+03 * invT) *
              0.0217367677426367;
    // species 37: NCO
    result += y[37] *
              (+4.15218450e+00 + 1.15258805e-03 * tc[1] -
               2.93443843e-07 * tc[2] + 3.69727450e-11 * tc[3] -
               1.81955992e-15 * tc[4] + 1.40041230e+04 * invT) *
              0.0237998905205036;
    // species 38: CH3O2
    result += y[38] *
              (+7.00891500e+00 + 2.73462050e-03 * tc[1] -
               4.14464000e-07 * tc[2] + 3.72953250e-11 * tc[3] -
               1.52370660e-15 * tc[4] - 1.13786900e+03 * invT) *
              0.0212616673399528;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 35: HCNO
    result += y[35] *
              (+1.64727989e+00 + 6.37526710e-03 * tc[1] -
               3.49314120e-06 * tc[2] + 1.10358209e-09 * tc[3] -
               1.51504293e-13 * tc[4] + 1.92990252e+04 * invT) *
              0.0232423009877978;
  } else {
    // species 35: HCNO
    result += y[35] *
              (+5.59860456e+00 + 1.51389313e-03 * tc[1] -
               3.59014487e-07 * tc[2] + 4.29166320e-11 * tc[3] -
               2.02878782e-15 * tc[4] + 1.79661339e+04 * invT) *
              0.0232423009877978;
  }

  // species with midpoint at T=1478 kelvin
  if (tT < 1478) {
    // species 36: HNCO
    result += y[36] *
              (+2.63096317e+00 + 3.65141179e-03 * tc[1] -
               7.60166677e-07 * tc[2] - 1.65317825e-10 * tc[3] +
               7.24471504e-14 * tc[4] - 1.55873636e+04 * invT) *
              0.0232423009877978;
  } else {
    // species 36: HNCO
    result += y[36] *
              (+5.22395134e+00 + 1.58932002e-03 * tc[1] -
               3.64595850e-07 * tc[2] + 4.26837908e-11 * tc[3] -
               1.99004391e-15 * tc[4] - 1.66599344e+04 * invT) *
              0.0232423009877978;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[39]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 39; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[39]; //  temporary storage
  amrex::Real x[39];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (39.950000 * YOW);
  x[1] = y[1] / (28.014000 * YOW);
  x[2] = y[2] / (1.008000 * YOW);
  x[3] = y[3] / (15.999000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (33.006000 * YOW);
  x[6] = y[6] / (2.016000 * YOW);
  x[7] = y[7] / (18.015000 * YOW);
  x[8] = y[8] / (34.014000 * YOW);
  x[9] = y[9] / (31.998000 * YOW);
  x[10] = y[10] / (15.035000 * YOW);
  x[11] = y[11] / (16.043000 * YOW);
  x[12] = y[12] / (29.018000 * YOW);
  x[13] = y[13] / (30.026000 * YOW);
  x[14] = y[14] / (31.034000 * YOW);
  x[15] = y[15] / (32.042000 * YOW);
  x[16] = y[16] / (28.010000 * YOW);
  x[17] = y[17] / (44.009000 * YOW);
  x[18] = y[18] / (26.038000 * YOW);
  x[19] = y[19] / (27.046000 * YOW);
  x[20] = y[20] / (28.054000 * YOW);
  x[21] = y[21] / (29.062000 * YOW);
  x[22] = y[22] / (30.070000 * YOW);
  x[23] = y[23] / (41.029000 * YOW);
  x[24] = y[24] / (42.037000 * YOW);
  x[25] = y[25] / (43.045000 * YOW);
  x[26] = y[26] / (44.053000 * YOW);
  x[27] = y[27] / (40.065000 * YOW);
  x[28] = y[28] / (41.073000 * YOW);
  x[29] = y[29] / (42.081000 * YOW);
  x[30] = y[30] / (43.089000 * YOW);
  x[31] = y[31] / (56.108000 * YOW);
  x[32] = y[32] / (14.007000 * YOW);
  x[33] = y[33] / (30.006000 * YOW);
  x[34] = y[34] / (46.005000 * YOW);
  x[35] = y[35] / (43.025000 * YOW);
  x[36] = y[36] / (43.025000 * YOW);
  x[37] = y[37] / (42.017000 * YOW);
  x[38] = y[38] / (47.033000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 39; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 39.950000;                  // AR
  XW += x[1] * 28.014000;                  // N2
  XW += x[2] * 1.008000;                   // H
  XW += x[3] * 15.999000;                  // O
  XW += x[4] * 17.007000;                  // OH
  XW += x[5] * 33.006000;                  // HO2
  XW += x[6] * 2.016000;                   // H2
  XW += x[7] * 18.015000;                  // H2O
  XW += x[8] * 34.014000;                  // H2O2
  XW += x[9] * 31.998000;                  // O2
  XW += x[10] * 15.035000;                 // CH3
  XW += x[11] * 16.043000;                 // CH4
  XW += x[12] * 29.018000;                 // HCO
  XW += x[13] * 30.026000;                 // CH2O
  XW += x[14] * 31.034000;                 // CH3O
  XW += x[15] * 32.042000;                 // CH3OH
  XW += x[16] * 28.010000;                 // CO
  XW += x[17] * 44.009000;                 // CO2
  XW += x[18] * 26.038000;                 // C2H2
  XW += x[19] * 27.046000;                 // C2H3
  XW += x[20] * 28.054000;                 // C2H4
  XW += x[21] * 29.062000;                 // C2H5
  XW += x[22] * 30.070000;                 // C2H6
  XW += x[23] * 41.029000;                 // HCCO
  XW += x[24] * 42.037000;                 // CH2CO
  XW += x[25] * 43.045000;                 // CH2CHO
  XW += x[26] * 44.053000;                 // CH2OCH2
  XW += x[27] * 40.065000;                 // aC3H4
  XW += x[28] * 41.073000;                 // aC3H5
  XW += x[29] * 42.081000;                 // C3H6
  XW += x[30] * 43.089000;                 // nC3H7
  XW += x[31] * 56.108000;                 // C4H81
  XW += x[32] * 14.007000;                 // N
  XW += x[33] * 30.006000;                 // NO
  XW += x[34] * 46.005000;                 // NO2
  XW += x[35] * 43.025000;                 // HCNO
  XW += x[36] * 43.025000;                 // HNCO
  XW += x[37] * 42.017000;                 // NCO
  XW += x[38] * 47.033000;                 // CH3O2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 39.950000;  // AR
  W += c[1] * 28.014000;  // N2
  W += c[2] * 1.008000;   // H
  W += c[3] * 15.999000;  // O
  W += c[4] * 17.007000;  // OH
  W += c[5] * 33.006000;  // HO2
  W += c[6] * 2.016000;   // H2
  W += c[7] * 18.015000;  // H2O
  W += c[8] * 34.014000;  // H2O2
  W += c[9] * 31.998000;  // O2
  W += c[10] * 15.035000; // CH3
  W += c[11] * 16.043000; // CH4
  W += c[12] * 29.018000; // HCO
  W += c[13] * 30.026000; // CH2O
  W += c[14] * 31.034000; // CH3O
  W += c[15] * 32.042000; // CH3OH
  W += c[16] * 28.010000; // CO
  W += c[17] * 44.009000; // CO2
  W += c[18] * 26.038000; // C2H2
  W += c[19] * 27.046000; // C2H3
  W += c[20] * 28.054000; // C2H4
  W += c[21] * 29.062000; // C2H5
  W += c[22] * 30.070000; // C2H6
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 42.037000; // CH2CO
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 44.053000; // CH2OCH2
  W += c[27] * 40.065000; // aC3H4
  W += c[28] * 41.073000; // aC3H5
  W += c[29] * 42.081000; // C3H6
  W += c[30] * 43.089000; // nC3H7
  W += c[31] * 56.108000; // C4H81
  W += c[32] * 14.007000; // N
  W += c[33] * 30.006000; // NO
  W += c[34] * 46.005000; // NO2
  W += c[35] * 43.025000; // HCNO
  W += c[36] * 43.025000; // HNCO
  W += c[37] * 42.017000; // NCO
  W += c[38] * 47.033000; // CH3O2

  for (int id = 0; id < 39; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 39.950000;                    // AR
  XW += x[1] * 28.014000;                    // N2
  XW += x[2] * 1.008000;                     // H
  XW += x[3] * 15.999000;                    // O
  XW += x[4] * 17.007000;                    // OH
  XW += x[5] * 33.006000;                    // HO2
  XW += x[6] * 2.016000;                     // H2
  XW += x[7] * 18.015000;                    // H2O
  XW += x[8] * 34.014000;                    // H2O2
  XW += x[9] * 31.998000;                    // O2
  XW += x[10] * 15.035000;                   // CH3
  XW += x[11] * 16.043000;                   // CH4
  XW += x[12] * 29.018000;                   // HCO
  XW += x[13] * 30.026000;                   // CH2O
  XW += x[14] * 31.034000;                   // CH3O
  XW += x[15] * 32.042000;                   // CH3OH
  XW += x[16] * 28.010000;                   // CO
  XW += x[17] * 44.009000;                   // CO2
  XW += x[18] * 26.038000;                   // C2H2
  XW += x[19] * 27.046000;                   // C2H3
  XW += x[20] * 28.054000;                   // C2H4
  XW += x[21] * 29.062000;                   // C2H5
  XW += x[22] * 30.070000;                   // C2H6
  XW += x[23] * 41.029000;                   // HCCO
  XW += x[24] * 42.037000;                   // CH2CO
  XW += x[25] * 43.045000;                   // CH2CHO
  XW += x[26] * 44.053000;                   // CH2OCH2
  XW += x[27] * 40.065000;                   // aC3H4
  XW += x[28] * 41.073000;                   // aC3H5
  XW += x[29] * 42.081000;                   // C3H6
  XW += x[30] * 43.089000;                   // nC3H7
  XW += x[31] * 56.108000;                   // C4H81
  XW += x[32] * 14.007000;                   // N
  XW += x[33] * 30.006000;                   // NO
  XW += x[34] * 46.005000;                   // NO2
  XW += x[35] * 43.025000;                   // HCNO
  XW += x[36] * 43.025000;                   // HNCO
  XW += x[37] * 42.017000;                   // NCO
  XW += x[38] * 47.033000;                   // CH3O2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 39.950000;  // AR
  W += c[1] * 28.014000;  // N2
  W += c[2] * 1.008000;   // H
  W += c[3] * 15.999000;  // O
  W += c[4] * 17.007000;  // OH
  W += c[5] * 33.006000;  // HO2
  W += c[6] * 2.016000;   // H2
  W += c[7] * 18.015000;  // H2O
  W += c[8] * 34.014000;  // H2O2
  W += c[9] * 31.998000;  // O2
  W += c[10] * 15.035000; // CH3
  W += c[11] * 16.043000; // CH4
  W += c[12] * 29.018000; // HCO
  W += c[13] * 30.026000; // CH2O
  W += c[14] * 31.034000; // CH3O
  W += c[15] * 32.042000; // CH3OH
  W += c[16] * 28.010000; // CO
  W += c[17] * 44.009000; // CO2
  W += c[18] * 26.038000; // C2H2
  W += c[19] * 27.046000; // C2H3
  W += c[20] * 28.054000; // C2H4
  W += c[21] * 29.062000; // C2H5
  W += c[22] * 30.070000; // C2H6
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 42.037000; // CH2CO
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 44.053000; // CH2OCH2
  W += c[27] * 40.065000; // aC3H4
  W += c[28] * 41.073000; // aC3H5
  W += c[29] * 42.081000; // C3H6
  W += c[30] * 43.089000; // nC3H7
  W += c[31] * 56.108000; // C4H81
  W += c[32] * 14.007000; // N
  W += c[33] * 30.006000; // NO
  W += c[34] * 46.005000; // NO2
  W += c[35] * 43.025000; // HCNO
  W += c[36] * 43.025000; // HNCO
  W += c[37] * 42.017000; // NCO
  W += c[38] * 47.033000; // CH3O2

  for (int id = 0; id < 39; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 39.950000;  // AR
  XW += x[1] * 28.014000;  // N2
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 15.999000;  // O
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 33.006000;  // HO2
  XW += x[6] * 2.016000;   // H2
  XW += x[7] * 18.015000;  // H2O
  XW += x[8] * 34.014000;  // H2O2
  XW += x[9] * 31.998000;  // O2
  XW += x[10] * 15.035000; // CH3
  XW += x[11] * 16.043000; // CH4
  XW += x[12] * 29.018000; // HCO
  XW += x[13] * 30.026000; // CH2O
  XW += x[14] * 31.034000; // CH3O
  XW += x[15] * 32.042000; // CH3OH
  XW += x[16] * 28.010000; // CO
  XW += x[17] * 44.009000; // CO2
  XW += x[18] * 26.038000; // C2H2
  XW += x[19] * 27.046000; // C2H3
  XW += x[20] * 28.054000; // C2H4
  XW += x[21] * 29.062000; // C2H5
  XW += x[22] * 30.070000; // C2H6
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 42.037000; // CH2CO
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 44.053000; // CH2OCH2
  XW += x[27] * 40.065000; // aC3H4
  XW += x[28] * 41.073000; // aC3H5
  XW += x[29] * 42.081000; // C3H6
  XW += x[30] * 43.089000; // nC3H7
  XW += x[31] * 56.108000; // C4H81
  XW += x[32] * 14.007000; // N
  XW += x[33] * 30.006000; // NO
  XW += x[34] * 46.005000; // NO2
  XW += x[35] * 43.025000; // HCNO
  XW += x[36] * 43.025000; // HNCO
  XW += x[37] * 42.017000; // NCO
  XW += x[38] * 47.033000; // CH3O2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 39.950000;  // AR
  W += c[1] * 28.014000;  // N2
  W += c[2] * 1.008000;   // H
  W += c[3] * 15.999000;  // O
  W += c[4] * 17.007000;  // OH
  W += c[5] * 33.006000;  // HO2
  W += c[6] * 2.016000;   // H2
  W += c[7] * 18.015000;  // H2O
  W += c[8] * 34.014000;  // H2O2
  W += c[9] * 31.998000;  // O2
  W += c[10] * 15.035000; // CH3
  W += c[11] * 16.043000; // CH4
  W += c[12] * 29.018000; // HCO
  W += c[13] * 30.026000; // CH2O
  W += c[14] * 31.034000; // CH3O
  W += c[15] * 32.042000; // CH3OH
  W += c[16] * 28.010000; // CO
  W += c[17] * 44.009000; // CO2
  W += c[18] * 26.038000; // C2H2
  W += c[19] * 27.046000; // C2H3
  W += c[20] * 28.054000; // C2H4
  W += c[21] * 29.062000; // C2H5
  W += c[22] * 30.070000; // C2H6
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 42.037000; // CH2CO
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 44.053000; // CH2OCH2
  W += c[27] * 40.065000; // aC3H4
  W += c[28] * 41.073000; // aC3H5
  W += c[29] * 42.081000; // C3H6
  W += c[30] * 43.089000; // nC3H7
  W += c[31] * 56.108000; // C4H81
  W += c[32] * 14.007000; // N
  W += c[33] * 30.006000; // NO
  W += c[34] * 46.005000; // NO2
  W += c[35] * 43.025000; // HCNO
  W += c[36] * 43.025000; // HNCO
  W += c[37] * 42.017000; // NCO
  W += c[38] * 47.033000; // CH3O2

  for (int id = 0; id < 39; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 39; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 39; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 39; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 39; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 39; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 39.950000;  // AR
  XW += x[1] * 28.014000;  // N2
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 15.999000;  // O
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 33.006000;  // HO2
  XW += x[6] * 2.016000;   // H2
  XW += x[7] * 18.015000;  // H2O
  XW += x[8] * 34.014000;  // H2O2
  XW += x[9] * 31.998000;  // O2
  XW += x[10] * 15.035000; // CH3
  XW += x[11] * 16.043000; // CH4
  XW += x[12] * 29.018000; // HCO
  XW += x[13] * 30.026000; // CH2O
  XW += x[14] * 31.034000; // CH3O
  XW += x[15] * 32.042000; // CH3OH
  XW += x[16] * 28.010000; // CO
  XW += x[17] * 44.009000; // CO2
  XW += x[18] * 26.038000; // C2H2
  XW += x[19] * 27.046000; // C2H3
  XW += x[20] * 28.054000; // C2H4
  XW += x[21] * 29.062000; // C2H5
  XW += x[22] * 30.070000; // C2H6
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 42.037000; // CH2CO
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 44.053000; // CH2OCH2
  XW += x[27] * 40.065000; // aC3H4
  XW += x[28] * 41.073000; // aC3H5
  XW += x[29] * 42.081000; // C3H6
  XW += x[30] * 43.089000; // nC3H7
  XW += x[31] * 56.108000; // C4H81
  XW += x[32] * 14.007000; // N
  XW += x[33] * 30.006000; // NO
  XW += x[34] * 46.005000; // NO2
  XW += x[35] * 43.025000; // HCNO
  XW += x[36] * 43.025000; // HNCO
  XW += x[37] * 42.017000; // NCO
  XW += x[38] * 47.033000; // CH3O2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 39.950000 * XWinv;
  y[1] = x[1] * 28.014000 * XWinv;
  y[2] = x[2] * 1.008000 * XWinv;
  y[3] = x[3] * 15.999000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 33.006000 * XWinv;
  y[6] = x[6] * 2.016000 * XWinv;
  y[7] = x[7] * 18.015000 * XWinv;
  y[8] = x[8] * 34.014000 * XWinv;
  y[9] = x[9] * 31.998000 * XWinv;
  y[10] = x[10] * 15.035000 * XWinv;
  y[11] = x[11] * 16.043000 * XWinv;
  y[12] = x[12] * 29.018000 * XWinv;
  y[13] = x[13] * 30.026000 * XWinv;
  y[14] = x[14] * 31.034000 * XWinv;
  y[15] = x[15] * 32.042000 * XWinv;
  y[16] = x[16] * 28.010000 * XWinv;
  y[17] = x[17] * 44.009000 * XWinv;
  y[18] = x[18] * 26.038000 * XWinv;
  y[19] = x[19] * 27.046000 * XWinv;
  y[20] = x[20] * 28.054000 * XWinv;
  y[21] = x[21] * 29.062000 * XWinv;
  y[22] = x[22] * 30.070000 * XWinv;
  y[23] = x[23] * 41.029000 * XWinv;
  y[24] = x[24] * 42.037000 * XWinv;
  y[25] = x[25] * 43.045000 * XWinv;
  y[26] = x[26] * 44.053000 * XWinv;
  y[27] = x[27] * 40.065000 * XWinv;
  y[28] = x[28] * 41.073000 * XWinv;
  y[29] = x[29] * 42.081000 * XWinv;
  y[30] = x[30] * 43.089000 * XWinv;
  y[31] = x[31] * 56.108000 * XWinv;
  y[32] = x[32] * 14.007000 * XWinv;
  y[33] = x[33] * 30.006000 * XWinv;
  y[34] = x[34] * 46.005000 * XWinv;
  y[35] = x[35] * 43.025000 * XWinv;
  y[36] = x[36] * 43.025000 * XWinv;
  y[37] = x[37] * 42.017000 * XWinv;
  y[38] = x[38] * 47.033000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 39; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 39.950000;  // AR
  XW += x[1] * 28.014000;  // N2
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 15.999000;  // O
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 33.006000;  // HO2
  XW += x[6] * 2.016000;   // H2
  XW += x[7] * 18.015000;  // H2O
  XW += x[8] * 34.014000;  // H2O2
  XW += x[9] * 31.998000;  // O2
  XW += x[10] * 15.035000; // CH3
  XW += x[11] * 16.043000; // CH4
  XW += x[12] * 29.018000; // HCO
  XW += x[13] * 30.026000; // CH2O
  XW += x[14] * 31.034000; // CH3O
  XW += x[15] * 32.042000; // CH3OH
  XW += x[16] * 28.010000; // CO
  XW += x[17] * 44.009000; // CO2
  XW += x[18] * 26.038000; // C2H2
  XW += x[19] * 27.046000; // C2H3
  XW += x[20] * 28.054000; // C2H4
  XW += x[21] * 29.062000; // C2H5
  XW += x[22] * 30.070000; // C2H6
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 42.037000; // CH2CO
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 44.053000; // CH2OCH2
  XW += x[27] * 40.065000; // aC3H4
  XW += x[28] * 41.073000; // aC3H5
  XW += x[29] * 42.081000; // C3H6
  XW += x[30] * 43.089000; // nC3H7
  XW += x[31] * 56.108000; // C4H81
  XW += x[32] * 14.007000; // N
  XW += x[33] * 30.006000; // NO
  XW += x[34] * 46.005000; // NO2
  XW += x[35] * 43.025000; // HCNO
  XW += x[36] * 43.025000; // HNCO
  XW += x[37] * 42.017000; // NCO
  XW += x[38] * 47.033000; // CH3O2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 39; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 39; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 39; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 39.950000;  // AR
  CW += c[1] * 28.014000;  // N2
  CW += c[2] * 1.008000;   // H
  CW += c[3] * 15.999000;  // O
  CW += c[4] * 17.007000;  // OH
  CW += c[5] * 33.006000;  // HO2
  CW += c[6] * 2.016000;   // H2
  CW += c[7] * 18.015000;  // H2O
  CW += c[8] * 34.014000;  // H2O2
  CW += c[9] * 31.998000;  // O2
  CW += c[10] * 15.035000; // CH3
  CW += c[11] * 16.043000; // CH4
  CW += c[12] * 29.018000; // HCO
  CW += c[13] * 30.026000; // CH2O
  CW += c[14] * 31.034000; // CH3O
  CW += c[15] * 32.042000; // CH3OH
  CW += c[16] * 28.010000; // CO
  CW += c[17] * 44.009000; // CO2
  CW += c[18] * 26.038000; // C2H2
  CW += c[19] * 27.046000; // C2H3
  CW += c[20] * 28.054000; // C2H4
  CW += c[21] * 29.062000; // C2H5
  CW += c[22] * 30.070000; // C2H6
  CW += c[23] * 41.029000; // HCCO
  CW += c[24] * 42.037000; // CH2CO
  CW += c[25] * 43.045000; // CH2CHO
  CW += c[26] * 44.053000; // CH2OCH2
  CW += c[27] * 40.065000; // aC3H4
  CW += c[28] * 41.073000; // aC3H5
  CW += c[29] * 42.081000; // C3H6
  CW += c[30] * 43.089000; // nC3H7
  CW += c[31] * 56.108000; // C4H81
  CW += c[32] * 14.007000; // N
  CW += c[33] * 30.006000; // NO
  CW += c[34] * 46.005000; // NO2
  CW += c[35] * 43.025000; // HCNO
  CW += c[36] * 43.025000; // HNCO
  CW += c[37] * 42.017000; // NCO
  CW += c[38] * 47.033000; // CH3O2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 39.950000 * CWinv;
  y[1] = c[1] * 28.014000 * CWinv;
  y[2] = c[2] * 1.008000 * CWinv;
  y[3] = c[3] * 15.999000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 33.006000 * CWinv;
  y[6] = c[6] * 2.016000 * CWinv;
  y[7] = c[7] * 18.015000 * CWinv;
  y[8] = c[8] * 34.014000 * CWinv;
  y[9] = c[9] * 31.998000 * CWinv;
  y[10] = c[10] * 15.035000 * CWinv;
  y[11] = c[11] * 16.043000 * CWinv;
  y[12] = c[12] * 29.018000 * CWinv;
  y[13] = c[13] * 30.026000 * CWinv;
  y[14] = c[14] * 31.034000 * CWinv;
  y[15] = c[15] * 32.042000 * CWinv;
  y[16] = c[16] * 28.010000 * CWinv;
  y[17] = c[17] * 44.009000 * CWinv;
  y[18] = c[18] * 26.038000 * CWinv;
  y[19] = c[19] * 27.046000 * CWinv;
  y[20] = c[20] * 28.054000 * CWinv;
  y[21] = c[21] * 29.062000 * CWinv;
  y[22] = c[22] * 30.070000 * CWinv;
  y[23] = c[23] * 41.029000 * CWinv;
  y[24] = c[24] * 42.037000 * CWinv;
  y[25] = c[25] * 43.045000 * CWinv;
  y[26] = c[26] * 44.053000 * CWinv;
  y[27] = c[27] * 40.065000 * CWinv;
  y[28] = c[28] * 41.073000 * CWinv;
  y[29] = c[29] * 42.081000 * CWinv;
  y[30] = c[30] * 43.089000 * CWinv;
  y[31] = c[31] * 56.108000 * CWinv;
  y[32] = c[32] * 14.007000 * CWinv;
  y[33] = c[33] * 30.006000 * CWinv;
  y[34] = c[34] * 46.005000 * CWinv;
  y[35] = c[35] * 43.025000 * CWinv;
  y[36] = c[36] * 43.025000 * CWinv;
  y[37] = c[37] * 42.017000 * CWinv;
  y[38] = c[38] * 47.033000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 2.081217176008320e+06;  // AR
  cvms[1] *= 2.967966951578939e+06;  // N2
  cvms[2] *= 8.248474819596468e+07;  // H
  cvms[3] *= 5.196863940342046e+06;  // O
  cvms[4] *= 4.888847308845322e+06;  // OH
  cvms[5] *= 2.519076112874398e+06;  // HO2
  cvms[6] *= 4.124237409798234e+07;  // H2
  cvms[7] *= 4.615299815794193e+06;  // H2O
  cvms[8] *= 2.444423654422661e+06;  // H2O2
  cvms[9] *= 2.598431970171023e+06;  // O2
  cvms[10] *= 5.530071578419182e+06; // CH3
  cvms[11] *= 5.182610869633635e+06; // CH4
  cvms[12] *= 2.865277627042952e+06; // HCO
  cvms[13] *= 2.769087663409458e+06; // CH2O
  cvms[14] *= 2.679146297013998e+06; // CH3O
  cvms[15] *= 2.594863809423020e+06; // CH3OH
  cvms[16] *= 2.968390795484913e+06; // CO
  cvms[17] *= 1.889264154639560e+06; // CO2
  cvms[18] *= 3.193203248388218e+06; // C2H2
  cvms[19] *= 3.074193085170909e+06; // C2H3
  cvms[20] *= 2.963735160103101e+06; // C2H4
  cvms[21] *= 2.860939583701480e+06; // C2H5
  cvms[22] *= 2.765035789209591e+06; // C2H6
  cvms[23] *= 2.026484344769124e+06; // HCCO
  cvms[24] *= 1.977891528451897e+06; // CH2CO
  cvms[25] *= 1.931574542491170e+06; // CH2CHO
  cvms[26] *= 1.887377163451579e+06; // CH2OCH2
  cvms[27] *= 2.075243384039246e+06; // aC3H4
  cvms[28] *= 2.024313446340233e+06; // aC3H5
  cvms[29] *= 1.975823440068734e+06; // C3H6
  cvms[30] *= 1.929602130045543e+06; // nC3H7
  cvms[31] *= 1.481867580051551e+06; // C4H81
  cvms[32] *= 5.935933903157878e+06; // N
  cvms[33] *= 2.770933352713870e+06; // NO
  cvms[34] *= 1.807295428356318e+06; // NO2
  cvms[35] *= 1.932472427229109e+06; // HCNO
  cvms[36] *= 1.932472427229109e+06; // HNCO
  cvms[37] *= 1.978833000488669e+06; // NCO
  cvms[38] *= 1.767793382976472e+06; // CH3O2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 2.081217176008320e+06;  // AR
  cpms[1] *= 2.967966951578939e+06;  // N2
  cpms[2] *= 8.248474819596468e+07;  // H
  cpms[3] *= 5.196863940342046e+06;  // O
  cpms[4] *= 4.888847308845322e+06;  // OH
  cpms[5] *= 2.519076112874398e+06;  // HO2
  cpms[6] *= 4.124237409798234e+07;  // H2
  cpms[7] *= 4.615299815794193e+06;  // H2O
  cpms[8] *= 2.444423654422661e+06;  // H2O2
  cpms[9] *= 2.598431970171023e+06;  // O2
  cpms[10] *= 5.530071578419182e+06; // CH3
  cpms[11] *= 5.182610869633635e+06; // CH4
  cpms[12] *= 2.865277627042952e+06; // HCO
  cpms[13] *= 2.769087663409458e+06; // CH2O
  cpms[14] *= 2.679146297013998e+06; // CH3O
  cpms[15] *= 2.594863809423020e+06; // CH3OH
  cpms[16] *= 2.968390795484913e+06; // CO
  cpms[17] *= 1.889264154639560e+06; // CO2
  cpms[18] *= 3.193203248388218e+06; // C2H2
  cpms[19] *= 3.074193085170909e+06; // C2H3
  cpms[20] *= 2.963735160103101e+06; // C2H4
  cpms[21] *= 2.860939583701480e+06; // C2H5
  cpms[22] *= 2.765035789209591e+06; // C2H6
  cpms[23] *= 2.026484344769124e+06; // HCCO
  cpms[24] *= 1.977891528451897e+06; // CH2CO
  cpms[25] *= 1.931574542491170e+06; // CH2CHO
  cpms[26] *= 1.887377163451579e+06; // CH2OCH2
  cpms[27] *= 2.075243384039246e+06; // aC3H4
  cpms[28] *= 2.024313446340233e+06; // aC3H5
  cpms[29] *= 1.975823440068734e+06; // C3H6
  cpms[30] *= 1.929602130045543e+06; // nC3H7
  cpms[31] *= 1.481867580051551e+06; // C4H81
  cpms[32] *= 5.935933903157878e+06; // N
  cpms[33] *= 2.770933352713870e+06; // NO
  cpms[34] *= 1.807295428356318e+06; // NO2
  cpms[35] *= 1.932472427229109e+06; // HCNO
  cpms[36] *= 1.932472427229109e+06; // HNCO
  cpms[37] *= 1.978833000488669e+06; // NCO
  cpms[38] *= 1.767793382976472e+06; // CH3O2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 39; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 39; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 2.081217176008320e+06;  // AR
  sms[1] *= 2.967966951578939e+06;  // N2
  sms[2] *= 8.248474819596468e+07;  // H
  sms[3] *= 5.196863940342046e+06;  // O
  sms[4] *= 4.888847308845322e+06;  // OH
  sms[5] *= 2.519076112874398e+06;  // HO2
  sms[6] *= 4.124237409798234e+07;  // H2
  sms[7] *= 4.615299815794193e+06;  // H2O
  sms[8] *= 2.444423654422661e+06;  // H2O2
  sms[9] *= 2.598431970171023e+06;  // O2
  sms[10] *= 5.530071578419182e+06; // CH3
  sms[11] *= 5.182610869633635e+06; // CH4
  sms[12] *= 2.865277627042952e+06; // HCO
  sms[13] *= 2.769087663409458e+06; // CH2O
  sms[14] *= 2.679146297013998e+06; // CH3O
  sms[15] *= 2.594863809423020e+06; // CH3OH
  sms[16] *= 2.968390795484913e+06; // CO
  sms[17] *= 1.889264154639560e+06; // CO2
  sms[18] *= 3.193203248388218e+06; // C2H2
  sms[19] *= 3.074193085170909e+06; // C2H3
  sms[20] *= 2.963735160103101e+06; // C2H4
  sms[21] *= 2.860939583701480e+06; // C2H5
  sms[22] *= 2.765035789209591e+06; // C2H6
  sms[23] *= 2.026484344769124e+06; // HCCO
  sms[24] *= 1.977891528451897e+06; // CH2CO
  sms[25] *= 1.931574542491170e+06; // CH2CHO
  sms[26] *= 1.887377163451579e+06; // CH2OCH2
  sms[27] *= 2.075243384039246e+06; // aC3H4
  sms[28] *= 2.024313446340233e+06; // aC3H5
  sms[29] *= 1.975823440068734e+06; // C3H6
  sms[30] *= 1.929602130045543e+06; // nC3H7
  sms[31] *= 1.481867580051551e+06; // C4H81
  sms[32] *= 5.935933903157878e+06; // N
  sms[33] *= 2.770933352713870e+06; // NO
  sms[34] *= 1.807295428356318e+06; // NO2
  sms[35] *= 1.932472427229109e+06; // HCNO
  sms[36] *= 1.932472427229109e+06; // HNCO
  sms[37] *= 1.978833000488669e+06; // NCO
  sms[38] *= 1.767793382976472e+06; // CH3O2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 39; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 3: CH + CO (+M) <=> HCCO (+M)
    amrex::Real Corr = mixture + (0.7 - 1) * sc[0] + sc[6] + (6 - 1) * sc[7] +
                       sc[11] + (1.5 - 1) * sc[16] + sc[17] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[0] * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[16]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[16] - g_RT[23] + g_RT_qss[1])) * (refC) *
            (sc[23]);
  }

  {
    // reaction 5: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + (0.7 - 1) * sc[0] + sc[6] + (6 - 1) * sc[7] +
                       sc[11] + (1.5 - 1) * sc[16] + sc[17] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[1] * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[2]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[2] - g_RT[10] + g_RT_qss[2])) * (refC) *
            (sc[10]);
  }

  {
    // reaction 6: CH2 + CO (+M) <=> CH2CO (+M)
    amrex::Real Corr = mixture + (0.7 - 1) * sc[0] + sc[6] + (6 - 1) * sc[7] +
                       sc[11] + (1.5 - 1) * sc[16] + sc[17] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[2] * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[16]);
    qr[2] = Corr * k_f[2] * exp(-(g_RT[16] - g_RT[24] + g_RT_qss[2])) * (refC) *
            (sc[24]);
  }

  {
    // reaction 7: CH2* + H2O (+M) <=> CH3OH (+M)
    amrex::Real Corr = mixture + sc[6] + (6 - 1) * sc[7] + sc[11] +
                       (1.5 - 1) * sc[16] + sc[17] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[3] * 2.7e+26 * exp(-6.3 * tc[0] - 1559.97166399463 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.8493 * exp(-tc[1] * 0.00746268656716418) +
      0.1507 * exp(-tc[1] * 0.000419639110365086) + exp(-7265 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (sc[7]);
    qr[3] = Corr * k_f[3] * exp(-(g_RT[7] - g_RT[15] + g_RT_qss[3])) * (refC) *
            (sc[15]);
  }

  {
    // reaction 17: C2H4 (+M) <=> H2 + H2CC (+M)
    amrex::Real Corr = mixture + (0.7 - 1) * sc[0] + sc[6] + (6 - 1) * sc[7] +
                       sc[11] + (1.5 - 1) * sc[16] + sc[17] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[4] * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[20]);
    qr[4] = Corr * k_f[4] * exp(-(-g_RT[6] + g_RT[20] - g_RT_qss[4])) *
            (refCinv) * (sc[6]);
  }

  {
    // reaction 26: C2H2 (+M) <=> H2CC (+M)
    amrex::Real Corr = mixture + sc[6] + (6 - 1) * sc[7] + sc[11] +
                       (1.5 - 1) * sc[16] + sc[17] + (2.5 - 1) * sc[18] +
                       (2.5 - 1) * sc[20] + (3 - 1) * sc[22];
    const amrex::Real redP =
      Corr / k_f[5] * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    qf[5] = Corr * k_f[5] * (sc[18]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[18] - g_RT_qss[4])) * (1.0);
  }

  {
    // reaction 67: C + OH <=> CO + H
    qf[6] = k_f[6] * (sc[4]);
    qr[6] = k_f[6] * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] + g_RT_qss[0])) *
            (sc[2] * sc[16]);
  }

  {
    // reaction 68: C + O2 <=> CO + O
    qf[7] = k_f[7] * (sc[9]);
    qr[7] = k_f[7] * exp(-(-g_RT[3] + g_RT[9] - g_RT[16] + g_RT_qss[0])) *
            (sc[3] * sc[16]);
  }

  {
    // reaction 69: CH + H <=> C + H2
    qf[8] = k_f[8] * (sc[2]);
    qr[8] =
      k_f[8] * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) * (sc[6]);
  }

  {
    // reaction 70: CH + O <=> CO + H
    qf[9] = k_f[9] * (sc[3]);
    qr[9] = k_f[9] * exp(-(-g_RT[2] + g_RT[3] - g_RT[16] + g_RT_qss[1])) *
            (sc[2] * sc[16]);
  }

  {
    // reaction 71: CH + OH <=> H + HCO
    qf[10] = k_f[10] * (sc[4]);
    qr[10] = k_f[10] * exp(-(-g_RT[2] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
             (sc[2] * sc[12]);
  }

  {
    // reaction 72: CH + H2 <=> CH2 + H
    qf[11] = k_f[11] * (sc[6]);
    qr[11] = k_f[11] * exp(-(-g_RT[2] + g_RT[6] + g_RT_qss[1] - g_RT_qss[2])) *
             (sc[2]);
  }

  {
    // reaction 73: CH + H2O <=> CH2O + H
    qf[12] = k_f[12] * (sc[7]);
    qr[12] = k_f[12] * exp(-(-g_RT[2] + g_RT[7] - g_RT[13] + g_RT_qss[1])) *
             (sc[2] * sc[13]);
  }

  {
    // reaction 74: CH + O2 <=> HCO + O
    qf[13] = k_f[13] * (sc[9]);
    qr[13] = k_f[13] * exp(-(-g_RT[3] + g_RT[9] - g_RT[12] + g_RT_qss[1])) *
             (sc[3] * sc[12]);
  }

  {
    // reaction 75: CH + CO2 <=> CO + HCO
    qf[14] = k_f[14] * (sc[17]);
    qr[14] = k_f[14] * exp(-(-g_RT[12] - g_RT[16] + g_RT[17] + g_RT_qss[1])) *
             (sc[12] * sc[16]);
  }

  {
    // reaction 76: CH2 + O <=> H + HCO
    qf[15] = k_f[15] * (sc[3]);
    qr[15] = k_f[15] * exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[2])) *
             (sc[2] * sc[12]);
  }

  {
    // reaction 77: CH2 + OH <=> CH2O + H
    qf[16] = k_f[16] * (sc[4]);
    qr[16] = k_f[16] * exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[2])) *
             (sc[2] * sc[13]);
  }

  {
    // reaction 78: CH2 + OH <=> CH + H2O
    qf[17] = k_f[17] * (sc[4]);
    qr[17] =
      k_f[17] * exp(-(g_RT[4] - g_RT[7] - g_RT_qss[1] + g_RT_qss[2])) * (sc[7]);
  }

  {
    // reaction 79: CH2 + H2 <=> CH3 + H
    qf[18] = k_f[18] * (sc[6]);
    qr[18] = k_f[18] * exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[2])) *
             (sc[2] * sc[10]);
  }

  {
    // reaction 80: CH2 + O2 <=> HCO + OH
    qf[19] = k_f[19] * (sc[9]);
    qr[19] = k_f[19] * exp(-(-g_RT[4] + g_RT[9] - g_RT[12] + g_RT_qss[2])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 81: CH2 + O2 <=> CO2 + 2 H
    qf[20] = k_f[20] * (sc[9]);
    qr[20] = k_f[20] *
             exp(-(-2.000000 * g_RT[2] + g_RT[9] - g_RT[17] + g_RT_qss[2])) *
             (refCinv) * (sc[2] * sc[2] * sc[17]);
  }

  {
    // reaction 82: CH2 + HO2 <=> CH2O + OH
    qf[21] = k_f[21] * (sc[5]);
    qr[21] = k_f[21] * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] + g_RT_qss[2])) *
             (sc[4] * sc[13]);
  }

  {
    // reaction 83: CH + CH2 <=> C2H2 + H
    // Remove forward reaction
    // qf[22] = k_f[22] * (1.0);
    qf[22] = 0.0;
    qr[22] = k_f[22] * exp(-(-g_RT[2] - g_RT[18] + g_RT_qss[1] + g_RT_qss[2])) *
             (sc[2] * sc[18]);
  }

  {
    // reaction 84: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[23] = k_f[23] * (1.0);
    qf[23] = 0.0;
    qr[23] = k_f[23] * exp(-(-g_RT[6] - g_RT[18] + 2.000000 * g_RT_qss[2])) *
             (sc[6] * sc[18]);
  }

  {
    // reaction 85: CH2* + N2 <=> CH2 + N2
    qf[24] = k_f[24] * (sc[1]);
    qr[24] =
      k_f[24] * exp(-(g_RT[1] - g_RT[1] - g_RT_qss[2] + g_RT_qss[3])) * (sc[1]);
  }

  {
    // reaction 86: AR + CH2* <=> AR + CH2
    qf[25] = k_f[25] * (sc[0]);
    qr[25] =
      k_f[25] * exp(-(g_RT[0] - g_RT[0] - g_RT_qss[2] + g_RT_qss[3])) * (sc[0]);
  }

  {
    // reaction 87: CH2* + H <=> CH + H2
    qf[26] = k_f[26] * (sc[2]);
    qr[26] =
      k_f[26] * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 88: CH2* + O <=> CO + H2
    qf[27] = k_f[27] * (sc[3]);
    qr[27] = k_f[27] * exp(-(g_RT[3] - g_RT[6] - g_RT[16] + g_RT_qss[3])) *
             (sc[6] * sc[16]);
  }

  {
    // reaction 89: CH2* + O <=> H + HCO
    qf[28] = k_f[28] * (sc[3]);
    qr[28] = k_f[28] * exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[3])) *
             (sc[2] * sc[12]);
  }

  {
    // reaction 90: CH2* + OH <=> CH2O + H
    qf[29] = k_f[29] * (sc[4]);
    qr[29] = k_f[29] * exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[3])) *
             (sc[2] * sc[13]);
  }

  {
    // reaction 91: CH2* + H2 <=> CH3 + H
    qf[30] = k_f[30] * (sc[6]);
    qr[30] = k_f[30] * exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[3])) *
             (sc[2] * sc[10]);
  }

  {
    // reaction 92: CH2* + O2 <=> CO + H + OH
    qf[31] = k_f[31] * (sc[9]);
    qr[31] = k_f[31] *
             exp(-(-g_RT[2] - g_RT[4] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
             (refCinv) * (sc[2] * sc[4] * sc[16]);
  }

  {
    // reaction 93: CH2* + O2 <=> CO + H2O
    qf[32] = k_f[32] * (sc[9]);
    qr[32] = k_f[32] * exp(-(-g_RT[7] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
             (sc[7] * sc[16]);
  }

  {
    // reaction 94: CH2* + H2O <=> CH2 + H2O
    qf[33] = k_f[33] * (sc[7]);
    qr[33] =
      k_f[33] * exp(-(g_RT[7] - g_RT[7] - g_RT_qss[2] + g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 95: CH2* + CO <=> CH2 + CO
    qf[34] = k_f[34] * (sc[16]);
    qr[34] = k_f[34] * exp(-(g_RT[16] - g_RT[16] - g_RT_qss[2] + g_RT_qss[3])) *
             (sc[16]);
  }

  {
    // reaction 96: CH2* + CO2 <=> CH2 + CO2
    qf[35] = k_f[35] * (sc[17]);
    qr[35] = k_f[35] * exp(-(g_RT[17] - g_RT[17] - g_RT_qss[2] + g_RT_qss[3])) *
             (sc[17]);
  }

  {
    // reaction 97: CH2* + CO2 <=> CH2O + CO
    qf[36] = k_f[36] * (sc[17]);
    qr[36] = k_f[36] * exp(-(-g_RT[13] - g_RT[16] + g_RT[17] + g_RT_qss[3])) *
             (sc[13] * sc[16]);
  }

  {
    // reaction 103: CH + CH2O <=> CH2CO + H
    qf[37] = k_f[37] * (sc[13]);
    qr[37] = k_f[37] * exp(-(-g_RT[2] + g_RT[13] - g_RT[24] + g_RT_qss[1])) *
             (sc[2] * sc[24]);
  }

  {
    // reaction 105: CH3 + OH <=> CH2 + H2O
    qf[38] = k_f[38] * (sc[4] * sc[10]);
    qr[38] =
      k_f[38] * exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[2])) * (sc[7]);
  }

  {
    // reaction 106: CH3 + OH <=> CH2* + H2O
    qf[39] = k_f[39] * (sc[4] * sc[10]);
    qr[39] =
      k_f[39] * exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 112: C + CH3 <=> C2H2 + H
    qf[40] = k_f[40] * (sc[10]);
    qr[40] = k_f[40] * exp(-(-g_RT[2] + g_RT[10] - g_RT[18] + g_RT_qss[0])) *
             (sc[2] * sc[18]);
  }

  {
    // reaction 113: CH + CH3 <=> C2H3 + H
    qf[41] = k_f[41] * (sc[10]);
    qr[41] = k_f[41] * exp(-(-g_RT[2] + g_RT[10] - g_RT[19] + g_RT_qss[1])) *
             (sc[2] * sc[19]);
  }

  {
    // reaction 116: CH2 + CH3 <=> C2H4 + H
    qf[42] = k_f[42] * (sc[10]);
    qr[42] = k_f[42] * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[2])) *
             (sc[2] * sc[20]);
  }

  {
    // reaction 117: CH2* + CH3 <=> C2H4 + H
    qf[43] = k_f[43] * (sc[10]);
    qr[43] = k_f[43] * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[3])) *
             (sc[2] * sc[20]);
  }

  {
    // reaction 122: CH3O + H <=> CH2* + H2O
    qf[44] = k_f[44] * (sc[2] * sc[14]);
    qr[44] =
      k_f[44] * exp(-(g_RT[2] - g_RT[7] + g_RT[14] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 129: CH + CH4 <=> C2H4 + H
    qf[45] = k_f[45] * (sc[11]);
    qr[45] = k_f[45] * exp(-(-g_RT[2] + g_RT[11] - g_RT[20] + g_RT_qss[1])) *
             (sc[2] * sc[20]);
  }

  {
    // reaction 130: CH2 + CH4 <=> 2 CH3
    qf[46] = k_f[46] * (sc[11]);
    qr[46] = k_f[46] * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[2])) *
             (sc[10] * sc[10]);
  }

  {
    // reaction 131: CH2* + CH4 <=> 2 CH3
    qf[47] = k_f[47] * (sc[11]);
    qr[47] = k_f[47] * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[3])) *
             (sc[10] * sc[10]);
  }

  {
    // reaction 136: H + HCCO <=> CH2* + CO
    qf[48] = k_f[48] * (sc[2] * sc[23]);
    qr[48] =
      k_f[48] * exp(-(g_RT[2] - g_RT[16] + g_RT[23] - g_RT_qss[3])) * (sc[16]);
  }

  {
    // reaction 139: CH + HCCO <=> C2H2 + CO
    qf[49] = k_f[49] * (sc[23]);
    qr[49] = k_f[49] * exp(-(-g_RT[16] - g_RT[18] + g_RT[23] + g_RT_qss[1])) *
             (sc[16] * sc[18]);
  }

  {
    // reaction 140: CH2 + HCCO <=> C2H3 + CO
    qf[50] = k_f[50] * (sc[23]);
    qr[50] = k_f[50] * exp(-(-g_RT[16] - g_RT[19] + g_RT[23] + g_RT_qss[2])) *
             (sc[16] * sc[19]);
  }

  {
    // reaction 142: C2H2 + O <=> CH2 + CO
    qf[51] = k_f[51] * (sc[3] * sc[18]);
    qr[51] =
      k_f[51] * exp(-(g_RT[3] - g_RT[16] + g_RT[18] - g_RT_qss[2])) * (sc[16]);
  }

  {
    // reaction 149: H + H2CC <=> C2H2 + H
    qf[52] = k_f[52] * (sc[2]);
    qr[52] = k_f[52] * exp(-(g_RT[2] - g_RT[2] - g_RT[18] + g_RT_qss[4])) *
             (sc[2] * sc[18]);
  }

  {
    // reaction 150: H2CC + OH <=> CH2CO + H
    qf[53] = k_f[53] * (sc[4]);
    qr[53] = k_f[53] * exp(-(-g_RT[2] + g_RT[4] - g_RT[24] + g_RT_qss[4])) *
             (sc[2] * sc[24]);
  }

  {
    // reaction 151: H2CC + O2 <=> 2 HCO
    qf[54] = k_f[54] * (sc[9]);
    qr[54] = k_f[54] * exp(-(g_RT[9] - 2.000000 * g_RT[12] + g_RT_qss[4])) *
             (sc[12] * sc[12]);
  }

  {
    // reaction 155: CH2CO + O <=> CH2 + CO2
    qf[55] = k_f[55] * (sc[3] * sc[24]);
    qr[55] =
      k_f[55] * exp(-(g_RT[3] - g_RT[17] + g_RT[24] - g_RT_qss[2])) * (sc[17]);
  }

  {
    // reaction 158: C2H3 + H <=> H2 + H2CC
    qf[56] = k_f[56] * (sc[2] * sc[19]);
    qr[56] =
      k_f[56] * exp(-(g_RT[2] - g_RT[6] + g_RT[19] - g_RT_qss[4])) * (sc[6]);
  }

  {
    // reaction 185: C2H4 + O <=> CH2 + CH2O
    qf[57] = k_f[57] * (sc[3] * sc[20]);
    qr[57] =
      k_f[57] * exp(-(g_RT[3] - g_RT[13] + g_RT[20] - g_RT_qss[2])) * (sc[13]);
  }

  {
    // reaction 188: C2H4 + CH <=> H + aC3H4
    qf[58] = k_f[58] * (sc[20]);
    qr[58] = k_f[58] * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT_qss[1])) *
             (sc[2] * sc[27]);
  }

  {
    // reaction 189: C2H4 + CH2 <=> H + aC3H5
    qf[59] = k_f[59] * (sc[20]);
    qr[59] = k_f[59] * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[2])) *
             (sc[2] * sc[28]);
  }

  {
    // reaction 190: C2H4 + CH2* <=> CH4 + H2CC
    qf[60] = k_f[60] * (sc[20]);
    qr[60] = k_f[60] *
             exp(-(-g_RT[11] + g_RT[20] + g_RT_qss[3] - g_RT_qss[4])) *
             (sc[11]);
  }

  {
    // reaction 191: C2H4 + CH2* <=> H + aC3H5
    qf[61] = k_f[61] * (sc[20]);
    qr[61] = k_f[61] * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[3])) *
             (sc[2] * sc[28]);
  }

  {
    // reaction 207: C2H6 + CH2* <=> C2H5 + CH3
    qf[62] = k_f[62] * (sc[22]);
    qr[62] = k_f[62] * exp(-(-g_RT[10] - g_RT[21] + g_RT[22] + g_RT_qss[3])) *
             (sc[10] * sc[21]);
  }

  {
    // reaction 254: C + NO <=> CO + N
    qf[63] = k_f[63] * (sc[33]);
    qr[63] = k_f[63] * exp(-(-g_RT[16] - g_RT[32] + g_RT[33] + g_RT_qss[0])) *
             (sc[16] * sc[32]);
  }

  {
    // reaction 255: CH + NO <=> H + NCO
    qf[64] = k_f[64] * (sc[33]);
    qr[64] = k_f[64] * exp(-(-g_RT[2] + g_RT[33] - g_RT[37] + g_RT_qss[1])) *
             (sc[2] * sc[37]);
  }

  {
    // reaction 256: CH + NO <=> HCO + N
    qf[65] = k_f[65] * (sc[33]);
    qr[65] = k_f[65] * exp(-(-g_RT[12] - g_RT[32] + g_RT[33] + g_RT_qss[1])) *
             (sc[12] * sc[32]);
  }

  {
    // reaction 257: CH2 + NO <=> H + HNCO
    qf[66] = k_f[66] * (sc[33]);
    qr[66] = k_f[66] * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[2])) *
             (sc[2] * sc[36]);
  }

  {
    // reaction 258: CH2 + NO <=> H + HCNO
    qf[67] = k_f[67] * (sc[33]);
    qr[67] = k_f[67] * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[2])) *
             (sc[2] * sc[35]);
  }

  {
    // reaction 259: CH2* + NO <=> H + HNCO
    qf[68] = k_f[68] * (sc[33]);
    qr[68] = k_f[68] * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[3])) *
             (sc[2] * sc[36]);
  }

  {
    // reaction 260: CH2* + NO <=> H + HCNO
    qf[69] = k_f[69] * (sc[33]);
    qr[69] = k_f[69] * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[3])) *
             (sc[2] * sc[35]);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 3: CH + CO (+M) <=> HCCO (+M)
  k_f[0] = 50000000;
  // reaction 5: CH2 + H (+M) <=> CH3 (+M)
  k_f[1] = 25000000000 * exp((-0.8) * tc[0]);
  // reaction 6: CH2 + CO (+M) <=> CH2CO (+M)
  k_f[2] = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  // reaction 7: CH2* + H2O (+M) <=> CH3OH (+M)
  k_f[3] = 20000000;
  // reaction 17: C2H4 (+M) <=> H2 + H2CC (+M)
  k_f[4] = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  // reaction 26: C2H2 (+M) <=> H2CC (+M)
  k_f[5] = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  // reaction 67: C + OH <=> CO + H
  k_f[6] = 50000000;
  // reaction 68: C + O2 <=> CO + O
  k_f[7] = 58000000 * exp(-(289.852799503519) * invT);
  // reaction 69: CH + H <=> C + H2
  k_f[8] = 110000000;
  // reaction 70: CH + O <=> CO + H
  k_f[9] = 57000000;
  // reaction 71: CH + OH <=> H + HCO
  k_f[10] = 30000000;
  // reaction 72: CH + H2 <=> CH2 + H
  k_f[11] = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  // reaction 73: CH + H2O <=> CH2O + H
  k_f[12] = 5710000 * exp(-(-379.928582682563) * invT);
  // reaction 74: CH + O2 <=> HCO + O
  k_f[13] = 33000000;
  // reaction 75: CH + CO2 <=> CO + HCO
  k_f[14] = 3400000 * exp(-(347.219499405257) * invT);
  // reaction 76: CH2 + O <=> H + HCO
  k_f[15] = 80000000;
  // reaction 77: CH2 + OH <=> CH2O + H
  k_f[16] = 20000000;
  // reaction 78: CH2 + OH <=> CH + H2O
  k_f[17] = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  // reaction 79: CH2 + H2 <=> CH3 + H
  k_f[18] = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  // reaction 80: CH2 + O2 <=> HCO + OH
  k_f[19] = 10600000 * exp(-(754.82499870708) * invT);
  // reaction 81: CH2 + O2 <=> CO2 + 2 H
  k_f[20] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 82: CH2 + HO2 <=> CH2O + OH
  k_f[21] = 20000000;
  // reaction 83: CH + CH2 <=> C2H2 + H
  k_f[22] = 40000000;
  // reaction 84: 2 CH2 <=> C2H2 + H2
  k_f[23] = 32000000;
  // reaction 85: CH2* + N2 <=> CH2 + N2
  k_f[24] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 86: AR + CH2* <=> AR + CH2
  k_f[25] = 9000000 * exp(-(301.929999482832) * invT);
  // reaction 87: CH2* + H <=> CH + H2
  k_f[26] = 30000000;
  // reaction 88: CH2* + O <=> CO + H2
  k_f[27] = 15000000;
  // reaction 89: CH2* + O <=> H + HCO
  k_f[28] = 15000000;
  // reaction 90: CH2* + OH <=> CH2O + H
  k_f[29] = 30000000;
  // reaction 91: CH2* + H2 <=> CH3 + H
  k_f[30] = 70000000;
  // reaction 92: CH2* + O2 <=> CO + H + OH
  k_f[31] = 28000000;
  // reaction 93: CH2* + O2 <=> CO + H2O
  k_f[32] = 12000000;
  // reaction 94: CH2* + H2O <=> CH2 + H2O
  k_f[33] = 30000000;
  // reaction 95: CH2* + CO <=> CH2 + CO
  k_f[34] = 9000000;
  // reaction 96: CH2* + CO2 <=> CH2 + CO2
  k_f[35] = 7000000;
  // reaction 97: CH2* + CO2 <=> CH2O + CO
  k_f[36] = 14000000;
  // reaction 103: CH + CH2O <=> CH2CO + H
  k_f[37] = 94600000 * exp(-(-259.156582889431) * invT);
  // reaction 105: CH3 + OH <=> CH2 + H2O
  k_f[38] = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  // reaction 106: CH3 + OH <=> CH2* + H2O
  k_f[39] = 25010000;
  // reaction 112: C + CH3 <=> C2H2 + H
  k_f[40] = 50000000;
  // reaction 113: CH + CH3 <=> C2H3 + H
  k_f[41] = 30000000;
  // reaction 116: CH2 + CH3 <=> C2H4 + H
  k_f[42] = 40000000;
  // reaction 117: CH2* + CH3 <=> C2H4 + H
  k_f[43] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 122: CH3O + H <=> CH2* + H2O
  k_f[44] = 16000000;
  // reaction 129: CH + CH4 <=> C2H4 + H
  k_f[45] = 60000000;
  // reaction 130: CH2 + CH4 <=> 2 CH3
  k_f[46] = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  // reaction 131: CH2* + CH4 <=> 2 CH3
  k_f[47] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 136: H + HCCO <=> CH2* + CO
  k_f[48] = 100000000;
  // reaction 139: CH + HCCO <=> C2H2 + CO
  k_f[49] = 50000000;
  // reaction 140: CH2 + HCCO <=> C2H3 + CO
  k_f[50] = 30000000;
  // reaction 142: C2H2 + O <=> CH2 + CO
  k_f[51] = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  // reaction 149: H + H2CC <=> C2H2 + H
  k_f[52] = 100000000;
  // reaction 150: H2CC + OH <=> CH2CO + H
  k_f[53] = 20000000;
  // reaction 151: H2CC + O2 <=> 2 HCO
  k_f[54] = 10000000;
  // reaction 155: CH2CO + O <=> CH2 + CO2
  k_f[55] = 1750000 * exp(-(679.342498836372) * invT);
  // reaction 158: C2H3 + H <=> H2 + H2CC
  k_f[56] = 60000000;
  // reaction 185: C2H4 + O <=> CH2 + CH2O
  k_f[57] = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 188: C2H4 + CH <=> H + aC3H4
  k_f[58] = 30000000;
  // reaction 189: C2H4 + CH2 <=> H + aC3H5
  k_f[59] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 190: C2H4 + CH2* <=> CH4 + H2CC
  k_f[60] = 50000000;
  // reaction 191: C2H4 + CH2* <=> H + aC3H5
  k_f[61] = 50000000;
  // reaction 207: C2H6 + CH2* <=> C2H5 + CH3
  k_f[62] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 254: C + NO <=> CO + N
  k_f[63] = 29000000;
  // reaction 255: CH + NO <=> H + NCO
  k_f[64] = 16200000;
  // reaction 256: CH + NO <=> HCO + N
  k_f[65] = 24600000;
  // reaction 257: CH2 + NO <=> H + HNCO
  k_f[66] = 310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
  // reaction 258: CH2 + NO <=> H + HCNO
  k_f[67] = 38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
  // reaction 259: CH2* + NO <=> H + HNCO
  k_f[68] = 310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
  // reaction 260: CH2* + NO <=> H + HCNO
  k_f[69] = 38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between H2CC  CH2*  CH2  CH  C
  // QSSA species 4: H2CC

  amrex::Real H2CC_num = epsilon + 1.0 * qf_co[4] + 1.0 * qf_co[5] +
                         1.0 * qr_co[52] + 1.0 * qr_co[53] + 1.0 * qr_co[54] +
                         1.0 * qf_co[56];
  amrex::Real H2CC_denom = epsilon - qr_co[4] - qr_co[5] - qf_co[52] -
                           qf_co[53] - qf_co[54] - qr_co[56] - qr_co[60];
  amrex::Real H2CC_rhs = -H2CC_num / H2CC_denom;

  amrex::Real H2CC_CH2D = (epsilon + 1.0 * qf_co[60]) / H2CC_denom;

  // QSSA species 3: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[3] + 1.0 * qr_co[27] +
                         1.0 * qr_co[28] + 1.0 * qr_co[29] + 1.0 * qr_co[30] +
                         1.0 * qr_co[31] + 1.0 * qr_co[32] + 1.0 * qr_co[36] +
                         1.0 * qf_co[39] + 1.0 * qr_co[43] + 1.0 * qf_co[44] +
                         1.0 * qr_co[47] + 1.0 * qf_co[48] + 1.0 * qr_co[61] +
                         1.0 * qr_co[62] + 1.0 * qr_co[68] + 1.0 * qr_co[69];
  amrex::Real CH2D_denom =
    epsilon - qf_co[3] - qf_co[24] - qf_co[25] - qf_co[26] - qf_co[27] -
    qf_co[28] - qf_co[29] - qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] -
    qf_co[34] - qf_co[35] - qf_co[36] - qr_co[39] - qf_co[43] - qr_co[44] -
    qf_co[47] - qr_co[48] - qf_co[60] - qf_co[61] - qf_co[62] - qf_co[68] -
    qf_co[69];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_H2CC = (epsilon + 1.0 * qr_co[60]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[24] + 1.0 * qr_co[25] +
                          1.0 * qr_co[33] + 1.0 * qr_co[34] + 1.0 * qr_co[35]) /
                         CH2D_denom;
  amrex::Real CH2D_CH = (epsilon + 1.0 * qr_co[26]) / CH2D_denom;

  // QSSA species 2: CH2

  amrex::Real CH2_num = epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[2] +
                        1.0 * qr_co[15] + 1.0 * qr_co[16] + 1.0 * qr_co[18] +
                        1.0 * qr_co[19] + 1.0 * qr_co[20] + 1.0 * qr_co[21] +
                        1.0 * qr_co[22] + 2.0 * qr_co[23] + 1.0 * qf_co[38] +
                        1.0 * qr_co[42] + 1.0 * qr_co[46] + 1.0 * qr_co[50] +
                        1.0 * qf_co[51] + 1.0 * qf_co[55] + 1.0 * qf_co[57] +
                        1.0 * qr_co[59] + 1.0 * qr_co[66] + 1.0 * qr_co[67];
  amrex::Real CH2_denom =
    epsilon - qf_co[1] - qf_co[2] - qr_co[11] - qf_co[15] - qf_co[16] -
    qf_co[17] - qf_co[18] - qf_co[19] - qf_co[20] - qf_co[21] - qf_co[23] -
    qr_co[24] - qr_co[25] - qr_co[33] - qr_co[34] - qr_co[35] - qr_co[38] -
    qf_co[42] - qf_co[46] - qf_co[50] - qr_co[51] - qr_co[55] - qr_co[57] -
    qf_co[59] - qf_co[66] - qf_co[67];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[24] + 1.0 * qf_co[25] +
                          1.0 * qf_co[33] + 1.0 * qf_co[34] + 1.0 * qf_co[35]) /
                         CH2_denom;
  amrex::Real CH2_CH =
    (epsilon + 1.0 * qf_co[11] + 1.0 * qr_co[17]) / CH2_denom;

  // QSSA species 1: CH

  amrex::Real CH_num = epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[9] +
                       1.0 * qr_co[10] + 1.0 * qr_co[12] + 1.0 * qr_co[13] +
                       1.0 * qr_co[14] + 1.0 * qr_co[22] + 1.0 * qr_co[37] +
                       1.0 * qr_co[41] + 1.0 * qr_co[45] + 1.0 * qr_co[49] +
                       1.0 * qr_co[58] + 1.0 * qr_co[64] + 1.0 * qr_co[65];
  amrex::Real CH_denom =
    epsilon - qf_co[0] - qf_co[8] - qf_co[9] - qf_co[10] - qf_co[11] -
    qf_co[12] - qf_co[13] - qf_co[14] - qr_co[17] - qr_co[26] - qf_co[37] -
    qf_co[41] - qf_co[45] - qf_co[49] - qf_co[58] - qf_co[64] - qf_co[65];
  amrex::Real CH_rhs = -CH_num / CH_denom;

  amrex::Real CH_CH2D = (epsilon + 1.0 * qf_co[26]) / CH_denom;
  amrex::Real CH_CH2 = (epsilon + 1.0 * qr_co[11] + 1.0 * qf_co[17]) / CH_denom;
  amrex::Real CH_C = (epsilon + 1.0 * qr_co[8]) / CH_denom;

  // QSSA species 0: C

  amrex::Real C_num = epsilon + 1.0 * qr_co[6] + 1.0 * qr_co[7] +
                      1.0 * qr_co[40] + 1.0 * qr_co[63];
  amrex::Real C_denom =
    epsilon - qf_co[6] - qf_co[7] - qr_co[8] - qf_co[40] - qf_co[63];
  amrex::Real C_rhs = -C_num / C_denom;

  amrex::Real C_CH = (epsilon + 1.0 * qf_co[8]) / C_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_H2CC;
  amrex::Real H_1 = CH2_CH2D / (1 - H2CC_CH2D * H_0);
  amrex::Real H_2 = CH_CH2D / (1 - H2CC_CH2D * H_0);
  amrex::Real H_3 = (CH_CH2 - CH2D_CH2 * H_2) / (1 - CH2D_CH2 * H_1);
  amrex::Real H_4 =
    C_CH / ((1 - CH2D_CH * H_2) - (CH2_CH - CH2D_CH * H_1) * H_3);
  sc_qss[0] = (C_rhs - ((CH_rhs - (CH2D_rhs - H2CC_rhs * H_0) * H_2) -
                        (CH2_rhs - (CH2D_rhs - H2CC_rhs * H_0) * H_1) * H_3) *
                         H_4) /
              (1 - CH_C * H_4);

  sc_qss[1] = (((CH_rhs - (CH2D_rhs - H2CC_rhs * H_0) * H_2) -
                (CH2_rhs - (CH2D_rhs - H2CC_rhs * H_0) * H_1) * H_3) -
               (CH_C * sc_qss[0])) /
              ((1 - CH2D_CH * H_2) - (CH2_CH - CH2D_CH * H_1) * H_3);

  sc_qss[2] = ((CH2_rhs - (CH2D_rhs - H2CC_rhs * H_0) * H_1) -
               (+(CH2_CH - CH2D_CH * H_1) * sc_qss[1])) /
              (1 - CH2D_CH2 * H_1);

  sc_qss[3] = ((CH2D_rhs - H2CC_rhs * H_0) -
               (+CH2D_CH * sc_qss[1] + CH2D_CH2 * sc_qss[2])) /
              (1 - H2CC_CH2D * H_0);

  sc_qss[4] = H2CC_rhs - (+H2CC_CH2D * sc_qss[3]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: H + O2 (+M) <=> HO2 (+M)
  qf[0] = sc[2] * sc[9];
  qr[0] = sc[5];

  // reaction 1: 2 OH (+M) <=> H2O2 (+M)
  qf[1] = (sc[4] * sc[4]);
  qr[1] = sc[8];

  // reaction 2: CO + H2 (+M) <=> CH2O (+M)
  qf[2] = sc[6] * sc[16];
  qr[2] = sc[13];

  // reaction 3: CH + CO (+M) <=> HCCO (+M)
  qf[3] = sc[16] * sc_qss[1];
  qr[3] = sc[23];

  // reaction 4: H + HCO (+M) <=> CH2O (+M)
  qf[4] = sc[2] * sc[12];
  qr[4] = sc[13];

  // reaction 5: CH2 + H (+M) <=> CH3 (+M)
  qf[5] = sc[2] * sc_qss[2];
  qr[5] = sc[10];

  // reaction 6: CH2 + CO (+M) <=> CH2CO (+M)
  qf[6] = sc[16] * sc_qss[2];
  qr[6] = sc[24];

  // reaction 7: CH2* + H2O (+M) <=> CH3OH (+M)
  qf[7] = sc[7] * sc_qss[3];
  qr[7] = sc[15];

  // reaction 8: CH2O + H (+M) <=> CH3O (+M)
  qf[8] = sc[2] * sc[13];
  qr[8] = sc[14];

  // reaction 9: CH3 + H (+M) <=> CH4 (+M)
  qf[9] = sc[2] * sc[10];
  qr[9] = sc[11];

  // reaction 10: CH3 + OH (+M) <=> CH3OH (+M)
  qf[10] = sc[4] * sc[10];
  qr[10] = sc[15];

  // reaction 11: 2 CH3 (+M) <=> C2H6 (+M)
  qf[11] = (sc[10] * sc[10]);
  qr[11] = sc[22];

  // reaction 12: CH3O + H (+M) <=> CH3OH (+M)
  qf[12] = sc[2] * sc[14];
  qr[12] = sc[15];

  // reaction 13: C2H3 (+M) <=> C2H2 + H (+M)
  qf[13] = sc[19];
  qr[13] = sc[2] * sc[18];

  // reaction 14: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[14] = sc[2] * sc[24];
  qr[14] = sc[25];

  // reaction 15: C2H3 + H (+M) <=> C2H4 (+M)
  qf[15] = sc[2] * sc[19];
  qr[15] = sc[20];

  // reaction 16: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[16] = sc[10] * sc[19];
  qr[16] = sc[29];

  // reaction 17: C2H4 (+M) <=> H2 + H2CC (+M)
  qf[17] = sc[20];
  qr[17] = sc[6] * sc_qss[4];

  // reaction 18: C2H4 + H (+M) <=> C2H5 (+M)
  qf[18] = sc[2] * sc[20];
  qr[18] = sc[21];

  // reaction 19: C2H5 + H (+M) <=> C2H6 (+M)
  qf[19] = sc[2] * sc[21];
  qr[19] = sc[22];

  // reaction 20: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  qf[20] = sc[19] * sc[21];
  qr[20] = sc[31];

  // reaction 21: CH3 + O2 (+M) <=> CH3O2 (+M)
  qf[21] = sc[9] * sc[10];
  qr[21] = sc[38];

  // reaction 22: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[22] = sc[2] * sc[28];
  qr[22] = sc[29];

  // reaction 23: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  qf[23] = sc[10] * sc[28];
  qr[23] = sc[31];

  // reaction 24: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[24] = sc[2] * sc[29];
  qr[24] = sc[30];

  // reaction 25: CO + O (+M) <=> CO2 (+M)
  qf[25] = sc[3] * sc[16];
  qr[25] = sc[17];

  // reaction 26: C2H2 (+M) <=> H2CC (+M)
  qf[26] = sc[18];
  qr[26] = sc_qss[4];

  // reaction 27: 2 H + M <=> H2 + M
  qf[27] = (sc[2] * sc[2]);
  qr[27] = sc[6];

  // reaction 28: 2 H + H2 <=> H2 + H2
  qf[28] = (sc[2] * sc[2]) * sc[6];
  qr[28] = (sc[6] * sc[6]);

  // reaction 29: 2 H + H2O <=> H2 + H2O
  qf[29] = (sc[2] * sc[2]) * sc[7];
  qr[29] = sc[6] * sc[7];

  // reaction 30: 2 H + CO2 <=> H2 + CO2
  qf[30] = (sc[2] * sc[2]) * sc[17];
  qr[30] = sc[6] * sc[17];

  // reaction 31: H + OH + M <=> H2O + M
  qf[31] = sc[2] * sc[4];
  qr[31] = sc[7];

  // reaction 32: H + O + M <=> OH + M
  qf[32] = sc[2] * sc[3];
  qr[32] = sc[4];

  // reaction 33: 2 O + M <=> O2 + M
  qf[33] = (sc[3] * sc[3]);
  qr[33] = sc[9];

  // reaction 34: HCO + M <=> CO + H + M
  qf[34] = sc[12];
  qr[34] = sc[2] * sc[16];

  // reaction 35: HCO + H2O <=> CO + H + H2O
  qf[35] = sc[7] * sc[12];
  qr[35] = sc[2] * sc[7] * sc[16];

  // reaction 36: NO + O + M <=> NO2 + M
  qf[36] = sc[3] * sc[33];
  qr[36] = sc[34];

  // reaction 37: NCO + M <=> CO + N + M
  qf[37] = sc[37];
  qr[37] = sc[16] * sc[32];

  // reaction 38: H + O2 <=> O + OH
  qf[38] = sc[2] * sc[9];
  qr[38] = sc[3] * sc[4];

  // reaction 39: H2 + O <=> H + OH
  qf[39] = sc[3] * sc[6];
  qr[39] = sc[2] * sc[4];

  // reaction 40: H2 + OH <=> H + H2O
  qf[40] = sc[4] * sc[6];
  qr[40] = sc[2] * sc[7];

  // reaction 41: 2 OH <=> H2O + O
  qf[41] = (sc[4] * sc[4]);
  qr[41] = sc[3] * sc[7];

  // reaction 42: H2 + O2 <=> H + HO2
  qf[42] = sc[6] * sc[9];
  qr[42] = sc[2] * sc[5];

  // reaction 43: H + HO2 <=> H2O + O
  qf[43] = sc[2] * sc[5];
  qr[43] = sc[3] * sc[7];

  // reaction 44: H + HO2 <=> 2 OH
  qf[44] = sc[2] * sc[5];
  qr[44] = (sc[4] * sc[4]);

  // reaction 45: HO2 + O <=> O2 + OH
  qf[45] = sc[3] * sc[5];
  qr[45] = sc[4] * sc[9];

  // reaction 46: 2 HO2 <=> H2O2 + O2
  qf[46] = (sc[5] * sc[5]);
  qr[46] = sc[8] * sc[9];

  // reaction 47: 2 HO2 <=> H2O2 + O2
  qf[47] = (sc[5] * sc[5]);
  qr[47] = sc[8] * sc[9];

  // reaction 48: HO2 + OH <=> H2O + O2
  qf[48] = sc[4] * sc[5];
  qr[48] = sc[7] * sc[9];

  // reaction 49: HO2 + OH <=> H2O + O2
  qf[49] = sc[4] * sc[5];
  qr[49] = sc[7] * sc[9];

  // reaction 50: HO2 + OH <=> H2O + O2
  qf[50] = sc[4] * sc[5];
  qr[50] = sc[7] * sc[9];

  // reaction 51: HO2 + OH <=> H2O + O2
  qf[51] = sc[4] * sc[5];
  qr[51] = sc[7] * sc[9];

  // reaction 52: HO2 + OH <=> H2O + O2
  qf[52] = sc[4] * sc[5];
  qr[52] = sc[7] * sc[9];

  // reaction 53: H + H2O2 <=> H2 + HO2
  qf[53] = sc[2] * sc[8];
  qr[53] = sc[5] * sc[6];

  // reaction 54: H + H2O2 <=> H2O + OH
  qf[54] = sc[2] * sc[8];
  qr[54] = sc[4] * sc[7];

  // reaction 55: H2O2 + O <=> HO2 + OH
  qf[55] = sc[3] * sc[8];
  qr[55] = sc[4] * sc[5];

  // reaction 56: H2O2 + OH <=> H2O + HO2
  qf[56] = sc[4] * sc[8];
  qr[56] = sc[5] * sc[7];

  // reaction 57: H2O2 + OH <=> H2O + HO2
  qf[57] = sc[4] * sc[8];
  qr[57] = sc[5] * sc[7];

  // reaction 58: CO + OH <=> CO2 + H
  qf[58] = sc[4] * sc[16];
  qr[58] = sc[2] * sc[17];

  // reaction 59: CO + OH <=> CO2 + H
  qf[59] = sc[4] * sc[16];
  qr[59] = sc[2] * sc[17];

  // reaction 60: CO + O2 <=> CO2 + O
  qf[60] = sc[9] * sc[16];
  qr[60] = sc[3] * sc[17];

  // reaction 61: CO + HO2 <=> CO2 + OH
  qf[61] = sc[5] * sc[16];
  qr[61] = sc[4] * sc[17];

  // reaction 62: H + HCO <=> CO + H2
  qf[62] = sc[2] * sc[12];
  qr[62] = sc[6] * sc[16];

  // reaction 63: HCO + O <=> CO + OH
  qf[63] = sc[3] * sc[12];
  qr[63] = sc[4] * sc[16];

  // reaction 64: HCO + O <=> CO2 + H
  qf[64] = sc[3] * sc[12];
  qr[64] = sc[2] * sc[17];

  // reaction 65: HCO + OH <=> CO + H2O
  qf[65] = sc[4] * sc[12];
  qr[65] = sc[7] * sc[16];

  // reaction 66: HCO + O2 <=> CO + HO2
  qf[66] = sc[9] * sc[12];
  qr[66] = sc[5] * sc[16];

  // reaction 67: C + OH <=> CO + H
  qf[67] = sc[4] * sc_qss[0];
  qr[67] = sc[2] * sc[16];

  // reaction 68: C + O2 <=> CO + O
  qf[68] = sc[9] * sc_qss[0];
  qr[68] = sc[3] * sc[16];

  // reaction 69: CH + H <=> C + H2
  qf[69] = sc[2] * sc_qss[1];
  qr[69] = sc[6] * sc_qss[0];

  // reaction 70: CH + O <=> CO + H
  qf[70] = sc[3] * sc_qss[1];
  qr[70] = sc[2] * sc[16];

  // reaction 71: CH + OH <=> H + HCO
  qf[71] = sc[4] * sc_qss[1];
  qr[71] = sc[2] * sc[12];

  // reaction 72: CH + H2 <=> CH2 + H
  qf[72] = sc[6] * sc_qss[1];
  qr[72] = sc[2] * sc_qss[2];

  // reaction 73: CH + H2O <=> CH2O + H
  qf[73] = sc[7] * sc_qss[1];
  qr[73] = sc[2] * sc[13];

  // reaction 74: CH + O2 <=> HCO + O
  qf[74] = sc[9] * sc_qss[1];
  qr[74] = sc[3] * sc[12];

  // reaction 75: CH + CO2 <=> CO + HCO
  qf[75] = sc[17] * sc_qss[1];
  qr[75] = sc[12] * sc[16];

  // reaction 76: CH2 + O <=> H + HCO
  qf[76] = sc[3] * sc_qss[2];
  qr[76] = sc[2] * sc[12];

  // reaction 77: CH2 + OH <=> CH2O + H
  qf[77] = sc[4] * sc_qss[2];
  qr[77] = sc[2] * sc[13];

  // reaction 78: CH2 + OH <=> CH + H2O
  qf[78] = sc[4] * sc_qss[2];
  qr[78] = sc[7] * sc_qss[1];

  // reaction 79: CH2 + H2 <=> CH3 + H
  qf[79] = sc[6] * sc_qss[2];
  qr[79] = sc[2] * sc[10];

  // reaction 80: CH2 + O2 <=> HCO + OH
  qf[80] = sc[9] * sc_qss[2];
  qr[80] = sc[4] * sc[12];

  // reaction 81: CH2 + O2 <=> CO2 + 2 H
  qf[81] = sc[9] * sc_qss[2];
  qr[81] = (sc[2] * sc[2]) * sc[17];

  // reaction 82: CH2 + HO2 <=> CH2O + OH
  qf[82] = sc[5] * sc_qss[2];
  qr[82] = sc[4] * sc[13];

  // reaction 83: CH + CH2 <=> C2H2 + H
  qf[83] = sc_qss[1] * sc_qss[2];
  qr[83] = sc[2] * sc[18];

  // reaction 84: 2 CH2 <=> C2H2 + H2
  qf[84] = sc_qss[2] * sc_qss[2];
  qr[84] = sc[6] * sc[18];

  // reaction 85: CH2* + N2 <=> CH2 + N2
  qf[85] = sc[1] * sc_qss[3];
  qr[85] = sc[1] * sc_qss[2];

  // reaction 86: AR + CH2* <=> AR + CH2
  qf[86] = sc[0] * sc_qss[3];
  qr[86] = sc[0] * sc_qss[2];

  // reaction 87: CH2* + H <=> CH + H2
  qf[87] = sc[2] * sc_qss[3];
  qr[87] = sc[6] * sc_qss[1];

  // reaction 88: CH2* + O <=> CO + H2
  qf[88] = sc[3] * sc_qss[3];
  qr[88] = sc[6] * sc[16];

  // reaction 89: CH2* + O <=> H + HCO
  qf[89] = sc[3] * sc_qss[3];
  qr[89] = sc[2] * sc[12];

  // reaction 90: CH2* + OH <=> CH2O + H
  qf[90] = sc[4] * sc_qss[3];
  qr[90] = sc[2] * sc[13];

  // reaction 91: CH2* + H2 <=> CH3 + H
  qf[91] = sc[6] * sc_qss[3];
  qr[91] = sc[2] * sc[10];

  // reaction 92: CH2* + O2 <=> CO + H + OH
  qf[92] = sc[9] * sc_qss[3];
  qr[92] = sc[2] * sc[4] * sc[16];

  // reaction 93: CH2* + O2 <=> CO + H2O
  qf[93] = sc[9] * sc_qss[3];
  qr[93] = sc[7] * sc[16];

  // reaction 94: CH2* + H2O <=> CH2 + H2O
  qf[94] = sc[7] * sc_qss[3];
  qr[94] = sc[7] * sc_qss[2];

  // reaction 95: CH2* + CO <=> CH2 + CO
  qf[95] = sc[16] * sc_qss[3];
  qr[95] = sc[16] * sc_qss[2];

  // reaction 96: CH2* + CO2 <=> CH2 + CO2
  qf[96] = sc[17] * sc_qss[3];
  qr[96] = sc[17] * sc_qss[2];

  // reaction 97: CH2* + CO2 <=> CH2O + CO
  qf[97] = sc[17] * sc_qss[3];
  qr[97] = sc[13] * sc[16];

  // reaction 98: CH2O + H <=> H2 + HCO
  qf[98] = sc[2] * sc[13];
  qr[98] = sc[6] * sc[12];

  // reaction 99: CH2O + O <=> HCO + OH
  qf[99] = sc[3] * sc[13];
  qr[99] = sc[4] * sc[12];

  // reaction 100: CH2O + OH <=> H2O + HCO
  qf[100] = sc[4] * sc[13];
  qr[100] = sc[7] * sc[12];

  // reaction 101: CH2O + O2 <=> HCO + HO2
  qf[101] = sc[9] * sc[13];
  qr[101] = sc[5] * sc[12];

  // reaction 102: CH2O + HO2 <=> H2O2 + HCO
  qf[102] = sc[5] * sc[13];
  qr[102] = sc[8] * sc[12];

  // reaction 103: CH + CH2O <=> CH2CO + H
  qf[103] = sc[13] * sc_qss[1];
  qr[103] = sc[2] * sc[24];

  // reaction 104: CH3 + O <=> CH2O + H
  qf[104] = sc[3] * sc[10];
  qr[104] = sc[2] * sc[13];

  // reaction 105: CH3 + OH <=> CH2 + H2O
  qf[105] = sc[4] * sc[10];
  qr[105] = sc[7] * sc_qss[2];

  // reaction 106: CH3 + OH <=> CH2* + H2O
  qf[106] = sc[4] * sc[10];
  qr[106] = sc[7] * sc_qss[3];

  // reaction 107: CH3 + O2 <=> CH3O + O
  qf[107] = sc[9] * sc[10];
  qr[107] = sc[3] * sc[14];

  // reaction 108: CH3 + O2 <=> CH2O + OH
  qf[108] = sc[9] * sc[10];
  qr[108] = sc[4] * sc[13];

  // reaction 109: CH3 + HO2 <=> CH4 + O2
  qf[109] = sc[5] * sc[10];
  qr[109] = sc[9] * sc[11];

  // reaction 110: CH3 + HO2 <=> CH3O + OH
  qf[110] = sc[5] * sc[10];
  qr[110] = sc[4] * sc[14];

  // reaction 111: CH3 + H2O2 <=> CH4 + HO2
  qf[111] = sc[8] * sc[10];
  qr[111] = sc[5] * sc[11];

  // reaction 112: C + CH3 <=> C2H2 + H
  qf[112] = sc[10] * sc_qss[0];
  qr[112] = sc[2] * sc[18];

  // reaction 113: CH + CH3 <=> C2H3 + H
  qf[113] = sc[10] * sc_qss[1];
  qr[113] = sc[2] * sc[19];

  // reaction 114: CH3 + HCO <=> CH4 + CO
  qf[114] = sc[10] * sc[12];
  qr[114] = sc[11] * sc[16];

  // reaction 115: CH2O + CH3 <=> CH4 + HCO
  qf[115] = sc[10] * sc[13];
  qr[115] = sc[11] * sc[12];

  // reaction 116: CH2 + CH3 <=> C2H4 + H
  qf[116] = sc[10] * sc_qss[2];
  qr[116] = sc[2] * sc[20];

  // reaction 117: CH2* + CH3 <=> C2H4 + H
  qf[117] = sc[10] * sc_qss[3];
  qr[117] = sc[2] * sc[20];

  // reaction 118: 2 CH3 <=> C2H5 + H
  qf[118] = (sc[10] * sc[10]);
  qr[118] = sc[2] * sc[21];

  // reaction 119: CH3 + HCCO <=> C2H4 + CO
  qf[119] = sc[10] * sc[23];
  qr[119] = sc[16] * sc[20];

  // reaction 120: CH3O + H <=> CH2O + H2
  qf[120] = sc[2] * sc[14];
  qr[120] = sc[6] * sc[13];

  // reaction 121: CH3O + H <=> CH3 + OH
  qf[121] = sc[2] * sc[14];
  qr[121] = sc[4] * sc[10];

  // reaction 122: CH3O + H <=> CH2* + H2O
  qf[122] = sc[2] * sc[14];
  qr[122] = sc[7] * sc_qss[3];

  // reaction 123: CH3O + O <=> CH2O + OH
  qf[123] = sc[3] * sc[14];
  qr[123] = sc[4] * sc[13];

  // reaction 124: CH3O + OH <=> CH2O + H2O
  qf[124] = sc[4] * sc[14];
  qr[124] = sc[7] * sc[13];

  // reaction 125: CH3O + O2 <=> CH2O + HO2
  qf[125] = sc[9] * sc[14];
  qr[125] = sc[5] * sc[13];

  // reaction 126: CH4 + H <=> CH3 + H2
  qf[126] = sc[2] * sc[11];
  qr[126] = sc[6] * sc[10];

  // reaction 127: CH4 + O <=> CH3 + OH
  qf[127] = sc[3] * sc[11];
  qr[127] = sc[4] * sc[10];

  // reaction 128: CH4 + OH <=> CH3 + H2O
  qf[128] = sc[4] * sc[11];
  qr[128] = sc[7] * sc[10];

  // reaction 129: CH + CH4 <=> C2H4 + H
  qf[129] = sc[11] * sc_qss[1];
  qr[129] = sc[2] * sc[20];

  // reaction 130: CH2 + CH4 <=> 2 CH3
  qf[130] = sc[11] * sc_qss[2];
  qr[130] = (sc[10] * sc[10]);

  // reaction 131: CH2* + CH4 <=> 2 CH3
  qf[131] = sc[11] * sc_qss[3];
  qr[131] = (sc[10] * sc[10]);

  // reaction 132: CH3OH + H <=> CH3O + H2
  qf[132] = sc[2] * sc[15];
  qr[132] = sc[6] * sc[14];

  // reaction 133: CH3OH + O <=> CH3O + OH
  qf[133] = sc[3] * sc[15];
  qr[133] = sc[4] * sc[14];

  // reaction 134: CH3OH + OH <=> CH3O + H2O
  qf[134] = sc[4] * sc[15];
  qr[134] = sc[7] * sc[14];

  // reaction 135: CH3 + CH3OH <=> CH3O + CH4
  qf[135] = sc[10] * sc[15];
  qr[135] = sc[11] * sc[14];

  // reaction 136: H + HCCO <=> CH2* + CO
  qf[136] = sc[2] * sc[23];
  qr[136] = sc[16] * sc_qss[3];

  // reaction 137: HCCO + O <=> 2 CO + H
  qf[137] = sc[3] * sc[23];
  qr[137] = sc[2] * (sc[16] * sc[16]);

  // reaction 138: HCCO + O2 <=> 2 CO + OH
  qf[138] = sc[9] * sc[23];
  qr[138] = sc[4] * (sc[16] * sc[16]);

  // reaction 139: CH + HCCO <=> C2H2 + CO
  qf[139] = sc[23] * sc_qss[1];
  qr[139] = sc[16] * sc[18];

  // reaction 140: CH2 + HCCO <=> C2H3 + CO
  qf[140] = sc[23] * sc_qss[2];
  qr[140] = sc[16] * sc[19];

  // reaction 141: 2 HCCO <=> C2H2 + 2 CO
  qf[141] = (sc[23] * sc[23]);
  qr[141] = (sc[16] * sc[16]) * sc[18];

  // reaction 142: C2H2 + O <=> CH2 + CO
  qf[142] = sc[3] * sc[18];
  qr[142] = sc[16] * sc_qss[2];

  // reaction 143: C2H2 + O <=> H + HCCO
  qf[143] = sc[3] * sc[18];
  qr[143] = sc[2] * sc[23];

  // reaction 144: C2H2 + OH <=> CH2CO + H
  qf[144] = sc[4] * sc[18];
  qr[144] = sc[2] * sc[24];

  // reaction 145: C2H2 + OH <=> CH3 + CO
  qf[145] = sc[4] * sc[18];
  qr[145] = sc[10] * sc[16];

  // reaction 146: C2H2 + HCO <=> C2H3 + CO
  qf[146] = sc[12] * sc[18];
  qr[146] = sc[16] * sc[19];

  // reaction 147: C2H2 + CH3 <=> H + aC3H4
  qf[147] = sc[10] * sc[18];
  qr[147] = sc[2] * sc[27];

  // reaction 148: C2H2 + CH3 <=> aC3H5
  qf[148] = sc[10] * sc[18];
  qr[148] = sc[28];

  // reaction 149: H + H2CC <=> C2H2 + H
  qf[149] = sc[2] * sc_qss[4];
  qr[149] = sc[2] * sc[18];

  // reaction 150: H2CC + OH <=> CH2CO + H
  qf[150] = sc[4] * sc_qss[4];
  qr[150] = sc[2] * sc[24];

  // reaction 151: H2CC + O2 <=> 2 HCO
  qf[151] = sc[9] * sc_qss[4];
  qr[151] = (sc[12] * sc[12]);

  // reaction 152: CH2CO + H <=> H2 + HCCO
  qf[152] = sc[2] * sc[24];
  qr[152] = sc[6] * sc[23];

  // reaction 153: CH2CO + H <=> CH3 + CO
  qf[153] = sc[2] * sc[24];
  qr[153] = sc[10] * sc[16];

  // reaction 154: CH2CO + O <=> HCCO + OH
  qf[154] = sc[3] * sc[24];
  qr[154] = sc[4] * sc[23];

  // reaction 155: CH2CO + O <=> CH2 + CO2
  qf[155] = sc[3] * sc[24];
  qr[155] = sc[17] * sc_qss[2];

  // reaction 156: CH2CO + OH <=> H2O + HCCO
  qf[156] = sc[4] * sc[24];
  qr[156] = sc[7] * sc[23];

  // reaction 157: C2H3 + H <=> C2H2 + H2
  qf[157] = sc[2] * sc[19];
  qr[157] = sc[6] * sc[18];

  // reaction 158: C2H3 + H <=> H2 + H2CC
  qf[158] = sc[2] * sc[19];
  qr[158] = sc[6] * sc_qss[4];

  // reaction 159: C2H3 + O <=> CH2CO + H
  qf[159] = sc[3] * sc[19];
  qr[159] = sc[2] * sc[24];

  // reaction 160: C2H3 + O <=> CH3 + CO
  qf[160] = sc[3] * sc[19];
  qr[160] = sc[10] * sc[16];

  // reaction 161: C2H3 + OH <=> C2H2 + H2O
  qf[161] = sc[4] * sc[19];
  qr[161] = sc[7] * sc[18];

  // reaction 162: C2H3 + O2 <=> C2H2 + HO2
  qf[162] = sc[9] * sc[19];
  qr[162] = sc[5] * sc[18];

  // reaction 163: C2H3 + O2 <=> CH2CHO + O
  qf[163] = sc[9] * sc[19];
  qr[163] = sc[3] * sc[25];

  // reaction 164: C2H3 + O2 <=> CH2O + HCO
  qf[164] = sc[9] * sc[19];
  qr[164] = sc[12] * sc[13];

  // reaction 165: C2H3 + HO2 <=> CH2CHO + OH
  qf[165] = sc[5] * sc[19];
  qr[165] = sc[4] * sc[25];

  // reaction 166: C2H3 + H2O2 <=> C2H4 + HO2
  qf[166] = sc[8] * sc[19];
  qr[166] = sc[5] * sc[20];

  // reaction 167: C2H3 + HCO <=> C2H4 + CO
  qf[167] = sc[12] * sc[19];
  qr[167] = sc[16] * sc[20];

  // reaction 168: C2H3 + CH3 <=> C2H2 + CH4
  qf[168] = sc[10] * sc[19];
  qr[168] = sc[11] * sc[18];

  // reaction 169: C2H3 + CH3 <=> H + aC3H5
  qf[169] = sc[10] * sc[19];
  qr[169] = sc[2] * sc[28];

  // reaction 170: 2 C2H3 <=> C2H2 + C2H4
  qf[170] = (sc[19] * sc[19]);
  qr[170] = sc[18] * sc[20];

  // reaction 171: CH2CHO <=> CH3 + CO
  qf[171] = sc[25];
  qr[171] = sc[10] * sc[16];

  // reaction 172: CH2CHO + H <=> CH3 + HCO
  qf[172] = sc[2] * sc[25];
  qr[172] = sc[10] * sc[12];

  // reaction 173: CH2CHO + H <=> CH2CO + H2
  qf[173] = sc[2] * sc[25];
  qr[173] = sc[6] * sc[24];

  // reaction 174: CH2CHO + O <=> CH2CO + OH
  qf[174] = sc[3] * sc[25];
  qr[174] = sc[4] * sc[24];

  // reaction 175: CH2CHO + OH <=> CH2CO + H2O
  qf[175] = sc[4] * sc[25];
  qr[175] = sc[7] * sc[24];

  // reaction 176: CH2CHO + O2 <=> CH2CO + HO2
  qf[176] = sc[9] * sc[25];
  qr[176] = sc[5] * sc[24];

  // reaction 177: CH2CHO + O2 <=> CH2O + CO + OH
  qf[177] = sc[9] * sc[25];
  qr[177] = sc[4] * sc[13] * sc[16];

  // reaction 178: CH2OCH2 <=> CH3 + HCO
  qf[178] = sc[26];
  qr[178] = sc[10] * sc[12];

  // reaction 179: CH2OCH2 <=> CH4 + CO
  qf[179] = sc[26];
  qr[179] = sc[11] * sc[16];

  // reaction 180: CH2OCH2 + H <=> C2H3 + H2O
  qf[180] = sc[2] * sc[26];
  qr[180] = sc[7] * sc[19];

  // reaction 181: CH2OCH2 + H <=> C2H4 + OH
  qf[181] = sc[2] * sc[26];
  qr[181] = sc[4] * sc[20];

  // reaction 182: C2H4 + H <=> C2H3 + H2
  qf[182] = sc[2] * sc[20];
  qr[182] = sc[6] * sc[19];

  // reaction 183: C2H4 + O <=> C2H3 + OH
  qf[183] = sc[3] * sc[20];
  qr[183] = sc[4] * sc[19];

  // reaction 184: C2H4 + O <=> CH3 + HCO
  qf[184] = sc[3] * sc[20];
  qr[184] = sc[10] * sc[12];

  // reaction 185: C2H4 + O <=> CH2 + CH2O
  qf[185] = sc[3] * sc[20];
  qr[185] = sc[13] * sc_qss[2];

  // reaction 186: C2H4 + OH <=> C2H3 + H2O
  qf[186] = sc[4] * sc[20];
  qr[186] = sc[7] * sc[19];

  // reaction 187: C2H4 + HCO <=> C2H5 + CO
  qf[187] = sc[12] * sc[20];
  qr[187] = sc[16] * sc[21];

  // reaction 188: C2H4 + CH <=> H + aC3H4
  qf[188] = sc[20] * sc_qss[1];
  qr[188] = sc[2] * sc[27];

  // reaction 189: C2H4 + CH2 <=> H + aC3H5
  qf[189] = sc[20] * sc_qss[2];
  qr[189] = sc[2] * sc[28];

  // reaction 190: C2H4 + CH2* <=> CH4 + H2CC
  qf[190] = sc[20] * sc_qss[3];
  qr[190] = sc[11] * sc_qss[4];

  // reaction 191: C2H4 + CH2* <=> H + aC3H5
  qf[191] = sc[20] * sc_qss[3];
  qr[191] = sc[2] * sc[28];

  // reaction 192: C2H4 + CH3 <=> C2H3 + CH4
  qf[192] = sc[10] * sc[20];
  qr[192] = sc[11] * sc[19];

  // reaction 193: C2H4 + CH3 <=> nC3H7
  qf[193] = sc[10] * sc[20];
  qr[193] = sc[30];

  // reaction 194: C2H4 + O2 <=> C2H3 + HO2
  qf[194] = sc[9] * sc[20];
  qr[194] = sc[5] * sc[19];

  // reaction 195: C2H4 + HO2 <=> CH2OCH2 + OH
  qf[195] = sc[5] * sc[20];
  qr[195] = sc[4] * sc[26];

  // reaction 196: C2H5 + H <=> C2H4 + H2
  qf[196] = sc[2] * sc[21];
  qr[196] = sc[6] * sc[20];

  // reaction 197: C2H5 + O <=> CH2O + CH3
  qf[197] = sc[3] * sc[21];
  qr[197] = sc[10] * sc[13];

  // reaction 198: C2H5 + O2 <=> C2H4 + HO2
  qf[198] = sc[9] * sc[21];
  qr[198] = sc[5] * sc[20];

  // reaction 199: C2H5 + HO2 <=> C2H6 + O2
  qf[199] = sc[5] * sc[21];
  qr[199] = sc[9] * sc[22];

  // reaction 200: C2H5 + HO2 <=> C2H4 + H2O2
  qf[200] = sc[5] * sc[21];
  qr[200] = sc[8] * sc[20];

  // reaction 201: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[201] = sc[5] * sc[21];
  qr[201] = sc[4] * sc[10] * sc[13];

  // reaction 202: C2H5 + H2O2 <=> C2H6 + HO2
  qf[202] = sc[8] * sc[21];
  qr[202] = sc[5] * sc[22];

  // reaction 203: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[203] = sc[19] * sc[21];
  qr[203] = sc[10] * sc[28];

  // reaction 204: C2H6 + H <=> C2H5 + H2
  qf[204] = sc[2] * sc[22];
  qr[204] = sc[6] * sc[21];

  // reaction 205: C2H6 + O <=> C2H5 + OH
  qf[205] = sc[3] * sc[22];
  qr[205] = sc[4] * sc[21];

  // reaction 206: C2H6 + OH <=> C2H5 + H2O
  qf[206] = sc[4] * sc[22];
  qr[206] = sc[7] * sc[21];

  // reaction 207: C2H6 + CH2* <=> C2H5 + CH3
  qf[207] = sc[22] * sc_qss[3];
  qr[207] = sc[10] * sc[21];

  // reaction 208: C2H6 + CH3 <=> C2H5 + CH4
  qf[208] = sc[10] * sc[22];
  qr[208] = sc[11] * sc[21];

  // reaction 209: CH3O2 + HO2 <=> CH2O + H2O + O2
  qf[209] = sc[5] * sc[38];
  qr[209] = sc[7] * sc[9] * sc[13];

  // reaction 210: 2 CH3O2 <=> CH2O + CH3OH + O2
  qf[210] = (sc[38] * sc[38]);
  qr[210] = sc[9] * sc[13] * sc[15];

  // reaction 211: 2 CH3O2 <=> 2 CH3O + O2
  qf[211] = (sc[38] * sc[38]);
  qr[211] = sc[9] * (sc[14] * sc[14]);

  // reaction 212: CH3 + CH3O2 <=> 2 CH3O
  qf[212] = sc[10] * sc[38];
  qr[212] = (sc[14] * sc[14]);

  // reaction 213: CH3O2 + OH <=> CH3OH + O2
  qf[213] = sc[4] * sc[38];
  qr[213] = sc[9] * sc[15];

  // reaction 214: CH3O2 + H <=> CH3O + OH
  qf[214] = sc[2] * sc[38];
  qr[214] = sc[4] * sc[14];

  // reaction 215: CH3O2 + O <=> CH3O + O2
  qf[215] = sc[3] * sc[38];
  qr[215] = sc[9] * sc[14];

  // reaction 216: H + aC3H4 <=> aC3H5
  qf[216] = sc[2] * sc[27];
  qr[216] = sc[28];

  // reaction 217: O + aC3H4 <=> C2H4 + CO
  qf[217] = sc[3] * sc[27];
  qr[217] = sc[16] * sc[20];

  // reaction 218: H + aC3H5 <=> H2 + aC3H4
  qf[218] = sc[2] * sc[28];
  qr[218] = sc[6] * sc[27];

  // reaction 219: OH + aC3H5 <=> H2O + aC3H4
  qf[219] = sc[4] * sc[28];
  qr[219] = sc[7] * sc[27];

  // reaction 220: O2 + aC3H5 <=> HO2 + aC3H4
  qf[220] = sc[9] * sc[28];
  qr[220] = sc[5] * sc[27];

  // reaction 221: HO2 + aC3H5 <=> C3H6 + O2
  qf[221] = sc[5] * sc[28];
  qr[221] = sc[9] * sc[29];

  // reaction 222: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[222] = sc[5] * sc[28];
  qr[222] = sc[4] * sc[13] * sc[19];

  // reaction 223: HCO + aC3H5 <=> C3H6 + CO
  qf[223] = sc[12] * sc[28];
  qr[223] = sc[16] * sc[29];

  // reaction 224: CH3 + aC3H5 <=> CH4 + aC3H4
  qf[224] = sc[10] * sc[28];
  qr[224] = sc[11] * sc[27];

  // reaction 225: C3H6 + H <=> C2H4 + CH3
  qf[225] = sc[2] * sc[29];
  qr[225] = sc[10] * sc[20];

  // reaction 226: C3H6 + H <=> H2 + aC3H5
  qf[226] = sc[2] * sc[29];
  qr[226] = sc[6] * sc[28];

  // reaction 227: C3H6 + O <=> CH2CO + CH3 + H
  qf[227] = sc[3] * sc[29];
  qr[227] = sc[2] * sc[10] * sc[24];

  // reaction 228: C3H6 + O <=> C2H5 + HCO
  qf[228] = sc[3] * sc[29];
  qr[228] = sc[12] * sc[21];

  // reaction 229: C3H6 + O <=> OH + aC3H5
  qf[229] = sc[3] * sc[29];
  qr[229] = sc[4] * sc[28];

  // reaction 230: C3H6 + OH <=> H2O + aC3H5
  qf[230] = sc[4] * sc[29];
  qr[230] = sc[7] * sc[28];

  // reaction 231: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[231] = sc[5] * sc[29];
  qr[231] = sc[8] * sc[28];

  // reaction 232: C3H6 + CH3 <=> CH4 + aC3H5
  qf[232] = sc[10] * sc[29];
  qr[232] = sc[11] * sc[28];

  // reaction 233: H + nC3H7 <=> C2H5 + CH3
  qf[233] = sc[2] * sc[30];
  qr[233] = sc[10] * sc[21];

  // reaction 234: H + nC3H7 <=> C3H6 + H2
  qf[234] = sc[2] * sc[30];
  qr[234] = sc[6] * sc[29];

  // reaction 235: O + nC3H7 <=> C2H5 + CH2O
  qf[235] = sc[3] * sc[30];
  qr[235] = sc[13] * sc[21];

  // reaction 236: OH + nC3H7 <=> C3H6 + H2O
  qf[236] = sc[4] * sc[30];
  qr[236] = sc[7] * sc[29];

  // reaction 237: O2 + nC3H7 <=> C3H6 + HO2
  qf[237] = sc[9] * sc[30];
  qr[237] = sc[5] * sc[29];

  // reaction 238: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[238] = sc[5] * sc[30];
  qr[238] = sc[4] * sc[13] * sc[21];

  // reaction 239: CH3 + nC3H7 <=> C3H6 + CH4
  qf[239] = sc[10] * sc[30];
  qr[239] = sc[11] * sc[29];

  // reaction 240: C4H81 + H <=> C2H4 + C2H5
  qf[240] = sc[2] * sc[31];
  qr[240] = sc[20] * sc[21];

  // reaction 241: C4H81 + H <=> C3H6 + CH3
  qf[241] = sc[2] * sc[31];
  qr[241] = sc[10] * sc[29];

  // reaction 242: C4H81 + O <=> HCO + nC3H7
  qf[242] = sc[3] * sc[31];
  qr[242] = sc[12] * sc[30];

  // reaction 243: N + NO <=> N2 + O
  qf[243] = sc[32] * sc[33];
  qr[243] = sc[1] * sc[3];

  // reaction 244: N + O2 <=> NO + O
  qf[244] = sc[9] * sc[32];
  qr[244] = sc[3] * sc[33];

  // reaction 245: N + OH <=> H + NO
  qf[245] = sc[4] * sc[32];
  qr[245] = sc[2] * sc[33];

  // reaction 246: HO2 + NO <=> NO2 + OH
  qf[246] = sc[5] * sc[33];
  qr[246] = sc[4] * sc[34];

  // reaction 247: NO2 + O <=> NO + O2
  qf[247] = sc[3] * sc[34];
  qr[247] = sc[9] * sc[33];

  // reaction 248: H + NO2 <=> NO + OH
  qf[248] = sc[2] * sc[34];
  qr[248] = sc[4] * sc[33];

  // reaction 249: NCO + O <=> CO + NO
  qf[249] = sc[3] * sc[37];
  qr[249] = sc[16] * sc[33];

  // reaction 250: NCO + OH <=> CO + H + NO
  qf[250] = sc[4] * sc[37];
  qr[250] = sc[2] * sc[16] * sc[33];

  // reaction 251: N + NCO <=> CO + N2
  qf[251] = sc[32] * sc[37];
  qr[251] = sc[1] * sc[16];

  // reaction 252: NCO + O2 <=> CO2 + NO
  qf[252] = sc[9] * sc[37];
  qr[252] = sc[17] * sc[33];

  // reaction 253: NCO + NO <=> CO2 + N2
  qf[253] = sc[33] * sc[37];
  qr[253] = sc[1] * sc[17];

  // reaction 254: C + NO <=> CO + N
  qf[254] = sc[33] * sc_qss[0];
  qr[254] = sc[16] * sc[32];

  // reaction 255: CH + NO <=> H + NCO
  qf[255] = sc[33] * sc_qss[1];
  qr[255] = sc[2] * sc[37];

  // reaction 256: CH + NO <=> HCO + N
  qf[256] = sc[33] * sc_qss[1];
  qr[256] = sc[12] * sc[32];

  // reaction 257: CH2 + NO <=> H + HNCO
  qf[257] = sc[33] * sc_qss[2];
  qr[257] = sc[2] * sc[36];

  // reaction 258: CH2 + NO <=> H + HCNO
  qf[258] = sc[33] * sc_qss[2];
  qr[258] = sc[2] * sc[35];

  // reaction 259: CH2* + NO <=> H + HNCO
  qf[259] = sc[33] * sc_qss[3];
  qr[259] = sc[2] * sc[36];

  // reaction 260: CH2* + NO <=> H + HCNO
  qf[260] = sc[33] * sc_qss[3];
  qr[260] = sc[2] * sc[35];

  // reaction 261: HNCO + O <=> NCO + OH
  qf[261] = sc[3] * sc[36];
  qr[261] = sc[4] * sc[37];

  // reaction 262: H + HNCO <=> H2 + NCO
  qf[262] = sc[2] * sc[36];
  qr[262] = sc[6] * sc[37];

  // reaction 263: HNCO + OH <=> H2O + NCO
  qf[263] = sc[4] * sc[36];
  qr[263] = sc[7] * sc[37];

  // reaction 264: H + HCNO <=> H + HNCO
  qf[264] = sc[2] * sc[35];
  qr[264] = sc[2] * sc[36];

  // reaction 265: HCCO + NO <=> CO + HCNO
  qf[265] = sc[23] * sc[33];
  qr[265] = sc[16] * sc[35];

  // reaction 266: CO2 + N <=> CO + NO
  qf[266] = sc[17] * sc[32];
  qr[266] = sc[16] * sc[33];

  // reaction 267: CH3 + NO2 <=> CH3O + NO
  qf[267] = sc[10] * sc[34];
  qr[267] = sc[14] * sc[33];

  // reaction 268: CH3O2 + NO <=> CH3O + NO2
  qf[268] = sc[33] * sc[38];
  qr[268] = sc[14] * sc[34];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 39; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 5; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[39];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[5];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  H + O2 (+M) <=> HO2 (+M)
  k_f = 5116000 * exp((0.44) * tc[0]);
  Corr = mixture + (-0.6) * sc[0] + (10.89) * sc[7] + (-0.15) * sc[9] +
         (0.0900000000000001) * sc[16] + (1.18) * sc[17];
  redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10((0.5) * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[9])) * (refC);
  // reaction 1:  2 OH (+M) <=> H2O2 (+M)
  k_f = 111000000 * exp((-0.37) * tc[0]);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + (0.75) * sc[16] +
         (2.6) * sc[17];
  redP = Corr / k_f * 201000 * exp(-0.584 * tc[0] - (-1153.87581469022) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[8])) * (refC);
  // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[6] - g_RT[13] + g_RT[16])) * (refC);
  // reaction 3:  CH + CO (+M) <=> HCCO (+M)
  k_f = 50000000;
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - (974.227464997937) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-tc[1] * 0.00421940928270042) +
    0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[16] - g_RT[23] + g_RT_qss[1])) * (refC);
  // reaction 4:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC);
  // reaction 5:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[2] - g_RT[10] + g_RT_qss[2])) * (refC);
  // reaction 6:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-tc[1] * 0.00363636363636364) +
    0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[16] - g_RT[24] + g_RT_qss[2])) * (refC);
  // reaction 7:  CH2* + H2O (+M) <=> CH3OH (+M)
  k_f = 20000000;
  Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - (1559.97166399463) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.8493) * exp(-tc[1] * 0.00746268656716418) +
    0.1507 * exp(-tc[1] * 0.000419639110365086) + exp(-7265 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[7] - g_RT[15] + g_RT_qss[3])) * (refC);
  // reaction 8:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[2] + g_RT[13] - g_RT[14])) * (refC);
  // reaction 9:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC);
  // reaction 10:  CH3 + OH (+M) <=> CH3OH (+M)
  k_f = 63000000;
  Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - (1559.97166399463) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.7895) * exp(-tc[1] * 0.0119760479041916) +
    0.2105 * exp(-tc[1] * 0.000185253797702853) + exp(-8370 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(g_RT[4] + g_RT[10] - g_RT[15])) * (refC);
  // reaction 11:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(2.000000 * g_RT[10] - g_RT[22])) * (refC);
  // reaction 12:  CH3O + H (+M) <=> CH3OH (+M)
  k_f = 50000000;
  Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] + sc[17] +
         (2) * sc[22];
  redP = Corr / k_f * 8.6e+16 * exp(-4 * tc[0] - (1522.23041405928) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1098) * exp(-tc[1] * 0.00694444444444444) +
    0.8902 * exp(-tc[1] * 0.000352360817477097) + exp(-45569 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[15])) * (refC);
  // reaction 13:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT[19])) * (refCinv);
  // reaction 14:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-tc[1] * 0.000585823081429408) +
    0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[2] + g_RT[24] - g_RT[25])) * (refC);
  // reaction 15:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(g_RT[2] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 16:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] + (2) * sc[22];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[10] + g_RT[19] - g_RT[29])) * (refC);
  // reaction 17:  C2H4 (+M) <=> H2 + H2CC (+M)
  k_f = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - (50251.2162472593) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2655) * exp(-tc[1] * 0.00555555555555556) +
    0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(-g_RT[6] + g_RT[20] - g_RT_qss[4])) * (refCinv);
  // reaction 18:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1367 * exp((1.463) * tc[0] - (681.858582165395) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP =
    Corr / k_f * 2.027e+27 * exp(-6.642 * tc[0] - (2903.05694502743) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (1.569) * exp(-tc[1] * 0.00334448160535117) +
    -0.569 * exp(-tc[1] * 0.000109325461900077) + exp(152.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[2] + g_RT[20] - g_RT[21])) * (refC);
  // reaction 19:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[2] + g_RT[21] - g_RT[22])) * (refC);
  // reaction 20:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
  k_f = 15000000;
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - (4521.1501339225) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.802) * exp(-tc[1] * 0.000439000834101585) +
    0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[19] + g_RT[21] - g_RT[31])) * (refC);
  // reaction 21:  CH3 + O2 (+M) <=> CH3O2 (+M)
  k_f = 783 * exp((1.2) * tc[0]);
  Corr = mixture;
  redP = Corr / k_f * 58000000000000 * exp(-3.3 * tc[0]);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10((0.336) * exp(-tc[1] * 1e-05) + 0.664 * exp(-tc[1] * 0.1) + 0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(g_RT[9] + g_RT[10] - g_RT[38])) * (refC);
  // reaction 22:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[22] *= Corr * k_f;
  qr[22] *= Corr * k_f * exp(-(g_RT[2] + g_RT[28] - g_RT[29])) * (refC);
  // reaction 23:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
  k_f = 100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - (3145.1041612795) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.896) * exp(-tc[1] * 0.00062266500622665) +
    0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(g_RT[10] + g_RT[28] - g_RT[31])) * (refC);
  // reaction 24:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[2] + g_RT[29] - g_RT[30])) * (refC);
  // reaction 25:  CO + O (+M) <=> CO2 (+M)
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] + (0.75) * sc[16] +
         (2.6) * sc[17];
  redP =
    Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[3] + g_RT[16] - g_RT[17])) * (refC);
  // reaction 26:  C2H2 (+M) <=> H2CC (+M)
  k_f = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] + sc[17] +
         (1.5) * sc[18] + (1.5) * sc[20] + (2) * sc[22];
  redP =
    Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - (25009.8682904946) * invT);
  Corr = redP / (1. + redP);
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[18] - g_RT_qss[4]));
  // reaction 27:  2 H + M <=> H2 + M
  k_f = 1780000 * exp((-1) * tc[0]);
  Corr =
    mixture + (-0.37) * sc[0] + (-1) * sc[6] + (-1) * sc[7] + (-1) * sc[17];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC);
  // reaction 28:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[28] *= k_f;
  qr[28] *= k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC);
  // reaction 29:  2 H + H2O <=> H2 + H2O
  k_f = 56240000 * exp((-1.25) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC);
  // reaction 30:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC);
  // reaction 31:  H + OH + M <=> H2O + M
  k_f = 44000000000 * exp((-2) * tc[0]);
  Corr = mixture + (-0.62) * sc[0] + sc[6] + (5.3) * sc[7] + (0.75) * sc[16] +
         (2.6) * sc[17];
  qf[31] *= Corr * k_f;
  qr[31] *= Corr * k_f * exp(-(g_RT[2] + g_RT[4] - g_RT[7])) * (refC);
  // reaction 32:  H + O + M <=> OH + M
  k_f = 9428000 * exp((-1) * tc[0]);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] + (0.75) * sc[16] +
         (2.6) * sc[17];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[4])) * (refC);
  // reaction 33:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr = mixture + (-0.17) * sc[0] + (1.4) * sc[6] + (14.4) * sc[7] +
         (0.75) * sc[16] + (2.6) * sc[17];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[9])) * (refC);
  // reaction 34:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[6] + (-1) * sc[7] + (0.75) * sc[16] + (2.6) * sc[17];
  qf[34] *= Corr * k_f;
  qr[34] *= Corr * k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) * (refCinv);
  // reaction 35:  HCO + H2O <=> CO + H + H2O
  k_f = 2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) * (refCinv);
  // reaction 36:  NO + O + M <=> NO2 + M
  k_f = 106000000 * exp((-1.41) * tc[0]);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  qf[36] *= Corr * k_f;
  qr[36] *= Corr * k_f * exp(-(g_RT[3] + g_RT[33] - g_RT[34])) * (refC);
  // reaction 37:  NCO + M <=> CO + N + M
  k_f = 310000000 * exp(-(27198.8607867451) * invT);
  Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
         (0.5) * sc[16] + sc[17] + (2) * sc[22];
  qf[37] *= Corr * k_f;
  qr[37] *= Corr * k_f * exp(-(-g_RT[16] - g_RT[32] + g_RT[37])) * (refCinv);
  // reaction 38:  H + O2 <=> O + OH
  k_f = 26440000000 * exp((-0.6707) * tc[0] - (8575.31520197823) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[9]));
  // reaction 39:  H2 + O <=> H + OH
  k_f = 0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 40:  H2 + OH <=> H + H2O
  k_f = 173.4 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[6] - g_RT[7]));
  // reaction 41:  2 OH <=> H2O + O
  k_f = 0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[4] - g_RT[7]));
  // reaction 42:  H2 + O2 <=> H + HO2
  k_f = 0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(-g_RT[2] - g_RT[5] + g_RT[6] + g_RT[9]));
  // reaction 43:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[5] - g_RT[7]));
  // reaction 44:  H + HO2 <=> 2 OH
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[4] + g_RT[5]));
  // reaction 45:  HO2 + O <=> O2 + OH
  k_f = 40000000;
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[5] - g_RT[9]));
  // reaction 46:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9]));
  // reaction 47:  2 HO2 <=> H2O2 + O2
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9]));
  // reaction 48:  HO2 + OH <=> H2O + O2
  k_f = 1410000000000 * exp((-1.76) * tc[0] - (30.1929999482832) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9]));
  // reaction 49:  HO2 + OH <=> H2O + O2
  k_f = 1.12e+79 * exp((-22.3) * tc[0] - (13536.528310147) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9]));
  // reaction 50:  HO2 + OH <=> H2O + O2
  k_f = 5.37e+64 * exp((-16.72) * tc[0] - (16555.8283049753) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9]));
  // reaction 51:  HO2 + OH <=> H2O + O2
  k_f = 2510000 * exp((2) * tc[0] - (20128.6666321888) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9]));
  // reaction 52:  HO2 + OH <=> H2O + O2
  k_f = 1e+130 * exp((-40) * tc[0] - (17511.9399700042) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9]));
  // reaction 53:  H + H2O2 <=> H2 + HO2
  k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[6] + g_RT[8]));
  // reaction 54:  H + H2O2 <=> H2O + OH
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[7] + g_RT[8]));
  // reaction 55:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[8]));
  // reaction 56:  H2O2 + OH <=> H2O + HO2
  k_f = 2000000 * exp(-(214.873516298615) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8]));
  // reaction 57:  H2O2 + OH <=> H2O + HO2
  k_f = 2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8]));
  // reaction 58:  CO + OH <=> CO2 + H
  k_f = 0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17]));
  // reaction 59:  CO + OH <=> CO2 + H
  k_f = 5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17]));
  // reaction 60:  CO + O2 <=> CO2 + O
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[16] - g_RT[17]));
  // reaction 61:  CO + HO2 <=> CO2 + OH
  k_f = 0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[16] - g_RT[17]));
  // reaction 62:  H + HCO <=> CO + H2
  k_f = 120000000;
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[16]));
  // reaction 63:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[12] - g_RT[16]));
  // reaction 64:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[17]));
  // reaction 65:  HCO + OH <=> CO + H2O
  k_f = 30200000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[12] - g_RT[16]));
  // reaction 66:  HCO + O2 <=> CO + HO2
  k_f = 12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[5] + g_RT[9] + g_RT[12] - g_RT[16]));
  // reaction 67:  C + OH <=> CO + H
  k_f = 50000000;
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] + g_RT_qss[0]));
  // reaction 68:  C + O2 <=> CO + O
  k_f = 58000000 * exp(-(289.852799503519) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(-g_RT[3] + g_RT[9] - g_RT[16] + g_RT_qss[0]));
  // reaction 69:  CH + H <=> C + H2
  k_f = 110000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 70:  CH + O <=> CO + H
  k_f = 57000000;
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[16] + g_RT_qss[1]));
  // reaction 71:  CH + OH <=> H + HCO
  k_f = 30000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[12] + g_RT_qss[1]));
  // reaction 72:  CH + H2 <=> CH2 + H
  k_f = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[2] + g_RT[6] + g_RT_qss[1] - g_RT_qss[2]));
  // reaction 73:  CH + H2O <=> CH2O + H
  k_f = 5710000 * exp(-(-379.928582682563) * invT);
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[2] + g_RT[7] - g_RT[13] + g_RT_qss[1]));
  // reaction 74:  CH + O2 <=> HCO + O
  k_f = 33000000;
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(-g_RT[3] + g_RT[9] - g_RT[12] + g_RT_qss[1]));
  // reaction 75:  CH + CO2 <=> CO + HCO
  k_f = 3400000 * exp(-(347.219499405257) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[12] - g_RT[16] + g_RT[17] + g_RT_qss[1]));
  // reaction 76:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[2]));
  // reaction 77:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[2]));
  // reaction 78:  CH2 + OH <=> CH + H2O
  k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 79:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[2]));
  // reaction 80:  CH2 + O2 <=> HCO + OH
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[12] + g_RT_qss[2]));
  // reaction 81:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f *
            exp(-(-2.000000 * g_RT[2] + g_RT[9] - g_RT[17] + g_RT_qss[2])) *
            (refCinv);
  // reaction 82:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] + g_RT_qss[2]));
  // reaction 83:  CH + CH2 <=> C2H2 + H
  k_f = 40000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT_qss[1] + g_RT_qss[2]));
  // reaction 84:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(-g_RT[6] - g_RT[18] + 2.000000 * g_RT_qss[2]));
  // reaction 85:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(g_RT[1] - g_RT[1] - g_RT_qss[2] + g_RT_qss[3]));
  // reaction 86:  AR + CH2* <=> AR + CH2
  k_f = 9000000 * exp(-(301.929999482832) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[0] - g_RT[0] - g_RT_qss[2] + g_RT_qss[3]));
  // reaction 87:  CH2* + H <=> CH + H2
  k_f = 30000000;
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3]));
  // reaction 88:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[16] + g_RT_qss[3]));
  // reaction 89:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[3]));
  // reaction 90:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[3]));
  // reaction 91:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[3]));
  // reaction 92:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[92] *= k_f;
  qr[92] *= k_f *
            exp(-(-g_RT[2] - g_RT[4] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
            (refCinv);
  // reaction 93:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[7] + g_RT[9] - g_RT[16] + g_RT_qss[3]));
  // reaction 94:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[7] - g_RT[7] - g_RT_qss[2] + g_RT_qss[3]));
  // reaction 95:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(g_RT[16] - g_RT[16] - g_RT_qss[2] + g_RT_qss[3]));
  // reaction 96:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[17] - g_RT[17] - g_RT_qss[2] + g_RT_qss[3]));
  // reaction 97:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[13] - g_RT[16] + g_RT[17] + g_RT_qss[3]));
  // reaction 98:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[13]));
  // reaction 99:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[12] + g_RT[13]));
  // reaction 100:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[12] + g_RT[13]));
  // reaction 101:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[12] + g_RT[13]));
  // reaction 102:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[12] + g_RT[13]));
  // reaction 103:  CH + CH2O <=> CH2CO + H
  k_f = 94600000 * exp(-(-259.156582889431) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(-g_RT[2] + g_RT[13] - g_RT[24] + g_RT_qss[1]));
  // reaction 104:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[13]));
  // reaction 105:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[2]));
  // reaction 106:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[3]));
  // reaction 107:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[10] - g_RT[14]));
  // reaction 108:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(-g_RT[4] + g_RT[9] + g_RT[10] - g_RT[13]));
  // reaction 109:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[10] - g_RT[11]));
  // reaction 110:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[14]));
  // reaction 111:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[10] - g_RT[11]));
  // reaction 112:  C + CH3 <=> C2H2 + H
  k_f = 50000000;
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[18] + g_RT_qss[0]));
  // reaction 113:  CH + CH3 <=> C2H3 + H
  k_f = 30000000;
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[19] + g_RT_qss[1]));
  // reaction 114:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[12] - g_RT[16]));
  // reaction 115:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[12] + g_RT[13]));
  // reaction 116:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[2]));
  // reaction 117:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[3]));
  // reaction 118:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[10] - g_RT[21]));
  // reaction 119:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[10] - g_RT[16] - g_RT[20] + g_RT[23]));
  // reaction 120:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[13] + g_RT[14]));
  // reaction 121:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT[14]));
  // reaction 122:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(g_RT[2] - g_RT[7] + g_RT[14] - g_RT_qss[3]));
  // reaction 123:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[14]));
  // reaction 124:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14]));
  // reaction 125:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[13] + g_RT[14]));
  // reaction 126:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[10] + g_RT[11]));
  // reaction 127:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] + g_RT[11]));
  // reaction 128:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[10] + g_RT[11]));
  // reaction 129:  CH + CH4 <=> C2H4 + H
  k_f = 60000000;
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[2] + g_RT[11] - g_RT[20] + g_RT_qss[1]));
  // reaction 130:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[2]));
  // reaction 131:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[3]));
  // reaction 132:  CH3OH + H <=> CH3O + H2
  k_f = 4.2 * exp((2.1) * tc[0] - (2450.66516246898) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[14] + g_RT[15]));
  // reaction 133:  CH3OH + O <=> CH3O + OH
  k_f = 0.13 * exp((2.5) * tc[0] - (2516.0833290236) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[14] + g_RT[15]));
  // reaction 134:  CH3OH + OH <=> CH3O + H2O
  k_f = 6.3 * exp((2) * tc[0] - (754.82499870708) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[14] + g_RT[15]));
  // reaction 135:  CH3 + CH3OH <=> CH3O + CH4
  k_f = 10 * exp((1.5) * tc[0] - (5001.97365809891) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[14] + g_RT[15]));
  // reaction 136:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[2] - g_RT[16] + g_RT[23] - g_RT_qss[3]));
  // reaction 137:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(-g_RT[2] + g_RT[3] - 2.000000 * g_RT[16] + g_RT[23])) *
             (refCinv);
  // reaction 138:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(-g_RT[4] + g_RT[9] - 2.000000 * g_RT[16] + g_RT[23])) *
             (refCinv);
  // reaction 139:  CH + HCCO <=> C2H2 + CO
  k_f = 50000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[16] - g_RT[18] + g_RT[23] + g_RT_qss[1]));
  // reaction 140:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[16] - g_RT[19] + g_RT[23] + g_RT_qss[2]));
  // reaction 141:  2 HCCO <=> C2H2 + 2 CO
  k_f = 10000000;
  qf[141] *= k_f;
  qr[141] *= k_f *
             exp(-(-2.000000 * g_RT[16] - g_RT[18] + 2.000000 * g_RT[23])) *
             (refCinv);
  // reaction 142:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[3] - g_RT[16] + g_RT[18] - g_RT_qss[2]));
  // reaction 143:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[18] - g_RT[23]));
  // reaction 144:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[18] - g_RT[24]));
  // reaction 145:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(g_RT[4] - g_RT[10] - g_RT[16] + g_RT[18]));
  // reaction 146:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[12] - g_RT[16] + g_RT[18] - g_RT[19]));
  // reaction 147:  C2H2 + CH3 <=> H + aC3H4
  k_f = 5140 * exp((0.86) * tc[0] - (11147.758797572) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[2] + g_RT[10] + g_RT[18] - g_RT[27]));
  // reaction 148:  C2H2 + CH3 <=> aC3H5
  k_f = 2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[10] + g_RT[18] - g_RT[28])) * (refC);
  // reaction 149:  H + H2CC <=> C2H2 + H
  k_f = 100000000;
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(g_RT[2] - g_RT[2] - g_RT[18] + g_RT_qss[4]));
  // reaction 150:  H2CC + OH <=> CH2CO + H
  k_f = 20000000;
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[24] + g_RT_qss[4]));
  // reaction 151:  H2CC + O2 <=> 2 HCO
  k_f = 10000000;
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[9] - 2.000000 * g_RT[12] + g_RT_qss[4]));
  // reaction 152:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[23] + g_RT[24]));
  // reaction 153:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT[16] + g_RT[24]));
  // reaction 154:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[23] + g_RT[24]));
  // reaction 155:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[3] - g_RT[17] + g_RT[24] - g_RT_qss[2]));
  // reaction 156:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[23] + g_RT[24]));
  // reaction 157:  C2H3 + H <=> C2H2 + H2
  k_f = 90000000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[18] + g_RT[19]));
  // reaction 158:  C2H3 + H <=> H2 + H2CC
  k_f = 60000000;
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[19] - g_RT_qss[4]));
  // reaction 159:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[19] - g_RT[24]));
  // reaction 160:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[16] + g_RT[19]));
  // reaction 161:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19]));
  // reaction 162:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[18] + g_RT[19]));
  // reaction 163:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[19] - g_RT[25]));
  // reaction 164:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[9] - g_RT[12] - g_RT[13] + g_RT[19]));
  // reaction 165:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[19] - g_RT[25]));
  // reaction 166:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[19] - g_RT[20]));
  // reaction 167:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(g_RT[12] - g_RT[16] + g_RT[19] - g_RT[20]));
  // reaction 168:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[18] + g_RT[19]));
  // reaction 169:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[2] + g_RT[10] + g_RT[19] - g_RT[28]));
  // reaction 170:  2 C2H3 <=> C2H2 + C2H4
  k_f = 960000;
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20]));
  // reaction 171:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(-g_RT[10] - g_RT[16] + g_RT[25])) * (refCinv);
  // reaction 172:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT[12] + g_RT[25]));
  // reaction 173:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[24] + g_RT[25]));
  // reaction 174:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[24] + g_RT[25]));
  // reaction 175:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25]));
  // reaction 176:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[24] + g_RT[25]));
  // reaction 177:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[13] - g_RT[16] + g_RT[25])) *
             (refCinv);
  // reaction 178:  CH2OCH2 <=> CH3 + HCO
  k_f = 36300000000000 * exp(-(28783.99328403) * invT);
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(-g_RT[10] - g_RT[12] + g_RT[26])) * (refCinv);
  // reaction 179:  CH2OCH2 <=> CH4 + CO
  k_f = 12100000000000 * exp(-(28783.99328403) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[26])) * (refCinv);
  // reaction 180:  CH2OCH2 + H <=> C2H3 + H2O
  k_f = 5000 * exp(-(2516.0833290236) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[19] + g_RT[26]));
  // reaction 181:  CH2OCH2 + H <=> C2H4 + OH
  k_f = 95100 * exp(-(2516.0833290236) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[20] + g_RT[26]));
  // reaction 182:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[19] + g_RT[20]));
  // reaction 183:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[19] + g_RT[20]));
  // reaction 184:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[12] + g_RT[20]));
  // reaction 185:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[3] - g_RT[13] + g_RT[20] - g_RT_qss[2]));
  // reaction 186:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[19] + g_RT[20]));
  // reaction 187:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(g_RT[12] - g_RT[16] + g_RT[20] - g_RT[21]));
  // reaction 188:  C2H4 + CH <=> H + aC3H4
  k_f = 30000000;
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT_qss[1]));
  // reaction 189:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[2]));
  // reaction 190:  C2H4 + CH2* <=> CH4 + H2CC
  k_f = 50000000;
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(-g_RT[11] + g_RT[20] + g_RT_qss[3] - g_RT_qss[4]));
  // reaction 191:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[3]));
  // reaction 192:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[19] + g_RT[20]));
  // reaction 193:  C2H4 + CH3 <=> nC3H7
  k_f = 330000 * exp(-(3874.76832669634) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[10] + g_RT[20] - g_RT[30])) * (refC);
  // reaction 194:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[19] + g_RT[20]));
  // reaction 195:  C2H4 + HO2 <=> CH2OCH2 + OH
  k_f = 2820000 * exp(-(8605.00498526071) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[20] - g_RT[26]));
  // reaction 196:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[20] + g_RT[21]));
  // reaction 197:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[13] + g_RT[21]));
  // reaction 198:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[20] + g_RT[21]));
  // reaction 199:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[21] - g_RT[22]));
  // reaction 200:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[20] + g_RT[21]));
  // reaction 201:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[10] - g_RT[13] + g_RT[21])) *
             (refCinv);
  // reaction 202:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[21] - g_RT[22]));
  // reaction 203:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(-g_RT[10] + g_RT[19] + g_RT[21] - g_RT[28]));
  // reaction 204:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[21] + g_RT[22]));
  // reaction 205:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[21] + g_RT[22]));
  // reaction 206:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22]));
  // reaction 207:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(-g_RT[10] - g_RT[21] + g_RT[22] + g_RT_qss[3]));
  // reaction 208:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22]));
  // reaction 209:  CH3O2 + HO2 <=> CH2O + H2O + O2
  k_f = 18000 * exp(-(-720.103048766554) * invT);
  qf[209] *= k_f;
  qr[209] *=
    k_f * exp(-(g_RT[5] - g_RT[7] - g_RT[9] - g_RT[13] + g_RT[38])) * (refCinv);
  // reaction 210:  2 CH3O2 <=> CH2O + CH3OH + O2
  k_f = 1046 * exp(-(-1806.04461357314) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f *
             exp(-(-g_RT[9] - g_RT[13] - g_RT[15] + 2.000000 * g_RT[38])) *
             (refCinv);
  // reaction 211:  2 CH3O2 <=> 2 CH3O + O2
  k_f = 77410 * exp(-(-30.6962166140879) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f *
             exp(-(-g_RT[9] - 2.000000 * g_RT[14] + 2.000000 * g_RT[38])) *
             (refCinv);
  // reaction 212:  CH3 + CH3O2 <=> 2 CH3O
  k_f = 1000000 * exp(-(-710.038715450459) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(g_RT[10] - 2.000000 * g_RT[14] + g_RT[38]));
  // reaction 213:  CH3O2 + OH <=> CH3OH + O2
  k_f = 60000000;
  qf[213] *= k_f;
  qr[213] *= k_f * exp(-(g_RT[4] - g_RT[9] - g_RT[15] + g_RT[38]));
  // reaction 214:  CH3O2 + H <=> CH3O + OH
  k_f = 96000000;
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[14] + g_RT[38]));
  // reaction 215:  CH3O2 + O <=> CH3O + O2
  k_f = 36000000;
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[14] + g_RT[38]));
  // reaction 216:  H + aC3H4 <=> aC3H5
  k_f = 1.52e+53 * exp((-13.54) * tc[0] - (13561.1859267714) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(g_RT[2] + g_RT[27] - g_RT[28])) * (refC);
  // reaction 217:  O + aC3H4 <=> C2H4 + CO
  k_f = 20 * exp((1.8) * tc[0] - (503.21666580472) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(g_RT[3] - g_RT[16] - g_RT[20] + g_RT[27]));
  // reaction 218:  H + aC3H5 <=> H2 + aC3H4
  k_f = 18000000;
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[27] + g_RT[28]));
  // reaction 219:  OH + aC3H5 <=> H2O + aC3H4
  k_f = 6000000;
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[27] + g_RT[28]));
  // reaction 220:  O2 + aC3H5 <=> HO2 + aC3H4
  k_f = 4990000000 * exp((-1.4) * tc[0] - (11286.1433806683) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[27] + g_RT[28]));
  // reaction 221:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[28] - g_RT[29]));
  // reaction 222:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[19] + g_RT[28])) *
             (refCinv);
  // reaction 223:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(g_RT[12] - g_RT[16] + g_RT[28] - g_RT[29]));
  // reaction 224:  CH3 + aC3H5 <=> CH4 + aC3H4
  k_f = 3000000 * exp((-0.32) * tc[0] - (-65.9213832204183) * invT);
  qf[224] *= k_f;
  qr[224] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[27] + g_RT[28]));
  // reaction 225:  C3H6 + H <=> C2H4 + CH3
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[225] *= k_f;
  qr[225] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT[20] + g_RT[29]));
  // reaction 226:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[226] *= k_f;
  qr[226] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[28] + g_RT[29]));
  // reaction 227:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 80 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[227] *= k_f;
  qr[227] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[10] - g_RT[24] + g_RT[29])) *
             (refCinv);
  // reaction 228:  C3H6 + O <=> C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[228] *= k_f;
  qr[228] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT[21] + g_RT[29]));
  // reaction 229:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[229] *= k_f;
  qr[229] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[28] + g_RT[29]));
  // reaction 230:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[230] *= k_f;
  qr[230] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29]));
  // reaction 231:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[231] *= k_f;
  qr[231] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[28] + g_RT[29]));
  // reaction 232:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[232] *= k_f;
  qr[232] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[28] + g_RT[29]));
  // reaction 233:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[233] *= k_f;
  qr[233] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT[21] + g_RT[30]));
  // reaction 234:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[234] *= k_f;
  qr[234] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[29] + g_RT[30]));
  // reaction 235:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[235] *= k_f;
  qr[235] *= k_f * exp(-(g_RT[3] - g_RT[13] - g_RT[21] + g_RT[30]));
  // reaction 236:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[236] *= k_f;
  qr[236] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[29] + g_RT[30]));
  // reaction 237:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[237] *= k_f;
  qr[237] *= k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[29] + g_RT[30]));
  // reaction 238:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[238] *= k_f;
  qr[238] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[21] + g_RT[30])) *
             (refCinv);
  // reaction 239:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[239] *= k_f;
  qr[239] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[29] + g_RT[30]));
  // reaction 240:  C4H81 + H <=> C2H4 + C2H5
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[240] *= k_f;
  qr[240] *= k_f * exp(-(g_RT[2] - g_RT[20] - g_RT[21] + g_RT[31]));
  // reaction 241:  C4H81 + H <=> C3H6 + CH3
  k_f = 3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[241] *= k_f;
  qr[241] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT[29] + g_RT[31]));
  // reaction 242:  C4H81 + O <=> HCO + nC3H7
  k_f = 330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
  qf[242] *= k_f;
  qr[242] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT[30] + g_RT[31]));
  // reaction 243:  N + NO <=> N2 + O
  k_f = 27000000 * exp(-(178.641916360675) * invT);
  qf[243] *= k_f;
  qr[243] *= k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[32] + g_RT[33]));
  // reaction 244:  N + O2 <=> NO + O
  k_f = 9000 * exp((1) * tc[0] - (3270.90832773068) * invT);
  qf[244] *= k_f;
  qr[244] *= k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[32] - g_RT[33]));
  // reaction 245:  N + OH <=> H + NO
  k_f = 33600000 * exp(-(193.738416334817) * invT);
  qf[245] *= k_f;
  qr[245] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[32] - g_RT[33]));
  // reaction 246:  HO2 + NO <=> NO2 + OH
  k_f = 2110000 * exp(-(-241.543999586265) * invT);
  qf[246] *= k_f;
  qr[246] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[33] - g_RT[34]));
  // reaction 247:  NO2 + O <=> NO + O2
  k_f = 3900000 * exp(-(-120.771999793133) * invT);
  qf[247] *= k_f;
  qr[247] *= k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[33] + g_RT[34]));
  // reaction 248:  H + NO2 <=> NO + OH
  k_f = 132000000 * exp(-(181.157999689699) * invT);
  qf[248] *= k_f;
  qr[248] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[33] + g_RT[34]));
  // reaction 249:  NCO + O <=> CO + NO
  k_f = 2000000000 * exp((-0.5) * tc[0]);
  qf[249] *= k_f;
  qr[249] *= k_f * exp(-(g_RT[3] - g_RT[16] - g_RT[33] + g_RT[37]));
  // reaction 250:  NCO + OH <=> CO + H + NO
  k_f = 8300000 * exp((-0.1) * tc[0] - (37986.8196682667) * invT);
  qf[250] *= k_f;
  qr[250] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] - g_RT[33] + g_RT[37])) *
             (refCinv);
  // reaction 251:  N + NCO <=> CO + N2
  k_f = 20000000;
  qf[251] *= k_f;
  qr[251] *= k_f * exp(-(-g_RT[1] - g_RT[16] + g_RT[32] + g_RT[37]));
  // reaction 252:  NCO + O2 <=> CO2 + NO
  k_f = 2000000 * exp(-(10064.3333160944) * invT);
  qf[252] *= k_f;
  qr[252] *= k_f * exp(-(g_RT[9] - g_RT[17] - g_RT[33] + g_RT[37]));
  // reaction 253:  NCO + NO <=> CO2 + N2
  k_f = 3800000000000 * exp((-2) * tc[0] - (402.573332643776) * invT);
  qf[253] *= k_f;
  qr[253] *= k_f * exp(-(-g_RT[1] - g_RT[17] + g_RT[33] + g_RT[37]));
  // reaction 254:  C + NO <=> CO + N
  k_f = 29000000;
  qf[254] *= k_f;
  qr[254] *= k_f * exp(-(-g_RT[16] - g_RT[32] + g_RT[33] + g_RT_qss[0]));
  // reaction 255:  CH + NO <=> H + NCO
  k_f = 16200000;
  qf[255] *= k_f;
  qr[255] *= k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[37] + g_RT_qss[1]));
  // reaction 256:  CH + NO <=> HCO + N
  k_f = 24600000;
  qf[256] *= k_f;
  qr[256] *= k_f * exp(-(-g_RT[12] - g_RT[32] + g_RT[33] + g_RT_qss[1]));
  // reaction 257:  CH2 + NO <=> H + HNCO
  k_f = 310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
  qf[257] *= k_f;
  qr[257] *= k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[2]));
  // reaction 258:  CH2 + NO <=> H + HCNO
  k_f = 38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
  qf[258] *= k_f;
  qr[258] *= k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[2]));
  // reaction 259:  CH2* + NO <=> H + HNCO
  k_f = 310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
  qf[259] *= k_f;
  qr[259] *= k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[3]));
  // reaction 260:  CH2* + NO <=> H + HCNO
  k_f = 38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
  qf[260] *= k_f;
  qr[260] *= k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[3]));
  // reaction 261:  HNCO + O <=> NCO + OH
  k_f = 2.2 * exp((2.11) * tc[0] - (24065.3306087791) * invT);
  qf[261] *= k_f;
  qr[261] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[36] - g_RT[37]));
  // reaction 262:  H + HNCO <=> H2 + NCO
  k_f = 90 * exp((1.7) * tc[0] - (29266.0748498709) * invT);
  qf[262] *= k_f;
  qr[262] *= k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[36] - g_RT[37]));
  // reaction 263:  HNCO + OH <=> H2O + NCO
  k_f = 33 * exp((1.5) * tc[0] - (1811.57999689699) * invT);
  qf[263] *= k_f;
  qr[263] *= k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[36] - g_RT[37]));
  // reaction 264:  H + HCNO <=> H + HNCO
  k_f = 2100000000 * exp((-0.69) * tc[0] - (1434.16749754345) * invT);
  qf[264] *= k_f;
  qr[264] *= k_f * exp(-(g_RT[2] - g_RT[2] + g_RT[35] - g_RT[36]));
  // reaction 265:  HCCO + NO <=> CO + HCNO
  k_f = 55000 * exp(-(920.886498422637) * invT);
  qf[265] *= k_f;
  qr[265] *= k_f * exp(-(-g_RT[16] + g_RT[23] + g_RT[33] - g_RT[35]));
  // reaction 266:  CO2 + N <=> CO + NO
  k_f = 3000000 * exp(-(5686.34832359333) * invT);
  qf[266] *= k_f;
  qr[266] *= k_f * exp(-(-g_RT[16] + g_RT[17] + g_RT[32] - g_RT[33]));
  // reaction 267:  CH3 + NO2 <=> CH3O + NO
  k_f = 15100000 * exp((-0.05) * tc[0]);
  qf[267] *= k_f;
  qr[267] *= k_f * exp(-(g_RT[10] - g_RT[14] - g_RT[33] + g_RT[34]));
  // reaction 268:  CH3O2 + NO <=> CH3O + NO2
  k_f = 1690000 * exp(-(-286.83349950869) * invT);
  qf[268] *= k_f;
  qr[268] *= k_f * exp(-(-g_RT[14] + g_RT[33] - g_RT[34] + g_RT[38]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 39; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 39; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[39];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[5];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[5];
  amrex::Real kf_qss[70], qf_qss[70], qr_qss[70];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (-0.6) * sc[0] + (10.89) * sc[7] +
                       (-0.15) * sc[9] + (0.0900000000000001) * sc[16] +
                       (1.18) * sc[17];
    const amrex::Real redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[9])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 1:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                       (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * tc[0] - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[6] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[6] - g_RT[13] + g_RT[16])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 3:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[16] - g_RT[23] + g_RT_qss[1])) * (refC) *
                           (sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 4:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 5:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] - g_RT[10] + g_RT_qss[2])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 6:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[16] * sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[16] - g_RT[24] + g_RT_qss[2])) * (refC) *
                           (sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 7:  CH2* + H2O (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 20000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - 1559.97166399463 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.8493 * exp(-tc[1] * 0.00746268656716418) +
      0.1507 * exp(-tc[1] * 0.000419639110365086) + exp(-7265 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[7] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[7] - g_RT[15] + g_RT_qss[3])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 8:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[13] - g_RT[14])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 9:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 10:  CH3 + OH (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 63000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - 1559.97166399463 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.7895 * exp(-tc[1] * 0.0119760479041916) +
      0.2105 * exp(-tc[1] * 0.000185253797702853) + exp(-8370 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[4] + g_RT[10] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 11:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[10] * sc[10]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[10] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= 2.000000 * qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 12:  CH3O + H (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 8.6e+16 * exp(-4 * tc[0] - 1522.23041405928 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1098 * exp(-tc[1] * 0.00694444444444444) +
      0.8902 * exp(-tc[1] * 0.000352360817477097) + exp(-45569 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 13:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT[19])) *
                           (refCinv) * (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 14:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[24] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 15:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 16:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[10] + g_RT[19] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 17:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[6] + g_RT[20] - g_RT_qss[4])) *
                           (refCinv) * (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 18:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1367 * exp((1.463) * tc[0] - (681.858582165395) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.027e+27 * exp(-6.642 * tc[0] - 2903.05694502743 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      1.569 * exp(-tc[1] * 0.00334448160535117) +
      -0.569 * exp(-tc[1] * 0.000109325461900077) + exp(152.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[20] - g_RT[21])) * (refC) * (sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 19:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[21] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 20:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[21] - g_RT[31])) * (refC) * (sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 21:  CH3 + O2 (+M) <=> CH3O2 (+M)
    const amrex::Real k_f = 783 * exp((1.2) * tc[0]);
    amrex::Real Corr = mixture;
    const amrex::Real redP = Corr / k_f * 58000000000000 * exp(-3.3 * tc[0]);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.336 * exp(-tc[1] * 1e-05) + 0.664 * exp(-tc[1] * 0.1) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] + g_RT[10] - g_RT[38])) * (refC) * (sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 22:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[28] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 23:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-tc[1] * 0.00062266500622665) +
      0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[10] + g_RT[28] - g_RT[31])) * (refC) * (sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[28] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 24:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[29] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 25:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] +
                       (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 26:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (1.5) * sc[18] + (1.5) * sc[20] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[18] - g_RT_qss[4])) * (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[18] -= qdot;
  }

  {
    // reaction 27:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (-0.37) * sc[0] + (-1) * sc[6] + (-1) * sc[7] + (-1) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 28:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * ((sc[6] * sc[6]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.62) * sc[0] + sc[6] + (5.3) * sc[7] +
                             (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 32:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] +
                             (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 33:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-0.17) * sc[0] + (1.4) * sc[6] +
                             (14.4) * sc[7] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 34:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[6] + (-1) * sc[7] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) *
                           (refCinv) * (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 35:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr = k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) *
                           (refCinv) * (sc[2] * sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 36:  NO + O + M <=> NO2 + M
    const amrex::Real k_f = 106000000 * exp((-1.41) * tc[0]);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                             sc[11] + (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[33]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[33] - g_RT[34])) * (refC) * (sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 37:  NCO + M <=> CO + N + M
    const amrex::Real k_f = 310000000 * exp(-(27198.8607867451) * invT);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                             sc[11] + (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real qf = Corr * k_f * (sc[37]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[16] - g_RT[32] + g_RT[37])) * (refCinv) *
                           (sc[16] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[32] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 38:  H + O2 <=> O + OH
    const amrex::Real k_f =
      26440000000 * exp((-0.6707) * tc[0] - (8575.31520197823) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[9])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 39:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[4] + g_RT[6])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      173.4 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[6] - g_RT[7])) * (sc[2] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 41:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[4] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 42:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[5] + g_RT[6] + g_RT[9])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 43:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[5] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 44:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - 2.000000 * g_RT[4] + g_RT[5])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 45:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[5] - g_RT[9])) * (sc[4] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 46:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[5] * sc[5]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9])) * (sc[8] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= 2.000000 * qdot;
    wdot[8] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 47:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[5] * sc[5]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9])) * (sc[8] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= 2.000000 * qdot;
    wdot[8] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 48:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1410000000000 * exp((-1.76) * tc[0] - (30.1929999482832) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 49:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1.12e+79 * exp((-22.3) * tc[0] - (13536.528310147) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 50:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      5.37e+64 * exp((-16.72) * tc[0] - (16555.8283049753) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 51:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      2510000 * exp((2) * tc[0] - (20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 52:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1e+130 * exp((-40) * tc[0] - (17511.9399700042) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 53:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[6] + g_RT[8])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 54:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[7] + g_RT[8])) * (sc[4] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 55:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[8])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 56:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 2000000 * exp(-(214.873516298615) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 57:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 58:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 59:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 60:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[16] - g_RT[17])) * (sc[3] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 61:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[16] - g_RT[17])) * (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 62:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[16])) * (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 63:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[12] - g_RT[16])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 64:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 65:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[12] - g_RT[16])) * (sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 66:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] + g_RT[12] - g_RT[16])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 67:  C + OH <=> CO + H
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[16] + g_RT_qss[0])) *
                           (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 68:  C + O2 <=> CO + O
    const amrex::Real k_f = 58000000 * exp(-(289.852799503519) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[9] - g_RT[16] + g_RT_qss[0])) *
                           (sc[3] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 69:  CH + H <=> C + H2
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 70:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[16] + g_RT_qss[1])) *
                           (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 71:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[6] + g_RT_qss[1] - g_RT_qss[2])) *
      (sc[2] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 73:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[7] - g_RT[13] + g_RT_qss[1])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[9] - g_RT[12] + g_RT_qss[1])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 75:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[16] + g_RT[17] + g_RT_qss[1])) *
      (sc[12] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 76:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[2])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 77:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[2])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 78:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[7] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 79:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[2])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 80:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[9] - g_RT[12] + g_RT_qss[2])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 81:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[2] + g_RT[9] - g_RT[17] + g_RT_qss[2])) *
      (refCinv) * ((sc[2] * sc[2]) * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[9] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 82:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] - g_RT[13] + g_RT_qss[2])) *
                           (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 83:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT_qss[1] + g_RT_qss[2])) *
      (sc[2] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[2] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 84:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] - g_RT[18] + 2.000000 * g_RT_qss[2])) *
      (sc[6] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[6] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 85:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[1] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 86:  AR + CH2* <=> AR + CH2
    const amrex::Real k_f = 9000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[0] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[0] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
  }

  {
    // reaction 87:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) *
      (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 88:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[16] + g_RT_qss[3])) *
                           (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 89:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[3])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 90:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[3])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 91:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 92:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[4] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
      (refCinv) * (sc[2] * sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 93:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
                           (sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 94:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[7] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[7] - g_RT[7] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 95:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[16] - g_RT[16] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[16] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 96:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[17] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[17] - g_RT[17] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[17] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 97:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[17] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[13] - g_RT[16] + g_RT[17] + g_RT_qss[3])) *
      (sc[13] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 98:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[13])) * (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 99:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[12] + g_RT[13])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 100:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[12] + g_RT[13])) * (sc[7] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 101:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[12] + g_RT[13])) * (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 102:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[12] + g_RT[13])) * (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 103:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[13] - g_RT[24] + g_RT_qss[1])) *
      (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[13] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 104:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[13])) * (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 105:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[2])) *
                           (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 107:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[10] - g_RT[14])) * (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 108:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] + g_RT[10] - g_RT[13])) * (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 109:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[10] - g_RT[11])) * (sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 110:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[14])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 111:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[10] - g_RT[11])) * (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 112:  C + CH3 <=> C2H2 + H
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[18] + g_RT_qss[0])) *
      (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 113:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[19] + g_RT_qss[1])) *
      (sc[2] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 114:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] + g_RT[12] - g_RT[16])) *
                           (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 115:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[12] + g_RT[13])) *
                           (sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 116:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[2])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 117:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[3])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 118:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + 2.000000 * g_RT[10] - g_RT[21])) *
                           (sc[2] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 119:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[10] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[16] - g_RT[20] + g_RT[23])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
    wdot[20] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 120:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[13] + g_RT[14])) * (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 121:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT[14])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 122:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[7] + g_RT[14] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 123:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[14])) * (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 124:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14])) * (sc[7] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 125:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[13] + g_RT[14])) * (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 126:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[10] + g_RT[11])) * (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 127:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] + g_RT[11])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 128:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[10] + g_RT[11])) * (sc[7] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 129:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[11] - g_RT[20] + g_RT_qss[1])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 130:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[2])) *
      ((sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 131:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[3])) *
      ((sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 132:  CH3OH + H <=> CH3O + H2
    const amrex::Real k_f =
      4.2 * exp((2.1) * tc[0] - (2450.66516246898) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[14] + g_RT[15])) * (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 133:  CH3OH + O <=> CH3O + OH
    const amrex::Real k_f =
      0.13 * exp((2.5) * tc[0] - (2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[14] + g_RT[15])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 134:  CH3OH + OH <=> CH3O + H2O
    const amrex::Real k_f = 6.3 * exp((2) * tc[0] - (754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[14] + g_RT[15])) * (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 135:  CH3 + CH3OH <=> CH3O + CH4
    const amrex::Real k_f = 10 * exp((1.5) * tc[0] - (5001.97365809891) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[14] + g_RT[15])) *
                           (sc[11] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 136:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[16] + g_RT[23] - g_RT_qss[3])) *
                           (sc[16] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[16] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 137:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[3] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - 2.000000 * g_RT[16] + g_RT[23])) *
      (refCinv) * (sc[2] * (sc[16] * sc[16]));
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[16] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 138:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] - 2.000000 * g_RT[16] + g_RT[23])) *
      (refCinv) * (sc[4] * (sc[16] * sc[16]));
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[16] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 139:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[23] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[18] + g_RT[23] + g_RT_qss[1])) *
      (sc[16] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 140:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[23] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[19] + g_RT[23] + g_RT_qss[2])) *
      (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 141:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[23] * sc[23]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[16] - g_RT[18] + 2.000000 * g_RT[23])) *
      (refCinv) * ((sc[16] * sc[16]) * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += 2.000000 * qdot;
    wdot[18] += qdot;
    wdot[23] -= 2.000000 * qdot;
  }

  {
    // reaction 142:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] + g_RT[18] - g_RT_qss[2])) *
                           (sc[16] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 143:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[18] - g_RT[23])) * (sc[2] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 144:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[18] - g_RT[24])) * (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 145:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[10] - g_RT[16] + g_RT[18])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 146:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[18] - g_RT[19])) *
                           (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 147:  C2H2 + CH3 <=> H + aC3H4
    const amrex::Real k_f =
      5140 * exp((0.86) * tc[0] - (11147.758797572) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[10] + g_RT[18] - g_RT[27])) *
                           (sc[2] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[18] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 148:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[18] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[18] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 149:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[18] + g_RT_qss[4])) *
                           (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 150:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[24] + g_RT_qss[4])) *
                           (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 151:  H2CC + O2 <=> 2 HCO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - 2.000000 * g_RT[12] + g_RT_qss[4])) *
                           ((sc[12] * sc[12]));
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[12] += 2.000000 * qdot;
  }

  {
    // reaction 152:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[23] + g_RT[24])) * (sc[6] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 153:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[16] + g_RT[24])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 154:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[23] + g_RT[24])) * (sc[4] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 155:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[17] + g_RT[24] - g_RT_qss[2])) *
                           (sc[17] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[17] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 156:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[23] + g_RT[24])) * (sc[7] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 157:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[18] + g_RT[19])) * (sc[6] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 158:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[6] + g_RT[19] - g_RT_qss[4])) *
                           (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 159:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[19] - g_RT[24])) * (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[19] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 160:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[16] + g_RT[19])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 161:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19])) * (sc[7] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 162:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[18] + g_RT[19])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 163:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[19] - g_RT[25])) * (sc[3] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 164:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[12] - g_RT[13] + g_RT[19])) *
                           (sc[12] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[12] += qdot;
    wdot[13] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 165:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[19] - g_RT[25])) * (sc[4] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 166:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[19] - g_RT[20])) * (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 167:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc[12] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[19] - g_RT[20])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 168:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[10] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[18] + g_RT[19])) *
                           (sc[11] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 169:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[10] + g_RT[19] - g_RT[28])) *
                           (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[19] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 170:  2 C2H3 <=> C2H2 + C2H4
    const amrex::Real k_f = 960000;
    const amrex::Real qf = k_f * ((sc[19] * sc[19]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20])) *
                           (sc[18] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[19] -= 2.000000 * qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 171:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = k_f * exp(-(-g_RT[10] - g_RT[16] + g_RT[25])) *
                           (refCinv) * (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 172:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[12] + g_RT[25])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 173:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[24] + g_RT[25])) * (sc[6] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 174:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[24] + g_RT[25])) * (sc[4] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 175:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25])) * (sc[7] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 176:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[24] + g_RT[25])) * (sc[5] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 177:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[13] - g_RT[16] + g_RT[25])) *
      (refCinv) * (sc[4] * sc[13] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 178:  CH2OCH2 <=> CH3 + HCO
    const amrex::Real k_f = 36300000000000 * exp(-(28783.99328403) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = k_f * exp(-(-g_RT[10] - g_RT[12] + g_RT[26])) *
                           (refCinv) * (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 179:  CH2OCH2 <=> CH4 + CO
    const amrex::Real k_f = 12100000000000 * exp(-(28783.99328403) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[26])) *
                           (refCinv) * (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 180:  CH2OCH2 + H <=> C2H3 + H2O
    const amrex::Real k_f = 5000 * exp(-(2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[19] + g_RT[26])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 181:  CH2OCH2 + H <=> C2H4 + OH
    const amrex::Real k_f = 95100 * exp(-(2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[20] + g_RT[26])) * (sc[4] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 182:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[19] + g_RT[20])) * (sc[6] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 183:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 184:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[12] + g_RT[20])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 185:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[13] + g_RT[20] - g_RT_qss[2])) *
                           (sc[13] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 186:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 187:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[20] - g_RT[21])) *
                           (sc[16] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 188:  C2H4 + CH <=> H + aC3H4
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT_qss[1])) *
      (sc[2] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 189:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[2])) *
      (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 190:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[11] + g_RT[20] + g_RT_qss[3] - g_RT_qss[4])) *
      (sc[11] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[3])) *
      (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 192:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[19] + g_RT[20])) *
                           (sc[11] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[20] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 194:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C2H4 + HO2 <=> CH2OCH2 + OH
    const amrex::Real k_f = 2820000 * exp(-(8605.00498526071) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[20] - g_RT[26])) * (sc[4] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 196:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[20] + g_RT[21])) * (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 197:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[13] + g_RT[21])) *
                           (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 198:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[9] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[20] + g_RT[21])) * (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 199:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[21] - g_RT[22])) * (sc[9] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 200:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[20] + g_RT[21])) * (sc[8] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 201:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[10] - g_RT[13] + g_RT[21])) *
      (refCinv) * (sc[4] * sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 202:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[21] - g_RT[22])) * (sc[5] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 203:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[19] + g_RT[21] - g_RT[28])) *
                           (sc[10] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 204:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[21] + g_RT[22])) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 205:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[21] + g_RT[22])) * (sc[4] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 206:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22])) * (sc[7] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 207:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[21] + g_RT[22] + g_RT_qss[3])) *
      (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 208:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22])) *
                           (sc[11] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 209:  CH3O2 + HO2 <=> CH2O + H2O + O2
    const amrex::Real k_f = 18000 * exp(-(-720.103048766554) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[7] - g_RT[9] - g_RT[13] + g_RT[38])) *
      (refCinv) * (sc[7] * sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 210:  2 CH3O2 <=> CH2O + CH3OH + O2
    const amrex::Real k_f = 1046 * exp(-(-1806.04461357314) * invT);
    const amrex::Real qf = k_f * ((sc[38] * sc[38]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - g_RT[13] - g_RT[15] + 2.000000 * g_RT[38])) *
      (refCinv) * (sc[9] * sc[13] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[15] += qdot;
    wdot[38] -= 2.000000 * qdot;
  }

  {
    // reaction 211:  2 CH3O2 <=> 2 CH3O + O2
    const amrex::Real k_f = 77410 * exp(-(-30.6962166140879) * invT);
    const amrex::Real qf = k_f * ((sc[38] * sc[38]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - 2.000000 * g_RT[14] + 2.000000 * g_RT[38])) *
      (refCinv) * (sc[9] * (sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= 2.000000 * qdot;
  }

  {
    // reaction 212:  CH3 + CH3O2 <=> 2 CH3O
    const amrex::Real k_f = 1000000 * exp(-(-710.038715450459) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - 2.000000 * g_RT[14] + g_RT[38])) *
                           ((sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 213:  CH3O2 + OH <=> CH3OH + O2
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[4] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[9] - g_RT[15] + g_RT[38])) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[15] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 214:  CH3O2 + H <=> CH3O + OH
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[14] + g_RT[38])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 215:  CH3O2 + O <=> CH3O + O2
    const amrex::Real k_f = 36000000;
    const amrex::Real qf = k_f * (sc[3] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[14] + g_RT[38])) * (sc[9] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[14] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 216:  H + aC3H4 <=> aC3H5
    const amrex::Real k_f =
      1.52e+53 * exp((-13.54) * tc[0] - (13561.1859267714) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] + g_RT[27] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 217:  O + aC3H4 <=> C2H4 + CO
    const amrex::Real k_f = 20 * exp((1.8) * tc[0] - (503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] - g_RT[20] + g_RT[27])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[20] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 218:  H + aC3H5 <=> H2 + aC3H4
    const amrex::Real k_f = 18000000;
    const amrex::Real qf = k_f * (sc[2] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[27] + g_RT[28])) * (sc[6] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 219:  OH + aC3H5 <=> H2O + aC3H4
    const amrex::Real k_f = 6000000;
    const amrex::Real qf = k_f * (sc[4] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[27] + g_RT[28])) * (sc[7] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 220:  O2 + aC3H5 <=> HO2 + aC3H4
    const amrex::Real k_f =
      4990000000 * exp((-1.4) * tc[0] - (11286.1433806683) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[27] + g_RT[28])) * (sc[5] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 221:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[28] - g_RT[29])) * (sc[9] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 222:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[19] + g_RT[28])) *
      (refCinv) * (sc[4] * sc[13] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[19] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 223:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[12] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[28] - g_RT[29])) *
                           (sc[16] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 224:  CH3 + aC3H5 <=> CH4 + aC3H4
    const amrex::Real k_f =
      3000000 * exp((-0.32) * tc[0] - (-65.9213832204183) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[27] + g_RT[28])) *
                           (sc[11] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 225:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[20] + g_RT[29])) *
                           (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[20] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 226:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[28] + g_RT[29])) * (sc[6] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 227:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      80 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[10] - g_RT[24] + g_RT[29])) *
      (refCinv) * (sc[2] * sc[10] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[24] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 228:  C3H6 + O <=> C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[12] - g_RT[21] + g_RT[29])) *
                           (sc[12] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[21] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 229:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[28] + g_RT[29])) * (sc[4] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 230:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29])) * (sc[7] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 231:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[28] + g_RT[29])) * (sc[8] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 232:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[28] + g_RT[29])) *
                           (sc[11] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 233:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[21] + g_RT[30])) *
                           (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 234:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[29] + g_RT[30])) * (sc[6] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 235:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[3] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[13] - g_RT[21] + g_RT[30])) *
                           (sc[13] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 236:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[29] + g_RT[30])) * (sc[7] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 237:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[9] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[29] + g_RT[30])) * (sc[5] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 238:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[5] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[21] + g_RT[30])) *
      (refCinv) * (sc[4] * sc[13] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 239:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[10] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[29] + g_RT[30])) *
                           (sc[11] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 240:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[20] - g_RT[21] + g_RT[31])) *
                           (sc[20] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[21] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 241:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[29] + g_RT[31])) *
                           (sc[10] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 242:  C4H81 + O <=> HCO + nC3H7
    const amrex::Real k_f =
      330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[12] - g_RT[30] + g_RT[31])) *
                           (sc[12] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 243:  N + NO <=> N2 + O
    const amrex::Real k_f = 27000000 * exp(-(178.641916360675) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[32] + g_RT[33])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[32] -= qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 244:  N + O2 <=> NO + O
    const amrex::Real k_f = 9000 * exp((1) * tc[0] - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[32] - g_RT[33])) * (sc[3] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 245:  N + OH <=> H + NO
    const amrex::Real k_f = 33600000 * exp(-(193.738416334817) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[32] - g_RT[33])) * (sc[2] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 246:  HO2 + NO <=> NO2 + OH
    const amrex::Real k_f = 2110000 * exp(-(-241.543999586265) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[33] - g_RT[34])) * (sc[4] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 247:  NO2 + O <=> NO + O2
    const amrex::Real k_f = 3900000 * exp(-(-120.771999793133) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[34]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[33] + g_RT[34])) * (sc[9] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 248:  H + NO2 <=> NO + OH
    const amrex::Real k_f = 132000000 * exp(-(181.157999689699) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[34]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[33] + g_RT[34])) * (sc[4] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 249:  NCO + O <=> CO + NO
    const amrex::Real k_f = 2000000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] - g_RT[33] + g_RT[37])) *
                           (sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 250:  NCO + OH <=> CO + H + NO
    const amrex::Real k_f =
      8300000 * exp((-0.1) * tc[0] - (37986.8196682667) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[37]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] - g_RT[33] + g_RT[37])) *
      (refCinv) * (sc[2] * sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 251:  N + NCO <=> CO + N2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[32] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] - g_RT[16] + g_RT[32] + g_RT[37])) *
                           (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[16] += qdot;
    wdot[32] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 252:  NCO + O2 <=> CO2 + NO
    const amrex::Real k_f = 2000000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[17] - g_RT[33] + g_RT[37])) *
                           (sc[17] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[17] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 253:  NCO + NO <=> CO2 + N2
    const amrex::Real k_f =
      3800000000000 * exp((-2) * tc[0] - (402.573332643776) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] - g_RT[17] + g_RT[33] + g_RT[37])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[17] += qdot;
    wdot[33] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 254:  C + NO <=> CO + N
    const amrex::Real k_f = 29000000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[32] + g_RT[33] + g_RT_qss[0])) *
      (sc[16] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[32] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 255:  CH + NO <=> H + NCO
    const amrex::Real k_f = 16200000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[37] + g_RT_qss[1])) *
      (sc[2] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 256:  CH + NO <=> HCO + N
    const amrex::Real k_f = 24600000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[32] + g_RT[33] + g_RT_qss[1])) *
      (sc[12] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[32] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 257:  CH2 + NO <=> H + HNCO
    const amrex::Real k_f =
      310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[2])) *
      (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 258:  CH2 + NO <=> H + HCNO
    const amrex::Real k_f =
      38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[2])) *
      (sc[2] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 259:  CH2* + NO <=> H + HNCO
    const amrex::Real k_f =
      310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[3])) *
      (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 260:  CH2* + NO <=> H + HCNO
    const amrex::Real k_f =
      38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[3])) *
      (sc[2] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 261:  HNCO + O <=> NCO + OH
    const amrex::Real k_f =
      2.2 * exp((2.11) * tc[0] - (24065.3306087791) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[36] - g_RT[37])) * (sc[4] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 262:  H + HNCO <=> H2 + NCO
    const amrex::Real k_f = 90 * exp((1.7) * tc[0] - (29266.0748498709) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[36] - g_RT[37])) * (sc[6] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 263:  HNCO + OH <=> H2O + NCO
    const amrex::Real k_f = 33 * exp((1.5) * tc[0] - (1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[36] - g_RT[37])) * (sc[7] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 264:  H + HCNO <=> H + HNCO
    const amrex::Real k_f =
      2100000000 * exp((-0.69) * tc[0] - (1434.16749754345) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[2] + g_RT[35] - g_RT[36])) * (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 265:  HCCO + NO <=> CO + HCNO
    const amrex::Real k_f = 55000 * exp(-(920.886498422637) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[33]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[16] + g_RT[23] + g_RT[33] - g_RT[35])) *
                           (sc[16] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[23] -= qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 266:  CO2 + N <=> CO + NO
    const amrex::Real k_f = 3000000 * exp(-(5686.34832359333) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[16] + g_RT[17] + g_RT[32] - g_RT[33])) *
                           (sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 267:  CH3 + NO2 <=> CH3O + NO
    const amrex::Real k_f = 15100000 * exp((-0.05) * tc[0]);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[14] - g_RT[33] + g_RT[34])) *
                           (sc[14] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 268:  CH3O2 + NO <=> CH3O + NO2
    const amrex::Real k_f = 1690000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[14] + g_RT[33] - g_RT[34] + g_RT[38])) *
                           (sc[14] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
    wdot[38] -= qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 39; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 39; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (-0.6) * sc[0] + (10.89) * sc[7] +
                       (-0.15) * sc[9] + (0.0900000000000001) * sc[16] +
                       (1.18) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 63280000 * exp(-1.4 * tc[0] - 0 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[9])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 1:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                       (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * tc[0] - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[6] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[6] - g_RT[13] + g_RT[16])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 3:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[16] - g_RT[23] + g_RT_qss[1])) * (refC) *
                           (sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 4:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 5:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] - g_RT[10] + g_RT_qss[2])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 6:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[16] * sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[16] - g_RT[24] + g_RT_qss[2])) * (refC) *
                           (sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 7:  CH2* + H2O (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 20000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - 1559.97166399463 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.8493 * exp(-tc[1] * 0.00746268656716418) +
      0.1507 * exp(-tc[1] * 0.000419639110365086) + exp(-7265 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[7] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[7] - g_RT[15] + g_RT_qss[3])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 8:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[13] - g_RT[14])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 9:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 10:  CH3 + OH (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 63000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.7e+26 * exp(-6.3 * tc[0] - 1559.97166399463 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.7895 * exp(-tc[1] * 0.0119760479041916) +
      0.2105 * exp(-tc[1] * 0.000185253797702853) + exp(-8370 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[4] + g_RT[10] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 11:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[10] * sc[10]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[10] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= 2.000000 * qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 12:  CH3O + H (+M) <=> CH3OH (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 8.6e+16 * exp(-4 * tc[0] - 1522.23041405928 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1098 * exp(-tc[1] * 0.00694444444444444) +
      0.8902 * exp(-tc[1] * 0.000352360817477097) + exp(-45569 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 13:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT[19])) *
                           (refCinv) * (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 14:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[24] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 15:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 16:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[18] + (2) * sc[20] +
                       (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[10] + g_RT[19] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 17:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[6] + g_RT[20] - g_RT_qss[4])) *
                           (refCinv) * (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 18:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1367 * exp((1.463) * tc[0] - (681.858582165395) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2.027e+27 * exp(-6.642 * tc[0] - 2903.05694502743 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      1.569 * exp(-tc[1] * 0.00334448160535117) +
      -0.569 * exp(-tc[1] * 0.000109325461900077) + exp(152.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[20] - g_RT[21])) * (refC) * (sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 19:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[21] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 20:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[21] - g_RT[31])) * (refC) * (sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 21:  CH3 + O2 (+M) <=> CH3O2 (+M)
    const amrex::Real k_f = 783 * exp((1.2) * tc[0]);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 58000000000000 * exp(-3.3 * tc[0] - 0 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.336 * exp(-tc[1] * 1e-05) + 0.664 * exp(-tc[1] * 0.1) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] + g_RT[10] - g_RT[38])) * (refC) * (sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 22:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[28] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 23:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-tc[1] * 0.00062266500622665) +
      0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[10] + g_RT[28] - g_RT[31])) * (refC) * (sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[28] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 24:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] + sc[11] +
                       (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[29] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 25:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] +
                       (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 26:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[6] + (5) * sc[7] + sc[11] + (0.5) * sc[16] +
                       sc[17] + (1.5) * sc[18] + (1.5) * sc[20] + (2) * sc[22];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[18] - g_RT_qss[4])) * (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[18] -= qdot;
  }

  {
    // reaction 27:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (-0.37) * sc[0] + (-1) * sc[6] + (-1) * sc[7] + (-1) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 28:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * ((sc[6] * sc[6]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[2] - g_RT[6])) * (refC) * (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.62) * sc[0] + sc[6] + (5.3) * sc[7] +
                             (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 32:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (11) * sc[7] +
                             (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 33:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-0.17) * sc[0] + (1.4) * sc[6] +
                             (14.4) * sc[7] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 34:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[6] + (-1) * sc[7] + (0.75) * sc[16] + (2.6) * sc[17];
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) *
                           (refCinv) * (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 35:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr = k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16])) *
                           (refCinv) * (sc[2] * sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 36:  NO + O + M <=> NO2 + M
    const amrex::Real k_f = 106000000 * exp((-1.41) * tc[0]);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                             sc[11] + (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[33]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[33] - g_RT[34])) * (refC) * (sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 37:  NCO + M <=> CO + N + M
    const amrex::Real k_f = 310000000 * exp(-(27198.8607867451) * invT);
    const amrex::Real Corr = mixture + (-0.3) * sc[0] + sc[6] + (5) * sc[7] +
                             sc[11] + (0.5) * sc[16] + sc[17] + (2) * sc[22];
    const amrex::Real qf = Corr * k_f * (sc[37]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[16] - g_RT[32] + g_RT[37])) * (refCinv) *
                           (sc[16] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[32] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 38:  H + O2 <=> O + OH
    const amrex::Real k_f =
      26440000000 * exp((-0.6707) * tc[0] - (8575.31520197823) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[9])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 39:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[4] + g_RT[6])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      173.4 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[6] - g_RT[7])) * (sc[2] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 41:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[4] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 42:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[5] + g_RT[6] + g_RT[9])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 43:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[5] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 44:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - 2.000000 * g_RT[4] + g_RT[5])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 45:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[5] - g_RT[9])) * (sc[4] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 46:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[5] * sc[5]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9])) * (sc[8] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= 2.000000 * qdot;
    wdot[8] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 47:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[5] * sc[5]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[5] - g_RT[8] - g_RT[9])) * (sc[8] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= 2.000000 * qdot;
    wdot[8] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 48:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1410000000000 * exp((-1.76) * tc[0] - (30.1929999482832) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 49:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1.12e+79 * exp((-22.3) * tc[0] - (13536.528310147) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 50:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      5.37e+64 * exp((-16.72) * tc[0] - (16555.8283049753) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 51:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      2510000 * exp((2) * tc[0] - (20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 52:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1e+130 * exp((-40) * tc[0] - (17511.9399700042) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[7] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 53:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[6] + g_RT[8])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 54:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[7] + g_RT[8])) * (sc[4] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 55:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[8])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 56:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 2000000 * exp(-(214.873516298615) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 57:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[8])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 58:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 59:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[16] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 60:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[16] - g_RT[17])) * (sc[3] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 61:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[16] - g_RT[17])) * (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 62:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[16])) * (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 63:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[12] - g_RT[16])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 64:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[17])) * (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 65:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[12] - g_RT[16])) * (sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 66:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] + g_RT[12] - g_RT[16])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 67:  C + OH <=> CO + H
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[16] + g_RT_qss[0])) *
                           (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 68:  C + O2 <=> CO + O
    const amrex::Real k_f = 58000000 * exp(-(289.852799503519) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[9] - g_RT[16] + g_RT_qss[0])) *
                           (sc[3] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 69:  CH + H <=> C + H2
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 70:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[16] + g_RT_qss[1])) *
                           (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 71:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[6] + g_RT_qss[1] - g_RT_qss[2])) *
      (sc[2] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 73:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[7] - g_RT[13] + g_RT_qss[1])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[9] - g_RT[12] + g_RT_qss[1])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 75:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[16] + g_RT[17] + g_RT_qss[1])) *
      (sc[12] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 76:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[2])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 77:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[2])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 78:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[7] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 79:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[2])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 80:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[9] - g_RT[12] + g_RT_qss[2])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 81:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[2] + g_RT[9] - g_RT[17] + g_RT_qss[2])) *
      (refCinv) * ((sc[2] * sc[2]) * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[9] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 82:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] - g_RT[13] + g_RT_qss[2])) *
                           (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 83:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[18] + g_RT_qss[1] + g_RT_qss[2])) *
      (sc[2] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[2] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 84:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] - g_RT[18] + 2.000000 * g_RT_qss[2])) *
      (sc[6] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[6] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 85:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[1] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 86:  AR + CH2* <=> AR + CH2
    const amrex::Real k_f = 9000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[0] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[0] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
  }

  {
    // reaction 87:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) *
      (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 88:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[16] + g_RT_qss[3])) *
                           (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 89:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] - g_RT[12] + g_RT_qss[3])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 90:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT_qss[3])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 91:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 92:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[4] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
      (refCinv) * (sc[2] * sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 93:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[9] - g_RT[16] + g_RT_qss[3])) *
                           (sc[7] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 94:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[7] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[7] - g_RT[7] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 95:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[16] - g_RT[16] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[16] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 96:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[17] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[17] - g_RT[17] - g_RT_qss[2] + g_RT_qss[3])) *
      (sc[17] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 97:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[17] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[13] - g_RT[16] + g_RT[17] + g_RT_qss[3])) *
      (sc[13] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 98:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[13])) * (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 99:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[12] + g_RT[13])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 100:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[12] + g_RT[13])) * (sc[7] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 101:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[12] + g_RT[13])) * (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 102:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[12] + g_RT[13])) * (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 103:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[13] - g_RT[24] + g_RT_qss[1])) *
      (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[13] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 104:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[13])) * (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 105:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[2])) *
                           (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[10] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 107:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[10] - g_RT[14])) * (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 108:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] + g_RT[10] - g_RT[13])) * (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 109:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[10] - g_RT[11])) * (sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 110:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[14])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 111:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[10] - g_RT[11])) * (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 112:  C + CH3 <=> C2H2 + H
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[18] + g_RT_qss[0])) *
      (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 113:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[19] + g_RT_qss[1])) *
      (sc[2] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 114:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] + g_RT[12] - g_RT[16])) *
                           (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 115:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[12] + g_RT[13])) *
                           (sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 116:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[2])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 117:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[10] - g_RT[20] + g_RT_qss[3])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 118:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + 2.000000 * g_RT[10] - g_RT[21])) *
                           (sc[2] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 119:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[10] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[16] - g_RT[20] + g_RT[23])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
    wdot[20] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 120:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[13] + g_RT[14])) * (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 121:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT[14])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 122:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[7] + g_RT[14] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 123:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[14])) * (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 124:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[13] + g_RT[14])) * (sc[7] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 125:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[13] + g_RT[14])) * (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 126:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[10] + g_RT[11])) * (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 127:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] + g_RT[11])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 128:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[10] + g_RT[11])) * (sc[7] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 129:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[11] - g_RT[20] + g_RT_qss[1])) *
      (sc[2] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 130:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[2])) *
      ((sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 131:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] + g_RT[11] + g_RT_qss[3])) *
      ((sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 132:  CH3OH + H <=> CH3O + H2
    const amrex::Real k_f =
      4.2 * exp((2.1) * tc[0] - (2450.66516246898) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[14] + g_RT[15])) * (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 133:  CH3OH + O <=> CH3O + OH
    const amrex::Real k_f =
      0.13 * exp((2.5) * tc[0] - (2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[14] + g_RT[15])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 134:  CH3OH + OH <=> CH3O + H2O
    const amrex::Real k_f = 6.3 * exp((2) * tc[0] - (754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[14] + g_RT[15])) * (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 135:  CH3 + CH3OH <=> CH3O + CH4
    const amrex::Real k_f = 10 * exp((1.5) * tc[0] - (5001.97365809891) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[14] + g_RT[15])) *
                           (sc[11] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 136:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[16] + g_RT[23] - g_RT_qss[3])) *
                           (sc[16] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[16] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 137:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[3] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - 2.000000 * g_RT[16] + g_RT[23])) *
      (refCinv) * (sc[2] * (sc[16] * sc[16]));
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[16] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 138:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] - 2.000000 * g_RT[16] + g_RT[23])) *
      (refCinv) * (sc[4] * (sc[16] * sc[16]));
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[16] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 139:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[23] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[18] + g_RT[23] + g_RT_qss[1])) *
      (sc[16] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 140:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[23] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[19] + g_RT[23] + g_RT_qss[2])) *
      (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 141:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[23] * sc[23]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[16] - g_RT[18] + 2.000000 * g_RT[23])) *
      (refCinv) * ((sc[16] * sc[16]) * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += 2.000000 * qdot;
    wdot[18] += qdot;
    wdot[23] -= 2.000000 * qdot;
  }

  {
    // reaction 142:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] + g_RT[18] - g_RT_qss[2])) *
                           (sc[16] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 143:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[18] - g_RT[23])) * (sc[2] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 144:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[18] - g_RT[24])) * (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 145:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[10] - g_RT[16] + g_RT[18])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 146:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[18] - g_RT[19])) *
                           (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 147:  C2H2 + CH3 <=> H + aC3H4
    const amrex::Real k_f =
      5140 * exp((0.86) * tc[0] - (11147.758797572) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[10] + g_RT[18] - g_RT[27])) *
                           (sc[2] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[18] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 148:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[18] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[18] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 149:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[18] + g_RT_qss[4])) *
                           (sc[2] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 150:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[4] - g_RT[24] + g_RT_qss[4])) *
                           (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 151:  H2CC + O2 <=> 2 HCO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - 2.000000 * g_RT[12] + g_RT_qss[4])) *
                           ((sc[12] * sc[12]));
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[12] += 2.000000 * qdot;
  }

  {
    // reaction 152:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[23] + g_RT[24])) * (sc[6] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 153:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[16] + g_RT[24])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 154:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[23] + g_RT[24])) * (sc[4] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 155:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[17] + g_RT[24] - g_RT_qss[2])) *
                           (sc[17] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[17] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 156:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[23] + g_RT[24])) * (sc[7] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 157:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[18] + g_RT[19])) * (sc[6] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 158:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[6] + g_RT[19] - g_RT_qss[4])) *
                           (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 159:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[19] - g_RT[24])) * (sc[2] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[19] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 160:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[16] + g_RT[19])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 161:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19])) * (sc[7] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 162:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[18] + g_RT[19])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 163:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[19] - g_RT[25])) * (sc[3] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 164:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[12] - g_RT[13] + g_RT[19])) *
                           (sc[12] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[12] += qdot;
    wdot[13] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 165:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[19] - g_RT[25])) * (sc[4] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 166:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[19] - g_RT[20])) * (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 167:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc[12] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[19] - g_RT[20])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 168:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[10] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[18] + g_RT[19])) *
                           (sc[11] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 169:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[10] + g_RT[19] - g_RT[28])) *
                           (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] -= qdot;
    wdot[19] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 170:  2 C2H3 <=> C2H2 + C2H4
    const amrex::Real k_f = 960000;
    const amrex::Real qf = k_f * ((sc[19] * sc[19]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[18] + 2.000000 * g_RT[19] - g_RT[20])) *
                           (sc[18] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[19] -= 2.000000 * qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 171:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = k_f * exp(-(-g_RT[10] - g_RT[16] + g_RT[25])) *
                           (refCinv) * (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 172:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[12] + g_RT[25])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 173:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[24] + g_RT[25])) * (sc[6] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 174:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[24] + g_RT[25])) * (sc[4] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 175:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[24] + g_RT[25])) * (sc[7] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 176:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[24] + g_RT[25])) * (sc[5] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[24] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 177:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[13] - g_RT[16] + g_RT[25])) *
      (refCinv) * (sc[4] * sc[13] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 178:  CH2OCH2 <=> CH3 + HCO
    const amrex::Real k_f = 36300000000000 * exp(-(28783.99328403) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = k_f * exp(-(-g_RT[10] - g_RT[12] + g_RT[26])) *
                           (refCinv) * (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 179:  CH2OCH2 <=> CH4 + CO
    const amrex::Real k_f = 12100000000000 * exp(-(28783.99328403) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[26])) *
                           (refCinv) * (sc[11] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 180:  CH2OCH2 + H <=> C2H3 + H2O
    const amrex::Real k_f = 5000 * exp(-(2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[19] + g_RT[26])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 181:  CH2OCH2 + H <=> C2H4 + OH
    const amrex::Real k_f = 95100 * exp(-(2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[20] + g_RT[26])) * (sc[4] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 182:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[19] + g_RT[20])) * (sc[6] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 183:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 184:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[12] + g_RT[20])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 185:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[13] + g_RT[20] - g_RT_qss[2])) *
                           (sc[13] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 186:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 187:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[20] - g_RT[21])) *
                           (sc[16] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 188:  C2H4 + CH <=> H + aC3H4
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT_qss[1])) *
      (sc[2] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 189:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[2])) *
      (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 190:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[11] + g_RT[20] + g_RT_qss[3] - g_RT_qss[4])) *
      (sc[11] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[20] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[28] + g_RT_qss[3])) *
      (sc[2] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[20] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 192:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[19] + g_RT[20])) *
                           (sc[11] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[20] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 194:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C2H4 + HO2 <=> CH2OCH2 + OH
    const amrex::Real k_f = 2820000 * exp(-(8605.00498526071) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[20] - g_RT[26])) * (sc[4] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 196:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[20] + g_RT[21])) * (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 197:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[10] - g_RT[13] + g_RT[21])) *
                           (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 198:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[9] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[20] + g_RT[21])) * (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 199:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[21] - g_RT[22])) * (sc[9] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 200:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[20] + g_RT[21])) * (sc[8] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 201:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[10] - g_RT[13] + g_RT[21])) *
      (refCinv) * (sc[4] * sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 202:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[21] - g_RT[22])) * (sc[5] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 203:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[19] + g_RT[21] - g_RT[28])) *
                           (sc[10] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[21] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 204:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[21] + g_RT[22])) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 205:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[21] + g_RT[22])) * (sc[4] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 206:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22])) * (sc[7] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 207:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[21] + g_RT[22] + g_RT_qss[3])) *
      (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 208:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[21] + g_RT[22])) *
                           (sc[11] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 209:  CH3O2 + HO2 <=> CH2O + H2O + O2
    const amrex::Real k_f = 18000 * exp(-(-720.103048766554) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[7] - g_RT[9] - g_RT[13] + g_RT[38])) *
      (refCinv) * (sc[7] * sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 210:  2 CH3O2 <=> CH2O + CH3OH + O2
    const amrex::Real k_f = 1046 * exp(-(-1806.04461357314) * invT);
    const amrex::Real qf = k_f * ((sc[38] * sc[38]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - g_RT[13] - g_RT[15] + 2.000000 * g_RT[38])) *
      (refCinv) * (sc[9] * sc[13] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[15] += qdot;
    wdot[38] -= 2.000000 * qdot;
  }

  {
    // reaction 211:  2 CH3O2 <=> 2 CH3O + O2
    const amrex::Real k_f = 77410 * exp(-(-30.6962166140879) * invT);
    const amrex::Real qf = k_f * ((sc[38] * sc[38]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - 2.000000 * g_RT[14] + 2.000000 * g_RT[38])) *
      (refCinv) * (sc[9] * (sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= 2.000000 * qdot;
  }

  {
    // reaction 212:  CH3 + CH3O2 <=> 2 CH3O
    const amrex::Real k_f = 1000000 * exp(-(-710.038715450459) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - 2.000000 * g_RT[14] + g_RT[38])) *
                           ((sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 213:  CH3O2 + OH <=> CH3OH + O2
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[4] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[9] - g_RT[15] + g_RT[38])) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[15] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 214:  CH3O2 + H <=> CH3O + OH
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[14] + g_RT[38])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 215:  CH3O2 + O <=> CH3O + O2
    const amrex::Real k_f = 36000000;
    const amrex::Real qf = k_f * (sc[3] * sc[38]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[14] + g_RT[38])) * (sc[9] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[14] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 216:  H + aC3H4 <=> aC3H5
    const amrex::Real k_f =
      1.52e+53 * exp((-13.54) * tc[0] - (13561.1859267714) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] + g_RT[27] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 217:  O + aC3H4 <=> C2H4 + CO
    const amrex::Real k_f = 20 * exp((1.8) * tc[0] - (503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] - g_RT[20] + g_RT[27])) *
                           (sc[16] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[20] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 218:  H + aC3H5 <=> H2 + aC3H4
    const amrex::Real k_f = 18000000;
    const amrex::Real qf = k_f * (sc[2] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[27] + g_RT[28])) * (sc[6] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 219:  OH + aC3H5 <=> H2O + aC3H4
    const amrex::Real k_f = 6000000;
    const amrex::Real qf = k_f * (sc[4] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[27] + g_RT[28])) * (sc[7] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 220:  O2 + aC3H5 <=> HO2 + aC3H4
    const amrex::Real k_f =
      4990000000 * exp((-1.4) * tc[0] - (11286.1433806683) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[27] + g_RT[28])) * (sc[5] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 221:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[9] + g_RT[28] - g_RT[29])) * (sc[9] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 222:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[19] + g_RT[28])) *
      (refCinv) * (sc[4] * sc[13] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[19] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 223:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[12] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[16] + g_RT[28] - g_RT[29])) *
                           (sc[16] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 224:  CH3 + aC3H5 <=> CH4 + aC3H4
    const amrex::Real k_f =
      3000000 * exp((-0.32) * tc[0] - (-65.9213832204183) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[27] + g_RT[28])) *
                           (sc[11] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 225:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[20] + g_RT[29])) *
                           (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[20] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 226:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[28] + g_RT[29])) * (sc[6] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 227:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      80 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[10] - g_RT[24] + g_RT[29])) *
      (refCinv) * (sc[2] * sc[10] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[24] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 228:  C3H6 + O <=> C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[12] - g_RT[21] + g_RT[29])) *
                           (sc[12] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[21] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 229:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[28] + g_RT[29])) * (sc[4] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 230:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[28] + g_RT[29])) * (sc[7] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 231:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[28] + g_RT[29])) * (sc[8] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 232:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[28] + g_RT[29])) *
                           (sc[11] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 233:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[21] + g_RT[30])) *
                           (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 234:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[29] + g_RT[30])) * (sc[6] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 235:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[3] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[13] - g_RT[21] + g_RT[30])) *
                           (sc[13] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 236:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[29] + g_RT[30])) * (sc[7] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 237:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[9] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[9] - g_RT[29] + g_RT[30])) * (sc[5] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 238:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[5] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] - g_RT[21] + g_RT[30])) *
      (refCinv) * (sc[4] * sc[13] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[21] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 239:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[10] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[11] - g_RT[29] + g_RT[30])) *
                           (sc[11] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 240:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[20] - g_RT[21] + g_RT[31])) *
                           (sc[20] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[21] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 241:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] - g_RT[29] + g_RT[31])) *
                           (sc[10] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 242:  C4H81 + O <=> HCO + nC3H7
    const amrex::Real k_f =
      330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[12] - g_RT[30] + g_RT[31])) *
                           (sc[12] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 243:  N + NO <=> N2 + O
    const amrex::Real k_f = 27000000 * exp(-(178.641916360675) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[32] + g_RT[33])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[32] -= qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 244:  N + O2 <=> NO + O
    const amrex::Real k_f = 9000 * exp((1) * tc[0] - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[9] + g_RT[32] - g_RT[33])) * (sc[3] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 245:  N + OH <=> H + NO
    const amrex::Real k_f = 33600000 * exp(-(193.738416334817) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[32] - g_RT[33])) * (sc[2] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 246:  HO2 + NO <=> NO2 + OH
    const amrex::Real k_f = 2110000 * exp(-(-241.543999586265) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[33] - g_RT[34])) * (sc[4] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 247:  NO2 + O <=> NO + O2
    const amrex::Real k_f = 3900000 * exp(-(-120.771999793133) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[34]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[33] + g_RT[34])) * (sc[9] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 248:  H + NO2 <=> NO + OH
    const amrex::Real k_f = 132000000 * exp(-(181.157999689699) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[34]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[33] + g_RT[34])) * (sc[4] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 249:  NCO + O <=> CO + NO
    const amrex::Real k_f = 2000000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[16] - g_RT[33] + g_RT[37])) *
                           (sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[16] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 250:  NCO + OH <=> CO + H + NO
    const amrex::Real k_f =
      8300000 * exp((-0.1) * tc[0] - (37986.8196682667) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[37]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] - g_RT[33] + g_RT[37])) *
      (refCinv) * (sc[2] * sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 251:  N + NCO <=> CO + N2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[32] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] - g_RT[16] + g_RT[32] + g_RT[37])) *
                           (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[16] += qdot;
    wdot[32] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 252:  NCO + O2 <=> CO2 + NO
    const amrex::Real k_f = 2000000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[17] - g_RT[33] + g_RT[37])) *
                           (sc[17] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[17] += qdot;
    wdot[33] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 253:  NCO + NO <=> CO2 + N2
    const amrex::Real k_f =
      3800000000000 * exp((-2) * tc[0] - (402.573332643776) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[37]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] - g_RT[17] + g_RT[33] + g_RT[37])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[17] += qdot;
    wdot[33] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 254:  C + NO <=> CO + N
    const amrex::Real k_f = 29000000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[16] - g_RT[32] + g_RT[33] + g_RT_qss[0])) *
      (sc[16] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[32] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 255:  CH + NO <=> H + NCO
    const amrex::Real k_f = 16200000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[37] + g_RT_qss[1])) *
      (sc[2] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 256:  CH + NO <=> HCO + N
    const amrex::Real k_f = 24600000;
    const amrex::Real qf = k_f * (sc[33] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[32] + g_RT[33] + g_RT_qss[1])) *
      (sc[12] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[32] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 257:  CH2 + NO <=> H + HNCO
    const amrex::Real k_f =
      310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[2])) *
      (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 258:  CH2 + NO <=> H + HCNO
    const amrex::Real k_f =
      38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[2])) *
      (sc[2] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 259:  CH2* + NO <=> H + HNCO
    const amrex::Real k_f =
      310000000000 * exp((-1.38) * tc[0] - (639.085165571994) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[36] + g_RT_qss[3])) *
      (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 260:  CH2* + NO <=> H + HCNO
    const amrex::Real k_f =
      38000000 * exp((-0.36) * tc[0] - (291.865666166737) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[33] - g_RT[35] + g_RT_qss[3])) *
      (sc[2] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 261:  HNCO + O <=> NCO + OH
    const amrex::Real k_f =
      2.2 * exp((2.11) * tc[0] - (24065.3306087791) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[36] - g_RT[37])) * (sc[4] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 262:  H + HNCO <=> H2 + NCO
    const amrex::Real k_f = 90 * exp((1.7) * tc[0] - (29266.0748498709) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[36] - g_RT[37])) * (sc[6] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 263:  HNCO + OH <=> H2O + NCO
    const amrex::Real k_f = 33 * exp((1.5) * tc[0] - (1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[36] - g_RT[37])) * (sc[7] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 264:  H + HCNO <=> H + HNCO
    const amrex::Real k_f =
      2100000000 * exp((-0.69) * tc[0] - (1434.16749754345) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[2] + g_RT[35] - g_RT[36])) * (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 265:  HCCO + NO <=> CO + HCNO
    const amrex::Real k_f = 55000 * exp(-(920.886498422637) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[33]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[16] + g_RT[23] + g_RT[33] - g_RT[35])) *
                           (sc[16] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[23] -= qdot;
    wdot[33] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 266:  CO2 + N <=> CO + NO
    const amrex::Real k_f = 3000000 * exp(-(5686.34832359333) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[16] + g_RT[17] + g_RT[32] - g_RT[33])) *
                           (sc[16] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 267:  CH3 + NO2 <=> CH3O + NO
    const amrex::Real k_f = 15100000 * exp((-0.05) * tc[0]);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[14] - g_RT[33] + g_RT[34])) *
                           (sc[14] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 268:  CH3O2 + NO <=> CH3O + NO2
    const amrex::Real k_f = 1690000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[14] + g_RT[33] - g_RT[34] + g_RT[38])) *
                           (sc[14] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
    wdot[38] -= qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 39; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[39]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 39; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 39; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[39]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 39; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[39]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 39; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[39];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 39.950000;  // AR
  XW += x[1] * 28.014000;  // N2
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 15.999000;  // O
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 33.006000;  // HO2
  XW += x[6] * 2.016000;   // H2
  XW += x[7] * 18.015000;  // H2O
  XW += x[8] * 34.014000;  // H2O2
  XW += x[9] * 31.998000;  // O2
  XW += x[10] * 15.035000; // CH3
  XW += x[11] * 16.043000; // CH4
  XW += x[12] * 29.018000; // HCO
  XW += x[13] * 30.026000; // CH2O
  XW += x[14] * 31.034000; // CH3O
  XW += x[15] * 32.042000; // CH3OH
  XW += x[16] * 28.010000; // CO
  XW += x[17] * 44.009000; // CO2
  XW += x[18] * 26.038000; // C2H2
  XW += x[19] * 27.046000; // C2H3
  XW += x[20] * 28.054000; // C2H4
  XW += x[21] * 29.062000; // C2H5
  XW += x[22] * 30.070000; // C2H6
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 42.037000; // CH2CO
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 44.053000; // CH2OCH2
  XW += x[27] * 40.065000; // aC3H4
  XW += x[28] * 41.073000; // aC3H5
  XW += x[29] * 42.081000; // C3H6
  XW += x[30] * 43.089000; // nC3H7
  XW += x[31] * 56.108000; // C4H81
  XW += x[32] * 14.007000; // N
  XW += x[33] * 30.006000; // NO
  XW += x[34] * 46.005000; // NO2
  XW += x[35] * 43.025000; // HCNO
  XW += x[36] * 43.025000; // HNCO
  XW += x[37] * 42.017000; // NCO
  XW += x[38] * 47.033000; // CH3O2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 39; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 39; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // AR
  kcharge[1] = 0;  // N2
  kcharge[2] = 0;  // H
  kcharge[3] = 0;  // O
  kcharge[4] = 0;  // OH
  kcharge[5] = 0;  // HO2
  kcharge[6] = 0;  // H2
  kcharge[7] = 0;  // H2O
  kcharge[8] = 0;  // H2O2
  kcharge[9] = 0;  // O2
  kcharge[10] = 0; // CH3
  kcharge[11] = 0; // CH4
  kcharge[12] = 0; // HCO
  kcharge[13] = 0; // CH2O
  kcharge[14] = 0; // CH3O
  kcharge[15] = 0; // CH3OH
  kcharge[16] = 0; // CO
  kcharge[17] = 0; // CO2
  kcharge[18] = 0; // C2H2
  kcharge[19] = 0; // C2H3
  kcharge[20] = 0; // C2H4
  kcharge[21] = 0; // C2H5
  kcharge[22] = 0; // C2H6
  kcharge[23] = 0; // HCCO
  kcharge[24] = 0; // CH2CO
  kcharge[25] = 0; // CH2CHO
  kcharge[26] = 0; // CH2OCH2
  kcharge[27] = 0; // aC3H4
  kcharge[28] = 0; // aC3H5
  kcharge[29] = 0; // C3H6
  kcharge[30] = 0; // nC3H7
  kcharge[31] = 0; // C4H81
  kcharge[32] = 0; // N
  kcharge[33] = 0; // NO
  kcharge[34] = 0; // NO2
  kcharge[35] = 0; // HCNO
  kcharge[36] = 0; // HNCO
  kcharge[37] = 0; // NCO
  kcharge[38] = 0; // CH3O2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[39];
  CKCHRG(kchrg);

  for (int id = 0; id < 39; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with no change at a midpoint T
  // species 0: AR
  species[0] = +0.00000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: N2
    species[1] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                 1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
    // species 2: H
    species[2] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 3: O
    species[3] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 4: OH
    species[4] = -3.22544939e-03 + 1.30552938e-05 * tc[1] -
                 1.73956093e-08 * tc[2] + 8.24949516e-12 * tc[3];
    // species 5: HO2
    species[5] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 6: H2
    species[6] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 7: H2O
    species[7] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 8: H2O2
    species[8] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 9: O2
    species[9] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 10: CH3
    species[10] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                  2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 11: CH4
    species[11] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                  1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 12: HCO
    species[12] = -3.24392532e-03 + 2.75598892e-05 * tc[1] -
                  3.99432279e-08 * tc[2] + 1.73507546e-11 * tc[3];
    // species 13: CH2O
    species[13] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 14: CH3O
    species[14] = -2.80463306e-03 + 7.53101942e-05 * tc[1] -
                  1.41921627e-07 * tc[2] + 7.46353680e-11 * tc[3];
    // species 15: CH3OH
    species[15] = -1.52309129e-02 + 1.30488231e-04 * tc[1] -
                  2.13242067e-07 * tc[2] + 1.04541079e-10 * tc[3];
    // species 16: CO
    species[16] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 17: CO2
    species[17] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 18: C2H2
    species[18] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 19: C2H3
    species[19] = +1.51479162e-03 + 5.18418824e-05 * tc[1] -
                  1.07297354e-07 * tc[2] + 5.88603492e-11 * tc[3];
    // species 20: C2H4
    species[20] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 21: C2H5
    species[21] = -4.18658892e-03 + 9.94285614e-05 * tc[1] -
                  1.79737982e-07 * tc[2] + 9.22036016e-11 * tc[3];
    // species 22: C2H6
    species[22] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 23: HCCO
    species[23] = +1.76550210e-02 - 4.74582020e-05 * tc[1] +
                  5.18272770e-08 * tc[2] - 2.02659244e-11 * tc[3];
    // species 24: CH2CO
    species[24] = +1.81188721e-02 - 3.47894948e-05 * tc[1] +
                  2.80319270e-08 * tc[2] - 8.05830460e-12 * tc[3];
    // species 25: CH2CHO
    species[25] = +1.07385740e-02 + 3.78298500e-06 * tc[1] -
                  2.14757493e-08 * tc[2] + 1.14695404e-11 * tc[3];
    // species 26: CH2OCH2
    species[26] = -9.44121800e-03 + 1.60619442e-04 * tc[1] -
                  3.02423640e-07 * tc[2] + 1.60159684e-10 * tc[3];
    // species 27: aC3H4
    species[27] = +1.21225750e-02 + 3.70797600e-05 * tc[1] -
                  1.03575447e-07 * tc[2] + 6.13403160e-11 * tc[3];
    // species 28: aC3H5
    species[28] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 29: C3H6
    species[29] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 30: nC3H7
    species[30] = +2.60089730e-02 + 4.70850320e-06 * tc[1] -
                  5.87853960e-08 * tc[2] + 3.74880828e-11 * tc[3];
    // species 31: C4H81
    species[31] = +3.08533800e-02 + 1.01730494e-05 * tc[1] -
                  7.39646640e-08 * tc[2] + 4.44407720e-11 * tc[3];
    // species 32: N
    species[32] = +0.00000000e+00 + 0.00000000e+00 * tc[1] +
                  0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3];
    // species 33: NO
    species[33] = -4.63897600e-03 + 2.20820440e-05 * tc[1] -
                  2.80084062e-08 * tc[2] + 1.12143080e-11 * tc[3];
    // species 34: NO2
    species[34] = -1.58542900e-03 + 3.33156240e-05 * tc[1] -
                  6.14262780e-08 * tc[2] + 3.13402256e-11 * tc[3];
    // species 37: NCO
    species[37] = +8.80516880e-03 - 1.67732268e-05 * tc[1] +
                  1.44050892e-08 * tc[2] - 5.32543800e-12 * tc[3];
    // species 38: CH3O2
    species[38] = +2.22003400e-02 - 3.76829200e-05 * tc[1] +
                  2.85039420e-08 * tc[2] - 8.86907600e-12 * tc[3];
  } else {
    // species 1: N2
    species[1] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                 3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
    // species 2: H
    species[2] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 3: O
    species[3] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 4: OH
    species[4] = +1.05650448e-03 - 5.18165516e-07 * tc[1] +
                 9.15656022e-11 * tc[2] - 5.32783504e-15 * tc[3];
    // species 5: HO2
    species[5] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 6: H2
    species[6] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 7: H2O
    species[7] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 8: H2O2
    species[8] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 9: O2
    species[9] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 10: CH3
    species[10] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                  1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 11: CH4
    species[11] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                  3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 12: HCO
    species[12] = +4.95695526e-03 - 4.96891226e-06 * tc[1] +
                  1.76748533e-09 * tc[2] - 2.13403484e-13 * tc[3];
    // species 13: CH2O
    species[13] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 14: CH3O
    species[14] = +7.44142474e-03 - 5.39410352e-06 * tc[1] +
                  1.31427151e-09 * tc[2] - 1.05414839e-13 * tc[3];
    // species 15: CH3OH
    species[15] = +1.40938292e-02 - 1.27300167e-05 * tc[1] +
                  4.14513255e-09 * tc[2] - 4.68240880e-13 * tc[3];
    // species 16: CO
    species[16] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 17: CO2
    species[17] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 18: C2H2
    species[18] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 19: C2H3
    species[19] = +1.03302292e-02 - 9.36164698e-06 * tc[1] +
                  3.05289864e-09 * tc[2] - 3.45042816e-13 * tc[3];
    // species 20: C2H4
    species[20] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 21: C2H5
    species[21] = +1.73972722e-02 - 1.59641334e-05 * tc[1] +
                  5.25653067e-09 * tc[2] - 5.98566304e-13 * tc[3];
    // species 22: C2H6
    species[22] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 23: HCCO
    species[23] = +4.08534010e-03 - 3.18690940e-06 * tc[1] +
                  8.58781560e-10 * tc[2] - 7.76313280e-14 * tc[3];
    // species 24: CH2CO
    species[24] = +9.00359745e-03 - 8.33879270e-06 * tc[1] +
                  2.77003765e-09 * tc[2] - 3.17935280e-13 * tc[3];
    // species 25: CH2CHO
    species[25] = +8.13059140e-03 - 5.48724900e-06 * tc[1] +
                  1.22109123e-09 * tc[2] - 8.70406840e-14 * tc[3];
    // species 26: CH2OCH2
    species[26] = +1.20461900e-02 - 8.66738620e-06 * tc[1] +
                  2.10084933e-09 * tc[2] - 1.67796352e-13 * tc[3];
    // species 27: aC3H4
    species[27] = +1.11337280e-02 - 7.92587560e-06 * tc[1] +
                  1.90692714e-09 * tc[2] - 1.51502160e-13 * tc[3];
    // species 28: aC3H5
    species[28] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 29: C3H6
    species[29] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 30: nC3H7
    species[30] = +1.60314850e-02 - 1.05440476e-05 * tc[1] +
                  2.27665056e-09 * tc[2] - 1.55450876e-13 * tc[3];
    // species 31: C4H81
    species[31] = +3.43505070e-02 - 3.17663940e-05 * tc[1] +
                  9.92689860e-09 * tc[2] - 1.01444180e-12 * tc[3];
    // species 32: N
    species[32] = +1.74890650e-04 - 2.38047380e-07 * tc[1] +
                  9.06787350e-11 * tc[2] - 8.14439280e-15 * tc[3];
    // species 33: NO
    species[33] = +1.19110430e-03 - 8.58340960e-07 * tc[1] +
                  2.08373007e-10 * tc[2] - 1.61344396e-14 * tc[3];
    // species 34: NO2
    species[34] = +2.17239560e-03 - 1.65613812e-06 * tc[1] +
                  4.72425300e-10 * tc[2] - 4.20435800e-14 * tc[3];
    // species 37: NCO
    species[37] = +2.30517610e-03 - 1.76066306e-06 * tc[1] +
                  4.43672940e-10 * tc[2] - 3.63911984e-14 * tc[3];
    // species 38: CH3O2
    species[38] = +5.46924100e-03 - 2.48678400e-06 * tc[1] +
                  4.47543900e-10 * tc[2] - 3.04741320e-14 * tc[3];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 35: HCNO
    species[35] = +1.27505342e-02 - 2.09588472e-05 * tc[1] +
                  1.32429851e-08 * tc[2] - 3.03008586e-12 * tc[3];
  } else {
    // species 35: HCNO
    species[35] = +3.02778626e-03 - 2.15408692e-06 * tc[1] +
                  5.14999584e-10 * tc[2] - 4.05757564e-14 * tc[3];
  }

  // species with midpoint at T=1478 kelvin
  if (T < 1478) {
    // species 36: HNCO
    species[36] = +7.30282357e-03 - 4.56100006e-06 * tc[1] -
                  1.98381389e-09 * tc[2] + 1.44894301e-12 * tc[3];
  } else {
    // species 36: HNCO
    species[36] = +3.17864004e-03 - 2.18757510e-06 * tc[1] +
                  5.12205489e-10 * tc[2] - 3.98008782e-14 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[39];

  for (int k = 0; k < 39; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 39; k++) {
    J[1560 + k] *= 1.e-6;
    J[k * 40 + 39] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[39];
  amrex::Real h_RT[39];
  amrex::Real g_RT_qss[5];
  amrex::Real h_RT_qss[5];
  amrex::Real sc_qss[5];
  amrex::Real kf_qss[70];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[39], wdot[39];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  tc[0] = log(T_pert1);
  tc[1] = T_pert1;
  tc[2] = T_pert1 * T_pert1;
  tc[3] = T_pert1 * T_pert1 * T_pert1;
  tc[4] = T_pert1 * T_pert1 * T_pert1 * T_pert1;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot_pert1, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[70], tc, invT);
  tc[0] = log(T);
  tc[1] = T;
  tc[2] = T * T;
  tc[3] = T * T * T;
  tc[4] = T * T * T * T;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[70], tc, invT);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, tc);
  for (int i = 0; i < 1600; i++) {
    J[i] = 0.0;
  }
  // Species terms
  amrex::Real x1 = exp(g_RT_qss[2] - g_RT_qss[3]);
  amrex::Real x12 = kf_qss[24] * sc[1] * x1 + kf_qss[25] * sc[0] * x1 +
                    kf_qss[33] * sc[7] * x1 + kf_qss[34] * sc[16] * x1 +
                    kf_qss[35] * sc[17] * x1 + 10.0e-13;
  const amrex::Real x18 = exp(-g_RT[19] - g_RT[2] + g_RT[6] + g_RT_qss[4]);
  amrex::Real x20 = sc[10] + sc[12] + sc[13] + sc[14] + sc[15] + sc[19] +
                    sc[1] + sc[21] + sc[23] + sc[24] + sc[25] + sc[26] +
                    sc[27] + sc[28] + sc[29] + sc[2] + sc[30] + sc[31] +
                    sc[32] + sc[33] + sc[34] + sc[35] + sc[36] + sc[37] +
                    sc[38] + sc[3] + sc[4] + sc[5] + sc[8] + sc[9];
  amrex::Real x25 =
    2 * sc[11] + 1.5 * sc[16] + 2 * sc[17] + 3.0 * sc[22] + 6.0 * sc[7];
  const amrex::Real x27 = 0.7 * sc[0] + sc[18] + sc[20] + 2 * sc[6] + x20 + x25;
  amrex::Real x31 = -g_RT[20] + g_RT[6] + g_RT_qss[4];
  amrex::Real x32 = -50251.216247259297 * invT - 9.31 * tc[0];
  amrex::Real x35 = 7.0e+44 * exp(x32);
  amrex::Real x38 = log(
    0.2655 * exp(-0.0055555555555555601 * tc[1]) +
    0.7345 * exp(-0.00096618357487922703 * tc[1]) + exp(-5417.0 * invT));
  amrex::Real x41 = -0.29097730287517898 * x38 +
                    0.43429448190325198 * log(x27 * x35 / kf_qss[4]) - 0.4;
  amrex::Real x45 = -0.55155399201712996 * x38 - 0.14 * x41 + 0.75;
  amrex::Real x47 = ((x41) * (x41)) / ((x45) * (x45)) + 1.0;
  amrex::Real x51 = exp(M_LN10 * (0.43429448190325198 * x38 / x47)) /
                    (1.0 + x27 * x35 / kf_qss[4]);
  amrex::Real x53 = refCinv * sc[6] * x51 * exp(x31 + x32);
  const amrex::Real x56 = exp(g_RT[11] - g_RT[20] - g_RT_qss[3] + g_RT_qss[4]);
  const amrex::Real x61 =
    sc[0] + 2.5 * sc[18] + 2.5 * sc[20] + 2 * sc[6] + x20 + x25;
  amrex::Real x62 = -g_RT[18] + g_RT_qss[4];
  amrex::Real x63 = -25009.8682904946 * invT - 0.64 * tc[0];
  amrex::Real x67 = 1.0 + 2450000000.0 * x61 * exp(x63) / kf_qss[5];
  amrex::Real x69 = exp(x62 + x63) / x67;
  const amrex::Real x72 = -kf_qss[52] * sc[2] - kf_qss[53] * sc[4] -
                          kf_qss[54] * sc[9] - kf_qss[56] * sc[6] * x18 -
                          kf_qss[60] * sc[11] * x56 - 7.0e+44 * x27 * x53 -
                          2450000000.0 * x61 * x69 + 10.0e-13;
  const amrex::Real x74 = (kf_qss[60] * sc[20] + 10.0e-13) / x72;
  const amrex::Real x78 = exp(-g_RT[14] - g_RT[2] + g_RT[7] + g_RT_qss[3]);
  const amrex::Real x82 = exp(g_RT[16] - g_RT[23] - g_RT[2] + g_RT_qss[3]);
  const amrex::Real x86 = exp(-g_RT[10] - g_RT[4] + g_RT[7] + g_RT_qss[3]);
  const amrex::Real x88 = sc[0] + sc[18] + sc[20] + 2 * sc[6] + x20 + x25;
  const amrex::Real x90 = exp(-1559.97166399463 * invT - 6.3 * tc[0]);
  const amrex::Real x92 = 2.7e+26 * x88 * x90;
  amrex::Real x95 = log(
    0.8493 * exp(-0.0074626865671641798 * tc[1]) +
    0.1507 * exp(-0.00041963911036508602 * tc[1]) + exp(-7265.0 * invT));
  amrex::Real x97 = -0.29097730287517898 * x95 +
                    0.43429448190325198 * log(x92 / kf_qss[3]) - 0.4;
  amrex::Real x99 = -0.55155399201712996 * x95 - 0.14 * x97 + 0.75;
  amrex::Real x102 = ((x97) * (x97)) / ((x99) * (x99)) + 1.0;
  amrex::Real x106 =
    exp(M_LN10 * (0.43429448190325198 * x95 / x102)) / (1.0 + x92 / kf_qss[3]);
  amrex::Real x110 =
    -kf_qss[24] * sc[1] - kf_qss[25] * sc[0] - kf_qss[26] * sc[2] -
    kf_qss[27] * sc[3] - kf_qss[28] * sc[3] - kf_qss[29] * sc[4] -
    kf_qss[30] * sc[6] - kf_qss[31] * sc[9] - kf_qss[32] * sc[9] -
    kf_qss[33] * sc[7] - kf_qss[34] * sc[16] - kf_qss[35] * sc[17] -
    kf_qss[36] * sc[17] - kf_qss[39] * sc[7] * x86 - kf_qss[43] * sc[10] -
    kf_qss[44] * sc[7] * x78 - kf_qss[47] * sc[11] - kf_qss[48] * sc[16] * x82 -
    kf_qss[60] * sc[20] - kf_qss[61] * sc[20] - kf_qss[62] * sc[22] -
    kf_qss[68] * sc[33] - kf_qss[69] * sc[33] - sc[7] * x106 * x92 + 10.0e-13;
  amrex::Real x113 = (kf_qss[60] * sc[11] * x56 + 10.0e-13) / x110;
  amrex::Real x115 = (1.0 / ((-x113 * x74 + 1)));
  const amrex::Real x117 = x115 * x12 / x110;
  amrex::Real x118 = -974.22746499793698 * invT - 3.74 * tc[0];
  const amrex::Real x121 = 2.69e+16 * x27 * exp(x118);
  amrex::Real x124 = log(
    0.4243 * exp(-0.0042194092827004199 * tc[1]) +
    0.5757 * exp(-0.000605326876513317 * tc[1]) + exp(-5069.0 * invT));
  amrex::Real x126 = -0.29097730287517898 * x124 +
                     0.43429448190325198 * log(x121 / kf_qss[0]) - 0.4;
  amrex::Real x131 =
    1.7777777777777777 * ((x126) * (x126)) /
      ((-0.73540532268950665 * x124 - 0.18666666666666668 * x126 + 1) *
       (-0.73540532268950665 * x124 - 0.18666666666666668 * x126 + 1)) +
    1.0;
  amrex::Real x135 = exp(M_LN10 * (0.43429448190325198 * x124 / x131)) /
                     (1.0 + x121 / kf_qss[0]);
  const amrex::Real x139 = exp(-g_RT[2] + g_RT[6] + g_RT_qss[1] - g_RT_qss[3]);
  amrex::Real x143 = g_RT[4] - g_RT[7];
  amrex::Real x145 = kf_qss[17] * exp(g_RT_qss[1] - g_RT_qss[2] - x143);
  amrex::Real x148 =
    -kf_qss[10] * sc[4] - kf_qss[11] * sc[6] - kf_qss[12] * sc[7] -
    kf_qss[13] * sc[9] - kf_qss[14] * sc[17] - kf_qss[26] * sc[6] * x139 -
    kf_qss[37] * sc[13] - kf_qss[41] * sc[10] - kf_qss[45] * sc[11] -
    kf_qss[49] * sc[23] - kf_qss[58] * sc[20] - kf_qss[64] * sc[33] -
    kf_qss[65] * sc[33] - kf_qss[8] * sc[2] - kf_qss[9] * sc[3] -
    sc[16] * x121 * x135 - sc[7] * x145 + 10.0e-13;
  amrex::Real x150 = kf_qss[26] * sc[2] + 10.0e-13;
  amrex::Real x155 =
    kf_qss[11] * exp(g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[2]);
  amrex::Real x159 =
    -x117 * x150 / x148 + (kf_qss[17] * sc[4] + sc[2] * x155 + 10.0e-13) / x148;
  amrex::Real x160 = kf_qss[24] * sc[1] + kf_qss[25] * sc[0] +
                     kf_qss[33] * sc[7] + kf_qss[34] * sc[16] +
                     kf_qss[35] * sc[17] + 10.0e-13;
  amrex::Real x166 =
    3200000000000000.0 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  amrex::Real x169 = log(
    0.32 * exp(-0.012820512820512799 * tc[1]) +
    0.68 * exp(-0.00050125313283207998 * tc[1]) + exp(-5590.0 * invT));
  amrex::Real x171 = -0.29097730287517898 * x169 +
                     0.43429448190325198 * log(x166 * x27 / kf_qss[1]) - 0.4;
  amrex::Real x176 =
    1.7777777777777777 * ((x171) * (x171)) /
      ((-0.73540532268950665 * x169 - 0.18666666666666668 * x171 + 1) *
       (-0.73540532268950665 * x169 - 0.18666666666666668 * x171 + 1)) +
    1.0;
  amrex::Real x180 = exp(M_LN10 * (0.43429448190325198 * x169 / x176)) /
                     (1.0 + x166 * x27 / kf_qss[1]);
  amrex::Real x194 = -3570.32224388449 * invT - 5.11 * tc[0];
  amrex::Real x196 = 2.69e+21 * exp(x194);
  amrex::Real x199 = log(
    0.4093 * exp(-0.0036363636363636398 * tc[1]) +
    0.5907 * exp(-0.000815660685154976 * tc[1]) + exp(-5185.0 * invT));
  amrex::Real x202 = -0.29097730287517898 * x199 +
                     0.43429448190325198 * log(x196 * x27 / kf_qss[2]) - 0.4;
  amrex::Real x207 =
    1.7777777777777777 * ((x202) * (x202)) /
      ((-0.73540532268950665 * x199 - 0.18666666666666668 * x202 + 1) *
       (-0.73540532268950665 * x199 - 0.18666666666666668 * x202 + 1)) +
    1.0;
  amrex::Real x210 = exp(M_LN10 * (0.43429448190325198 * x199 / x207)) /
                     (1.0 + x196 * x27 / kf_qss[2]);
  amrex::Real x214 =
    -kf_qss[15] * sc[3] - kf_qss[16] * sc[4] - kf_qss[17] * sc[4] -
    kf_qss[18] * sc[6] - kf_qss[19] * sc[9] - kf_qss[20] * sc[9] -
    kf_qss[21] * sc[5] - kf_qss[24] * sc[1] * x1 - kf_qss[25] * sc[0] * x1 -
    kf_qss[33] * sc[7] * x1 - kf_qss[34] * sc[16] * x1 -
    kf_qss[35] * sc[17] * x1 -
    kf_qss[38] * sc[7] * exp(-g_RT[10] - g_RT[4] + g_RT[7] + g_RT_qss[2]) -
    kf_qss[42] * sc[10] - kf_qss[46] * sc[11] - kf_qss[50] * sc[23] -
    kf_qss[51] * sc[16] * exp(g_RT[16] - g_RT[18] - g_RT[3] + g_RT_qss[2]) -
    kf_qss[55] * sc[17] * exp(g_RT[17] - g_RT[24] - g_RT[3] + g_RT_qss[2]) -
    kf_qss[57] * sc[13] * exp(g_RT[13] - g_RT[20] - g_RT[3] + g_RT_qss[2]) -
    kf_qss[59] * sc[20] - kf_qss[66] * sc[33] - kf_qss[67] * sc[33] -
    sc[16] * x196 * x210 * x27 - sc[2] * x155 - sc[2] * x166 * x180 * x27 +
    10.0e-13;
  amrex::Real x217 = -x117 * x160 / x214 + 1;
  amrex::Real x219 = kf_qss[26] * sc[6] * x139 + 10.0e-13;
  const amrex::Real x220 = x115 * x219 / x110;
  amrex::Real x225 =
    -x160 * x220 / x214 + (kf_qss[11] * sc[6] + sc[7] * x145 + 10.0e-13) / x214;
  amrex::Real x226 = x225 / x217;
  amrex::Real x227 = -x159 * x226 + 1 - x150 * x220 / x148;
  const amrex::Real x229 = exp(-g_RT[2] + g_RT[6] + g_RT_qss[0] - g_RT_qss[1]);
  amrex::Real x232 = kf_qss[8] * sc[6] * x229 + 10.0e-13;
  const amrex::Real x234 = x232 / (x148 * x227);
  const amrex::Real x235 =
    (x160 * x220 / x214 -
     (kf_qss[11] * sc[6] + sc[7] * x145 + 10.0e-13) / x214) /
    x217;
  amrex::Real x238 =
    1.7777777777777777 * x126 /
    ((-0.73540532268950665 * x124 - 0.18666666666666668 * x126 + 1) *
     (-0.73540532268950665 * x124 - 0.18666666666666668 * x126 + 1));
  const amrex::Real x240 = 0.43429448190325198 / x27;
  x126 = 2.3703703703703702 * ((x126) * (x126)) /
         ((-0.73540532269 * x124 - 0.18666666666666668 * x126 + 1) *
          (-0.73540532269 * x124 - 0.18666666666666668 * x126 + 1) *
          (-0.73540532269 * x124 - 0.18666666666666668 * x126 + 1));
  amrex::Real x247 = sc[16] * x121 * x124 * x135 / ((x131) * (x131));
  amrex::Real x249 = sc[16] * x135 * exp(x118);
  amrex::Real x252 =
    sc[16] * x27 * exp(-1948.4549299958701 * invT - 7.48 * tc[0]);
  amrex::Real x253 =
    exp(M_LN10 * (0.43429448190325198 * x124 / x131)) /
    (kf_qss[0] * ((1.0 + x121 / kf_qss[0]) * (1.0 + x121 / kf_qss[0])));
  amrex::Real x255 = x247 * (0.196 * x126 * x240 + 1.4 * x238 * x240) -
                     1.883e+16 * x249 + 5.06527e+32 * x252 * x253;
  amrex::Real x257 = kf_qss[8] * sc[2] + 10.0e-13;
  amrex::Real x258 = -kf_qss[40] * sc[10] - kf_qss[63] * sc[33] -
                     kf_qss[6] * sc[4] - kf_qss[7] * sc[9] -
                     kf_qss[8] * sc[6] * x229 + 10.0e-13;
  amrex::Real x261 = x257 / (x227 * x258);
  amrex::Real x271 = 0.43429448190325198 * x97 / (x88 * ((x99) * (x99)));
  amrex::Real x274 = sc[7] * x106 * x92 * x95 / ((x102) * (x102));
  const amrex::Real x279 =
    sc[7] * x88 * exp(-3119.9433279892601 * invT - 12.6 * tc[0]);
  amrex::Real x280 =
    exp(M_LN10 * (0.43429448190325198 * x95 / x102)) /
    (kf_qss[3] * ((1.0 + x92 / kf_qss[3]) * (1.0 + x92 / kf_qss[3])));
  amrex::Real x282 = -2.7e+26 * sc[7] * x106 * x90 +
                     x274 * (2.0 * x271 + 0.121602454932911 * ((x97) * (x97)) /
                                            (x88 * ((x99) * (x99) * (x99)))) +
                     7.29e+52 * x279 * x280;
  amrex::Real x283 = -kf_qss[25] + x282;
  amrex::Real x285 = x115 * x160 / x214;
  amrex::Real x288 = x12 * x285 / ((x110) * (x110));
  amrex::Real x292 = exp(M_LN10 * (0.43429448190325198 * x169 / x176)) * x27 /
                     (kf_qss[1] * ((1.0 + x166 * x27 / kf_qss[1]) *
                                   (1.0 + x166 * x27 / kf_qss[1])));
  amrex::Real x297 = exp(M_LN10 * (0.43429448190325198 * x199 / x207)) * x27 /
                     (kf_qss[2] * ((1.0 + x196 * x27 / kf_qss[2]) *
                                   (1.0 + x196 * x27 / kf_qss[2])));
  amrex::Real x300 =
    sc[16] * x297 * exp(-7140.6444877689701 * invT - 10.22 * tc[0]);
  amrex::Real x303 = 2.3703703703703702 * ((x202) * (x202)) /
                     ((-0.73540532269 * x199 - 0.18666666666666668 * x202 + 1) *
                      (-0.73540532269 * x199 - 0.18666666666666668 * x202 + 1) *
                      (-0.73540532269 * x199 - 0.18666666666666668 * x202 + 1));
  x202 = 1.7777777777777777 * x202 /
         ((-0.73540532268950665 * x199 - 0.18666666666666668 * x202 + 1) *
          (-0.73540532268950665 * x199 - 0.18666666666666668 * x202 + 1));
  amrex::Real x308 = sc[16] * x196 * x199 * x210 * x27 / ((x207) * (x207));
  amrex::Real x310 = 2.3703703703703702 * ((x171) * (x171)) /
                     ((-0.73540532269 * x169 - 0.18666666666666668 * x171 + 1) *
                      (-0.73540532269 * x169 - 0.18666666666666668 * x171 + 1) *
                      (-0.73540532269 * x169 - 0.18666666666666668 * x171 + 1));
  x171 = 1.7777777777777777 * x171 /
         ((-0.73540532268950665 * x169 - 0.18666666666666668 * x171 + 1) *
          (-0.73540532268950665 * x169 - 0.18666666666666668 * x171 + 1));
  amrex::Real x314 = sc[2] * x166 * x169 * x180 * x27 / ((x176) * (x176));
  amrex::Real x315 =
    sc[2] * x180 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  amrex::Real x317 =
    -kf_qss[25] * x1 - 1.883e+21 * sc[16] * x210 * exp(x194) +
    7.168e+30 * sc[2] * x292 * exp(-1237.91299787961 * invT - 6.28 * tc[0]) +
    5.06527e+42 * x300 + x308 * (1.4 * x202 * x240 + 0.196 * x240 * x303) +
    x314 * (1.4 * x171 * x240 + 0.196 * x240 * x310) -
    2240000000000000.0 * x315;
  amrex::Real x321 = x115 * x160 / (x110 * x214);
  amrex::Real x325 = x240 * x41 / ((x45) * (x45));
  amrex::Real x326 = x240 * ((x41) * (x41)) / ((x45) * (x45) * (x45));
  amrex::Real x329 = 7.0e+44 * x27 * x38 * x53 / ((x47) * (x47));
  amrex::Real x330 = exp(M_LN10 * (0.43429448190325198 * x38 / x47)) * x27 /
                     (kf_qss[4] * ((1.0 + x27 * x35 / kf_qss[4]) *
                                   (1.0 + x27 * x35 / kf_qss[4])));
  amrex::Real x333 = refCinv * sc[6] * x330 *
                     exp(-100502.432494519 * invT - 18.62 * tc[0] + x31);
  amrex::Real x336 = x61 *
                     exp(-50019.736580989098 * invT - 1.28 * tc[0] + x62) /
                     (kf_qss[5] * ((x67) * (x67)));
  amrex::Real x338 = x329 * (1.4 * x325 + 0.196 * x326) + 3.43e+89 * x333 +
                     6.0025e+18 * x336 - 4.9e+44 * x53 - 2450000000.0 * x69;
  amrex::Real x341 = x113 * (kf_qss[60] * sc[20] + 10.0e-13) / ((x72) * (x72));
  amrex::Real x343 =
    x74 * (kf_qss[60] * sc[11] * x56 + 10.0e-13) / ((x110) * (x110));
  amrex::Real x344 = x283 * x343 + x338 * x341;
  amrex::Real x345 = (1.0 / ((-x113 * x74 + 1) * (-x113 * x74 + 1)));
  amrex::Real x348 = x12 * x160 * x345 / (x110 * x214);
  amrex::Real x349 = -kf_qss[25] * x1 * x321 - kf_qss[25] * x117 / x214 +
                     x117 * x160 * x317 / ((x214) * (x214)) + x283 * x288 +
                     x344 * x348;
  amrex::Real x352 = x159 * x225 / ((x217) * (x217));
  amrex::Real x354 = x115 * x150 / x148;
  amrex::Real x356 = x219 * x354 / ((x110) * (x110));
  amrex::Real x357 =
    (kf_qss[11] * sc[6] + sc[7] * x145 + 10.0e-13) / ((x214) * (x214));
  amrex::Real x358 = x219 * x285 / ((x110) * (x110));
  amrex::Real x361 = x160 * x219 * x345 / (x110 * x214);
  amrex::Real x362 = -kf_qss[25] * x220 / x214 +
                     x160 * x220 * x317 / ((x214) * (x214)) + x283 * x358 -
                     x317 * x357 + x344 * x361;
  amrex::Real x363 = x159 / x217;
  amrex::Real x364 = x150 * x219 * x345 / (x110 * x148);
  amrex::Real x366 =
    (kf_qss[17] * sc[4] + sc[2] * x155 + 10.0e-13) / ((x148) * (x148));
  amrex::Real x367 = x12 * x354 / ((x110) * (x110));
  amrex::Real x368 = x115 * x150 / (x110 * x148);
  amrex::Real x369 = x12 * x150 * x345 / (x110 * x148);
  amrex::Real x370 = -kf_qss[25] * x1 * x368 +
                     x117 * x150 * x255 / ((x148) * (x148)) - x255 * x366 +
                     x283 * x367 + x344 * x369;
  amrex::Real x371 = -x226 * x370 + x283 * x356 + x344 * x364 + x349 * x352 -
                     x362 * x363 + x150 * x220 * x255 / ((x148) * (x148));
  amrex::Real x374 = x232 * x257 / (x148 * ((x227) * (x227)) * x258);
  const amrex::Real x379 = exp(g_RT[18] - g_RT_qss[4]);
  const amrex::Real x384 = exp(2.0 * g_RT[12] - g_RT[9] - g_RT_qss[4]);
  const amrex::Real x389 = exp(g_RT[24] + g_RT[2] - g_RT[4] - g_RT_qss[4]);
  const amrex::Real x392 =
    kf_qss[52] * sc[18] * sc[2] * x379 + kf_qss[53] * sc[24] * sc[2] * x389 +
    kf_qss[54] * ((sc[12]) * (sc[12])) * x384 + kf_qss[56] * sc[19] * sc[2] +
    2450000000.0 * sc[18] * x61 * exp(x63) / x67 + sc[20] * x27 * x35 * x51 +
    10.0e-13;
  const amrex::Real x397 = exp(-g_RT[20] + g_RT[28] + g_RT[2] - g_RT_qss[3]);
  amrex::Real x402 =
    kf_qss[69] * exp(g_RT[2] - g_RT[33] + g_RT[35] - g_RT_qss[3]);
  amrex::Real x408 =
    kf_qss[43] * exp(-g_RT[10] + g_RT[20] + g_RT[2] - g_RT_qss[3]);
  const amrex::Real x411 = exp(g_RT[16] + g_RT[7] - g_RT[9] - g_RT_qss[3]);
  const amrex::Real x414 = exp(g_RT[13] + g_RT[2] - g_RT[4] - g_RT_qss[3]);
  const amrex::Real x417 = exp(g_RT[13] + g_RT[16] - g_RT[17] - g_RT_qss[3]);
  const amrex::Real x422 = -2.0 * g_RT[10] + g_RT[11];
  const amrex::Real x429 =
    refC * sc[15] *
    exp(
      g_RT[15] - g_RT[7] - g_RT_qss[3] - 1559.97166399463 * invT - 6.3 * tc[0]);
  const amrex::Real x435 =
    exp(g_RT[16] + g_RT[2] + g_RT[4] - g_RT[9] - g_RT_qss[3]);
  const amrex::Real x437 = refCinv * sc[16];
  const amrex::Real x440 = exp(g_RT[16] - g_RT[3] + g_RT[6] - g_RT_qss[3]);
  const amrex::Real x448 = exp(g_RT[12] + g_RT[2] - g_RT[3] - g_RT_qss[3]);
  const amrex::Real x454 = exp(g_RT[10] + g_RT[2] - g_RT[6] - g_RT_qss[3]);
  amrex::Real x461 =
    kf_qss[62] * exp(g_RT[10] + g_RT[21] - g_RT[22] - g_RT_qss[3]);
  amrex::Real x466 =
    kf_qss[68] * exp(g_RT[2] - g_RT[33] + g_RT[36] - g_RT_qss[3]);
  amrex::Real x468 =
    kf_qss[27] * sc[16] * sc[6] * x440 + kf_qss[28] * sc[12] * sc[2] * x448 +
    kf_qss[29] * sc[13] * sc[2] * x414 + kf_qss[30] * sc[10] * sc[2] * x454 +
    kf_qss[31] * sc[2] * sc[4] * x435 * x437 +
    kf_qss[32] * sc[16] * sc[7] * x411 + kf_qss[36] * sc[13] * sc[16] * x417 +
    kf_qss[39] * sc[10] * sc[4] + kf_qss[44] * sc[14] * sc[2] +
    kf_qss[47] * ((sc[10]) * (sc[10])) * exp(-g_RT_qss[3] - x422) +
    kf_qss[48] * sc[23] * sc[2] + kf_qss[61] * sc[28] * sc[2] * x397 +
    sc[10] * sc[21] * x461 + sc[20] * sc[2] * x408 + sc[2] * sc[35] * x402 +
    sc[2] * sc[36] * x466 + 2.7e+26 * x106 * x429 * x88 + 10.0e-13;
  amrex::Real x469 = x113 * x392 / x72 - x468 / x110;
  amrex::Real x472 =
    kf_qss[66] * exp(g_RT[2] - g_RT[33] + g_RT[36] - g_RT_qss[2]);
  amrex::Real x475 = -g_RT[16] + g_RT[24] - g_RT_qss[2];
  amrex::Real x476 = x210 * exp(x194 + x475);
  const amrex::Real x477 = refC * x27;
  const amrex::Real x482 = exp(g_RT[13] + g_RT[2] - g_RT[4] - g_RT_qss[2]);
  amrex::Real x486 =
    kf_qss[59] * exp(-g_RT[20] + g_RT[28] + g_RT[2] - g_RT_qss[2]);
  const amrex::Real x489 = exp(g_RT[18] + g_RT[6] - 2.0 * g_RT_qss[2]);
  amrex::Real x493 =
    kf_qss[18] * exp(g_RT[10] + g_RT[2] - g_RT[6] - g_RT_qss[2]);
  const amrex::Real x496 = exp(g_RT[13] + g_RT[4] - g_RT[5] - g_RT_qss[2]);
  amrex::Real x504 =
    kf_qss[19] * exp(g_RT[12] + g_RT[4] - g_RT[9] - g_RT_qss[2]);
  amrex::Real x508 = kf_qss[20] * refCinv *
                     exp(g_RT[17] + 2.0 * g_RT[2] - g_RT[9] - g_RT_qss[2]);
  const amrex::Real x512 = exp(g_RT[12] + g_RT[2] - g_RT[3] - g_RT_qss[2]);
  amrex::Real x516 = g_RT[10] - g_RT[2] - g_RT_qss[2];
  amrex::Real x518 = 3200000000000000.0 * x180 * x477 *
                     exp(-618.95649893980499 * invT - 3.14 * tc[0] + x516);
  const amrex::Real x521 = exp(g_RT[16] + g_RT[19] - g_RT[23] - g_RT_qss[2]);
  const amrex::Real x524 = exp(-g_RT[10] + g_RT[20] + g_RT[2] - g_RT_qss[2]);
  amrex::Real x528 =
    kf_qss[67] * exp(g_RT[2] - g_RT[33] + g_RT[35] - g_RT_qss[2]);
  amrex::Real x530 = exp(g_RT[18] + g_RT[2] - g_RT_qss[1] - g_RT_qss[2]);
  amrex::Real x534 =
    kf_qss[15] * sc[12] * sc[2] * x512 + kf_qss[16] * sc[13] * sc[2] * x482 +
    kf_qss[21] * sc[13] * sc[4] * x496 + kf_qss[22] * sc[18] * sc[2] * x530 +
    2.0 * kf_qss[23] * sc[18] * sc[6] * x489 + kf_qss[38] * sc[10] * sc[4] +
    kf_qss[42] * sc[20] * sc[2] * x524 +
    kf_qss[46] * ((sc[10]) * (sc[10])) * exp(-g_RT_qss[2] - x422) +
    kf_qss[50] * sc[16] * sc[19] * x521 + kf_qss[51] * sc[18] * sc[3] +
    kf_qss[55] * sc[24] * sc[3] + kf_qss[57] * sc[20] * sc[3] +
    sc[10] * sc[2] * x493 + sc[10] * x518 + sc[12] * sc[4] * x504 +
    sc[17] * ((sc[2]) * (sc[2])) * x508 + 2.69e+21 * sc[24] * x476 * x477 +
    sc[28] * sc[2] * x486 + sc[2] * sc[35] * x528 + sc[2] * sc[36] * x472 +
    10.0e-13;
  amrex::Real x535 = -x285 * x469 - x534 / x214;
  const amrex::Real x537 = exp(g_RT[2] - g_RT[33] + g_RT[37] - g_RT_qss[1]);
  amrex::Real x542 = exp(-g_RT[16] + g_RT[23] - g_RT_qss[1] + x118);
  const amrex::Real x547 = exp(g_RT[12] + g_RT[2] - g_RT[4] - g_RT_qss[1]);
  const amrex::Real x551 = exp(g_RT[16] + g_RT[2] - g_RT[3] - g_RT_qss[1]);
  const amrex::Real x554 = exp(-g_RT[10] + g_RT[19] + g_RT[2] - g_RT_qss[1]);
  amrex::Real x558 =
    kf_qss[14] * exp(g_RT[12] + g_RT[16] - g_RT[17] - g_RT_qss[1]);
  amrex::Real x561 = -g_RT[3] + g_RT[9];
  const amrex::Real x562 = exp(g_RT[12] - g_RT_qss[1] - x561);
  amrex::Real x566 =
    kf_qss[37] * exp(-g_RT[13] + g_RT[24] + g_RT[2] - g_RT_qss[1]);
  const amrex::Real x570 = exp(-g_RT[20] + g_RT[27] + g_RT[2] - g_RT_qss[1]);
  const amrex::Real x574 = exp(g_RT[12] + g_RT[32] - g_RT[33] - g_RT_qss[1]);
  amrex::Real x578 =
    kf_qss[12] * exp(g_RT[13] + g_RT[2] - g_RT[7] - g_RT_qss[1]);
  const amrex::Real x580 = exp(g_RT[16] + g_RT[18] - g_RT[23] - g_RT_qss[1]);
  const amrex::Real x583 = exp(-g_RT[11] + g_RT[20] + g_RT[2] - g_RT_qss[1]);
  amrex::Real x586 =
    kf_qss[10] * sc[12] * sc[2] * x547 + kf_qss[13] * sc[12] * sc[3] * x562 +
    kf_qss[22] * sc[18] * sc[2] * x530 + kf_qss[41] * sc[19] * sc[2] * x554 +
    kf_qss[45] * sc[20] * sc[2] * x583 + kf_qss[49] * sc[16] * sc[18] * x580 +
    kf_qss[58] * sc[27] * sc[2] * x570 + kf_qss[64] * sc[2] * sc[37] * x537 +
    kf_qss[65] * sc[12] * sc[32] * x574 + kf_qss[9] * sc[16] * sc[2] * x551 +
    sc[12] * sc[16] * x558 + sc[13] * sc[2] * x578 +
    2.69e+16 * sc[23] * x135 * x477 * x542 + sc[24] * sc[2] * x566 + 10.0e-13;
  amrex::Real x587 = -x354 * x469 - x363 * x535 - x586 / x148;
  const amrex::Real x588 = exp(-g_RT[10] + g_RT[18] + g_RT[2] - g_RT_qss[0]);
  amrex::Real x593 = kf_qss[7] * exp(g_RT[16] - g_RT_qss[0] - x561);
  const amrex::Real x595 = exp(g_RT[16] + g_RT[2] - g_RT[4] - g_RT_qss[0]);
  const amrex::Real x599 = exp(g_RT[16] + g_RT[32] - g_RT[33] - g_RT_qss[0]);
  amrex::Real x602 =
    kf_qss[40] * sc[18] * sc[2] * x588 + kf_qss[63] * sc[16] * sc[32] * x599 +
    kf_qss[6] * sc[16] * sc[2] * x595 + sc[16] * sc[3] * x593 + 10.0e-13;
  amrex::Real x606 = (-x261 * x587 - x602 / x258) /
                     ((-x234 * x257 / x258 + 1) * (-x234 * x257 / x258 + 1));
  const amrex::Real x607 =
    x606 * (x371 * x374 + x232 * x255 * x261 / ((x148) * (x148)));
  x586 = x586 / ((x148) * (x148));
  amrex::Real x609 = x392 / ((x72) * (x72));
  x468 = x468 / ((x110) * (x110));
  amrex::Real x612 =
    x392 * (kf_qss[60] * sc[11] * x56 + 10.0e-13) / (((x110) * (x110)) * x72);
  x102 = 2.7e+26 * x106 * x429 * x88 * x95 / ((x102) * (x102));
  const amrex::Real x615 = refC * sc[15] * x88 *
                           exp(
                             g_RT[15] - g_RT[7] - g_RT_qss[3] -
                             3119.9433279892601 * invT - 12.6 * tc[0]);
  amrex::Real x616 = -x102 * (2.0 * x271 + 0.121602454932911 * ((x97) * (x97)) /
                                             (x88 * ((x99) * (x99) * (x99)))) +
                     2.7e+26 * x106 * x429 - 7.29e+52 * x280 * x615;
  amrex::Real x617 = -x616 / x110;
  x47 = sc[20] * x27 * x35 * x38 * x51 / ((x47) * (x47));
  amrex::Real x622 =
    sc[20] * x330 * exp(-100502.432494519 * invT - 18.62 * tc[0]);
  amrex::Real x623 = sc[18] * exp(x63) / x67;
  amrex::Real x624 = sc[18] * x61 *
                     exp(-50019.736580989098 * invT - 1.28 * tc[0]) /
                     (kf_qss[5] * ((x67) * (x67)));
  amrex::Real x626 =
    (4.9e+44 * sc[20] * x51 * exp(x32) - x47 * (1.4 * x325 + 0.196 * x326) -
     3.43e+89 * x622 + 2450000000.0 * x623 - 6.0025e+18 * x624) /
    x72;
  amrex::Real x627 =
    -x113 * x338 * x609 + x113 * x626 + x283 * x468 - x283 * x612 + x617;
  amrex::Real x630 = x150 * x345 * x469 / x148;
  x131 = 2.69e+16 * sc[23] * x124 * x135 * x477 * x542 / ((x131) * (x131));
  amrex::Real x633 = refC * sc[23] * x135 * x542;
  const amrex::Real x634 = sc[23] * x477 *
                           exp(
                             -g_RT[16] + g_RT[23] - g_RT_qss[1] -
                             1948.4549299958701 * invT - 7.48 * tc[0]);
  x534 = x534 / ((x214) * (x214));
  const amrex::Real x640 = refC * sc[24];
  amrex::Real x642 =
    x297 * x640 * exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x475);
  amrex::Real x643 = refC * sc[10] * x180 *
                     exp(-618.95649893980499 * invT - 3.14 * tc[0] + x516);
  x176 = sc[10] * x169 * x518 / ((x176) * (x176));
  x207 = 2.69e+21 * sc[24] * x199 * x476 * x477 / ((x207) * (x207));
  amrex::Real x650 = x160 * x345 * x469 / x214;
  x317 =
    -kf_qss[25] * x115 * x469 / x214 +
    x115 * x160 * x317 * x469 / ((x214) * (x214)) - x285 * x627 + x317 * x534 +
    x344 * x650 -
    (-7.168e+30 * refC * sc[10] * x292 *
       exp(-1237.91299787961 * invT - 6.28 * tc[0] + x516) -
     x176 * (1.4 * x171 * x240 + 0.196 * x240 * x310) -
     x207 * (1.4 * x202 * x240 + 0.196 * x240 * x303) +
     1.883e+21 * x476 * x640 - 5.06527e+42 * x642 + 2240000000000000.0 * x643) /
      x214;
  amrex::Real x653 = x535 / x217;
  x159 = x159 * x535 / ((x217) * (x217));
  x370 = x115 * x150 * x255 * x469 / ((x148) * (x148)) + x159 * x349 +
         x255 * x586 - x317 * x363 + x344 * x630 - x354 * x627 - x370 * x653 -
         (-x131 * (0.196 * x126 * x240 + 1.4 * x238 * x240) -
          5.06527e+32 * x253 * x634 + 1.883e+16 * x633) /
           x148;
  amrex::Real x657 = x257 * x587 / (((x227) * (x227)) * x258);
  amrex::Real x658 = (1.0 / ((-x234 * x257 / x258 + 1)));
  const amrex::Real x659 = x658 * (-x261 * x370 + x371 * x657);
  amrex::Real x663 = x247 * (0.28 * x126 * x240 + 2.0 * x238 * x240) -
                     2.69e+16 * x249 + 7.2361e+32 * x252 * x253;
  amrex::Real x666 = -kf_qss[24] + x282;
  x41 = 2.0 * x240 * x41 / ((x45) * (x45)) + 0.28 * x326;
  x45 = x329 * x41 + 4.9e+89 * x333 + 6.0025e+18 * x336 - 7.0e+44 * x53 -
        2450000000.0 * x69;
  amrex::Real x671 = x341 * x45 + x343 * x666;
  amrex::Real x674 =
    sc[2] * x292 * exp(-1237.91299787961 * invT - 6.28 * tc[0]);
  amrex::Real x676 =
    -sc[16] * x196 * x210 - sc[2] * x166 * x180 + 7.2361e+42 * x300 +
    x308 * (2.0 * x202 * x240 + 0.28 * x240 * x303) +
    x314 * (2.0 * x171 * x240 + 0.28 * x240 * x310) + 1.024e+31 * x674;
  amrex::Real x677 = -kf_qss[24] * x1 + x676;
  amrex::Real x679 = x160 * x220 / ((x214) * (x214));
  amrex::Real x680 = -kf_qss[24] * x220 / x214 - x357 * x677 + x358 * x666 +
                     x361 * x671 + x677 * x679;
  amrex::Real x681 = x117 * x150 * x663 / ((x148) * (x148)) - x366 * x663;
  amrex::Real x684 = x117 * x160 / ((x214) * (x214));
  amrex::Real x685 = -kf_qss[24] * x1 * x321 - kf_qss[24] * x117 / x214 +
                     x288 * x666 + x348 * x671 + x677 * x684;
  amrex::Real x686 =
    -x226 * (-kf_qss[24] * x1 * x368 + x367 * x666 + x369 * x671 + x681) +
    x352 * x685 + x356 * x666 - x363 * x680 + x364 * x671 +
    x150 * x220 * x663 / ((x148) * (x148));
  const amrex::Real x687 =
    x606 * (x374 * x686 + x232 * x261 * x663 / ((x148) * (x148)));
  amrex::Real x689 = -x113 * x45 * x609;
  amrex::Real x690 = sc[20] * x35 * x51 - x41 * x47 - 4.9e+89 * x622;
  amrex::Real x691 = 2450000000.0 * x623 - 6.0025e+18 * x624 + x690;
  amrex::Real x693 = x113 * x691 / x72;
  amrex::Real x696 = x468 * x666 - x612 * x666 + x617 + x689 + x693;
  x292 =
    refC * sc[10] * x292 * exp(-1237.91299787961 * invT - 6.28 * tc[0] + x516);
  amrex::Real x699 = -x176 * (2.0 * x171 * x240 + 0.28 * x240 * x310) -
                     x207 * (2.0 * x202 * x240 + 0.28 * x240 * x303) -
                     1.024e+31 * x292 + 2.69e+21 * x476 * x640 -
                     7.2361e+42 * x642 + 3200000000000000.0 * x643;
  amrex::Real x700 = -x699 / x214;
  amrex::Real x701 = x115 * x160 * x469 / ((x214) * (x214));
  x677 = -kf_qss[24] * x115 * x469 / x214 - x285 * x696 + x534 * x677 +
         x650 * x671 + x677 * x701 + x700;
  amrex::Real x703 = -x131 * (0.28 * x126 * x240 + 2.0 * x238 * x240) -
                     7.2361e+32 * x253 * x634 + 2.69e+16 * x633;
  amrex::Real x704 = -x703 / x148;
  amrex::Real x705 = x115 * x150 * x469 / ((x148) * (x148));
  amrex::Real x706 = x586 * x663 + x663 * x705;
  amrex::Real x708 =
    x159 * x685 - x354 * x696 - x363 * x677 + x630 * x671 -
    x653 * (-kf_qss[24] * x1 * x368 + x367 * x666 + x369 * x671 + x681) + x704 +
    x706;
  const amrex::Real x709 = x658 * (-x261 * x708 + x657 * x686);
  amrex::Real x710 = -kf_qss[8] + x663;
  amrex::Real x711 = x232 * x261 / ((x148) * (x148));
  amrex::Real x713 = x150 * x220 / ((x148) * (x148));
  x166 = -x155 - x166 * x180 * x27 + x676;
  x180 = -kf_qss[26] + x282;
  amrex::Real x717 = x180 * x343 + x341 * (-kf_qss[52] + x45);
  amrex::Real x719 = x117 * x150 / ((x148) * (x148));
  x155 = -kf_qss[26] * x117 / x148 + x180 * x367 - x366 * x710 + x369 * x717 +
         x710 * x719 + x155 / x148;
  amrex::Real x721 = x166 * x684 + x180 * x288 + x348 * x717;
  amrex::Real x722 =
    -kf_qss[26] * x220 / x148 - x155 * x226 + x180 * x356 + x352 * x721 -
    x363 * (-x166 * x357 + x166 * x679 + x180 * x358 + x361 * x717) +
    x364 * x717 + x710 * x713;
  const amrex::Real x723 =
    x606 * (-kf_qss[8] * x234 / x258 + x374 * x722 + x710 * x711);
  amrex::Real x726 =
    -x113 * x609 * (-kf_qss[52] + x45) +
    x113 *
      (kf_qss[52] * sc[18] * x379 + kf_qss[53] * sc[24] * x389 +
       kf_qss[56] * sc[19] + x691) /
      x72 +
    x180 * x468 - x180 * x612 -
    (kf_qss[28] * sc[12] * x448 + kf_qss[29] * sc[13] * x414 +
     kf_qss[30] * sc[10] * x454 + kf_qss[31] * sc[4] * x435 * x437 +
     kf_qss[44] * sc[14] + kf_qss[48] * sc[23] + kf_qss[61] * sc[28] * x397 +
     sc[20] * x408 + sc[35] * x402 + sc[36] * x466 + x616) /
      x110;
  amrex::Real x728 = x166 * x534 + x166 * x701 - x285 * x726 + x650 * x717 -
                     (kf_qss[15] * sc[12] * x512 + kf_qss[16] * sc[13] * x482 +
                      kf_qss[22] * sc[18] * x530 + kf_qss[42] * sc[20] * x524 +
                      sc[10] * x493 + 2.0 * sc[17] * ((sc[2])) * x508 +
                      sc[28] * x486 + sc[35] * x528 + sc[36] * x472 + x699) /
                       x214;
  x155 = -kf_qss[26] * x115 * x469 / x148 - x155 * x653 + x159 * x721 -
         x354 * x726 - x363 * x728 + x586 * x710 + x630 * x717 + x705 * x710 -
         (kf_qss[10] * sc[12] * x547 + kf_qss[22] * sc[18] * x530 +
          kf_qss[41] * sc[19] * x554 + kf_qss[45] * sc[20] * x583 +
          kf_qss[58] * sc[27] * x570 + kf_qss[64] * sc[37] * x537 +
          kf_qss[9] * sc[16] * x551 + sc[13] * x578 + sc[24] * x566 + x703) /
           x148;
  const amrex::Real x730 =
    x658 * (-kf_qss[8] * x587 / (x227 * x258) - x155 * x261 + x657 * x722 -
            (kf_qss[40] * sc[18] * x588 + kf_qss[6] * sc[16] * x595) / x258);
  amrex::Real x731 = -kf_qss[9] + x663;
  amrex::Real x732 = -kf_qss[27] - kf_qss[28] + x282;
  amrex::Real x733 = x341 * x45 + x343 * x732;
  amrex::Real x736 = -x357 * (-kf_qss[15] + x676) + x358 * x732 + x361 * x733 +
                     x679 * (-kf_qss[15] + x676);
  amrex::Real x737 = x288 * x732 + x348 * x733 + x684 * (-kf_qss[15] + x676);
  amrex::Real x738 =
    -x226 * (-x366 * x731 + x367 * x732 + x369 * x733 + x719 * x731) +
    x352 * x737 + x356 * x732 - x363 * x736 + x364 * x733 + x713 * x731;
  const amrex::Real x739 = x606 * (x374 * x738 + x711 * x731);
  amrex::Real x740 = x468 * x732 - x612 * x732 + x617 + x689 + x693;
  amrex::Real x741 =
    -x285 * x740 + x534 * (-kf_qss[15] + x676) + x650 * x733 +
    x701 * (-kf_qss[15] + x676) -
    (kf_qss[51] * sc[18] + kf_qss[55] * sc[24] + kf_qss[57] * sc[20] + x699) /
      x214;
  amrex::Real x742 =
    x159 * x737 - x354 * x740 - x363 * x741 + x586 * x731 + x630 * x733 -
    x653 * (-x366 * x731 + x367 * x732 + x369 * x733 + x719 * x731) +
    x705 * x731 - (kf_qss[13] * sc[12] * x562 + x703) / x148;
  const amrex::Real x743 =
    x658 * (-sc[16] * x593 / x258 - x261 * x742 + x657 * x738);
  amrex::Real x744 = -kf_qss[10] + x663;
  amrex::Real x745 = -kf_qss[29] + x282;
  amrex::Real x747 = x341 * (-kf_qss[53] + x45) + x343 * x745;
  amrex::Real x748 = -kf_qss[16] - kf_qss[17] + x676;
  amrex::Real x750 =
    kf_qss[17] / x148 - x366 * x744 + x367 * x745 + x369 * x747 + x719 * x744;
  amrex::Real x751 = x288 * x745 + x348 * x747 + x684 * x748;
  amrex::Real x752 =
    -x226 * x750 + x352 * x751 + x356 * x745 -
    x363 * (-x357 * x748 + x358 * x745 + x361 * x747 + x679 * x748) +
    x364 * x747 + x713 * x744;
  const amrex::Real x756 =
    x606 *
    (-kf_qss[6] * x234 * x257 / ((x258) * (x258)) + x374 * x752 + x711 * x744);
  amrex::Real x759 =
    -x113 * x609 * (-kf_qss[53] + x45) + x468 * x745 - x612 * x745 + x693 -
    (kf_qss[31] * sc[2] * x435 * x437 + kf_qss[39] * sc[10] + x616) / x110;
  amrex::Real x760 =
    -x285 * x759 + x534 * x748 + x650 * x747 + x701 * x748 -
    (kf_qss[21] * sc[13] * x496 + kf_qss[38] * sc[10] + sc[12] * x504 + x699) /
      x214;
  x750 = x159 * x751 - x354 * x759 - x363 * x760 + x586 * x744 + x630 * x747 -
         x653 * x750 + x704 + x705 * x744;
  const amrex::Real x763 =
    x658 * (-kf_qss[6] * x602 / ((x258) * (x258)) -
            kf_qss[6] * x257 * x587 / (x227 * ((x258) * (x258))) - x261 * x750 +
            x657 * x752);
  amrex::Real x764 = -kf_qss[21] + x676;
  amrex::Real x767 = x282 * x343 + x341 * x45;
  amrex::Real x768 = x282 * x358 + x361 * x767;
  amrex::Real x772 = x282 * x288 + x348 * x767;
  amrex::Real x776 = x282 * x367 + x369 * x767;
  amrex::Real x780 = -x226 * (x681 + x776) + x282 * x356 + x364 * x767 +
                     x150 * x220 * x663 / ((x148) * (x148));
  amrex::Real x781 = x352 * (x684 * x764 + x772) -
                     x363 * (-x357 * x764 + x679 * x764 + x768) + x780;
  const amrex::Real x782 =
    x606 * (x374 * x781 + x232 * x261 * x663 / ((x148) * (x148)));
  amrex::Real x785 = x282 * x468 - x282 * x612;
  amrex::Real x786 = x689 + x693 + x785;
  amrex::Real x792 =
    -x285 * (x617 + x786) + x534 * x764 + x650 * x767 + x700 + x701 * x764;
  amrex::Real x793 = x159 * (x684 * x764 + x772) - x354 * (x617 + x786) -
                     x363 * x792 + x630 * x767 - x653 * (x681 + x776) + x704 +
                     x706;
  const amrex::Real x794 = x658 * (-x261 * x793 + x657 * x781);
  amrex::Real x800 = -5.38e+16 * sc[16] * x135 * exp(x118) +
                     x247 * (0.56 * x126 * x240 + 4.0 * x238 * x240) +
                     1.44722e+33 * x252 * x253;
  amrex::Real x801 = -kf_qss[11] - kf_qss[26] * x139 + x800;
  amrex::Real x803 =
    0.43429448190325198 * ((x97) * (x97)) / (x88 * ((x99) * (x99) * (x99)));
  amrex::Real x808 =
    -5.4e+26 * sc[7] * x106 * x90 +
    x274 * (0.56 * x803 + 1.7371779276130079 * x97 / (x88 * ((x99) * (x99)))) +
    1.458e+53 * x279 * x280;
  amrex::Real x809 = -kf_qss[30] + x808;
  amrex::Real x813 = 9.8e+89 * refCinv * sc[6] * x330 *
                       exp(-100502.432494519 * invT - 18.62 * tc[0] + x31) +
                     x329 * (4.0 * x325 + 0.56 * x326) + 1.2005e+19 * x336 -
                     1.4e+45 * x53 - 4900000000.0 * x69;
  amrex::Real x814 =
    -kf_qss[56] * x18 - 7.0e+44 * refCinv * x27 * x51 * exp(x31 + x32) + x813;
  amrex::Real x816 = x345 * (x341 * x814 + x343 * x809);
  amrex::Real x818 = x117 * x150 * x801 / ((x148) * (x148)) - x366 * x801 +
                     x367 * x809 + x12 * x150 * x816 / (x110 * x148);
  amrex::Real x821 = -5.38e+21 * sc[16] * x210 * exp(x194) +
                     1.44722e+43 * x300 +
                     x308 * (4.0 * x202 * x240 + 0.56 * x240 * x303) +
                     x314 * (4.0 * x171 * x240 + 0.56 * x240 * x310) -
                     6400000000000000.0 * x315 + 2.048e+31 * x674;
  amrex::Real x824 = kf_qss[11] / x214 - kf_qss[26] * x139 * x321 -
                     x357 * (-kf_qss[18] + x821) + x358 * x809 +
                     x679 * (-kf_qss[18] + x821) +
                     x160 * x219 * x816 / (x110 * x214);
  amrex::Real x825 = x288 * x809 + x684 * (-kf_qss[18] + x821) +
                     x12 * x160 * x816 / (x110 * x214);
  amrex::Real x826 = -kf_qss[26] * x139 * x368 - x226 * x818 + x352 * x825 +
                     x356 * x809 - x363 * x824 +
                     x150 * x220 * x801 / ((x148) * (x148)) +
                     x150 * x219 * x816 / (x110 * x148);
  const amrex::Real x829 =
    x606 * (-kf_qss[8] * x229 * x234 * x257 / ((x258) * (x258)) -
            kf_qss[8] * x229 * x261 / x148 + x374 * x826 +
            x232 * x261 * x801 / ((x148) * (x148)));
  const amrex::Real x830 = refC * sc[23] * x542;
  amrex::Real x831 = -(-x131 * (0.56 * x126 * x240 + 4.0 * x238 * x240) +
                       5.38e+16 * x135 * x830 - 1.44722e+33 * x253 * x634) /
                     x148;
  x97 =
    -x102 * (0.56 * x803 + 1.7371779276130079 * x97 / (x88 * ((x99) * (x99)))) +
    5.4e+26 * x106 * x429 - 1.458e+53 * x280 * x615;
  x99 =
    (-9.8e+89 * sc[20] * x330 * exp(-100502.432494519 * invT - 18.62 * tc[0]) +
     1.4e+45 * sc[20] * x51 * exp(x32) - x47 * (4.0 * x325 + 0.56 * x326) +
     4900000000.0 * x623 - 1.2005e+19 * x624) /
    x72;
  x330 = -x113 * x609 * x814 + x113 * x99 + x468 * x809 - x612 * x809 -
         (kf_qss[27] * sc[16] * x440 + x97) / x110;
  amrex::Real x839 = -x176 * (4.0 * x171 * x240 + 0.56 * x240 * x310) -
                     x207 * (4.0 * x202 * x240 + 0.56 * x240 * x303) -
                     2.048e+31 * x292 + 5.38e+21 * x476 * x640 -
                     1.44722e+43 * x642 + 6400000000000000.0 * x643;
  amrex::Real x840 = x160 * x469 * x816 / x214 - x285 * x330 +
                     x534 * (-kf_qss[18] + x821) + x701 * (-kf_qss[18] + x821) -
                     (2.0 * kf_qss[23] * sc[18] * x489 + x839) / x214;
  x816 = x159 * x825 - x330 * x354 - x363 * x840 + x586 * x801 - x653 * x818 +
         x705 * x801 + x831 + x150 * x469 * x816 / x148;
  x818 = x257 * x587 / (x227 * ((x258) * (x258)));
  const amrex::Real x843 = x658 * (-kf_qss[8] * x229 * x818 -
                                   kf_qss[8] * x229 * x602 / ((x258) * (x258)) -
                                   x261 * x816 + x657 * x826);
  amrex::Real x849 = -kf_qss[12] - x145 +
                     x247 * (1.68 * x126 * x240 + 12.0 * x238 * x240) -
                     1.614e+17 * x249 + 4.34166e+33 * x252 * x253;
  amrex::Real x851 = -kf_qss[33] - kf_qss[39] * x86 - kf_qss[44] * x78 -
                     1.62e+27 * sc[7] * x106 * x90 - x106 * x92 +
                     x274 * (12.0 * x271 + 1.68 * x803) +
                     4.374e+53 * x279 * x280;
  amrex::Real x856 =
    -kf_qss[33] * x1 -
    kf_qss[38] * exp(-g_RT[10] - g_RT[4] + g_RT[7] + g_RT_qss[2]) -
    1.614e+22 * sc[16] * x210 * exp(x194) + 4.34166e+43 * x300 +
    x308 * (12.0 * x202 * x240 + 1.68 * x240 * x303) +
    x314 * (12.0 * x171 * x240 + 1.68 * x240 * x310) - 1.92e+16 * x315 +
    6.144e+31 * x674;
  amrex::Real x858 = x329 * (12.0 * x325 + 1.68 * x326) + 2.94e+90 * x333 +
                     3.6015e+19 * x336 - 4.2e+45 * x53 - 14700000000.0 * x69;
  amrex::Real x859 = x341 * x858 + x343 * x851;
  x145 = -kf_qss[33] * x220 / x214 + x145 / x214 - x357 * x856 + x358 * x851 +
         x361 * x859 + x679 * x856;
  amrex::Real x861 = -kf_qss[33] * x1 * x368 - x366 * x849 + x367 * x851 +
                     x369 * x859 + x719 * x849;
  amrex::Real x862 = -kf_qss[33] * x1 * x321 - kf_qss[33] * x117 / x214 +
                     x288 * x851 + x348 * x859 + x684 * x856;
  amrex::Real x863 = -x145 * x363 - x226 * x861 + x352 * x862 + x356 * x851 +
                     x364 * x859 + x713 * x849;
  const amrex::Real x864 = x606 * (x374 * x863 + x711 * x849);
  amrex::Real x866 =
    (4.2e+45 * sc[20] * x51 * exp(x32) - x47 * (12.0 * x325 + 1.68 * x326) -
     2.94e+90 * x622 + 14700000000.0 * x623 - 3.6015e+19 * x624) /
    x72;
  amrex::Real x867 =
    -x113 * x609 * x858 + x113 * x866 + x468 * x851 - x612 * x851 -
    (kf_qss[32] * sc[16] * x411 - x102 * (12.0 * x271 + 1.68 * x803) +
     1.62e+27 * x106 * x429 - 4.374e+53 * x280 * x615) /
      x110;
  x856 = -kf_qss[33] * x115 * x469 / x214 - x285 * x867 + x534 * x856 +
         x650 * x859 + x701 * x856 -
         (-x176 * (12.0 * x171 * x240 + 1.68 * x240 * x310) -
          x207 * (12.0 * x202 * x240 + 1.68 * x240 * x303) - 6.144e+31 * x292 +
          1.614e+22 * x476 * x640 - 4.34166e+43 * x642 + 1.92e+16 * x643) /
           x214;
  x861 = x159 * x862 - x354 * x867 - x363 * x856 + x586 * x849 + x630 * x859 -
         x653 * x861 + x705 * x849 -
         (-x131 * (1.68 * x126 * x240 + 12.0 * x238 * x240) -
          4.34166e+33 * x253 * x634 + 1.614e+17 * x633) /
           x148;
  const amrex::Real x871 = x658 * (-x261 * x861 + x657 * x863);
  amrex::Real x872 = -x357 * x676 + x676 * x679;
  amrex::Real x875 = x282 * x288 + x348 * x767 + x676 * x684;
  x780 = x352 * x875 - x363 * (x768 + x872) + x780;
  const amrex::Real x877 =
    x606 * (x374 * x780 + x232 * x261 * x663 / ((x148) * (x148)));
  amrex::Real x879 = x159 * x875 + x630 * x767 - x653 * (x681 + x776);
  amrex::Real x880 = x704 + x706 + x879;
  amrex::Real x882 = x534 * x676 + x650 * x767 + x676 * x701 + x700;
  amrex::Real x884 =
    -x354 * (x617 + x786) - x363 * (-x285 * (x617 + x786) + x882);
  amrex::Real x886 = x657 * x780;
  const amrex::Real x887 = x658 * (-x261 * (x880 + x884) + x886);
  amrex::Real x889 = -kf_qss[13] + x663;
  amrex::Real x890 = -kf_qss[31] - kf_qss[32] + x282;
  amrex::Real x892 = x341 * (-kf_qss[54] + x45) + x343 * x890;
  amrex::Real x893 = -kf_qss[19] - kf_qss[20] + x676;
  amrex::Real x894 = x288 * x890 + x348 * x892 + x684 * x893;
  amrex::Real x897 =
    -x226 * (-x366 * x889 + x367 * x890 + x369 * x892 + x719 * x889) +
    x352 * x894 + x356 * x890 -
    x363 * (-x357 * x893 + x358 * x890 + x361 * x892 + x679 * x893) +
    x364 * x892 + x713 * x889;
  const amrex::Real x898 =
    x606 *
    (-kf_qss[7] * x234 * x257 / ((x258) * (x258)) + x374 * x897 + x711 * x889);
  amrex::Real x900 = -x113 * x609 * (-kf_qss[54] + x45) + x468 * x890 -
                     x612 * x890 + x617 + x693;
  amrex::Real x902 =
    x159 * x894 - x354 * x900 -
    x363 * (-x285 * x900 + x534 * x893 + x650 * x892 + x700 + x701 * x893) +
    x586 * x889 + x630 * x892 -
    x653 * (-x366 * x889 + x367 * x890 + x369 * x892 + x719 * x889) + x704 +
    x705 * x889;
  const amrex::Real x903 =
    x658 * (-kf_qss[7] * x818 - kf_qss[7] * x602 / ((x258) * (x258)) -
            x261 * x902 + x657 * x897);
  amrex::Real x904 = -kf_qss[41] + x663;
  amrex::Real x905 = -kf_qss[43] + x282;
  amrex::Real x906 = x341 * x45 + x343 * x905;
  amrex::Real x909 = -x357 * (-kf_qss[42] + x676) + x358 * x905 + x361 * x906 +
                     x679 * (-kf_qss[42] + x676);
  amrex::Real x910 = x288 * x905 + x348 * x906 + x684 * (-kf_qss[42] + x676);
  amrex::Real x911 =
    -x226 * (-x366 * x904 + x367 * x905 + x369 * x906 + x719 * x904) +
    x352 * x910 + x356 * x905 - x363 * x909 + x364 * x906 + x713 * x904;
  const amrex::Real x912 =
    x606 *
    (-kf_qss[40] * x234 * x257 / ((x258) * (x258)) + x374 * x911 + x711 * x904);
  amrex::Real x915 = x468 * x905 - x612 * x905 + x689 + x693 -
                     (kf_qss[30] * sc[2] * x454 + kf_qss[39] * sc[4] +
                      2.0 * kf_qss[47] * ((sc[10])) * exp(-g_RT_qss[3] - x422) +
                      sc[21] * x461 + x616) /
                       x110;
  x493 = -x285 * x915 + x534 * (-kf_qss[42] + x676) + x650 * x906 +
         x701 * (-kf_qss[42] + x676) -
         (kf_qss[38] * sc[4] +
          2.0 * kf_qss[46] * ((sc[10])) * exp(-g_RT_qss[2] - x422) +
          sc[2] * x493 + x518 + x699) /
           x214;
  x518 = x159 * x910 - x354 * x915 - x363 * x493 + x586 * x904 + x630 * x906 -
         x653 * (-x366 * x904 + x367 * x905 + x369 * x906 + x719 * x904) +
         x704 + x705 * x904;
  const amrex::Real x918 =
    x658 * (-kf_qss[40] * x818 - kf_qss[40] * x602 / ((x258) * (x258)) -
            x261 * x518 + x657 * x911);
  amrex::Real x919 = -kf_qss[45] + x800;
  amrex::Real x920 = -kf_qss[47] + x808;
  amrex::Real x923 = -kf_qss[60] * x56 * x74 / x110 +
                     x341 * (-kf_qss[60] * x56 + x813) + x343 * x920;
  amrex::Real x925 = x288 * x920 + x348 * x923 + x684 * (-kf_qss[46] + x821);
  amrex::Real x927 = -x357 * (-kf_qss[46] + x821) + x358 * x920 + x361 * x923 +
                     x679 * (-kf_qss[46] + x821);
  amrex::Real x928 =
    -x226 * (-x366 * x919 + x367 * x920 + x369 * x923 + x719 * x919) +
    x352 * x925 + x356 * x920 - x363 * x927 + x364 * x923 + x713 * x919;
  const amrex::Real x929 = x606 * (x374 * x928 + x711 * x919);
  amrex::Real x932 = kf_qss[60] * x392 * x56 / (x110 * x72) -
                     x113 * x609 * (-kf_qss[60] * x56 + x813) + x113 * x99 +
                     x468 * x920 - x612 * x920 - x97 / x110;
  amrex::Real x933 = -x285 * x932 + x534 * (-kf_qss[46] + x821) + x650 * x923 +
                     x701 * (-kf_qss[46] + x821) - x839 / x214;
  amrex::Real x934 =
    x159 * x925 - x354 * x932 - x363 * x933 + x586 * x919 + x630 * x923 -
    x653 * (-x366 * x919 + x367 * x920 + x369 * x923 + x719 * x919) +
    x705 * x919 + x831;
  const amrex::Real x935 = x658 * (-x261 * x934 + x657 * x928);
  amrex::Real x939 =
    x113 * (2.0 * kf_qss[54] * ((sc[12])) * x384 + x691) / x72 + x689 + x785 -
    (kf_qss[28] * sc[2] * x448 + x616) / x110;
  amrex::Real x940 = x534 * x676 + x650 * x767 + x676 * x701;
  x504 = -x285 * x939 + x940 -
         (kf_qss[15] * sc[2] * x512 + sc[4] * x504 + x699) / x214;
  amrex::Real x944 = -x354 * x939 - x363 * x504 + x706 + x879 -
                     (kf_qss[10] * sc[2] * x547 + kf_qss[13] * sc[3] * x562 +
                      kf_qss[65] * sc[32] * x574 + sc[16] * x558 + x703) /
                       x148;
  const amrex::Real x945 = x658 * (-x261 * x944 + x886);
  amrex::Real x946 = -kf_qss[37] + x663;
  amrex::Real x947 =
    -kf_qss[57] * exp(g_RT[13] - g_RT[20] - g_RT[3] + g_RT_qss[2]) + x676;
  amrex::Real x952 = -x226 * (-x366 * x946 + x719 * x946 + x776) + x282 * x356 +
                     x352 * (x684 * x947 + x772) -
                     x363 * (-x357 * x947 + x679 * x947 + x768) + x364 * x767 +
                     x713 * x946;
  const amrex::Real x953 = x606 * (x374 * x952 + x711 * x946);
  amrex::Real x954 =
    x786 -
    (kf_qss[29] * sc[2] * x414 + kf_qss[36] * sc[16] * x417 + x616) / x110;
  amrex::Real x956 =
    -x285 * x954 + x534 * x947 + x650 * x767 + x701 * x947 -
    (kf_qss[16] * sc[2] * x482 + kf_qss[21] * sc[4] * x496 + x699) / x214;
  x578 = x159 * (x684 * x947 + x772) - x354 * x954 - x363 * x956 + x586 * x946 +
         x630 * x767 - x653 * (-x366 * x946 + x719 * x946 + x776) +
         x705 * x946 - (sc[2] * x578 + x703) / x148;
  const amrex::Real x958 = x658 * (-x261 * x578 + x657 * x952);
  amrex::Real x959 = x786 - (kf_qss[44] * sc[2] + x616) / x110;
  const amrex::Real x962 =
    x658 *
    (-x261 * (-x354 * x959 - x363 * (-x285 * x959 + x882) + x880) + x886);
  const amrex::Real x965 =
    2.7e+26 * refC * x88 *
    exp(
      g_RT[15] - g_RT[7] - g_RT_qss[3] - 1559.97166399463 * invT - 6.3 * tc[0]);
  amrex::Real x966 = x786 - (x106 * x965 + x616) / x110;
  const amrex::Real x969 =
    x658 *
    (-x261 * (-x354 * x966 - x363 * (-x285 * x966 + x882) + x880) + x886);
  amrex::Real x974 = -x121 * x135 +
                     x247 * (0.42 * x126 * x240 + 3.0 * x238 * x240) -
                     4.035e+16 * x249 + 1.085415e+33 * x252 * x253;
  amrex::Real x978 = -1.05e+45 * refCinv * sc[6] * x51 * exp(x31 + x32) +
                     x329 * (3.0 * x325 + 0.42 * x326) + 7.35e+89 * x333 +
                     9.00375e+18 * x336 - 3675000000.0 * x69;
  amrex::Real x980 =
    -kf_qss[34] - kf_qss[48] * x82 - 4.05e+26 * sc[7] * x106 * x90 +
    x274 * (3.0 * x271 + 0.42 * x803) + 1.0935e+53 * x279 * x280;
  amrex::Real x982 = x345 * (x341 * x978 + x343 * x980);
  x196 = -kf_qss[34] * x1 -
         kf_qss[51] * exp(g_RT[16] - g_RT[18] - g_RT[3] + g_RT_qss[2]) -
         4.035e+21 * sc[16] * x210 * exp(x194) - x196 * x210 * x27 +
         1.085415e+43 * x300 + x308 * (3.0 * x202 * x240 + 0.42 * x240 * x303) +
         x314 * (3.0 * x171 * x240 + 0.42 * x240 * x310) -
         4800000000000000.0 * x315 + 1.536e+31 * x674;
  x300 = -kf_qss[34] * x220 / x214 - x196 * x357 + x196 * x679 + x358 * x980 +
         x160 * x219 * x982 / (x110 * x214);
  amrex::Real x990 = -kf_qss[34] * x1 * x368 +
                     x117 * x150 * x974 / ((x148) * (x148)) - x366 * x974 +
                     x367 * x980 + x12 * x150 * x982 / (x110 * x148);
  amrex::Real x991 = -kf_qss[34] * x1 * x321 - kf_qss[34] * x117 / x214 +
                     x196 * x684 + x288 * x980 +
                     x12 * x160 * x982 / (x110 * x214);
  amrex::Real x992 = -x226 * x990 - x300 * x363 + x352 * x991 + x356 * x980 +
                     x150 * x220 * x974 / ((x148) * (x148)) +
                     x150 * x219 * x982 / (x110 * x148);
  const amrex::Real x993 =
    x606 * (x374 * x992 + x232 * x261 * x974 / ((x148) * (x148)));
  amrex::Real x999 =
    (1.05e+45 * sc[20] * x51 * exp(x32) - x47 * (3.0 * x325 + 0.42 * x326) -
     7.35e+89 * x622 + 3675000000.0 * x623 - 9.00375e+18 * x624) /
    x72;
  amrex::Real x1000 =
    -x113 * x609 * x978 + x113 * x999 + x468 * x980 - x612 * x980 -
    (kf_qss[27] * sc[6] * x440 + kf_qss[31] * refCinv * sc[2] * sc[4] * x435 +
     kf_qss[32] * sc[7] * x411 + kf_qss[36] * sc[13] * x417 -
     x102 * (3.0 * x271 + 0.42 * x803) + 4.05e+26 * x106 * x429 -
     1.0935e+53 * x280 * x615) /
      x110;
  x642 = -kf_qss[34] * x115 * x469 / x214 - x1000 * x285 +
         x160 * x469 * x982 / x214 + x196 * x534 + x196 * x701 -
         (kf_qss[50] * sc[19] * x521 -
          x176 * (3.0 * x171 * x240 + 0.42 * x240 * x310) -
          x207 * (3.0 * x202 * x240 + 0.42 * x240 * x303) - 1.536e+31 * x292 +
          4.035e+21 * x476 * x640 - 1.085415e+43 * x642 +
          4800000000000000.0 * x643) /
           x214;
  x558 = -x1000 * x354 + x115 * x150 * x469 * x974 / ((x148) * (x148)) +
         x159 * x991 - x363 * x642 + x586 * x974 - x653 * x990 +
         x150 * x469 * x982 / x148 -
         (kf_qss[49] * sc[18] * x580 + kf_qss[9] * sc[2] * x551 +
          sc[12] * x558 - x131 * (0.42 * x126 * x240 + 3.0 * x238 * x240) -
          1.085415e+33 * x253 * x634 + 4.035e+16 * x633) /
           x148;
  x593 =
    x658 *
    (-x261 * x558 + x657 * x992 -
     (kf_qss[63] * sc[32] * x599 + kf_qss[6] * sc[2] * x595 + sc[3] * x593) /
       x258);
  x800 = -kf_qss[14] + x800;
  x808 = -kf_qss[35] - kf_qss[36] + x808;
  x982 = x341 * x813 + x343 * x808;
  x821 = -kf_qss[35] * x1 -
         kf_qss[55] * exp(g_RT[17] - g_RT[24] - g_RT[3] + g_RT_qss[2]) + x821;
  x321 = -kf_qss[35] * x1 * x321 - kf_qss[35] * x117 / x214 + x288 * x808 +
         x348 * x982 + x684 * x821;
  x196 = -kf_qss[35] * x220 / x214 - x357 * x821 + x358 * x808 + x361 * x982 +
         x679 * x821;
  x368 = -kf_qss[35] * x1 * x368 - x366 * x800 + x367 * x808 + x369 * x982 +
         x719 * x800;
  x990 = -x196 * x363 - x226 * x368 + x321 * x352 + x356 * x808 + x364 * x982 +
         x713 * x800;
  const amrex::Real x1014 = x606 * (x374 * x990 + x711 * x800);
  x97 =
    -x113 * x609 * x813 + x113 * x99 + x468 * x808 - x612 * x808 - x97 / x110;
  x508 = -kf_qss[35] * x115 * x469 / x214 - x285 * x97 + x534 * x821 +
         x650 * x982 + x701 * x821 - (((sc[2]) * (sc[2])) * x508 + x839) / x214;
  x831 = x159 * x321 - x354 * x97 - x363 * x508 - x368 * x653 + x586 * x800 +
         x630 * x982 + x705 * x800 + x831;
  x839 = x658 * (-x261 * x831 + x657 * x990);
  x41 = x329 * x41 + 4.9e+89 * x333 + 1.500625e+19 * x336 - 7.0e+44 * x53 -
        6125000000.0 * x69;
  x821 = x282 * x343 + x341 * x41;
  x368 = x282 * x288 + x348 * x821 + x676 * x684;
  amrex::Real x1026 = -x226 * (x282 * x367 + x369 * x821 + x681) + x282 * x356 +
                      x352 * x368 - x363 * (x282 * x358 + x361 * x821 + x872) +
                      x364 * x821 + x150 * x220 * x663 / ((x148) * (x148));
  const amrex::Real x1027 =
    x606 * (x1026 * x374 + x232 * x261 * x663 / ((x148) * (x148)));
  x67 = (kf_qss[52] * sc[2] * x379 + 2450000000.0 * x61 * exp(x63) / x67 +
         6125000000.0 * x623 - 1.500625e+19 * x624 + x690) /
        x72;
  amrex::Real x1033 = -x113 * x41 * x609 + x113 * x67 + x617 + x785;
  amrex::Real x1034 =
    -x1033 * x285 + x534 * x676 + x650 * x821 + x676 * x701 -
    (kf_qss[22] * sc[2] * x530 + 2.0 * kf_qss[23] * sc[6] * x489 +
     kf_qss[51] * sc[3] + x699) /
      x214;
  x681 = -x1033 * x354 - x1034 * x363 + x159 * x368 + x630 * x821 -
         x653 * (x282 * x367 + x369 * x821 + x681) + x706 -
         (kf_qss[22] * sc[2] * x530 + kf_qss[49] * sc[16] * x580 + x703) / x148;
  const amrex::Real x1036 =
    x658 * (-kf_qss[40] * sc[2] * x588 / x258 + x1026 * x657 - x261 * x681);
  amrex::Real x1039 =
    x113 * (kf_qss[56] * sc[2] + x691) / x72 + x617 + x689 + x785;
  amrex::Real x1041 =
    -x1039 * x354 -
    x363 * (-x1039 * x285 + x940 - (kf_qss[50] * sc[16] * x521 + x699) / x214) +
    x706 + x879 - (kf_qss[41] * sc[2] * x554 + x703) / x148;
  const amrex::Real x1042 = x658 * (-x1041 * x261 + x886);
  amrex::Real x1043 = -kf_qss[58] + x663;
  amrex::Real x1044 = -kf_qss[60] - kf_qss[61] + x282;
  amrex::Real x1046 = -kf_qss[60] * x113 / x72 + x1044 * x343 + x341 * x41;
  amrex::Real x1048 = x1044 * x358 + x1046 * x361 -
                      x357 * (-kf_qss[59] + x676) + x679 * (-kf_qss[59] + x676);
  amrex::Real x1050 = x1044 * x288 + x1046 * x348 + x684 * (-kf_qss[59] + x676);
  amrex::Real x1051 =
    x1043 * x713 + x1044 * x356 + x1046 * x364 - x1048 * x363 + x1050 * x352 -
    x226 * (-x1043 * x366 + x1043 * x719 + x1044 * x367 + x1046 * x369);
  const amrex::Real x1052 = x606 * (x1043 * x711 + x1051 * x374);
  x408 =
    x1044 * x468 - x1044 * x612 - x113 * x41 * x609 +
    x113 *
      (x27 * x35 * x51 + 6125000000.0 * x623 - 1.500625e+19 * x624 + x690) /
      x72 -
    (sc[2] * x408 + x616) / x110;
  amrex::Real x1055 =
    x1046 * x650 - x285 * x408 + x534 * (-kf_qss[59] + x676) +
    x701 * (-kf_qss[59] + x676) -
    (kf_qss[42] * sc[2] * x524 + kf_qss[57] * sc[3] + x699) / x214;
  amrex::Real x1056 =
    x1043 * x586 + x1043 * x705 + x1046 * x630 + x1050 * x159 - x1055 * x363 -
    x354 * x408 -
    x653 * (-x1043 * x366 + x1043 * x719 + x1044 * x367 + x1046 * x369) -
    (kf_qss[45] * sc[2] * x583 + x703) / x148;
  const amrex::Real x1057 = x658 * (x1051 * x657 - x1056 * x261);
  x461 = x786 - (sc[10] * x461 + x616) / x110;
  const amrex::Real x1061 =
    x658 *
    (-x261 * (-x354 * x461 - x363 * (-x285 * x461 + x882) + x880) + x886);
  x247 = x247 * (0.84 * x126 * x240 + 6.0 * x238 * x240) - 8.07e+16 * x249 +
         2.17083e+33 * x252 * x253;
  x249 = -kf_qss[62] - 8.1e+26 * sc[7] * x106 * x90 +
         x274 * (6.0 * x271 + 0.84 * x803) + 2.187e+53 * x279 * x280;
  x210 = -8.07e+21 * sc[16] * x210 * exp(x194) +
         2.17083e+43 * sc[16] * x297 *
           exp(-7140.6444877689701 * invT - 10.22 * tc[0]) +
         x308 * (6.0 * x202 * x240 + 0.84 * x240 * x303) +
         x314 * (6.0 * x171 * x240 + 0.84 * x240 * x310) -
         9600000000000000.0 * x315 + 3.072e+31 * x674;
  x53 = x329 * (6.0 * x325 + 0.84 * x326) + 1.47e+90 * x333 +
        1.80075e+19 * x336 - 2.1e+45 * x53 - 7350000000.0 * x69;
  x69 = x249 * x343 + x341 * x53;
  x160 = -x210 * x357 + x210 * x679 + x249 * x358 +
         x160 * x219 * x345 * x69 / (x110 * x214);
  x274 = x210 * x684 + x249 * x288 + x348 * x69;
  x150 = -x160 * x363 -
         x226 * (-x247 * x366 + x247 * x719 + x249 * x367 + x369 * x69) +
         x247 * x713 + x249 * x356 + x274 * x352 +
         x150 * x219 * x345 * x69 / (x110 * x148);
  x308 = x606 * (x150 * x374 + x247 * x711);
  x314 = (2.1e+45 * sc[20] * x51 * exp(x32) - x47 * (6.0 * x325 + 0.84 * x326) -
          1.47e+90 * x622 + 7350000000.0 * x623 - 1.80075e+19 * x624) /
         x72;
  x106 = x113 * x314 - x113 * x53 * x609 + x249 * x468 - x249 * x612 -
         (-x102 * (6.0 * x271 + 0.84 * x803) + 8.1e+26 * x106 * x429 -
          2.187e+53 * x280 * x615) /
           x110;
  x271 = -x106 * x285 + x210 * x534 + x210 * x701 + x650 * x69 -
         (-x176 * (6.0 * x171 * x240 + 0.84 * x240 * x310) -
          x207 * (6.0 * x202 * x240 + 0.84 * x240 * x303) - 3.072e+31 * x292 -
          2.17083e+43 * x297 * x640 *
            exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x475) +
          8.07e+21 * x476 * x640 + 9600000000000000.0 * x643) /
           x214;
  x238 = -x106 * x354 + x159 * x274 + x247 * x586 + x247 * x705 - x271 * x363 +
         x630 * x69 -
         x653 * (-x247 * x366 + x247 * x719 + x249 * x367 + x369 * x69) -
         (-x131 * (0.84 * x126 * x240 + 6.0 * x238 * x240) -
          2.17083e+33 * x253 * x634 + 8.07e+16 * x633) /
           x148;
  x126 = x658 * (x150 * x657 - x238 * x261);
  x253 = -kf_qss[49] + x663;
  x280 = -kf_qss[50] + x676;
  x297 = -x226 * (-x253 * x366 + x253 * x719 + x776) + x253 * x713 +
         x282 * x356 + x352 * (x280 * x684 + x772) -
         x363 * (-x280 * x357 + x280 * x679 + x768) + x364 * x767;
  x303 = x606 * (x253 * x711 + x297 * x374);
  x202 = x786 - (kf_qss[48] * sc[2] + x616) / x110;
  x135 =
    x159 * (x280 * x684 + x772) - x202 * x354 + x253 * x586 + x253 * x705 -
    x363 * (-x202 * x285 + x280 * x534 + x280 * x701 + x650 * x767 + x700) +
    x630 * x767 - x653 * (-x253 * x366 + x253 * x719 + x776) -
    (2.69e+16 * x135 * x477 * x542 + x703) / x148;
  x310 = x658 * (-x135 * x261 + x297 * x657);
  x113 = x113 * (kf_qss[53] * sc[2] * x389 + x691) / x72 + x617 + x689 + x785;
  x171 = -x113 * x285 + x940 -
         (kf_qss[55] * sc[3] + 2.69e+21 * x476 * x477 + x699) / x214;
  x315 =
    -x113 * x354 - x171 * x363 + x706 + x879 - (sc[2] * x566 + x703) / x148;
  x325 = x658 * (-x261 * x315 + x886);
  x326 =
    x658 *
    (-x261 * (x706 + x879 + x884 - (kf_qss[58] * sc[2] * x570 + x703) / x148) +
     x886);
  x329 = x786 - (kf_qss[61] * sc[2] * x397 + x616) / x110;
  x333 = -x285 * x329 + x940 - (sc[2] * x486 + x699) / x214;
  x336 = x658 * (-x261 * (-x329 * x354 - x333 * x363 + x880) + x886);
  x476 =
    x658 *
    (-kf_qss[63] * sc[16] * x599 / x258 -
     x261 * (x706 + x879 + x884 - (kf_qss[65] * sc[12] * x574 + x703) / x148) +
     x886);
  x486 = -kf_qss[64] - kf_qss[65] + x663;
  x566 = -kf_qss[68] - kf_qss[69] + x282;
  x102 = x341 * x45 + x343 * x566;
  x47 = -kf_qss[66] - kf_qss[67] + x676;
  x288 = x102 * x348 + x288 * x566 + x47 * x684;
  x226 = x102 * x364 -
         x226 * (x102 * x369 - x366 * x486 + x367 * x566 + x486 * x719) +
         x288 * x352 + x356 * x566 -
         x363 * (x102 * x361 - x357 * x47 + x358 * x566 + x47 * x679) +
         x486 * x713;
  x257 = x606 * (-kf_qss[63] * x234 * x257 / ((x258) * (x258)) + x226 * x374 +
                 x486 * x711);
  x348 = x468 * x566 - x566 * x612 + x617 + x689 + x693;
  x352 = x102 * x630 + x159 * x288 - x348 * x354 -
         x363 * (x102 * x650 - x285 * x348 + x47 * x534 + x47 * x701 + x700) +
         x486 * x586 + x486 * x705 -
         x653 * (x102 * x369 - x366 * x486 + x367 * x566 + x486 * x719) + x704;
  x356 = x658 * (-kf_qss[63] * x818 - kf_qss[63] * x602 / ((x258) * (x258)) +
                 x226 * x657 - x261 * x352);
  x364 = x786 - (sc[2] * x402 + x616) / x110;
  x366 = -x285 * x364 + x940 - (sc[2] * x528 + x699) / x214;
  x367 = x658 * (-x261 * (-x354 * x364 - x363 * x366 + x880) + x886);
  x369 = x786 - (sc[2] * x466 + x616) / x110;
  x374 = -x285 * x369 + x940 - (sc[2] * x472 + x699) / x214;
  x402 = x658 * (-x261 * (-x354 * x369 - x363 * x374 + x880) + x886);
  x466 =
    x658 *
    (-x261 * (x706 + x879 + x884 - (kf_qss[64] * sc[2] * x537 + x703) / x148) +
     x886);
  x472 = (-sc_qss[0] * x232 / x148 + x587) / ((x227) * (x227));
  x371 = x371 * x472;
  x528 = sc_qss[0] * x232 / ((x148) * (x148));
  x255 = (x255 * x528 + x370) / x227;
  x606 = x472 * x686;
  x586 = x528 * x663;
  x468 = (x586 + x708) / x227;
  x612 = x472 * x722;
  x616 = (x155 + x528 * x710) / x227;
  x622 = x472 * x738;
  x630 = (x528 * x731 + x742) / x227;
  x131 = x472 * x752;
  x633 = (x528 * x744 + x750) / x227;
  x643 = x472 * x781;
  x176 = (x586 + x793) / x227;
  x207 = x472 * x826;
  x653 = (-kf_qss[8] * sc_qss[0] * x229 / x148 + x528 * x801 + x816) / x227;
  x159 = x472 * x863;
  x370 = (x528 * x849 + x861) / x227;
  x657 = x472 * x780;
  x663 = (x586 + x880 + x884) / x227;
  x674 = x472 * x897;
  x676 = (x528 * x889 + x902) / x227;
  x686 = x472 * x911;
  x689 = (x518 + x528 * x904) / x227;
  x693 = x472 * x928;
  x292 = (x528 * x919 + x934) / x227;
  x704 = (x586 + x944) / x227;
  x705 = x472 * x952;
  x708 = (x528 * x946 + x578) / x227;
  x710 = (-x354 * x959 - x363 * (-x285 * x959 + x882) + x586 + x880) / x227;
  x711 = (-x354 * x966 - x363 * (-x285 * x966 + x882) + x586 + x880) / x227;
  x713 = x472 * x992;
  x719 = (sc_qss[0] * x232 * x974 / ((x148) * (x148)) + x558) / x227;
  x722 = x472 * x990;
  x155 = (x528 * x800 + x831) / x227;
  x731 = x1026 * x472;
  x738 = (x586 + x681) / x227;
  x742 = (x1041 + x586) / x227;
  x744 = x1051 * x472;
  x752 = (x1043 * x528 + x1056) / x227;
  x750 = (-x354 * x461 - x363 * (-x285 * x461 + x882) + x586 + x880) / x227;
  x776 = x150 * x472;
  x781 = (x238 + x247 * x528) / x227;
  x785 = x297 * x472;
  x793 = (x135 + x253 * x528) / x227;
  x801 = (x315 + x586) / x227;
  x803 =
    (x586 + x706 + x879 + x884 - (kf_qss[58] * sc[2] * x570 + x703) / x148) /
    x227;
  x826 = (-x329 * x354 - x333 * x363 + x586 + x880) / x227;
  x816 =
    (x586 + x706 + x879 + x884 - (kf_qss[65] * sc[12] * x574 + x703) / x148) /
    x227;
  x818 = x226 * x472;
  x849 = (x352 + x486 * x528) / x227;
  x863 = (-x354 * x364 - x363 * x366 + x586 + x880) / x227;
  x354 = (-x354 * x369 - x363 * x374 + x586 + x880) / x227;
  x363 =
    (x586 + x706 + x879 + x884 - (kf_qss[64] * sc[2] * x537 + x703) / x148) /
    x227;
  x703 = (-sc_qss[1] * x225 + x535) / ((x217) * (x217));
  x349 = x349 * x703;
  x362 = (-sc_qss[1] * x362 + x317) / x217;
  x317 = x685 * x703;
  x680 = (-sc_qss[1] * x680 + x677) / x217;
  x685 = x703 * x721;
  x677 =
    (-sc_qss[1] * (-x166 * x357 + x166 * x679 + x180 * x358 + x361 * x717) +
     x728) /
    x217;
  x706 = x703 * x737;
  x166 = (-sc_qss[1] * x736 + x741) / x217;
  x721 = x703 * x751;
  x728 =
    (-sc_qss[1] * (-x357 * x748 + x358 * x745 + x361 * x747 + x679 * x748) +
     x760) /
    x217;
  x736 = x703 * (x684 * x764 + x772);
  x737 = (-sc_qss[1] * (-x357 * x764 + x679 * x764 + x768) + x792) / x217;
  x741 = x703 * x825;
  x748 = (-sc_qss[1] * x824 + x840) / x217;
  x751 = x703 * x862;
  x760 = (-sc_qss[1] * x145 + x856) / x217;
  x764 = x703 * x875;
  x792 = -sc_qss[1] * (x768 + x872);
  x824 = (-x285 * (x617 + x786) + x792 + x882) / x217;
  x825 = -x764 + x824;
  x840 = x703 * x894;
  x145 =
    (-sc_qss[1] * (-x357 * x893 + x358 * x890 + x361 * x892 + x679 * x893) -
     x285 * x900 + x534 * x893 + x650 * x892 + x700 + x701 * x893) /
    x217;
  x862 = x703 * x910;
  x856 = (-sc_qss[1] * x909 + x493) / x217;
  x861 = x703 * x925;
  x875 = (-sc_qss[1] * x927 + x933) / x217;
  x780 = (x504 + x792) / x217;
  x879 = x703 * (x684 * x947 + x772);
  x880 = (-sc_qss[1] * (-x357 * x947 + x679 * x947 + x768) + x956) / x217;
  x884 = (-x285 * x959 + x792 + x882) / x217;
  x886 = (-x285 * x966 + x792 + x882) / x217;
  x889 = x703 * x991;
  x893 = (-sc_qss[1] * x300 + x642) / x217;
  x894 = x321 * x703;
  x897 = (-sc_qss[1] * x196 + x508) / x217;
  x902 = x368 * x703;
  x872 = (-sc_qss[1] * (x282 * x358 + x361 * x821 + x872) + x1034) / x217;
  x214 =
    (-x1039 * x285 + x792 + x940 - (kf_qss[50] * sc[16] * x521 + x699) / x214) /
    x217;
  x699 = x1050 * x703;
  x904 = (-sc_qss[1] * x1048 + x1055) / x217;
  x882 = (-x285 * x461 + x792 + x882) / x217;
  x909 = x274 * x703;
  x910 = (-sc_qss[1] * x160 + x271) / x217;
  x684 = x703 * (x280 * x684 + x772);
  x768 = (-sc_qss[1] * (-x280 * x357 + x280 * x679 + x768) - x202 * x285 +
          x280 * x534 + x280 * x701 + x650 * x767 + x700) /
         x217;
  x772 = (x171 + x792) / x217;
  x911 = (x333 + x792) / x217;
  x493 = x288 * x703;
  x285 = (-sc_qss[1] * (x102 * x361 - x357 * x47 + x358 * x566 + x47 * x679) +
          x102 * x650 - x285 * x348 + x47 * x534 + x47 * x701 + x700) /
         x217;
  x357 = (x366 + x792) / x217;
  x358 = (x374 + x792) / x217;
  x345 = x345 * (-sc_qss[1] * x219 / x110 - sc_qss[2] * x12 / x110 + x469);
  x344 = x344 * x345;
  x361 = sc_qss[2] * x12 / ((x110) * (x110));
  x534 = sc_qss[1] * x219 / ((x110) * (x110));
  x283 = x115 * (-kf_qss[25] * sc_qss[2] * x1 / x110 + x283 * x361 +
                 x283 * x534 + x627);
  x627 = x345 * x671;
  x650 = x115 * (-kf_qss[24] * sc_qss[2] * x1 / x110 + x361 * x666 +
                 x534 * x666 + x696);
  x666 = x345 * x717;
  x671 = x115 * (x180 * x361 + x180 * x534 + x726);
  x679 = x345 * x733;
  x696 = x115 * (x361 * x732 + x534 * x732 + x740);
  x700 = x345 * x747;
  x701 = x115 * (x361 * x745 + x534 * x745 + x759);
  x180 = x345 * x767;
  x282 = x282 * x361 + x282 * x534;
  x617 = x115 * (x282 + x617 + x786);
  x717 = -x180 + x617;
  x726 = x345 * (x341 * x814 + x343 * x809);
  x732 = x115 * (-kf_qss[26] * sc_qss[1] * x139 / x110 + x330 + x361 * x809 +
                 x534 * x809);
  x733 = x345 * x859;
  x740 = x115 * (-kf_qss[33] * sc_qss[2] * x1 / x110 + x361 * x851 +
                 x534 * x851 + x867);
  x745 = x345 * x892;
  x747 = x115 * (x361 * x890 + x534 * x890 + x900);
  x759 = x345 * x906;
  x767 = x115 * (x361 * x905 + x534 * x905 + x915);
  x786 = x345 * x923;
  x809 = x115 * (x361 * x920 + x534 * x920 + x932);
  x330 = x115 * (x282 + x939);
  x851 = x115 * (x282 + x954);
  x859 = x115 * (x282 + x959);
  x867 = x115 * (x282 + x966);
  x341 = x345 * (x341 * x978 + x343 * x980);
  x343 = x115 * (-kf_qss[34] * sc_qss[2] * x1 / x110 + x1000 + x361 * x980 +
                 x534 * x980);
  x890 = x345 * x982;
  x1 = x115 *
       (-kf_qss[35] * sc_qss[2] * x1 / x110 + x361 * x808 + x534 * x808 + x97);
  x892 = x345 * x821;
  x900 = x115 * (x1033 + x282);
  x905 = x115 * (x1039 + x282);
  x906 = x1046 * x345;
  x915 = x115 * (x1044 * x361 + x1044 * x534 + x408);
  x518 = x115 * (x282 + x461);
  x919 = x345 * x69;
  x920 = x115 * (x106 + x249 * x361 + x249 * x534);
  x923 = x115 * (x202 + x282);
  x925 = x115 * (x113 + x282);
  x927 = x115 * (x282 + x329);
  x928 = x102 * x345;
  x932 = x115 * (x348 + x361 * x566 + x534 * x566);
  x933 = x115 * (x282 + x364);
  x934 = x115 * (x282 + x369);
  x939 = sc_qss[3] * (kf_qss[60] * sc[20] + 10.0e-13) / ((x72) * (x72));
  x338 = x338 * x609 + x338 * x939 - x626;
  x626 = x45 * x609 + x45 * x939 - x691 / x72;
  x940 = x609 * (-kf_qss[52] + x45) + x939 * (-kf_qss[52] + x45) -
         (kf_qss[52] * sc[18] * x379 + kf_qss[53] * sc[24] * x389 +
          kf_qss[56] * sc[19] + x691) /
           x72;
  x504 = x609 * (-kf_qss[53] + x45) - x691 / x72 + x939 * (-kf_qss[53] + x45);
  x814 = x609 * x814 + x814 * x939 - x99;
  x858 = x609 * x858 + x858 * x939 - x866;
  x866 = x609 * (-kf_qss[54] + x45) - x691 / x72 + x939 * (-kf_qss[54] + x45);
  x944 =
    x609 * (-kf_qss[60] * x56 + x813) + x939 * (-kf_qss[60] * x56 + x813) - x99;
  x946 = x45 * x609 + x45 * x939 -
         (2.0 * kf_qss[54] * ((sc[12])) * x384 + x691) / x72;
  x947 = x609 * x978 + x939 * x978 - x999;
  x813 = x609 * x813 + x813 * x939 - x99;
  x99 = x41 * x609 + x41 * x939 - x67;
  x952 = x45 * x609 + x45 * x939 - (kf_qss[56] * sc[2] + x691) / x72;
  x35 =
    -kf_qss[60] * sc_qss[3] / x72 + x41 * x609 + x41 * x939 -
    (x27 * x35 * x51 + 6125000000.0 * x623 - 1.500625e+19 * x624 + x690) / x72;
  x51 = -x314 + x53 * x609 + x53 * x939;
  x609 = x45 * x609 + x45 * x939 - (kf_qss[53] * sc[2] * x389 + x691) / x72;
  x623 = sc[6] * x139;
  x624 = 94600000.0 * sc[13] * exp(259.15658288943098 * invT);
  x45 = 110.7 * exp(-840.37183189388202 * invT + 1.79 * tc[0]);
  x690 = sc[6] * x45;
  x691 = 5710000.0 * sc[7] * exp(379.92858268256299 * invT);
  x954 = 100000000.0 * sc[16] * x82;
  x956 = sc[2] * x27;
  x578 = 128000.0 * x27 * exp(-618.95649893980499 * invT - 2.34 * tc[0]);
  x959 = -0.29097730287517898 * x169 + 0.43429448190325198 * log(x578) - 0.4;
  x966 = -0.55155399201712996 * x169 - 0.14 * x959 + 0.75;
  x974 = exp(
    M_LN10 * (0.43429448190325198 * x169 /
              (((x959) * (x959)) / ((x966) * (x966)) + 1.0)));
  x978 = x974 * exp(-618.95649893980499 * invT - 3.14 * tc[0]) / (x578 + 1.0);
  x980 = 3200000000000000.0 * x956 * x978;
  x300 = 5280000.0 * sc[9] * exp(-754.82499870708 * invT);
  x991 = 110.7 * exp(
                   g_RT[2] - g_RT[6] - g_RT_qss[1] + g_RT_qss[2] -
                   840.37183189388202 * invT + 1.79 * tc[0]);
  x992 = sc[2] * x991;
  x999 = 16000000.0 * sc[7] * x78;
  x1000 = 38000000.0 * exp(-291.86566616673701 * invT - 0.36 * tc[0]);
  x642 = sc[33] * x1000;
  x558 = 310000000000.0 * exp(-639.08516557199403 * invT - 1.38 * tc[0]);
  x800 = sc[33] * x558;
  x808 = sc[20] * exp(-3019.29999482832 * invT);
  x982 = exp(286.83349950869001 * invT);
  x321 = 12000000.0 * sc[10] * x982;
  x196 = 0.5 * sc[6] * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  x990 = 60000000.0 * sc[6] * x18;
  x97 = -956.11166502896697 * invT + 2.0 * tc[0];
  x508 = 4.08 * exp(g_RT[16] - g_RT[18] - g_RT[3] + g_RT_qss[2] + x97);
  x831 = sc[16] * x508;
  x41 = -110.707666477038 * invT + 1.83 * tc[0];
  x821 = 0.384 * exp(g_RT[13] - g_RT[20] - g_RT[3] + g_RT_qss[2] + x41);
  x368 = sc[13] * x821;
  x1026 = 1750000.0 * exp(
                        g_RT[17] - g_RT[24] - g_RT[3] + g_RT_qss[2] -
                        679.34249883637199 * invT);
  x67 = sc[17] * x1026;
  x1033 = 11.3 * exp(
                   g_RT_qss[1] - g_RT_qss[2] - 1509.64999741416 * invT +
                   2.0 * tc[0] - x143);
  x1034 = sc[7] * x1033;
  x681 = 10600000.0 * sc[9] * exp(-754.82499870708 * invT);
  x1039 = 11.3 * sc[4] * exp(-1509.64999741416 * invT + 2.0 * tc[0]);
  x1041 = 25010000.0 * sc[7] * x86;
  x1043 = 56.0 * exp(
                   -g_RT[10] - g_RT[4] + g_RT[7] + g_RT_qss[2] -
                   2727.4343286615799 * invT + 1.6 * tc[0]);
  x1044 = sc[7] * x1043;
  x1046 = -44670.543423485004 * invT + 0.44 * tc[0];
  x32 = 8.75e+31 * x27 * exp(-x1046 + x32);
  x1048 = -0.29097730287517898 * x38 + 0.43429448190325198 * log(x32) - 0.4;
  x1050 = -0.14 * x1048 - 0.55155399201712996 * x38 + 0.75;
  x1051 = exp(
    M_LN10 * (0.43429448190325198 * x38 /
              (((x1048) * (x1048)) / ((x1050) * (x1050)) + 1.0)));
  x408 = x1051 * exp(-94921.759670744301 * invT - 8.87 * tc[0] - x1046 + x31) /
         (x32 + 1.0);
  x1055 = 7.0e+44 * refCinv * sc[6] * x27 * x408;
  x1056 = -0.29097730287517898 * x95 +
          0.43429448190325198 * log(1.35e+19 * x88 * x90) - 0.4;
  x461 = -0.14 * x1056 - 0.55155399201712996 * x95 + 0.75;
  x247 = exp(
           M_LN10 * (0.43429448190325198 * x95 /
                     (((x1056) * (x1056)) / ((x461) * (x461)) + 1.0))) /
         (1.35e+19 * x88 * x90 + 1.0);
  x249 = sc[7] * x247 * x92;
  x210 = 13240000.0 * sc[9] * exp(-754.82499870708 * invT);
  x53 = -4161.6018262050302 * invT + 2.0 * tc[0];
  x69 = 4.92 * sc[11] * exp(x53);
  x160 = 32000000.0 * sc[11] * x982;
  x274 = 40000000.0 * sc[22] * exp(276.769166192596 * invT);
  x150 = 16000000.0 * sc[11] * x982;
  x314 = 2.46 * sc[11] * exp(x53);
  x106 = 50000000.0 * sc[11] * x56;
  x271 = 3400000.0 * sc[17] * exp(-347.21949940525701 * invT);
  x238 = -0.29097730287517898 * x124 +
         0.43429448190325198 * log(538000000.0 * x27 * exp(x118)) - 0.4;
  x253 = -0.55155399201712996 * x124 - 0.14 * x238 + 0.75;
  x280 = exp(
           M_LN10 * (0.43429448190325198 * x124 /
                     (((x238) * (x238)) / ((x253) * (x253)) + 1.0))) /
         (538000000.0 * x27 * exp(x118) + 1.0);
  x297 = sc[16] * x121 * x280;
  x202 = -3570.32224388449 * invT - 5.11 * tc[0];
  x194 = 3320987654320990.0 * x27 *
         exp(2269.50716277929 * invT - 0.5 * tc[0] + x194);
  x135 = -0.29097730287517898 * x199 + 0.43429448190325198 * log(x194) - 0.4;
  x113 = 1.7777777777777777 * ((x135) * (x135)) /
           ((-0.18666666666666668 * x135 - 0.73540532268950665 * x199 + 1) *
            (-0.18666666666666668 * x135 - 0.73540532268950665 * x199 + 1)) +
         1.0;
  x171 = exp(M_LN10 * (0.43429448190325198 * x199 / x113)) / (x194 + 1.0);
  x315 = 2.69e+21 * sc[16] * x171 * x27 * exp(x202);
  x329 = 2640000.0 * sc[9] * exp(-754.82499870708 * invT);
  x333 = -25538.245789589499 * invT - 0.52 * tc[0];
  x486 = -50548.114080084102 * invT - 1.16 * tc[0] - x333;
  x566 = (1.0 / ((3.0625e-6 * x61 * exp(-x333 + x63) + 1.0)));
  x102 = 2450000000.0 * x566 * x61 * exp(x486 + x62);
  x47 = 20000000.0 * exp(g_RT[16] + g_RT[1] - g_RT[32] - g_RT[37]);
  x288 = 3800000000000.0 * exp(
                             g_RT[17] + g_RT[1] - g_RT[33] - g_RT[37] -
                             402.57333264377598 * invT - 2.0 * tc[0]);
  x226 = 27000000.0 *
         exp(g_RT[1] - g_RT[32] - g_RT[33] + g_RT[3] - 178.641916360675 * invT);
  x348 = 27000000.0 * sc[33] * exp(-178.641916360675 * invT);
  x352 = 27000000.0 * sc[32] * exp(-178.641916360675 * invT);
  x364 =
    3800000000000.0 * sc[37] * exp(-402.57333264377598 * invT - 2.0 * tc[0]);
  x366 =
    3800000000000.0 * sc[33] * exp(-402.57333264377598 * invT - 2.0 * tc[0]);
  x369 = 110000000.0 * sc[6] * x229;
  x374 = x974 / ((x578 + 1.0) * (x578 + 1.0));
  x472 = sc[10] * x477 * exp(-1237.91299787961 * invT - 5.48 * tc[0] + x516);
  x528 = x374 * x472;
  x586 = x959 / ((x966) * (x966));
  x703 = ((x959) * (x959)) / ((x966) * (x966) * (x966));
  x169 = x169 / ((((x959) * (x959)) / ((x966) * (x966)) + 1.0) *
                 (((x959) * (x959)) / ((x966) * (x966)) + 1.0));
  x792 = 3200000000000000.0 * x477 * x974 *
         exp(-618.95649893980499 * invT - 3.14 * tc[0] + x516) / (x578 + 1.0);
  x345 = sc[10] * x169 * x792;
  x217 = (-sc_qss[1] * x225 + x535) / x217;
  x225 = 3200000000000000.0 * x217 * x978;
  x535 = x169 * x225 * x956;
  x516 = refC * sc[10] * x974 *
         exp(-618.95649893980499 * invT - 3.14 * tc[0] + x516) / (x578 + 1.0);
  x361 = exp(-tc[0]);
  x534 = x217 * x956 * exp(-1237.91299787961 * invT - 5.48 * tc[0]);
  x282 = x374 * x534;
  x939 = sc[2] * x217 * x978;
  x578 = -2.0 * g_RT[2] + g_RT[6];
  x959 = refC * sc[6] * exp(-tc[0] + x578);
  x966 = x88 * exp(-1522.2304140592801 * invT - 4.0 * tc[0]);
  x974 = log(
    0.1098 * exp(-0.0069444444444444397 * tc[1]) +
    0.8902 * exp(-0.000352360817477097 * tc[1]) + exp(-45569.0 * invT));
  x978 = -0.29097730287517898 * x974 +
         0.43429448190325198 * log(1720000000.0 * x966) - 0.4;
  amrex::Real x1718 = -0.55155399201712996 * x974 - 0.14 * x978 + 0.75;
  const amrex::Real x1723 =
    exp(
      M_LN10 * (0.43429448190325198 * x974 /
                (1.0 + ((x978) * (x978)) / ((x1718) * (x1718))))) /
    (1720000000.0 * x966 + 1.0);
  const amrex::Real x1726 =
    sc[14] * sc[2] * x1723 * exp(-1522.2304140592801 * invT - 4.0 * tc[0]);
  const amrex::Real x1729 = x1723 * exp(
                                      -g_RT[14] + g_RT[15] - g_RT[2] -
                                      1522.2304140592801 * invT - 4.0 * tc[0]);
  const amrex::Real x1731 = 8.6e+16 * refC * sc[15] * x1729;
  const amrex::Real x1732 =
    3.3802055164954029e-19 *
    exp(
      M_LN10 * (0.43429448190325198 * x974 /
                (1.0 + ((x978) * (x978)) / ((x1718) * (x1718))))) /
    ((x966 + 5.813953488372093e-10) * (x966 + 5.813953488372093e-10));
  const amrex::Real x1735 =
    refC * sc[15] * x88 *
    exp(
      -g_RT[14] + g_RT[15] - g_RT[2] - 3044.4608281185501 * invT - 8.0 * tc[0]);
  const amrex::Real x1741 =
    0.43429448190325198 * x978 / (((x1718) * (x1718)) * x88);
  amrex::Real x1744 = 2.0 * x1741 + 0.121602454932911 * ((x978) * (x978)) /
                                      (((x1718) * (x1718) * (x1718)) * x88);
  x974 = x974 / ((1.0 + ((x978) * (x978)) / ((x1718) * (x1718))) *
                 (1.0 + ((x978) * (x978)) / ((x1718) * (x1718))));
  const amrex::Real x1748 = 8.6e+16 * sc[14] * sc[2] * x1723 * x966 * x974;
  const amrex::Real x1751 =
    sc[14] * sc[2] * x88 * exp(-3044.4608281185501 * invT - 8.0 * tc[0]);
  const amrex::Real x1754 = x1731 * x88 * x974;
  const amrex::Real x1756 =
    -8.6e+16 * x1726 + x1731 - 1.4792e+26 * x1732 * x1735 +
    1.4792e+26 * x1732 * x1751 + x1744 * x1748 - x1744 * x1754;
  amrex::Real x1764 = -3003.0964181894101 * invT - 12.0 * tc[0];
  amrex::Real x1768 =
    log(exp(-0.00091190953857377404 * tc[1]) + exp(-6859.5 * invT));
  amrex::Real x1769 = -0.29097730287517898 * x1768 +
                      0.43429448190325198 * log(6.65e+39 * x27 * exp(x1764)) -
                      0.4;
  amrex::Real x1770 = -0.55155399201712996 * x1768 - 0.14 * x1769 + 0.75;
  const amrex::Real x1773 = x1769 / ((x1770) * (x1770));
  const amrex::Real x1775 = ((x1769) * (x1769)) / ((x1770) * (x1770) * (x1770));
  amrex::Real x1778 =
    x1768 / ((((x1769) * (x1769)) / ((x1770) * (x1770)) + 1.0) *
             (((x1769) * (x1769)) / ((x1770) * (x1770)) + 1.0));
  const amrex::Real x1785 =
    exp(
      M_LN10 * (0.43429448190325198 * x1768 /
                (((x1769) * (x1769)) / ((x1770) * (x1770)) + 1.0))) /
    (6.65e+39 * x27 * exp(x1764) + 1.0);
  const amrex::Real x1787 =
    1.33e+48 * x1785 * x477 * exp(-g_RT[28] + g_RT[29] - g_RT[2] + x1764);
  const amrex::Real x1789 = sc[29] * x1778 * x1787;
  const amrex::Real x1792 =
    refC * sc[29] * exp(-g_RT[28] + g_RT[29] - g_RT[2] + x1764);
  const amrex::Real x1796 = sc[28] * sc[2] * exp(x1764);
  x1768 = 2.2612923285657754e-80 *
          exp(
            M_LN10 * (0.43429448190325198 * x1768 /
                      (((x1769) * (x1769)) / ((x1770) * (x1770)) + 1.0))) /
          ((x27 * exp(x1764) + 1.5037593984962406e-40) *
           (x27 * exp(x1764) + 1.5037593984962406e-40));
  x1769 = sc[29] * x477 *
          exp(
            -g_RT[28] + g_RT[29] - g_RT[2] - 6006.1928363788102 * invT -
            24.0 * tc[0]);
  x1770 = sc[28] * sc[2] * x27 * exp(-6006.1928363788102 * invT - 24.0 * tc[0]);
  x1764 = 1.33e+48 * x1785 * x27 * exp(x1764);
  const amrex::Real x1810 = sc[28] * sc[2] * x1764 * x1778;
  const amrex::Real x1813 =
    50000000.0 * sc[20] * x283 - 50000000.0 * sc[20] * x344 -
    6.19115e+87 * x1768 * x1769 + 6.19115e+87 * x1768 * x1770 +
    9.31e+47 * x1785 * x1792 - 9.31e+47 * x1785 * x1796 -
    x1789 * (1.4 * x1773 * x240 + 0.196 * x1775 * x240) +
    x1810 * (1.4 * x1773 * x240 + 0.196 * x1775 * x240) -
    20000000.0 * x349 * x808 + 20000000.0 * x362 * x808;
  x25 = 0.7 * sc[0] + 3.0 * sc[18] + 3.0 * sc[20] + 2 * sc[6] + x20 + x25;
  amrex::Real x1819 =
    6645077720207.25 * x25 * exp(628.7591595897029 * invT - 5.02 * tc[0]);
  amrex::Real x1824 = -18014.512518476698 * invT - 3.4 * tc[0];
  amrex::Real x1827 = refCinv * sc[2] *
                      exp(g_RT[18] - g_RT[19] + g_RT[2] + x1824) /
                      (x1819 + 1.0);
  amrex::Real x1828 = log(
    exp(0.0795 * invT) + 1.9816 * exp(-0.23292648840026101 * tc[1]) -
    0.9816 * exp(-0.000185745862510913 * tc[1]));
  amrex::Real x1829 =
    -0.29097730287517898 * x1828 + 0.43429448190325198 * log(x1819) - 0.4;
  amrex::Real x1831 = -0.55155399201712996 * x1828 - 0.14 * x1829 + 0.75;
  amrex::Real x1834 = exp(
    M_LN10 * (0.43429448190325198 * x1828 /
              (((x1829) * (x1829)) / ((x1831) * (x1831)) + 1.0)));
  const amrex::Real x1836 = sc[18] * x1827 * x1834;
  const amrex::Real x1842 =
    0.43429448190325198 * x1829 / (((x1831) * (x1831)) * x25);
  const amrex::Real x1844 = 0.43429448190325198 * ((x1829) * (x1829)) /
                            (((x1831) * (x1831) * (x1831)) * x25);
  x1828 = x1828 / ((((x1829) * (x1829)) / ((x1831) * (x1831)) + 1.0) *
                   (((x1829) * (x1829)) / ((x1831) * (x1831)) + 1.0));
  amrex::Real x1848 = exp(x1824) / (x1819 + 1.0);
  const amrex::Real x1850 = 2.565e+21 * x1834 * x1848 * x25;
  const amrex::Real x1852 = sc[19] * x1828 * x1850;
  const amrex::Real x1854 = x1834 * x25 / ((x1819 + 1.0) * (x1819 + 1.0));
  const amrex::Real x1855 = -17385.753358887094 * invT - 8.42 * tc[0];
  const amrex::Real x1856 =
    refCinv * sc[18] * sc[2] * exp(g_RT[18] - g_RT[19] + g_RT[2] + x1855);
  const amrex::Real x1860 = sc[19] * x1854 * exp(x1855);
  const amrex::Real x1865 = 2.565e+21 * x1827 * x1834 * x25;
  const amrex::Real x1867 = sc[18] * x1828 * x1865;
  const amrex::Real x1870 = sc[19] * x1834 * x1848;
  const amrex::Real x1873 =
    -50000000.0 * sc[10] * x607 + 50000000.0 * sc[10] * x659 -
    1.7955e+21 * x1836 - x1852 * (1.4 * x1842 + 0.196 * x1844) +
    1.1931237046632101e+34 * x1854 * x1856 - 1.1931237046632101e+34 * x1860 +
    x1867 * (1.4 * x1842 + 0.196 * x1844) + 1.7955e+21 * x1870;
  amrex::Real x1876 =
    4.7067669172932297e+19 * x27 * exp(-1881.67807844359 * invT - 6.66 * tc[0]);
  amrex::Real x1877 =
    log(exp(-0.00076335877862595397 * tc[1]) + exp(-48097.0 * invT));
  amrex::Real x1878 =
    -0.29097730287517898 * x1877 + 0.43429448190325198 * log(x1876) - 0.4;
  amrex::Real x1880 = -0.55155399201712996 * x1877 - 0.14 * x1878 + 0.75;
  const amrex::Real x1885 =
    exp(
      M_LN10 * (0.43429448190325198 * x1877 /
                (((x1878) * (x1878)) / ((x1880) * (x1880)) + 1.0))) /
    ((x1876 + 1.0) * (x1876 + 1.0));
  const amrex::Real x1890 =
    sc[30] * x477 *
    exp(
      -g_RT[29] - g_RT[2] + g_RT[30] - 5404.19473907663 * invT - 13.32 * tc[0]);
  x1876 = exp(
            M_LN10 * (0.43429448190325198 * x1877 /
                      (((x1878) * (x1878)) / ((x1880) * (x1880)) + 1.0))) /
          (x1876 + 1.0);
  const amrex::Real x1895 = exp(
    -g_RT[29] - g_RT[2] + g_RT[30] - 3522.5166606330399 * invT - 6.66 * tc[0]);
  const amrex::Real x1897 = refC * sc[30] * x1895;
  const amrex::Real x1901 = x1878 / ((x1880) * (x1880));
  const amrex::Real x1902 = ((x1878) * (x1878)) / ((x1880) * (x1880) * (x1880));
  x1877 = x1877 / ((((x1878) * (x1878)) / ((x1880) * (x1880)) + 1.0) *
                   (((x1878) * (x1878)) / ((x1880) * (x1880)) + 1.0));
  x1878 = 6.26e+26 * sc[30] * x1876 * x1877 * x1895 * x477;
  x1880 = sc[29] * sc[2] * exp(-3522.5166606330399 * invT - 6.66 * tc[0]);
  const amrex::Real x1913 = x1876 * x1880;
  const amrex::Real x1916 = 6.26e+26 * x1877 * x1913 * x27;
  const amrex::Real x1918 =
    sc[29] * sc[2] * x27 * exp(-5404.19473907663 * invT - 13.32 * tc[0]);
  const amrex::Real x1922 =
    4.382e+26 * x1876 * x1897 -
    x1878 * (1.4 * x1901 * x240 + 0.196 * x1902 * x240) -
    2.0625052631578899e+46 * x1885 * x1890 +
    2.0625052631578899e+46 * x1885 * x1918 - 4.382e+26 * x1913 +
    x1916 * (1.4 * x1901 * x240 + 0.196 * x1902 * x240);
  amrex::Real x1926 = 1.1515151515151501e+21 * x25 *
                      exp(-1710.9366637360399 * invT - 7.58 * tc[0]);
  amrex::Real x1927 = log(
    0.663 * exp(-0.00058582308142940799 * tc[1]) +
    0.337 * exp(-0.0003125 * tc[1]) + exp(-4131.0 * invT));
  amrex::Real x1929 =
    -0.29097730287517898 * x1927 + 0.43429448190325198 * log(x1926) - 0.4;
  amrex::Real x1930 = -0.55155399201712996 * x1927 - 0.14 * x1929 + 0.75;
  const amrex::Real x1936 =
    exp(
      M_LN10 * (0.43429448190325198 * x1927 /
                (((x1929) * (x1929)) / ((x1930) * (x1930)) + 1.0))) /
    ((x1926 + 1.0) * (x1926 + 1.0));
  const amrex::Real x1942 = refC * sc[25] * x25 *
                            exp(
                              -g_RT[24] + g_RT[25] - g_RT[2] -
                              7699.2149868121596 * invT - 15.22 * tc[0]);
  x1926 = exp(
            M_LN10 * (0.43429448190325198 * x1927 /
                      (((x1929) * (x1929)) / ((x1930) * (x1930)) + 1.0))) /
          (x1926 + 1.0);
  const amrex::Real x1946 = -5988.2783230761797 * invT - 7.64 * tc[0];
  const amrex::Real x1950 = sc[24] * sc[2] * x1926 * exp(x1946);
  amrex::Real x1952 = exp(-g_RT[24] + g_RT[25] - g_RT[2] + x1946);
  const amrex::Real x1955 = refC * sc[25] * x1926 * x1952;
  const amrex::Real x1957 = 3.8e+29 * refC * x1926 * x1952 * x25;
  const amrex::Real x1962 = 0.43429448190325198 * ((x1929) * (x1929)) /
                            (((x1930) * (x1930) * (x1930)) * x25);
  const amrex::Real x1963 =
    0.43429448190325198 * x1929 / (((x1930) * (x1930)) * x25);
  x1927 = x1927 / ((((x1929) * (x1929)) / ((x1930) * (x1930)) + 1.0) *
                   (((x1929) * (x1929)) / ((x1930) * (x1930)) + 1.0));
  const amrex::Real x1965 = x1927 * (0.196 * x1962 + 1.4 * x1963);
  const amrex::Real x1967 =
    sc[24] * sc[2] * x25 * exp(-7699.2149868121596 * invT - 15.22 * tc[0]);
  const amrex::Real x1971 = 3.8e+29 * x1950 * x25;
  const amrex::Real x1977 =
    -sc[25] * x1957 * x1965 + 20000000.0 * sc[4] * x338 -
    3.0630303030303001e+50 * x1936 * x1942 +
    3.0630303030303001e+50 * x1936 * x1967 - 2.66e+29 * x1950 +
    2.66e+29 * x1955 + x1965 * x1971 + x255 * x624 - x371 * x624;
  amrex::Real x1981 = 3.8195777351247603e+17 * x27 *
                      exp(-2568.9210789330928 * invT - 6.09 * tc[0]);
  amrex::Real x1982 = log(
    0.1578 * exp(-0.008 * tc[1]) + 0.8422 * exp(-0.000450653447498873 * tc[1]) +
    exp(-6882.0 * invT));
  amrex::Real x1983 =
    -0.29097730287517898 * x1982 + 0.43429448190325198 * log(x1981) - 0.4;
  amrex::Real x1985 = -0.55155399201712996 * x1982 - 0.14 * x1983 + 0.75;
  const amrex::Real x1990 =
    exp(
      M_LN10 * (0.43429448190325198 * x1982 /
                (((x1983) * (x1983)) / ((x1985) * (x1985)) + 1.0))) /
    ((x1981 + 1.0) * (x1981 + 1.0));
  const amrex::Real x1996 = refC * sc[22] * x27 *
                            exp(
                              -g_RT[21] + g_RT[22] - g_RT[2] -
                              5932.9244898376455 * invT - 13.17 * tc[0]);
  const amrex::Real x2000 = x1983 / ((x1985) * (x1985));
  const amrex::Real x2001 = ((x1983) * (x1983)) / ((x1985) * (x1985) * (x1985));
  amrex::Real x2003 =
    x1982 / ((((x1983) * (x1983)) / ((x1985) * (x1985)) + 1.0) *
             (((x1983) * (x1983)) / ((x1985) * (x1985)) + 1.0));
  x1981 = exp(
            M_LN10 * (0.43429448190325198 * x1982 /
                      (((x1983) * (x1983)) / ((x1985) * (x1985)) + 1.0))) /
          (x1981 + 1.0);
  x1982 = -3364.0034109045528 * invT - 7.08 * tc[0];
  x1983 = exp(-g_RT[21] + g_RT[22] - g_RT[2] + x1982);
  x1985 = refC * sc[22] * x1981 * x1983;
  const amrex::Real x2011 = 1.99e+29 * x1985 * x2003 * x27;
  const amrex::Real x2015 = sc[21] * sc[2] * exp(x1982);
  const amrex::Real x2018 =
    sc[21] * x956 * exp(-5932.9244898376455 * invT - 13.17 * tc[0]);
  const amrex::Real x2022 = 1.99e+29 * x1981 * x27;
  const amrex::Real x2024 = x2003 * x2015 * x2022;
  const amrex::Real x2027 =
    -1.393e+29 * x1981 * x2015 + 1.393e+29 * x1985 -
    5.32067178502879e+46 * x1990 * x1996 +
    5.32067178502879e+46 * x1990 * x2018 -
    x2011 * (1.4 * x2000 * x240 + 0.196 * x2001 * x240) +
    x2024 * (1.4 * x2000 * x240 + 0.196 * x2001 * x240);
  const amrex::Real x2028 =
    15000000.0 * sc[3] * x283 - 15000000.0 * sc[3] * x344;
  amrex::Real x2029 = log(
    0.2176 * exp(-0.0036900369003690001 * tc[1]) +
    0.7824 * exp(-0.00036297640653357502 * tc[1]) + exp(-6570.0 * invT));
  amrex::Real x2033 =
    1238532.11009174 * x27 * exp(-847.92008188095303 * invT - 3.05 * tc[0]);
  amrex::Real x2034 =
    -0.29097730287517898 * x2029 + 0.43429448190325198 * log(x2033) - 0.4;
  amrex::Real x2035 = -0.55155399201712996 * x2029 - 0.14 * x2034 + 0.75;
  const amrex::Real x2041 =
    exp(
      M_LN10 * (0.43429448190325198 * x2029 /
                (((x2034) * (x2034)) / ((x2035) * (x2035)) + 1.0))) /
    ((x2033 + 1.0) * (x2033 + 1.0));
  const amrex::Real x2044 =
    sc[12] * sc[2] * x27 * exp(-1565.003830652674 * invT - 5.62 * tc[0]);
  x2033 = exp(
            M_LN10 * (0.43429448190325198 * x2029 /
                      (((x2034) * (x2034)) / ((x2035) * (x2035)) + 1.0))) /
          (x2033 + 1.0);
  const amrex::Real x2048 = -717.08374877172594 * invT - 2.57 * tc[0];
  const amrex::Real x2052 = sc[12] * sc[2] * x2033 * exp(x2048);
  const amrex::Real x2057 =
    sc[13] * x477 *
    exp(
      -g_RT[12] + g_RT[13] - g_RT[2] - 1565.003830652674 * invT - 5.62 * tc[0]);
  const amrex::Real x2064 = ((x2034) * (x2034)) / ((x2035) * (x2035) * (x2035));
  const amrex::Real x2065 = x2034 / ((x2035) * (x2035));
  x2029 = x2029 / ((((x2034) * (x2034)) / ((x2035) * (x2035)) + 1.0) *
                   (((x2034) * (x2034)) / ((x2035) * (x2035)) + 1.0));
  x2034 = x2029 * (0.196 * x2064 * x240 + 1.4 * x2065 * x240);
  x2035 = 1350000000000.0 * x2033 * exp(x2048);
  const amrex::Real x2075 = 1350000000000.0 * x2033 * x477 *
                            exp(-g_RT[12] + g_RT[13] - g_RT[2] + x2048);
  const amrex::Real x2079 =
    refC * sc[13] * exp(-g_RT[12] + g_RT[13] - g_RT[2] + x2048);
  const amrex::Real x2082 =
    sc[12] * sc[2] * x2034 * x2035 * x27 - sc[13] * x2034 * x2075 -
    80000000.0 * sc[3] * x349 + 80000000.0 * sc[3] * x362 +
    30000000.0 * sc[4] * x255 - 30000000.0 * sc[4] * x371 +
    945000000000.0 * x2033 * x2079 + 1.1704128440366999e+18 * x2041 * x2044 -
    1.1704128440366999e+18 * x2041 * x2057 - 945000000000.0 * x2052;
  amrex::Real x2084 = 0.4 * sc[0] + sc[10] + sc[11] + sc[12] + sc[13] + sc[14] +
                      sc[15] + 1.09 * sc[16] + 2.18 * sc[17] + sc[18] + sc[19] +
                      sc[1] + sc[20] + sc[21] + sc[22] + sc[23] + sc[24] +
                      sc[25] + sc[26] + sc[27] + sc[28] + sc[29] + sc[2] +
                      sc[30] + sc[31] + sc[32] + sc[33] + sc[34] + sc[35] +
                      sc[36] + sc[37] + sc[38] + sc[3] + sc[4] + sc[5] + sc[6] +
                      11.89 * sc[7] + sc[8] + 0.85 * sc[9];
  amrex::Real x2086 = log(0.5 + 0.5 * exp(-1.0e+30 * tc[1]));
  amrex::Real x2087 =
    -0.29097730287517898 * x2086 +
    0.43429448190325198 * log(12.369038311180599 * x2084 * exp(-1.84 * tc[0])) -
    0.4;
  amrex::Real x2088 = -0.55155399201712996 * x2086 - 0.14 * x2087 + 0.75;
  const amrex::Real x2091 =
    0.43429448190325198 * x2087 / (x2084 * ((x2088) * (x2088)));
  const amrex::Real x2093 = 0.43429448190325198 * ((x2087) * (x2087)) /
                            (x2084 * ((x2088) * (x2088) * (x2088)));
  amrex::Real x2096 =
    x2086 / ((((x2087) * (x2087)) / ((x2088) * (x2088)) + 1.0) *
             (((x2087) * (x2087)) / ((x2088) * (x2088)) + 1.0));
  const amrex::Real x2098 = exp(-1.4 * tc[0]);
  const amrex::Real x2100 = sc[2] * sc[9] * x2098;
  const amrex::Real x2103 =
    exp(
      M_LN10 * (0.43429448190325198 * x2086 /
                (((x2087) * (x2087)) / ((x2088) * (x2088)) + 1.0))) /
    (12.369038311180599 * x2084 * exp(-1.84 * tc[0]) + 1.0);
  const amrex::Real x2105 = 63280000.0 * x2084 * x2103;
  const amrex::Real x2107 = x2096 * x2100 * x2105;
  amrex::Real x2111 = -g_RT[5] + g_RT[9];
  const amrex::Real x2114 = refC * sc[5] * exp(-g_RT[2] - 3.24 * tc[0] - x2111);
  x2086 = 0.0065362421105963058 *
          exp(
            M_LN10 * (0.43429448190325198 * x2086 /
                      (((x2087) * (x2087)) / ((x2088) * (x2088)) + 1.0))) *
          x2084 /
          ((x2084 * exp(-1.84 * tc[0]) + 0.080847029077117646) *
           (x2084 * exp(-1.84 * tc[0]) + 0.080847029077117646));
  x2087 = exp(-g_RT[2] - 1.4 * tc[0] - x2111);
  x2088 = refC * sc[5] * x2087 * x2103;
  const amrex::Real x2126 = 63280000.0 * x2084 * x2088 * x2096;
  const amrex::Real x2128 = sc[2] * sc[9] * exp(-3.24 * tc[0]);
  const amrex::Real x2131 =
    25312000.0 * refC * sc[5] * x2087 * x2103 -
    313085097.732604 * x2086 * x2114 + 313085097.732604 * x2086 * x2128 -
    25312000.0 * x2100 * x2103 + x2107 * (0.8 * x2091 + 0.112 * x2093) -
    x2126 * (0.8 * x2091 + 0.112 * x2093);
  amrex::Real x2132 = g_RT[3] - g_RT[4];
  const amrex::Real x2133 = refC * exp(-g_RT[2] - tc[0] - x2132);
  const amrex::Real x2134 = sc[4] * x2133;
  const amrex::Real x2137 = sc[2] * sc[3] * x361;
  amrex::Real x2146 =
    230263157894.737 * x25 * exp(-1529.778664046348 * invT - 4.13 * tc[0]);
  amrex::Real x2147 = log(
    0.218 * exp(-0.0048192771084337397 * tc[1]) +
    0.782 * exp(-0.000375516334960571 * tc[1]) + exp(-6095.0 * invT));
  amrex::Real x2148 =
    -0.29097730287517898 * x2147 + 0.43429448190325198 * log(x2146) - 0.4;
  amrex::Real x2150 = -0.55155399201712996 * x2147 - 0.14 * x2148 + 0.75;
  const amrex::Real x2152 = 0.43429448190325198 * ((x2148) * (x2148)) /
                            (((x2150) * (x2150) * (x2150)) * x25);
  const amrex::Real x2154 =
    0.43429448190325198 * x2148 / (((x2150) * (x2150)) * x25);
  const amrex::Real x2158 = -1670.679330471668 * invT - 3.86 * tc[0];
  const amrex::Real x2161 =
    refC * sc[20] * exp(-g_RT[19] + g_RT[20] - g_RT[2] + x2158);
  amrex::Real x2162 = ((x2148) * (x2148)) / ((x2150) * (x2150)) + 1.0;
  const amrex::Real x2165 =
    exp(M_LN10 * (0.43429448190325198 * x2147 / x2162)) / (x2146 + 1.0);
  const amrex::Real x2169 =
    1.4e+18 * x2147 * x2161 * x2165 * x25 / ((x2162) * (x2162));
  x2146 = exp(M_LN10 * (0.43429448190325198 * x2147 / x2162)) * x25 /
          ((x2146 + 1.0) * (x2146 + 1.0));
  const amrex::Real x2175 =
    sc[19] * sc[2] * exp(-3200.4579945180158 * invT - 7.99 * tc[0]);
  const amrex::Real x2182 = sc[19] * sc[2] * exp(x2158);
  x2147 = 1.4e+18 * x2147 * x2165 * x2182 * x25 / ((x2162) * (x2162));
  x2162 = refC * sc[20] *
          exp(
            -g_RT[19] + g_RT[20] - g_RT[2] - 3200.4579945180158 * invT -
            7.99 * tc[0]);
  const amrex::Real x2190 = 30000000.0 * sc[10] * x255 -
                            30000000.0 * sc[10] * x371 -
                            2.25657894736842e+29 * x2146 * x2162 +
                            2.25657894736842e+29 * x2146 * x2175 +
                            x2147 * (0.196 * x2152 + 1.4 * x2154) +
                            9.8e+17 * x2161 * x2165 - 9.8e+17 * x2165 * x2182 -
                            x2169 * (0.196 * x2152 + 1.4 * x2154) + x338 * x990;
  amrex::Real x2200 =
    4074074074074.07 * x88 * exp(-1489.5213307819699 * invT - 5.254 * tc[0]);
  amrex::Real x2202 = log(
    0.242 * exp(-0.010638297872340399 * tc[1]) +
    0.758 * exp(-0.00064308681672025703 * tc[1]) + exp(-4200.0 * invT));
  amrex::Real x2203 =
    -0.29097730287517898 * x2202 + 0.43429448190325198 * log(x2200) - 0.4;
  amrex::Real x2204 = -0.55155399201712996 * x2202 - 0.14 * x2203 + 0.75;
  const amrex::Real x2210 =
    exp(
      M_LN10 * (0.43429448190325198 * x2202 /
                (((x2203) * (x2203)) / ((x2204) * (x2204)) + 1.0))) /
    ((x2200 + 1.0) * (x2200 + 1.0));
  const amrex::Real x2215 = refC * sc[14] * x88 *
                            exp(
                              -g_RT[13] + g_RT[14] - g_RT[2] -
                              4287.4059926562095 * invT - 10.054 * tc[0]);
  const amrex::Real x2218 =
    sc[13] * sc[2] * x88 * exp(-4287.4059926562095 * invT - 10.054 * tc[0]);
  const amrex::Real x2222 = 0.43429448190325198 * ((x2203) * (x2203)) /
                            (((x2204) * (x2204) * (x2204)) * x88);
  const amrex::Real x2223 =
    0.43429448190325198 * x2203 / (((x2204) * (x2204)) * x88);
  amrex::Real x2225 =
    x2202 / ((((x2203) * (x2203)) / ((x2204) * (x2204)) + 1.0) *
             (((x2203) * (x2203)) / ((x2204) * (x2204)) + 1.0));
  amrex::Real x2226 = -2797.8846618742396 * invT - 4.8 * tc[0];
  x2200 = exp(
            M_LN10 * (0.43429448190325198 * x2202 /
                      (((x2203) * (x2203)) / ((x2204) * (x2204)) + 1.0))) /
          (x2200 + 1.0);
  x2202 = 2.2e+18 * x2200 * exp(x2226);
  x2203 = sc[13] * sc[2] * x2202 * x2225 * x88;
  x2204 = refC * exp(-g_RT[13] + g_RT[14] - g_RT[2] + x2226);
  const amrex::Real x2236 = sc[14] * x2204;
  const amrex::Real x2239 = 2.2e+18 * x2200 * x2225 * x2236 * x88;
  const amrex::Real x2244 = -sc[13] * sc[2] * x2202 + 2.2e+18 * x2200 * x2236 +
                            x2203 * (0.28 * x2222 + 2.0 * x2223) -
                            8.9629629629629601e+30 * x2210 * x2215 +
                            8.9629629629629601e+30 * x2210 * x2218 -
                            x2239 * (0.28 * x2222 + 2.0 * x2223);
  const amrex::Real x2245 =
    30000000.0 * sc[4] * x283 - 30000000.0 * sc[4] * x344 -
    20000000.0 * sc[4] * x349 + 20000000.0 * sc[4] * x362 + x2244 +
    x255 * x691 - x371 * x691;
  amrex::Real x2250 =
    1.4828090709583e+24 * x27 * exp(-2221.1983628620351 * invT - 8.105 * tc[0]);
  amrex::Real x2251 = log(
    exp(152.4 * invT) + 1.569 * exp(-0.0033444816053511701 * tc[1]) -
    0.569 * exp(-0.000109325461900077 * tc[1]));
  amrex::Real x2252 =
    -0.29097730287517898 * x2251 + 0.43429448190325198 * log(x2250) - 0.4;
  amrex::Real x2253 = -0.55155399201712996 * x2251 - 0.14 * x2252 + 0.75;
  const amrex::Real x2259 =
    exp(
      M_LN10 * (0.43429448190325198 * x2251 /
                (((x2252) * (x2252)) / ((x2253) * (x2253)) + 1.0))) /
    ((x2250 + 1.0) * (x2250 + 1.0));
  const amrex::Real x2263 = sc[21] * x477 *
                            exp(
                              -g_RT[20] + g_RT[21] - g_RT[2] -
                              5124.2553078894598 * invT - 14.747 * tc[0]);
  x2250 = exp(
            M_LN10 * (0.43429448190325198 * x2251 /
                      (((x2252) * (x2252)) / ((x2253) * (x2253)) + 1.0))) /
          (x2250 + 1.0);
  const amrex::Real x2267 = -2903.0569450274247 * invT - 6.642 * tc[0];
  const amrex::Real x2271 = sc[20] * sc[2] * x2250 * exp(x2267);
  amrex::Real x2273 = exp(-g_RT[20] + g_RT[21] - g_RT[2] + x2267);
  const amrex::Real x2276 = refC * sc[21] * x2250 * x2273;
  const amrex::Real x2278 =
    sc[20] * sc[2] * x27 * exp(-5124.2553078894598 * invT - 14.747 * tc[0]);
  const amrex::Real x2282 = 2.027e+27 * x2271 * x27;
  const amrex::Real x2284 = ((x2252) * (x2252)) / ((x2253) * (x2253) * (x2253));
  const amrex::Real x2285 = x2252 / ((x2253) * (x2253));
  x2251 = x2251 / ((((x2252) * (x2252)) / ((x2253) * (x2253)) + 1.0) *
                   (((x2252) * (x2252)) / ((x2253) * (x2253)) + 1.0));
  x2252 = x2251 * (0.196 * x2284 * x240 + 1.4 * x2285 * x240);
  x2253 = 2.027e+27 * x2250 * x2273;
  const amrex::Real x2291 = sc[21] * x2253 * x477;
  const amrex::Real x2298 =
    -40000000.0 * sc[10] * x349 + 40000000.0 * sc[10] * x362 +
    60000000.0 * sc[11] * x255 - 60000000.0 * sc[11] * x371 + x2252 * x2282 -
    x2252 * x2291 - 2.10395779078274e+51 * x2259 * x2263 +
    2.10395779078274e+51 * x2259 * x2278 - 1.4189e+27 * x2271 +
    1.4189e+27 * x2276 + x283 * x321 - x321 * x344;
  const amrex::Real x2299 = refC * exp(-g_RT[2] - 2.0 * tc[0] - x143);
  const amrex::Real x2300 = sc[7] * x2299;
  const amrex::Real x2302 = exp(-2.0 * tc[0]);
  const amrex::Real x2304 = sc[2] * sc[4] * x2302;
  const amrex::Real x2312 = sc[2] * x437;
  const amrex::Real x2315 =
    exp(-g_RT[12] + g_RT[16] + g_RT[2] - 8554.6833186802305 * invT - tc[0]);
  const amrex::Real x2318 = exp(-8554.6833186802305 * invT - tc[0]);
  const amrex::Real x2321 =
    187000000000.0 * sc[12] * x2318 - 187000000000.0 * x2312 * x2315;
  const amrex::Real x2322 =
    57000000.0 * sc[3] * x255 - 57000000.0 * sc[3] * x371 -
    50000000.0 * sc[4] * x607 + 50000000.0 * sc[4] * x659 + x2321;
  amrex::Real x2327 =
    195039370078.74 * x27 * exp(-1035.1166815603121 * invT - 4.13 * tc[0]);
  amrex::Real x2328 = log(
    0.217 * exp(-0.0135135135135135 * tc[1]) +
    0.783 * exp(-0.00034002040122407302 * tc[1]) + exp(-6964.0 * invT));
  amrex::Real x2329 =
    -0.29097730287517898 * x2328 + 0.43429448190325198 * log(x2327) - 0.4;
  amrex::Real x2332 = -0.55155399201712996 * x2328 - 0.14 * x2329 + 0.75;
  const amrex::Real x2333 = ((x2329) * (x2329)) / ((x2332) * (x2332) * (x2332));
  const amrex::Real x2335 = x2329 / ((x2332) * (x2332));
  const amrex::Real x2337 = 0.196 * x2333 * x240 + 1.4 * x2335 * x240;
  amrex::Real x2339 =
    x2328 / ((((x2329) * (x2329)) / ((x2332) * (x2332)) + 1.0) *
             (((x2329) * (x2329)) / ((x2332) * (x2332)) + 1.0));
  amrex::Real x2340 = g_RT[10] - g_RT[11];
  amrex::Real x2342 = -1227.8486645635121 * invT - 4.76 * tc[0];
  x2328 = exp(
    M_LN10 * (0.43429448190325198 * x2328 /
              (((x2329) * (x2329)) / ((x2332) * (x2332)) + 1.0)));
  x2329 = x2328 * exp(-g_RT[2] - x2340 + x2342) / (x2327 + 1.0);
  x2332 = 2.477e+21 * sc[11] * x2329 * x2339 * x477;
  const amrex::Real x2352 = x2328 / ((x2327 + 1.0) * (x2327 + 1.0));
  const amrex::Real x2355 =
    sc[10] * sc[2] * x27 * exp(-2262.965346123824 * invT - 8.89 * tc[0]);
  const amrex::Real x2361 =
    sc[11] * x477 *
    exp(-g_RT[2] - 2262.965346123824 * invT - 8.89 * tc[0] - x2340);
  const amrex::Real x2364 = refC * sc[11] * x2329;
  const amrex::Real x2368 = sc[10] * sc[2] * x2328 * exp(x2342) / (x2327 + 1.0);
  const amrex::Real x2372 = 2.477e+21 * x2339 * x2368 * x27;
  const amrex::Real x2374 = 70000000.0 * sc[6] * x283 -
                            70000000.0 * sc[6] * x344 - x196 * x349 +
                            x196 * x362 - x2332 * x2337 + x2337 * x2372 +
                            3.3817876377952801e+32 * x2352 * x2355 -
                            3.3817876377952801e+32 * x2352 * x2361 +
                            1.7339e+21 * x2364 - 1.7339e+21 * x2368;
  x1778 = x1778 * (2.0 * x1773 * x240 + 0.28 * x1775 * x240);
  const amrex::Real x2421 =
    sc[28] * sc[2] * x1764 * x1778 - sc[29] * x1778 * x1787 -
    8.8445e+87 * x1768 * x1769 + 8.8445e+87 * x1768 * x1770 +
    1.33e+48 * x1785 * x1792 - 1.33e+48 * x1785 * x1796;
  const amrex::Real x2422 = -50000000.0 * sc[20] * x627 +
                            50000000.0 * sc[20] * x650 + x2421 -
                            20000000.0 * x317 * x808 + 20000000.0 * x680 * x808;
  const amrex::Real x2429 =
    -15000000.0 * sc[3] * x627 + 15000000.0 * sc[3] * x650;
  x2148 = 0.121602454932911 * ((x2148) * (x2148)) /
            (((x2150) * (x2150) * (x2150)) * x25) +
          2.0 * x2154;
  x2150 = -3.2236842105263198e+29 * x2146 * x2162 +
          3.2236842105263198e+29 * x2146 * x2175 + x2147 * x2148 -
          x2148 * x2169 + 1.4e+18 * x2161 * x2165 - 1.4e+18 * x2165 * x2182;
  const amrex::Real x2453 =
    -20000000.0 * sc[4] * x317 - 30000000.0 * sc[4] * x627 +
    30000000.0 * sc[4] * x650 + 20000000.0 * sc[4] * x680 + x468 * x691 -
    x606 * x691;
  const amrex::Real x2460 =
    -40000000.0 * sc[10] * x317 + 40000000.0 * sc[10] * x680 +
    60000000.0 * sc[11] * x468 - 60000000.0 * sc[11] * x606 - x321 * x627 +
    x321 * x650;
  x1929 = 0.121602454932911 * ((x1929) * (x1929)) /
            (((x1930) * (x1930) * (x1930)) * x25) +
          2.0 * x1963;
  x1930 = sc[25] * x1927 * x1957;
  const amrex::Real x2482 = x1927 * x1929 * x1971 - x1929 * x1930 -
                            4.3757575757575802e+50 * x1936 * x1942 +
                            4.3757575757575802e+50 * x1936 * x1967 -
                            3.8e+29 * x1950 + 3.8e+29 * x1955;
  const amrex::Real x2483 = 20000000.0 * sc[4] * x626 + x2482;
  x169 = x169 * (2.0 * x240 * x586 + 0.28 * x240 * x703);
  x1829 = 0.121602454932911 * ((x1829) * (x1829)) /
            (((x1831) * (x1831) * (x1831)) * x25) +
          2.0 * x1842;
  x1831 = -2.565e+21 * sc[18] * x1827 * x1834 +
          2.565e+21 * sc[19] * x1834 * x1848 - x1829 * x1852 + x1829 * x1867 +
          1.70446243523316e+34 * x1854 * x1856 - 1.70446243523316e+34 * x1860;
  x1877 = x1877 * (2.0 * x1901 * x240 + 0.28 * x1902 * x240);
  amrex::Real x2510 = -6.26e+26 * sc[30] * x1876 * x1877 * x1895 * x477 +
                      6.26e+26 * x1876 * x1897 +
                      6.26e+26 * x1877 * x1913 * x27 -
                      2.9464360902255599e+46 * x1885 * x1890 +
                      2.9464360902255599e+46 * x1885 * x1918 - 6.26e+26 * x1913;
  amrex::Real x2517 = -1.99e+29 * x1981 * x2015 + 1.99e+29 * x1985 -
                      7.6009596928982695e+46 * x1990 * x1996 +
                      7.6009596928982695e+46 * x1990 * x2018 -
                      x2011 * (2.0 * x2000 * x240 + 0.28 * x2001 * x240) +
                      x2024 * (2.0 * x2000 * x240 + 0.28 * x2001 * x240);
  const amrex::Real x2520 = sc[13] * x2029 * x2075;
  x2029 = sc[12] * sc[2] * x2029 * x2035 * x27;
  const amrex::Real x2527 = -sc[12] * sc[2] * x2035 +
                            x2029 * (0.28 * x2064 * x240 + 2.0 * x2065 * x240) +
                            1350000000000.0 * x2033 * x2079 +
                            1.67201834862385e+18 * x2041 * x2044 -
                            1.67201834862385e+18 * x2041 * x2057 -
                            x2520 * (0.28 * x2064 * x240 + 2.0 * x2065 * x240);
  const amrex::Real x2528 = -sc[10] * x169 * x792 + x169 * x225 * x956 + x1831 +
                            x2510 + x2517 + x2527 + 4.096e+20 * x282 +
                            3200000000000000.0 * x516 - 4.096e+20 * x528 -
                            3200000000000000.0 * x939;
  x2096 = x2096 * (2.0 * x2091 + 0.28 * x2093);
  const amrex::Real x2538 =
    -63280000.0 * x2084 * x2088 * x2096 - 782712744.331509 * x2086 * x2114 +
    782712744.331509 * x2086 * x2128 + 63280000.0 * x2088 +
    x2096 * x2100 * x2105 - 63280000.0 * x2100 * x2103;
  const amrex::Real x2541 = 9428000.0 * x2134 - 9428000.0 * x2137;
  const amrex::Real x2544 = 44000000000.0 * x2300 - 44000000000.0 * x2304;
  const amrex::Real x2545 =
    -3560000.0 * ((sc[2]) * (sc[2])) * x361 + 3560000.0 * x959;
  const amrex::Real x2546 = x2321 + x2538 + x2541 + x2544 + x2545;
  const amrex::Real x2556 =
    refC * sc[21] * x2253 +
    x2251 * x2282 * (0.28 * x2284 * x240 + 2.0 * x2285 * x240) -
    x2251 * x2291 * (0.28 * x2284 * x240 + 2.0 * x2285 * x240) -
    3.00565398683248e+51 * x2259 * x2263 +
    3.00565398683248e+51 * x2259 * x2278 - 2.027e+27 * x2271;
  amrex::Real x2557 = 0.28 * x2333 * x240 + 2.0 * x2335 * x240;
  const amrex::Real x2564 =
    -x2332 * x2557 + 4.83112519685039e+32 * x2352 * x2355 -
    4.83112519685039e+32 * x2352 * x2361 + 2.477e+21 * x2364 -
    2.477e+21 * x2368 + x2372 * x2557;
  const amrex::Real x2565 = x1756 + x2244 + x2556 + x2564;
  const amrex::Real x2570 =
    132000000.0 * sc[34] * exp(-181.15799968969901 * invT);
  const amrex::Real x2576 = -5625.96232369677 * invT - 2.39 * tc[0];
  const amrex::Real x2578 = sc[31] * exp(x2576);
  const amrex::Real x2583 =
    115.0 * sc[22] * exp(-3789.2214935095399 * invT + 1.9 * tc[0]);
  const amrex::Real x2587 =
    4.2 * sc[15] * exp(-2450.6651624689798 * invT + 2.1 * tc[0]);
  const amrex::Real x2590 =
    173.4 *
    exp(g_RT[2] - g_RT[6] - 1726.0331637101899 * invT + 1.51 * tc[0] - x143);
  const amrex::Real x2594 =
    sc[11] + 1.75 * sc[16] + 3.6 * sc[17] + sc[18] + sc[20] + sc[22] + x20;
  const amrex::Real x2597 = 0.7 * sc[0] + 2 * sc[6] + 12.0 * sc[7] + x2594;
  x148 = (-sc_qss[0] * x232 / x148 + x587) / x227;
  x227 = exp(2.0 * g_RT[16] - g_RT[23] + g_RT[2] - g_RT[3]);
  x232 = refCinv * ((sc[16]) * (sc[16]));
  const amrex::Real x2624 =
    0.63 * sc[0] + sc[11] + sc[16] + sc[18] + sc[20] + sc[22] + x20;
  const amrex::Real x2628 = refCinv * exp(
                                        g_RT[17] + 2.0 * g_RT[2] - g_RT[9] -
                                        g_RT_qss[2] - 754.82499870708 * invT);
  const amrex::Real x2638 = sc[26] * exp(-2516.0833290236001 * invT);
  const amrex::Real x2650 =
    5140.0 * exp(
               -g_RT[10] - g_RT[18] + g_RT[27] + g_RT[2] -
               11147.758797572 * invT + 0.86 * tc[0]);
  const amrex::Real x2654 =
    1.52e+53 * exp(-13561.185926771401 * invT - 13.54 * tc[0]);
  const amrex::Real x2657 = -30000000.0 * sc[20] * x612 +
                            30000000.0 * sc[20] * x616 - sc[27] * x2650 -
                            sc[27] * x2654 - 30000000.0 * sc[27] * x570;
  const amrex::Real x2661 = exp(
    g_RT[2] - g_RT[33] + g_RT[35] - g_RT_qss[3] - 291.86566616673701 * invT -
    0.36 * tc[0]);
  const amrex::Real x2665 = exp(
    g_RT[2] - g_RT[33] + g_RT[35] - g_RT_qss[2] - 291.86566616673701 * invT -
    0.36 * tc[0]);
  const amrex::Real x2670 = -38000000.0 * sc[35] * x2661 -
                            38000000.0 * sc[35] * x2665 - x642 * x666 +
                            x642 * x671 + x642 * x677 - x642 * x685;
  const amrex::Real x2672 =
    6.05 * exp(-2616.7266621845401 * invT + 2.0 * tc[0]);
  const amrex::Real x2675 = 24100000.0 * exp(-1997.7701632447399 * invT);
  const amrex::Real x2678 = exp(
    g_RT[2] - g_RT[33] + g_RT[36] - g_RT_qss[3] - 639.08516557199403 * invT -
    1.38 * tc[0]);
  const amrex::Real x2682 = exp(
    g_RT[2] - g_RT[33] + g_RT[36] - g_RT_qss[2] - 639.08516557199403 * invT -
    1.38 * tc[0]);
  const amrex::Real x2686 =
    90.0 * sc[36] * exp(-29266.0748498709 * invT + 1.7 * tc[0]);
  const amrex::Real x2690 =
    -310000000000.0 * sc[36] * x2678 - 310000000000.0 * sc[36] * x2682 - x2686 -
    x666 * x800 + x671 * x800 + x677 * x800 - x685 * x800;
  const amrex::Real x2692 =
    3.7e+18 * exp(-6292.7244058880196 * invT - 2.92 * tc[0]);
  const amrex::Real x2697 = 3970000.0 * exp(-337.65838275496702 * invT);
  const amrex::Real x2700 =
    0.5916 *
    exp(g_RT[2] - g_RT[6] - 26923.098053884099 * invT + 2.433 * tc[0] - x2111);
  const amrex::Real x2705 =
    -sc[5] * x2697 - sc[5] * x2700 -
    74850000.0 * sc[5] * exp(-148.44891641239201 * invT);
  const amrex::Real x2706 =
    30000000.0 * exp(-g_RT[12] + g_RT[17] + g_RT[2] - g_RT[3]);
  const amrex::Real x2711 =
    0.07046 * exp(
                -g_RT[16] + g_RT[17] + g_RT[2] - g_RT[4] +
                178.97907152676501 * invT + 2.053 * tc[0]);
  const amrex::Real x2714 =
    5757000.0 * exp(
                  -g_RT[16] + g_RT[17] + g_RT[2] - g_RT[4] -
                  166.98238621397999 * invT - 0.664 * tc[0]);
  const amrex::Real x2719 =
    660.0 * sc[11] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  const amrex::Real x2723 =
    16.32 * exp(-g_RT[18] + g_RT[23] + g_RT[2] - g_RT[3] + x97);
  const amrex::Real x2730 = -8.6e+16 * sc[14] * x1723 * x966 -
                            68000000.0 * sc[14] - x666 * x999 + x671 * x999;
  const amrex::Real x2735 =
    8300000.0 * exp(
                  g_RT[16] + g_RT[2] + g_RT[33] - g_RT[37] - g_RT[4] -
                  37986.819668266697 * invT - 0.1 * tc[0]);
  const amrex::Real x2741 =
    33600000.0 *
    exp(g_RT[2] - g_RT[32] + g_RT[33] - g_RT[4] - 193.738416334817 * invT);
  const amrex::Real x2746 =
    1.5e+18 * exp(
                -g_RT[10] - g_RT[19] + g_RT[28] + g_RT[2] -
                9368.8878839522695 * invT - 2.83 * tc[0]);
  const amrex::Real x2748 =
    exp(-g_RT[20] + g_RT[28] + g_RT[2] - g_RT_qss[2] - 3019.29999482832 * invT);
  const amrex::Real x2755 = -sc[28] * x1764 - sc[28] * x2746 -
                            20000000.0 * sc[28] * x2748 -
                            50000000.0 * sc[28] * x397 - 18000000.0 * sc[28] +
                            20000000.0 * x677 * x808 - 20000000.0 * x685 * x808;
  const amrex::Real x2756 =
    6.26e+26 * x1876 * exp(-3522.5166606330399 * invT - 6.66 * tc[0]);
  const amrex::Real x2763 =
    0.173 * sc[29] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  const amrex::Real x2764 =
    -sc[29] * x27 * x2756 - 8000000000000000.0 * sc[29] * exp(x2576) - x2763;
  const amrex::Real x2768 = exp(
    -2.0 * g_RT[10] + g_RT[21] + g_RT[2] - 5334.0966575300299 * invT +
    0.1 * tc[0]);
  const amrex::Real x2773 =
    26440000000.0 * sc[9] * exp(-8575.3152019782301 * invT - 0.6707 * tc[0]);
  const amrex::Real x2781 =
    1500.0 * sc[24] * exp(-1353.6528310147 * invT + 1.43 * tc[0]);
  const amrex::Real x2783 =
    48000000.0 * exp(-g_RT[19] + g_RT[24] + g_RT[2] - g_RT[3]);
  const amrex::Real x2786 = exp(-4025.7333264377598 * invT);
  const amrex::Real x2791 =
    94600000.0 *
    exp(
      -g_RT[13] + g_RT[24] + g_RT[2] - g_RT_qss[1] + 259.15658288943098 * invT);
  const amrex::Real x2799 =
    2.18e-10 * exp(
                 -g_RT[18] + g_RT[24] + g_RT[2] - g_RT[4] +
                 503.21666580471998 * invT + 4.5 * tc[0]);
  const amrex::Real x2801 = refCinv * sc[10];
  const amrex::Real x2804 =
    80.0 * exp(
             g_RT[10] + g_RT[24] - g_RT[29] + g_RT[2] - g_RT[3] -
             164.55184971814299 * invT + 1.65 * tc[0]);
  const amrex::Real x2808 =
    -3.8e+29 * sc[24] * x1926 * x25 * exp(x1946) - sc[24] * x2783 -
    50000000.0 * sc[24] * x2786 - sc[24] * x2791 - sc[24] * x2799 -
    sc[24] * x2801 * x2804 - 20000000.0 * sc[24] * x389 +
    20000000.0 * sc[4] * x940 - x2781 - x612 * x624 + x616 * x624;
  x1819 = 2.565e+21 * refCinv * sc[18] * x1834 * x25 *
          exp(g_RT[18] - g_RT[19] + g_RT[2] + x1824) / (x1819 + 1.0);
  x1824 = -50000000.0 * sc[10] * x723 + 50000000.0 * sc[10] * x730 -
          40000000.0 * sc[18] * x530 - 50000000.0 * sc[18] * x588 - x1819;
  const amrex::Real x2824 =
    -sc[12] * x2035 * x27 - 15000000.0 * sc[12] * x448 -
    80000000.0 * sc[12] * x512 - 30000000.0 * sc[12] * x547 -
    120000000.0 * sc[12] + 80000000.0 * sc[3] * x677 -
    80000000.0 * sc[3] * x685 - 30000000.0 * sc[4] * x612 +
    30000000.0 * sc[4] * x616;
  const amrex::Real x2832 =
    -30000000.0 * sc[10] * x612 + 30000000.0 * sc[10] * x616 -
    1.4e+18 * sc[19] * x2165 * x25 * exp(x2158) - 30000000.0 * sc[19] * x554 -
    150000000.0 * sc[19] + x940 * x990;
  const amrex::Real x2834 =
    5710000.0 *
    exp(g_RT[13] + g_RT[2] - g_RT[7] - g_RT_qss[1] + 379.92858268256299 * invT);
  const amrex::Real x2838 =
    84300000.0 * exp(-g_RT[10] + g_RT[13] + g_RT[2] - g_RT[3]);
  const amrex::Real x2842 =
    23000.0 * exp(-1648.03458051046 * invT + 1.05 * tc[0]);
  const amrex::Real x2849 =
    -sc[13] * x2202 * x88 - sc[13] * x2834 - sc[13] * x2838 - sc[13] * x2842 -
    30000000.0 * sc[13] * x414 - 20000000.0 * sc[13] * x482 -
    30000000.0 * sc[4] * x666 + 30000000.0 * sc[4] * x671 +
    20000000.0 * sc[4] * x677 - 20000000.0 * sc[4] * x685 - x612 * x691 +
    x616 * x691;
  const amrex::Real x2854 =
    50.7 * sc[20] * exp(-6516.6558221711202 * invT + 1.9 * tc[0]);
  const amrex::Real x2859 =
    12000000.0 *
    exp(
      -g_RT[10] + g_RT[20] + g_RT[2] - g_RT_qss[3] + 286.83349950869001 * invT);
  const amrex::Real x2868 =
    40000000.0 * sc[10] * x677 - 40000000.0 * sc[10] * x685 -
    60000000.0 * sc[11] * x612 + 60000000.0 * sc[11] * x616 -
    2.027e+27 * sc[20] * x2250 * x27 * exp(x2267) - sc[20] * x2859 -
    40000000.0 * sc[20] * x524 - 60000000.0 * sc[20] * x583 - x2854 -
    x321 * x666 + x321 * x671;
  const amrex::Real x2870 = 16720000000.0 * sc[0] + 88000000000.0 * sc[6] +
                            277200000000.0 * sc[7] + 44000000000.0 * x2594;
  const amrex::Real x2873 =
    0.04589 *
    exp(g_RT[2] - g_RT[6] - 3150.13632793755 * invT + 2.7 * tc[0] - x2132);
  const amrex::Real x2875 = -sc[4] * x2302 * x2870 - sc[4] * x2873 -
                            28000000.0 * sc[9] * x666 +
                            28000000.0 * sc[9] * x671;
  const amrex::Real x2885 =
    187000000000.0 * x2315 * (sc[0] + 2 * sc[6] + x2594);
  const amrex::Real x2890 =
    -57000000.0 * sc[16] * x551 - 50000000.0 * sc[16] * x595 -
    57000000.0 * sc[3] * x612 + 57000000.0 * sc[3] * x616 -
    15000000.0 * sc[3] * x666 + 15000000.0 * sc[3] * x671 -
    50000000.0 * sc[4] * x723 + 50000000.0 * sc[4] * x730 -
    2244000000000.0 * sc[7] * x2315 * x437 - x2885 * x437;
  const amrex::Real x2892 = exp(-2012.8666632188799 * invT);
  const amrex::Real x2894 = 20000000.0 * sc[25] * x2892;
  x12 = x115 * (-sc_qss[1] * x219 / x110 - sc_qss[2] * x12 / x110 + x469);
  x110 = 0.5 * exp(
                 g_RT[10] + g_RT[2] - g_RT[6] - g_RT_qss[2] -
                 3638.25649376812 * invT + 2.0 * tc[0]);
  x115 = 2.477e+21 * x2328 * exp(x2342) / (x2327 + 1.0);
  x219 = -sc[10] * x110 - sc[10] * x115 * x27 - 70000000.0 * sc[10] * x454 -
         70000000.0 * sc[6] * x666 + 70000000.0 * sc[6] * x671 + x196 * x677 -
         x196 * x685;
  x469 =
    3970000.0 *
    exp(-g_RT[2] + g_RT[3] - g_RT[5] + g_RT[7] - 337.65838275496702 * invT);
  x2327 = 26440000000.0 * exp(
                            -g_RT[2] + g_RT[3] + g_RT[4] - g_RT[9] -
                            8575.3152019782301 * invT - 0.6707 * tc[0]);
  x2342 = 80.0 * exp(-164.55184971814299 * invT + 1.65 * tc[0]);
  x2328 =
    -15000000.0 * sc[3] * x679 + 15000000.0 * sc[3] * x696 + 15000000.0 * x12;
  const amrex::Real x2980 =
    80000000.0 * sc[3] * x166 - 80000000.0 * sc[3] * x706 -
    30000000.0 * sc[4] * x622 + 30000000.0 * sc[4] * x630 + 80000000.0 * x217;
  const amrex::Real x2990 =
    40000000.0 * sc[10] * x166 - 40000000.0 * sc[10] * x706 -
    60000000.0 * sc[11] * x622 + 60000000.0 * sc[11] * x630 - x321 * x679 +
    x321 * x696;
  const amrex::Real x2998 =
    84300000.0 * sc[10] + 20000000.0 * sc[4] * x166 -
    30000000.0 * sc[4] * x679 + 30000000.0 * sc[4] * x696 -
    20000000.0 * sc[4] * x706 - x622 * x691 + x630 * x691;
  const amrex::Real x2999 =
    0.04589 * exp(-3150.13632793755 * invT + 2.7 * tc[0]);
  const amrex::Real x3007 =
    -57000000.0 * sc[3] * x622 + 57000000.0 * sc[3] * x630 -
    50000000.0 * sc[4] * x739 + 50000000.0 * sc[4] * x743 + 57000000.0 * x148;
  const amrex::Real x3013 = x2150 + x2421 + x626 * x990;
  const amrex::Real x3017 =
    95100.0 *
    exp(g_RT[20] - g_RT[26] - g_RT[2] + g_RT[4] - 2516.0833290236001 * invT);
  const amrex::Real x3021 =
    132000000.0 *
    exp(-g_RT[2] + g_RT[33] - g_RT[34] + g_RT[4] - 181.15799968969901 * invT);
  const amrex::Real x3023 =
    96000000.0 * exp(g_RT[14] - g_RT[2] - g_RT[38] + g_RT[4]);
  const amrex::Real x3025 =
    24100000.0 *
    exp(-g_RT[2] + g_RT[4] + g_RT[7] - g_RT[8] - 1997.7701632447399 * invT);
  const amrex::Real x3028 =
    sc[4] * exp(-g_RT[2] + 2.0 * g_RT[4] - g_RT[5] - 148.44891641239201 * invT);
  const amrex::Real x3033 =
    173.4 * sc[6] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  const amrex::Real x3066 =
    0.07046 * exp(178.97907152676501 * invT + 2.053 * tc[0]);
  const amrex::Real x3068 =
    5757000.0 * exp(-166.98238621397999 * invT - 0.664 * tc[0]);
  const amrex::Real x3075 =
    8300000.0 * sc[37] * exp(-37986.819668266697 * invT - 0.1 * tc[0]);
  const amrex::Real x3076 = 33600000.0 * exp(-193.738416334817 * invT);
  const amrex::Real x3085 =
    32000000.0 * exp(g_RT[10] - g_RT[14] - g_RT[2] + g_RT[4]);
  const amrex::Real x3095 =
    2.18e-10 * exp(503.21666580471998 * invT + 4.5 * tc[0]);
  const amrex::Real x3101 = sc[18] * x3095 + 20000000.0 * sc[4] * x504 -
                            20000000.0 * sc_qss[3] * x74 - x131 * x624 -
                            20000000.0 * x392 / x72 + x624 * x633;
  const amrex::Real x3102 =
    -15000000.0 * sc[3] * x700 + 15000000.0 * sc[3] * x701;
  const amrex::Real x3108 =
    -80000000.0 * sc[3] * x721 + 80000000.0 * sc[3] * x728 -
    30000000.0 * sc[4] * x131 + 30000000.0 * sc[4] * x633 + 30000000.0 * x148;
  const amrex::Real x3119 =
    -40000000.0 * sc[10] * x721 + 40000000.0 * sc[10] * x728 -
    60000000.0 * sc[11] * x131 + 60000000.0 * sc[11] * x633 - x321 * x700 +
    x321 * x701;
  const amrex::Real x3127 =
    -30000000.0 * sc[4] * x700 + 30000000.0 * sc[4] * x701 -
    20000000.0 * sc[4] * x721 + 20000000.0 * sc[4] * x728 + 30000000.0 * x12 -
    x131 * x691 + 20000000.0 * x217 + x633 * x691;
  x258 = x658 * (-x261 * x587 - x602 / x258);
  x261 = -57000000.0 * sc[3] * x131 + 57000000.0 * sc[3] * x633 -
         50000000.0 * sc[4] * x756 + 50000000.0 * sc[4] * x763 +
         50000000.0 * x258;
  x587 = -sc[2] * x2302 * x2870 - sc[2] * x2873 - 28000000.0 * sc[9] * x700 +
         28000000.0 * sc[9] * x701;
  x602 = -g_RT[5] + g_RT[8];
  x658 =
    6.05 *
    exp(-g_RT[2] + g_RT[6] - 2616.7266621845401 * invT + 2.0 * tc[0] - x602);
  const amrex::Real x3200 = -x180 * x321 + x2556;
  const amrex::Real x3202 = -40000000.0 * sc[10] * x736 +
                            40000000.0 * sc[10] * x737 +
                            60000000.0 * sc[11] * x176 -
                            60000000.0 * sc[11] * x643 + x3200 + x321 * x617;
  const amrex::Real x3210 =
    -sc[2] * x2697 - sc[2] * x2700 -
    74850000.0 * sc[2] * exp(-148.44891641239201 * invT);
  const amrex::Real x3225 = -x180 * x954;
  const amrex::Real x3228 = -15000000.0 * sc[3] * x180;
  const amrex::Real x3229 = 15000000.0 * sc[3] * x617 + x3228;
  const amrex::Real x3230 = -28000000.0 * sc[9] * x180 + x2544;
  const amrex::Real x3231 = -50000000.0 * sc[20] * x180;
  const amrex::Real x3234 = x1756 - x180 * x999;
  const amrex::Real x3235 =
    30000000.0 * sc[2] * x180 + x2538 + x3013 + x3231 + x3234;
  const amrex::Real x3237 = -30000000.0 * sc[2] * x617 +
                            30000000.0 * sc[4] * x617 +
                            28000000.0 * sc[9] * x617 + x3225 + x3229 + x3230 +
                            x3235 + x617 * x954 + x617 * x999;
  const amrex::Real x3239 = -30000000.0 * sc[4] * x180 + x2244;
  const amrex::Real x3241 = -70000000.0 * sc[6] * x180 + x2564;
  const amrex::Real x3242 =
    x2321 + x2483 + x2528 + x2541 + x2545 + x3239 + x3241;
  const amrex::Real x3244 =
    1800000.0 * exp(g_RT[29] - g_RT[2] - g_RT[30] + g_RT[6]);
  const amrex::Real x3248 =
    20000000.0 *
    exp(g_RT[24] - g_RT[25] - g_RT[2] + g_RT[6] - 2012.8666632188799 * invT);
  const amrex::Real x3251 =
    0.5916 * sc[9] * exp(-26923.098053884099 * invT + 2.433 * tc[0]);
  const amrex::Real x3252 = 115.0 * exp(
                                      g_RT[21] - g_RT[22] - g_RT[2] + g_RT[6] -
                                      3789.2214935095399 * invT + 1.9 * tc[0]);
  const amrex::Real x3254 = 0.173 * exp(
                                      g_RT[28] - g_RT[29] - g_RT[2] + g_RT[6] -
                                      1253.00949785375 * invT + 2.5 * tc[0]);
  const amrex::Real x3256 = 4.2 * exp(
                                    g_RT[14] - g_RT[15] - g_RT[2] + g_RT[6] -
                                    2450.6651624689798 * invT + 2.1 * tc[0]);
  const amrex::Real x3258 =
    2000000.0 * exp(g_RT[20] - g_RT[21] - g_RT[2] + g_RT[6]);
  const amrex::Real x3260 =
    173.4 * sc[4] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  const amrex::Real x3302 = 90.0 * exp(
                                     -g_RT[2] - g_RT[36] + g_RT[37] + g_RT[6] -
                                     29266.0748498709 * invT + 1.7 * tc[0]);
  const amrex::Real x3304 =
    sc[37] * x3302 - x726 * x800 + x732 * x800 - x741 * x800 + x748 * x800;
  const amrex::Real x3308 = 660.0 * exp(
                                      g_RT[10] - g_RT[11] - g_RT[2] + g_RT[6] -
                                      5454.8686573231598 * invT + 1.62 * tc[0]);
  const amrex::Real x3314 =
    20000000.0 * exp(g_RT[13] - g_RT[14] - g_RT[2] + g_RT[6]);
  const amrex::Real x3320 =
    18000000.0 * exp(g_RT[27] - g_RT[28] - g_RT[2] + g_RT[6]);
  const amrex::Real x3330 = x1927 * x1971 * (0.56 * x1962 + 4.0 * x1963) -
                            x1930 * (0.56 * x1962 + 4.0 * x1963) -
                            8.7515151515151504e+50 * x1936 * x1942 +
                            8.7515151515151504e+50 * x1936 * x1967 -
                            7.6e+29 * x1950 + 7.6e+29 * x1955;
  const amrex::Real x3339 =
    exp(g_RT[23] - g_RT[24] - g_RT[2] + g_RT[6] - 4025.7333264377598 * invT);
  amrex::Real x3344 =
    120000000.0 * exp(-g_RT[12] + g_RT[16] - g_RT[2] + g_RT[6]);
  amrex::Real x3355 =
    x2029 * (0.56 * x2064 * x240 + 4.0 * x2065 * x240) +
    2700000000000.0 * x2033 * x2079 + 3.3440366972477102e+18 * x2041 * x2044 -
    3.3440366972477102e+18 * x2041 * x2057 - 2700000000000.0 * x2052 -
    x2520 * (0.56 * x2064 * x240 + 4.0 * x2065 * x240);
  const amrex::Real x3356 =
    sc[16] * x3344 - 80000000.0 * sc[3] * x741 + 80000000.0 * sc[3] * x748 -
    30000000.0 * sc[4] * x207 + 30000000.0 * sc[4] * x653 + x3355;
  const amrex::Real x3360 = -sc_qss[3] * x74 - x392 / x72;
  const amrex::Real x3362 =
    90000000.0 * exp(g_RT[18] - g_RT[19] - g_RT[2] + g_RT[6]);
  const amrex::Real x3367 = -30000000.0 * sc[10] * x207 +
                            30000000.0 * sc[10] * x653 + sc[18] * x3362 +
                            60000000.0 * x18 * x3360 + x814 * x990;
  const amrex::Real x3374 =
    23000.0 * exp(
                g_RT[12] - g_RT[13] - g_RT[2] + g_RT[6] -
                1648.03458051046 * invT + 1.05 * tc[0]);
  const amrex::Real x3377 =
    sc[12] * x3374 - 30000000.0 * sc[4] * x726 + 30000000.0 * sc[4] * x732 -
    20000000.0 * sc[4] * x741 + 20000000.0 * sc[4] * x748 - x207 * x691 +
    x653 * x691;
  const amrex::Real x3383 = 50.7 * exp(
                                     g_RT[19] - g_RT[20] - g_RT[2] + g_RT[6] -
                                     6516.6558221711202 * invT + 1.9 * tc[0]);
  const amrex::Real x3386 =
    -40000000.0 * sc[10] * x741 + 40000000.0 * sc[10] * x748 -
    60000000.0 * sc[11] * x207 + 60000000.0 * sc[11] * x653 + sc[19] * x3383 -
    x321 * x726 + x321 * x732;
  const amrex::Real x3390 = sc[3] * x2999 - 28000000.0 * sc[9] * x726 +
                            28000000.0 * sc[9] * x732 + 88000000000.0 * x2300 -
                            88000000000.0 * x2304;
  const amrex::Real x3401 =
    374000000000.0 * sc[12] * x2318 - 57000000.0 * sc[3] * x207 +
    57000000.0 * sc[3] * x653 - 15000000.0 * sc[3] * x726 +
    15000000.0 * sc[3] * x732 - 50000000.0 * sc[4] * x829 +
    50000000.0 * sc[4] * x843 - 374000000000.0 * x2312 * x2315;
  const amrex::Real x3408 =
    -70000000.0 * sc[6] * x726 + 70000000.0 * sc[6] * x732 + 70000000.0 * x12 -
    x196 * x741 + x196 * x748 +
    0.5 * x217 * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  const amrex::Real x3409 = refC * sc[15] * x1729;
  const amrex::Real x3412 = 0.43429448190325198 * ((x978) * (x978)) /
                            (((x1718) * (x1718) * (x1718)) * x88);
  const amrex::Real x3420 =
    -1.72e+17 * x1726 - 2.9584e+26 * x1732 * x1735 +
    2.9584e+26 * x1732 * x1751 + x1748 * (4.0 * x1741 + 0.56 * x3412) -
    x1754 * (4.0 * x1741 + 0.56 * x3412) + 1.72e+17 * x3409;
  const amrex::Real x3428 =
    -1.7689e+88 * x1768 * x1769 + 1.7689e+88 * x1768 * x1770 +
    2.66e+48 * x1785 * x1792 - 2.66e+48 * x1785 * x1796 -
    x1789 * (4.0 * x1773 * x240 + 0.56 * x1775 * x240) +
    x1810 * (4.0 * x1773 * x240 + 0.56 * x1775 * x240);
  x1828 = x1828 * (4.0 * x1842 + 0.56 * x1844);
  const amrex::Real x3436 = sc[18] * x1828 * x1865 - sc[19] * x1828 * x1850 -
                            5.13e+21 * x1836 +
                            3.4089248704663201e+34 * x1854 * x1856 -
                            3.4089248704663201e+34 * x1860 + 5.13e+21 * x1870;
  const amrex::Real x3446 = -6.4473684210526297e+29 * x2146 * x2162 +
                            6.4473684210526297e+29 * x2146 * x2175 +
                            x2147 * (0.56 * x2152 + 4.0 * x2154) +
                            2.8e+18 * x2161 * x2165 - 2.8e+18 * x2165 * x2182 -
                            x2169 * (0.56 * x2152 + 4.0 * x2154);
  x2226 = sc[13] * sc[2] * exp(x2226);
  const amrex::Real x3458 = -4.4e+18 * x2200 * x2226 + 4.4e+18 * x2200 * x2236 +
                            x2203 * (0.56 * x2222 + 4.0 * x2223) -
                            1.79259259259259e+31 * x2210 * x2215 +
                            1.79259259259259e+31 * x2210 * x2218 -
                            x2239 * (0.56 * x2222 + 4.0 * x2223);
  const amrex::Real x3468 =
    4.054e+27 * refC * sc[21] * x2250 * x2273 -
    4.054e+27 * sc[20] * sc[2] * x2250 * exp(x2267) +
    x2251 * x2282 * (0.56 * x2284 * x240 + 4.0 * x2285 * x240) -
    x2251 * x2291 * (0.56 * x2284 * x240 + 4.0 * x2285 * x240) -
    6.0113079736649601e+51 * x2259 * x2263 +
    6.0113079736649601e+51 * x2259 * x2278;
  x2339 = x2339 * (0.56 * x2333 * x240 + 4.0 * x2335 * x240);
  const amrex::Real x3477 = -2.477e+21 * sc[11] * x2329 * x2339 * x477 +
                            2.477e+21 * x2339 * x2368 * x27 +
                            9.6622503937007901e+32 * x2352 * x2355 -
                            9.6622503937007901e+32 * x2352 * x2361 +
                            4.954e+21 * x2364 - 4.954e+21 * x2368;
  amrex::Real x3479 = 4.0 * x240 * x586 + 0.56 * x240 * x703;
  amrex::Real x3495 = -1.252e+27 * x1876 * x1880 + 1.252e+27 * x1876 * x1897 -
                      x1878 * (4.0 * x1901 * x240 + 0.56 * x1902 * x240) -
                      5.8928721804511299e+46 * x1885 * x1890 +
                      5.8928721804511299e+46 * x1885 * x1918 +
                      x1916 * (4.0 * x1901 * x240 + 0.56 * x1902 * x240);
  x2003 = x2003 * (4.0 * x2000 * x240 + 0.56 * x2001 * x240);
  amrex::Real x3504 =
    3.98e+29 * refC * sc[22] * x1981 * x1983 - 3.98e+29 * x1981 * x2015 -
    1.99e+29 * x1985 * x2003 * x27 - 1.5201919385796501e+47 * x1990 * x1996 +
    1.5201919385796501e+47 * x1990 * x2018 + x2003 * x2015 * x2022;
  const amrex::Real x3505 = 8.192e+20 * x282 - x345 * x3479 + x3479 * x535 +
                            x3495 + x3504 + 6400000000000000.0 * x516 -
                            8.192e+20 * x528 - 6400000000000000.0 * x939;
  const amrex::Real x3521 = 12.0 * x240 * x586 + 1.68 * x240 * x703;
  const amrex::Real x3536 =
    5000.0 *
    exp(g_RT[19] - g_RT[26] - g_RT[2] + g_RT[7] - 2516.0833290236001 * invT);
  x974 = x974 * (12.0 * x1741 + 1.68 * x3412);
  const amrex::Real x3566 =
    8.6e+16 * sc[14] * sc[2] * x1723 * x966 * x974 + 16000000.0 * x12 * x78 -
    5.16e+17 * x1726 - x1731 * x88 * x974 - 8.8752e+26 * x1732 * x1735 +
    8.8752e+26 * x1732 * x1751 + 5.16e+17 * x3409 - x733 * x999 + x740 * x999;
  const amrex::Real x3580 =
    -50000000.0 * sc[20] * x733 + 50000000.0 * sc[20] * x740 -
    5.3067e+88 * x1768 * x1769 + 5.3067e+88 * x1768 * x1770 +
    7.98e+48 * x1785 * x1792 - 7.98e+48 * x1785 * x1796 -
    x1789 * (12.0 * x1773 * x240 + 1.68 * x1775 * x240) +
    x1810 * (12.0 * x1773 * x240 + 1.68 * x1775 * x240) -
    20000000.0 * x751 * x808 + 20000000.0 * x760 * x808;
  const amrex::Real x3590 =
    -50000000.0 * sc[10] * x864 + 50000000.0 * sc[10] * x871 -
    1.539e+22 * x1836 - x1852 * (12.0 * x1842 + 1.68 * x1844) +
    1.0226774611399e+35 * x1854 * x1856 - 1.0226774611399e+35 * x1860 +
    x1867 * (12.0 * x1842 + 1.68 * x1844) + 1.539e+22 * x1870;
  const amrex::Real x3598 =
    3.756e+27 * x1876 * x1897 -
    x1878 * (12.0 * x1901 * x240 + 1.68 * x1902 * x240) -
    1.7678616541353401e+47 * x1885 * x1890 +
    1.7678616541353401e+47 * x1885 * x1918 - 3.756e+27 * x1913 +
    x1916 * (12.0 * x1901 * x240 + 1.68 * x1902 * x240);
  const amrex::Real x3603 = 12.0 * x2000 * x240 + 1.68 * x2001 * x240;
  const amrex::Real x3608 = -1.194e+30 * x1981 * x2015 + 1.194e+30 * x1985 -
                            4.5605758157389599e+47 * x1990 * x1996 +
                            4.5605758157389599e+47 * x1990 * x2018 -
                            x2011 * x3603 + x2024 * x3603;
  const amrex::Real x3613 = x1927 * (1.68 * x1962 + 12.0 * x1963);
  const amrex::Real x3621 =
    -sc[25] * x1957 * x3613 + 20000000.0 * sc[4] * x858 - x159 * x624 -
    2.6254545454545501e+51 * x1936 * x1942 +
    2.6254545454545501e+51 * x1936 * x1967 - 2.28e+30 * x1950 +
    2.28e+30 * x1955 + x1971 * x3613 + x370 * x624;
  const amrex::Real x3622 =
    -15000000.0 * sc[3] * x733 + 15000000.0 * sc[3] * x740;
  const amrex::Real x3635 =
    -80000000.0 * sc[3] * x751 + 80000000.0 * sc[3] * x760 -
    30000000.0 * sc[4] * x159 + 30000000.0 * sc[4] * x370 +
    x2029 * (1.68 * x2064 * x240 + 12.0 * x2065 * x240) +
    8100000000000.0 * x2033 * x2079 + 1.0032110091743101e+19 * x2041 * x2044 -
    1.0032110091743101e+19 * x2041 * x2057 - 8100000000000.0 * x2052 -
    x2520 * (1.68 * x2064 * x240 + 12.0 * x2065 * x240);
  const amrex::Real x3647 = -9306454530.10164 * x2086 * x2114 +
                            9306454530.10164 * x2086 * x2128 +
                            752399200.0 * x2088 - 752399200.0 * x2100 * x2103 +
                            x2107 * (23.78 * x2091 + 3.3292 * x2093) -
                            x2126 * (23.78 * x2091 + 3.3292 * x2093);
  const amrex::Real x3658 = -30000000.0 * sc[10] * x159 +
                            30000000.0 * sc[10] * x370 -
                            1.9342105263157899e+30 * x2146 * x2162 +
                            1.9342105263157899e+30 * x2146 * x2175 +
                            x2147 * (1.68 * x2152 + 12.0 * x2154) +
                            8.4e+18 * x2161 * x2165 - 8.4e+18 * x2165 * x2182 -
                            x2169 * (1.68 * x2152 + 12.0 * x2154) + x858 * x990;
  const amrex::Real x3662 = x2251 * (1.68 * x2284 * x240 + 12.0 * x2285 * x240);
  const amrex::Real x3672 =
    -40000000.0 * sc[10] * x751 + 40000000.0 * sc[10] * x760 -
    60000000.0 * sc[11] * x159 + 60000000.0 * sc[11] * x370 -
    1.80339239209949e+52 * x2259 * x2263 +
    1.80339239209949e+52 * x2259 * x2278 - 1.2162e+28 * x2271 +
    1.2162e+28 * x2276 + x2282 * x3662 - x2291 * x3662 - x321 * x733 +
    x321 * x740;
  const amrex::Real x3687 =
    -30000000.0 * sc[4] * x733 + 30000000.0 * sc[4] * x740 -
    20000000.0 * sc[4] * x751 + 20000000.0 * sc[4] * x760 +
    5710000.0 * x148 * exp(379.92858268256299 * invT) - x159 * x691 -
    1.32e+19 * x2200 * x2226 + 1.32e+19 * x2200 * x2236 +
    x2203 * (1.68 * x2222 + 12.0 * x2223) -
    5.3777777777777801e+31 * x2210 * x2215 +
    5.3777777777777801e+31 * x2210 * x2218 -
    x2239 * (1.68 * x2222 + 12.0 * x2223) + x370 * x691;
  const amrex::Real x3695 =
    2244000000000.0 * sc[12] * x2318 - 57000000.0 * sc[3] * x159 +
    57000000.0 * sc[3] * x370 - 50000000.0 * sc[4] * x864 +
    50000000.0 * sc[4] * x871 - 2244000000000.0 * x2312 * x2315;
  const amrex::Real x3699 = -28000000.0 * sc[9] * x733 +
                            28000000.0 * sc[9] * x740 + x2299 * x2870 +
                            277200000000.0 * x2300 - 277200000000.0 * x2304;
  const amrex::Real x3712 =
    -70000000.0 * sc[6] * x733 + 70000000.0 * sc[6] * x740 - x196 * x751 +
    x196 * x760 - x2332 * (1.68 * x2333 * x240 + 12.0 * x2335 * x240) +
    2.8986751181102398e+33 * x2352 * x2355 -
    2.8986751181102398e+33 * x2352 * x2361 + 1.4862e+22 * x2364 -
    1.4862e+22 * x2368 + x2372 * (1.68 * x2333 * x240 + 12.0 * x2335 * x240);
  const amrex::Real x3729 = -30000000.0 * sc[20] * x657;
  const amrex::Real x3730 = 30000000.0 * sc[20] * x663 + x3729;
  const amrex::Real x3735 =
    -80000000.0 * sc[3] * x764 - 30000000.0 * sc[4] * x657;
  const amrex::Real x3736 = 80000000.0 * sc[3] * x824 + x3735;
  const amrex::Real x3742 =
    -57000000.0 * sc[3] * x657 - 50000000.0 * sc[4] * x877 + x2321;
  const amrex::Real x3751 = -x180 * x642 - x642 * x764;
  const amrex::Real x3752 = x3751 + x617 * x642 + x642 * x824;
  const amrex::Real x3759 = -20000000.0 * sc[4] * x764 + x3239 - x657 * x691;
  const amrex::Real x3760 = 20000000.0 * sc[4] * x824 + x3759;
  const amrex::Real x3763 = -x196 * x764 + x3241;
  const amrex::Real x3765 =
    50000000.0 * sc[20] * x617 + 70000000.0 * sc[6] * x617 + x196 * x824 +
    x300 * x824 + x3237 + x3752 + x3760 + x3763 + 20000000.0 * x808 * x824 -
    x824 * x980 - x824 * x992;
  const amrex::Real x3768 = -x180 * x800 - x764 * x800;
  const amrex::Real x3769 = x3768 + x617 * x800 + x800 * x824;
  const amrex::Real x3773 =
    -40000000.0 * sc[10] * x764 - 60000000.0 * sc[11] * x657;
  const amrex::Real x3774 =
    40000000.0 * sc[10] * x824 + x3200 + x321 * x617 + x3773;
  const amrex::Real x3777 = x2483 - x624 * x657;
  const amrex::Real x3779 = -50000000.0 * sc[10] * x877;
  const amrex::Real x3792 =
    -30000000.0 * sc[10] * x657 + 110000000.0 * sc[2] * x657 -
    16200000.0 * sc[33] * x657 + x2528 + x2541 + x2545 - x300 * x764 -
    x369 * x877 - 30000000.0 * x623 * x657 - x657 * x690 -
    20000000.0 * x764 * x808 + x764 * x980 + x764 * x992;
  const amrex::Real x3797 =
    30000000.0 * sc[10] * x663 + 50000000.0 * sc[10] * x887 +
    60000000.0 * sc[11] * x663 - 110000000.0 * sc[2] * x663 +
    16200000.0 * sc[33] * x663 + 57000000.0 * sc[3] * x663 +
    30000000.0 * sc[4] * x663 + 50000000.0 * sc[4] * x887 + x369 * x887 +
    x3730 + x3736 + x3742 + x3765 + x3769 + x3774 + x3777 + x3779 + x3792 +
    30000000.0 * x623 * x663 + x624 * x663 + x663 * x690 + x663 * x691;
  const amrex::Real x3798 =
    0.5916 * sc[6] * exp(-26923.098053884099 * invT + 2.433 * tc[0]);
  const amrex::Real x3806 = x217 * exp(-754.82499870708 * invT);
  const amrex::Real x3847 =
    -15000000.0 * sc[3] * x745 + 15000000.0 * sc[3] * x747;
  const amrex::Real x3863 =
    40000000.0 * sc[10] * x145 - 40000000.0 * sc[10] * x840 -
    60000000.0 * sc[11] * x674 + 60000000.0 * sc[11] * x676 - x321 * x745 +
    x321 * x747;
  const amrex::Real x3870 =
    20000000.0 * sc[4] * x145 - 30000000.0 * sc[4] * x745 +
    30000000.0 * sc[4] * x747 - 20000000.0 * sc[4] * x840 - x674 * x691 +
    x676 * x691;
  const amrex::Real x3877 =
    26440000000.0 * sc[2] * exp(-8575.3152019782301 * invT - 0.6707 * tc[0]);
  const amrex::Real x3886 =
    -sc[2] * x2098 * x2105 - 665305832.681783 * x2086 * x2114 +
    665305832.681783 * x2086 * x2128 + 53788000.0 * x2088 -
    53788000.0 * x2100 * x2103 + x2107 * (1.7 * x2091 + 0.238 * x2093) -
    x2126 * (1.7 * x2091 + 0.238 * x2093) - x3877;
  const amrex::Real x3892 =
    90000000.0 * exp(g_RT[10] + g_RT[12] - g_RT[25] - g_RT[2]);
  const amrex::Real x3895 =
    3.7e+18 * exp(
                g_RT[10] + g_RT[21] - g_RT[2] - g_RT[30] -
                6292.7244058880196 * invT - 2.92 * tc[0]);
  const amrex::Real x3897 =
    3.2e+16 * exp(g_RT[10] + g_RT[29] - g_RT[2] - g_RT[31] + x2576);
  const amrex::Real x3901 =
    8000000000000000.0 * exp(g_RT[10] + g_RT[20] - g_RT[29] - g_RT[2] + x2576);
  const amrex::Real x3903 =
    sc[10] * exp(-5334.0966575300299 * invT + 0.1 * tc[0]);
  const amrex::Real x3922 =
    5140.0 * exp(-11147.758797572 * invT + 0.86 * tc[0]);
  const amrex::Real x3946 =
    1500.0 * exp(
               g_RT[10] + g_RT[16] - g_RT[24] - g_RT[2] -
               1353.6528310147 * invT + 1.43 * tc[0]);
  const amrex::Real x3948 = refCinv * sc[24] * sc[2] * x2804;
  const amrex::Real x3951 =
    1.5e+18 * exp(-9368.8878839522695 * invT - 2.83 * tc[0]);
  const amrex::Real x3960 =
    -15000000.0 * sc[3] * x759 + 15000000.0 * sc[3] * x767;
  const amrex::Real x3976 =
    84300000.0 * sc[3] - 30000000.0 * sc[4] * x759 + 30000000.0 * sc[4] * x767 +
    20000000.0 * sc[4] * x856 - 20000000.0 * sc[4] * x862 - x686 * x691 +
    x689 * x691;
  const amrex::Real x3986 =
    40000000.0 * sc[10] * x856 - 40000000.0 * sc[10] * x862 -
    60000000.0 * sc[11] * x686 + 60000000.0 * sc[11] * x689 +
    12000000.0 * x12 * x982 + 40000000.0 * x217 - x321 * x759 + x321 * x767;
  const amrex::Real x4000 =
    -sc[2] * x110 - 70000000.0 * sc[2] * x454 - 70000000.0 * sc[6] * x759 +
    70000000.0 * sc[6] * x767 - x115 * x956 + x196 * x856 - x196 * x862;
  const amrex::Real x4003 =
    660.0 * sc[2] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  const amrex::Real x4051 =
    -15000000.0 * sc[3] * x786 + 15000000.0 * sc[3] * x809;
  const amrex::Real x4056 =
    -80000000.0 * sc[3] * x861 + 80000000.0 * sc[3] * x875 +
    30000000.0 * sc[4] * x292 - 30000000.0 * sc[4] * x693 + x3355;
  const amrex::Real x4067 =
    -30000000.0 * sc[4] * x786 + 30000000.0 * sc[4] * x809 -
    20000000.0 * sc[4] * x861 + 20000000.0 * sc[4] * x875 + x292 * x691 -
    x691 * x693;
  const amrex::Real x4075 =
    -40000000.0 * sc[10] * x861 + 40000000.0 * sc[10] * x875 +
    60000000.0 * sc[11] * x292 - 60000000.0 * sc[11] * x693 +
    60000000.0 * x148 - x321 * x786 + x321 * x809;
  const amrex::Real x4087 = -70000000.0 * sc[6] * x786 +
                            70000000.0 * sc[6] * x809 - x196 * x861 +
                            x196 * x875 + 2.477e+21 * x2329 * x477;
  const amrex::Real x4137 =
    -15000000.0 * sc[2] * x448 - 80000000.0 * sc[2] * x512 -
    30000000.0 * sc[2] * x547 - 120000000.0 * sc[2] +
    80000000.0 * sc[3] * x780 + 30000000.0 * sc[4] * x704 - x2035 * x956;
  const amrex::Real x4143 =
    15000000.0 * sc[3] * x330 + 57000000.0 * sc[3] * x704 +
    50000000.0 * sc[4] * x945 + 2244000000000.0 * sc[7] * x2318 +
    187000000000.0 * x2318 * (sc[0] + 2 * sc[6] + x2594) + x3228;
  const amrex::Real x4154 = 30000000.0 * sc[2] * x180 + x2150 + x2421 + x2482 +
                            x2538 + x3200 + x3225 + x3230 + x3234 - x624 * x657;
  const amrex::Real x4202 =
    -80000000.0 * sc[3] * x879 + 80000000.0 * sc[3] * x880 -
    30000000.0 * sc[4] * x705 + 30000000.0 * sc[4] * x708 + x2075;
  const amrex::Real x4211 =
    -40000000.0 * sc[10] * x879 + 40000000.0 * sc[10] * x880 -
    60000000.0 * sc[11] * x705 + 60000000.0 * sc[11] * x708 + x321 * x851;
  const amrex::Real x4217 =
    -57000000.0 * sc[3] * x705 + 57000000.0 * sc[3] * x708 +
    15000000.0 * sc[3] * x851 - 50000000.0 * sc[4] * x953 +
    50000000.0 * sc[4] * x958;
  const amrex::Real x4229 =
    -sc[2] * x2202 * x88 - sc[2] * x2834 - sc[2] * x2838 - sc[2] * x2842 -
    30000000.0 * sc[2] * x414 - 20000000.0 * sc[2] * x482 +
    30000000.0 * sc[4] * x851 - 20000000.0 * sc[4] * x879 +
    20000000.0 * sc[4] * x880 - x691 * x705 + x691 * x708;
  const amrex::Real x4285 =
    x3200 + x3225 + x3230 + x3235 + x3759 + x3763 + x3773;
  const amrex::Real x4292 =
    4.2 * sc[2] * exp(-2450.6651624689798 * invT + 2.1 * tc[0]);
  const amrex::Real x4336 = refCinv * sc[2] * sc[33] * x2735;
  const amrex::Real x4348 = 3.0 * x240 * x586 + 0.42 * x240 * x703;
  x978 = 0.42 * x3412 + 1.30288344570976 * x978 / (((x1718) * (x1718)) * x88);
  x1718 = -1.29e+17 * x1726 - 2.2188e+26 * x1732 * x1735 +
          2.2188e+26 * x1732 * x1751 + x1748 * x978 - x1754 * x978 +
          1.29e+17 * x3409 - x341 * x999 + x343 * x999;
  const amrex::Real x4399 =
    -50000000.0 * sc[20] * x341 + 50000000.0 * sc[20] * x343 -
    1.326675e+88 * x1768 * x1769 + 1.326675e+88 * x1768 * x1770 +
    1.995e+48 * x1785 * x1792 - 1.995e+48 * x1785 * x1796 -
    x1789 * (3.0 * x1773 * x240 + 0.42 * x1775 * x240) +
    x1810 * (3.0 * x1773 * x240 + 0.42 * x1775 * x240) -
    20000000.0 * x808 * x889 + 20000000.0 * x808 * x893;
  const amrex::Real x4407 = 9.39e+26 * x1876 * x1897 -
                            x1878 * (3.0 * x1901 * x240 + 0.42 * x1902 * x240) -
                            4.4196541353383503e+46 * x1885 * x1890 +
                            4.4196541353383503e+46 * x1885 * x1918 -
                            9.39e+26 * x1913 +
                            x1916 * (3.0 * x1901 * x240 + 0.42 * x1902 * x240);
  const amrex::Real x4414 = 3.0 * x2000 * x240 + 0.42 * x2001 * x240;
  const amrex::Real x4419 = -2.985e+29 * x1981 * x2015 + 2.985e+29 * x1985 -
                            1.14014395393474e+47 * x1990 * x1996 +
                            1.14014395393474e+47 * x1990 * x2018 -
                            x2011 * x4414 + x2024 * x4414;
  const amrex::Real x4432 = sc[10] * x3946 + 20000000.0 * sc[4] * x947 +
                            x1927 * x1971 * (0.42 * x1962 + 3.0 * x1963) -
                            x1930 * (0.42 * x1962 + 3.0 * x1963) -
                            6.5636363636363603e+50 * x1936 * x1942 +
                            6.5636363636363603e+50 * x1936 * x1967 -
                            5.7e+29 * x1950 + 5.7e+29 * x1955 - x624 * x713 +
                            x624 * x719;
  const amrex::Real x4443 =
    50000000.0 * sc[10] * x593 - 50000000.0 * sc[10] * x993 -
    2.5566936528497398e+34 * sc[19] * x1854 * exp(x1855) - 3.8475e+21 * x1836 -
    x1852 * (3.0 * x1842 + 0.42 * x1844) +
    2.5566936528497398e+34 * x1854 * x1856 +
    x1867 * (3.0 * x1842 + 0.42 * x1844) + 3.8475e+21 * x1870;
  const amrex::Real x4457 =
    68975200.0 * refC * sc[5] * x2087 * x2103 -
    853156891.321345 * x2086 * x2114 + 853156891.321345 * x2086 * x2128 -
    68975200.0 * x2100 * x2103 + x2107 * (2.18 * x2091 + 0.3052 * x2093) -
    x2126 * (2.18 * x2091 + 0.3052 * x2093);
  const amrex::Real x4469 = -30000000.0 * sc[10] * x713 +
                            30000000.0 * sc[10] * x719 -
                            4.8355263157894698e+29 * x2146 * x2162 +
                            4.8355263157894698e+29 * x2146 * x2175 +
                            x2147 * (0.42 * x2152 + 3.0 * x2154) +
                            2.1e+18 * x2161 * x2165 - 2.1e+18 * x2165 * x2182 -
                            x2169 * (0.42 * x2152 + 3.0 * x2154) + x947 * x990;
  const amrex::Real x4484 =
    -2025000000000.0 * sc[12] * sc[2] * x2033 * exp(x2048) -
    80000000.0 * sc[3] * x889 + 80000000.0 * sc[3] * x893 -
    30000000.0 * sc[4] * x713 + 30000000.0 * sc[4] * x719 + sc[6] * x3344 +
    x2029 * (0.42 * x2064 * x240 + 3.0 * x2065 * x240) +
    2025000000000.0 * x2033 * x2079 + 2.5080275229357798e+18 * x2041 * x2044 -
    2.5080275229357798e+18 * x2041 * x2057 -
    x2520 * (0.42 * x2064 * x240 + 3.0 * x2065 * x240);
  x2225 = x2225 * (0.42 * x2222 + 3.0 * x2223);
  const amrex::Real x4500 =
    sc[13] * sc[2] * x2202 * x2225 * x88 - 30000000.0 * sc[4] * x341 +
    30000000.0 * sc[4] * x343 - 20000000.0 * sc[4] * x889 +
    20000000.0 * sc[4] * x893 - 2.2e+18 * x2200 * x2225 * x2236 * x88 -
    3.3e+18 * x2200 * x2226 + 3.3e+18 * x2200 * x2236 -
    1.3444444444444401e+31 * x2210 * x2215 +
    1.3444444444444401e+31 * x2210 * x2218 - x691 * x713 + x691 * x719;
  const amrex::Real x4518 =
    -40000000.0 * sc[10] * x889 + 40000000.0 * sc[10] * x893 -
    60000000.0 * sc[11] * x713 + 60000000.0 * sc[11] * x719 +
    x2251 * x2282 * (0.42 * x2284 * x240 + 3.0 * x2285 * x240) -
    x2251 * x2291 * (0.42 * x2284 * x240 + 3.0 * x2285 * x240) -
    4.5084809802487197e+51 * x2259 * x2263 +
    4.5084809802487197e+51 * x2259 * x2278 - 3.0405e+27 * x2271 +
    3.0405e+27 * x2276 - x321 * x341 + x321 * x343;
  const amrex::Real x4533 =
    -70000000.0 * sc[6] * x341 + 70000000.0 * sc[6] * x343 - x196 * x889 +
    x196 * x893 - x2332 * (0.42 * x2333 * x240 + 3.0 * x2335 * x240) +
    7.2466877952755894e+32 * x2352 * x2355 -
    7.2466877952755894e+32 * x2352 * x2361 + 3.7155e+21 * x2364 -
    3.7155e+21 * x2368 + x2372 * (0.42 * x2333 * x240 + 3.0 * x2335 * x240);
  const amrex::Real x4544 =
    -2244000000000.0 * refCinv * sc[2] * sc[7] * x2315 -
    refCinv * sc[2] * x2885 + 327250000000.0 * sc[12] * x2318 -
    57000000.0 * sc[2] * x551 - 50000000.0 * sc[2] * x595 -
    57000000.0 * sc[3] * x713 + 57000000.0 * sc[3] * x719 +
    50000000.0 * sc[4] * x593 - 50000000.0 * sc[4] * x993 -
    327250000000.0 * x2312 * x2315;
  const amrex::Real x4584 = 50000000.0 * sc[20] * x1 -
                            50000000.0 * sc[20] * x890 + x3428 -
                            20000000.0 * x808 * x894 + 20000000.0 * x808 * x897;
  x3355 = -80000000.0 * sc[3] * x894 + 80000000.0 * sc[3] * x897 +
          30000000.0 * sc[4] * x155 - 30000000.0 * sc[4] * x722 + x3355;
  const amrex::Real x4611 = -1706313782.64269 * x2086 * x2114 +
                            1706313782.64269 * x2086 * x2128 +
                            137950400.0 * x2088 - 137950400.0 * x2100 * x2103 +
                            x2107 * (4.36 * x2091 + 0.6104 * x2093) -
                            x2126 * (4.36 * x2091 + 0.6104 * x2093);
  const amrex::Real x4625 =
    30000000.0 * sc[4] * x1 - 30000000.0 * sc[4] * x890 -
    20000000.0 * sc[4] * x894 + 20000000.0 * sc[4] * x897 + x155 * x691 +
    x3458 - x691 * x722;
  const amrex::Real x4632 =
    -40000000.0 * sc[10] * x894 + 40000000.0 * sc[10] * x897 +
    60000000.0 * sc[11] * x155 - 60000000.0 * sc[11] * x722 + x1 * x321 -
    x321 * x890 + x3468;
  const amrex::Real x4642 =
    673200000000.0 * sc[12] * x2318 + 57000000.0 * sc[3] * x155 -
    57000000.0 * sc[3] * x722 - 50000000.0 * sc[4] * x1014 +
    50000000.0 * sc[4] * x839 - 673200000000.0 * x2312 * x2315;
  const amrex::Real x4647 = 70000000.0 * sc[6] * x1 -
                            70000000.0 * sc[6] * x890 - x196 * x894 +
                            x196 * x897 + x3477;
  const amrex::Real x4695 =
    -15000000.0 * sc[3] * x892 + 15000000.0 * sc[3] * x900;
  const amrex::Real x4707 =
    20000000.0 * sc[4] * x872 - 30000000.0 * sc[4] * x892 +
    30000000.0 * sc[4] * x900 - 20000000.0 * sc[4] * x902 - x691 * x731 +
    x691 * x738;
  const amrex::Real x4714 =
    40000000.0 * sc[10] * x872 - 40000000.0 * sc[10] * x902 -
    60000000.0 * sc[11] * x731 + 60000000.0 * sc[11] * x738 - x321 * x892 +
    x321 * x900;
  const amrex::Real x4731 =
    -7.695e+21 * x1836 - x1852 * (6.0 * x1842 + 0.84 * x1844) +
    5.1133873056994796e+34 * x1854 * x1856 - 5.1133873056994796e+34 * x1860 +
    x1867 * (6.0 * x1842 + 0.84 * x1844) + 7.695e+21 * x1870;
  x530 = -50000000.0 * sc[10] * x1027 + 50000000.0 * sc[10] * x1036 -
         40000000.0 * sc[2] * x530 - 50000000.0 * sc[2] * x588 - x1865 + x4731;
  const amrex::Real x4752 = 1.14e+30 * refC * sc[25] * x1926 * x1952 -
                            1.14e+30 * sc[24] * sc[2] * x1926 * exp(x1946) +
                            x1927 * x1971 * (0.84 * x1962 + 6.0 * x1963) -
                            x1930 * (0.84 * x1962 + 6.0 * x1963) -
                            1.3127272727272701e+51 * x1936 * x1942 +
                            1.3127272727272701e+51 * x1936 * x1967;
  const amrex::Real x4761 = -9.6710526315789494e+29 * x2146 * x2162 +
                            9.6710526315789494e+29 * x2146 * x2175 +
                            x2147 * (0.84 * x2152 + 6.0 * x2154) +
                            4.2e+18 * x2161 * x2165 - 4.2e+18 * x2165 * x2182 -
                            x2169 * (0.84 * x2152 + 6.0 * x2154);
  const amrex::Real x4762 = -sc[10] * x169 * x792 + x169 * x225 * x956 + x2510 +
                            x2517 + x2527 + x2546 + x2565 + 4.096e+20 * x282 +
                            3200000000000000.0 * x516 - 4.096e+20 * x528 -
                            3200000000000000.0 * x939;
  const amrex::Real x4815 =
    30000000.0 * sc[10] * x742 - 1.4e+18 * sc[2] * x2165 * x25 * exp(x2158) -
    30000000.0 * sc[2] * x554 - 150000000.0 * sc[2] + x952 * x990;
  const amrex::Real x4823 =
    1.6e+16 * exp(g_RT[20] + g_RT[21] - g_RT[2] - g_RT[31] + x2576);
  const amrex::Real x4865 = -50000000.0 * sc[20] * x906 +
                            50000000.0 * sc[20] * x915 + 50000000.0 * x12 +
                            20000000.0 * x217 * exp(-3019.29999482832 * invT) -
                            20000000.0 * x699 * x808 + 20000000.0 * x808 * x904;
  const amrex::Real x4874 =
    -15000000.0 * sc[3] * x906 + 15000000.0 * sc[3] * x915;
  const amrex::Real x4886 =
    -20000000.0 * sc[4] * x699 + 20000000.0 * sc[4] * x904 -
    30000000.0 * sc[4] * x906 + 30000000.0 * sc[4] * x915 - x691 * x744 +
    x691 * x752;
  const amrex::Real x4891 =
    1.4e+18 * refC * x2165 * x25 * exp(-g_RT[19] + g_RT[20] - g_RT[2] + x2158) -
    30000000.0 * sc[10] * x744 + 30000000.0 * sc[10] * x752 + x35 * x990;
  const amrex::Real x4899 =
    50.7 * sc[2] * exp(-6516.6558221711202 * invT + 1.9 * tc[0]);
  const amrex::Real x4909 =
    -40000000.0 * sc[10] * x699 + 40000000.0 * sc[10] * x904 -
    60000000.0 * sc[11] * x744 + 60000000.0 * sc[11] * x752 - sc[2] * x2859 -
    40000000.0 * sc[2] * x524 - 60000000.0 * sc[2] * x583 -
    2.027e+27 * x2250 * x956 * exp(x2267) - x321 * x906 + x321 * x915 - x4899;
  const amrex::Real x4967 =
    115.0 * sc[2] * exp(-3789.2214935095399 * invT + 1.9 * tc[0]);
  const amrex::Real x4970 = 6.0 * x240 * x586 + 0.84 * x240 * x703;
  const amrex::Real x5016 = -2.58e+17 * x1726 - 4.4376e+26 * x1732 * x1735 +
                            4.4376e+26 * x1732 * x1751 +
                            x1748 * (6.0 * x1741 + 0.84 * x3412) -
                            x1754 * (6.0 * x1741 + 0.84 * x3412) +
                            2.58e+17 * x3409 - x919 * x999 + x920 * x999;
  const amrex::Real x5028 =
    -50000000.0 * sc[20] * x919 + 50000000.0 * sc[20] * x920 -
    2.65335e+88 * x1768 * x1769 + 2.65335e+88 * x1768 * x1770 +
    3.99e+48 * x1785 * x1792 - 3.99e+48 * x1785 * x1796 -
    x1789 * (6.0 * x1773 * x240 + 0.84 * x1775 * x240) +
    x1810 * (6.0 * x1773 * x240 + 0.84 * x1775 * x240) -
    20000000.0 * x808 * x909 + 20000000.0 * x808 * x910;
  const amrex::Real x5037 = 1.878e+27 * x1876 * x1897 -
                            x1878 * (6.0 * x1901 * x240 + 0.84 * x1902 * x240) -
                            8.8393082706766904e+46 * x1885 * x1890 +
                            8.8393082706766904e+46 * x1885 * x1918 -
                            1.878e+27 * x1913 +
                            x1916 * (6.0 * x1901 * x240 + 0.84 * x1902 * x240);
  const amrex::Real x5046 =
    -15000000.0 * sc[3] * x919 + 15000000.0 * sc[3] * x920;
  const amrex::Real x5058 =
    -80000000.0 * sc[3] * x909 + 80000000.0 * sc[3] * x910 -
    30000000.0 * sc[4] * x776 + 30000000.0 * sc[4] * x781 +
    x2029 * (0.84 * x2064 * x240 + 6.0 * x2065 * x240) +
    4050000000000.0 * x2033 * x2079 + 5.0160550458715597e+18 * x2041 * x2044 -
    5.0160550458715597e+18 * x2041 * x2057 - 4050000000000.0 * x2052 -
    x2520 * (0.84 * x2064 * x240 + 6.0 * x2065 * x240);
  const amrex::Real x5064 = 6.0 * x2000 * x240 + 0.84 * x2001 * x240;
  const amrex::Real x5069 =
    1.99e+29 * x1981 * x1983 * x477 - 5.97e+29 * x1981 * x2015 +
    5.97e+29 * x1985 - 2.2802879078694799e+47 * x1990 * x1996 +
    2.2802879078694799e+47 * x1990 * x2018 - x2011 * x5064 + x2024 * x5064;
  const amrex::Real x5087 =
    -20000000.0 * sc[4] * x909 + 20000000.0 * sc[4] * x910 -
    30000000.0 * sc[4] * x919 + 30000000.0 * sc[4] * x920 -
    6.6e+18 * x2200 * x2226 + 6.6e+18 * x2200 * x2236 +
    x2203 * (0.84 * x2222 + 6.0 * x2223) -
    2.6888888888888901e+31 * x2210 * x2215 +
    2.6888888888888901e+31 * x2210 * x2218 -
    x2239 * (0.84 * x2222 + 6.0 * x2223) - x691 * x776 + x691 * x781;
  const amrex::Real x5101 =
    -40000000.0 * sc[10] * x909 + 40000000.0 * sc[10] * x910 -
    60000000.0 * sc[11] * x776 + 60000000.0 * sc[11] * x781 +
    x2251 * x2282 * (0.84 * x2284 * x240 + 6.0 * x2285 * x240) -
    x2251 * x2291 * (0.84 * x2284 * x240 + 6.0 * x2285 * x240) -
    9.0169619604974394e+51 * x2259 * x2263 +
    9.0169619604974394e+51 * x2259 * x2278 - 6.081e+27 * x2271 +
    6.081e+27 * x2276 - x321 * x919 + x321 * x920;
  const amrex::Real x5120 =
    -70000000.0 * sc[6] * x919 + 70000000.0 * sc[6] * x920 - x196 * x909 +
    x196 * x910 - x2332 * (0.84 * x2333 * x240 + 6.0 * x2335 * x240) +
    1.4493375590551199e+33 * x2352 * x2355 -
    1.4493375590551199e+33 * x2352 * x2361 + 7.431e+21 * x2364 -
    7.431e+21 * x2368 + x2372 * (0.84 * x2333 * x240 + 6.0 * x2335 * x240);
  const amrex::Real x5178 =
    -20000000.0 * sc[4] * x684 + 20000000.0 * sc[4] * x768 +
    30000000.0 * sc[4] * x923 - x691 * x785 + x691 * x793;
  const amrex::Real x5184 =
    -40000000.0 * sc[10] * x684 + 40000000.0 * sc[10] * x768 -
    60000000.0 * sc[11] * x785 + 60000000.0 * sc[11] * x793 + x321 * x923;
  const amrex::Real x5190 =
    -57000000.0 * sc[3] * x785 + 57000000.0 * sc[3] * x793 -
    50000000.0 * sc[4] * x303 + 50000000.0 * sc[4] * x310 + x3228;
  const amrex::Real x5237 =
    1500.0 * sc[2] * exp(-1353.6528310147 * invT + 1.43 * tc[0]);
  const amrex::Real x5248 = -3.8e+29 * sc[2] * x1926 * x25 * exp(x1946) -
                            sc[2] * x2783 - 50000000.0 * sc[2] * x2786 -
                            sc[2] * x2791 - sc[2] * x2799 -
                            sc[2] * x2801 * x2804 - 20000000.0 * sc[2] * x389 +
                            20000000.0 * sc[4] * x609 - x5237 + x624 * x801;
  const amrex::Real x5258 = sc[2] * exp(-2516.0833290236001 * invT);
  const amrex::Real x5276 = 30000000.0 * sc[20] * x803 - sc[2] * x2650 -
                            sc[2] * x2654 - 30000000.0 * sc[2] * x570 + x3729;
  const amrex::Real x5304 = 1.52e+53 * refC *
                            exp(
                              -g_RT[27] + g_RT[28] - g_RT[2] -
                              13561.185926771401 * invT - 13.54 * tc[0]);
  const amrex::Real x5324 =
    -sc[2] * x1764 - sc[2] * x2746 - 20000000.0 * sc[2] * x2748 -
    50000000.0 * sc[2] * x397 - 18000000.0 * sc[2] + 20000000.0 * x808 * x911;
  const amrex::Real x5341 =
    0.173 * sc[2] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  const amrex::Real x5347 = sc[2] * exp(x2576);
  const amrex::Real x5394 = x12 * x558 + x217 * x558 + x285 * x800 -
                            x493 * x800 - x800 * x928 + x800 * x932;
  const amrex::Real x5401 = x1000 * x12 + x1000 * x217 + x285 * x642 -
                            x493 * x642 - x642 * x928 + x642 * x932;
  const amrex::Real x5413 = -50000000.0 * sc[20] * x928 +
                            50000000.0 * sc[20] * x932 +
                            20000000.0 * x285 * x808 - 20000000.0 * x493 * x808;
  const amrex::Real x5420 =
    -15000000.0 * sc[3] * x928 + 15000000.0 * sc[3] * x932;
  const amrex::Real x5435 =
    20000000.0 * sc[4] * x285 - 20000000.0 * sc[4] * x493 -
    30000000.0 * sc[4] * x928 + 30000000.0 * sc[4] * x932 - x691 * x818 +
    x691 * x849;
  const amrex::Real x5442 =
    40000000.0 * sc[10] * x285 - 40000000.0 * sc[10] * x493 -
    60000000.0 * sc[11] * x818 + 60000000.0 * sc[11] * x849 - x321 * x928 +
    x321 * x932;
  const amrex::Real x5458 =
    132000000.0 * sc[2] * exp(-181.15799968969901 * invT);
  const amrex::Real x5483 = -38000000.0 * sc[2] * x2661 -
                            38000000.0 * sc[2] * x2665 + x357 * x642 + x3751 +
                            x642 * x933;
  const amrex::Real x5528 =
    90.0 * sc[2] * exp(-29266.0748498709 * invT + 1.7 * tc[0]);
  const amrex::Real x5529 = -310000000000.0 * sc[2] * x2678 -
                            310000000000.0 * sc[2] * x2682 + x358 * x800 +
                            x3768 - x5528 + x800 * x934;
  const amrex::Real x5556 =
    8300000.0 * sc[4] * exp(-37986.819668266697 * invT - 0.1 * tc[0]);
  const amrex::Real x5582 = refC * exp(-2.0 * g_RT[3] + g_RT[9] - tc[0]);
  const amrex::Real x5583 = sc[9] * x5582;
  const amrex::Real x5584 = ((sc[3]) * (sc[3])) * x361;
  const amrex::Real x5587 =
    refC * exp(-g_RT[33] + g_RT[34] - g_RT[3] - 1.41 * tc[0]);
  const amrex::Real x5588 = sc[34] * x5587;
  const amrex::Real x5590 = exp(-1.41 * tc[0]);
  const amrex::Real x5592 = sc[33] * sc[3] * x5590;
  const amrex::Real x5609 =
    58000000.0 * sc[9] * exp(-289.85279950351901 * invT);
  const amrex::Real x5613 =
    1.3482120080323927e-16 * x2597 /
    ((x2597 * exp(-909.31251510912796 * invT - 2.79 * tc[0]) +
      1.1611253196930952e-8) *
     (x2597 * exp(-909.31251510912796 * invT - 2.79 * tc[0]) +
      1.1611253196930952e-8));
  const amrex::Real x5616 =
    sc[16] * sc[3] * exp(-3018.29356149671 * invT - 5.58 * tc[0]);
  const amrex::Real x5620 =
    refC * sc[17] *
    exp(
      -g_RT[16] + g_RT[17] - g_RT[3] - 3018.29356149671 * invT - 5.58 * tc[0]);
  const amrex::Real x5624 =
    (1.0 / ((86123348.0176211 * x2597 *
               exp(-909.31251510912796 * invT - 2.79 * tc[0]) +
             1.0)));
  const amrex::Real x5626 = exp(
    -g_RT[16] + g_RT[17] - g_RT[3] - 2108.9810463875801 * invT - 2.79 * tc[0]);
  const amrex::Real x5628 = refC * sc[17] * x5624 * x5626;
  const amrex::Real x5631 =
    sc[16] * sc[3] * exp(-2108.9810463875801 * invT - 2.79 * tc[0]);
  const amrex::Real x5634 =
    -x5609 * x607 + x5609 * x659 + 7.0715881057268703e+19 * x5613 * x5616 -
    7.0715881057268703e+19 * x5613 * x5620 - 821100000000.0 * x5624 * x5631 +
    821100000000.0 * x5628;
  const amrex::Real x5648 =
    1.0102268722467e+20 * x5613 * x5616 - 1.0102268722467e+20 * x5613 * x5620 -
    1173000000000.0 * x5624 * x5631 + 1173000000000.0 * x5628;
  const amrex::Real x5651 = 106000000.0 * x5588 - 106000000.0 * x5592;
  const amrex::Real x5652 = x2541 + 240000.0 * x5583 - 240000.0 * x5584;
  const amrex::Real x5654 = x5648 + x5651 + x5652;
  const amrex::Real x5678 =
    20.0 * sc[27] * exp(-503.21666580471998 * invT + 1.8 * tc[0]);
  const amrex::Real x5682 = 3900000.0 * sc[34] * exp(120.77199979313301 * invT);
  const amrex::Real x5686 =
    2.2 * sc[36] * exp(-24065.330608779099 * invT + 2.11 * tc[0]);
  const amrex::Real x5688 = 2000000000.0 * exp(-0.5 * tc[0]);
  const amrex::Real x5692 =
    9.63 * exp(-1997.7701632447399 * invT + 2.0 * tc[0]);
  const amrex::Real x5699 =
    300000.0 *
    exp(-g_RT[19] + g_RT[25] - 5.5353833238519199 * invT + 0.29 * tc[0] - x561);
  const amrex::Real x5708 =
    330.0 * sc[31] * exp(202.29309965349699 * invT + 1.45 * tc[0]);
  const amrex::Real x5713 =
    89.8 * sc[22] * exp(-2863.3028284288498 * invT + 1.92 * tc[0]);
  const amrex::Real x5717 =
    1020.0 * exp(-4327.6633259205901 * invT + 1.5 * tc[0]);
  const amrex::Real x5721 =
    1119000.0 * exp(-g_RT[16] + g_RT[17] - 24003.4349588851 * invT - x561);
  const amrex::Real x5726 =
    0.13 * sc[15] * exp(-2516.0833290236001 * invT + 2.5 * tc[0]);
  const amrex::Real x5733 = 39000000.0 * exp(-1781.38699694871 * invT);
  const amrex::Real x5737 = 0.83 * sc[0] + 2.4 * sc[6] + 15.4 * sc[7] + x2594;
  const amrex::Real x5742 =
    30830000.0 *
    exp(-g_RT[10] + g_RT[14] + g_RT[3] - g_RT[9] - 14492.6399751759 * invT);
  const amrex::Real x5751 =
    9000.0 * exp(-g_RT[32] + g_RT[33] - 3270.90832773068 * invT + tc[0] - x561);
  const amrex::Real x5756 =
    180000.0 * sc[29] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x5759 =
    35.0 * sc[29] * exp(489.12659916218797 * invT + 1.65 * tc[0]);
  const amrex::Real x5764 = 1750000.0 * exp(-679.34249883637199 * invT);
  const amrex::Real x5766 =
    -10000000.0 * sc[24] * x2786 - sc[24] * x5764 + x166 * x67 - x67 * x706;
  const amrex::Real x5768 = exp(
    g_RT[3] - 2.0 * g_RT[4] + g_RT[7] + 1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x5777 = -33000000.0 * sc[12] * x562 - 60000000.0 * sc[12] -
                            33000000.0 * sc[9] * x622 +
                            33000000.0 * sc[9] * x630;
  const amrex::Real x5780 =
    15.1 * sc[20] * exp(-1882.0303301096501 * invT + 1.9 * tc[0]);
  const amrex::Real x5785 =
    -19.584 * sc[20] * exp(x41) + x166 * x368 - x368 * x706 - x5780;
  const amrex::Real x5788 = 1173000000000.0 * x2597 * x5624 *
                            exp(-2108.9810463875801 * invT - 2.79 * tc[0]);
  x561 =
    58000000.0 * exp(g_RT[16] - g_RT_qss[0] - 289.85279950351901 * invT - x561);
  const amrex::Real x5793 =
    -sc[16] * x561 - sc[16] * x5788 - x5609 * x739 + x5609 * x743;
  const amrex::Real x5794 =
    2.2 *
    exp(
      -g_RT[36] + g_RT[37] - 24065.330608779099 * invT + 2.11 * tc[0] - x2132);
  const amrex::Real x5796 =
    20000000.0 * exp(g_RT[24] - g_RT[25] - 2012.8666632188799 * invT - x2132);
  const amrex::Real x5798 =
    9.63 * exp(-1997.7701632447399 * invT + 2.0 * tc[0] - x2132 - x602);
  const amrex::Real x5800 =
    89.8 *
    exp(g_RT[21] - g_RT[22] - 2863.3028284288498 * invT + 1.92 * tc[0] - x2132);
  const amrex::Real x5803 =
    1020.0 *
    exp(g_RT[10] - g_RT[11] - 4327.6633259205901 * invT + 1.5 * tc[0] - x2132);
  const amrex::Real x5807 =
    10000000.0 * sc[13] * exp(g_RT[13] - g_RT[14] - x2132);
  const amrex::Real x5809 =
    180000.0 *
    exp(g_RT[28] - g_RT[29] - 2958.91399493175 * invT + 0.7 * tc[0] - x2132);
  const amrex::Real x5812 =
    0.13 *
    exp(g_RT[14] - g_RT[15] - 2516.0833290236001 * invT + 2.5 * tc[0] - x2132);
  const amrex::Real x5815 = 40000000.0 * exp(-g_RT[5] + g_RT[9] - x2132);
  const amrex::Real x5818 = sc[4] * exp(1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x5820 =
    39000000.0 * exp(g_RT[12] - g_RT[13] - 1781.38699694871 * invT - x2132);
  const amrex::Real x5827 =
    10000000.0 * exp(g_RT[23] - g_RT[24] - 4025.7333264377598 * invT - x2132);
  const amrex::Real x5833 = 30000000.0 * exp(-g_RT[12] + g_RT[16] - x2132);
  const amrex::Real x5839 =
    15.1 *
    exp(g_RT[19] - g_RT[20] - 1882.0303301096501 * invT + 1.9 * tc[0] - x2132);
  const amrex::Real x5870 = 212000000.0 * x5588 - 212000000.0 * x5592;
  const amrex::Real x5890 =
    2346000000000.0 * refC * sc[17] * x5624 * x5626 - x5609 * x829 +
    x5609 * x843 + 2.0204537444933901e+20 * x5613 * x5616 -
    2.0204537444933901e+20 * x5613 * x5620 - 2346000000000.0 * x5624 * x5631;
  const amrex::Real x5914 =
    -x5609 * x864 + x5609 * x871 + 1.2122722466960399e+21 * x5613 * x5616 -
    1.2122722466960399e+21 * x5613 * x5620 - 14076000000000.0 * x5624 * x5631 +
    14076000000000.0 * x5628;
  const amrex::Real x5919 = -33000000.0 * sc[9] * x657;
  const amrex::Real x5925 = -x764 * x831;
  const amrex::Real x5929 = -x67 * x764;
  const amrex::Real x5930 = 30000000.0 * sc[3] * x180 +
                            57000000.0 * sc[3] * x657 +
                            80000000.0 * sc[3] * x764 + x5651 + x5652;
  const amrex::Real x5933 = -x368 * x764;
  const amrex::Real x5935 = -x5609 * x877 + x5648;
  const amrex::Real x5938 =
    -30000000.0 * sc[3] * x617 - 80000000.0 * sc[3] * x824 + x368 * x824 +
    x5925 + x5929 + x5930 + x5933 + x5935 + x67 * x824 + x824 * x831;
  const amrex::Real x5939 = -57000000.0 * sc[3] * x663 +
                            33000000.0 * sc[9] * x663 + x5609 * x887 + x5919 +
                            x5938;
  const amrex::Real x5941 =
    3900000.0 *
    exp(g_RT[33] - g_RT[34] - g_RT[3] + g_RT[9] + 120.77199979313301 * invT);
  const amrex::Real x5944 =
    300000.0 * sc[19] * exp(-5.5353833238519199 * invT + 0.29 * tc[0]);
  const amrex::Real x5946 =
    36000000.0 * exp(g_RT[14] - g_RT[38] - g_RT[3] + g_RT[9]);
  const amrex::Real x5949 = 1119000.0 * sc[16] * exp(-24003.4349588851 * invT);
  const amrex::Real x5950 = 30830000.0 * exp(-14492.6399751759 * invT);
  const amrex::Real x5954 = 9000.0 * exp(-3270.90832773068 * invT + tc[0]);
  const amrex::Real x5976 =
    16040000.0 * exp(g_RT[10] + g_RT[13] - g_RT[21] - g_RT[3]);
  const amrex::Real x5980 =
    48000000.0 * exp(g_RT[10] + g_RT[16] - g_RT[19] - g_RT[3]);
  const amrex::Real x5996 =
    19.2 * exp(g_RT[10] + g_RT[12] - g_RT[20] - g_RT[3] + x41);
  const amrex::Real x6019 = 330.0 * exp(
                                      g_RT[12] + g_RT[30] - g_RT[31] - g_RT[3] +
                                      202.29309965349699 * invT + 1.45 * tc[0]);
  const amrex::Real x6023 = 35.0 * exp(
                                     g_RT[12] + g_RT[21] - g_RT[29] - g_RT[3] +
                                     489.12659916218797 * invT + 1.65 * tc[0]);
  const amrex::Real x6028 = x5925 + x5929 + x5930 + x5933 + x5935;
  const amrex::Real x6035 =
    96000000.0 * exp(g_RT[13] + g_RT[21] - g_RT[30] - g_RT[3]);
  x2132 = 10000000.0 * sc[4] * exp(g_RT[13] - g_RT[14] - x2132);
  const amrex::Real x6074 =
    0.13 * sc[3] * exp(-2516.0833290236001 * invT + 2.5 * tc[0]);
  const amrex::Real x6078 = 20.0 * exp(
                                     g_RT[16] + g_RT[20] - g_RT[27] - g_RT[3] -
                                     503.21666580471998 * invT + 1.8 * tc[0]);
  const amrex::Real x6080 =
    2000000000.0 * exp(g_RT[16] + g_RT[33] - g_RT[37] - g_RT[3] - 0.5 * tc[0]);
  const amrex::Real x6082 = 1119000.0 * sc[9] * exp(-24003.4349588851 * invT);
  const amrex::Real x6111 =
    -sc[3] * x561 - sc[3] * x5788 + x5609 * x593 - x5609 * x993 +
    1.7678970264317202e+20 * x5613 * x5616 -
    1.7678970264317202e+20 * x5613 * x5620 - 2052750000000.0 * x5624 * x5631 +
    2052750000000.0 * x5628;
  const amrex::Real x6134 =
    1173000000000.0 * refC * x2597 * x5624 * x5626 - x1014 * x5609 +
    x5609 * x839 + 3.6368167400881101e+20 * x5613 * x5616 -
    3.6368167400881101e+20 * x5613 * x5620 - 4222800000000.0 * x5624 * x5631 +
    4222800000000.0 * x5628;
  const amrex::Real x6150 =
    300000.0 * sc[9] * exp(-5.5353833238519199 * invT + 0.29 * tc[0]);
  const amrex::Real x6174 =
    15.1 * sc[3] * exp(-1882.0303301096501 * invT + 1.9 * tc[0]);
  const amrex::Real x6178 =
    -19.584 * sc[3] * exp(x41) - x368 * x699 + x368 * x904 - x6174;
  const amrex::Real x6190 =
    89.8 * sc[3] * exp(-2863.3028284288498 * invT + 1.92 * tc[0]);
  const amrex::Real x6240 =
    20.0 * sc[3] * exp(-503.21666580471998 * invT + 1.8 * tc[0]);
  const amrex::Real x6252 =
    180000.0 * sc[3] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x6253 =
    35.0 * sc[3] * exp(489.12659916218797 * invT + 1.65 * tc[0]);
  const amrex::Real x6256 =
    330.0 * sc[3] * exp(202.29309965349699 * invT + 1.45 * tc[0]);
  const amrex::Real x6282 = 3900000.0 * sc[3] * exp(120.77199979313301 * invT);
  const amrex::Real x6293 =
    2.2 * sc[3] * exp(-24065.330608779099 * invT + 2.11 * tc[0]);
  const amrex::Real x6315 = 0.7 * sc[0] + 2 * sc[6] + 6.0 * sc[7] + x2594;
  amrex::Real x6318 = 0.0018108108108108099 * x6315 *
                      exp(1153.8758146902201 * invT - 0.214 * tc[0]);
  amrex::Real x6324 = log(
    0.2654 * exp(-0.010638297872340399 * tc[1]) +
    0.7346 * exp(-0.000569476082004556 * tc[1]) + exp(-5182.0 * invT));
  amrex::Real x6325 =
    -0.29097730287517898 * x6324 + 0.43429448190325198 * log(x6318) - 0.4;
  amrex::Real x6326 = -0.55155399201712996 * x6324 - 0.14 * x6325 + 0.75;
  const amrex::Real x6330 = exp(
    M_LN10 * (0.43429448190325198 * x6324 /
              (((x6325) * (x6325)) / ((x6326) * (x6326)) + 1.0)));
  amrex::Real x6332 =
    refC * sc[8] * x6330 *
    exp(-2.0 * g_RT[4] + g_RT[8] + 2307.7516293804401 * invT - 0.798 * tc[0]);
  const amrex::Real x6333 = x6315 * x6332 / ((x6318 + 1.0) * (x6318 + 1.0));
  const amrex::Real x6336 =
    refC *
    exp(-2.0 * g_RT[4] + g_RT[8] + 1153.8758146902201 * invT - 0.584 * tc[0]) /
    (x6318 + 1.0);
  const amrex::Real x6337 = sc[8] * x6330 * x6336;
  const amrex::Real x6342 = 0.43429448190325198 * ((x6325) * (x6325)) /
                            (x6315 * ((x6326) * (x6326) * (x6326)));
  const amrex::Real x6343 =
    0.43429448190325198 * x6325 / (x6315 * ((x6326) * (x6326)));
  x6324 = x6324 / ((((x6325) * (x6325)) / ((x6326) * (x6326)) + 1.0) *
                   (((x6325) * (x6325)) / ((x6326) * (x6326)) + 1.0));
  const amrex::Real x6350 = 402000.0 * sc[8] * x6315 * x6324 * x6330 * x6336;
  const amrex::Real x6352 =
    exp(1153.8758146902201 * invT - 0.584 * tc[0]) / (x6318 + 1.0);
  const amrex::Real x6353 = ((sc[4]) * (sc[4])) * x6330 * x6352;
  const amrex::Real x6356 = 402000.0 * x6315 * x6324 * x6353;
  const amrex::Real x6358 = ((sc[4]) * (sc[4])) * x6315 * x6330 *
                            exp(2307.7516293804401 * invT - 0.798 * tc[0]) /
                            ((x6318 + 1.0) * (x6318 + 1.0));
  amrex::Real x6367 = log(
    0.7895 * exp(-0.0119760479041916 * tc[1]) +
    0.2105 * exp(-0.00018525379770285299 * tc[1]) + exp(-8370.0 * invT));
  amrex::Real x6369 =
    -0.29097730287517898 * x6367 +
    0.43429448190325198 * log(4.2857142857142902e+18 * x88 * x90) - 0.4;
  amrex::Real x6370 = -0.55155399201712996 * x6367 - 0.14 * x6369 + 0.75;
  const amrex::Real x6376 =
    5.444444444444433e-38 *
    exp(
      M_LN10 * (0.43429448190325198 * x6367 /
                (((x6369) * (x6369)) / ((x6370) * (x6370)) + 1.0))) /
    ((x88 * x90 + 2.333333333333331e-19) * (x88 * x90 + 2.333333333333331e-19));
  const amrex::Real x6378 = refC * sc[15] * x88 *
                            exp(
                              -g_RT[10] + g_RT[15] - g_RT[4] -
                              3119.9433279892601 * invT - 12.6 * tc[0]);
  const amrex::Real x6381 =
    sc[10] * sc[4] * x88 * exp(-3119.9433279892601 * invT - 12.6 * tc[0]);
  const amrex::Real x6384 = 0.43429448190325198 * ((x6369) * (x6369)) /
                            (((x6370) * (x6370) * (x6370)) * x88);
  const amrex::Real x6385 =
    0.43429448190325198 * x6369 / (((x6370) * (x6370)) * x88);
  const amrex::Real x6386 =
    x6367 / ((((x6369) * (x6369)) / ((x6370) * (x6370)) + 1.0) *
             (((x6369) * (x6369)) / ((x6370) * (x6370)) + 1.0));
  amrex::Real x6387 = x6386 * (0.28 * x6384 + 2.0 * x6385);
  x6367 = exp(
            M_LN10 * (0.43429448190325198 * x6367 /
                      (((x6369) * (x6369)) / ((x6370) * (x6370)) + 1.0))) /
          (4.2857142857142902e+18 * x88 * x90 + 1.0);
  x6369 = sc[10] * sc[4] * x6367;
  x6370 =
    x6367 *
    exp(-g_RT[10] + g_RT[15] - g_RT[4] - 1559.97166399463 * invT - 6.3 * tc[0]);
  const amrex::Real x6395 = refC * sc[15] * x6370;
  const amrex::Real x6397 = 2.7e+26 * x6395 * x88;
  const amrex::Real x6399 = x6369 * x6387 * x92 - 2.7e+26 * x6369 * x90 -
                            1.15714285714286e+45 * x6376 * x6378 +
                            1.15714285714286e+45 * x6376 * x6381 -
                            x6387 * x6397 + 2.7e+26 * x6395;
  const amrex::Real x6400 =
    x1041 * x283 - x1041 * x344 - x1044 * x349 + x1044 * x362 + x6399;
  x6325 = 2.0 * x6343 + 0.121602454932911 * ((x6325) * (x6325)) /
                          (x6315 * ((x6326) * (x6326) * (x6326)));
  x6326 = -9428000.0 * x2134 + 9428000.0 * x2137 - x6325 * x6350 +
          x6325 * x6356 - 727.94594594594605 * x6333 + 402000.0 * x6337 -
          402000.0 * x6353 + 727.94594594594605 * x6358;
  const amrex::Real x6414 = -20000000.0 * sc[4] * x626 + x6326;
  const amrex::Real x6438 = 32000000.0 * sc[14] - x1041 * x666 + x1041 * x671 +
                            x1044 * x677 - x1044 * x685;
  const amrex::Real x6452 =
    sc[11] * x5717 - x1041 * x679 + x1041 * x696 + x1044 * x166 - x1044 * x706;
  const amrex::Real x6454 =
    2820000.0 *
    exp(-g_RT[20] + g_RT[26] + g_RT[4] - g_RT[5] - 8605.0049852607099 * invT);
  const amrex::Real x6458 =
    2110000.0 *
    exp(-g_RT[33] + g_RT[34] + g_RT[4] - g_RT[5] + 241.54399958626499 * invT);
  const amrex::Real x6462 = 33.0 * exp(-1811.57999689699 * invT + 1.5 * tc[0]);
  const amrex::Real x6469 = 0.157 * exp(
                                      -g_RT[16] + g_RT[17] + g_RT[4] - g_RT[5] -
                                      9029.0203800344207 * invT + 2.18 * tc[0]);
  const amrex::Real x6474 =
    3.54 * sc[22] * exp(-437.79849925010598 * invT + 2.12 * tc[0]);
  const amrex::Real x6479 =
    100.0 * sc[11] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x6483 = 3.1 * exp(149.958566409806 * invT + 2.0 * tc[0]);
  const amrex::Real x6487 = 6.3 * exp(-754.82499870708 * invT + 2.0 * tc[0]);
  const amrex::Real x6492 =
    18000.0 * exp(g_RT[13] + g_RT[16] - g_RT[25] + g_RT[4] - g_RT[9]);
  const amrex::Real x6498 = exp(
    2.0 * g_RT[16] - g_RT[23] + g_RT[4] - g_RT[9] - 429.747032597231 * invT);
  const amrex::Real x6508 = exp(-1006.43333160944 * invT);
  const amrex::Real x6512 =
    10000000.0 * sc[25] * exp(-g_RT[19] + g_RT[25] + g_RT[4] - g_RT[5]);
  const amrex::Real x6515 = 2000000.0 * exp(-214.87351629861499 * invT);
  const amrex::Real x6518 =
    2.67e+35 * exp(-18920.9466342575 * invT - 7.0 * tc[0]);
  const amrex::Real x6524 =
    13400000.0 * exp(-g_RT[10] + g_RT[14] + g_RT[4] - g_RT[5]);
  const amrex::Real x6527 =
    -sc[14] * x3023 - sc[14] * x5812 - sc[14] * x6524 - 5000000.0 * sc[14];
  const amrex::Real x6530 =
    4.83e-10 * sc[18] * exp(1006.43333160944 * invT + 4.0 * tc[0]);
  amrex::Real x6534 = exp(g_RT[13] + g_RT[21] - g_RT[30] + g_RT[4] - g_RT[5]);
  const amrex::Real x6535 = refCinv * sc[13];
  const amrex::Real x6537 = 24000000.0 * sc[21] * x6534 * x6535;
  const amrex::Real x6543 =
    1.12e+79 * exp(-13536.528310147 * invT - 22.3 * tc[0]);
  const amrex::Real x6546 =
    2510000.0 * exp(-20128.666632188801 * invT + 2.0 * tc[0]);
  const amrex::Real x6549 =
    5.37e+64 * exp(-16555.828304975301 * invT - 16.72 * tc[0]);
  const amrex::Real x6552 =
    1410000000000.0 * exp(-30.192999948283202 * invT - 1.76 * tc[0]);
  const amrex::Real x6555 =
    1.0e+130 * exp(-17511.939970004201 * invT - 40.0 * tc[0]);
  const amrex::Real x6557 = -sc[5] * x5798 - sc[5] * x6543 - sc[5] * x6546 -
                            sc[5] * x6549 - sc[5] * x6552 - sc[5] * x6555;
  const amrex::Real x6559 =
    10600000.0 *
    exp(g_RT[12] + g_RT[4] - g_RT[9] - g_RT_qss[2] - 754.82499870708 * invT);
  const amrex::Real x6561 = -sc[12] * x5820 - sc[12] * x6559 -
                            30200000.0 * sc[12] - x681 * x721 + x681 * x728;
  const amrex::Real x6563 =
    6600000.0 * exp(g_RT[13] + g_RT[19] - g_RT[28] + g_RT[4] - g_RT[5]);
  const amrex::Real x6569 = 3.6 * exp(-1258.0416645118 * invT + 2.0 * tc[0]);
  const amrex::Real x6575 =
    36000.0 *
    exp(-g_RT[10] + g_RT[13] + g_RT[4] - g_RT[9] - 4498.7569922941902 * invT);
  const amrex::Real x6577 =
    exp(g_RT[10] + g_RT[13] - g_RT[21] + g_RT[4] - g_RT[5]);
  const amrex::Real x6584 =
    3430.0 * sc[13] * exp(224.93784961470999 * invT + 1.18 * tc[0]);
  const amrex::Real x6585 = -24000000.0 * sc[13] * x2801 * x6577 -
                            20000000.0 * sc[13] * x496 - sc[13] * x6575 -
                            20000000.0 * sc[5] * x721 +
                            20000000.0 * sc[5] * x728 - x5807 - x6584;
  const amrex::Real x6589 = -sc[16] * x3066 - sc[16] * x3068 - sc[16] * x5833 -
                            28000000.0 * sc[2] * x435 * x437;
  const amrex::Real x6593 =
    56.0 * exp(-2727.4343286615799 * invT + 1.6 * tc[0]);
  const amrex::Real x6598 = -sc[10] * x3085 - sc[10] * x5803 -
                            sc[10] * x6367 * x92 - sc[10] * x6593 -
                            25010000.0 * sc[10] - x1041 * x700 + x1041 * x701 -
                            x1044 * x721 + x1044 * x728;
  const amrex::Real x6602 = 2110000.0 * sc[33] * exp(241.54399958626499 * invT);
  const amrex::Real x6605 =
    0.157 * sc[16] * exp(-9029.0203800344207 * invT + 2.18 * tc[0]);
  const amrex::Real x6607 = 2820000.0 * exp(-8605.0049852607099 * invT);
  const amrex::Real x6614 =
    2000000.0 * exp(-214.87351629861499 * invT - x143 - x602);
  const amrex::Real x6616 =
    2.67e+35 * exp(-18920.9466342575 * invT - 7.0 * tc[0] - x143 - x602);
  const amrex::Real x6624 = 24000000.0 * sc[21] + 6600000.0 * sc[28] +
                            24000000.0 * sc[30] - 20000000.0 * sc[5] * x736 +
                            20000000.0 * sc[5] * x737 + 20000000.0 * x217;
  const amrex::Real x6630 = -sc[4] * x5798 - sc[4] * x6543 - sc[4] * x6546 -
                            sc[4] * x6549 - sc[4] * x6552 - sc[4] * x6555;
  const amrex::Real x6632 = -x1041 * x180 + x6399;
  const amrex::Real x6661 = x6369 * x6386 * x92;
  amrex::Real x6665 = -5.4e+26 * x6369 * x90 -
                      2.3142857142857099e+45 * x6376 * x6378 +
                      2.3142857142857099e+45 * x6376 * x6381 -
                      x6386 * x6397 * (0.56 * x6384 + 4.0 * x6385) +
                      5.4e+26 * x6395 + x6661 * (0.56 * x6384 + 4.0 * x6385);
  const amrex::Real x6666 =
    -x1041 * x726 + x1041 * x732 - x1044 * x741 + x1044 * x748 + x6665;
  const amrex::Real x6667 =
    33.0 *
    exp(-g_RT[36] + g_RT[37] - 1811.57999689699 * invT + 1.5 * tc[0] - x143);
  const amrex::Real x6670 =
    10000000.0 * exp(g_RT[24] - g_RT[25] - 1006.43333160944 * invT - x143);
  const amrex::Real x6673 = 24000000.0 * exp(g_RT[29] - g_RT[30] - x143);
  const amrex::Real x6675 =
    3.54 *
    exp(g_RT[21] - g_RT[22] - 437.79849925010598 * invT + 2.12 * tc[0] - x143);
  const amrex::Real x6677 =
    100.0 *
    exp(g_RT[10] - g_RT[11] - 1570.03599731073 * invT + 1.6 * tc[0] - x143);
  const amrex::Real x6679 = 5000000.0 * exp(g_RT[13] - g_RT[14] - x143);
  const amrex::Real x6681 = 6000000.0 * exp(g_RT[27] - g_RT[28] - x143);
  const amrex::Real x6683 =
    3.1 *
    exp(g_RT[28] - g_RT[29] + 149.958566409806 * invT + 2.0 * tc[0] - x143);
  const amrex::Real x6685 =
    7500000.0 * exp(g_RT[23] - g_RT[24] - 1006.43333160944 * invT - x143);
  const amrex::Real x6687 =
    exp(g_RT[14] - g_RT[15] - 754.82499870708 * invT + 2.0 * tc[0] - x143);
  const amrex::Real x6690 = 30110000.0 * exp(g_RT[18] - g_RT[19] - x143);
  const amrex::Real x6692 =
    3.6 *
    exp(g_RT[19] - g_RT[20] - 1258.0416645118 * invT + 2.0 * tc[0] - x143);
  amrex::Real x6704 = -g_RT[5] + g_RT[9] - x143;
  const amrex::Real x6705 =
    2510000.0 * exp(-20128.666632188801 * invT + 2.0 * tc[0] + x6704);
  const amrex::Real x6707 =
    1.12e+79 * exp(-13536.528310147 * invT - 22.3 * tc[0] + x6704);
  const amrex::Real x6709 =
    5.37e+64 * exp(-16555.828304975301 * invT - 16.72 * tc[0] + x6704);
  const amrex::Real x6711 =
    1410000000000.0 * exp(-30.192999948283202 * invT - 1.76 * tc[0] + x6704);
  x6704 = 1.0e+130 * exp(-17511.939970004201 * invT - 40.0 * tc[0] + x6704);
  const amrex::Real x6716 = 30200000.0 * exp(-g_RT[12] + g_RT[16] - x143);
  x143 =
    3430.0 *
    exp(g_RT[12] - g_RT[13] + 224.93784961470999 * invT + 1.18 * tc[0] - x143);
  const amrex::Real x6738 =
    -x1041 * x733 + x1041 * x740 + x1043 * x217 - x1044 * x751 + x1044 * x760 +
    25010000.0 * x12 * x86 - 1.62e+27 * x6369 * x90 -
    6.9428571428571398e+45 * x6376 * x6378 +
    6.9428571428571398e+45 * x6376 * x6381 -
    x6386 * x6397 * (1.68 * x6384 + 12.0 * x6385) + 1.62e+27 * x6395 +
    x6661 * (1.68 * x6384 + 12.0 * x6385);
  const amrex::Real x6744 = -x681 * x764;
  const amrex::Real x6747 = -20000000.0 * sc[5] * x764;
  const amrex::Real x6752 =
    30000000.0 * sc[4] * x657 + 20000000.0 * sc[4] * x764 +
    50000000.0 * sc[4] * x877 - x1034 * x657 + x1039 * x764;
  const amrex::Real x6755 = -x1044 * x764 + x6632;
  const amrex::Real x6757 =
    30000000.0 * sc[4] * x180 + x3230 + x6414 + x6752 + x6755;
  const amrex::Real x6760 =
    -30000000.0 * sc[4] * x617 - 20000000.0 * sc[4] * x824 +
    20000000.0 * sc[5] * x824 + 28000000.0 * sc[9] * x617 - x1039 * x824 +
    x1041 * x617 + x1044 * x824 + x6744 + x6747 + x6757 + x681 * x824;
  const amrex::Real x6761 = -30000000.0 * sc[4] * x663 -
                            50000000.0 * sc[4] * x887 + x1034 * x663 + x6760;
  const amrex::Real x6762 =
    60000000.0 * exp(g_RT[15] - g_RT[38] - g_RT[4] + g_RT[9]);
  const amrex::Real x6767 = exp(-429.747032597231 * invT);
  const amrex::Real x6782 = 36000.0 * exp(-4498.7569922941902 * invT);
  const amrex::Real x6791 =
    4.83e-10 * exp(
                 g_RT[10] + g_RT[16] - g_RT[18] - g_RT[4] +
                 1006.43333160944 * invT + 4.0 * tc[0]);
  const amrex::Real x6795 = 24000000.0 * sc[4] * x6535 * x6577;
  const amrex::Real x6813 = -sc[4] * x3085 - sc[4] * x5803 -
                            sc[4] * x6367 * x92 - sc[4] * x6593 -
                            25010000.0 * sc[4] - x1041 * x759 + x1041 * x767 +
                            x1044 * x856 - x1044 * x862;
  const amrex::Real x6814 =
    100.0 * sc[4] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x6829 = sc[3] * x5717 - x1041 * x786 + x1041 * x809 -
                            x1044 * x861 + x1044 * x875 + x6665;
  const amrex::Real x6835 =
    30000000.0 * sc[4] * x180 + x3230 + x6326 + x6752 + x6755;
  const amrex::Real x6842 =
    -sc[4] * x5820 - sc[4] * x6559 - 30200000.0 * sc[4] + x6744 + x681 * x780;
  const amrex::Real x6844 = 24000000.0 * refCinv * sc[21] * sc[4] * x6534;
  const amrex::Real x6853 = 24000000.0 * sc[4] * x2801 * x6577;
  const amrex::Real x6863 =
    3430.0 * sc[4] * exp(224.93784961470999 * invT + 1.18 * tc[0]);
  const amrex::Real x6866 = -refCinv * sc[19] * sc[4] * x6563 -
                            sc[4] * x437 * x6492 - 20000000.0 * sc[4] * x496 -
                            sc[4] * x6575 - 20000000.0 * sc[5] * x879 +
                            20000000.0 * sc[5] * x880 - x2132 - x6863;
  const amrex::Real x6873 =
    -sc[4] * x3023 - sc[4] * x5812 - sc[4] * x6524 - 5000000.0 * sc[4];
  const amrex::Real x6892 =
    0.157 * sc[5] * exp(-9029.0203800344207 * invT + 2.18 * tc[0]);
  const amrex::Real x6909 = -28000000.0 * refCinv * sc[2] * sc[4] * x435 -
                            sc[4] * x3066 - sc[4] * x3068 - sc[4] * x5833;
  const amrex::Real x6917 = x6386 * (0.42 * x6384 + 3.0 * x6385);
  const amrex::Real x6921 =
    -x1041 * x341 + x1041 * x343 - x1044 * x889 + x1044 * x893 +
    x6369 * x6917 * x92 - 4.05e+26 * x6369 * x90 -
    1.73571428571429e+45 * x6376 * x6378 +
    1.73571428571429e+45 * x6376 * x6381 + 4.05e+26 * x6395 - x6397 * x6917;
  x6665 = x1 * x1041 - x1041 * x890 - x1044 * x894 + x1044 * x897 + x6665;
  const amrex::Real x6948 =
    4.83e-10 * sc[4] * exp(1006.43333160944 * invT + 4.0 * tc[0]);
  x6534 = 24000000.0 * sc[4] * x6534 * x6535;
  const amrex::Real x6997 =
    3.54 * sc[4] * exp(-437.79849925010598 * invT + 2.12 * tc[0]);
  const amrex::Real x7018 =
    -x1041 * x919 + x1041 * x920 - x1044 * x909 + x1044 * x910 -
    8.1e+26 * x6369 * x90 - 3.4714285714285699e+45 * x6376 * x6378 +
    3.4714285714285699e+45 * x6376 * x6381 -
    x6386 * x6397 * (0.84 * x6384 + 6.0 * x6385) + 8.1e+26 * x6395 +
    x6661 * (0.84 * x6384 + 6.0 * x6385);
  const amrex::Real x7048 =
    10000000.0 * sc[4] * exp(-g_RT[19] + g_RT[25] + g_RT[4] - g_RT[5]);
  const amrex::Real x7073 = 2110000.0 * sc[5] * exp(241.54399958626499 * invT);
  x2084 = 63280000.0 * x2084 * x2088 * x2096 +
          782712744.331509 * x2086 * x2114 - 782712744.331509 * x2086 * x2128 -
          63280000.0 * x2088 - x2096 * x2100 * x2105 +
          63280000.0 * x2100 * x2103;
  x2096 =
    4990000000.0 *
    exp(g_RT[27] - g_RT[28] - 11286.1433806683 * invT - 1.4 * tc[0] - x2111);
  const amrex::Real x7121 = 18000.0 * sc[38] * exp(720.10304876655402 * invT);
  const amrex::Real x7126 =
    8700.0 * exp(-g_RT[21] + g_RT[22] - 490.13303249379697 * invT - x602);
  const amrex::Real x7130 =
    0.0245 * exp(-2606.66232886845 * invT + 2.47 * tc[0] - x2340 - x602);
  const amrex::Real x7134 =
    1.34 *
    exp(g_RT[18] - g_RT[19] + 192.93326966953001 * invT + 1.61 * tc[0] - x2111);
  const amrex::Real x7138 = 140000.0 * exp(g_RT[24] - g_RT[25] - x2111);
  const amrex::Real x7143 =
    100000000.0 * exp(g_RT[12] - g_RT[13] - 20128.666632188801 * invT - x2111);
  const amrex::Real x7152 = 90000.0 * exp(g_RT[29] - g_RT[30] - x2111);
  const amrex::Real x7156 =
    0.0096 * sc[29] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x7160 =
    42200000.0 * exp(g_RT[19] - g_RT[20] - 30595.573280927001 * invT - x2111);
  const amrex::Real x7164 = 20000.0 * exp(g_RT[20] - g_RT[21] - x2111);
  x602 = 12100.0 * exp(-g_RT[19] + g_RT[20] + 299.91713281961302 * invT - x602);
  const amrex::Real x7172 =
    4.28e-19 *
    exp(g_RT[13] - g_RT[14] + 1776.3548302906599 * invT + 7.6 * tc[0] - x2111);
  x2111 = 12040.0 * exp(
                      -g_RT[12] + g_RT[16] + 365.83851604003098 * invT +
                      0.807 * tc[0] - x2111);
  const amrex::Real x7180 = exp(
    g_RT[13] - g_RT[38] - g_RT[5] + g_RT[7] + g_RT[9] +
    720.10304876655402 * invT);
  const amrex::Real x7185 = 8700.0 * sc[21] * exp(-490.13303249379697 * invT);
  const amrex::Real x7187 =
    0.0245 * sc[10] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x7189 = 0.0096 * exp(
                                       g_RT[28] - g_RT[29] - g_RT[5] + g_RT[8] -
                                       6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x7191 =
    1000000.0 *
    exp(g_RT[12] - g_RT[13] - g_RT[5] + g_RT[8] - 4025.7333264377598 * invT);
  const amrex::Real x7194 =
    exp(-2.0 * g_RT[5] + g_RT[8] + g_RT[9] - 6038.59998965664 * invT);
  const amrex::Real x7197 = 12100.0 * sc[19] * exp(299.91713281961302 * invT);
  const amrex::Real x7198 =
    exp(-2.0 * g_RT[5] + g_RT[8] + g_RT[9] + 820.24316526169298 * invT);
  const amrex::Real x7200 =
    300000.0 * exp(g_RT[20] - g_RT[21] - g_RT[5] + g_RT[8]);
  const amrex::Real x7202 = 20000000.0 * sc[5] * x764 + x2084;
  const amrex::Real x7203 = -20000000.0 * sc[5] * x824 + x7202;
  const amrex::Real x7206 =
    4990000000.0 * sc[28] * exp(-11286.1433806683 * invT - 1.4 * tc[0]);
  const amrex::Real x7209 =
    2660000.0 * exp(-g_RT[28] + g_RT[29] - g_RT[5] + g_RT[9]);
  const amrex::Real x7212 =
    1.34 * sc[19] * exp(192.93326966953001 * invT + 1.61 * tc[0]);
  const amrex::Real x7215 =
    300000.0 * exp(-g_RT[21] + g_RT[22] - g_RT[5] + g_RT[9]);
  const amrex::Real x7217 = 100000000.0 * exp(-20128.666632188801 * invT);
  const amrex::Real x7220 =
    4.28e-19 * sc[14] * exp(1776.3548302906599 * invT + 7.6 * tc[0]);
  const amrex::Real x7222 =
    42200000.0 * sc[20] * exp(-30595.573280927001 * invT);
  const amrex::Real x7224 =
    12040.0 * sc[12] * exp(365.83851604003098 * invT + 0.807 * tc[0]);
  const amrex::Real x7225 = 1000000.0 * exp(-g_RT[5] + g_RT[9] - x2340);
  const amrex::Real x7228 =
    0.0245 * sc[8] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x7236 =
    12040.0 * sc[9] * exp(365.83851604003098 * invT + 0.807 * tc[0]);
  const amrex::Real x7237 = 18000.0 * refCinv * sc[7] * sc[9] * x7180;
  const amrex::Real x7243 =
    4.28e-19 * sc[9] * exp(1776.3548302906599 * invT + 7.6 * tc[0]);
  const amrex::Real x7248 = 12100.0 * sc[8] * exp(299.91713281961302 * invT);
  const amrex::Real x7249 =
    1.34 * sc[9] * exp(192.93326966953001 * invT + 1.61 * tc[0]);
  const amrex::Real x7252 =
    42200000.0 * sc[9] * exp(-30595.573280927001 * invT);
  const amrex::Real x7258 = 8700.0 * sc[8] * exp(-490.13303249379697 * invT);
  const amrex::Real x7268 =
    4990000000.0 * sc[9] * exp(-11286.1433806683 * invT - 1.4 * tc[0]);
  const amrex::Real x7272 =
    0.0096 * sc[5] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x7278 = 18000.0 * sc[5] * exp(720.10304876655402 * invT);
  const amrex::Real x7280 =
    x1051 * exp(-94921.759670744301 * invT - 8.87 * tc[0] - x1046) /
    (x32 + 1.0);
  const amrex::Real x7281 = sc[20] * x7280;
  x32 = x1051 / ((x32 + 1.0) * (x32 + 1.0));
  x1051 =
    sc[20] * x27 * exp(-145172.975918004 * invT - 18.18 * tc[0] - 2 * x1046);
  const amrex::Real x7289 = x1048 / ((x1050) * (x1050));
  const amrex::Real x7290 = ((x1048) * (x1048)) / ((x1050) * (x1050) * (x1050));
  x38 = x38 / ((((x1048) * (x1048)) / ((x1050) * (x1050)) + 1.0) *
               (((x1048) * (x1048)) / ((x1050) * (x1050)) + 1.0));
  x1048 = refCinv * sc[6] * x3360 * x408;
  x1050 = 7.0e+44 * x1048 * x27 * x38;
  const amrex::Real x7302 = 7.0e+44 * x27 * x38 * x7281;
  x31 = refCinv * sc[6] * x27 * x3360 *
        exp(-145172.975918004 * invT - 18.18 * tc[0] - 2 * x1046 + x31);
  x1046 =
    117906976744186.0 * x27 * exp(-2390.2791625723985 * invT - 4.92 * tc[0]);
  amrex::Real x7311 = log(
    0.068 * exp(-0.0050761421319797002 * tc[1]) +
    0.932 * exp(-0.00064935064935064902 * tc[1]) + exp(-10300.0 * invT));
  amrex::Real x7312 =
    -0.29097730287517898 * x7311 + 0.43429448190325198 * log(x1046) - 0.4;
  amrex::Real x7315 = -0.55155399201712996 * x7311 - 0.14 * x7312 + 0.75;
  amrex::Real x7316 = ((x7312) * (x7312)) / ((x7315) * (x7315) * (x7315));
  amrex::Real x7318 = x7312 / ((x7315) * (x7315));
  const amrex::Real x7321 =
    x7311 / ((((x7312) * (x7312)) / ((x7315) * (x7315)) + 1.0) *
             (((x7312) * (x7312)) / ((x7315) * (x7315)) + 1.0));
  const amrex::Real x7322 = x7321 * (0.196 * x240 * x7316 + 1.4 * x240 * x7318);
  const amrex::Real x7324 = -42446.325760628104 * invT - 3.42 * tc[0];
  const amrex::Real x7328 =
    exp(
      M_LN10 * (0.43429448190325198 * x7311 /
                (((x7312) * (x7312)) / ((x7315) * (x7315)) + 1.0))) /
    (x1046 + 1.0);
  const amrex::Real x7330 = 5070000000000000.0 * x477 * x7328 *
                            exp(g_RT[13] - g_RT[16] - g_RT[6] + x7324);
  const amrex::Real x7331 = sc[13] * x7330;
  const amrex::Real x7338 = sc[16] * sc[6] * x7328 * exp(x7324);
  const amrex::Real x7340 = 5070000000000000.0 * x27 * x7338;
  x1046 = exp(
            M_LN10 * (0.43429448190325198 * x7311 /
                      (((x7312) * (x7312)) / ((x7315) * (x7315)) + 1.0))) /
          ((x1046 + 1.0) * (x1046 + 1.0));
  x7311 =
    sc[13] * x477 *
    exp(
      g_RT[13] - g_RT[16] - g_RT[6] - 44836.604923200604 * invT - 8.34 * tc[0]);
  x7312 = sc[16] * sc[6] * x27 * exp(-44836.604923200604 * invT - 8.34 * tc[0]);
  x7315 = refC * sc[13] * exp(g_RT[13] - g_RT[16] - g_RT[6] + x7324);
  const amrex::Real x7352 =
    -3549000000000000.0 * sc[16] * sc[6] * x7328 * exp(x7324) -
    4.1845186046511603e+29 * x1046 * x7311 +
    4.1845186046511603e+29 * x1046 * x7312 +
    3549000000000000.0 * x7315 * x7328 - x7322 * x7331 + x7322 * x7340;
  const amrex::Real x7360 =
    1780000.0 * ((sc[2]) * (sc[2])) * x361 - 1780000.0 * x959;
  amrex::Real x7361 = x7321 * (0.28 * x240 * x7316 + 2.0 * x240 * x7318);
  amrex::Real x7368 = -5.9778837209302301e+29 * x1046 * x7311 +
                      5.9778837209302301e+29 * x1046 * x7312 +
                      5070000000000000.0 * x7315 * x7328 - x7331 * x7361 -
                      5070000000000000.0 * x7338 + x7340 * x7361;
  const amrex::Real x7369 =
    -7.0e+44 * x1048 + x1050 * (2.0 * x240 * x7289 + 0.28 * x240 * x7290) -
    6.125e+76 * x1051 * x32 + 6.125e+76 * x31 * x32 + 7.0e+44 * x7281 -
    x7302 * (2.0 * x240 * x7289 + 0.28 * x240 * x7290) + x7360 + x7368;
  const amrex::Real x7370 = -x1055 * x626 - x626 * x990 + x7369;
  const amrex::Real x7376 =
    -30000000.0 * sc[2] * x180 + 70000000.0 * sc[6] * x180 + x7370;
  x38 = x38 * (4.0 * x240 * x7289 + 0.56 * x240 * x7290);
  amrex::Real x7412 = x7321 * (0.56 * x240 * x7316 + 4.0 * x240 * x7318);
  amrex::Real x7415 = -1.19557674418605e+30 * x1046 * x7311 +
                      1.19557674418605e+30 * x1046 * x7312 +
                      1.014e+16 * x7315 * x7328 - x7331 * x7412 -
                      1.014e+16 * x7338 + x7340 * x7412;
  const amrex::Real x7416 =
    1.4e+45 * sc[20] * x7280 + 7.0e+44 * x1048 * x27 * x38 - 1.4e+45 * x1048 -
    1.225e+77 * x1051 * x32 - 7.0e+44 * x27 * x38 * x7281 +
    1.225e+77 * x31 * x32 + x7415;
  const amrex::Real x7419 =
    -5070000000000000.0 * sc[16] * x27 * x7328 * exp(x7324) - sc[16] * x3344 -
    15000000.0 * sc[16] * x440;
  const amrex::Real x7429 = 1.68 * x240 * x7316 + 12.0 * x240 * x7318;
  const amrex::Real x7438 = -3.5867302325581401e+30 * x1046 * x7311 +
                            3.5867302325581401e+30 * x1046 * x7312 +
                            3.042e+16 * x7315 * x7328 - x7321 * x7331 * x7429 +
                            x7321 * x7340 * x7429 - 3.042e+16 * x7338;
  const amrex::Real x7439 = -110000000.0 * sc[2] * x657 + x196 * x764 +
                            x369 * x877 + 30000000.0 * x623 * x657 +
                            x657 * x690 - x764 * x992;
  const amrex::Real x7440 = 30000000.0 * sc[2] * x617 -
                            70000000.0 * sc[6] * x617 - x196 * x824 + x3229 +
                            x7376 + x7439 + x824 * x992;
  const amrex::Real x7441 = 110000000.0 * sc[2] * x663 - x369 * x887 -
                            30000000.0 * x623 * x663 - x663 * x690 + x7440;
  const amrex::Real x7447 =
    -30000000.0 * sc[2] * x180 + 70000000.0 * sc[6] * x180 + x7369 + x7439;
  const amrex::Real x7464 = 0.42 * x240 * x7316 + 3.0 * x240 * x7318;
  x3344 = -5070000000000000.0 * sc[6] * x27 * x7328 * exp(x7324) -
          sc[6] * x3344 - 15000000.0 * sc[6] * x440 -
          8.9668255813953501e+29 * x1046 * x7311 +
          8.9668255813953501e+29 * x1046 * x7312 +
          7605000000000000.0 * x7315 * x7328 - x7321 * x7331 * x7464 +
          x7321 * x7340 * x7464 - 7605000000000000.0 * x7338;
  x7316 = x7321 * (0.84 * x240 * x7316 + 6.0 * x240 * x7318);
  x7318 = -1.79336511627907e+30 * x1046 * x7311 +
          1.79336511627907e+30 * x1046 * x7312 + 1.521e+16 * x7315 * x7328 -
          x7316 * x7331 + x7316 * x7340 - 1.521e+16 * x7338;
  const amrex::Real x7506 =
    5.4869684499314126e-39 *
    exp(
      M_LN10 * (0.43429448190325198 * x95 /
                (((x1056) * (x1056)) / ((x461) * (x461)) + 1.0))) /
    ((x88 * x90 + 7.4074074074074074e-20) *
     (x88 * x90 + 7.4074074074074074e-20));
  const amrex::Real x7510 = sc[7] * x12 * x247;
  const amrex::Real x7514 =
    0.43429448190325198 * x1056 / (((x461) * (x461)) * x88);
  amrex::Real x7515 = 0.121602454932911 * ((x1056) * (x1056)) /
                        (((x461) * (x461) * (x461)) * x88) +
                      2.0 * x7514;
  x95 = x95 / ((((x1056) * (x1056)) / ((x461) * (x461)) + 1.0) *
               (((x1056) * (x1056)) / ((x461) * (x461)) + 1.0));
  const amrex::Real x7517 = x247 * x429;
  const amrex::Real x7520 = 2.7e+26 * x7517 * x88 * x95;
  const amrex::Real x7523 = x12 * x279 * x7506;
  const amrex::Real x7526 = x7510 * x92 * x95;
  const amrex::Real x7528 = -3.645e+45 * x615 * x7506 - 2.7e+26 * x7510 * x90 -
                            x7515 * x7520 + x7515 * x7526 + 2.7e+26 * x7517 +
                            3.645e+45 * x7523;
  const amrex::Real x7532 =
    -44000000000.0 * x2300 + 44000000000.0 * x2304 + x7528;
  const amrex::Real x7542 = -12000000.0 * sc[9] * x180 + x1041 * x180 +
                            x180 * x249 + x180 * x999 + x7532;
  const amrex::Real x7544 =
    12000000.0 * sc[9] * x617 - x1041 * x617 - x249 * x617 - x617 * x999;
  const amrex::Real x7545 = sc[4] * x6543 + sc[4] * x6546 + sc[4] * x6549 +
                            sc[4] * x6552 + sc[4] * x6555 + x7121;
  const amrex::Real x7551 = 0.43429448190325198 * ((x1056) * (x1056)) /
                            (((x461) * (x461) * (x461)) * x88);
  x1056 = 1.7371779276130079 * x1056 / (((x461) * (x461)) * x88) + 0.56 * x7551;
  x461 = -x1056 * x7520 + x1056 * x7526 - 7.29e+45 * x615 * x7506 -
         5.4e+26 * x7510 * x90 + 5.4e+26 * x7517 + 7.29e+45 * x7523;
  const amrex::Real x7582 = -18000.0 * sc[9] * x6535 * x7180 - sc[9] * x6704 -
                            sc[9] * x6705 - sc[9] * x6707 - sc[9] * x6709 -
                            sc[9] * x6711;
  const amrex::Real x7587 =
    x1034 * x657 - x1039 * x764 + x1044 * x764 + x657 * x691 + x7542;
  const amrex::Real x7588 = x1039 * x824 - x1044 * x824 + x7544 + x7587;
  const amrex::Real x7589 = -x1034 * x663 - x663 * x691 + x7588;
  const amrex::Real x7593 = -18000.0 * sc[7] * x6535 * x7180 - sc[7] * x6704 -
                            sc[7] * x6705 - sc[7] * x6707 - sc[7] * x6709 -
                            sc[7] * x6711;
  x95 = x95 * (6.0 * x7514 + 0.84 * x7551);
  const amrex::Real x7655 = 201000.0 * sc[8] * x6315 * x6324 * x6330 * x6336;
  x6324 = 201000.0 * x6315 * x6324 * x6353;
  x6318 = -363.97297297297303 * ((sc[4]) * (sc[4])) * x6315 * x6330 *
            exp(2307.7516293804401 * invT - 0.798 * tc[0]) /
            ((x6318 + 1.0) * (x6318 + 1.0)) +
          363.97297297297303 * x6315 * x6332 / ((x6318 + 1.0) * (x6318 + 1.0)) -
          x6324 * x6325 + x6325 * x7655 - 201000.0 * x6337 + 201000.0 * x6353;
  x6332 = 300000.0 * sc[21] +
          260000.0 * sc[5] * exp(820.24316526169298 * invT) +
          731600000.0 * sc[5] * exp(-6038.59998965664 * invT);
  x20 = sc[0] + sc[11] + sc[16] + sc[17] + sc[18] + sc[20] + sc[22] + sc[6] +
        sc[7] + x20;
  x6325 = 74074074074.0741 * x20 * exp(-4.5 * tc[0]);
  amrex::Real x7685 =
    log(0.664 * exp(-0.1 * tc[1]) + 0.336 * exp(-1.0e-5 * tc[1]));
  amrex::Real x7686 =
    -0.29097730287517898 * x7685 + 0.43429448190325198 * log(x6325) - 0.4;
  amrex::Real x7689 = -0.55155399201712996 * x7685 - 0.14 * x7686 + 0.75;
  const amrex::Real x7692 = exp(
    M_LN10 * (0.43429448190325198 * x7685 /
              (((x7686) * (x7686)) / ((x7689) * (x7689)) + 1.0)));
  amrex::Real x7697 = 4.2962962962963002e+24 * refC * sc[38] * x20 * x7692 *
                      exp(-g_RT[10] + g_RT[38] - g_RT[9] - 7.8 * tc[0]) /
                      ((x6325 + 1.0) * (x6325 + 1.0));
  const amrex::Real x7700 = 58000000000000.0 *
                            exp(-g_RT[10] + g_RT[38] - g_RT[9] - 3.3 * tc[0]) /
                            (x6325 + 1.0);
  const amrex::Real x7702 =
    58000000000000.0 * exp(-3.3 * tc[0]) / (x6325 + 1.0);
  const amrex::Real x7705 = refC * x20 * x7692 * x7700;
  x7685 = x7685 *
          (0.121602454932911 * ((x7686) * (x7686)) /
             (x20 * ((x7689) * (x7689) * (x7689))) +
           0.86858896380650397 * x7686 / (x20 * ((x7689) * (x7689)))) /
          ((((x7686) * (x7686)) / ((x7689) * (x7689)) + 1.0) *
           (((x7686) * (x7686)) / ((x7689) * (x7689)) + 1.0));
  x6325 = 4.2962962962963002e+24 * sc[10] * sc[9] * x20 * x7692 *
          exp(-7.8 * tc[0]) / ((x6325 + 1.0) * (x6325 + 1.0));
  x7686 = sc[10] * x20 * x7692 * x7702;
  x7689 = refC * sc[38] * x7692 * x7700 - sc[10] * sc[9] * x7692 * x7702 -
          sc[38] * x7685 * x7705 + sc[9] * x7685 * x7686 + x6325 - x7697;
  const amrex::Real x7717 = x2538 - 120000.0 * x5583 + 120000.0 * x5584 + x7689;
  const amrex::Real x7718 = -10000000.0 * sc[9] * x626 + x7717;
  const amrex::Real x7737 = 40000000.0 * sc[9] * x180 +
                            33000000.0 * sc[9] * x657 + x210 * x764 +
                            x5609 * x877 + x7718;
  const amrex::Real x7738 = -40000000.0 * sc[9] * x617 - x210 * x824 + x7737;
  const amrex::Real x7739 = -33000000.0 * sc[9] * x663 - x5609 * x887 + x7738;
  const amrex::Real x7742 = 2000000.0 * sc[37] * exp(-10064.3333160944 * invT);
  const amrex::Real x7764 =
    refCinv *
    exp(2.0 * g_RT[14] - 2.0 * g_RT[38] + g_RT[9] + 30.696216614087898 * invT);
  const amrex::Real x7768 = exp(
    g_RT[13] + g_RT[15] - 2.0 * g_RT[38] + g_RT[9] + 1806.0446135731399 * invT);
  const amrex::Real x7769 = refCinv * sc[15] * x7768;
  const amrex::Real x7775 =
    46000000000.0 * sc[19] * exp(-508.24883246276698 * invT - 1.39 * tc[0]);
  const amrex::Real x7781 =
    -sc[9] * x20 * x7692 * x7702 - sc[9] * x5950 - sc[9] * x6782;
  const amrex::Real x7785 =
    46000000000.0 * exp(
                      g_RT[12] + g_RT[13] - g_RT[19] - g_RT[9] -
                      508.24883246276698 * invT - 1.39 * tc[0]);
  const amrex::Real x7790 = 40000000.0 * sc[9] * x180 +
                            33000000.0 * sc[9] * x657 + x210 * x764 +
                            x5609 * x877 + x7717;
  const amrex::Real x7805 =
    2000000.0 *
    exp(g_RT[17] + g_RT[33] - g_RT[37] - g_RT[9] - 10064.3333160944 * invT);
  const amrex::Real x7813 =
    46000000000.0 * sc[9] * exp(-508.24883246276698 * invT - 1.39 * tc[0]);
  const amrex::Real x7839 = 2000000.0 * sc[9] * exp(-10064.3333160944 * invT);
  const amrex::Real x7848 = 8.3490566037735897e+27 * x27 *
                            exp(-2818.0133285064344 * invT - 8.7 * tc[0]);
  amrex::Real x7849 = log(
    0.4675 * exp(-0.0066225165562913899 * tc[1]) +
    0.5325 * exp(-0.00096339113680154098 * tc[1]) + exp(-4970.0 * invT));
  amrex::Real x7850 =
    -0.29097730287517898 * x7849 + 0.43429448190325198 * log(x7848) - 0.4;
  amrex::Real x7851 = -0.55155399201712996 * x7849 - 0.14 * x7850 + 0.75;
  const amrex::Real x7854 = x7850 / ((x7851) * (x7851));
  const amrex::Real x7857 = ((x7850) * (x7850)) / ((x7851) * (x7851) * (x7851));
  const amrex::Real x7858 = 1.4 * x240 * x7854 + 0.196 * x240 * x7857;
  const amrex::Real x7860 = (1.0 / ((x7848 + 1.0)));
  const amrex::Real x7863 = exp(
    M_LN10 * (0.43429448190325198 * x7849 /
              (((x7850) * (x7850)) / ((x7851) * (x7851)) + 1.0)));
  const amrex::Real x7865 = -3130.0076613053543 * invT - 9.67 * tc[0];
  const amrex::Real x7866 = x7863 * exp(-2.0 * g_RT[10] + g_RT[22] + x7865);
  x7849 = x27 * x7849 /
          ((((x7850) * (x7850)) / ((x7851) * (x7851)) + 1.0) *
           (((x7850) * (x7850)) / ((x7851) * (x7851)) + 1.0));
  x7850 = 3.54e+38 * refC * sc[22] * x7849 * x7860 * x7866;
  x7851 = ((sc[10]) * (sc[10])) * x7863 * exp(x7865);
  const amrex::Real x7874 = x7851 * x7860;
  const amrex::Real x7876 = -5948.0209898117882 * invT - 18.37 * tc[0];
  const amrex::Real x7878 = ((sc[10]) * (sc[10])) * x27 * x7863 * exp(x7876) /
                            ((x7848 + 1.0) * (x7848 + 1.0));
  const amrex::Real x7879 = refC * sc[22] * x7860 * x7866;
  const amrex::Real x7881 = refC * sc[22] * x27 * x7863 *
                            exp(-2.0 * g_RT[10] + g_RT[22] + x7876) /
                            ((x7848 + 1.0) * (x7848 + 1.0));
  const amrex::Real x7883 = 3.54e+38 * x7849 * x7851 * x7860;
  amrex::Real x7888 =
    3.91e+40 * x27 * exp(-3277.0978927200781 * invT - 12.49 * tc[0]);
  amrex::Real x7890 = log(
    0.896 * exp(-0.00062266500622664995 * tc[1]) +
    0.104 * exp(-1.6666666666666701e-5 * tc[1]) + exp(-6118.4 * invT));
  amrex::Real x7891 =
    -0.29097730287517898 * x7890 + 0.43429448190325198 * log(x7888) - 0.4;
  amrex::Real x7892 = -0.55155399201712996 * x7890 - 0.14 * x7891 + 0.75;
  const amrex::Real x7898 =
    exp(
      M_LN10 * (0.43429448190325198 * x7890 /
                (((x7891) * (x7891)) / ((x7892) * (x7892)) + 1.0))) /
    ((x7888 + 1.0) * (x7888 + 1.0));
  const amrex::Real x7904 = sc[31] * x477 *
                            exp(
                              -g_RT[10] - g_RT[28] + g_RT[31] -
                              6422.2020539995756 * invT - 25.3 * tc[0]);
  const amrex::Real x7908 = ((x7891) * (x7891)) / ((x7892) * (x7892) * (x7892));
  const amrex::Real x7909 = x7891 / ((x7892) * (x7892));
  amrex::Real x7910 =
    x7890 / ((((x7891) * (x7891)) / ((x7892) * (x7892)) + 1.0) *
             (((x7891) * (x7891)) / ((x7892) * (x7892)) + 1.0));
  const amrex::Real x7911 = x7910 * (0.196 * x240 * x7908 + 1.4 * x240 * x7909);
  const amrex::Real x7912 = -3145.1041612794979 * invT - 12.81 * tc[0];
  x7888 = exp(
            M_LN10 * (0.43429448190325198 * x7890 /
                      (((x7891) * (x7891)) / ((x7892) * (x7892)) + 1.0))) /
          (x7888 + 1.0);
  x7890 = 3.91e+48 * sc[10] * x27 * x7888 * exp(x7912);
  x7891 = exp(-g_RT[10] - g_RT[28] + g_RT[31] + x7912);
  x7892 = 3.91e+48 * x477 * x7888 * x7891;
  const amrex::Real x7926 =
    sc[10] * sc[28] * x27 * exp(-6422.2020539995756 * invT - 25.3 * tc[0]);
  const amrex::Real x7931 = refC * sc[31] * x7888 * x7891;
  const amrex::Real x7933 = sc[10] * sc[28] * exp(x7912);
  const amrex::Real x7936 = sc[28] * x7890 * x7911 - sc[31] * x7892 * x7911 -
                            2.737e+48 * x7888 * x7933 -
                            1.070167e+89 * x7898 * x7904 +
                            1.070167e+89 * x7898 * x7926 + 2.737e+48 * x7931;
  amrex::Real x7942 = -4916.3261815789501 * invT - 11.94 * tc[0];
  const amrex::Real x7944 =
    refC * sc[29] * exp(-g_RT[10] - g_RT[19] + g_RT[29] + x7942);
  amrex::Real x7948 = log(
    0.825 * exp(-0.00074593465612412396 * tc[1]) +
    0.175 * exp(-1.6666666666666701e-5 * tc[1]) + exp(-10139.8 * invT));
  amrex::Real x7949 = -0.29097730287517898 * x7948 +
                      0.43429448190325198 * log(1.708e+39 * x25 * exp(x7942)) -
                      0.4;
  amrex::Real x7950 = -0.55155399201712996 * x7948 - 0.14 * x7949 + 0.75;
  const amrex::Real x7956 =
    exp(
      M_LN10 * (0.43429448190325198 * x7948 /
                (((x7949) * (x7949)) / ((x7950) * (x7950)) + 1.0))) /
    (1.708e+39 * x25 * exp(x7942) + 1.0);
  const amrex::Real x7959 =
    3.4278694009181206e-79 *
    exp(
      M_LN10 * (0.43429448190325198 * x7948 /
                (((x7949) * (x7949)) / ((x7950) * (x7950)) + 1.0))) *
    x25 /
    ((x25 * exp(x7942) + 5.85480093676815e-40) *
     (x25 * exp(x7942) + 5.85480093676815e-40));
  const amrex::Real x7961 = refC * sc[29] *
                            exp(
                              -g_RT[10] - g_RT[19] + g_RT[29] -
                              9832.6523631579003 * invT - 23.88 * tc[0]);
  const amrex::Real x7966 = 0.43429448190325198 * ((x7949) * (x7949)) /
                            (x25 * ((x7950) * (x7950) * (x7950)));
  const amrex::Real x7968 =
    0.43429448190325198 * x7949 / (x25 * ((x7950) * (x7950)));
  x7948 = x7948 / ((((x7949) * (x7949)) / ((x7950) * (x7950)) + 1.0) *
                   (((x7949) * (x7949)) / ((x7950) * (x7950)) + 1.0));
  const amrex::Real x7971 = x7944 * x7956;
  const amrex::Real x7974 = 4.27e+46 * x25 * x7948 * x7971;
  const amrex::Real x7977 =
    sc[10] * sc[19] * exp(-9832.6523631579003 * invT - 23.88 * tc[0]);
  const amrex::Real x7981 = 4.27e+46 * x25 * x7956 * exp(x7942);
  const amrex::Real x7983 = sc[10] * sc[19] * x7948 * x7981;
  const amrex::Real x7985 = sc[10] * sc[19] * exp(x7942);
  const amrex::Real x7987 =
    2.989e+46 * x7944 * x7956 - 2.989e+46 * x7956 * x7985 -
    5.105212e+85 * x7959 * x7961 + 5.105212e+85 * x7959 * x7977 -
    x7974 * (0.196 * x7966 + 1.4 * x7968) +
    x7983 * (0.196 * x7966 + 1.4 * x7968);
  amrex::Real x7993 = 2.0 * x7968 + 0.121602454932911 * ((x7949) * (x7949)) /
                                      (x25 * ((x7950) * (x7950) * (x7950)));
  amrex::Real x7997 = -4.27e+46 * x7956 * x7985 - 7.29316e+85 * x7959 * x7961 +
                      7.29316e+85 * x7959 * x7977 + 4.27e+46 * x7971 -
                      x7974 * x7993 + x7983 * x7993;
  amrex::Real x7998 = 2.0 * x240 * x7854 + 0.28 * x240 * x7857;
  const amrex::Real x8003 = sc[31] * x7892 * x7910;
  const amrex::Real x8006 = sc[28] * x7890 * x7910;
  const amrex::Real x8010 =
    3.91e+48 * refC * sc[31] * x7888 * x7891 - 3.91e+48 * x7888 * x7933 -
    1.52881e+89 * x7898 * x7904 + 1.52881e+89 * x7898 * x7926 -
    x8003 * (0.28 * x240 * x7908 + 2.0 * x240 * x7909) +
    x8006 * (0.28 * x240 * x7908 + 2.0 * x240 * x7909);
  x169 = 3.54e+38 * refC * sc[22] * x7860 * x7866 + sc[10] * x169 * x792 -
         x169 * x225 * x956 - 4.096e+20 * x282 - 3200000000000000.0 * x516 +
         4.096e+20 * x528 + x7689 - x7850 * x7998 - 3.54e+38 * x7851 * x7860 +
         2.9555660377358502e+66 * x7878 - 2.9555660377358502e+66 * x7881 +
         x7883 * x7998 + x8010 + 3200000000000000.0 * x939;
  const amrex::Real x8014 = x169 + x2564 + x6399 + x7997;
  const amrex::Real x8029 = -x180 * x274;
  const amrex::Real x8031 = -x160 * x180 + x169 + x180 * x321 + x7997;
  amrex::Real x8037 = 4.0 * x240 * x7854 + 0.56 * x240 * x7857;
  x7910 = x7910 * (0.56 * x240 * x7908 + 4.0 * x240 * x7909);
  const amrex::Real x8045 = sc[28] * x7890 * x7910 - sc[31] * x7892 * x7910 -
                            7.82e+48 * x7888 * x7933 -
                            3.05762e+89 * x7898 * x7904 +
                            3.05762e+89 * x7898 * x7926 + 7.82e+48 * x7931;
  amrex::Real x8055 = -8.54e+46 * x7956 * x7985 - 1.458632e+86 * x7959 * x7961 +
                      1.458632e+86 * x7959 * x7977 + 8.54e+46 * x7971 -
                      x7974 * (0.56 * x7966 + 4.0 * x7968) +
                      x7983 * (0.56 * x7966 + 4.0 * x7968);
  x3479 = -8.192e+20 * x282 + x345 * x3479 - x3479 * x535 -
          6400000000000000.0 * x516 + 8.192e+20 * x528 + x7689 - x7850 * x8037 -
          7.08e+38 * x7874 + 5.9111320754717004e+66 * x7878 + 7.08e+38 * x7879 -
          5.9111320754717004e+66 * x7881 + x7883 * x8037 + x8045 + x8055 +
          6400000000000000.0 * x939;
  const amrex::Real x8066 =
    -2.346e+49 * x7888 * x7933 - 9.17286e+89 * x7898 * x7904 +
    9.17286e+89 * x7898 * x7926 + 2.346e+49 * x7931 -
    x8003 * (1.68 * x240 * x7908 + 12.0 * x240 * x7909) +
    x8006 * (1.68 * x240 * x7908 + 12.0 * x240 * x7909);
  x7948 = x7948 * (1.68 * x7966 + 12.0 * x7968);
  const amrex::Real x8078 =
    sc[10] * sc[19] * x7948 * x7981 - 4.27e+46 * x25 * x7948 * x7971 -
    2.562e+47 * x7956 * x7985 - 4.375896e+86 * x7959 * x7961 +
    4.375896e+86 * x7959 * x7977 + 2.562e+47 * x7971;
  const amrex::Real x8081 =
    30000000.0 * sc[10] * x657 + 40000000.0 * sc[10] * x764 +
    50000000.0 * sc[10] * x877 + x6755 - x69 * x764 - x764 * x980;
  const amrex::Real x8082 =
    -40000000.0 * sc[10] * x824 + 70000000.0 * sc[6] * x617 + x1041 * x617 +
    x1044 * x824 + x160 * x617 + x196 * x824 + x274 * x617 - x321 * x617 +
    x3763 + x69 * x824 + x8029 + x8031 + x8081 + x824 * x980;
  const amrex::Real x8083 =
    -30000000.0 * sc[10] * x663 - 50000000.0 * sc[10] * x887 + x8082;
  const amrex::Real x8089 = 15100000.0 * sc[34] * exp(-0.05 * tc[0]);
  const amrex::Real x8092 = exp(710.03871545045899 * invT);
  const amrex::Real x8099 =
    6.14 * sc[22] * exp(-5258.61415765932 * invT + 1.74 * tc[0]);
  const amrex::Real x8102 =
    10.0 * exp(-5001.9736580989102 * invT + 1.5 * tc[0]);
  const amrex::Real x8111 =
    3000000.0 * sc[28] * exp(65.921383220418306 * invT - 0.32 * tc[0]);
  const amrex::Real x8114 =
    3.9e+26 * exp(
                g_RT[10] - g_RT[19] - g_RT[21] + g_RT[28] -
                9937.0194996457994 * invT - 5.22 * tc[0]);
  const amrex::Real x8116 =
    -3.91e+48 * sc[28] * x27 * x7888 * exp(x7912) - sc[28] * x8114 - x8111;
  const amrex::Real x8118 =
    2.68e+47 * exp(-17979.931469202598 * invT - 12.82 * tc[0]);
  const amrex::Real x8122 =
    2.2e-6 * exp(-2855.7545784417798 * invT + 3.5 * tc[0]);
  const amrex::Real x8125 =
    40000000.0 *
    exp(g_RT[10] + g_RT[21] - g_RT[22] - g_RT_qss[3] + 276.769166192596 * invT);
  const amrex::Real x8129 =
    -sc[21] * x3895 - sc[21] * x8125 - x274 * x759 + x274 * x767;
  const amrex::Real x8133 =
    36300000000000.0 *
    exp(g_RT[10] + g_RT[12] - g_RT[26] - 28783.993284029999 * invT);
  const amrex::Real x8135 = -refCinv * sc[12] * x8133 - sc[12] * x3892 -
                            sc[12] * x5996 - 8480000.0 * sc[12];
  const amrex::Real x8141 =
    0.00332 * sc[13] * exp(-2948.8496616156599 * invT + 2.81 * tc[0]);
  const amrex::Real x8144 =
    0.227 * exp(-4629.5933254034198 * invT + 2.0 * tc[0]);
  const amrex::Real x8147 = 330000.0 * exp(-3874.76832669634 * invT);
  const amrex::Real x8151 =
    7.8e+41 *
    exp(
      g_RT[10] + g_RT[16] - g_RT[25] - 23600.8616262414 * invT - 9.147 * tc[0]);
  const amrex::Real x8153 =
    -sc[16] * x3946 - sc[16] * x5980 - sc[16] * x6791 - x437 * x8151;
  const amrex::Real x8154 =
    11000000.0 * exp(-g_RT[10] + g_RT[11] + g_RT[29] - g_RT[30]);
  const amrex::Real x8156 =
    6.14 *
    exp(g_RT[21] - g_RT[22] - 5258.61415765932 * invT + 1.74 * tc[0] - x2340);
  const amrex::Real x8158 =
    3000000.0 * exp(
                  -g_RT[10] + g_RT[11] + g_RT[27] - g_RT[28] +
                  65.921383220418306 * invT - 0.32 * tc[0]);
  const amrex::Real x8160 =
    2.2e-6 *
    exp(g_RT[28] - g_RT[29] - 2855.7545784417798 * invT + 3.5 * tc[0] - x2340);
  const amrex::Real x8162 =
    10.0 *
    exp(g_RT[14] - g_RT[15] - 5001.9736580989102 * invT + 1.5 * tc[0] - x2340);
  const amrex::Real x8165 =
    8480000.0 * exp(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT[16]);
  const amrex::Real x8167 = 392000.0 * exp(g_RT[18] - g_RT[19] - x2340);
  x2340 =
    0.00332 *
    exp(g_RT[12] - g_RT[13] - 2948.8496616156599 * invT + 2.81 * tc[0] - x2340);
  const amrex::Real x8172 =
    0.227 * exp(
              -g_RT[10] + g_RT[11] + g_RT[19] - g_RT[20] -
              4629.5933254034198 * invT + 2.0 * tc[0]);
  const amrex::Real x8184 =
    -sc[10] * x3892 - sc[10] * x5996 - 8480000.0 * sc[10] - x2801 * x8133;
  const amrex::Real x8187 = x3763 + x8029 + x8031 + x8081;
  const amrex::Real x8189 =
    0.00332 * sc[10] * exp(-2948.8496616156599 * invT + 2.81 * tc[0]);
  const amrex::Real x8192 =
    15100000.0 * exp(-g_RT[10] + g_RT[14] + g_RT[33] - g_RT[34] - 0.05 * tc[0]);
  const amrex::Real x8194 =
    sc[14] *
    exp(-g_RT[10] + 2.0 * g_RT[14] - g_RT[38] + 710.03871545045899 * invT);
  const amrex::Real x8201 =
    50000000.0 * exp(-g_RT[10] + g_RT[16] + g_RT[20] - g_RT[23]);
  const amrex::Real x8217 =
    5.865e+48 * refC * sc[31] * x7888 * x7891 - 5.865e+48 * x7888 * x7933 -
    2.293215e+89 * x7898 * x7904 + 2.293215e+89 * x7898 * x7926 -
    x8003 * (0.42 * x240 * x7908 + 3.0 * x240 * x7909) +
    x8006 * (0.42 * x240 * x7908 + 3.0 * x240 * x7909);
  x7949 = 0.42 * x7966 + 1.30288344570976 * x7949 / (x25 * ((x7950) * (x7950)));
  x7950 = -x7949 * x7974 + x7949 * x7983 - 6.405e+46 * x7956 * x7985 -
          1.093974e+86 * x7959 * x7961 + 1.093974e+86 * x7959 * x7977 +
          6.405e+46 * x7971;
  const amrex::Real x8231 =
    -sc[10] * x3946 - sc[10] * x5980 - sc[10] * x6791 - x2801 * x8151;
  const amrex::Real x8250 =
    1.281e+47 * x7944 * x7956 - 1.281e+47 * x7956 * x7985 -
    2.187948e+86 * x7959 * x7961 + 2.187948e+86 * x7959 * x7977 -
    x7974 * (0.84 * x7966 + 6.0 * x7968) + x7983 * (0.84 * x7966 + 6.0 * x7968);
  const amrex::Real x8253 =
    3.9e+26 * sc[21] * exp(-9937.0194996457994 * invT - 5.22 * tc[0]);
  const amrex::Real x8267 =
    3.9e+26 * sc[19] * exp(-9937.0194996457994 * invT - 5.22 * tc[0]);
  const amrex::Real x8273 =
    6.14 * sc[10] * exp(-5258.61415765932 * invT + 1.74 * tc[0]);
  const amrex::Real x8289 = -1.173e+49 * x7888 * x7933 -
                            4.58643e+89 * x7898 * x7904 +
                            4.58643e+89 * x7898 * x7926 + 1.173e+49 * x7931 -
                            x8003 * (0.84 * x240 * x7908 + 6.0 * x240 * x7909) +
                            x8006 * (0.84 * x240 * x7908 + 6.0 * x240 * x7909);
  const amrex::Real x8297 =
    7.8e+41 * exp(-23600.8616262414 * invT - 9.147 * tc[0]);
  const amrex::Real x8301 = 2.68e+47 * refC *
                            exp(
                              -g_RT[10] - g_RT[18] + g_RT[28] -
                              17979.931469202598 * invT - 12.82 * tc[0]);
  const amrex::Real x8304 =
    3000000.0 * sc[10] * exp(65.921383220418306 * invT - 0.32 * tc[0]);
  x7942 = 4.27e+46 * refC * x25 * x7956 *
          exp(-g_RT[10] - g_RT[19] + g_RT[29] + x7942);
  const amrex::Real x8313 =
    330000.0 * refC *
    exp(-g_RT[10] - g_RT[20] + g_RT[30] - 3874.76832669634 * invT);
  const amrex::Real x8319 = 15100000.0 * sc[10] * exp(-0.05 * tc[0]);
  x2557 = x2332 * x2557 - 4.83112519685039e+32 * x2352 * x2355 +
          4.83112519685039e+32 * x2352 * x2361 - 2.477e+21 * x2364 +
          2.477e+21 * x2368 - x2372 * x2557;
  const amrex::Real x8327 = -x106 * x626 + x2557;
  x2339 = 2.477e+21 * sc[11] * x2329 * x2339 * x477 -
          2.477e+21 * x2339 * x2368 * x27 -
          9.6622503937007901e+32 * x2352 * x2355 +
          9.6622503937007901e+32 * x2352 * x2361 - 4.954e+21 * x2364 +
          4.954e+21 * x2368;
  const amrex::Real x8339 =
    60000000.0 * sc[11] * x657 + x150 * x180 + x314 * x764 + x3231 + x8327;
  const amrex::Real x8340 =
    50000000.0 * sc[20] * x617 - x150 * x617 - x314 * x824 + x8339;
  const amrex::Real x8341 = -60000000.0 * sc[11] * x663 + x8340;
  const amrex::Real x8354 =
    12100000000000.0 *
    exp(g_RT[11] + g_RT[16] - g_RT[26] - 28783.993284029999 * invT);
  const amrex::Real x8359 =
    60000000.0 * sc[11] * x657 + x150 * x180 + x2557 + x314 * x764;
  const amrex::Real x8379 =
    -187000000000.0 * sc[12] * x2318 + 187000000000.0 * x2312 * x2315;
  const amrex::Real x8385 = 20000000.0 * sc[9] * x626 + x2527 + x8379;
  const amrex::Real x8416 = -x271 * x657;
  const amrex::Real x8419 = -24600000.0 * sc[33] * x657;
  const amrex::Real x8421 = x6744 + x681 * x824 + x8385 + x8419;
  const amrex::Real x8422 = 24600000.0 * sc[33] * x663 +
                            30000000.0 * sc[4] * x663 +
                            33000000.0 * sc[9] * x663 + x271 * x663 + x3229 +
                            x3736 + x5919 + x8416 + x8421;
  const amrex::Real x8439 = 10.0 * exp(-3019.29999482832 * invT + 2.0 * tc[0]);
  const amrex::Real x8446 =
    10.0 * exp(-4025.7333264377598 * invT + 2.0 * tc[0]);
  const amrex::Real x8456 =
    3400000.0 *
    exp(
      g_RT[12] + g_RT[16] - g_RT[17] - g_RT_qss[1] - 347.21949940525701 * invT);
  const amrex::Real x8472 =
    60000000.0 * exp(-g_RT[12] + g_RT[16] - g_RT[28] + g_RT[29]);
  const amrex::Real x8474 =
    10.0 * exp(
             -g_RT[12] + g_RT[16] - g_RT[18] + g_RT[19] -
             3019.29999482832 * invT + 2.0 * tc[0]);
  const amrex::Real x8476 =
    90330000.0 * exp(-g_RT[12] + g_RT[16] - g_RT[19] + g_RT[20]);
  const amrex::Real x8478 =
    10.0 * exp(
             -g_RT[12] + g_RT[16] - g_RT[20] + g_RT[21] -
             4025.7333264377598 * invT + 2.0 * tc[0]);
  const amrex::Real x8484 = -sc[12] * x8456 - 15000000.0 * sc[3] * x341 +
                            15000000.0 * sc[3] * x343 - x271 * x713 +
                            x271 * x719;
  const amrex::Real x8489 = 15000000.0 * sc[3] * x1 -
                            15000000.0 * sc[3] * x890 +
                            3400000.0 * x148 * exp(-347.21949940525701 * invT) +
                            x155 * x271 - x271 * x722;
  x7361 = sc[12] * sc[2] * x2035 + 5.9778837209302301e+29 * x1046 * x7311 -
          5.9778837209302301e+29 * x1046 * x7312 -
          x2029 * (0.28 * x2064 * x240 + 2.0 * x2065 * x240) -
          1350000000000.0 * x2033 * x2079 -
          1.67201834862385e+18 * x2041 * x2044 +
          1.67201834862385e+18 * x2041 * x2057 +
          x2520 * (0.28 * x2064 * x240 + 2.0 * x2065 * x240) -
          5070000000000000.0 * x7315 * x7328 + x7331 * x7361 +
          5070000000000000.0 * x7338 - x7340 * x7361;
  const amrex::Real x8568 = -14000000.0 * sc[17] * x180;
  x7412 = 1.19557674418605e+30 * x1046 * x7311 -
          1.19557674418605e+30 * x1046 * x7312 -
          x2029 * (0.56 * x2064 * x240 + 4.0 * x2065 * x240) -
          2700000000000.0 * x2033 * x2079 -
          3.3440366972477102e+18 * x2041 * x2044 +
          3.3440366972477102e+18 * x2041 * x2057 + 2700000000000.0 * x2052 +
          x2520 * (0.56 * x2064 * x240 + 4.0 * x2065 * x240) -
          1.014e+16 * x7315 * x7328 + x7331 * x7412 + 1.014e+16 * x7338 -
          x7340 * x7412;
  const amrex::Real x8581 = x368 * x764 + x624 * x657 + x7361;
  const amrex::Real x8582 =
    14000000.0 * sc[17] * x617 + 30000000.0 * sc[4] * x617 +
    20000000.0 * sc[5] * x824 - x368 * x824 + x6747 + x8568 + x8581;
  const amrex::Real x8584 = x3760 - x624 * x663 + x663 * x691 + x8582;
  const amrex::Real x8640 = sc[13] * sc[2] * x2202 - 2.2e+18 * x2200 * x2236 -
                            x2203 * (0.28 * x2222 + 2.0 * x2223) +
                            8.9629629629629601e+30 * x2210 * x2215 -
                            8.9629629629629601e+30 * x2210 * x2218 +
                            x2239 * (0.28 * x2222 + 2.0 * x2223);
  const amrex::Real x8642 = x3234 + x8640;
  const amrex::Real x8643 = x617 * x999 + x8642;
  const amrex::Real x8644 = 4.4e+18 * x2200 * x2226 - 4.4e+18 * x2200 * x2236 -
                            x2203 * (0.56 * x2222 + 4.0 * x2223) +
                            1.79259259259259e+31 * x2210 * x2215 -
                            1.79259259259259e+31 * x2210 * x2218 +
                            x2239 * (0.56 * x2222 + 4.0 * x2223);
  const amrex::Real x8648 =
    1690000.0 *
    exp(g_RT[14] - g_RT[33] + g_RT[34] - g_RT[38] + 286.83349950869001 * invT);
  x1744 = 8.6e+16 * x1726 - x1731 + 1.4792e+26 * x1732 * x1735 -
          1.4792e+26 * x1732 * x1751 - x1744 * x1748 + x1744 * x1754 +
          3.645e+45 * x615 * x7506 - x6369 * x6387 * x92 +
          2.7e+26 * x6369 * x90 + 1.15714285714286e+45 * x6376 * x6378 -
          1.15714285714286e+45 * x6376 * x6381 + x6387 * x6397 -
          2.7e+26 * x6395 + 2.7e+26 * x7510 * x90 + x7515 * x7520 -
          x7515 * x7526 - 2.7e+26 * x7517 - 3.645e+45 * x7523;
  x6387 = x1744 - x180 * x249;
  x7515 = x249 * x617 + x6387;
  x1056 = x1056 * x7520 - x1056 * x7526 + 1.72e+17 * x1726 +
          2.9584e+26 * x1732 * x1735 - 2.9584e+26 * x1732 * x1751 -
          x1748 * (4.0 * x1741 + 0.56 * x3412) +
          x1754 * (4.0 * x1741 + 0.56 * x3412) - 1.72e+17 * x3409 +
          7.29e+45 * x615 * x7506 + 5.4e+26 * x6369 * x90 +
          2.3142857142857099e+45 * x6376 * x6378 -
          2.3142857142857099e+45 * x6376 * x6381 +
          x6386 * x6397 * (0.56 * x6384 + 4.0 * x6385) - 5.4e+26 * x6395 -
          x6661 * (0.56 * x6384 + 4.0 * x6385) + 5.4e+26 * x7510 * x90 -
          5.4e+26 * x7517 - 7.29e+45 * x7523;
  const amrex::Real x8664 = x171 * exp(x202 + x475);
  x194 = exp(M_LN10 * (0.43429448190325198 * x199 / x113)) /
         ((x194 + 1.0) * (x194 + 1.0));
  x475 = sc[24] * x477 * exp(-4871.1373249896797 * invT - 10.72 * tc[0] + x475);
  amrex::Real x8673 =
    2.3703703703703702 * ((x135) * (x135)) /
    ((-0.18666666666666668 * x135 - 0.73540532269 * x199 + 1) *
     (-0.18666666666666668 * x135 - 0.73540532269 * x199 + 1) *
     (-0.18666666666666668 * x135 - 0.73540532269 * x199 + 1));
  x135 = 1.7777777777777777 * x135 /
         ((-0.18666666666666668 * x135 - 0.73540532268950665 * x199 + 1) *
          (-0.18666666666666668 * x135 - 0.73540532268950665 * x199 + 1));
  const amrex::Real x8676 = 1.4 * x135 * x240 + 0.196 * x240 * x8673;
  const amrex::Real x8680 =
    2.69e+21 * sc[24] * x199 * x477 * x8664 / ((x113) * (x113));
  x202 = x171 * x217 * exp(x202);
  x171 = 2.69e+21 * sc[16] * x199 * x202 * x27 / ((x113) * (x113));
  amrex::Real x8689 = ((x238) * (x238)) / ((x253) * (x253) * (x253));
  amrex::Real x8691 = x238 / ((x253) * (x253));
  const amrex::Real x8693 = 0.196 * x240 * x8689 + 1.4 * x240 * x8691;
  amrex::Real x8694 = x124 / ((((x238) * (x238)) / ((x253) * (x253)) + 1.0) *
                              (((x238) * (x238)) / ((x253) * (x253)) + 1.0));
  x542 = 2.69e+16 * x280 * x477 * x542;
  const amrex::Real x8698 = sc[23] * x542 * x8694;
  x124 = 3.4548997388095799e-18 *
         exp(
           M_LN10 * (0.43429448190325198 * x124 /
                     (((x238) * (x238)) / ((x253) * (x253)) + 1.0))) /
         ((x27 * exp(x118) + 1.8587360594795538e-9) *
          (x27 * exp(x118) + 1.8587360594795538e-9));
  x118 = sc[16] * x148 * exp(x118);
  x238 = sc[16] * x217 * x27 * exp(-4871.1373249896797 * invT - 10.72 * tc[0]);
  x253 = x124 * x148 * x252;
  const amrex::Real x8718 = sc[16] * x121 * x148 * x280 * x8694;
  const amrex::Real x8724 = sc[37] * exp(-27198.860786745099 * invT);
  const amrex::Real x8728 =
    exp(g_RT[16] + g_RT[32] - g_RT[37] - 27198.860786745099 * invT);
  const amrex::Real x8730 = sc[32] * x437 * x8728;
  const amrex::Real x8748 = 310000000.0 * x8724 - 310000000.0 * x8730;
  x8694 = x8694 * (0.28 * x240 * x8689 + 2.0 * x240 * x8691);
  x7368 = sc[16] * x121 * x148 * x280 * x8694 - 2.69e+21 * sc[16] * x202 -
          sc[23] * x542 * x8694 - 2.69e+16 * x118 * x280 -
          1.44722e+25 * x124 * x634 +
          x171 * (2.0 * x135 * x240 + 0.28 * x240 * x8673) +
          8.9334567901234601e+36 * x194 * x238 -
          8.9334567901234601e+36 * x194 * x475 + 1.44722e+25 * x253 +
          2.69e+16 * x280 * x830 + 2.69e+21 * x640 * x8664 + x7368 -
          x8680 * (2.0 * x135 * x240 + 0.28 * x240 * x8673);
  const amrex::Real x8772 = x2321 + x5648 + x7368;
  x7368 = -40000000.0 * sc[9] * x180 + x180 * x954 + x7368;
  const amrex::Real x8835 = 620000000.0 * x8724 - 620000000.0 * x8730;
  amrex::Real x8846 = 0.56 * x240 * x8689 + 4.0 * x240 * x8691;
  x199 = x199 * (4.0 * x135 * x240 + 0.56 * x240 * x8673) / ((x113) * (x113));
  x113 = 2.69e+21 * sc[16] * x199 * x202 * x27 - 5.38e+21 * sc[16] * x202 -
         2.69e+21 * sc[24] * x199 * x477 * x8664 - 5.38e+16 * x118 * x280 +
         2.89444e+25 * x124 * x148 * x252 - 2.89444e+25 * x124 * x634 +
         1.7866913580246899e+37 * x194 * x238 -
         1.7866913580246899e+37 * x194 * x475 + 5.38e+16 * x280 * x830 +
         5.38e+21 * x640 * x8664 + x7415 - x8698 * x8846 + x8718 * x8846;
  x7415 = 12.0 * x135 * x240 + 1.68 * x240 * x8673;
  const amrex::Real x8868 = 1.68 * x240 * x8689 + 12.0 * x240 * x8691;
  const amrex::Real x8892 = -50000000.0 * sc[23] * x657;
  const amrex::Real x8898 = -29000000.0 * sc[33] * x877 + x8748;
  const amrex::Real x8899 = -30000000.0 * sc[23] * x764 + x297 * x657 +
                            x315 * x764 + x5935 + x764 * x831 + x8898;
  const amrex::Real x8903 = 14000000.0 * sc[17] * x617 +
                            30000000.0 * sc[23] * x824 +
                            40000000.0 * sc[9] * x617 - x315 * x824 -
                            x617 * x954 + x7368 - x824 * x831 + x8568;
  const amrex::Real x8905 =
    50000000.0 * sc[23] * x663 + 29000000.0 * sc[33] * x887 +
    57000000.0 * sc[3] * x663 + 50000000.0 * sc[4] * x887 + x271 * x663 -
    x297 * x663 + x3229 + x3742 + x5609 * x887 + x8416 + x8892 + x8899 + x8903;
  const amrex::Real x8953 = x3742 + x7368 + x8892 + x8899;
  const amrex::Real x8984 =
    55000.0 *
    exp(g_RT[16] - g_RT[23] - g_RT[33] + g_RT[35] - 920.88649842263703 * invT);
  const amrex::Real x8991 = 3.0 * x135 * x240 + 0.42 * x240 * x8673;
  const amrex::Real x9000 = 0.42 * x240 * x8689 + 3.0 * x240 * x8691;
  const amrex::Real x9008 = exp(2.0 * g_RT[16] + g_RT[18] - 2.0 * g_RT[23]);
  const amrex::Real x9018 =
    -310000000.0 * refCinv * sc[32] * x27 * x8728 - 29000000.0 * sc[32] * x599 +
    29000000.0 * sc[33] * x593 - 29000000.0 * sc[33] * x993 +
    465000000.0 * x8724 - 465000000.0 * x8730;
  const amrex::Real x9020 =
    3000000.0 *
    exp(g_RT[16] - g_RT[17] - g_RT[32] + g_RT[33] - 5686.34832359333 * invT);
  const amrex::Real x9032 = -30000000.0 * sc[19] * x521 - sc[19] * x8474 -
                            30000000.0 * sc[23] * x889 +
                            30000000.0 * sc[23] * x893;
  const amrex::Real x9035 = 3000000.0 * sc[32] * exp(-5686.34832359333 * invT);
  const amrex::Real x9093 = -30000000.0 * sc[23] * x764 + x297 * x657 +
                            x315 * x764 + x3742 + x7368 + x764 * x831 + x8892;
  const amrex::Real x9101 = 6.0 * x135 * x240 + 0.84 * x240 * x8673;
  x8689 = 0.84 * x240 * x8689 + 6.0 * x240 * x8691;
  x8691 = 55000.0 * sc[33] * exp(-920.88649842263703 * invT);
  const amrex::Real x9159 = 3000000.0 * sc[17] * exp(-5686.34832359333 * invT);
  const amrex::Real x9165 = 55000.0 * sc[23] * exp(-920.88649842263703 * invT);
  const amrex::Real x9202 =
    -1.0102268722467e+20 * x5613 * x5616 + 1.0102268722467e+20 * x5613 * x5620 +
    1173000000000.0 * x5624 * x5631 - 1173000000000.0 * x5628;
  const amrex::Real x9206 =
    14000000.0 * sc[17] * x180 - 14000000.0 * sc[17] * x617 + x271 * x657 -
    x329 * x764 + x329 * x824 + x67 * x764 - x67 * x824 + x9202;
  const amrex::Real x9207 = -x271 * x663 + x9206;
  const amrex::Real x9208 =
    14000000.0 * sc[17] * x180 + x271 * x657 - x329 * x764 + x67 * x764 + x9202;
  const amrex::Real x9213 = x3360 * exp(x486 + x62);
  const amrex::Real x9216 = sc[18] * exp(x486);
  x63 = x61 / ((3.0625e-6 * x61 * exp(-x333 + x63) + 1.0) *
               (3.0625e-6 * x61 * exp(-x333 + x63) + 1.0));
  x62 = x3360 * exp(-75557.982370578597 * invT - 1.8 * tc[0] - 2 * x333 + x62);
  x333 = sc[18] * exp(-75557.982370578597 * invT - 1.8 * tc[0] - 2 * x333);
  const amrex::Real x9223 = 7503.125 * x333 * x63 +
                            2450000000.0 * x566 * x9213 -
                            2450000000.0 * x566 * x9216 - 7503.125 * x62 * x63;
  const amrex::Real x9225 =
    100000000.0 * sc[2] * x626 + x102 * x626 + x1831 + x9223;
  const amrex::Real x9230 = 15006.25 * x333 * x63 +
                            4900000000.0 * x566 * x9213 -
                            4900000000.0 * x566 * x9216 - 15006.25 * x62 * x63;
  const amrex::Real x9235 = x3779 + x5925 + x824 * x831 + x8892 + x9225;
  const amrex::Real x9236 =
    50000000.0 * sc[10] * x887 + 50000000.0 * sc[23] * x663 + x9235;
  const amrex::Real x9240 = exp(g_RT[18] - 2.0 * g_RT[19] + g_RT[20]);
  const amrex::Real x9244 =
    18757.8125 * x333 * x63 + 6125000000.0 * x566 * x9213 -
    6125000000.0 * x566 * x9216 - 18757.8125 * x62 * x63;
  amrex::Real x9250 = x27 * exp(-4521.1501339224997 * invT - 11.79 * tc[0]);
  amrex::Real x9252 = log(
    0.802 * exp(-0.00043900083410158499 * tc[1]) +
    0.198 * exp(-1.6666666666666701e-5 * tc[1]) + exp(-5723.2 * invT));
  amrex::Real x9253 = -0.29097730287517898 * x9252 +
                      0.43429448190325198 * log(1.03333333333333e+37 * x9250) -
                      0.4;
  amrex::Real x9256 = -0.55155399201712996 * x9252 - 0.14 * x9253 + 0.75;
  const amrex::Real x9261 =
    exp(
      M_LN10 * (0.43429448190325198 * x9252 /
                (((x9253) * (x9253)) / ((x9256) * (x9256)) + 1.0))) /
    (1.03333333333333e+37 * x9250 + 1.0);
  const amrex::Real x9263 =
    sc[19] * sc[21] * exp(-4521.1501339224997 * invT - 11.79 * tc[0]);
  const amrex::Real x9267 = x9253 / ((x9256) * (x9256));
  const amrex::Real x9268 = ((x9253) * (x9253)) / ((x9256) * (x9256) * (x9256));
  amrex::Real x9270 =
    x9252 / ((((x9253) * (x9253)) / ((x9256) * (x9256)) + 1.0) *
             (((x9253) * (x9253)) / ((x9256) * (x9256)) + 1.0));
  const amrex::Real x9272 = 1.55e+44 * x9250 * x9261;
  const amrex::Real x9274 = sc[19] * sc[21] * x9270 * x9272;
  const amrex::Real x9277 =
    sc[19] * sc[21] * x27 * exp(-9042.3002678450102 * invT - 23.58 * tc[0]);
  x9250 = 9.3652445369407457e-75 *
          exp(
            M_LN10 * (0.43429448190325198 * x9252 /
                      (((x9253) * (x9253)) / ((x9256) * (x9256)) + 1.0))) /
          ((x9250 + 9.67741935483874e-38) * (x9250 + 9.67741935483874e-38));
  x9252 = exp(
    -g_RT[19] - g_RT[21] + g_RT[31] - 4521.1501339224997 * invT -
    11.79 * tc[0]);
  x9253 = 1.55e+44 * x477 * x9252 * x9261;
  x9256 = sc[31] * x9253 * x9270;
  const amrex::Real x9287 = sc[31] * x477 *
                            exp(
                              -g_RT[19] - g_RT[21] + g_RT[31] -
                              9042.3002678450102 * invT - 23.58 * tc[0]);
  const amrex::Real x9290 = refC * sc[31] * x9252 * x9261;
  const amrex::Real x9292 =
    1.1211666666666701e+81 * x9250 * x9277 -
    1.1211666666666701e+81 * x9250 * x9287 -
    x9256 * (1.4 * x240 * x9267 + 0.196 * x240 * x9268) -
    1.085e+44 * x9261 * x9263 +
    x9274 * (1.4 * x240 * x9267 + 0.196 * x240 * x9268) + 1.085e+44 * x9290;
  x9270 = x9270 * (2.0 * x240 * x9267 + 0.28 * x240 * x9268);
  const amrex::Real x9302 = sc[19] * sc[21] * x9270 * x9272 -
                            sc[31] * x9253 * x9270 +
                            1.6016666666666699e+81 * x9250 * x9277 -
                            1.6016666666666699e+81 * x9250 * x9287 -
                            1.55e+44 * x9261 * x9263 + 1.55e+44 * x9290;
  x1827 = 2.565e+21 * sc[18] * x1827 * x1834 -
          2.565e+21 * sc[19] * x1834 * x1848 + x1829 * x1852 - x1829 * x1867 -
          1.70446243523316e+34 * x1854 * x1856 + 1.70446243523316e+34 * x1860 +
          x7997 + x9302;
  x1834 = x1827 + x2150 + x626 * x990;
  x1848 = 4.0 * x240 * x9267 + 0.56 * x240 * x9268;
  x1829 = -x1848 * x9256 + x1848 * x9274 +
          3.2033333333333302e+81 * x9250 * x9277 -
          3.2033333333333302e+81 * x9250 * x9287 - 3.1e+44 * x9261 * x9263 +
          3.1e+44 * x9290;
  x1828 = -sc[18] * x1828 * x1865 + sc[19] * x1828 * x1850 + x1829 +
          5.13e+21 * x1836 - 3.4089248704663201e+34 * x1854 * x1856 +
          3.4089248704663201e+34 * x1860 - 5.13e+21 * x1870 + x8055;
  x7997 = 9.61e+81 * x9250 * x9277 - 9.61e+81 * x9250 * x9287 -
          x9256 * (12.0 * x240 * x9267 + 1.68 * x240 * x9268) -
          9.3e+44 * x9261 * x9263 +
          x9274 * (12.0 * x240 * x9267 + 1.68 * x240 * x9268) + 9.3e+44 * x9290;
  x8055 = -30000000.0 * sc[10] * x657 - 30000000.0 * sc[23] * x764 + x1834;
  const amrex::Real x9328 =
    30000000.0 * sc[10] * x663 + 30000000.0 * sc[23] * x824 + x8055;
  const amrex::Real x9329 =
    -30000000.0 * sc[10] * x657 - 30000000.0 * sc[23] * x764 + x1827 + x2150;
  const amrex::Real x9337 =
    2.4025e+81 * x9250 * x9277 - 2.4025e+81 * x9250 * x9287 -
    x9256 * (3.0 * x240 * x9267 + 0.42 * x240 * x9268) -
    2.325e+44 * x9261 * x9263 +
    x9274 * (3.0 * x240 * x9267 + 0.42 * x240 * x9268) + 2.325e+44 * x9290;
  const amrex::Real x9339 =
    7.695e+21 * x1836 + x1852 * (6.0 * x1842 + 0.84 * x1844) -
    5.1133873056994796e+34 * x1854 * x1856 + 5.1133873056994796e+34 * x1860 -
    x1867 * (6.0 * x1842 + 0.84 * x1844) - 7.695e+21 * x1870 + x8250;
  const amrex::Real x9353 = 4.65e+44 * refC * sc[31] * x9252 * x9261 +
                            4.805e+81 * x9250 * x9277 -
                            4.805e+81 * x9250 * x9287 -
                            x9256 * (6.0 * x240 * x9267 + 0.84 * x240 * x9268) -
                            4.65e+44 * x9261 * x9263 +
                            x9274 * (6.0 * x240 * x9267 + 0.84 * x240 * x9268);
  const amrex::Real x9354 =
    7.0e+44 * x1048 - x1050 * (2.0 * x240 * x7289 + 0.28 * x240 * x7290) +
    6.125e+76 * x1051 * x32 - 6.125e+76 * x31 * x32 - 7.0e+44 * x7281 +
    x7302 * (2.0 * x240 * x7289 + 0.28 * x240 * x7290);
  x2148 = 3.2236842105263198e+29 * x2146 * x2162 -
          3.2236842105263198e+29 * x2146 * x2175 - x2147 * x2148 +
          x2148 * x2169 - 1.4e+18 * x2161 * x2165 + 1.4e+18 * x2165 * x2182 +
          x9354;
  const amrex::Real x9356 = x1055 * x626 + x106 * x626 + x2148;
  x38 = -1.4e+45 * sc[20] * x7280 - 7.0e+44 * x1048 * x27 * x38 +
        1.4e+45 * x1048 + 1.225e+77 * x1051 * x32 +
        6.4473684210526297e+29 * x2146 * x2162 -
        6.4473684210526297e+29 * x2146 * x2175 -
        x2147 * (0.56 * x2152 + 4.0 * x2154) - 2.8e+18 * x2161 * x2165 +
        2.8e+18 * x2165 * x2182 + x2169 * (0.56 * x2152 + 4.0 * x2154) +
        7.0e+44 * x27 * x38 * x7281 - 1.225e+77 * x31 * x32;
  const amrex::Real x9366 =
    100000000.0 * sc[20] * x180 - 100000000.0 * sc[20] * x617 +
    30000000.0 * sc[20] * x657 + x368 * x824 + x5933 +
    20000000.0 * x764 * x808 - 20000000.0 * x808 * x824 + x9356;
  const amrex::Real x9368 =
    60000000.0 * sc[11] * x663 - 30000000.0 * sc[20] * x663 + x3774 + x9366;
  const amrex::Real x9370 = 100000000.0 * sc[20] * x180 +
                            30000000.0 * sc[20] * x657 + x2148 + x3200 + x3773 +
                            x5933 + 20000000.0 * x764 * x808;
  const amrex::Real x9372 = 100000000.0 * sc[20] * x180 +
                            30000000.0 * sc[20] * x657 + x3200 + x3773 + x5933 +
                            20000000.0 * x764 * x808 + x9356;
  const amrex::Real x9373 = 9.6710526315789494e+29 * x2146 * x2162 -
                            9.6710526315789494e+29 * x2146 * x2175 -
                            x2147 * (0.84 * x2152 + 6.0 * x2154) -
                            4.2e+18 * x2161 * x2165 + 4.2e+18 * x2165 * x2182 +
                            x2169 * (0.84 * x2152 + 6.0 * x2154);
  x2517 = -refC * sc[21] * x2253 -
          x2251 * x2282 * (0.28 * x2284 * x240 + 2.0 * x2285 * x240) +
          x2251 * x2291 * (0.28 * x2284 * x240 + 2.0 * x2285 * x240) +
          3.00565398683248e+51 * x2259 * x2263 -
          3.00565398683248e+51 * x2259 * x2278 + 2.027e+27 * x2271 + x2517 +
          x9302;
  const amrex::Real x9379 = x2517 + x274 * x617 + x8029;
  x2273 = -4.054e+27 * refC * sc[21] * x2250 * x2273 +
          4.054e+27 * sc[20] * sc[2] * x2250 * exp(x2267) + x1829 -
          x2251 * x2282 * (0.56 * x2284 * x240 + 4.0 * x2285 * x240) +
          x2251 * x2291 * (0.56 * x2284 * x240 + 4.0 * x2285 * x240) +
          6.0113079736649601e+51 * x2259 * x2263 -
          6.0113079736649601e+51 * x2259 * x2278 + x3504;
  x3504 = x2517 + x8029;
  x1829 = 1.77e+38 * x7849 * x7879;
  x7849 = 1.77e+38 * x7849 * x7874;
  x7998 = x1829 * x7998 + 1.99e+29 * x1981 * x2015 - 1.99e+29 * x1985 +
          7.6009596928982695e+46 * x1990 * x1996 -
          7.6009596928982695e+46 * x1990 * x2018 +
          x2011 * (2.0 * x2000 * x240 + 0.28 * x2001 * x240) -
          x2024 * (2.0 * x2000 * x240 + 0.28 * x2001 * x240) - x7849 * x7998 +
          1.77e+38 * x7874 - 1.47778301886792e+66 * x7878 - 1.77e+38 * x7879 +
          1.47778301886792e+66 * x7881;
  const amrex::Real x9388 = x180 * x274 + x7998;
  const amrex::Real x9389 = -x274 * x617 + x9388;
  x2003 = -3.98e+29 * refC * sc[22] * x1981 * x1983 -
          3.54e+38 * refC * sc[22] * x7860 * x7866 + x1829 * x8037 +
          3.98e+29 * x1981 * x2015 + 1.99e+29 * x1985 * x2003 * x27 +
          1.5201919385796501e+47 * x1990 * x1996 -
          1.5201919385796501e+47 * x1990 * x2018 - x2003 * x2015 * x2022 -
          x7849 * x8037 + 3.54e+38 * x7851 * x7860 -
          2.9555660377358502e+66 * x7878 + 2.9555660377358502e+66 * x7881;
  x7851 = -sc[16] * x121 * x148 * x280 * x8694 + sc[23] * x542 * x8694 +
          2.69e+16 * x118 * x280 + 1.44722e+25 * x124 * x634 -
          1.44722e+25 * x253 - 2.69e+16 * x280 * x830;
  x252 = 5.38e+16 * x118 * x280 - 2.89444e+25 * x124 * x148 * x252 +
         2.89444e+25 * x124 * x634 - 5.38e+16 * x280 * x830 + x8698 * x8846 -
         x8718 * x8846;
  x8037 = 50000000.0 * sc[23] * x657 + 30000000.0 * sc[23] * x764 -
          30000000.0 * sc[23] * x824 - x297 * x657 + x3225 + x617 * x954 +
          x7851;
  x8694 = -50000000.0 * sc[23] * x663 + x297 * x663 + x8037;
  x8846 = 50000000.0 * sc[23] * x657 + 30000000.0 * sc[23] * x764 -
          x297 * x657 + x3225 + x7851;
  x8673 = 2.69e+21 * sc[16] * x202 -
          x171 * (2.0 * x135 * x240 + 0.28 * x240 * x8673) -
          8.9334567901234601e+36 * x194 * x238 +
          8.9334567901234601e+36 * x194 * x475 - 2.69e+21 * x640 * x8664 +
          x8680 * (2.0 * x135 * x240 + 0.28 * x240 * x8673);
  x135 = -2.69e+21 * sc[16] * x199 * x202 * x27 + 5.38e+21 * sc[16] * x202 +
         2.69e+21 * sc[24] * x199 * x477 * x8664 -
         1.7866913580246899e+37 * x194 * x238 +
         1.7866913580246899e+37 * x194 * x475 - 5.38e+21 * x640 * x8664;
  x199 = -x315 * x764 + x8673;
  const amrex::Real x9410 = x199 + x315 * x824 + x3777 + x5929 + x67 * x824;
  const amrex::Real x9411 = x624 * x663 + x9410;
  const amrex::Real x9412 = x199 + x2482 + x5929 - x624 * x657;
  x1929 = -x1927 * x1929 * x1971 + x1929 * x1930 +
          4.3757575757575802e+50 * x1936 * x1942 -
          4.3757575757575802e+50 * x1936 * x1967 + 3.8e+29 * x1950 -
          3.8e+29 * x1955;
  const amrex::Real x9416 = -x1927 * x1971 * (0.56 * x1962 + 4.0 * x1963) +
                            x1930 * (0.56 * x1962 + 4.0 * x1963) +
                            8.7515151515151504e+50 * x1936 * x1942 -
                            8.7515151515151504e+50 * x1936 * x1967 +
                            7.6e+29 * x1950 - 7.6e+29 * x1955;
  x1952 = -1.14e+30 * refC * sc[25] * x1926 * x1952 +
          1.14e+30 * sc[24] * sc[2] * x1926 * exp(x1946) -
          x1927 * x1971 * (0.84 * x1962 + 6.0 * x1963) +
          x1930 * (0.84 * x1962 + 6.0 * x1963) +
          1.3127272727272701e+51 * x1936 * x1942 -
          1.3127272727272701e+51 * x1936 * x1967;
  const amrex::Real x9418 = x2421 + x8010;
  const amrex::Real x9422 = x3231 - 20000000.0 * x764 * x808 + x9418;
  const amrex::Real x9423 =
    50000000.0 * sc[20] * x617 + 20000000.0 * x808 * x824 + x9422;
  x1778 = -sc[28] * sc[2] * x1764 * x1778 + sc[29] * x1778 * x1787 +
          8.8445e+87 * x1768 * x1769 - 8.8445e+87 * x1768 * x1770 -
          1.33e+48 * x1785 * x1792 + 1.33e+48 * x1785 * x1796 + x2510;
  x2510 = x1778 + 4.27e+46 * x7956 * x7985 + 7.29316e+85 * x7959 * x7961 -
          7.29316e+85 * x7959 * x7977 - 4.27e+46 * x7971 + x7974 * x7993 -
          x7983 * x7993;
  x3495 = 1.7689e+88 * x1768 * x1769 - 1.7689e+88 * x1768 * x1770 -
          2.66e+48 * x1785 * x1792 + 2.66e+48 * x1785 * x1796 +
          x1789 * (4.0 * x1773 * x240 + 0.56 * x1775 * x240) -
          x1810 * (4.0 * x1773 * x240 + 0.56 * x1775 * x240) + x3495 +
          8.54e+46 * x7956 * x7985 + 1.458632e+86 * x7959 * x7961 -
          1.458632e+86 * x7959 * x7977 - 8.54e+46 * x7971 +
          x7974 * (0.56 * x7966 + 4.0 * x7968) -
          x7983 * (0.56 * x7966 + 4.0 * x7968);
  x7993 = -1.281e+47 * x7944 * x7956 + 1.281e+47 * x7956 * x7985 +
          2.187948e+86 * x7959 * x7961 - 2.187948e+86 * x7959 * x7977 +
          x7974 * (0.84 * x7966 + 6.0 * x7968) -
          x7983 * (0.84 * x7966 + 6.0 * x7968);
  x1877 = 6.26e+26 * sc[30] * x1876 * x1877 * x1895 * x477 -
          6.26e+26 * x1876 * x1897 - 6.26e+26 * x1877 * x1913 * x27 +
          2.9464360902255599e+46 * x1885 * x1890 -
          2.9464360902255599e+46 * x1885 * x1918 + 6.26e+26 * x1913;
  x1880 = 1.252e+27 * x1876 * x1880 - 1.252e+27 * x1876 * x1897 +
          x1878 * (4.0 * x1901 * x240 + 0.56 * x1902 * x240) +
          5.8928721804511299e+46 * x1885 * x1890 -
          5.8928721804511299e+46 * x1885 * x1918 -
          x1916 * (4.0 * x1901 * x240 + 0.56 * x1902 * x240);
  x9270 = -3.91e+48 * refC * sc[31] * x7888 * x7891 -
          sc[19] * sc[21] * x9270 * x9272 + sc[31] * x9253 * x9270 +
          3.91e+48 * x7888 * x7933 + 1.52881e+89 * x7898 * x7904 -
          1.52881e+89 * x7898 * x7926 +
          x8003 * (0.28 * x240 * x7908 + 2.0 * x240 * x7909) -
          x8006 * (0.28 * x240 * x7908 + 2.0 * x240 * x7909) -
          1.6016666666666699e+81 * x9250 * x9277 +
          1.6016666666666699e+81 * x9250 * x9287 + 1.55e+44 * x9261 * x9263 -
          1.55e+44 * x9290;
  x7910 = -sc[28] * x7890 * x7910 + sc[31] * x7892 * x7910 + x1848 * x9256 -
          x1848 * x9274 + 7.82e+48 * x7888 * x7933 +
          3.05762e+89 * x7898 * x7904 - 3.05762e+89 * x7898 * x7926 -
          7.82e+48 * x7931 - 3.2033333333333302e+81 * x9250 * x9277 +
          3.2033333333333302e+81 * x9250 * x9287 + 3.1e+44 * x9261 * x9263 -
          3.1e+44 * x9290;
  x1848 = x8419 + x8898;
  const amrex::Real x9435 =
    24600000.0 * sc[33] * x663 + 29000000.0 * sc[33] * x887 + x1848;
  const amrex::Real x9440 = x180 * x642 + x180 * x800 + x5651;
  const amrex::Real x9442 = 40800000.0 * sc[33] * x657 +
                            29000000.0 * sc[33] * x877 + x642 * x764 +
                            x764 * x800 + x9440;
  const amrex::Real x9443 =
    -x617 * x642 - x617 * x800 - x642 * x824 - x800 * x824 + x9442;
  const amrex::Real x9444 =
    -40800000.0 * sc[33] * x663 - 29000000.0 * sc[33] * x887 + x9443;
  const amrex::Real x9449 = -106000000.0 * x5588 + 106000000.0 * x5592;
  const amrex::Real x9451 = -1434.1674975434501 * invT - 0.69 * tc[0];
  const amrex::Real x9452 = exp(-g_RT[35] + g_RT[36] + x9451);
  const amrex::Real x9459 = -310000000.0 * x8724 + 310000000.0 * x8730;
  const amrex::Real x9461 = -16200000.0 * sc[33] * x657 + x9459;
  const amrex::Real x9462 = 16200000.0 * sc[33] * x663 + x9461;
  x7697 = -refC * sc[38] * x7692 * x7700 + sc[10] * sc[9] * x7692 * x7702 +
          sc[38] * x7685 * x7705 - sc[9] * x7685 * x7686 - x6325 + x7697;
  // Write the full Jacobian expression...
  J[0] = 0;
  J[40] = 0;
  J[80] = 0;
  J[120] = 0;
  J[160] = 0;
  J[200] = 0;
  J[240] = 0;
  J[280] = 0;
  J[320] = 0;
  J[360] = 0;
  J[400] = 0;
  J[440] = 0;
  J[480] = 0;
  J[520] = 0;
  J[560] = 0;
  J[600] = 0;
  J[640] = 0;
  J[680] = 0;
  J[720] = 0;
  J[760] = 0;
  J[800] = 0;
  J[840] = 0;
  J[880] = 0;
  J[920] = 0;
  J[960] = 0;
  J[1000] = 0;
  J[1040] = 0;
  J[1080] = 0;
  J[1120] = 0;
  J[1160] = 0;
  J[1200] = 0;
  J[1240] = 0;
  J[1280] = 0;
  J[1320] = 0;
  J[1360] = 0;
  J[1400] = 0;
  J[1440] = 0;
  J[1480] = 0;
  J[1520] = 0;
  J[1] = 0;
  J[41] = -sc[16] * x47 - sc[17] * x288 - sc[3] * x226;
  J[81] = 0;
  J[121] = -sc[1] * x226;
  J[161] = 0;
  J[201] = 0;
  J[241] = 0;
  J[281] = 0;
  J[321] = 0;
  J[361] = 0;
  J[401] = 0;
  J[441] = 0;
  J[481] = 0;
  J[521] = 0;
  J[561] = 0;
  J[601] = 0;
  J[641] = -sc[1] * x47;
  J[681] = -sc[1] * x288;
  J[721] = 0;
  J[761] = 0;
  J[801] = 0;
  J[841] = 0;
  J[881] = 0;
  J[921] = 0;
  J[961] = 0;
  J[1001] = 0;
  J[1041] = 0;
  J[1081] = 0;
  J[1121] = 0;
  J[1161] = 0;
  J[1201] = 0;
  J[1241] = 0;
  J[1281] = 20000000.0 * sc[37] + x348;
  J[1321] = x352 + x364;
  J[1361] = 0;
  J[1401] = 0;
  J[1441] = 0;
  J[1481] = 20000000.0 * sc[32] + x366;
  J[1521] = 0;
  J[2] =
    30000000.0 * sc[20] * x255 - 30000000.0 * sc[20] * x371 -
    2242800.0 * ((sc[2]) * (sc[2])) * x361 - 110000000.0 * sc[2] * x255 -
    30000000.0 * sc[2] * x283 + 30000000.0 * sc[2] * x344 +
    110000000.0 * sc[2] * x371 + 16200000.0 * sc[33] * x255 -
    16200000.0 * sc[33] * x371 + 28000000.0 * sc[9] * x283 -
    28000000.0 * sc[9] * x344 + x1756 + x1813 + x1873 + x1922 + x1977 + x2027 +
    x2028 + x2082 + x2131 + 6599600.0 * x2134 - 6599600.0 * x2137 + x2190 +
    x2245 + x2298 + 16720000000.0 * x2300 - 16720000000.0 * x2304 + x2322 +
    x2374 + 30000000.0 * x255 * x623 + x255 * x690 + 2.8672e+20 * x282 +
    x283 * x642 + x283 * x800 + x283 * x954 + x283 * x999 - x300 * x349 +
    x300 * x362 - x344 * x642 - x344 * x800 - x344 * x954 - x344 * x999 -
    x345 * (1.4 * x240 * x586 + 0.196 * x240 * x703) - x349 * x642 -
    x349 * x800 + x349 * x980 + x349 * x992 + x362 * x642 + x362 * x800 -
    x362 * x980 - x362 * x992 - x369 * x607 + x369 * x659 -
    30000000.0 * x371 * x623 - x371 * x690 + 2240000000000000.0 * x516 -
    2.8672e+20 * x528 + x535 * (1.4 * x240 * x586 + 0.196 * x240 * x703) -
    2240000000000000.0 * x939 + 2242800.0 * x959 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x607 + x659) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[42] = 30000000.0 * sc[10] * x468 - 30000000.0 * sc[10] * x606 -
          50000000.0 * sc[10] * x687 + 50000000.0 * sc[10] * x709 +
          30000000.0 * sc[20] * x468 - 30000000.0 * sc[20] * x606 -
          110000000.0 * sc[2] * x468 + 110000000.0 * sc[2] * x606 +
          30000000.0 * sc[2] * x627 - 30000000.0 * sc[2] * x650 +
          16200000.0 * sc[33] * x468 - 16200000.0 * sc[33] * x606 -
          80000000.0 * sc[3] * x317 + 57000000.0 * sc[3] * x468 -
          57000000.0 * sc[3] * x606 + 80000000.0 * sc[3] * x680 +
          30000000.0 * sc[4] * x468 - 30000000.0 * sc[4] * x606 -
          50000000.0 * sc[4] * x687 + 50000000.0 * sc[4] * x709 -
          70000000.0 * sc[6] * x627 + 70000000.0 * sc[6] * x650 -
          28000000.0 * sc[9] * x627 + 28000000.0 * sc[9] * x650 - x196 * x317 +
          x196 * x680 + x2150 + x2422 + x2429 + x2453 + x2460 + x2483 + x2528 +
          x2546 + x2565 - x300 * x317 + x300 * x680 - x317 * x642 -
          x317 * x800 + x317 * x980 + x317 * x992 - x369 * x687 + x369 * x709 +
          30000000.0 * x468 * x623 + x468 * x624 + x468 * x690 -
          30000000.0 * x606 * x623 - x606 * x624 - x606 * x690 + x626 * x990 -
          x627 * x642 - x627 * x800 - x627 * x954 - x627 * x999 + x642 * x650 +
          x642 * x680 + x650 * x800 + x650 * x954 + x650 * x999 + x680 * x800 -
          x680 * x980 - x680 * x992 +
          (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
           30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
           16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
           30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
           x234 * x690 - x234 * x691) *
            (-x687 + x709) +
          (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
           30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
           80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
           20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
           28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
           x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
           x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
           15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
           70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
           x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
          (-20000000.0 * sc[4] * x74 - x74 * x990) *
            (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
             (-x117) * (-x317 + x680 +
                        (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[82] =
    -2200000000.0 * sc[17] * sc[2] * x2302 -
    10560000.0 * sc[17] * sc[2] * x2628 - sc[17] * x2706 - sc[17] * x2711 -
    sc[17] * x2714 - 50000000.0 * sc[20] * x666 + 50000000.0 * sc[20] * x671 -
    sc[21] * x2022 * exp(x1982) - 4990000.0 * sc[21] * x2768 -
    2000000.0 * sc[21] - sc[23] * x2723 - 100000000.0 * sc[23] -
    90000000.0 * sc[25] - 360000.0 * sc[2] * sc[6] * exp(-0.6 * tc[0]) -
    224960000.0 * sc[2] * sc[7] * exp(-1.25 * tc[0]) -
    7120000.0 * sc[2] * x2624 * x361 + 110000000.0 * sc[2] * x612 -
    110000000.0 * sc[2] * x616 + 30000000.0 * sc[2] * x666 -
    30000000.0 * sc[2] * x671 - sc[30] * x2692 - 1800000.0 * sc[30] -
    sc[33] * x2735 * x437 - sc[33] * x2741 - 16200000.0 * sc[33] * x612 +
    16200000.0 * sc[33] * x616 - 16200000.0 * sc[37] * x537 -
    96000000.0 * sc[38] - 9428000.0 * sc[3] * x2597 * x361 -
    28000000.0 * sc[4] * x435 * x437 - sc[7] * x2590 - sc[8] * x2672 -
    sc[8] * x2675 - sc[9] * x2098 * x2105 - 30000000.0 * x12 -
    110000000.0 * x148 + x1824 + x2150 - x217 * x991 + x219 - x225 * x27 -
    100000000.0 * x227 * x232 + x2421 + x2482 + x2528 + x2546 + x2565 - x2570 -
    4.8e+16 * x2578 - x2583 - x2587 - 100100.0 * x2638 + x2657 + x2670 + x2690 +
    x2705 - x2719 + x2730 + x2755 + x2764 - x2773 + x2808 + x2824 + x2832 +
    x2849 + x2868 + x2875 + x2890 - x2894 + x300 * x677 - x300 * x685 -
    x369 * x723 + x369 * x730 - 30000000.0 * x612 * x623 - x612 * x690 +
    30000000.0 * x616 * x623 + x616 * x690 - x666 * x954 + x671 * x954 -
    x677 * x980 - x677 * x992 + x685 * x980 + x685 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x723 + x730) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[122] =
    -30000000.0 * sc[10] * x622 + 30000000.0 * sc[10] * x630 -
    50000000.0 * sc[10] * x739 + 50000000.0 * sc[10] * x743 +
    30000000.0 * sc[12] + 16.32 * sc[18] * exp(x97) + 48000000.0 * sc[19] -
    30000000.0 * sc[20] * x622 + 30000000.0 * sc[20] * x630 -
    50000000.0 * sc[20] * x679 + 50000000.0 * sc[20] * x696 +
    100000000.0 * sc[23] + sc[29] * x2342 - 9428000.0 * sc[2] * x2597 * x361 +
    110000000.0 * sc[2] * x622 - 110000000.0 * sc[2] * x630 +
    30000000.0 * sc[2] * x679 - 30000000.0 * sc[2] * x696 -
    16200000.0 * sc[33] * x622 + 16200000.0 * sc[33] * x630 + sc[4] * x2327 +
    sc[6] * x2999 - 70000000.0 * sc[6] * x679 + 70000000.0 * sc[6] * x696 +
    sc[7] * x469 - 28000000.0 * sc[9] * x679 + 28000000.0 * sc[9] * x696 +
    x166 * x196 + x166 * x300 + x166 * x642 + x166 * x800 +
    20000000.0 * x166 * x808 - x166 * x980 - x166 * x992 - x196 * x706 + x2328 +
    x2483 + x2528 + x2546 + x2565 + x2980 + x2990 + x2998 - x300 * x706 +
    x3007 + x3013 - x369 * x739 + x369 * x743 - 30000000.0 * x622 * x623 -
    x622 * x624 - x622 * x690 + 30000000.0 * x623 * x630 + x624 * x630 +
    x630 * x690 - x642 * x679 + x642 * x696 - x642 * x706 - x679 * x800 -
    x679 * x954 - x679 * x999 + x696 * x800 + x696 * x954 + x696 * x999 -
    x706 * x800 - 20000000.0 * x706 * x808 + x706 * x980 + x706 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x739 + x743) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[162] =
    -30000000.0 * sc[10] * x131 + sc[10] * x3085 + 30000000.0 * sc[10] * x633 -
    50000000.0 * sc[10] * x756 + 50000000.0 * sc[10] * x763 + sc[14] * x3023 +
    sc[16] * x3066 + sc[16] * x3068 - 30000000.0 * sc[20] * x131 +
    sc[20] * x3017 + 30000000.0 * sc[20] * x633 - 50000000.0 * sc[20] * x700 +
    50000000.0 * sc[20] * x701 + 110000000.0 * sc[2] * x131 -
    28000000.0 * sc[2] * x435 * x437 - 110000000.0 * sc[2] * x633 +
    30000000.0 * sc[2] * x700 - 30000000.0 * sc[2] * x701 + sc[32] * x3076 -
    16200000.0 * sc[33] * x131 + sc[33] * x3021 + 16200000.0 * sc[33] * x633 +
    sc[3] * x2327 - 70000000.0 * sc[6] * x700 + 70000000.0 * sc[6] * x701 +
    sc[7] * x3025 - 30000000.0 * x131 * x623 - x131 * x690 - x196 * x721 +
    x196 * x728 + 9428000.0 * x2133 * x2597 + x2150 + x2421 + x2482 + x2528 +
    x2546 + x2565 + x261 - x300 * x721 + x300 * x728 + 149700000.0 * x3028 +
    x3033 + x3075 + x3101 + x3102 + x3108 + x3119 + x3127 - x369 * x756 +
    x369 * x763 + x504 * x990 + x587 + 30000000.0 * x623 * x633 + x633 * x690 -
    x642 * x700 + x642 * x701 - x642 * x721 + x642 * x728 - x700 * x800 -
    x700 * x954 - x700 * x999 + x701 * x800 + x701 * x954 + x701 * x999 -
    x721 * x800 - 20000000.0 * x721 * x808 + x721 * x980 + x721 * x992 +
    x728 * x800 + 20000000.0 * x728 * x808 - x728 * x980 - x728 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x756 + x763) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[202] =
    refC * x2087 * x2105 + 30000000.0 * sc[10] * x176 -
    30000000.0 * sc[10] * x643 - 50000000.0 * sc[10] * x782 +
    50000000.0 * sc[10] * x794 + 30000000.0 * sc[20] * x176 +
    50000000.0 * sc[20] * x617 - 30000000.0 * sc[20] * x643 -
    110000000.0 * sc[2] * x176 + 110000000.0 * sc[2] * x643 +
    16200000.0 * sc[33] * x176 - 16200000.0 * sc[33] * x643 +
    57000000.0 * sc[3] * x176 - 57000000.0 * sc[3] * x643 -
    80000000.0 * sc[3] * x736 + 80000000.0 * sc[3] * x737 +
    30000000.0 * sc[4] * x176 - 30000000.0 * sc[4] * x643 -
    20000000.0 * sc[4] * x736 + 20000000.0 * sc[4] * x737 -
    50000000.0 * sc[4] * x782 + 50000000.0 * sc[4] * x794 +
    70000000.0 * sc[6] * x617 + sc[6] * x658 + 30000000.0 * x176 * x623 +
    x176 * x624 + x176 * x690 + x176 * x691 - x180 * x642 - x180 * x800 -
    x196 * x736 + x196 * x737 - x300 * x736 + x300 * x737 + x3202 + x3210 +
    x3237 + x3242 - x369 * x782 + x369 * x794 + x617 * x642 + x617 * x800 -
    30000000.0 * x623 * x643 - x624 * x643 - x642 * x736 + x642 * x737 -
    x643 * x690 - x643 * x691 - x736 * x800 - 20000000.0 * x736 * x808 +
    x736 * x980 + x736 * x992 + x737 * x800 + 20000000.0 * x737 * x808 -
    x737 * x980 - x737 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x782 + x794) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[242] =
    1100000000.0 * refC * sc[17] * exp(-2.0 * tc[0] + x578) +
    360000.0 * refC * sc[6] * exp(-0.6 * tc[0] + x578) +
    112480000.0 * refC * sc[7] * exp(-1.25 * tc[0] + x578) +
    3560000.0 * refC * x2624 * exp(-tc[0] + x578) + sc[10] * x3308 -
    50000000.0 * sc[10] * x829 + 50000000.0 * sc[10] * x843 + sc[13] * x3314 +
    sc[14] * x3256 - 30000000.0 * sc[20] * x207 + sc[20] * x3258 +
    30000000.0 * sc[20] * x653 - 50000000.0 * sc[20] * x726 +
    50000000.0 * sc[20] * x732 + sc[21] * x3252 + 50000000.0 * sc[23] * x3339 +
    sc[24] * x3248 + sc[27] * x3320 + sc[28] * x3254 + sc[29] * x3244 -
    180000.0 * ((sc[2]) * (sc[2])) * exp(-0.6 * tc[0]) +
    110000000.0 * sc[2] * x207 - 110000000.0 * sc[2] * x653 +
    30000000.0 * sc[2] * x726 - 30000000.0 * sc[2] * x732 -
    16200000.0 * sc[33] * x207 + 16200000.0 * sc[33] * x653 +
    20000000.0 * sc[4] * x814 + sc[5] * x658 + 30000000.0 * x139 * x148 +
    x148 * x45 - 30000000.0 * x207 * x623 - x207 * x624 - x207 * x690 +
    18856000.0 * x2134 - 18856000.0 * x2137 + 110000000.0 * x229 * x258 +
    x2538 - x300 * x741 + x300 * x748 + x3251 + x3260 + x3304 + x3330 + x3356 +
    x3367 + x3377 + x3386 + x3390 + x3401 + x3408 + x3420 + x3428 + x3436 +
    x3446 + x3458 + x3468 + x3477 + x3505 - x369 * x829 + x369 * x843 +
    30000000.0 * x623 * x653 + x624 * x653 - x642 * x726 + x642 * x732 -
    x642 * x741 + x642 * x748 + x653 * x690 - x726 * x954 - x726 * x999 +
    x732 * x954 + x732 * x999 - 20000000.0 * x741 * x808 + x741 * x980 +
    x741 * x992 + 20000000.0 * x748 * x808 - x748 * x980 - x748 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x829 + x843) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[282] =
    112480000.0 * refC * sc[6] * exp(-1.25 * tc[0] + x578) + sc[19] * x3536 -
    30000000.0 * sc[20] * x159 + 30000000.0 * sc[20] * x370 -
    112480000.0 * ((sc[2]) * (sc[2])) * exp(-1.25 * tc[0]) +
    110000000.0 * sc[2] * x159 - sc[2] * x2590 - 110000000.0 * sc[2] * x370 +
    30000000.0 * sc[2] * x733 - 30000000.0 * sc[2] * x740 -
    16200000.0 * sc[33] * x159 + 16200000.0 * sc[33] * x370 + sc[3] * x469 +
    sc[4] * x3025 - 30000000.0 * x159 * x623 - x159 * x690 +
    113136000.0 * x2134 - 113136000.0 * x2137 - x300 * x751 + x300 * x760 -
    x345 * x3521 + x3521 * x535 + x3566 + x3580 + x3590 + x3598 + x3608 +
    x3621 + x3622 + x3635 + x3647 + x3658 + x3672 + x3687 - x369 * x864 +
    x369 * x871 + x3695 + x3699 + 30000000.0 * x370 * x623 + x370 * x690 +
    x3712 - 2.4576e+21 * x374 * x472 + 2.4576e+21 * x374 * x534 +
    1.92e+16 * x516 - x642 * x733 + x642 * x740 - x642 * x751 + x642 * x760 -
    x733 * x800 - x733 * x954 + x740 * x800 + x740 * x954 - x751 * x800 +
    x751 * x980 + x751 * x992 + x760 * x800 - x760 * x980 - x760 * x992 -
    1.92e+16 * x939 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x864 + x871) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[322] =
    -sc[2] * x2672 - sc[2] * x2675 + x3797 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[362] =
    -30000000.0 * sc[10] * x674 + 30000000.0 * sc[10] * x676 -
    50000000.0 * sc[10] * x898 + 50000000.0 * sc[10] * x903 -
    30000000.0 * sc[20] * x674 + 30000000.0 * sc[20] * x676 -
    50000000.0 * sc[20] * x745 + 50000000.0 * sc[20] * x747 +
    110000000.0 * sc[2] * x674 - 110000000.0 * sc[2] * x676 +
    30000000.0 * sc[2] * x745 - 30000000.0 * sc[2] * x747 -
    16200000.0 * sc[33] * x674 + 16200000.0 * sc[33] * x676 +
    80000000.0 * sc[3] * x145 - 57000000.0 * sc[3] * x674 +
    57000000.0 * sc[3] * x676 - 80000000.0 * sc[3] * x840 -
    30000000.0 * sc[4] * x674 + 30000000.0 * sc[4] * x676 +
    20000000.0 * sc[4] * x866 - 50000000.0 * sc[4] * x898 +
    50000000.0 * sc[4] * x903 - 70000000.0 * sc[6] * x745 +
    70000000.0 * sc[6] * x747 - 28000000.0 * sc[9] * x745 +
    28000000.0 * sc[9] * x747 + 28000000.0 * x12 + x145 * x196 + x145 * x300 +
    x145 * x642 + x145 * x800 + 20000000.0 * x145 * x808 - x145 * x980 -
    x145 * x992 - x196 * x840 + x2150 + x2321 + x2421 + x2482 + x2528 + x2541 +
    x2544 + x2545 + x2565 - x300 * x840 - x369 * x898 + x369 * x903 + x3798 +
    5280000.0 * x3806 + x3847 + x3863 + x3870 + x3886 -
    30000000.0 * x623 * x674 + 30000000.0 * x623 * x676 - x624 * x674 +
    x624 * x676 - x642 * x745 + x642 * x747 - x642 * x840 - x674 * x690 +
    x676 * x690 - x745 * x800 - x745 * x954 - x745 * x999 + x747 * x800 +
    x747 * x954 + x747 * x999 - x800 * x840 - 20000000.0 * x808 * x840 +
    x840 * x980 + x840 * x992 + x866 * x990 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x898 + x903) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[402] =
    -30000000.0 * sc[10] * x686 + 30000000.0 * sc[10] * x689 -
    50000000.0 * sc[10] * x912 + 50000000.0 * sc[10] * x918 + sc[12] * x3892 +
    sc[16] * x3946 + sc[18] * x3922 + sc[19] * x3951 + sc[20] * x3901 -
    30000000.0 * sc[20] * x686 + 30000000.0 * sc[20] * x689 -
    50000000.0 * sc[20] * x759 + 50000000.0 * sc[20] * x767 + sc[21] * x3895 +
    sc[29] * x3897 + 110000000.0 * sc[2] * x686 - 110000000.0 * sc[2] * x689 +
    30000000.0 * sc[2] * x759 - 30000000.0 * sc[2] * x767 -
    16200000.0 * sc[33] * x686 + 16200000.0 * sc[33] * x689 -
    57000000.0 * sc[3] * x686 + 57000000.0 * sc[3] * x689 +
    80000000.0 * sc[3] * x856 - 80000000.0 * sc[3] * x862 + sc[4] * x3085 -
    30000000.0 * sc[4] * x686 + 30000000.0 * sc[4] * x689 -
    50000000.0 * sc[4] * x912 + 50000000.0 * sc[4] * x918 + sc[6] * x3308 -
    28000000.0 * sc[9] * x759 + 28000000.0 * sc[9] * x767 + 30000000.0 * x148 +
    x2483 + x2528 + x2546 + x2565 + 50000000.0 * x258 + x300 * x856 -
    x300 * x862 + x3013 - x369 * x912 + x369 * x918 + 9980000.0 * x3903 -
    x3948 + x3960 + x3976 + x3986 + x4000 - 30000000.0 * x623 * x686 +
    30000000.0 * x623 * x689 - x624 * x686 + x624 * x689 - x642 * x759 +
    x642 * x767 + x642 * x856 - x642 * x862 - x686 * x690 + x689 * x690 -
    x759 * x800 - x759 * x954 - x759 * x999 + x767 * x800 + x767 * x954 +
    x767 * x999 + x792 + x800 * x856 - x800 * x862 + 20000000.0 * x808 * x856 -
    20000000.0 * x808 * x862 - x856 * x980 - x856 * x992 + x862 * x980 +
    x862 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x912 + x918) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[442] =
    30000000.0 * sc[10] * x292 - 30000000.0 * sc[10] * x693 -
    50000000.0 * sc[10] * x929 + 50000000.0 * sc[10] * x935 +
    30000000.0 * sc[20] * x292 - 30000000.0 * sc[20] * x693 -
    50000000.0 * sc[20] * x786 + 50000000.0 * sc[20] * x809 -
    110000000.0 * sc[2] * x292 + 110000000.0 * sc[2] * x693 +
    30000000.0 * sc[2] * x786 - 30000000.0 * sc[2] * x809 +
    16200000.0 * sc[33] * x292 - 16200000.0 * sc[33] * x693 +
    57000000.0 * sc[3] * x292 - 57000000.0 * sc[3] * x693 -
    50000000.0 * sc[4] * x929 + 50000000.0 * sc[4] * x935 +
    20000000.0 * sc[4] * x944 - 28000000.0 * sc[9] * x786 +
    28000000.0 * sc[9] * x809 + x2546 + 30000000.0 * x292 * x623 + x292 * x624 +
    x292 * x690 - x300 * x861 + x300 * x875 + x3330 + x3420 + x3428 + x3436 +
    x3446 + x3458 + x3468 + x3477 + x3505 - x369 * x929 + x369 * x935 - x4003 +
    x4051 + x4056 + x4067 + x4075 + x4087 - 30000000.0 * x623 * x693 -
    x624 * x693 - x642 * x786 + x642 * x809 - x642 * x861 + x642 * x875 -
    x690 * x693 - x786 * x800 - x786 * x954 - x786 * x999 + x800 * x809 -
    x800 * x861 + x800 * x875 - 20000000.0 * x808 * x861 +
    20000000.0 * x808 * x875 + x809 * x954 + x809 * x999 + x861 * x980 +
    x861 * x992 - x875 * x980 - x875 * x992 + x944 * x990 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x929 + x935) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[482] =
    12000000.0 * sc[10] * x330 * x982 + sc[10] * x3892 +
    30000000.0 * sc[10] * x704 + 40000000.0 * sc[10] * x780 +
    50000000.0 * sc[10] * x945 + 60000000.0 * sc[11] * x704 +
    50000000.0 * sc[20] * x330 + 30000000.0 * sc[20] * x704 -
    30000000.0 * sc[2] * x330 - 110000000.0 * sc[2] * x704 +
    16200000.0 * sc[33] * x704 + 30000000.0 * sc[3] +
    30000000.0 * sc[4] * x330 + 20000000.0 * sc[4] * x780 +
    20000000.0 * sc[4] * x946 + 70000000.0 * sc[6] * x330 + sc[6] * x3374 +
    28000000.0 * sc[9] * x330 + x196 * x780 + x300 * x780 + x3231 +
    x330 * x642 + x330 * x800 + x330 * x954 + x330 * x999 + x369 * x945 +
    x3729 + x3735 + x3742 + x3751 + x3759 + x3763 + x3768 + x3773 + x3779 +
    x3792 + x4137 + x4143 + x4154 + 30000000.0 * x623 * x704 + x624 * x704 +
    x642 * x780 + x690 * x704 + x691 * x704 + x780 * x800 +
    20000000.0 * x780 * x808 - x780 * x980 - x780 * x992 + x946 * x990 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x945) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[522] =
    -30000000.0 * sc[10] * x705 + 30000000.0 * sc[10] * x708 -
    50000000.0 * sc[10] * x953 + 50000000.0 * sc[10] * x958 -
    30000000.0 * sc[20] * x705 + 30000000.0 * sc[20] * x708 +
    50000000.0 * sc[20] * x851 + 110000000.0 * sc[2] * x705 -
    110000000.0 * sc[2] * x708 - 30000000.0 * sc[2] * x851 -
    16200000.0 * sc[33] * x705 + 16200000.0 * sc[33] * x708 + sc[6] * x3314 +
    70000000.0 * sc[6] * x851 + 28000000.0 * sc[9] * x851 +
    94600000.0 * x148 * exp(259.15658288943098 * invT) - x180 * x642 -
    x180 * x800 - x196 * x879 + x196 * x880 - x300 * x879 + x300 * x880 +
    x3200 + x3225 + x3228 + x3230 + x3235 + x3242 - x369 * x953 + x369 * x958 +
    x4202 + x4211 + x4217 + x4229 - 30000000.0 * x623 * x705 +
    30000000.0 * x623 * x708 - x624 * x705 + x624 * x708 + x642 * x851 -
    x642 * x879 + x642 * x880 - x690 * x705 + x690 * x708 + x800 * x851 -
    x800 * x879 + x800 * x880 - 20000000.0 * x808 * x879 +
    20000000.0 * x808 * x880 + x851 * x954 + x851 * x999 + x879 * x980 +
    x879 * x992 - x880 * x980 - x880 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x953 + x958) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[562] =
    30000000.0 * sc[10] * x710 + 40000000.0 * sc[10] * x884 +
    50000000.0 * sc[10] * x962 + 60000000.0 * sc[11] * x710 +
    30000000.0 * sc[20] * x710 + 50000000.0 * sc[20] * x859 -
    8.6e+16 * sc[2] * x1723 * x966 - 110000000.0 * sc[2] * x710 -
    30000000.0 * sc[2] * x859 - 68000000.0 * sc[2] +
    16200000.0 * sc[33] * x710 + 57000000.0 * sc[3] * x710 +
    15000000.0 * sc[3] * x859 + 80000000.0 * sc[3] * x884 + sc[4] * x3023 +
    30000000.0 * sc[4] * x710 + 30000000.0 * sc[4] * x859 +
    20000000.0 * sc[4] * x884 + 50000000.0 * sc[4] * x962 + sc[6] * x3256 +
    70000000.0 * sc[6] * x859 + 28000000.0 * sc[9] * x859 + x196 * x884 +
    2.2e+18 * x2200 * x2204 * x88 + x300 * x884 + x321 * x859 + x3228 +
    x369 * x962 + x3729 + x3735 + x3742 + x3751 + x3768 + x3777 + x3779 +
    x3792 + x4285 + 30000000.0 * x623 * x710 + x624 * x710 + x642 * x859 +
    x642 * x884 + x690 * x710 + x691 * x710 + x800 * x859 + x800 * x884 +
    20000000.0 * x808 * x884 + x859 * x954 + x859 * x999 - x884 * x980 -
    x884 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x962) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[602] =
    8.6e+16 * refC * x1729 * x88 + 30000000.0 * sc[10] * x711 +
    40000000.0 * sc[10] * x886 + 50000000.0 * sc[10] * x969 +
    60000000.0 * sc[11] * x711 + 30000000.0 * sc[20] * x711 +
    50000000.0 * sc[20] * x867 - 110000000.0 * sc[2] * x711 -
    30000000.0 * sc[2] * x867 + 16200000.0 * sc[33] * x711 +
    57000000.0 * sc[3] * x711 + 15000000.0 * sc[3] * x867 +
    80000000.0 * sc[3] * x886 + 30000000.0 * sc[4] * x711 +
    30000000.0 * sc[4] * x867 + 20000000.0 * sc[4] * x886 +
    50000000.0 * sc[4] * x969 + 70000000.0 * sc[6] * x867 +
    28000000.0 * sc[9] * x867 + x196 * x886 + x300 * x886 + x321 * x867 +
    x3228 + x369 * x969 + x3729 + x3735 + x3742 + x3751 + x3768 + x3777 +
    x3779 + x3792 + x4285 - x4292 + 30000000.0 * x623 * x711 + x624 * x711 +
    x642 * x867 + x642 * x886 + x690 * x711 + x691 * x711 + x800 * x867 +
    x800 * x886 + 20000000.0 * x808 * x886 + x867 * x954 + x867 * x999 -
    x886 * x980 - x886 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x969) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[642] =
    -28000000.0 * refCinv * sc[2] * sc[4] * x435 - 30000000.0 * sc[20] * x713 +
    30000000.0 * sc[20] * x719 + 30000000.0 * sc[2] * x341 -
    30000000.0 * sc[2] * x343 + 110000000.0 * sc[2] * x713 -
    110000000.0 * sc[2] * x719 - 16200000.0 * sc[33] * x713 +
    16200000.0 * sc[33] * x719 - 15000000.0 * sc[3] * x341 +
    15000000.0 * sc[3] * x343 + sc[4] * x3066 + sc[4] * x3068 -
    28000000.0 * sc[9] * x341 + 28000000.0 * sc[9] * x343 +
    100000000.0 * x12 * x82 + x1718 + 16499000.0 * x2134 - 16499000.0 * x2137 -
    200000000.0 * x227 * x2312 + 77000000000.0 * x2300 - 77000000000.0 * x2304 +
    x2545 + 6.144e+20 * x282 - x300 * x889 + x300 * x893 - x341 * x642 -
    x341 * x800 - x341 * x954 + x343 * x642 + x343 * x800 + x343 * x954 -
    x345 * x4348 + x369 * x593 - x369 * x993 - x4336 + x4348 * x535 + x4399 +
    x4407 + x4419 + x4432 + x4443 + x4457 + x4469 + x4484 + x4500 + x4518 +
    x4533 + x4544 + 4800000000000000.0 * x516 - 6.144e+20 * x528 -
    30000000.0 * x623 * x713 + 30000000.0 * x623 * x719 - x642 * x889 +
    x642 * x893 - x690 * x713 + x690 * x719 - x800 * x889 + x800 * x893 +
    x889 * x980 + x889 * x992 - x893 * x980 - x893 * x992 -
    4800000000000000.0 * x939 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x593 - x993) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[682] =
    1100000000.0 * refC * sc[6] * exp(-2.0 * tc[0] + x578) -
    50000000.0 * sc[10] * x1014 + 30000000.0 * sc[10] * x155 -
    30000000.0 * sc[10] * x722 + 50000000.0 * sc[10] * x839 +
    30000000.0 * sc[20] * x155 - 30000000.0 * sc[20] * x722 -
    1100000000.0 * ((sc[2]) * (sc[2])) * x2302 -
    5280000.0 * ((sc[2]) * (sc[2])) * x2628 - 30000000.0 * sc[2] * x1 -
    110000000.0 * sc[2] * x155 - sc[2] * x2706 - sc[2] * x2711 - sc[2] * x2714 +
    110000000.0 * sc[2] * x722 + 30000000.0 * sc[2] * x890 +
    16200000.0 * sc[33] * x155 - 16200000.0 * sc[33] * x722 +
    15000000.0 * sc[3] * x1 - 15000000.0 * sc[3] * x890 +
    20000000.0 * sc[4] * x813 + 28000000.0 * sc[9] * x1 -
    28000000.0 * sc[9] * x890 + x1 * x642 + x1 * x800 + x1 * x954 + x1 * x999 -
    x1014 * x369 + 30000000.0 * x155 * x623 + x155 * x624 + x155 * x690 +
    33940800.0 * x2134 - 33940800.0 * x2137 + 158400000000.0 * x2300 -
    158400000000.0 * x2304 - x300 * x894 + x300 * x897 + x3330 + x3355 + x3420 +
    x3436 + x3446 + x3505 + x369 * x839 + x4584 + x4611 + x4625 + x4632 +
    x4642 + x4647 - 30000000.0 * x623 * x722 - x624 * x722 - x642 * x890 -
    x642 * x894 + x642 * x897 - x690 * x722 - x800 * x890 - x800 * x894 +
    x800 * x897 + x813 * x990 - x890 * x954 - x890 * x999 + x894 * x980 +
    x894 * x992 - x897 * x980 - x897 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x1014 + x839) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[722] =
    sc[10] * x3922 - 30000000.0 * sc[10] * x731 + 30000000.0 * sc[10] * x738 -
    30000000.0 * sc[20] * x731 + 30000000.0 * sc[20] * x738 -
    50000000.0 * sc[20] * x892 + 50000000.0 * sc[20] * x900 +
    110000000.0 * sc[2] * x731 - 110000000.0 * sc[2] * x738 +
    30000000.0 * sc[2] * x892 - 30000000.0 * sc[2] * x900 -
    16200000.0 * sc[33] * x731 + 16200000.0 * sc[33] * x738 -
    57000000.0 * sc[3] * x731 + 57000000.0 * sc[3] * x738 +
    80000000.0 * sc[3] * x872 - 80000000.0 * sc[3] * x902 +
    16.32 * sc[3] * exp(x97) - 50000000.0 * sc[4] * x1027 +
    50000000.0 * sc[4] * x1036 + sc[4] * x3095 - 30000000.0 * sc[4] * x731 +
    30000000.0 * sc[4] * x738 + 20000000.0 * sc[4] * x99 + sc[6] * x3362 -
    70000000.0 * sc[6] * x892 + 70000000.0 * sc[6] * x900 -
    28000000.0 * sc[9] * x892 + 28000000.0 * sc[9] * x900 - x1027 * x369 +
    x1036 * x369 + x196 * x872 - x196 * x902 + x2421 + x300 * x872 -
    x300 * x902 + x4695 + x4707 + x4714 + x4752 + x4761 + x4762 + x530 -
    30000000.0 * x623 * x731 + 30000000.0 * x623 * x738 - x624 * x731 +
    x624 * x738 + x642 * x872 - x642 * x892 + x642 * x900 - x642 * x902 -
    x690 * x731 + x690 * x738 + x800 * x872 - x800 * x892 + x800 * x900 -
    x800 * x902 + 20000000.0 * x808 * x872 - 20000000.0 * x808 * x902 -
    x872 * x980 - x872 * x992 - x892 * x954 - x892 * x999 + x900 * x954 +
    x900 * x999 + x902 * x980 + x902 * x992 + x99 * x990 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x1027 + x1036) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[762] =
    50000000.0 * sc[10] * x1042 + 40000000.0 * sc[10] * x214 + sc[10] * x3951 +
    60000000.0 * sc[11] * x742 + 30000000.0 * sc[20] * x742 +
    50000000.0 * sc[20] * x905 - 110000000.0 * sc[2] * x742 -
    30000000.0 * sc[2] * x905 + 16200000.0 * sc[33] * x742 +
    80000000.0 * sc[3] * x214 + 57000000.0 * sc[3] * x742 +
    15000000.0 * sc[3] * x905 + 48000000.0 * sc[3] +
    50000000.0 * sc[4] * x1042 + 20000000.0 * sc[4] * x214 +
    30000000.0 * sc[4] * x742 + 30000000.0 * sc[4] * x905 +
    20000000.0 * sc[4] * x952 + sc[6] * x3383 + 70000000.0 * sc[6] * x905 +
    sc[7] * x3536 + 28000000.0 * sc[9] * x905 + x1042 * x369 + x1850 +
    x196 * x214 + x214 * x300 + x214 * x642 + x214 * x800 +
    20000000.0 * x214 * x808 - x214 * x980 - x214 * x992 + x321 * x905 + x3228 +
    x3231 + x3729 + x3735 + x3742 + x3751 + x3759 + x3763 + x3768 + x3773 +
    x3779 + x3792 + x4154 + x4815 + 30000000.0 * x623 * x742 + x624 * x742 +
    x642 * x905 + x690 * x742 + x691 * x742 + x800 * x905 + x905 * x954 +
    x905 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x1042 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[802] =
    -50000000.0 * sc[10] * x1052 + 50000000.0 * sc[10] * x1057 +
    sc[10] * x3901 - 30000000.0 * sc[20] * x744 + 30000000.0 * sc[20] * x752 +
    sc[21] * x4823 + 110000000.0 * sc[2] * x744 - 110000000.0 * sc[2] * x752 +
    30000000.0 * sc[2] * x906 - 30000000.0 * sc[2] * x915 -
    16200000.0 * sc[33] * x744 + 16200000.0 * sc[33] * x752 -
    80000000.0 * sc[3] * x699 - 57000000.0 * sc[3] * x744 +
    57000000.0 * sc[3] * x752 + 80000000.0 * sc[3] * x904 -
    50000000.0 * sc[4] * x1052 + 50000000.0 * sc[4] * x1057 + sc[4] * x3017 +
    20000000.0 * sc[4] * x35 - 30000000.0 * sc[4] * x744 +
    30000000.0 * sc[4] * x752 + sc[6] * x3258 - 70000000.0 * sc[6] * x906 +
    70000000.0 * sc[6] * x915 - 28000000.0 * sc[9] * x906 +
    28000000.0 * sc[9] * x915 - x1052 * x369 + x1057 * x369 +
    30000000.0 * x148 - x196 * x699 + x196 * x904 + x2421 - x300 * x699 +
    x300 * x904 + x4731 + x4752 + x4761 + x4762 + x4865 + x4874 + x4886 +
    x4891 + x4909 - 30000000.0 * x623 * x744 + 30000000.0 * x623 * x752 -
    x624 * x744 + x624 * x752 - x642 * x699 + x642 * x904 - x642 * x906 +
    x642 * x915 - x690 * x744 + x690 * x752 - x699 * x800 + x699 * x980 +
    x699 * x992 + x800 * x904 - x800 * x906 + x800 * x915 - x904 * x980 -
    x904 * x992 - x906 * x954 - x906 * x999 + x915 * x954 + x915 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x1052 + x1057) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[842] =
    50000000.0 * sc[10] * x1061 + sc[10] * x3895 + 30000000.0 * sc[10] * x750 +
    40000000.0 * sc[10] * x882 + 60000000.0 * sc[11] * x750 + sc[20] * x4823 +
    50000000.0 * sc[20] * x518 + 30000000.0 * sc[20] * x750 -
    sc[2] * x2022 * exp(x1982) - 4990000.0 * sc[2] * x2768 -
    30000000.0 * sc[2] * x518 - 110000000.0 * sc[2] * x750 - 2000000.0 * sc[2] +
    16200000.0 * sc[33] * x750 + 15000000.0 * sc[3] * x518 +
    57000000.0 * sc[3] * x750 + 80000000.0 * sc[3] * x882 +
    50000000.0 * sc[4] * x1061 + 30000000.0 * sc[4] * x518 +
    30000000.0 * sc[4] * x750 + 20000000.0 * sc[4] * x882 + sc[6] * x3252 +
    70000000.0 * sc[6] * x518 + 28000000.0 * sc[9] * x518 + x1061 * x369 +
    x196 * x882 + x2253 * x477 + x300 * x882 + x321 * x518 + x3228 + x3729 +
    x3735 + x3742 + x3751 + x3768 + x3777 + x3779 + x3792 + x4285 +
    x518 * x642 + x518 * x800 + x518 * x954 + x518 * x999 +
    30000000.0 * x623 * x750 + x624 * x750 + x642 * x882 + x690 * x750 +
    x691 * x750 + x800 * x882 + 20000000.0 * x808 * x882 - x882 * x980 -
    x882 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x1061 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[882] =
    50000000.0 * sc[10] * x126 - 50000000.0 * sc[10] * x308 -
    30000000.0 * sc[10] * x776 + 30000000.0 * sc[10] * x781 -
    30000000.0 * sc[20] * x776 + 30000000.0 * sc[20] * x781 +
    110000000.0 * sc[2] * x776 - 110000000.0 * sc[2] * x781 +
    30000000.0 * sc[2] * x919 - 30000000.0 * sc[2] * x920 -
    16200000.0 * sc[33] * x776 + 16200000.0 * sc[33] * x781 -
    57000000.0 * sc[3] * x776 + 57000000.0 * sc[3] * x781 +
    50000000.0 * sc[4] * x126 - 50000000.0 * sc[4] * x308 +
    20000000.0 * sc[4] * x51 - 28000000.0 * sc[9] * x919 +
    28000000.0 * sc[9] * x920 + x126 * x369 + x2546 + 1.2288e+21 * x282 -
    x300 * x909 + x300 * x910 - x308 * x369 - x345 * x4970 + x4731 + x4752 +
    x4761 - x4967 + x4970 * x535 + x5016 + x5028 + x5037 + x5046 + x5058 +
    x5069 + x5087 + x51 * x990 + x5101 + x5120 + 9600000000000000.0 * x516 -
    1.2288e+21 * x528 - 30000000.0 * x623 * x776 + 30000000.0 * x623 * x781 -
    x624 * x776 + x624 * x781 - x642 * x909 + x642 * x910 - x642 * x919 +
    x642 * x920 - x690 * x776 + x690 * x781 - x800 * x909 + x800 * x910 -
    x800 * x919 + x800 * x920 + x909 * x980 + x909 * x992 - x910 * x980 -
    x910 * x992 - x919 * x954 + x920 * x954 - 9600000000000000.0 * x939 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x126 - x308) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[922] =
    -50000000.0 * sc[10] * x303 + 50000000.0 * sc[10] * x310 -
    30000000.0 * sc[10] * x785 + 30000000.0 * sc[10] * x793 -
    30000000.0 * sc[20] * x785 + 30000000.0 * sc[20] * x793 +
    50000000.0 * sc[20] * x923 - sc[2] * x2723 + 110000000.0 * sc[2] * x785 -
    110000000.0 * sc[2] * x793 - 30000000.0 * sc[2] * x923 -
    100000000.0 * sc[2] - 16200000.0 * sc[33] * x785 +
    16200000.0 * sc[33] * x793 - 80000000.0 * sc[3] * x684 +
    80000000.0 * sc[3] * x768 + 15000000.0 * sc[3] * x923 +
    100000000.0 * sc[3] - 30000000.0 * sc[4] * x785 +
    30000000.0 * sc[4] * x793 + 50000000.0 * sc[6] * x3339 +
    70000000.0 * sc[6] * x923 + 28000000.0 * sc[9] * x923 - x180 * x642 -
    x180 * x800 - x196 * x684 + x196 * x768 - x300 * x684 + x300 * x768 -
    x303 * x369 + x310 * x369 + x3200 + x3225 + x3230 + x3235 + x3242 + x5178 +
    x5184 + x5190 - 30000000.0 * x623 * x785 + 30000000.0 * x623 * x793 -
    x624 * x785 + x624 * x793 - x642 * x684 + x642 * x768 + x642 * x923 -
    x684 * x800 - 20000000.0 * x684 * x808 + x684 * x980 + x684 * x992 -
    x690 * x785 + x690 * x793 + x768 * x800 + 20000000.0 * x768 * x808 -
    x768 * x980 - x768 * x992 + x800 * x923 + x923 * x954 + x923 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x303 + x310) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[962] =
    50000000.0 * sc[10] * x325 + 40000000.0 * sc[10] * x772 +
    30000000.0 * sc[10] * x801 + 60000000.0 * sc[11] * x801 +
    30000000.0 * sc[20] * x801 + 50000000.0 * sc[20] * x925 -
    110000000.0 * sc[2] * x801 - 30000000.0 * sc[2] * x925 +
    16200000.0 * sc[33] * x801 + 80000000.0 * sc[3] * x772 +
    57000000.0 * sc[3] * x801 + 15000000.0 * sc[3] * x925 +
    50000000.0 * sc[4] * x325 + 20000000.0 * sc[4] * x772 +
    30000000.0 * sc[4] * x801 + 30000000.0 * sc[4] * x925 + sc[6] * x3248 +
    70000000.0 * sc[6] * x925 + 28000000.0 * sc[9] * x925 + x196 * x772 +
    x300 * x772 + x321 * x925 + x3228 + x3231 + x325 * x369 + x3729 + x3735 +
    x3742 + x3751 + x3759 + x3763 + x3768 + x3773 + x3779 + x3792 + x4154 +
    x5248 + x609 * x990 + 30000000.0 * x623 * x801 + x642 * x772 + x642 * x925 +
    x690 * x801 + x691 * x801 + x772 * x800 + 20000000.0 * x772 * x808 -
    x772 * x980 - x772 * x992 + x800 * x925 + x925 * x954 + x925 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x325 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1002] =
    -20000000.0 * sc[2] * x2892 - 90000000.0 * sc[2] + x1957 + x3797 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1042] =
    x3797 - 100100.0 * x5258 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1082] =
    50000000.0 * sc[10] * x326 + 30000000.0 * sc[10] * x803 +
    60000000.0 * sc[11] * x803 - 110000000.0 * sc[2] * x803 +
    16200000.0 * sc[33] * x803 + 57000000.0 * sc[3] * x803 +
    50000000.0 * sc[4] * x326 + 30000000.0 * sc[4] * x803 + sc[6] * x3320 +
    x326 * x369 + x3736 + x3742 + x3765 + x3769 + x3774 + x3777 + x3779 +
    x3792 + x5276 + 30000000.0 * x623 * x803 + x624 * x803 + x690 * x803 +
    x691 * x803 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x326 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1122] =
    50000000.0 * sc[10] * x336 + 30000000.0 * sc[10] * x826 +
    40000000.0 * sc[10] * x911 + 60000000.0 * sc[11] * x826 +
    30000000.0 * sc[20] * x826 + 50000000.0 * sc[20] * x927 +
    30000000.0 * sc[2] * x180 - 110000000.0 * sc[2] * x826 -
    30000000.0 * sc[2] * x927 + 16200000.0 * sc[33] * x826 +
    57000000.0 * sc[3] * x826 + 80000000.0 * sc[3] * x911 +
    15000000.0 * sc[3] * x927 + 50000000.0 * sc[4] * x336 +
    30000000.0 * sc[4] * x826 + 20000000.0 * sc[4] * x911 +
    30000000.0 * sc[4] * x927 + sc[6] * x3254 + 70000000.0 * sc[6] * x927 +
    28000000.0 * sc[9] * x927 + x196 * x911 + x2538 + x300 * x911 + x3013 +
    x3200 + x321 * x927 + x3225 + x3228 + x3230 + x3231 + x3234 + x336 * x369 +
    x3729 + x3735 + x3742 + x3751 + x3759 + x3763 + x3768 + x3773 + x3777 +
    x3779 + x3792 + x5304 + x5324 + 30000000.0 * x623 * x826 + x624 * x826 +
    x642 * x911 + x642 * x927 + x690 * x826 + x691 * x826 + x800 * x911 +
    x800 * x927 - x911 * x980 - x911 * x992 + x927 * x954 + x927 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x336 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1162] =
    sc[10] * x3897 - 8000000000000000.0 * sc[2] * exp(x2576) + sc[3] * x2342 +
    sc[6] * x3244 + x1787 - x2756 * x956 + x3797 - x5341 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1202] =
    -sc[2] * x2692 - 1800000.0 * sc[2] + 6.26e+26 * x1876 * x1895 * x477 +
    x3797 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1242] =
    x3797 - 4.8e+16 * x5347 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1282] =
    50000000.0 * sc[10] * x476 + 30000000.0 * sc[10] * x816 +
    60000000.0 * sc[11] * x816 + 50000000.0 * sc[20] * x617 +
    30000000.0 * sc[20] * x816 - 110000000.0 * sc[2] * x816 +
    16200000.0 * sc[33] * x816 + 57000000.0 * sc[3] * x816 + sc[4] * x3076 +
    50000000.0 * sc[4] * x476 + 30000000.0 * sc[4] * x816 +
    70000000.0 * sc[6] * x617 + x196 * x824 + x300 * x824 + x3237 +
    x369 * x476 + x3729 + x3736 + x3742 + x3752 + x3760 + x3763 + x3769 +
    x3774 + x3777 + x3779 + x3792 + 30000000.0 * x623 * x816 + x624 * x816 +
    x690 * x816 + x691 * x816 + 20000000.0 * x808 * x824 - x824 * x980 -
    x824 * x992 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x476 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1322] =
    -50000000.0 * sc[10] * x257 + 50000000.0 * sc[10] * x356 -
    30000000.0 * sc[10] * x818 + 30000000.0 * sc[10] * x849 -
    30000000.0 * sc[20] * x818 + 30000000.0 * sc[20] * x849 - sc[2] * x2741 +
    110000000.0 * sc[2] * x818 - 110000000.0 * sc[2] * x849 +
    30000000.0 * sc[2] * x928 - 30000000.0 * sc[2] * x932 -
    16200000.0 * sc[33] * x818 + 16200000.0 * sc[33] * x849 +
    80000000.0 * sc[3] * x285 - 80000000.0 * sc[3] * x493 -
    57000000.0 * sc[3] * x818 + 57000000.0 * sc[3] * x849 -
    50000000.0 * sc[4] * x257 + sc[4] * x3021 + 50000000.0 * sc[4] * x356 -
    30000000.0 * sc[4] * x818 + 30000000.0 * sc[4] * x849 -
    70000000.0 * sc[6] * x928 + 70000000.0 * sc[6] * x932 -
    28000000.0 * sc[9] * x928 + 28000000.0 * sc[9] * x932 + 16200000.0 * x148 +
    x1831 + x196 * x285 - x196 * x493 - x2312 * x2735 + x2483 - x257 * x369 +
    x285 * x300 - x285 * x980 - x285 * x992 - x300 * x493 + x3013 +
    x356 * x369 + x4762 + x493 * x980 + x493 * x992 + x5394 + x5401 + x5413 +
    x5420 + x5435 + x5442 - 30000000.0 * x623 * x818 +
    30000000.0 * x623 * x849 - x624 * x818 + x624 * x849 - x690 * x818 +
    x690 * x849 - x928 * x954 - x928 * x999 + x932 * x954 + x932 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x257 + x356) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1362] =
    x3797 - x5458 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1402] =
    40000000.0 * sc[10] * x357 + 50000000.0 * sc[10] * x367 +
    30000000.0 * sc[10] * x863 + 60000000.0 * sc[11] * x863 +
    30000000.0 * sc[20] * x863 + 50000000.0 * sc[20] * x933 -
    110000000.0 * sc[2] * x863 - 30000000.0 * sc[2] * x933 +
    16200000.0 * sc[33] * x863 + 80000000.0 * sc[3] * x357 +
    57000000.0 * sc[3] * x863 + 15000000.0 * sc[3] * x933 +
    20000000.0 * sc[4] * x357 + 50000000.0 * sc[4] * x367 +
    30000000.0 * sc[4] * x863 + 30000000.0 * sc[4] * x933 +
    70000000.0 * sc[6] * x933 + 28000000.0 * sc[9] * x933 + x196 * x357 +
    x300 * x357 + x3200 + x321 * x933 + x3225 + x3228 + x3230 + x3235 +
    x357 * x800 + 20000000.0 * x357 * x808 - x357 * x980 - x357 * x992 +
    x367 * x369 + x3729 + x3735 + x3742 + x3759 + x3763 + x3768 + x3773 +
    x3777 + x3779 + x3792 + x5483 + 30000000.0 * x623 * x863 + x624 * x863 +
    x690 * x863 + x691 * x863 + x800 * x933 + x933 * x954 + x933 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x367 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1442] =
    30000000.0 * sc[10] * x354 + 40000000.0 * sc[10] * x358 +
    50000000.0 * sc[10] * x402 + 60000000.0 * sc[11] * x354 +
    30000000.0 * sc[20] * x354 + 50000000.0 * sc[20] * x934 +
    30000000.0 * sc[2] * x180 - 110000000.0 * sc[2] * x354 -
    30000000.0 * sc[2] * x934 + 16200000.0 * sc[33] * x354 +
    57000000.0 * sc[3] * x354 + 80000000.0 * sc[3] * x358 +
    15000000.0 * sc[3] * x934 + 30000000.0 * sc[4] * x354 +
    20000000.0 * sc[4] * x358 + 50000000.0 * sc[4] * x402 +
    30000000.0 * sc[4] * x934 + 70000000.0 * sc[6] * x934 +
    28000000.0 * sc[9] * x934 + x196 * x358 + x2538 + x300 * x358 + x3013 +
    x3200 + x321 * x934 + x3225 + x3228 + x3230 + x3231 + x3234 +
    30000000.0 * x354 * x623 + x354 * x624 + x354 * x690 + x354 * x691 +
    x358 * x642 + 20000000.0 * x358 * x808 - x358 * x980 - x358 * x992 +
    x369 * x402 + x3729 + x3735 + x3742 + x3751 + x3759 + x3763 + x3773 +
    x3777 + x3779 + x3792 + x5529 + x642 * x934 + x934 * x954 + x934 * x999 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x402 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1482] =
    30000000.0 * sc[10] * x363 + 50000000.0 * sc[10] * x466 +
    60000000.0 * sc[11] * x363 + 30000000.0 * sc[20] * x363 -
    110000000.0 * sc[2] * x363 - 16200000.0 * sc[2] * x537 +
    16200000.0 * sc[33] * x363 + 57000000.0 * sc[3] * x363 +
    30000000.0 * sc[4] * x363 + 50000000.0 * sc[4] * x466 + sc[6] * x3302 +
    30000000.0 * x363 * x623 + x363 * x624 + x363 * x690 + x363 * x691 +
    x369 * x466 + x3729 + x3736 + x3742 + x3765 + x3769 + x3774 + x3777 +
    x3779 + x3792 + x5556 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (x466 - x877) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1522] =
    -96000000.0 * sc[2] + x3797 +
    (-30000000.0 * sc[10] * x234 - 60000000.0 * sc[11] * x234 -
     30000000.0 * sc[20] * x234 + 110000000.0 * sc[2] * x234 -
     16200000.0 * sc[33] * x234 - 57000000.0 * sc[3] * x234 -
     30000000.0 * sc[4] * x234 - 30000000.0 * x234 * x623 - x234 * x624 -
     x234 * x690 - x234 * x691) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 - 50000000.0 * sc[20] * x220 +
     30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     80000000.0 * sc[3] * x235 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 - 70000000.0 * sc[6] * x220 -
     28000000.0 * sc[9] * x220 + x196 * x235 - x220 * x321 - x220 * x642 -
     x220 * x800 - x220 * x954 - x220 * x999 + x235 * x300 + x235 * x642 +
     x235 * x800 + 20000000.0 * x235 * x808 - x235 * x980 - x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + 30000000.0 * sc[2] * x117 -
     15000000.0 * sc[3] * x117 - 30000000.0 * sc[4] * x117 -
     70000000.0 * sc[6] * x117 - 28000000.0 * sc[9] * x117 - x117 * x321 -
     x117 * x642 - x117 * x800 - x117 * x954 - x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[4] * x74 - x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[3] =
    -57000000.0 * sc[3] * x255 - 30000000.0 * sc[3] * x283 +
    30000000.0 * sc[3] * x344 + 80000000.0 * sc[3] * x349 -
    80000000.0 * sc[3] * x362 + 57000000.0 * sc[3] * x371 +
    33000000.0 * sc[9] * x255 - 33000000.0 * sc[9] * x371 + 6599600.0 * x2134 -
    6599600.0 * x2137 - x349 * x368 - x349 * x67 - x349 * x831 + x362 * x368 +
    x362 * x67 + x362 * x831 + 199200.0 * x5583 - 199200.0 * x5584 +
    74200000.0 * x5588 - 74200000.0 * x5592 + x5634 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x607 + x659) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (30000000.0 * sc[3] * x117) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[43] =
    -sc[3] * x226 + 80000000.0 * sc[3] * x317 - 57000000.0 * sc[3] * x468 +
    57000000.0 * sc[3] * x606 + 30000000.0 * sc[3] * x627 -
    30000000.0 * sc[3] * x650 - 80000000.0 * sc[3] * x680 +
    33000000.0 * sc[9] * x468 - 33000000.0 * sc[9] * x606 - x317 * x368 -
    x317 * x67 - x317 * x831 + x368 * x680 - x5609 * x687 + x5609 * x709 +
    x5654 + x67 * x680 + x680 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x687 + x709) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (30000000.0 * sc[3] * x117) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[83] =
    15000000.0 * sc[12] * x448 + 80000000.0 * sc[12] * x512 + sc[13] * x2838 +
    57000000.0 * sc[16] * x551 + sc[17] * x2706 + sc[23] * x2723 +
    sc[24] * x2783 + sc[24] * x2801 * x2804 - 9428000.0 * sc[3] * x2597 * x361 +
    57000000.0 * sc[3] * x612 - 57000000.0 * sc[3] * x616 +
    30000000.0 * sc[3] * x666 - 30000000.0 * sc[3] * x671 -
    80000000.0 * sc[3] * x677 + 80000000.0 * sc[3] * x685 + sc[4] * x2873 +
    sc[5] * x2697 - 33000000.0 * sc[9] * x612 + 33000000.0 * sc[9] * x616 +
    100000000.0 * x227 * x232 + x2773 + x368 * x677 - x368 * x685 -
    x5609 * x723 + x5609 * x730 + x5654 + x67 * x677 - x67 * x685 +
    x677 * x831 - x685 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x723 + x730) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (30000000.0 * sc[3] * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[123] =
    -84300000.0 * sc[10] - sc[11] * x5717 - sc[13] * x5733 - sc[14] * x5742 -
    10000000.0 * sc[14] - sc[17] * x5721 - 20.4 * sc[18] * exp(x97) -
    96000000.0 * sc[19] - sc[1] * x226 - 16040000.0 * sc[21] -
    100000000.0 * sc[23] - sc[25] * x5699 - sc[29] * x2342 -
    9428000.0 * sc[2] * x2597 * x361 - 96000000.0 * sc[30] -
    106000000.0 * sc[33] * x27 * x5590 - sc[33] * x5751 - sc[37] * x5688 -
    36000000.0 * sc[38] - 80000000.0 * sc[3] * x166 -
    480000.0 * sc[3] * x361 * x5737 + 57000000.0 * sc[3] * x622 -
    57000000.0 * sc[3] * x630 + 30000000.0 * sc[3] * x679 -
    30000000.0 * sc[3] * x696 + 80000000.0 * sc[3] * x706 - sc[4] * x2327 -
    40000000.0 * sc[5] - sc[6] * x2999 - sc[7] * x469 -
    0.03973 * sc[7] * x5768 - sc[8] * x5692 - 30000000.0 * x12 -
    57000000.0 * x148 + x166 * x831 - 80000000.0 * x217 - x2894 + x5648 +
    x5651 + x5652 - x5678 - x5682 - x5686 - x5708 - x5713 - x5726 - x5756 -
    x5759 + x5766 + x5777 + x5785 + x5793 - x706 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x739 + x743) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (30000000.0 * sc[3] * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[163] =
    sc[10] * x5803 + sc[12] * x5820 + sc[14] * x5812 + sc[16] * x5833 +
    sc[19] * x5839 + sc[21] * x5800 + sc[23] * x5827 + sc[24] * x5796 +
    sc[28] * x5809 + sc[2] * x2873 + sc[37] * x5794 +
    57000000.0 * sc[3] * x131 - sc[3] * x2327 - 57000000.0 * sc[3] * x633 +
    30000000.0 * sc[3] * x700 - 30000000.0 * sc[3] * x701 +
    80000000.0 * sc[3] * x721 - 80000000.0 * sc[3] * x728 + sc[5] * x5798 -
    33000000.0 * sc[9] * x131 + sc[9] * x5815 + 33000000.0 * sc[9] * x633 +
    9428000.0 * x2133 * x2597 - x368 * x721 + x368 * x728 - x5609 * x756 +
    x5609 * x763 + x5654 + x5807 + 0.07946 * x5818 - x67 * x721 + x67 * x728 -
    x721 * x831 + x728 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x756 + x763) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (30000000.0 * sc[3] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[203] =
    sc[2] * x2697 - 57000000.0 * sc[3] * x176 + 30000000.0 * sc[3] * x180 -
    30000000.0 * sc[3] * x617 + 57000000.0 * sc[3] * x643 +
    80000000.0 * sc[3] * x736 - 80000000.0 * sc[3] * x737 - 40000000.0 * sc[3] +
    sc[4] * x5798 + 33000000.0 * sc[9] * x176 - 33000000.0 * sc[9] * x643 -
    x368 * x736 + x368 * x737 - x5609 * x782 + x5609 * x794 + x5648 + x5651 +
    x5652 - x67 * x736 + x67 * x737 - x736 * x831 + x737 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x782 + x794) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (30000000.0 * sc[3] * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[243] =
    15000000.0 * sc[16] * x440 + 57000000.0 * sc[3] * x207 - sc[3] * x2999 -
    57000000.0 * sc[3] * x653 + 30000000.0 * sc[3] * x726 -
    30000000.0 * sc[3] * x732 + 80000000.0 * sc[3] * x741 -
    80000000.0 * sc[3] * x748 - 33000000.0 * sc[9] * x207 +
    33000000.0 * sc[9] * x653 + 18856000.0 * x2134 - 18856000.0 * x2137 -
    x368 * x741 + x368 * x748 + 576000.0 * x5583 - 576000.0 * x5584 + x5870 +
    x5890 - x67 * x741 + x67 * x748 - x741 * x831 + x748 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x829 + x843) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (30000000.0 * sc[3] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[283] =
    57000000.0 * sc[3] * x159 - 57000000.0 * sc[3] * x370 - sc[3] * x469 -
    0.03973 * sc[3] * x5768 + 30000000.0 * sc[3] * x733 -
    30000000.0 * sc[3] * x740 + 80000000.0 * sc[3] * x751 -
    80000000.0 * sc[3] * x760 - 33000000.0 * sc[9] * x159 +
    33000000.0 * sc[9] * x370 + 113136000.0 * x2134 - 113136000.0 * x2137 -
    x368 * x751 + x368 * x760 + 3696000.0 * x5583 - 3696000.0 * x5584 +
    636000000.0 * x5588 - 636000000.0 * x5592 + x5914 - x67 * x751 +
    x67 * x760 - x751 * x831 + x760 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x864 + x871) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (30000000.0 * sc[3] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[323] =
    -sc[3] * x5692 + x5939 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[363] =
    sc[10] * x5950 + sc[14] * x5946 + sc[32] * x5954 + sc[33] * x5941 -
    80000000.0 * sc[3] * x145 + 57000000.0 * sc[3] * x674 -
    57000000.0 * sc[3] * x676 + 30000000.0 * sc[3] * x745 -
    30000000.0 * sc[3] * x747 + 80000000.0 * sc[3] * x840 + sc[4] * x5815 -
    33000000.0 * sc[9] * x674 + 33000000.0 * sc[9] * x676 + x145 * x368 +
    x145 * x67 + x145 * x831 + 33000000.0 * x148 +
    58000000.0 * x258 * exp(-289.85279950351901 * invT) - x368 * x840 + x3877 +
    240000.0 * x5582 * x5737 - x5609 * x898 + x5609 * x903 + x5648 + x5651 +
    x5652 + x5944 + x5949 - x67 * x840 - x831 * x840 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x898 + x903) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (30000000.0 * sc[3] * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[403] =
    sc[12] * x5996 + sc[13] * x5976 + sc[16] * x5980 +
    57000000.0 * sc[3] * x686 - 57000000.0 * sc[3] * x689 +
    30000000.0 * sc[3] * x759 - 30000000.0 * sc[3] * x767 -
    80000000.0 * sc[3] * x856 + 80000000.0 * sc[3] * x862 - 84300000.0 * sc[3] +
    sc[4] * x5803 + sc[9] * x5950 - 33000000.0 * sc[9] * x686 +
    33000000.0 * sc[9] * x689 + x368 * x856 - x368 * x862 + x3948 -
    x5609 * x912 + x5609 * x918 + x5654 + x67 * x856 - x67 * x862 +
    x831 * x856 - x831 * x862 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x912 + x918) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (30000000.0 * sc[3] * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[443] =
    -57000000.0 * sc[3] * x292 - sc[3] * x5717 + 57000000.0 * sc[3] * x693 +
    30000000.0 * sc[3] * x786 - 30000000.0 * sc[3] * x809 +
    80000000.0 * sc[3] * x861 - 80000000.0 * sc[3] * x875 +
    33000000.0 * sc[9] * x292 - 33000000.0 * sc[9] * x693 - x368 * x861 +
    x368 * x875 - x5609 * x929 + x5609 * x935 + x5648 + x5652 + x5870 -
    x67 * x861 + x67 * x875 - x831 * x861 + x831 * x875 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x929 + x935) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (30000000.0 * sc[3] * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[483] =
    sc[10] * x5996 + sc[21] * x6023 + 15000000.0 * sc[2] * x448 +
    80000000.0 * sc[2] * x512 + sc[30] * x6019 - 30000000.0 * sc[3] * x330 -
    33000000.0 * sc[3] * x562 - 57000000.0 * sc[3] * x704 -
    80000000.0 * sc[3] * x780 - 60000000.0 * sc[3] + sc[4] * x5820 +
    33000000.0 * sc[9] * x704 + x368 * x780 + x5609 * x945 + x5919 + x6028 +
    x67 * x780 + x780 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x945) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[523] =
    sc[10] * x5976 + sc[21] * x6035 + sc[2] * x2838 +
    30000000.0 * sc[3] * x180 - sc[3] * x5733 + 57000000.0 * sc[3] * x705 -
    57000000.0 * sc[3] * x708 - 30000000.0 * sc[3] * x851 +
    80000000.0 * sc[3] * x879 - 80000000.0 * sc[3] * x880 -
    33000000.0 * sc[9] * x705 + 33000000.0 * sc[9] * x708 + x2132 +
    x217 * x821 - x368 * x879 + x368 * x880 - x5609 * x953 + x5609 * x958 +
    x5648 + x5651 + x5652 - x67 * x879 + x67 * x880 - x831 * x879 +
    x831 * x880 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x953 + x958) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (30000000.0 * sc[3] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[563] =
    -sc[3] * x5742 - 57000000.0 * sc[3] * x710 - 30000000.0 * sc[3] * x859 -
    80000000.0 * sc[3] * x884 - 10000000.0 * sc[3] + sc[4] * x5812 +
    sc[9] * x5946 + 33000000.0 * sc[9] * x710 + x368 * x884 + x5609 * x962 +
    x5919 + x5925 + x5929 + x5930 + x5933 + x5935 + x67 * x884 + x831 * x884 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x962) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[603] =
    -57000000.0 * sc[3] * x711 - 30000000.0 * sc[3] * x867 -
    80000000.0 * sc[3] * x886 + 33000000.0 * sc[9] * x711 + x368 * x886 +
    x5609 * x969 + x5919 + x6028 - x6074 + x67 * x886 + x831 * x886 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x969) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[643] =
    sc[10] * x5980 + sc[20] * x6078 + 57000000.0 * sc[2] * x551 +
    sc[33] * x6080 + 30000000.0 * sc[3] * x341 - 30000000.0 * sc[3] * x343 +
    57000000.0 * sc[3] * x713 - 57000000.0 * sc[3] * x719 +
    80000000.0 * sc[3] * x889 - 80000000.0 * sc[3] * x893 + sc[4] * x5833 +
    15000000.0 * sc[6] * x440 - 33000000.0 * sc[9] * x713 +
    33000000.0 * sc[9] * x719 + 16499000.0 * x2134 - 16499000.0 * x2137 +
    x217 * x508 + 200000000.0 * x227 * x2312 - x368 * x889 + x368 * x893 +
    420000.0 * x5583 - 420000.0 * x5584 + 159000000.0 * x5588 -
    159000000.0 * x5592 + x6082 + x6111 - x67 * x889 + x67 * x893 -
    x831 * x889 + x831 * x893 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x593 - x993) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (30000000.0 * sc[3] * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[683] =
    sc[2] * x2706 - 30000000.0 * sc[3] * x1 - 57000000.0 * sc[3] * x155 -
    sc[3] * x5721 + 57000000.0 * sc[3] * x722 + 30000000.0 * sc[3] * x890 +
    80000000.0 * sc[3] * x894 - 80000000.0 * sc[3] * x897 +
    33000000.0 * sc[9] * x155 - 33000000.0 * sc[9] * x722 + x1026 * x217 +
    33940800.0 * x2134 - 33940800.0 * x2137 - x368 * x894 + x368 * x897 +
    864000.0 * x5583 - 864000.0 * x5584 + x5870 + x6134 - x67 * x894 +
    x67 * x897 - x831 * x894 + x831 * x897 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x1014 + x839) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (30000000.0 * sc[3] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[723] =
    57000000.0 * sc[3] * x731 - 57000000.0 * sc[3] * x738 -
    80000000.0 * sc[3] * x872 + 30000000.0 * sc[3] * x892 -
    30000000.0 * sc[3] * x900 + 80000000.0 * sc[3] * x902 -
    20.4 * sc[3] * exp(x97) - 33000000.0 * sc[9] * x731 +
    33000000.0 * sc[9] * x738 - x1027 * x5609 + x1036 * x5609 + x368 * x872 -
    x368 * x902 + x5654 + x67 * x872 - x67 * x902 + x831 * x872 - x831 * x902 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x1027 + x1036) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (30000000.0 * sc[3] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[763] =
    -80000000.0 * sc[3] * x214 - 57000000.0 * sc[3] * x742 -
    30000000.0 * sc[3] * x905 - 96000000.0 * sc[3] + sc[4] * x5839 +
    33000000.0 * sc[9] * x742 + x1042 * x5609 + x214 * x368 + x214 * x67 +
    x214 * x831 + x5919 + x6028 + x6150 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x1042 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[803] =
    sc[16] * x6078 + 80000000.0 * sc[3] * x699 + 57000000.0 * sc[3] * x744 -
    57000000.0 * sc[3] * x752 - 80000000.0 * sc[3] * x904 +
    30000000.0 * sc[3] * x906 - 30000000.0 * sc[3] * x915 -
    33000000.0 * sc[9] * x744 + 33000000.0 * sc[9] * x752 - x1052 * x5609 +
    x1057 * x5609 + x5654 + x6178 - x67 * x699 + x67 * x904 - x699 * x831 +
    x831 * x904 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x1052 + x1057) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (30000000.0 * sc[3] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[843] =
    sc[12] * x6023 + sc[13] * x6035 - 30000000.0 * sc[3] * x518 -
    57000000.0 * sc[3] * x750 - 80000000.0 * sc[3] * x882 - 16040000.0 * sc[3] +
    sc[4] * x5800 + 33000000.0 * sc[9] * x750 + x1061 * x5609 + x368 * x882 +
    x5919 + x6028 + x67 * x882 + x831 * x882 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x1061 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[883] =
    57000000.0 * sc[3] * x776 - 57000000.0 * sc[3] * x781 +
    80000000.0 * sc[3] * x909 - 80000000.0 * sc[3] * x910 +
    30000000.0 * sc[3] * x919 - 30000000.0 * sc[3] * x920 -
    33000000.0 * sc[9] * x776 + 33000000.0 * sc[9] * x781 + x126 * x5609 -
    x308 * x5609 - x368 * x909 + x368 * x910 + 318000000.0 * x5588 -
    318000000.0 * x5592 + x5648 + x5652 - x6190 - x67 * x909 + x67 * x910 -
    x831 * x909 + x831 * x910 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x126 - x308) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (30000000.0 * sc[3] * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[923] =
    sc[2] * x2723 + 30000000.0 * sc[3] * x180 + 80000000.0 * sc[3] * x684 -
    80000000.0 * sc[3] * x768 + 57000000.0 * sc[3] * x785 -
    57000000.0 * sc[3] * x793 - 30000000.0 * sc[3] * x923 -
    100000000.0 * sc[3] + sc[4] * x5827 - 33000000.0 * sc[9] * x785 +
    33000000.0 * sc[9] * x793 - x303 * x5609 + x310 * x5609 - x368 * x684 +
    x368 * x768 + x5648 + x5651 + x5652 - x67 * x684 + x67 * x768 -
    x684 * x831 + x768 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x303 + x310) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (30000000.0 * sc[3] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[963] =
    sc[2] * x2783 + sc[2] * x2801 * x2804 - 10000000.0 * sc[3] * x2786 -
    sc[3] * x5764 - 80000000.0 * sc[3] * x772 - 57000000.0 * sc[3] * x801 -
    30000000.0 * sc[3] * x925 + sc[4] * x5796 + 33000000.0 * sc[9] * x801 +
    x325 * x5609 + x368 * x772 + x5919 + x6028 + x67 * x772 + x772 * x831 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x325 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1003] =
    -20000000.0 * sc[3] * x2892 - sc[3] * x5699 + x5939 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1043] =
    x5939 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1083] =
    -57000000.0 * sc[3] * x803 + 33000000.0 * sc[9] * x803 + x326 * x5609 +
    x5919 + x5938 - x6240 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x326 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1123] =
    -57000000.0 * sc[3] * x826 - 80000000.0 * sc[3] * x911 -
    30000000.0 * sc[3] * x927 + sc[4] * x5809 + 33000000.0 * sc[9] * x826 +
    x336 * x5609 + x368 * x911 + x5919 + x6028 + x67 * x911 + x831 * x911 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x336 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1163] =
    -sc[3] * x2342 + x5939 - x6252 - x6253 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1203] =
    sc[12] * x6019 - 96000000.0 * sc[3] + x5939 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1243] =
    x5939 - x6256 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1283] =
    -57000000.0 * sc[3] * x816 + sc[9] * x5954 + 33000000.0 * sc[9] * x816 +
    x348 + x476 * x5609 + x5919 + x5938 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x476 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1323] =
    sc[16] * x6080 - 106000000.0 * sc[3] * x27 * x5590 -
    80000000.0 * sc[3] * x285 + 80000000.0 * sc[3] * x493 - sc[3] * x5751 +
    57000000.0 * sc[3] * x818 - 57000000.0 * sc[3] * x849 +
    30000000.0 * sc[3] * x928 - 30000000.0 * sc[3] * x932 + sc[9] * x5941 -
    33000000.0 * sc[9] * x818 + 33000000.0 * sc[9] * x849 - x257 * x5609 +
    x285 * x368 + x285 * x67 + x285 * x831 + x352 + x356 * x5609 - x368 * x493 -
    x493 * x67 - x493 * x831 + x5654 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x257 + x356) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (30000000.0 * sc[3] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1363] =
    106000000.0 * x27 * x5587 + x5939 - x6282 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1403] =
    -80000000.0 * sc[3] * x357 - 57000000.0 * sc[3] * x863 -
    30000000.0 * sc[3] * x933 + 33000000.0 * sc[9] * x863 + x357 * x368 +
    x357 * x67 + x357 * x831 + x367 * x5609 + x5919 + x5925 + x5929 + x5930 +
    x5933 + x5935 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x367 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1443] =
    -57000000.0 * sc[3] * x354 - 80000000.0 * sc[3] * x358 -
    30000000.0 * sc[3] * x934 + 33000000.0 * sc[9] * x354 + x358 * x368 +
    x358 * x67 + x358 * x831 + x402 * x5609 + x5919 + x5925 + x5929 + x5930 +
    x5933 + x5935 - x6293 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x402 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1483] =
    -57000000.0 * sc[3] * x363 - sc[3] * x5688 + sc[4] * x5794 +
    33000000.0 * sc[9] * x363 + x466 * x5609 + x5919 + x5938 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (x466 - x877) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1523] =
    -36000000.0 * sc[3] + x5939 +
    (57000000.0 * sc[3] * x234 - 33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (30000000.0 * sc[3] * x220 - 80000000.0 * sc[3] * x235 + x235 * x368 +
     x235 * x67 + x235 * x831) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[4] =
    -30000000.0 * sc[4] * x255 - 30000000.0 * sc[4] * x283 -
    20000000.0 * sc[4] * x338 + 30000000.0 * sc[4] * x344 +
    20000000.0 * sc[4] * x349 - 20000000.0 * sc[4] * x362 +
    30000000.0 * sc[4] * x371 + 50000000.0 * sc[4] * x607 -
    50000000.0 * sc[4] * x659 - 20000000.0 * sc[5] * x349 +
    20000000.0 * sc[5] * x362 + 28000000.0 * sc[9] * x283 -
    28000000.0 * sc[9] * x344 + x1034 * x255 - x1034 * x371 + x1039 * x349 -
    x1039 * x362 - 6599600.0 * x2134 + 6599600.0 * x2137 +
    16720000000.0 * x2300 - 16720000000.0 * x2304 - x349 * x681 + x362 * x681 -
    509.562162162162 * x6333 + 281400.0 * x6337 -
    x6350 * (0.196 * x6342 + 1.4 * x6343) - 281400.0 * x6353 +
    x6356 * (0.196 * x6342 + 1.4 * x6343) + 509.562162162162 * x6358 + x6400 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x607 + x659) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
    (20000000.0 * sc[4] * x74) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[44] =
    20000000.0 * sc[4] * x317 - 30000000.0 * sc[4] * x468 +
    30000000.0 * sc[4] * x606 + 30000000.0 * sc[4] * x627 -
    30000000.0 * sc[4] * x650 - 20000000.0 * sc[4] * x680 +
    50000000.0 * sc[4] * x687 - 50000000.0 * sc[4] * x709 -
    20000000.0 * sc[5] * x317 + 20000000.0 * sc[5] * x680 -
    28000000.0 * sc[9] * x627 + 28000000.0 * sc[9] * x650 + x1034 * x468 -
    x1034 * x606 + x1039 * x317 - x1039 * x680 - x1041 * x627 + x1041 * x650 -
    x1044 * x317 + x1044 * x680 + x2544 - x317 * x681 + x6399 + x6414 +
    x680 * x681 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x687 + x709) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
    (20000000.0 * sc[4] * x74) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[84] =
    30000000.0 * sc[12] * x547 + 30000000.0 * sc[13] * x414 +
    20000000.0 * sc[13] * x482 + 50000000.0 * sc[16] * x595 + sc[17] * x2711 +
    sc[17] * x2714 + sc[24] * x2799 + 20000000.0 * sc[24] * x389 +
    sc[33] * x2735 * x437 + sc[33] * x2741 + 96000000.0 * sc[38] +
    9428000.0 * sc[3] * x2597 * x361 - 28000000.0 * sc[4] * x435 * x437 +
    30000000.0 * sc[4] * x612 - 30000000.0 * sc[4] * x616 +
    30000000.0 * sc[4] * x666 - 30000000.0 * sc[4] * x671 -
    20000000.0 * sc[4] * x677 + 20000000.0 * sc[4] * x685 +
    50000000.0 * sc[4] * x723 - 50000000.0 * sc[4] * x730 -
    20000000.0 * sc[4] * x940 + 20000000.0 * sc[5] * x677 -
    20000000.0 * sc[5] * x685 +
    149700000.0 * sc[5] * exp(-148.44891641239201 * invT) + sc[7] * x2590 +
    sc[8] * x2675 - x1034 * x612 + x1034 * x616 - x1039 * x677 + x1039 * x685 +
    x2544 + x2570 + 95100.0 * x2638 + x2773 + x2875 + x6326 + x6399 + x6438 +
    x677 * x681 - x681 * x685 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x723 + x730) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (20000000.0 * sc[4] * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[124] =
    30000000.0 * sc[12] + sc[13] * x5733 + 10000000.0 * sc[14] +
    10000000.0 * sc[24] * x2786 + 9428000.0 * sc[2] * x2597 * x361 -
    20000000.0 * sc[4] * x166 - sc[4] * x2327 + 30000000.0 * sc[4] * x622 -
    30000000.0 * sc[4] * x630 + 30000000.0 * sc[4] * x679 -
    30000000.0 * sc[4] * x696 + 20000000.0 * sc[4] * x706 +
    50000000.0 * sc[4] * x739 - 50000000.0 * sc[4] * x743 +
    20000000.0 * sc[5] * x166 - 20000000.0 * sc[5] * x706 + 40000000.0 * sc[5] +
    sc[6] * x2999 + 0.07946 * sc[7] * x5768 + sc[8] * x5692 -
    28000000.0 * sc[9] * x679 + 28000000.0 * sc[9] * x696 - x1034 * x622 +
    x1034 * x630 - x1039 * x166 + x1039 * x706 + x166 * x681 + x2544 + x2894 +
    x5686 + x5713 + x5726 + x5756 + x5780 + x6399 + x6414 + x6452 -
    x681 * x706 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x739 + x743) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (20000000.0 * sc[4] * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[164] =
    -sc[13] * x437 * x6492 - sc[15] * x6487 - sc[17] * x6469 - sc[18] * x3095 -
    sc[19] * x5839 - sc[19] * x6535 * x6563 - 30110000.0 * sc[19] -
    sc[20] * x3017 - sc[20] * x6569 - sc[21] * x5800 - sc[23] * x5827 -
    sc[24] * x5796 - 7500000.0 * sc[24] * x6508 - 10000000.0 * sc[25] * x6508 -
    sc[26] * x6454 - sc[28] * x5809 - 6000000.0 * sc[28] - sc[29] * x6483 -
    24000000.0 * sc[30] - sc[32] * x3076 - sc[33] * x3021 - sc[34] * x6458 -
    sc[36] * x6462 - sc[37] * x5794 - 60000000.0 * sc[38] - sc[3] * x2327 +
    30000000.0 * sc[4] * x131 - 20000000.0 * sc[4] * x504 -
    804000.0 * sc[4] * x6315 * x6330 * x6352 - 30000000.0 * sc[4] * x633 +
    30000000.0 * sc[4] * x700 - 30000000.0 * sc[4] * x701 +
    20000000.0 * sc[4] * x721 - 20000000.0 * sc[4] * x728 +
    50000000.0 * sc[4] * x756 - 50000000.0 * sc[4] * x763 - sc[7] * x3025 -
    sc[8] * x6515 - sc[8] * x6518 - sc[9] * x5815 +
    20000000.0 * sc_qss[3] * x74 - x1034 * x131 + x1034 * x633 + x1039 * x721 -
    x1039 * x728 - 30000000.0 * x12 - 30000000.0 * x148 -
    9428000.0 * x2133 * x2597 -
    11.3 * x217 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) -
    20000000.0 * x217 - 1600000.0 * x232 * x6498 + x2544 - 50000000.0 * x258 -
    299400000.0 * x3028 - x3033 - x3075 + 20000000.0 * x392 / x72 -
    0.15892 * x5818 + x587 + x6326 + x6399 - x6474 - x6479 - x6512 + x6527 -
    x6530 - x6537 + x6557 + x6561 + x6585 + x6589 + x6598 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x756 + x763) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (20000000.0 * sc[4] * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[204] =
    13400000.0 * sc[10] + 10000000.0 * sc[19] + sc[20] * x6607 +
    149700000.0 * sc[2] * exp(-148.44891641239201 * invT) + 40000000.0 * sc[3] -
    30000000.0 * sc[4] * x176 + 30000000.0 * sc[4] * x180 -
    30000000.0 * sc[4] * x617 + 30000000.0 * sc[4] * x643 +
    20000000.0 * sc[4] * x736 - 20000000.0 * sc[4] * x737 +
    50000000.0 * sc[4] * x782 - 50000000.0 * sc[4] * x794 + sc[7] * x6614 +
    sc[7] * x6616 + 28000000.0 * sc[9] * x617 + x1034 * x176 - x1034 * x643 +
    x1039 * x736 - x1039 * x737 + x1041 * x617 - x1044 * x736 + x1044 * x737 +
    x3230 + x6414 + x6602 + x6605 + x6624 + x6630 + x6632 - x681 * x736 +
    x681 * x737 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x782 + x794) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[244] =
    30000000.0 * sc[4] * x207 - 30000000.0 * sc[4] * x653 +
    30000000.0 * sc[4] * x726 - 30000000.0 * sc[4] * x732 +
    20000000.0 * sc[4] * x741 - 20000000.0 * sc[4] * x748 -
    20000000.0 * sc[4] * x814 + 50000000.0 * sc[4] * x829 -
    50000000.0 * sc[4] * x843 - 20000000.0 * sc[5] * x741 +
    20000000.0 * sc[5] * x748 - x1034 * x207 + x1034 * x653 + x1039 * x741 -
    x1039 * x748 - 18856000.0 * x2134 + 18856000.0 * x2137 - x3260 + x3390 -
    1455.8918918918901 * x6333 + 804000.0 * x6337 -
    x6350 * (0.56 * x6342 + 4.0 * x6343) - 804000.0 * x6353 +
    x6356 * (0.56 * x6342 + 4.0 * x6343) + 1455.8918918918901 * x6358 + x6666 -
    x681 * x741 + x681 * x748 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x829 + x843) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (20000000.0 * sc[4] * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[284] =
    sc[10] * x6677 + sc[12] * x143 + sc[13] * x6679 + 6.3 * sc[14] * x6687 +
    sc[16] * x6716 + sc[18] * x6690 + sc[19] * x6692 + sc[21] * x6675 +
    sc[23] * x6685 + sc[24] * x6670 + sc[27] * x6681 + sc[28] * x6683 +
    sc[29] * x6673 + sc[2] * x2590 + sc[37] * x6667 + 0.07946 * sc[3] * x5768 +
    30000000.0 * sc[4] * x159 - sc[4] * x3025 - 30000000.0 * sc[4] * x370 +
    30000000.0 * sc[4] * x733 - 30000000.0 * sc[4] * x740 +
    20000000.0 * sc[4] * x751 - 20000000.0 * sc[4] * x760 -
    20000000.0 * sc[4] * x858 + 50000000.0 * sc[4] * x864 -
    50000000.0 * sc[4] * x871 + sc[5] * x6614 + sc[5] * x6616 -
    20000000.0 * sc[5] * x751 + 20000000.0 * sc[5] * x760 + sc[9] * x6704 +
    sc[9] * x6705 + sc[9] * x6707 + sc[9] * x6709 + sc[9] * x6711 +
    x1033 * x148 - x1034 * x159 + x1034 * x370 + x1039 * x751 - x1039 * x760 -
    113136000.0 * x2134 + 113136000.0 * x2137 + x3699 -
    4367.6756756756804 * x6333 + 2412000.0 * x6337 -
    x6350 * (1.68 * x6342 + 12.0 * x6343) - 2412000.0 * x6353 +
    x6356 * (1.68 * x6342 + 12.0 * x6343) + 4367.6756756756804 * x6358 + x6738 -
    x681 * x751 + x681 * x760 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x864 + x871) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (20000000.0 * sc[4] * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[324] =
    sc[2] * x2675 + sc[3] * x5692 - sc[4] * x6515 - sc[4] * x6518 +
    402000.0 * x6315 * x6330 * x6336 + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[364] =
    sc[10] * x6782 + sc[15] * x6762 + 1600000.0 * sc[23] * x6767 +
    18000.0 * sc[25] - 20000000.0 * sc[4] * x145 - sc[4] * x5815 +
    30000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x676 +
    30000000.0 * sc[4] * x745 - 30000000.0 * sc[4] * x747 +
    20000000.0 * sc[4] * x840 - 20000000.0 * sc[4] * x866 +
    50000000.0 * sc[4] * x898 - 50000000.0 * sc[4] * x903 +
    20000000.0 * sc[5] * x145 - 20000000.0 * sc[5] * x840 + sc[7] * x6704 +
    sc[7] * x6705 + sc[7] * x6707 + sc[7] * x6709 + sc[7] * x6711 -
    28000000.0 * sc[9] * x745 + 28000000.0 * sc[9] * x747 - x1034 * x674 +
    x1034 * x676 - x1039 * x145 + x1039 * x840 - x1041 * x745 + x1041 * x747 +
    x1044 * x145 - x1044 * x840 + 28000000.0 * x12 + x145 * x681 + x2544 +
    10600000.0 * x3806 + x3877 + x6326 + x6399 - x681 * x840 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x898 + x903) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (20000000.0 * sc[4] * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[404] =
    sc[16] * x6791 + 30000000.0 * sc[4] * x686 - 30000000.0 * sc[4] * x689 +
    30000000.0 * sc[4] * x759 - 30000000.0 * sc[4] * x767 -
    20000000.0 * sc[4] * x856 + 20000000.0 * sc[4] * x862 +
    50000000.0 * sc[4] * x912 - 50000000.0 * sc[4] * x918 +
    20000000.0 * sc[5] * x856 - 20000000.0 * sc[5] * x862 + 13400000.0 * sc[5] +
    sc[7] * x6677 + sc[9] * x6782 - 28000000.0 * sc[9] * x759 +
    28000000.0 * sc[9] * x767 - x1034 * x686 + x1034 * x689 - x1039 * x856 +
    x1039 * x862 + x2544 + x6399 + x6414 - x6795 + x681 * x856 - x681 * x862 +
    x6813 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x912 + x918) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (20000000.0 * sc[4] * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[444] =
    -30000000.0 * sc[4] * x292 + 30000000.0 * sc[4] * x693 +
    30000000.0 * sc[4] * x786 - 30000000.0 * sc[4] * x809 +
    20000000.0 * sc[4] * x861 - 20000000.0 * sc[4] * x875 +
    50000000.0 * sc[4] * x929 - 50000000.0 * sc[4] * x935 -
    20000000.0 * sc[4] * x944 - 20000000.0 * sc[5] * x861 +
    20000000.0 * sc[5] * x875 - 28000000.0 * sc[9] * x786 +
    28000000.0 * sc[9] * x809 + x1034 * x292 - x1034 * x693 + x1039 * x861 -
    x1039 * x875 + x2544 + x6326 - x681 * x861 + x681 * x875 - x6814 + x6829 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x929 + x935) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (20000000.0 * sc[4] * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[484] =
    30000000.0 * sc[2] * x547 + 30000000.0 * sc[3] - 30000000.0 * sc[4] * x330 -
    30000000.0 * sc[4] * x704 - 20000000.0 * sc[4] * x780 -
    50000000.0 * sc[4] * x945 - 20000000.0 * sc[4] * x946 +
    20000000.0 * sc[5] * x780 + sc[7] * x143 + 28000000.0 * sc[9] * x330 +
    x1034 * x704 - x1039 * x780 + x1041 * x330 + x1044 * x780 + x6747 + x6835 +
    x6842 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x945) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[524] =
    30000000.0 * sc[2] * x414 + 20000000.0 * sc[2] * x482 + sc[3] * x5733 +
    30000000.0 * sc[4] * x180 + 30000000.0 * sc[4] * x705 -
    30000000.0 * sc[4] * x708 - 30000000.0 * sc[4] * x851 +
    20000000.0 * sc[4] * x879 - 20000000.0 * sc[4] * x880 +
    50000000.0 * sc[4] * x953 - 50000000.0 * sc[4] * x958 + sc[7] * x6679 +
    28000000.0 * sc[9] * x851 - x1034 * x705 + x1034 * x708 + x1039 * x879 -
    x1039 * x880 + x1041 * x851 - x1044 * x879 + x1044 * x880 + x3230 + x6414 +
    x6632 - x681 * x879 + x681 * x880 - x6844 - x6853 + x6866 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x953 + x958) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[564] =
    32000000.0 * sc[2] + 10000000.0 * sc[3] - 30000000.0 * sc[4] * x710 -
    30000000.0 * sc[4] * x859 - 20000000.0 * sc[4] * x884 -
    50000000.0 * sc[4] * x962 + 20000000.0 * sc[5] * x884 +
    6.3 * sc[7] * x6687 + 28000000.0 * sc[9] * x859 + x1034 * x710 -
    x1039 * x884 + x1041 * x859 + x1044 * x884 + x6744 + x6747 + x6757 +
    x681 * x884 + x6873 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x962) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[604] =
    2.7e+26 * refC * x6370 * x88 - sc[4] * x6487 - 30000000.0 * sc[4] * x711 -
    30000000.0 * sc[4] * x867 - 20000000.0 * sc[4] * x886 -
    50000000.0 * sc[4] * x969 + 20000000.0 * sc[5] * x886 + sc[9] * x6762 +
    28000000.0 * sc[9] * x867 + x1034 * x711 - x1039 * x886 + x1041 * x867 +
    x1044 * x886 + x6074 + x6744 + x6747 + x6757 + x681 * x886 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x969) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[644] =
    sc[10] * x6791 + 50000000.0 * sc[2] * x595 + 30000000.0 * sc[4] * x341 -
    30000000.0 * sc[4] * x343 - 3200000.0 * sc[4] * x437 * x6498 -
    50000000.0 * sc[4] * x593 - sc[4] * x6492 * x6535 +
    30000000.0 * sc[4] * x713 - 30000000.0 * sc[4] * x719 +
    20000000.0 * sc[4] * x889 - 20000000.0 * sc[4] * x893 -
    20000000.0 * sc[4] * x947 + 50000000.0 * sc[4] * x993 -
    20000000.0 * sc[5] * x889 + 20000000.0 * sc[5] * x893 + sc[7] * x6716 -
    28000000.0 * sc[9] * x341 + 28000000.0 * sc[9] * x343 - x1034 * x713 +
    x1034 * x719 + x1039 * x889 - x1039 * x893 - 16499000.0 * x2134 +
    16499000.0 * x2137 + 77000000000.0 * x2300 - 77000000000.0 * x2304 + x4336 -
    1273.90540540541 * x6333 + 703500.0 * x6337 -
    x6350 * (0.49 * x6342 + 3.5 * x6343) - 703500.0 * x6353 +
    x6356 * (0.49 * x6342 + 3.5 * x6343) + 1273.90540540541 * x6358 -
    x681 * x889 + x681 * x893 + x6892 + x6909 + x6921 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x593 - x993) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (20000000.0 * sc[4] * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[684] =
    sc[2] * x2711 + sc[2] * x2714 - 30000000.0 * sc[4] * x1 +
    50000000.0 * sc[4] * x1014 - 30000000.0 * sc[4] * x155 - sc[4] * x6469 +
    30000000.0 * sc[4] * x722 - 20000000.0 * sc[4] * x813 -
    50000000.0 * sc[4] * x839 + 30000000.0 * sc[4] * x890 +
    20000000.0 * sc[4] * x894 - 20000000.0 * sc[4] * x897 -
    20000000.0 * sc[5] * x894 + 20000000.0 * sc[5] * x897 +
    28000000.0 * sc[9] * x1 - 28000000.0 * sc[9] * x890 + x1034 * x155 -
    x1034 * x722 + x1039 * x894 - x1039 * x897 - 33940800.0 * x2134 +
    33940800.0 * x2137 + 158400000000.0 * x2300 - 158400000000.0 * x2304 -
    2620.6054054054098 * x6333 + 1447200.0 * x6337 -
    x6350 * (1.008 * x6342 + 7.2 * x6343) - 1447200.0 * x6353 +
    x6356 * (1.008 * x6342 + 7.2 * x6343) + 2620.6054054054098 * x6358 + x6665 -
    x681 * x894 + x681 * x897 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x1014 + x839) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (20000000.0 * sc[4] * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[724] =
    50000000.0 * sc[4] * x1027 - 50000000.0 * sc[4] * x1036 - sc[4] * x3095 +
    30000000.0 * sc[4] * x731 - 30000000.0 * sc[4] * x738 -
    20000000.0 * sc[4] * x872 + 30000000.0 * sc[4] * x892 -
    30000000.0 * sc[4] * x900 + 20000000.0 * sc[4] * x902 -
    20000000.0 * sc[4] * x99 + 20000000.0 * sc[5] * x872 -
    20000000.0 * sc[5] * x902 + sc[7] * x6690 - 28000000.0 * sc[9] * x892 +
    28000000.0 * sc[9] * x900 - x1034 * x731 + x1034 * x738 - x1039 * x872 +
    x1039 * x902 - x1041 * x892 + x1041 * x900 + x1044 * x872 - x1044 * x902 +
    x2544 + x6326 + x6399 + x681 * x872 - x681 * x902 - x6948 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x1027 + x1036) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (20000000.0 * sc[4] * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[764] =
    -50000000.0 * sc[4] * x1042 - 20000000.0 * sc[4] * x214 - sc[4] * x5839 -
    sc[4] * x6535 * x6563 - 30000000.0 * sc[4] * x742 -
    30000000.0 * sc[4] * x905 - 20000000.0 * sc[4] * x952 - 30110000.0 * sc[4] +
    20000000.0 * sc[5] * x214 + 10000000.0 * sc[5] + sc[7] * x6692 +
    28000000.0 * sc[9] * x905 + x1034 * x742 - x1039 * x214 + x1041 * x905 +
    x1044 * x214 + x214 * x681 + x6744 + x6747 + x6835 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x1042 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[804] =
    50000000.0 * sc[4] * x1052 - 50000000.0 * sc[4] * x1057 - sc[4] * x3017 -
    20000000.0 * sc[4] * x35 - sc[4] * x6569 + 20000000.0 * sc[4] * x699 +
    30000000.0 * sc[4] * x744 - 30000000.0 * sc[4] * x752 -
    20000000.0 * sc[4] * x904 + 30000000.0 * sc[4] * x906 -
    30000000.0 * sc[4] * x915 + sc[5] * x6607 - 20000000.0 * sc[5] * x699 +
    20000000.0 * sc[5] * x904 - 28000000.0 * sc[9] * x906 +
    28000000.0 * sc[9] * x915 - x1034 * x744 + x1034 * x752 + x1039 * x699 -
    x1039 * x904 - x1041 * x906 + x1041 * x915 - x1044 * x699 + x1044 * x904 +
    x2544 + x6174 + x6326 + x6399 - x681 * x699 + x681 * x904 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x1052 + x1057) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (20000000.0 * sc[4] * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[844] =
    -50000000.0 * sc[4] * x1061 - 30000000.0 * sc[4] * x518 - sc[4] * x5800 -
    30000000.0 * sc[4] * x750 - 20000000.0 * sc[4] * x882 +
    20000000.0 * sc[5] * x882 + 24000000.0 * sc[5] + sc[7] * x6675 +
    28000000.0 * sc[9] * x518 + x1034 * x750 - x1039 * x882 + x1041 * x518 +
    x1044 * x882 - x6534 + x6744 + x6747 + x6757 + x681 * x882 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x1061 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[884] =
    -50000000.0 * sc[4] * x126 + 50000000.0 * sc[4] * x308 -
    20000000.0 * sc[4] * x51 + 30000000.0 * sc[4] * x776 -
    30000000.0 * sc[4] * x781 + 20000000.0 * sc[4] * x909 -
    20000000.0 * sc[4] * x910 + 30000000.0 * sc[4] * x919 -
    30000000.0 * sc[4] * x920 - 20000000.0 * sc[5] * x909 +
    20000000.0 * sc[5] * x910 - 28000000.0 * sc[9] * x919 +
    28000000.0 * sc[9] * x920 - x1034 * x776 + x1034 * x781 + x1039 * x909 -
    x1039 * x910 + x2544 + x6190 + x6326 - x681 * x909 + x681 * x910 - x6997 +
    x7018 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (x126 - x308) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (20000000.0 * sc[4] * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[924] =
    30000000.0 * sc[4] * x180 + 50000000.0 * sc[4] * x303 -
    50000000.0 * sc[4] * x310 - sc[4] * x5827 + 20000000.0 * sc[4] * x684 -
    20000000.0 * sc[4] * x768 + 30000000.0 * sc[4] * x785 -
    30000000.0 * sc[4] * x793 - 30000000.0 * sc[4] * x923 -
    20000000.0 * sc[5] * x684 + 20000000.0 * sc[5] * x768 + sc[7] * x6685 +
    1600000.0 * sc[9] * x6767 + 28000000.0 * sc[9] * x923 - x1034 * x785 +
    x1034 * x793 + x1039 * x684 - x1039 * x768 + x1041 * x923 - x1044 * x684 +
    x1044 * x768 + x3230 + x6414 + x6632 - x681 * x684 + x681 * x768 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x303 + x310) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[964] =
    sc[2] * x2799 + 20000000.0 * sc[2] * x389 + 10000000.0 * sc[3] * x2786 -
    50000000.0 * sc[4] * x325 - sc[4] * x5796 - 20000000.0 * sc[4] * x609 -
    7500000.0 * sc[4] * x6508 - 20000000.0 * sc[4] * x772 -
    30000000.0 * sc[4] * x801 - 30000000.0 * sc[4] * x925 +
    20000000.0 * sc[5] * x772 + sc[7] * x6670 + 28000000.0 * sc[9] * x925 +
    x1034 * x801 - x1039 * x772 + x1041 * x925 + x1044 * x772 + x6744 + x6747 +
    x681 * x772 + x6835 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x325 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1004] =
    20000000.0 * sc[3] * x2892 - 10000000.0 * sc[4] * x6508 + 18000.0 * sc[9] +
    x6761 - x7048 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1044] =
    -sc[4] * x6454 + 95100.0 * x5258 + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1084] =
    -50000000.0 * sc[4] * x326 - 30000000.0 * sc[4] * x803 + sc[7] * x6681 +
    x1034 * x803 + x6760 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x326 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1124] =
    -50000000.0 * sc[4] * x336 - sc[4] * x5809 - 30000000.0 * sc[4] * x826 -
    20000000.0 * sc[4] * x911 - 30000000.0 * sc[4] * x927 - 6000000.0 * sc[4] +
    20000000.0 * sc[5] * x911 + 6600000.0 * sc[5] + sc[7] * x6683 +
    28000000.0 * sc[9] * x927 + x1034 * x826 - x1039 * x911 + x1041 * x927 +
    x1044 * x911 + x6744 + x6747 + x6757 + x681 * x911 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x336 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1164] =
    -sc[4] * x6483 + sc[7] * x6673 + x6252 + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1204] =
    -24000000.0 * sc[4] + 24000000.0 * sc[5] + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1244] =
    x6761 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1284] =
    -sc[4] * x3076 - 50000000.0 * sc[4] * x476 - 30000000.0 * sc[4] * x816 +
    x1034 * x816 + x6760 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x476 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1324] =
    sc[2] * x2741 + 50000000.0 * sc[4] * x257 - 20000000.0 * sc[4] * x285 -
    sc[4] * x3021 - 50000000.0 * sc[4] * x356 + 20000000.0 * sc[4] * x493 +
    30000000.0 * sc[4] * x818 - 30000000.0 * sc[4] * x849 +
    30000000.0 * sc[4] * x928 - 30000000.0 * sc[4] * x932 +
    20000000.0 * sc[5] * x285 - 20000000.0 * sc[5] * x493 -
    28000000.0 * sc[9] * x928 + 28000000.0 * sc[9] * x932 - x1034 * x818 +
    x1034 * x849 - x1039 * x285 + x1039 * x493 - x1041 * x928 + x1041 * x932 +
    x1044 * x285 - x1044 * x493 + x2312 * x2735 + x2544 + x285 * x681 -
    x493 * x681 + x6399 + x6414 + x7073 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x257 + x356) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (20000000.0 * sc[4] * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1364] =
    -sc[4] * x6458 + x5458 + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1404] =
    30000000.0 * sc[4] * x180 - 20000000.0 * sc[4] * x357 -
    50000000.0 * sc[4] * x367 - 30000000.0 * sc[4] * x863 -
    30000000.0 * sc[4] * x933 + 20000000.0 * sc[5] * x357 +
    28000000.0 * sc[9] * x933 + x1034 * x863 - x1039 * x357 + x1041 * x933 +
    x1044 * x357 + x3230 + x357 * x681 + x6414 + x6744 + x6747 + x6752 + x6755 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x367 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1444] =
    -30000000.0 * sc[4] * x354 - 20000000.0 * sc[4] * x358 -
    50000000.0 * sc[4] * x402 - sc[4] * x6462 - 30000000.0 * sc[4] * x934 +
    20000000.0 * sc[5] * x358 + 28000000.0 * sc[9] * x934 + x1034 * x354 -
    x1039 * x358 + x1041 * x934 + x1044 * x358 + x358 * x681 + x6293 + x6744 +
    x6747 + x6757 + (30000000.0 * sc[4] * x234 - x1034 * x234) * (x402 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1484] =
    -30000000.0 * sc[4] * x363 - 50000000.0 * sc[4] * x466 - sc[4] * x5794 +
    sc[7] * x6667 + x1034 * x363 - x5556 + x6760 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (x466 - x877) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1524] =
    96000000.0 * sc[2] - 60000000.0 * sc[4] + x6761 +
    (30000000.0 * sc[4] * x234 - x1034 * x234) * (-x877 + x887) +
    (30000000.0 * sc[4] * x220 - 20000000.0 * sc[4] * x235 +
     20000000.0 * sc[5] * x235 - 28000000.0 * sc[9] * x220 - x1039 * x235 -
     x1041 * x220 + x1044 * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (30000000.0 * sc[4] * x117 - 28000000.0 * sc[9] * x117 - x1041 * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[5] =
    -25312000.0 * refC * sc[5] * x2087 * x2103 + 20000000.0 * sc[5] * x349 -
    20000000.0 * sc[5] * x362 + 313085097.732604 * x2086 * x2114 -
    313085097.732604 * x2086 * x2128 + 25312000.0 * x2100 * x2103 -
    x2107 * (0.8 * x2091 + 0.112 * x2093) +
    x2126 * (0.8 * x2091 + 0.112 * x2093) +
    (-20000000.0 * sc[5] * x235) * (x255 - x371 + (-x234) * (-x607 + x659));
  J[45] =
    20000000.0 * sc[5] * x317 - 20000000.0 * sc[5] * x680 + x2084 +
    (-20000000.0 * sc[5] * x235) * (x468 - x606 + (-x234) * (-x687 + x709));
  J[85] =
    -20000000.0 * sc[5] * x677 + 20000000.0 * sc[5] * x685 + sc[8] * x2672 +
    sc[9] * x2098 * x2105 + x2084 + x2705 +
    (-20000000.0 * sc[5] * x235) * (-x612 + x616 + (-x234) * (-x723 + x730));
  J[125] =
    -20000000.0 * sc[5] * x166 + 20000000.0 * sc[5] * x706 -
    40000000.0 * sc[5] + sc[7] * x469 + sc[8] * x5692 + x2084 +
    (-20000000.0 * sc[5] * x235) * (-x622 + x630 + (-x234) * (-x739 + x743));
  J[165] =
    24000000.0 * sc[13] * x2801 * x6577 + 20000000.0 * sc[13] * x496 +
    sc[14] * x6524 + sc[17] * x6469 + sc[19] * x6535 * x6563 + sc[26] * x6454 +
    sc[34] * x6458 + 20000000.0 * sc[5] * x721 - 20000000.0 * sc[5] * x728 +
    sc[8] * x6515 + sc[8] * x6518 + sc[9] * x5815 + x2084 +
    149700000.0 * x3028 + x6512 + x6537 + x6557 +
    (-20000000.0 * sc[5] * x235) * (-x131 + x633 + (-x234) * (-x756 + x763));
  J[205] =
    -refC * x2087 * x2105 - 14400000.0 * sc[10] - sc[11] * x7130 -
    sc[12] * x7143 - 1000000.0 * sc[13] * x2786 - sc[13] * x7172 -
    sc[16] * x2111 - sc[18] * x7134 - sc[19] * x7160 - 10000000.0 * sc[19] -
    sc[20] * x602 - sc[20] * x6607 - sc[20] * x7164 - 24600000.0 * sc[21] -
    sc[22] * x7126 - sc[24] * x7138 - sc[27] * x2096 - 9260000.0 * sc[28] -
    sc[29] * x7152 - 24000000.0 * sc[30] - 40000000.0 * sc[3] +
    20000000.0 * sc[5] * x736 - 20000000.0 * sc[5] * x737 -
    520000.0 * sc[5] * exp(820.24316526169298 * invT) -
    1463200000.0 * sc[5] * exp(-6038.59998965664 * invT) - sc[6] * x658 -
    sc[7] * x6614 - sc[7] * x6616 + x2084 - 20000000.0 * x217 + x3210 - x6602 -
    x6605 + x6630 - x7121 - x7156 +
    (-20000000.0 * sc[5] * x235) * (x176 - x643 + (-x234) * (-x782 + x794));
  J[245] =
    -sc[5] * x658 + 20000000.0 * sc[5] * x741 - 20000000.0 * sc[5] * x748 +
    x2084 + x3251 +
    (-20000000.0 * sc[5] * x235) * (-x207 + x653 + (-x234) * (-x829 + x843));
  J[285] =
    sc[3] * x469 - sc[5] * x6614 - sc[5] * x6616 + 20000000.0 * sc[5] * x751 -
    20000000.0 * sc[5] * x760 + 18000.0 * sc[9] * x6535 * x7180 +
    sc[9] * x6704 + sc[9] * x6705 + sc[9] * x6707 + sc[9] * x6709 +
    sc[9] * x6711 + 9306454530.10164 * x2086 * x2114 -
    9306454530.10164 * x2086 * x2128 - 752399200.0 * x2088 +
    752399200.0 * x2100 * x2103 - x2107 * (23.78 * x2091 + 3.3292 * x2093) +
    x2126 * (23.78 * x2091 + 3.3292 * x2093) +
    (-20000000.0 * sc[5] * x235) * (-x159 + x370 + (-x234) * (-x864 + x871));
  J[325] =
    sc[12] * x7191 + sc[20] * x7200 + sc[28] * x7189 + sc[2] * x2672 +
    sc[3] * x5692 + sc[4] * x6515 + sc[4] * x6518 +
    731600000.0 * sc[9] * x7194 + 260000.0 * sc[9] * x7198 + x7185 + x7187 +
    x7197 + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[365] =
    sc[11] * x7225 + sc[13] * x7217 + 20000.0 * sc[21] + sc[22] * x7215 +
    140000.0 * sc[25] + sc[29] * x7209 + sc[2] * x2098 * x2105 +
    90000.0 * sc[30] + sc[4] * x5815 - 20000000.0 * sc[5] * x145 +
    20000000.0 * sc[5] * x840 + 18000.0 * sc[7] * x6535 * x7180 +
    sc[7] * x6704 + sc[7] * x6705 + sc[7] * x6707 + sc[7] * x6709 +
    sc[7] * x6711 + 731600000.0 * sc[8] * x7194 + 260000.0 * sc[8] * x7198 +
    665305832.681783 * x2086 * x2114 - 665305832.681783 * x2086 * x2128 -
    53788000.0 * x2088 + 53788000.0 * x2100 * x2103 -
    x2107 * (1.7 * x2091 + 0.238 * x2093) +
    x2126 * (1.7 * x2091 + 0.238 * x2093) + x3798 + x7206 + x7212 + x7220 +
    x7222 + x7224 +
    (-20000000.0 * sc[5] * x235) * (-x674 + x676 + (-x234) * (-x898 + x903));
  J[405] =
    -20000000.0 * sc[5] * x856 + 20000000.0 * sc[5] * x862 -
    14400000.0 * sc[5] + x2084 + x6795 + x7228 +
    (-20000000.0 * sc[5] * x235) * (-x686 + x689 + (-x234) * (-x912 + x918));
  J[445] =
    -sc[5] * x7130 + 20000000.0 * sc[5] * x861 - 20000000.0 * sc[5] * x875 +
    sc[9] * x7225 + x2084 +
    (-20000000.0 * sc[5] * x235) * (x292 - x693 + (-x234) * (-x929 + x935));
  J[485] =
    -sc[5] * x7143 - 20000000.0 * sc[5] * x780 + sc[8] * x7191 + x7202 + x7236 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x704 + (-x234) * (-x877 + x945));
  J[525] =
    refCinv * sc[19] * sc[4] * x6563 + 20000000.0 * sc[4] * x496 -
    1000000.0 * sc[5] * x2786 - sc[5] * x7172 + 20000000.0 * sc[5] * x879 -
    20000000.0 * sc[5] * x880 + sc[9] * x7217 + x2084 + x6844 + x6853 + x7237 +
    (-20000000.0 * sc[5] * x235) * (-x705 + x708 + (-x234) * (-x953 + x958));
  J[565] =
    sc[4] * x6524 - 20000000.0 * sc[5] * x884 + x7202 + x7243 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x710 + (-x234) * (-x877 + x962));
  J[605] =
    -20000000.0 * sc[5] * x886 + x7202 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x711 + (-x234) * (-x877 + x969));
  J[645] =
    -68975200.0 * refC * sc[5] * x2087 * x2103 - sc[5] * x2111 +
    20000000.0 * sc[5] * x889 - 20000000.0 * sc[5] * x893 +
    853156891.321345 * x2086 * x2114 - 853156891.321345 * x2086 * x2128 +
    68975200.0 * x2100 * x2103 - x2107 * (2.18 * x2091 + 0.3052 * x2093) +
    x2126 * (2.18 * x2091 + 0.3052 * x2093) - x6892 +
    (-20000000.0 * sc[5] * x235) * (-x713 + x719 + (-x234) * (x593 - x993));
  J[685] =
    sc[4] * x6469 + 20000000.0 * sc[5] * x894 - 20000000.0 * sc[5] * x897 +
    1706313782.64269 * x2086 * x2114 - 1706313782.64269 * x2086 * x2128 -
    137950400.0 * x2088 + 137950400.0 * x2100 * x2103 -
    x2107 * (4.36 * x2091 + 0.6104 * x2093) +
    x2126 * (4.36 * x2091 + 0.6104 * x2093) +
    (-20000000.0 * sc[5] * x235) * (x155 - x722 + (-x234) * (-x1014 + x839));
  J[725] =
    -sc[5] * x7134 - 20000000.0 * sc[5] * x872 + 20000000.0 * sc[5] * x902 +
    x2084 +
    (-20000000.0 * sc[5] * x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036));
  J[765] =
    sc[4] * x6535 * x6563 - 20000000.0 * sc[5] * x214 - sc[5] * x7160 -
    10000000.0 * sc[5] + x7202 + x7248 + x7249 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x742 + (-x234) * (x1042 - x877));
  J[805] =
    -sc[5] * x602 - sc[5] * x6607 + 20000000.0 * sc[5] * x699 - sc[5] * x7164 -
    20000000.0 * sc[5] * x904 + sc[8] * x7200 + x2084 + x7252 +
    (-20000000.0 * sc[5] * x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057));
  J[845] =
    -20000000.0 * sc[5] * x882 - 24600000.0 * sc[5] + 20000.0 * sc[9] + x6534 +
    x7202 + x7258 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x750 + (-x234) * (x1061 - x877));
  J[885] =
    -sc[5] * x7126 + 20000000.0 * sc[5] * x909 - 20000000.0 * sc[5] * x910 +
    sc[9] * x7215 + x2084 +
    (-20000000.0 * sc[5] * x235) * (-x776 + x781 + (-x234) * (x126 - x308));
  J[925] =
    20000000.0 * sc[5] * x684 - 20000000.0 * sc[5] * x768 + x2084 +
    (-20000000.0 * sc[5] * x235) * (-x785 + x793 + (-x234) * (-x303 + x310));
  J[965] =
    -sc[5] * x7138 - 20000000.0 * sc[5] * x772 + x7202 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x801 + (-x234) * (x325 - x877));
  J[1005] =
    140000.0 * sc[9] + x7048 + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1045] =
    sc[4] * x6454 + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1085] =
    -sc[5] * x2096 + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x803 + (-x234) * (x326 - x877));
  J[1125] =
    -20000000.0 * sc[5] * x911 - 9260000.0 * sc[5] + sc[8] * x7189 + x7202 +
    x7268 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x826 + (-x234) * (x336 - x877));
  J[1165] =
    -sc[5] * x7152 + sc[9] * x7209 + x7203 - x7272 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1205] =
    -24000000.0 * sc[5] + 90000.0 * sc[9] + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1245] = x7203 + (-20000000.0 * sc[5] * x235) *
                      (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1285] = x7203 + (-20000000.0 * sc[5] * x235) *
                      (-x657 + x816 + (-x234) * (x476 - x877));
  J[1325] =
    -20000000.0 * sc[5] * x285 + 20000000.0 * sc[5] * x493 + x2084 - x7073 +
    (-20000000.0 * sc[5] * x235) * (-x818 + x849 + (-x234) * (-x257 + x356));
  J[1365] =
    sc[4] * x6458 + x7203 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[1405] =
    -20000000.0 * sc[5] * x357 + x7202 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x863 + (-x234) * (x367 - x877));
  J[1445] =
    -20000000.0 * sc[5] * x358 + x7202 +
    (-20000000.0 * sc[5] * x235) * (x354 - x657 + (-x234) * (x402 - x877));
  J[1485] = x7203 + (-20000000.0 * sc[5] * x235) *
                      (x363 - x657 + (-x234) * (x466 - x877));
  J[1525] =
    x7203 - x7278 +
    (-20000000.0 * sc[5] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887));
  J[6] =
    1121400.0 * ((sc[2]) * (sc[2])) * x361 + 110000000.0 * sc[2] * x255 +
    30000000.0 * sc[2] * x283 - 30000000.0 * sc[2] * x344 -
    110000000.0 * sc[2] * x371 - 70000000.0 * sc[6] * x283 +
    70000000.0 * sc[6] * x344 - 4.9e+44 * x1048 +
    x1050 * (1.4 * x240 * x7289 + 0.196 * x240 * x7290) -
    4.2875e+76 * x1051 * x32 - x1055 * x338 + x196 * x349 - x196 * x362 +
    x2028 - 30000000.0 * x255 * x623 - x255 * x690 + 4.2875e+76 * x31 * x32 -
    x338 * x990 - x349 * x992 + x362 * x992 + x369 * x607 - x369 * x659 +
    30000000.0 * x371 * x623 + x371 * x690 + 4.9e+44 * x7281 -
    x7302 * (1.4 * x240 * x7289 + 0.196 * x240 * x7290) + x7352 -
    1121400.0 * x959 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x607 + x659) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
    (x1055 * x74 + x74 * x990) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[46] =
    110000000.0 * sc[2] * x468 - 110000000.0 * sc[2] * x606 -
    30000000.0 * sc[2] * x627 + 30000000.0 * sc[2] * x650 +
    70000000.0 * sc[6] * x627 - 70000000.0 * sc[6] * x650 + x196 * x317 -
    x196 * x680 + x2429 - x317 * x992 + x369 * x687 - x369 * x709 -
    30000000.0 * x468 * x623 - x468 * x690 + 30000000.0 * x606 * x623 +
    x606 * x690 + x680 * x992 + x7370 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x687 + x709) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
    (x1055 * x74 + x74 * x990) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[86] =
    sc[10] * x110 + 70000000.0 * sc[10] * x454 + 120000000.0 * sc[12] +
    sc[13] * x2842 + 20000000.0 * sc[14] +
    1100000000.0 * sc[17] * sc[2] * x2302 + 150000000.0 * sc[19] +
    2000000.0 * sc[21] + 50000000.0 * sc[24] * x2786 + 18000000.0 * sc[28] +
    180000.0 * sc[2] * sc[6] * exp(-0.6 * tc[0]) +
    112480000.0 * sc[2] * sc[7] * exp(-1.25 * tc[0]) +
    3560000.0 * sc[2] * x2624 * x361 - 110000000.0 * sc[2] * x612 +
    110000000.0 * sc[2] * x616 - 30000000.0 * sc[2] * x666 +
    30000000.0 * sc[2] * x671 + 1800000.0 * sc[30] - 15000000.0 * sc[3] * x666 +
    15000000.0 * sc[3] * x671 + sc[4] * x2873 + sc[5] * x2700 +
    70000000.0 * sc[6] * x666 - 70000000.0 * sc[6] * x671 + sc[7] * x2590 +
    sc[8] * x2672 - x1055 * x940 + 30000000.0 * x12 + 110000000.0 * x148 -
    x196 * x677 + x196 * x685 + x217 * x991 + x2583 + x2587 + x2686 + x2719 +
    x2763 + x2854 + x2894 + x369 * x723 - x369 * x730 +
    30000000.0 * x612 * x623 + x612 * x690 - 30000000.0 * x616 * x623 -
    x616 * x690 + x677 * x992 - x685 * x992 + x7369 - x940 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x723 + x730) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (x1055 * x74 + x74 * x990) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[126] =
    -110000000.0 * sc[2] * x622 + 110000000.0 * sc[2] * x630 -
    30000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x696 - sc[6] * x2999 +
    70000000.0 * sc[6] * x679 - 70000000.0 * sc[6] * x696 - x166 * x196 +
    x166 * x992 + x196 * x706 + x2328 + x369 * x739 - x369 * x743 +
    30000000.0 * x622 * x623 + x622 * x690 - 30000000.0 * x623 * x630 -
    x630 * x690 - x706 * x992 + x7370 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x739 + x743) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (x1055 * x74 + x74 * x990) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[166] =
    -110000000.0 * sc[2] * x131 + sc[2] * x2873 + 110000000.0 * sc[2] * x633 -
    30000000.0 * sc[2] * x700 + 30000000.0 * sc[2] * x701 +
    70000000.0 * sc[6] * x700 - 70000000.0 * sc[6] * x701 - x1055 * x504 +
    30000000.0 * x131 * x623 + x131 * x690 + x196 * x721 - x196 * x728 - x3033 +
    x3102 + x369 * x756 - x369 * x763 - x504 * x990 - 30000000.0 * x623 * x633 -
    x633 * x690 - x721 * x992 + x728 * x992 + x7369 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x756 + x763) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (x1055 * x74 + x74 * x990) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[206] =
    110000000.0 * sc[2] * x176 + sc[2] * x2700 + 30000000.0 * sc[2] * x617 -
    110000000.0 * sc[2] * x643 - 70000000.0 * sc[6] * x617 - sc[6] * x658 -
    30000000.0 * x176 * x623 - x176 * x690 + x196 * x736 - x196 * x737 + x3229 +
    x369 * x782 - x369 * x794 + 30000000.0 * x623 * x643 + x643 * x690 -
    x736 * x992 + x737 * x992 + x7376 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x782 + x794) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[246] =
    -550000000.0 * refC * sc[17] * exp(-2.0 * tc[0] + x578) -
    180000.0 * refC * sc[6] * exp(-0.6 * tc[0] + x578) -
    56240000.0 * refC * sc[7] * exp(-1.25 * tc[0] + x578) -
    1780000.0 * refC * x2624 * exp(-tc[0] + x578) -
    7.0e+44 * refCinv * x27 * x3360 * x408 - sc[10] * x3308 - sc[12] * x3374 -
    sc[13] * x3314 - sc[14] * x3256 - sc[18] * x3362 -
    32000000.0 * sc[18] * x489 - sc[19] * x3383 - sc[20] * x3258 -
    sc[21] * x3252 - 50000000.0 * sc[23] * x3339 - sc[24] * x3248 -
    sc[27] * x3320 - sc[28] * x3254 - sc[29] * x3244 +
    90000.0 * ((sc[2]) * (sc[2])) * exp(-0.6 * tc[0]) -
    110000000.0 * sc[2] * x207 + 110000000.0 * sc[2] * x653 -
    30000000.0 * sc[2] * x726 + 30000000.0 * sc[2] * x732 - sc[37] * x3302 -
    sc[3] * x2999 - 15000000.0 * sc[3] * x726 + 15000000.0 * sc[3] * x732 -
    sc[5] * x658 + 70000000.0 * sc[6] * x726 - 70000000.0 * sc[6] * x732 -
    x1055 * x814 - 70000000.0 * x12 - 30000000.0 * x139 * x148 - x148 * x45 -
    60000000.0 * x18 * x3360 + x196 * x741 - x196 * x748 +
    30000000.0 * x207 * x623 + x207 * x690 -
    0.5 * x217 * exp(-3638.25649376812 * invT + 2.0 * tc[0]) -
    110000000.0 * x229 * x258 - x3251 - x3260 + x369 * x829 - x369 * x843 -
    30000000.0 * x623 * x653 - x653 * x690 - x741 * x992 + x7416 + x7419 +
    x748 * x992 - x814 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x829 + x843) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (x1055 * x74 + x74 * x990) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[286] =
    -56240000.0 * refC * sc[6] * exp(-1.25 * tc[0] + x578) +
    56240000.0 * ((sc[2]) * (sc[2])) * exp(-1.25 * tc[0]) -
    110000000.0 * sc[2] * x159 + sc[2] * x2590 + 110000000.0 * sc[2] * x370 -
    30000000.0 * sc[2] * x733 + 30000000.0 * sc[2] * x740 +
    70000000.0 * sc[6] * x733 - 70000000.0 * sc[6] * x740 - 4.2e+45 * x1048 +
    x1050 * (12.0 * x240 * x7289 + 1.68 * x240 * x7290) -
    3.675e+77 * x1051 * x32 - x1055 * x858 + 30000000.0 * x159 * x623 +
    x159 * x690 + x196 * x751 - x196 * x760 + 3.675e+77 * x31 * x32 + x3622 +
    x369 * x864 - x369 * x871 - 30000000.0 * x370 * x623 - x370 * x690 +
    4.2e+45 * x7281 - x7302 * (12.0 * x240 * x7289 + 1.68 * x240 * x7290) +
    x7438 - x751 * x992 + x760 * x992 - x858 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x864 + x871) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (x1055 * x74 + x74 * x990) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[326] =
    sc[2] * x2672 + x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[366] =
    -110000000.0 * sc[2] * x674 + 110000000.0 * sc[2] * x676 -
    30000000.0 * sc[2] * x745 + 30000000.0 * sc[2] * x747 +
    70000000.0 * sc[6] * x745 - 70000000.0 * sc[6] * x747 - x1055 * x866 -
    x145 * x196 + x145 * x992 + x196 * x840 + x369 * x898 - x369 * x903 -
    x3798 + x3847 + 30000000.0 * x623 * x674 - 30000000.0 * x623 * x676 +
    x674 * x690 - x676 * x690 + x7369 - x840 * x992 - x866 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x898 + x903) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (x1055 * x74 + x74 * x990) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[406] =
    sc[2] * x110 + 70000000.0 * sc[2] * x454 - 110000000.0 * sc[2] * x686 +
    110000000.0 * sc[2] * x689 - 30000000.0 * sc[2] * x759 +
    30000000.0 * sc[2] * x767 - sc[6] * x3308 + 70000000.0 * sc[6] * x759 -
    70000000.0 * sc[6] * x767 - x196 * x856 + x196 * x862 + x369 * x912 -
    x369 * x918 + x3960 + 30000000.0 * x623 * x686 - 30000000.0 * x623 * x689 +
    x686 * x690 - x689 * x690 + x7370 + x856 * x992 - x862 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x912 + x918) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (x1055 * x74 + x74 * x990) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[446] =
    110000000.0 * sc[2] * x292 - 110000000.0 * sc[2] * x693 -
    30000000.0 * sc[2] * x786 + 30000000.0 * sc[2] * x809 +
    70000000.0 * sc[6] * x786 - 70000000.0 * sc[6] * x809 - x1055 * x944 +
    x196 * x861 - x196 * x875 - 30000000.0 * x292 * x623 - x292 * x690 +
    x369 * x929 - x369 * x935 + x4003 + x4051 + 30000000.0 * x623 * x693 +
    x690 * x693 + x7360 + x7416 - x861 * x992 + x875 * x992 - x944 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x929 + x935) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (x1055 * x74 + x74 * x990) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[486] =
    30000000.0 * sc[2] * x330 + 110000000.0 * sc[2] * x704 +
    120000000.0 * sc[2] + 15000000.0 * sc[3] * x330 -
    70000000.0 * sc[6] * x330 - sc[6] * x3374 - x1055 * x946 - x196 * x780 +
    x3228 - x369 * x945 - 30000000.0 * x623 * x704 - x690 * x704 + x7447 +
    x780 * x992 - x946 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x945) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[526] =
    sc[2] * x2842 - 110000000.0 * sc[2] * x705 + 110000000.0 * sc[2] * x708 +
    30000000.0 * sc[2] * x851 + 15000000.0 * sc[3] * x851 - sc[6] * x3314 -
    70000000.0 * sc[6] * x851 + x196 * x879 - x196 * x880 + x3228 +
    x369 * x953 - x369 * x958 + 30000000.0 * x623 * x705 -
    30000000.0 * x623 * x708 + x690 * x705 - x690 * x708 + x7330 + x7376 -
    x879 * x992 + x880 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x953 + x958) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[566] =
    110000000.0 * sc[2] * x710 + 30000000.0 * sc[2] * x859 +
    20000000.0 * sc[2] + 15000000.0 * sc[3] * x859 - sc[6] * x3256 -
    70000000.0 * sc[6] * x859 - x196 * x884 + x3228 - x369 * x962 -
    30000000.0 * x623 * x710 - x690 * x710 + x7376 + x7439 + x884 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x962) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[606] =
    110000000.0 * sc[2] * x711 + 30000000.0 * sc[2] * x867 +
    15000000.0 * sc[3] * x867 - 70000000.0 * sc[6] * x867 - x196 * x886 +
    x3228 - x369 * x969 + x4292 - 30000000.0 * x623 * x711 - x690 * x711 +
    x7376 + x7439 + x886 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x969) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[646] =
    -1.05e+45 * refCinv * sc[6] * x3360 * x408 + 1.05e+45 * sc[20] * x7280 -
    30000000.0 * sc[2] * x341 + 30000000.0 * sc[2] * x343 -
    110000000.0 * sc[2] * x713 + 110000000.0 * sc[2] * x719 -
    15000000.0 * sc[3] * x341 + 15000000.0 * sc[3] * x343 +
    70000000.0 * sc[6] * x341 - 70000000.0 * sc[6] * x343 +
    x1050 * (3.0 * x240 * x7289 + 0.42 * x240 * x7290) -
    9.1875e+76 * x1051 * x32 - x1055 * x947 + x196 * x889 - x196 * x893 +
    9.1875e+76 * x31 * x32 + x3344 - x369 * x593 + x369 * x993 +
    30000000.0 * x623 * x713 - 30000000.0 * x623 * x719 + x690 * x713 -
    x690 * x719 - x7302 * (3.0 * x240 * x7289 + 0.42 * x240 * x7290) + x7360 -
    x889 * x992 + x893 * x992 - x947 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x593 - x993) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (x1055 * x74 + x74 * x990) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[686] =
    -550000000.0 * refC * sc[6] * exp(-2.0 * tc[0] + x578) +
    550000000.0 * ((sc[2]) * (sc[2])) * x2302 + 30000000.0 * sc[2] * x1 +
    110000000.0 * sc[2] * x155 - 110000000.0 * sc[2] * x722 -
    30000000.0 * sc[2] * x890 + 15000000.0 * sc[3] * x1 -
    15000000.0 * sc[3] * x890 - 70000000.0 * sc[6] * x1 +
    70000000.0 * sc[6] * x890 + x1014 * x369 - x1055 * x813 -
    30000000.0 * x155 * x623 - x155 * x690 + x196 * x894 - x196 * x897 -
    x369 * x839 + 30000000.0 * x623 * x722 + x690 * x722 + x7416 - x813 * x990 -
    x894 * x992 + x897 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x1014 + x839) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (x1055 * x74 + x74 * x990) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[726] =
    -110000000.0 * sc[2] * x731 + 110000000.0 * sc[2] * x738 -
    30000000.0 * sc[2] * x892 + 30000000.0 * sc[2] * x900 - sc[6] * x3362 -
    32000000.0 * sc[6] * x489 + 70000000.0 * sc[6] * x892 -
    70000000.0 * sc[6] * x900 + x1027 * x369 - x1036 * x369 - x1055 * x99 -
    x196 * x872 + x196 * x902 + x4695 + 30000000.0 * x623 * x731 -
    30000000.0 * x623 * x738 + x690 * x731 - x690 * x738 + x7369 + x872 * x992 -
    x902 * x992 - x99 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x1027 + x1036) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (x1055 * x74 + x74 * x990) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[766] =
    110000000.0 * sc[2] * x742 + 30000000.0 * sc[2] * x905 +
    150000000.0 * sc[2] + 15000000.0 * sc[3] * x905 - sc[6] * x3383 -
    70000000.0 * sc[6] * x905 - x1042 * x369 - x1055 * x952 - x196 * x214 +
    x214 * x992 + x3228 - 30000000.0 * x623 * x742 - x690 * x742 + x7447 -
    x952 * x990 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x1042 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[806] =
    -110000000.0 * sc[2] * x744 + 110000000.0 * sc[2] * x752 -
    30000000.0 * sc[2] * x906 + 30000000.0 * sc[2] * x915 - sc[6] * x3258 +
    70000000.0 * sc[6] * x906 - 70000000.0 * sc[6] * x915 + x1052 * x369 -
    x1055 * x35 - x1057 * x369 + x196 * x699 - x196 * x904 +
    7.0e+44 * x27 * x7280 - x35 * x990 + x4874 + x4899 +
    30000000.0 * x623 * x744 - 30000000.0 * x623 * x752 + x690 * x744 -
    x690 * x752 - x699 * x992 + x7369 + x904 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x1052 + x1057) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (x1055 * x74 + x74 * x990) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[846] =
    30000000.0 * sc[2] * x518 + 110000000.0 * sc[2] * x750 + 2000000.0 * sc[2] +
    15000000.0 * sc[3] * x518 - sc[6] * x3252 - 70000000.0 * sc[6] * x518 -
    x1061 * x369 - x196 * x882 + x3228 - 30000000.0 * x623 * x750 -
    x690 * x750 + x7376 + x7439 + x882 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x1061 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[886] =
    -110000000.0 * sc[2] * x776 + 110000000.0 * sc[2] * x781 -
    30000000.0 * sc[2] * x919 + 30000000.0 * sc[2] * x920 +
    70000000.0 * sc[6] * x919 - 70000000.0 * sc[6] * x920 - 2.1e+45 * x1048 +
    x1050 * (6.0 * x240 * x7289 + 0.84 * x240 * x7290) -
    1.8375e+77 * x1051 * x32 - x1055 * x51 - x126 * x369 + x196 * x909 -
    x196 * x910 + x308 * x369 + 1.8375e+77 * x31 * x32 + x4967 + x5046 -
    x51 * x990 + 30000000.0 * x623 * x776 - 30000000.0 * x623 * x781 +
    x690 * x776 - x690 * x781 + 2.1e+45 * x7281 -
    x7302 * (6.0 * x240 * x7289 + 0.84 * x240 * x7290) + x7318 + x7360 -
    x909 * x992 + x910 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x126 - x308) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (x1055 * x74 + x74 * x990) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[926] =
    -110000000.0 * sc[2] * x785 + 110000000.0 * sc[2] * x793 +
    30000000.0 * sc[2] * x923 + 15000000.0 * sc[3] * x923 -
    50000000.0 * sc[6] * x3339 - 70000000.0 * sc[6] * x923 + x196 * x684 -
    x196 * x768 + x303 * x369 - x310 * x369 + x3228 + 30000000.0 * x623 * x785 -
    30000000.0 * x623 * x793 - x684 * x992 + x690 * x785 - x690 * x793 + x7376 +
    x768 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x303 + x310) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[966] =
    50000000.0 * sc[2] * x2786 + 110000000.0 * sc[2] * x801 +
    30000000.0 * sc[2] * x925 + 15000000.0 * sc[3] * x925 - sc[6] * x3248 -
    70000000.0 * sc[6] * x925 - x1055 * x609 - x196 * x772 + x3228 -
    x325 * x369 - x609 * x990 - 30000000.0 * x623 * x801 - x690 * x801 + x7447 +
    x772 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x325 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1006] =
    20000000.0 * sc[2] * x2892 + x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1046] =
    x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1086] =
    110000000.0 * sc[2] * x803 - sc[6] * x3320 - x326 * x369 -
    30000000.0 * x623 * x803 - x690 * x803 + x7440 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x326 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1126] =
    110000000.0 * sc[2] * x826 + 30000000.0 * sc[2] * x927 +
    18000000.0 * sc[2] + 15000000.0 * sc[3] * x927 - sc[6] * x3254 -
    70000000.0 * sc[6] * x927 - x196 * x911 + x3228 - x336 * x369 -
    30000000.0 * x623 * x826 - x690 * x826 + x7376 + x7439 + x911 * x992 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x336 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1166] =
    -sc[6] * x3244 + x5341 + x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1206] =
    1800000.0 * sc[2] + x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1246] =
    x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1286] =
    110000000.0 * sc[2] * x816 - x369 * x476 - 30000000.0 * x623 * x816 -
    x690 * x816 + x7440 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x476 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1326] =
    -110000000.0 * sc[2] * x818 + 110000000.0 * sc[2] * x849 -
    30000000.0 * sc[2] * x928 + 30000000.0 * sc[2] * x932 +
    70000000.0 * sc[6] * x928 - 70000000.0 * sc[6] * x932 - x196 * x285 +
    x196 * x493 + x257 * x369 + x285 * x992 - x356 * x369 - x493 * x992 +
    x5420 + 30000000.0 * x623 * x818 - 30000000.0 * x623 * x849 + x690 * x818 -
    x690 * x849 + x7370 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x257 + x356) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (x1055 * x74 + x74 * x990) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1366] =
    x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1406] =
    110000000.0 * sc[2] * x863 + 30000000.0 * sc[2] * x933 +
    15000000.0 * sc[3] * x933 - 70000000.0 * sc[6] * x933 - x196 * x357 +
    x3228 + x357 * x992 - x367 * x369 - 30000000.0 * x623 * x863 - x690 * x863 +
    x7376 + x7439 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x367 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1446] =
    110000000.0 * sc[2] * x354 + 30000000.0 * sc[2] * x934 +
    15000000.0 * sc[3] * x934 - 70000000.0 * sc[6] * x934 - x196 * x358 +
    x3228 - 30000000.0 * x354 * x623 - x354 * x690 + x358 * x992 - x369 * x402 +
    x5528 + x7376 + x7439 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x402 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1486] =
    110000000.0 * sc[2] * x363 - sc[6] * x3302 - 30000000.0 * x363 * x623 -
    x363 * x690 - x369 * x466 + x7440 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (x466 - x877) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1526] =
    x7441 +
    (-110000000.0 * sc[2] * x234 + 30000000.0 * x234 * x623 + x234 * x690) *
      (-x877 + x887) +
    (-30000000.0 * sc[2] * x220 - 15000000.0 * sc[3] * x220 +
     70000000.0 * sc[6] * x220 - x196 * x235 + x235 * x992) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-30000000.0 * sc[2] * x117 - 15000000.0 * sc[3] * x117 +
     70000000.0 * sc[6] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x1055 * x74 + x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[7] =
    12000000.0 * sc[9] * x283 - 12000000.0 * sc[9] * x344 - x1034 * x255 +
    x1034 * x371 - x1039 * x349 + x1039 * x362 - x1041 * x283 + x1041 * x344 +
    x1044 * x349 - x1044 * x362 - 16720000000.0 * x2300 +
    16720000000.0 * x2304 - x249 * x283 + x249 * x344 - x255 * x691 -
    x283 * x999 + x344 * x999 + x371 * x691 + x7528 +
    (x1034 * x234 + x234 * x691) * (-x607 + x659) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[47] =
    -12000000.0 * sc[9] * x627 + 12000000.0 * sc[9] * x650 - x1034 * x468 +
    x1034 * x606 - x1039 * x317 + x1039 * x680 + x1041 * x627 - x1041 * x650 +
    x1044 * x317 - x1044 * x680 + x249 * x627 - x249 * x650 - x468 * x691 +
    x606 * x691 + x627 * x999 - x650 * x999 + x7532 +
    (x1034 * x234 + x234 * x691) * (-x687 + x709) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[87] =
    sc[13] * x2834 + 16000000.0 * sc[14] + sc[4] * x2302 * x2870 +
    sc[5] * x2697 - sc[7] * x2590 + sc[8] * x2675 - 12000000.0 * sc[9] * x666 +
    12000000.0 * sc[9] * x671 + x1034 * x612 - x1034 * x616 + x1039 * x677 -
    x1039 * x685 + x1041 * x666 - x1041 * x671 - x1044 * x677 + x1044 * x685 +
    x249 * x666 - x249 * x671 + 5000.0 * x2638 + x612 * x691 - x616 * x691 +
    x666 * x999 - x671 * x999 + x7532 +
    (x1034 * x234 + x234 * x691) * (-x723 + x730) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[127] =
    -sc[7] * x469 - 0.03973 * sc[7] * x5768 - 12000000.0 * sc[9] * x679 +
    12000000.0 * sc[9] * x696 + x1034 * x622 - x1034 * x630 + x1039 * x166 -
    x1039 * x706 + x1041 * x679 - x1041 * x696 - x1044 * x166 + x1044 * x706 +
    x249 * x679 - x249 * x696 + x622 * x691 - x630 * x691 + x679 * x999 -
    x696 * x999 + x7532 + (x1034 * x234 + x234 * x691) * (-x739 + x743) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[167] =
    sc[10] * x6593 + 25010000.0 * sc[10] + 30200000.0 * sc[12] +
    5000000.0 * sc[14] + sc[15] * x6487 + 30110000.0 * sc[19] + sc[20] * x6569 +
    7500000.0 * sc[24] * x6508 + 10000000.0 * sc[25] * x6508 +
    6000000.0 * sc[28] + sc[29] * x6483 + sc[2] * x2302 * x2870 +
    24000000.0 * sc[30] + sc[36] * x6462 + sc[5] * x6543 + sc[5] * x6546 +
    sc[5] * x6549 + sc[5] * x6552 + sc[5] * x6555 - sc[7] * x3025 +
    sc[8] * x6515 + sc[8] * x6518 - 12000000.0 * sc[9] * x700 +
    12000000.0 * sc[9] * x701 + x1034 * x131 - x1034 * x633 - x1039 * x721 +
    x1039 * x728 + x1041 * x700 - x1041 * x701 + x1044 * x721 - x1044 * x728 +
    x131 * x691 + 11.3 * x217 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) +
    x249 * x700 - x249 * x701 + x3033 + 0.07946 * x5818 - x633 * x691 + x6474 +
    x6479 + x6584 + x700 * x999 - x701 * x999 + x7532 +
    (x1034 * x234 + x234 * x691) * (-x756 + x763) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[207] =
    sc[2] * x2697 - sc[7] * x6614 - sc[7] * x6616 - x1034 * x176 +
    x1034 * x643 - x1039 * x736 + x1039 * x737 + x1044 * x736 - x1044 * x737 -
    x176 * x691 + x643 * x691 + x7542 + x7544 + x7545 +
    (x1034 * x234 + x234 * x691) * (-x782 + x794) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[247] =
    -12000000.0 * sc[9] * x726 + 12000000.0 * sc[9] * x732 + x1034 * x207 -
    x1034 * x653 - x1039 * x741 + x1039 * x748 + x1041 * x726 - x1041 * x732 +
    x1044 * x741 - x1044 * x748 + x207 * x691 - 88000000000.0 * x2300 +
    88000000000.0 * x2304 + x249 * x726 - x249 * x732 + x3260 + x461 -
    x653 * x691 + x726 * x999 - x732 * x999 +
    (x1034 * x234 + x234 * x691) * (-x829 + x843) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[287] =
    -sc[10] * x6677 - sc[12] * x143 - sc[13] * x6679 - 6.3 * sc[14] * x6687 -
    12000000.0 * sc[16] * x411 - sc[16] * x6716 - sc[18] * x6690 -
    sc[19] * x3536 - sc[19] * x6692 - sc[21] * x6675 - sc[23] * x6685 -
    sc[24] * x6670 - sc[27] * x6681 - sc[28] * x6683 - sc[29] * x6673 -
    sc[2] * x2590 - sc[37] * x6667 - sc[3] * x469 - 0.03973 * sc[3] * x5768 -
    sc[4] * x3025 - sc[5] * x6614 - sc[5] * x6616 -
    1.62e+27 * sc[7] * x12 * x247 * x90 - 12000000.0 * sc[9] * x733 +
    12000000.0 * sc[9] * x740 - x1033 * x148 + x1034 * x159 - x1034 * x370 -
    x1039 * x751 + x1039 * x760 + x1041 * x733 - x1041 * x740 - x1043 * x217 +
    x1044 * x751 - x1044 * x760 - x12 * x247 * x92 +
    2.187e+46 * x12 * x279 * x7506 - 16000000.0 * x12 * x78 -
    25010000.0 * x12 * x86 - 5710000.0 * x148 * exp(379.92858268256299 * invT) +
    x159 * x691 - x2299 * x2870 - 277200000000.0 * x2300 +
    277200000000.0 * x2304 + 1.62e+27 * x247 * x429 + x249 * x733 -
    x249 * x740 - x370 * x691 - 2.187e+46 * x615 * x7506 + x733 * x999 -
    x740 * x999 - x7520 * (12.0 * x7514 + 1.68 * x7551) +
    x7526 * (12.0 * x7514 + 1.68 * x7551) + x7582 +
    (x1034 * x234 + x234 * x691) * (-x864 + x871) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[327] =
    sc[2] * x2675 + sc[4] * x6515 + sc[4] * x6518 + x7589 +
    (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[367] =
    -12000000.0 * sc[9] * x745 + 12000000.0 * sc[9] * x747 + x1034 * x674 -
    x1034 * x676 + x1039 * x145 - x1039 * x840 + x1041 * x745 - x1041 * x747 -
    x1044 * x145 + x1044 * x840 + 12000000.0 * x12 + x249 * x745 - x249 * x747 +
    x674 * x691 - x676 * x691 + x745 * x999 - x747 * x999 + x7532 + x7593 +
    (x1034 * x234 + x234 * x691) * (-x898 + x903) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[407] =
    sc[4] * x6593 + 25010000.0 * sc[4] - sc[7] * x6677 -
    12000000.0 * sc[9] * x759 + 12000000.0 * sc[9] * x767 + x1034 * x686 -
    x1034 * x689 + x1039 * x856 - x1039 * x862 + x1041 * x759 - x1041 * x767 -
    x1044 * x856 + x1044 * x862 + x249 * x759 - x249 * x767 + x686 * x691 -
    x689 * x691 + x7532 + x759 * x999 - x767 * x999 +
    (x1034 * x234 + x234 * x691) * (-x912 + x918) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[447] =
    -12000000.0 * sc[9] * x786 + 12000000.0 * sc[9] * x809 - x1034 * x292 +
    x1034 * x693 - x1039 * x861 + x1039 * x875 + x1041 * x786 - x1041 * x809 +
    x1044 * x861 - x1044 * x875 - 44000000000.0 * x2300 +
    44000000000.0 * x2304 + x249 * x786 - x249 * x809 - x292 * x691 + x461 +
    x6814 + x691 * x693 + x786 * x999 - x809 * x999 +
    (x1034 * x234 + x234 * x691) * (-x929 + x935) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[487] =
    30200000.0 * sc[4] - sc[7] * x143 + 12000000.0 * sc[9] * x330 -
    x1034 * x704 + x1039 * x780 - x1041 * x330 - x1044 * x780 - x249 * x330 -
    x330 * x999 - x691 * x704 + x7587 +
    (x1034 * x234 + x234 * x691) * (-x877 + x945) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[527] =
    sc[2] * x2834 - sc[7] * x6679 + 12000000.0 * sc[9] * x851 + x1034 * x705 -
    x1034 * x708 - x1039 * x879 + x1039 * x880 - x1041 * x851 + x1044 * x879 -
    x1044 * x880 - x249 * x851 + x6863 + x691 * x705 - x691 * x708 - x7237 +
    x7542 - x851 * x999 + (x1034 * x234 + x234 * x691) * (-x953 + x958) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[567] =
    16000000.0 * sc[2] + 5000000.0 * sc[4] - 6.3 * sc[7] * x6687 +
    12000000.0 * sc[9] * x859 - x1034 * x710 + x1039 * x884 - x1041 * x859 -
    x1044 * x884 - x249 * x859 - x691 * x710 + x7587 - x859 * x999 +
    (x1034 * x234 + x234 * x691) * (-x877 + x962) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[607] =
    sc[4] * x6487 + 12000000.0 * sc[9] * x867 - x1034 * x711 + x1039 * x886 -
    x1041 * x867 - x1044 * x886 + x247 * x965 - x249 * x867 - x691 * x711 +
    x7587 - x867 * x999 + (x1034 * x234 + x234 * x691) * (-x877 + x969) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[647] =
    -12000000.0 * sc[7] * x411 - sc[7] * x6716 - 12000000.0 * sc[9] * x341 +
    12000000.0 * sc[9] * x343 + x1034 * x713 - x1034 * x719 - x1039 * x889 +
    x1039 * x893 + x1041 * x341 - x1041 * x343 + x1044 * x889 - x1044 * x893 -
    77000000000.0 * x2300 + 77000000000.0 * x2304 + x249 * x341 - x249 * x343 +
    x341 * x999 - x343 * x999 - 5.4675e+45 * x615 * x7506 + x691 * x713 -
    x691 * x719 - 4.05e+26 * x7510 * x90 + 4.05e+26 * x7517 -
    x7520 * (3.0 * x7514 + 0.42 * x7551) + 5.4675e+45 * x7523 +
    x7526 * (3.0 * x7514 + 0.42 * x7551) +
    (x1034 * x234 + x234 * x691) * (x593 - x993) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[687] =
    12000000.0 * sc[9] * x1 - 12000000.0 * sc[9] * x890 - x1 * x1041 -
    x1 * x249 - x1 * x999 - x1034 * x155 + x1034 * x722 - x1039 * x894 +
    x1039 * x897 + x1041 * x890 + x1044 * x894 - x1044 * x897 - x155 * x691 -
    158400000000.0 * x2300 + 158400000000.0 * x2304 + x249 * x890 + x461 +
    x691 * x722 + x890 * x999 + (x1034 * x234 + x234 * x691) * (-x1014 + x839) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[727] =
    -sc[7] * x6690 - 12000000.0 * sc[9] * x892 + 12000000.0 * sc[9] * x900 +
    x1034 * x731 - x1034 * x738 + x1039 * x872 - x1039 * x902 + x1041 * x892 -
    x1041 * x900 - x1044 * x872 + x1044 * x902 + x249 * x892 - x249 * x900 +
    x691 * x731 - x691 * x738 + x7532 + x892 * x999 - x900 * x999 +
    (x1034 * x234 + x234 * x691) * (-x1027 + x1036) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[767] =
    30110000.0 * sc[4] - sc[7] * x3536 - sc[7] * x6692 +
    12000000.0 * sc[9] * x905 - x1034 * x742 + x1039 * x214 - x1041 * x905 -
    x1044 * x214 - x249 * x905 - x691 * x742 + x7587 - x905 * x999 +
    (x1034 * x234 + x234 * x691) * (x1042 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[807] =
    sc[4] * x6569 - 12000000.0 * sc[9] * x906 + 12000000.0 * sc[9] * x915 +
    x1034 * x744 - x1034 * x752 - x1039 * x699 + x1039 * x904 + x1041 * x906 -
    x1041 * x915 + x1044 * x699 - x1044 * x904 + x249 * x906 - x249 * x915 +
    x691 * x744 - x691 * x752 + x7532 + x906 * x999 - x915 * x999 +
    (x1034 * x234 + x234 * x691) * (-x1052 + x1057) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[847] =
    -sc[7] * x6675 + 12000000.0 * sc[9] * x518 - x1034 * x750 + x1039 * x882 -
    x1041 * x518 - x1044 * x882 - x249 * x518 - x518 * x999 - x691 * x750 +
    x7587 + (x1034 * x234 + x234 * x691) * (x1061 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[887] =
    -12000000.0 * sc[9] * x919 + 12000000.0 * sc[9] * x920 + x1034 * x776 -
    x1034 * x781 - x1039 * x909 + x1039 * x910 + x1041 * x919 - x1041 * x920 +
    x1044 * x909 - x1044 * x910 - 44000000000.0 * x2300 +
    44000000000.0 * x2304 + x249 * x919 - x249 * x920 -
    1.0935e+46 * x615 * x7506 + x691 * x776 - x691 * x781 + x6997 -
    8.1e+26 * x7510 * x90 + x7510 * x92 * x95 - 2.7e+26 * x7517 * x88 * x95 +
    8.1e+26 * x7517 + 1.0935e+46 * x7523 + x919 * x999 - x920 * x999 +
    (x1034 * x234 + x234 * x691) * (x126 - x308) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[927] =
    -sc[7] * x6685 + 12000000.0 * sc[9] * x923 + x1034 * x785 - x1034 * x793 -
    x1039 * x684 + x1039 * x768 - x1041 * x923 + x1044 * x684 - x1044 * x768 -
    x249 * x923 + x691 * x785 - x691 * x793 + x7542 - x923 * x999 +
    (x1034 * x234 + x234 * x691) * (-x303 + x310) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[967] =
    7500000.0 * sc[4] * x6508 - sc[7] * x6670 + 12000000.0 * sc[9] * x925 -
    x1034 * x801 + x1039 * x772 - x1041 * x925 - x1044 * x772 - x249 * x925 -
    x691 * x801 + x7587 - x925 * x999 +
    (x1034 * x234 + x234 * x691) * (x325 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1007] =
    10000000.0 * sc[4] * x6508 + x7589 +
    (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1047] =
    5000.0 * x5258 + x7589 + (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1087] =
    -sc[7] * x6681 - x1034 * x803 - x691 * x803 + x7588 +
    (x1034 * x234 + x234 * x691) * (x326 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1127] =
    6000000.0 * sc[4] - sc[7] * x6683 + 12000000.0 * sc[9] * x927 -
    x1034 * x826 + x1039 * x911 - x1041 * x927 - x1044 * x911 - x249 * x927 -
    x691 * x826 + x7587 - x927 * x999 +
    (x1034 * x234 + x234 * x691) * (x336 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1167] =
    sc[4] * x6483 - sc[7] * x6673 + x7589 +
    (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1207] =
    24000000.0 * sc[4] + x7589 + (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1247] =
    x7589 + (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1287] =
    -x1034 * x816 - x691 * x816 + x7588 +
    (x1034 * x234 + x234 * x691) * (x476 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1327] =
    -12000000.0 * sc[9] * x928 + 12000000.0 * sc[9] * x932 + x1034 * x818 -
    x1034 * x849 + x1039 * x285 - x1039 * x493 + x1041 * x928 - x1041 * x932 -
    x1044 * x285 + x1044 * x493 + x249 * x928 - x249 * x932 + x691 * x818 -
    x691 * x849 + x7532 + x928 * x999 - x932 * x999 +
    (x1034 * x234 + x234 * x691) * (-x257 + x356) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1367] =
    x7589 + (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1407] =
    12000000.0 * sc[9] * x933 - x1034 * x863 + x1039 * x357 - x1041 * x933 -
    x1044 * x357 - x249 * x933 - x691 * x863 + x7587 - x933 * x999 +
    (x1034 * x234 + x234 * x691) * (x367 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1447] =
    sc[4] * x6462 + 12000000.0 * sc[9] * x934 - x1034 * x354 + x1039 * x358 -
    x1041 * x934 - x1044 * x358 - x249 * x934 - x354 * x691 + x7587 -
    x934 * x999 + (x1034 * x234 + x234 * x691) * (x402 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1487] =
    -sc[7] * x6667 - x1034 * x363 - x363 * x691 + x7588 +
    (x1034 * x234 + x234 * x691) * (x466 - x877) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1527] =
    x7278 + x7589 + (x1034 * x234 + x234 * x691) * (-x877 + x887) +
    (-12000000.0 * sc[9] * x220 + x1039 * x235 + x1041 * x220 - x1044 * x235 +
     x220 * x249 + x220 * x999) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-12000000.0 * sc[9] * x117 + x1041 * x117 + x117 * x249 + x117 * x999) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[8] = -x6324 * (0.196 * x6342 + 1.4 * x6343) + 254.781081081081 * x6333 -
         140700.0 * x6337 + 140700.0 * x6353 - 254.781081081081 * x6358 +
         x7655 * (0.196 * x6342 + 1.4 * x6343);
  J[48] = x6318;
  J[88] = -sc[8] * x2672 - sc[8] * x2675 + x6318;
  J[128] = -sc[8] * x5692 + x6318;
  J[168] = 402000.0 * sc[4] * x6315 * x6330 * x6352 + sc[5] * x5798 +
           sc[7] * x3025 - sc[8] * x6515 - sc[8] * x6518 + x6318;
  J[208] = sc[11] * x7130 + 1000000.0 * sc[13] * x2786 + sc[20] * x602 +
           sc[22] * x7126 + sc[4] * x5798 + sc[6] * x658 + sc[7] * x6614 +
           sc[7] * x6616 + x6318 + x6332 + x7156;
  J[248] = sc[5] * x658 - x6324 * (0.56 * x6342 + 4.0 * x6343) +
           727.94594594594605 * x6333 - 402000.0 * x6337 + 402000.0 * x6353 -
           727.94594594594605 * x6358 + x7655 * (0.56 * x6342 + 4.0 * x6343);
  J[288] = sc[4] * x3025 + sc[5] * x6614 + sc[5] * x6616 -
           x6324 * (1.68 * x6342 + 12.0 * x6343) + 2183.8378378378402 * x6333 -
           1206000.0 * x6337 + 1206000.0 * x6353 - 2183.8378378378402 * x6358 +
           x7655 * (1.68 * x6342 + 12.0 * x6343);
  J[328] = -sc[12] * x7191 - sc[20] * x7200 - sc[28] * x7189 - sc[2] * x2672 -
           sc[2] * x2675 - sc[3] * x5692 - sc[4] * x6515 - sc[4] * x6518 -
           365800000.0 * sc[9] * x7194 - 130000.0 * sc[9] * x7198 -
           201000.0 * x6315 * x6330 * x6336 + x6318 - x7185 - x7187 - x7197;
  J[368] = -365800000.0 * sc[8] * x7194 - 130000.0 * sc[8] * x7198 + x6318;
  J[408] = x6318 - x7228;
  J[448] = sc[5] * x7130 + x6318;
  J[488] = -sc[8] * x7191 + x6318;
  J[528] = 1000000.0 * sc[5] * x2786 + x6318;
  J[568] = x6318;
  J[608] = x6318;
  J[648] = -x6324 * (0.49 * x6342 + 3.5 * x6343) + 636.95270270270305 * x6333 -
           351750.0 * x6337 + 351750.0 * x6353 - 636.95270270270305 * x6358 +
           x7655 * (0.49 * x6342 + 3.5 * x6343);
  J[688] = -x6324 * (1.008 * x6342 + 7.2 * x6343) + 1310.3027027026999 * x6333 -
           723600.0 * x6337 + 723600.0 * x6353 - 1310.3027027026999 * x6358 +
           x7655 * (1.008 * x6342 + 7.2 * x6343);
  J[728] = x6318;
  J[768] = x6318 - x7248;
  J[808] = sc[5] * x602 - sc[8] * x7200 + x6318;
  J[848] = 300000.0 * sc[5] + x6318 - x7258;
  J[888] = sc[5] * x7126 + x6318;
  J[928] = x6318;
  J[968] = x6318;
  J[1008] = x6318;
  J[1048] = x6318;
  J[1088] = x6318;
  J[1128] = -sc[8] * x7189 + x6318;
  J[1168] = x6318 + x7272;
  J[1208] = x6318;
  J[1248] = x6318;
  J[1288] = x6318;
  J[1328] = x6318;
  J[1368] = x6318;
  J[1408] = x6318;
  J[1448] = x6318;
  J[1488] = x6318;
  J[1528] = x6318;
  J[9] = -33000000.0 * sc[9] * x255 - 40000000.0 * sc[9] * x283 -
         10000000.0 * sc[9] * x338 + 40000000.0 * sc[9] * x344 +
         33000000.0 * sc[9] * x371 + x210 * x349 - x210 * x362 + x2131 -
         99600.0 * x5583 + 99600.0 * x5584 + x5609 * x607 - x5609 * x659 +
         x7689 + (33000000.0 * sc[9] * x234) * (-x607 + x659) +
         (40000000.0 * sc[9] * x220 - x210 * x235) *
           (x255 - x371 + (-x234) * (-x607 + x659)) +
         (40000000.0 * sc[9] * x117) *
           (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
         (10000000.0 * sc[9] * x74) *
           (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
            (-x117) * (-x349 + x362 +
                       (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[49] = -33000000.0 * sc[9] * x468 + 33000000.0 * sc[9] * x606 +
          40000000.0 * sc[9] * x627 - 40000000.0 * sc[9] * x650 + x210 * x317 -
          x210 * x680 + x5609 * x687 - x5609 * x709 + x7718 +
          (33000000.0 * sc[9] * x234) * (-x687 + x709) +
          (40000000.0 * sc[9] * x220 - x210 * x235) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (40000000.0 * sc[9] * x117) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
          (10000000.0 * sc[9] * x74) *
            (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
             (-x117) * (-x317 + x680 +
                        (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[89] =
    5280000.0 * sc[17] * sc[2] * x2628 + 28000000.0 * sc[4] * x435 * x437 +
    sc[5] * x2700 - sc[9] * x2098 * x2105 + 33000000.0 * sc[9] * x612 -
    33000000.0 * sc[9] * x616 + 40000000.0 * sc[9] * x666 -
    40000000.0 * sc[9] * x671 - 10000000.0 * sc[9] * x940 - x210 * x677 +
    x210 * x685 - x2773 + x5609 * x723 - x5609 * x730 + x7717 +
    (33000000.0 * sc[9] * x234) * (-x723 + x730) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (40000000.0 * sc[9] * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (10000000.0 * sc[9] * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[129] =
    33000000.0 * sc[12] * x562 + sc[14] * x5742 + sc[16] * x561 +
    sc[17] * x5721 + sc[25] * x5699 + sc[33] * x5751 + 36000000.0 * sc[38] +
    240000.0 * sc[3] * x361 * x5737 + sc[4] * x2327 + 40000000.0 * sc[5] +
    33000000.0 * sc[9] * x622 - 33000000.0 * sc[9] * x630 +
    40000000.0 * sc[9] * x679 - 40000000.0 * sc[9] * x696 - x166 * x210 +
    x210 * x706 + x5609 * x739 - x5609 * x743 + x5682 + x7718 +
    (33000000.0 * sc[9] * x234) * (-x739 + x743) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (40000000.0 * sc[9] * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (10000000.0 * sc[9] * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[169] =
    sc[12] * x6559 + sc[13] * x437 * x6492 + sc[13] * x6575 +
    28000000.0 * sc[2] * x435 * x437 + 60000000.0 * sc[38] + sc[3] * x2327 +
    sc[5] * x6543 + sc[5] * x6546 + sc[5] * x6549 + sc[5] * x6552 +
    sc[5] * x6555 + 33000000.0 * sc[9] * x131 - 10000000.0 * sc[9] * x504 -
    sc[9] * x5815 - 33000000.0 * sc[9] * x633 + 40000000.0 * sc[9] * x700 -
    40000000.0 * sc[9] * x701 + x210 * x721 - x210 * x728 +
    1600000.0 * x232 * x6498 + x5609 * x756 - x5609 * x763 + x7717 +
    (33000000.0 * sc[9] * x234) * (-x756 + x763) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (40000000.0 * sc[9] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (10000000.0 * sc[9] * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[209] =
    refC * x2087 * x2105 + 1000000.0 * sc[10] + sc[12] * x7143 +
    sc[13] * x7172 + sc[16] * x2111 + sc[18] * x7134 + sc[19] * x7160 +
    sc[20] * x7164 + sc[24] * x7138 + sc[27] * x2096 + 2660000.0 * sc[28] +
    sc[29] * x7152 + sc[2] * x2700 + 40000000.0 * sc[3] -
    33000000.0 * sc[9] * x176 + 40000000.0 * sc[9] * x180 -
    40000000.0 * sc[9] * x617 + 33000000.0 * sc[9] * x643 + x210 * x736 -
    x210 * x737 + x5609 * x782 - x5609 * x794 + x6332 + x7545 + x7718 +
    (33000000.0 * sc[9] * x234) * (-x782 + x794) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (40000000.0 * sc[9] * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[249] =
    33000000.0 * sc[9] * x207 - 33000000.0 * sc[9] * x653 +
    40000000.0 * sc[9] * x726 - 40000000.0 * sc[9] * x732 -
    10000000.0 * sc[9] * x814 + x210 * x741 - x210 * x748 + x2538 - x3251 -
    288000.0 * x5583 + 288000.0 * x5584 + x5609 * x829 - x5609 * x843 + x7689 +
    (33000000.0 * sc[9] * x234) * (-x829 + x843) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (40000000.0 * sc[9] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (10000000.0 * sc[9] * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[289] =
    12000000.0 * sc[16] * x411 + 33000000.0 * sc[9] * x159 -
    33000000.0 * sc[9] * x370 + 40000000.0 * sc[9] * x733 -
    40000000.0 * sc[9] * x740 - 10000000.0 * sc[9] * x858 + x210 * x751 -
    x210 * x760 + x3647 - 1848000.0 * x5583 + 1848000.0 * x5584 + x5609 * x864 -
    x5609 * x871 + x7582 + x7689 +
    (33000000.0 * sc[9] * x234) * (-x864 + x871) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (40000000.0 * sc[9] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (10000000.0 * sc[9] * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[329] =
    -365800000.0 * sc[9] * x7194 - 130000.0 * sc[9] * x7198 + x7739 +
    (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[369] =
    -sc[10] * x5950 - sc[10] * x6782 - sc[11] * x7225 - sc[13] * x7217 -
    1046.0 * sc[13] * x7769 - 77410.0 * ((sc[14]) * (sc[14])) * x7764 -
    sc[14] * x5946 - sc[15] * x6762 - 20000.0 * sc[21] - sc[22] * x7215 -
    1600000.0 * sc[23] * x6767 - 158000.0 * sc[25] - sc[29] * x7209 -
    90000.0 * sc[30] - sc[32] * x5954 - sc[33] * x5941 - sc[4] * x5815 -
    365800000.0 * sc[8] * x7194 - 130000.0 * sc[8] * x7198 +
    33000000.0 * sc[9] * x674 - 33000000.0 * sc[9] * x676 +
    40000000.0 * sc[9] * x745 - 40000000.0 * sc[9] * x747 -
    10000000.0 * sc[9] * x866 + 10000000.0 * sc_qss[3] * x74 -
    40000000.0 * x12 - x145 * x210 - 33000000.0 * x148 + x210 * x840 -
    58000000.0 * x258 * exp(-289.85279950351901 * invT) - x3798 -
    13240000.0 * x3806 + x3886 + 10000000.0 * x392 / x72 -
    120000.0 * x5582 * x5737 - 120000.0 * x5583 + 120000.0 * x5584 +
    x5609 * x898 - x5609 * x903 - x5944 - x5949 - x7206 - x7212 - x7220 -
    x7222 - x7224 + x7593 - x7686 + x7689 - x7742 - x7775 +
    (33000000.0 * sc[9] * x234) * (-x898 + x903) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (40000000.0 * sc[9] * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (10000000.0 * sc[9] * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[409] =
    1000000.0 * sc[5] + 33000000.0 * sc[9] * x686 - 33000000.0 * sc[9] * x689 +
    40000000.0 * sc[9] * x759 - 40000000.0 * sc[9] * x767 - x210 * x856 +
    x210 * x862 + x5609 * x912 - x5609 * x918 + x7718 + x7781 +
    (33000000.0 * sc[9] * x234) * (-x912 + x918) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (40000000.0 * sc[9] * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (10000000.0 * sc[9] * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[449] =
    -33000000.0 * sc[9] * x292 + 33000000.0 * sc[9] * x693 - sc[9] * x7225 +
    40000000.0 * sc[9] * x786 - 40000000.0 * sc[9] * x809 -
    10000000.0 * sc[9] * x944 + x210 * x861 - x210 * x875 + x5609 * x929 -
    x5609 * x935 + x7717 + (33000000.0 * sc[9] * x234) * (-x929 + x935) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (40000000.0 * sc[9] * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (10000000.0 * sc[9] * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[489] =
    20000000.0 * sc[12] * x384 + sc[13] * x7785 + 33000000.0 * sc[3] * x562 +
    sc[4] * x6559 + sc[5] * x7143 - 40000000.0 * sc[9] * x330 -
    33000000.0 * sc[9] * x704 - 10000000.0 * sc[9] * x946 - x210 * x780 -
    x5609 * x945 - x7236 + x7790 +
    (33000000.0 * sc[9] * x234) * (-x877 + x945) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[529] =
    sc[12] * x7785 + sc[4] * x437 * x6492 + sc[4] * x6575 + sc[5] * x7172 +
    40000000.0 * sc[9] * x180 + 33000000.0 * sc[9] * x705 -
    33000000.0 * sc[9] * x708 - sc[9] * x7217 - 1046.0 * sc[9] * x7769 -
    40000000.0 * sc[9] * x851 + x210 * x879 - x210 * x880 + x5609 * x953 -
    x5609 * x958 - x7237 + x7718 +
    (33000000.0 * sc[9] * x234) * (-x953 + x958) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (40000000.0 * sc[9] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[569] =
    -154820.0 * sc[14] * sc[9] * x7764 + sc[3] * x5742 - sc[9] * x5946 -
    33000000.0 * sc[9] * x710 - 40000000.0 * sc[9] * x859 - x210 * x884 -
    x5609 * x962 - x7243 + x7737 +
    (33000000.0 * sc[9] * x234) * (-x877 + x962) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[609] =
    -1046.0 * sc[9] * x6535 * x7768 - sc[9] * x6762 -
    33000000.0 * sc[9] * x711 - 40000000.0 * sc[9] * x867 - x210 * x886 -
    x5609 * x969 + x7737 + (33000000.0 * sc[9] * x234) * (-x877 + x969) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[649] =
    28000000.0 * refCinv * sc[2] * sc[4] * x435 + sc[3] * x561 +
    3200000.0 * sc[4] * x437 * x6498 + sc[4] * x6492 * x6535 + sc[5] * x2111 +
    12000000.0 * sc[7] * x411 + 40000000.0 * sc[9] * x341 -
    40000000.0 * sc[9] * x343 + 33000000.0 * sc[9] * x713 -
    33000000.0 * sc[9] * x719 - 10000000.0 * sc[9] * x947 + x210 * x889 -
    x210 * x893 + x4457 - 210000.0 * x5583 + 210000.0 * x5584 - x5609 * x593 +
    x5609 * x993 - x6082 + x7689 + (33000000.0 * sc[9] * x234) * (x593 - x993) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (40000000.0 * sc[9] * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (10000000.0 * sc[9] * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[689] =
    2640000.0 * ((sc[2]) * (sc[2])) * x2628 + sc[33] * x7805 + sc[3] * x5721 -
    40000000.0 * sc[9] * x1 - 33000000.0 * sc[9] * x155 +
    33000000.0 * sc[9] * x722 - 10000000.0 * sc[9] * x813 +
    40000000.0 * sc[9] * x890 + x1014 * x5609 + x210 * x894 - x210 * x897 +
    x4611 - 432000.0 * x5583 + 432000.0 * x5584 - x5609 * x839 + x7689 +
    (33000000.0 * sc[9] * x234) * (-x1014 + x839) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (40000000.0 * sc[9] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (10000000.0 * sc[9] * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[729] =
    sc[5] * x7134 + 33000000.0 * sc[9] * x731 - 33000000.0 * sc[9] * x738 +
    40000000.0 * sc[9] * x892 - 40000000.0 * sc[9] * x900 -
    10000000.0 * sc[9] * x99 + x1027 * x5609 - x1036 * x5609 - x210 * x872 +
    x210 * x902 + x7717 + (33000000.0 * sc[9] * x234) * (-x1027 + x1036) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (40000000.0 * sc[9] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (10000000.0 * sc[9] * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[769] =
    sc[5] * x7160 - 33000000.0 * sc[9] * x742 - 40000000.0 * sc[9] * x905 -
    10000000.0 * sc[9] * x952 - x1042 * x5609 - x210 * x214 - x6150 - x7249 +
    x7790 - x7813 + (33000000.0 * sc[9] * x234) * (x1042 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[809] =
    sc[5] * x7164 - 10000000.0 * sc[9] * x35 + 33000000.0 * sc[9] * x744 -
    33000000.0 * sc[9] * x752 + 40000000.0 * sc[9] * x906 -
    40000000.0 * sc[9] * x915 + x1052 * x5609 - x1057 * x5609 + x210 * x699 -
    x210 * x904 - x7252 + x7717 +
    (33000000.0 * sc[9] * x234) * (-x1052 + x1057) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (40000000.0 * sc[9] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (10000000.0 * sc[9] * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[849] =
    300000.0 * sc[5] - 40000000.0 * sc[9] * x518 - 33000000.0 * sc[9] * x750 -
    20000.0 * sc[9] - x1061 * x5609 - x210 * x882 + x7737 +
    (33000000.0 * sc[9] * x234) * (x1061 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[889] =
    -10000000.0 * sc[9] * x51 - sc[9] * x7215 + 33000000.0 * sc[9] * x776 -
    33000000.0 * sc[9] * x781 + 40000000.0 * sc[9] * x919 -
    40000000.0 * sc[9] * x920 - x126 * x5609 + x210 * x909 - x210 * x910 +
    x308 * x5609 + x7717 + (33000000.0 * sc[9] * x234) * (x126 - x308) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (40000000.0 * sc[9] * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (10000000.0 * sc[9] * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[929] =
    40000000.0 * sc[9] * x180 - 1600000.0 * sc[9] * x6767 +
    33000000.0 * sc[9] * x785 - 33000000.0 * sc[9] * x793 -
    40000000.0 * sc[9] * x923 + x210 * x684 - x210 * x768 + x303 * x5609 -
    x310 * x5609 + x7718 + (33000000.0 * sc[9] * x234) * (-x303 + x310) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (40000000.0 * sc[9] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[969] =
    sc[5] * x7138 - 10000000.0 * sc[9] * x609 - 33000000.0 * sc[9] * x801 -
    40000000.0 * sc[9] * x925 - x210 * x772 - x325 * x5609 + x7790 +
    (33000000.0 * sc[9] * x234) * (x325 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1009] =
    sc[3] * x5699 - 158000.0 * sc[9] + x7739 +
    (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1049] =
    x7739 + (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1089] =
    sc[5] * x2096 - 33000000.0 * sc[9] * x803 - x326 * x5609 + x7738 +
    (33000000.0 * sc[9] * x234) * (x326 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1129] =
    2660000.0 * sc[5] - 33000000.0 * sc[9] * x826 - 40000000.0 * sc[9] * x927 -
    x210 * x911 - x336 * x5609 - x7268 + x7737 +
    (33000000.0 * sc[9] * x234) * (x336 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1169] =
    sc[5] * x7152 - sc[9] * x7209 + x7739 +
    (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1209] =
    -90000.0 * sc[9] + x7739 + (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1249] =
    x7739 + (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1289] =
    -sc[9] * x5954 - 33000000.0 * sc[9] * x816 - x476 * x5609 + x7738 +
    (33000000.0 * sc[9] * x234) * (x476 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1329] =
    sc[17] * x7805 + sc[3] * x5751 - sc[9] * x5941 + 33000000.0 * sc[9] * x818 -
    33000000.0 * sc[9] * x849 + 40000000.0 * sc[9] * x928 -
    40000000.0 * sc[9] * x932 - x210 * x285 + x210 * x493 + x257 * x5609 -
    x356 * x5609 + x7718 + (33000000.0 * sc[9] * x234) * (-x257 + x356) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (40000000.0 * sc[9] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (10000000.0 * sc[9] * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1369] =
    x6282 + x7739 + (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1409] =
    -33000000.0 * sc[9] * x863 - 40000000.0 * sc[9] * x933 - x210 * x357 -
    x367 * x5609 + x7737 + (33000000.0 * sc[9] * x234) * (x367 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1449] =
    -33000000.0 * sc[9] * x354 - 40000000.0 * sc[9] * x934 - x210 * x358 -
    x402 * x5609 + x7737 + (33000000.0 * sc[9] * x234) * (x402 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1489] =
    -33000000.0 * sc[9] * x363 - x466 * x5609 + x7738 - x7839 +
    (33000000.0 * sc[9] * x234) * (x466 - x877) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1529] =
    154820.0 * sc[38] * exp(30.696216614087898 * invT) +
    2092.0 * sc[38] * exp(1806.0446135731399 * invT) + 36000000.0 * sc[3] +
    60000000.0 * sc[4] + x7278 + x7705 + x7739 +
    (33000000.0 * sc[9] * x234) * (-x877 + x887) +
    (40000000.0 * sc[9] * x220 - x210 * x235) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (40000000.0 * sc[9] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (10000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[10] = -30000000.0 * sc[10] * x255 + 40000000.0 * sc[10] * x349 -
          40000000.0 * sc[10] * x362 + 30000000.0 * sc[10] * x371 +
          50000000.0 * sc[10] * x607 - 50000000.0 * sc[10] * x659 +
          x160 * x283 - x160 * x344 + x2374 + x274 * x283 - x274 * x344 -
          2.8672e+20 * x282 - x283 * x321 + x321 * x344 +
          x345 * (1.4 * x240 * x586 + 0.196 * x240 * x703) - x349 * x69 -
          x349 * x980 + x362 * x69 + x362 * x980 - 2240000000000000.0 * x516 +
          2.8672e+20 * x528 - x535 * (1.4 * x240 * x586 + 0.196 * x240 * x703) +
          x6400 + x7689 - x7850 * x7858 + x7858 * x7883 - 2.478e+38 * x7874 +
          2.0688962264150902e+66 * x7878 + 2.478e+38 * x7879 -
          2.0688962264150902e+66 * x7881 + x7936 + x7987 +
          2240000000000000.0 * x939 +
          (30000000.0 * sc[10] * x234) * (-x607 + x659) +
          (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
           x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
           x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
           x117 * x274 + x117 * x321) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[50] = 40000000.0 * sc[10] * x317 - 30000000.0 * sc[10] * x468 +
          30000000.0 * sc[10] * x606 - 40000000.0 * sc[10] * x680 +
          50000000.0 * sc[10] * x687 - 50000000.0 * sc[10] * x709 -
          70000000.0 * sc[6] * x627 + 70000000.0 * sc[6] * x650 - x1041 * x627 +
          x1041 * x650 - x1044 * x317 + x1044 * x680 - x160 * x627 +
          x160 * x650 - x196 * x317 + x196 * x680 - x274 * x627 + x274 * x650 -
          x317 * x69 - x317 * x980 + x321 * x627 - x321 * x650 + x680 * x69 +
          x680 * x980 + x8014 + (30000000.0 * sc[10] * x234) * (-x687 + x709) +
          (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
           x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
           x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
           x117 * x274 + x117 * x321) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[90] =
    30000000.0 * sc[10] * x612 - 30000000.0 * sc[10] * x616 -
    40000000.0 * sc[10] * x677 + 40000000.0 * sc[10] * x685 +
    50000000.0 * sc[10] * x723 - 50000000.0 * sc[10] * x730 + sc[13] * x2838 +
    50000000.0 * sc[18] * x588 + 30000000.0 * sc[19] * x554 + sc[20] * x2859 +
    40000000.0 * sc[20] * x524 + 9980000.0 * sc[21] * x2768 -
    sc[24] * x2801 * x2804 + 90000000.0 * sc[25] + sc[27] * x2650 +
    sc[28] * x2746 + 8000000000000000.0 * sc[29] * exp(x2576) + sc[30] * x2692 -
    x160 * x666 + x160 * x671 + x219 + x225 * x27 + 3.2e+16 * x2578 + x2719 -
    x274 * x666 + x274 * x671 + x2781 + x321 * x666 - x321 * x671 + x6438 +
    x677 * x69 + x677 * x980 - x685 * x69 - x685 * x980 + x8014 +
    (30000000.0 * sc[10] * x234) * (-x723 + x730) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[130] = -40000000.0 * sc[10] * x166 + 30000000.0 * sc[10] * x622 -
           30000000.0 * sc[10] * x630 + 40000000.0 * sc[10] * x706 +
           50000000.0 * sc[10] * x739 - 50000000.0 * sc[10] * x743 -
           84300000.0 * sc[10] + sc[14] * x5742 + 48000000.0 * sc[19] +
           19.2 * sc[20] * exp(x41) + 16040000.0 * sc[21] + sc[29] * x2342 -
           70000000.0 * sc[6] * x679 + 70000000.0 * sc[6] * x696 - x160 * x679 +
           x160 * x696 + x166 * x196 + x166 * x69 + x166 * x980 - x196 * x706 -
           x274 * x679 + x274 * x696 + x321 * x679 - x321 * x696 + x6452 -
           x69 * x706 - x706 * x980 + x8014 +
           (30000000.0 * sc[10] * x234) * (-x739 + x743) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[170] =
    30000000.0 * sc[10] * x131 - 30000000.0 * sc[10] * x633 +
    40000000.0 * sc[10] * x721 - 40000000.0 * sc[10] * x728 +
    50000000.0 * sc[10] * x756 - 50000000.0 * sc[10] * x763 -
    24000000.0 * sc[13] * x2801 * x6577 + sc[13] * x6575 + sc[14] * x6524 -
    70000000.0 * sc[6] * x700 + 70000000.0 * sc[6] * x701 - x160 * x700 +
    x160 * x701 - x196 * x721 + x196 * x728 - x274 * x700 + x274 * x701 +
    x321 * x700 - x321 * x701 + x6479 + x6530 + x6598 - x69 * x721 +
    x69 * x728 - x721 * x980 + x728 * x980 + x8014 +
    (30000000.0 * sc[10] * x234) * (-x756 + x763) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[210] = -30000000.0 * sc[10] * x176 + 30000000.0 * sc[10] * x643 +
           40000000.0 * sc[10] * x736 - 40000000.0 * sc[10] * x737 +
           50000000.0 * sc[10] * x782 - 50000000.0 * sc[10] * x794 -
           14400000.0 * sc[10] + sc[11] * x7130 + 24000000.0 * sc[21] +
           70000000.0 * sc[6] * x617 + x1041 * x617 - x1044 * x736 +
           x1044 * x737 + x160 * x617 - x196 * x736 + x196 * x737 +
           x274 * x617 - x321 * x617 + x3241 + x6632 - x69 * x736 + x69 * x737 -
           x736 * x980 + x737 * x980 + x8029 + x8031 +
           (30000000.0 * sc[10] * x234) * (-x782 + x794) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[250] =
    30000000.0 * sc[10] * x207 - sc[10] * x3308 - 30000000.0 * sc[10] * x653 +
    40000000.0 * sc[10] * x741 - 40000000.0 * sc[10] * x748 +
    50000000.0 * sc[10] * x829 - 50000000.0 * sc[10] * x843 - x160 * x726 +
    x160 * x732 - x274 * x726 + x274 * x732 + x321 * x726 - x321 * x732 +
    x3408 + x3477 + x3479 + x6666 - x69 * x741 + x69 * x748 - x741 * x980 +
    x748 * x980 + (30000000.0 * sc[10] * x234) * (-x829 + x843) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[290] =
    30000000.0 * sc[10] * x159 - 30000000.0 * sc[10] * x370 - sc[10] * x6677 +
    40000000.0 * sc[10] * x751 - 40000000.0 * sc[10] * x760 +
    50000000.0 * sc[10] * x864 - 50000000.0 * sc[10] * x871 - x160 * x733 +
    x160 * x740 - x274 * x733 + x274 * x740 + x321 * x733 - x321 * x740 +
    x345 * x3521 - x3521 * x535 + x3712 + 2.4576e+21 * x374 * x472 -
    2.4576e+21 * x374 * x534 - 1.92e+16 * x516 + x6738 - x69 * x751 +
    x69 * x760 - x751 * x980 + x760 * x980 + x7689 -
    x7850 * (12.0 * x240 * x7854 + 1.68 * x240 * x7857) - 2.124e+39 * x7874 +
    1.77333962264151e+67 * x7878 + 2.124e+39 * x7879 -
    1.77333962264151e+67 * x7881 +
    x7883 * (12.0 * x240 * x7854 + 1.68 * x240 * x7857) + x8066 + x8078 +
    1.92e+16 * x939 + (30000000.0 * sc[10] * x234) * (-x864 + x871) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[330] = -x7187 + x8083 + (30000000.0 * sc[10] * x234) * (-x877 + x887) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[370] =
    -40000000.0 * sc[10] * x145 - sc[10] * x5950 + 30000000.0 * sc[10] * x674 -
    30000000.0 * sc[10] * x676 - sc[10] * x6782 + 40000000.0 * sc[10] * x840 +
    50000000.0 * sc[10] * x898 - 50000000.0 * sc[10] * x903 + sc[11] * x7225 -
    70000000.0 * sc[6] * x745 + 70000000.0 * sc[6] * x747 - x1041 * x745 +
    x1041 * x747 + x1044 * x145 - x1044 * x840 + x145 * x196 + x145 * x69 +
    x145 * x980 - x160 * x745 + x160 * x747 - x196 * x840 - x274 * x745 +
    x274 * x747 + x321 * x745 - x321 * x747 - x69 * x840 - x7686 + x8014 -
    x840 * x980 + (30000000.0 * sc[10] * x234) * (-x898 + x903) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[410] =
    -7.08e+38 * sc[10] * x27 * x7860 * x7863 * exp(x7865) +
    30000000.0 * sc[10] * x686 - 30000000.0 * sc[10] * x689 -
    40000000.0 * sc[10] * x856 + 40000000.0 * sc[10] * x862 +
    50000000.0 * sc[10] * x912 - 50000000.0 * sc[10] * x918 -
    9.84 * sc[10] * exp(-g_RT_qss[2] - x422 + x53) -
    64000000.0 * sc[10] * exp(-g_RT_qss[3] + 286.83349950869001 * invT - x422) -
    sc[13] * x5976 - sc[15] * x8102 - sc[18] * x3922 - sc[18] * x8118 -
    sc[19] * x3951 - sc[19] * x7981 - 392000.0 * sc[19] - sc[20] * x3901 -
    sc[20] * x8144 - sc[20] * x8147 - 50000000.0 * sc[23] - sc[29] * x3897 -
    sc[29] * x8122 - 11000000.0 * sc[30] - 1000000.0 * sc[38] * x8092 -
    84300000.0 * sc[3] - 14400000.0 * sc[5] - sc[6] * x3308 - sc[7] * x6677 -
    12000000.0 * x12 * x982 - 30000000.0 * x148 - x160 * x759 + x160 * x767 -
    40000000.0 * x217 - 50000000.0 * x258 + x321 * x759 - x321 * x767 -
    19960000.0 * x3903 - x3948 + x4000 - x6795 + x6813 + x69 * x856 -
    x69 * x862 - x7228 + x7781 - x792 + x8014 - x8089 - x8099 + x8116 + x8129 +
    x8135 - x8141 + x8153 + x856 * x980 - x862 * x980 +
    (30000000.0 * sc[10] * x234) * (-x912 + x918) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[450] = -30000000.0 * sc[10] * x292 + 30000000.0 * sc[10] * x693 +
           40000000.0 * sc[10] * x861 - 40000000.0 * sc[10] * x875 +
           50000000.0 * sc[10] * x929 - 50000000.0 * sc[10] * x935 +
           sc[12] * x2340 + sc[14] * x8162 + sc[16] * x8165 + sc[18] * x8167 +
           sc[19] * x8172 + sc[21] * x8156 + sc[27] * x8158 + sc[28] * x8160 +
           sc[29] * x8154 + sc[5] * x7130 + sc[9] * x7225 +
           32000000.0 * x12 * x982 - x160 * x786 + x160 * x809 +
           4.92 * x217 * exp(x53) - x274 * x786 + x274 * x809 + x321 * x786 -
           x321 * x809 + x3477 + x3479 + x4003 + x4087 + x6814 + x6829 -
           x69 * x861 + x69 * x875 - x861 * x980 + x875 * x980 +
           (30000000.0 * sc[10] * x234) * (-x929 + x935) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[490] =
    -12000000.0 * sc[10] * x330 * x982 - 30000000.0 * sc[10] * x704 -
    40000000.0 * sc[10] * x780 - 50000000.0 * sc[10] * x945 + sc[11] * x2340 +
    32000000.0 * sc[11] * x330 * x982 + 70000000.0 * sc[6] * x330 +
    x1041 * x330 + x1044 * x780 + x196 * x780 + x274 * x330 + x69 * x780 +
    x780 * x980 + x8184 + x8187 +
    (30000000.0 * sc[10] * x234) * (-x877 + x945) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[530] =
    -sc[10] * x5976 + 30000000.0 * sc[10] * x705 - 30000000.0 * sc[10] * x708 +
    40000000.0 * sc[10] * x879 - 40000000.0 * sc[10] * x880 +
    50000000.0 * sc[10] * x953 - 50000000.0 * sc[10] * x958 + sc[2] * x2838 +
    sc[4] * x6575 + 70000000.0 * sc[6] * x851 + x1041 * x851 - x1044 * x879 +
    x1044 * x880 + x160 * x851 - x196 * x879 + x196 * x880 + x274 * x851 -
    x321 * x851 + x3241 + x6632 - x6853 - x69 * x879 + x69 * x880 + x8029 +
    x8031 - x8189 - x879 * x980 + x880 * x980 +
    (30000000.0 * sc[10] * x234) * (-x953 + x958) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[570] =
    -30000000.0 * sc[10] * x710 - 40000000.0 * sc[10] * x884 -
    50000000.0 * sc[10] * x962 + sc[11] * x8162 + 32000000.0 * sc[2] +
    sc[33] * x8192 + sc[3] * x5742 + sc[4] * x6524 + 70000000.0 * sc[6] * x859 +
    x1041 * x859 + x1044 * x884 + x160 * x859 + x196 * x884 + x274 * x859 -
    x321 * x859 + x69 * x884 + x8187 + 2000000.0 * x8194 + x884 * x980 +
    (30000000.0 * sc[10] * x234) * (-x877 + x962) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[610] =
    2.7e+26 * refC * x6370 * x88 - 30000000.0 * sc[10] * x711 - sc[10] * x8102 -
    40000000.0 * sc[10] * x886 - 50000000.0 * sc[10] * x969 +
    70000000.0 * sc[6] * x867 + x1041 * x867 + x1044 * x886 + x160 * x867 +
    x196 * x886 + x274 * x867 - x321 * x867 + x69 * x886 + x8187 + x886 * x980 +
    (30000000.0 * sc[10] * x234) * (-x877 + x969) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[650] = -50000000.0 * sc[10] * x593 + 30000000.0 * sc[10] * x713 -
           30000000.0 * sc[10] * x719 + 40000000.0 * sc[10] * x889 -
           40000000.0 * sc[10] * x893 + 50000000.0 * sc[10] * x993 +
           sc[11] * x8165 + sc[20] * x8201 - x160 * x341 + x160 * x343 -
           x274 * x341 + x274 * x343 - 6.144e+20 * x282 + x321 * x341 -
           x321 * x343 + x345 * x4348 - x4348 * x535 + x4533 -
           4800000000000000.0 * x516 + 6.144e+20 * x528 - x69 * x889 +
           x69 * x893 + x6921 + x7689 -
           x7850 * (3.0 * x240 * x7854 + 0.42 * x240 * x7857) -
           5.31e+38 * x7874 + 4.4333490566037699e+66 * x7878 +
           5.31e+38 * x7879 - 4.4333490566037699e+66 * x7881 +
           x7883 * (3.0 * x240 * x7854 + 0.42 * x240 * x7857) + x7950 + x8217 +
           x8231 - x889 * x980 + x893 * x980 + 4800000000000000.0 * x939 +
           (30000000.0 * sc[10] * x234) * (x593 - x993) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x713 + x719 + (-x234) * (x593 - x993)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[690] =
    50000000.0 * sc[10] * x1014 - 30000000.0 * sc[10] * x155 +
    30000000.0 * sc[10] * x722 - 50000000.0 * sc[10] * x839 +
    40000000.0 * sc[10] * x894 - 40000000.0 * sc[10] * x897 + x1 * x160 +
    x1 * x274 - x1 * x321 - x160 * x890 - x274 * x890 + x321 * x890 + x3479 +
    x4647 + x6665 - x69 * x894 + x69 * x897 - x894 * x980 + x897 * x980 +
    (30000000.0 * sc[10] * x234) * (-x1014 + x839) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[730] =
    50000000.0 * sc[10] * x1027 - 50000000.0 * sc[10] * x1036 - sc[10] * x3922 +
    30000000.0 * sc[10] * x731 - 30000000.0 * sc[10] * x738 - sc[10] * x8118 -
    40000000.0 * sc[10] * x872 + 40000000.0 * sc[10] * x902 + sc[11] * x8167 +
    50000000.0 * sc[2] * x588 - 70000000.0 * sc[6] * x892 +
    70000000.0 * sc[6] * x900 - x1041 * x892 + x1041 * x900 + x1044 * x872 -
    x1044 * x902 - x160 * x892 + x160 * x900 + x169 + x196 * x872 -
    x196 * x902 + x2564 - x274 * x892 + x274 * x900 + x321 * x892 -
    x321 * x900 + x6399 + x69 * x872 - x69 * x902 + x6948 + x8250 +
    x872 * x980 - x902 * x980 +
    (30000000.0 * sc[10] * x234) * (-x1027 + x1036) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[770] = -50000000.0 * sc[10] * x1042 - 40000000.0 * sc[10] * x214 -
           sc[10] * x3951 - 30000000.0 * sc[10] * x742 - sc[10] * x7981 -
           392000.0 * sc[10] + sc[11] * x8172 + 30000000.0 * sc[2] * x554 +
           48000000.0 * sc[3] + 70000000.0 * sc[6] * x905 + x1041 * x905 +
           x1044 * x214 + x160 * x905 + x196 * x214 + x214 * x69 + x214 * x980 +
           x274 * x905 - x321 * x905 + x8187 + x8253 +
           (30000000.0 * sc[10] * x234) * (x1042 - x877) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[810] =
    50000000.0 * sc[10] * x1052 - 50000000.0 * sc[10] * x1057 - sc[10] * x3901 +
    40000000.0 * sc[10] * x699 + 30000000.0 * sc[10] * x744 -
    30000000.0 * sc[10] * x752 - sc[10] * x8144 - sc[10] * x8147 -
    40000000.0 * sc[10] * x904 + sc[16] * x8201 + sc[2] * x2859 +
    40000000.0 * sc[2] * x524 + 19.2 * sc[3] * exp(x41) -
    70000000.0 * sc[6] * x906 + 70000000.0 * sc[6] * x915 - x1041 * x906 +
    x1041 * x915 - x1044 * x699 + x1044 * x904 - x160 * x906 + x160 * x915 +
    x169 - x196 * x699 + x196 * x904 + x2564 - x274 * x906 + x274 * x915 +
    x321 * x906 - x321 * x915 + x6399 - x69 * x699 + x69 * x904 - x699 * x980 +
    x8250 + x904 * x980 + (30000000.0 * sc[10] * x234) * (-x1052 + x1057) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[850] =
    -50000000.0 * sc[10] * x1061 - sc[10] * x3895 - 30000000.0 * sc[10] * x750 -
    sc[10] * x8125 - 40000000.0 * sc[10] * x882 + sc[11] * x8156 +
    9980000.0 * sc[2] * x2768 + 16040000.0 * sc[3] + 24000000.0 * sc[5] +
    70000000.0 * sc[6] * x518 + x1041 * x518 + x1044 * x882 + x160 * x518 +
    x196 * x882 + x274 * x518 - x321 * x518 + x69 * x882 + x8187 + x8267 +
    x882 * x980 + (30000000.0 * sc[10] * x234) * (x1061 - x877) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[890] = -50000000.0 * sc[10] * x126 + 50000000.0 * sc[10] * x308 +
           30000000.0 * sc[10] * x776 - 30000000.0 * sc[10] * x781 +
           40000000.0 * sc[10] * x909 - 40000000.0 * sc[10] * x910 +
           40000000.0 * x12 * exp(276.769166192596 * invT) - x160 * x919 +
           x160 * x920 - x274 * x919 + x274 * x920 - 1.2288e+21 * x282 +
           x321 * x919 - x321 * x920 + x345 * x4970 +
           3.54e+38 * x477 * x7860 * x7866 - x4970 * x535 + x5120 -
           9600000000000000.0 * x516 + 1.2288e+21 * x528 - x69 * x909 +
           x69 * x910 + x7018 + x7689 -
           x7850 * (6.0 * x240 * x7854 + 0.84 * x240 * x7857) -
           1.062e+39 * x7874 + 8.8666981132075502e+66 * x7878 +
           1.062e+39 * x7879 - 8.8666981132075502e+66 * x7881 +
           x7883 * (6.0 * x240 * x7854 + 0.84 * x240 * x7857) + x8250 - x8273 +
           x8289 - x909 * x980 + x910 * x980 + 9600000000000000.0 * x939 +
           (30000000.0 * sc[10] * x234) * (x126 - x308) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[930] =
    50000000.0 * sc[10] * x303 - 50000000.0 * sc[10] * x310 +
    40000000.0 * sc[10] * x684 - 40000000.0 * sc[10] * x768 +
    30000000.0 * sc[10] * x785 - 30000000.0 * sc[10] * x793 -
    50000000.0 * sc[10] + 70000000.0 * sc[6] * x923 + x1041 * x923 -
    x1044 * x684 + x1044 * x768 + x160 * x923 - x196 * x684 + x196 * x768 +
    x274 * x923 - x321 * x923 + x3241 + x6632 - x684 * x69 - x684 * x980 +
    x69 * x768 + x768 * x980 + x8029 + x8031 +
    (30000000.0 * sc[10] * x234) * (-x303 + x310) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[970] = -50000000.0 * sc[10] * x325 - 40000000.0 * sc[10] * x772 -
           30000000.0 * sc[10] * x801 - sc[2] * x2801 * x2804 +
           70000000.0 * sc[6] * x925 + x1041 * x925 + x1044 * x772 +
           x160 * x925 + x196 * x772 + x274 * x925 - x321 * x925 + x5237 +
           x69 * x772 + x772 * x980 + x8187 +
           (30000000.0 * sc[10] * x234) * (x325 - x877) +
           (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
            x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
            x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
            x117 * x274 + x117 * x321) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1010] = 90000000.0 * sc[2] + x8083 + x8297 +
            (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1050] = x8083 + 36300000000000.0 * exp(-28783.993284029999 * invT) +
            (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1090] = -50000000.0 * sc[10] * x326 - 30000000.0 * sc[10] * x803 +
            sc[11] * x8158 + sc[2] * x2650 + x8082 +
            (30000000.0 * sc[10] * x234) * (x326 - x877) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x803 + (-x234) * (x326 - x877)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1130] =
    -50000000.0 * sc[10] * x336 - sc[10] * x8114 - 30000000.0 * sc[10] * x826 -
    40000000.0 * sc[10] * x911 + sc[11] * x8160 + sc[2] * x2746 +
    70000000.0 * sc[6] * x927 + x1041 * x927 + x1044 * x911 + x160 * x927 +
    x196 * x911 + x274 * x927 - x321 * x927 + x69 * x911 - x7890 + x8187 +
    x8301 - x8304 + x911 * x980 + (30000000.0 * sc[10] * x234) * (x336 - x877) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1170] = -sc[10] * x3897 - sc[10] * x8122 + sc[11] * x8154 +
            8000000000000000.0 * sc[2] * exp(x2576) + sc[3] * x2342 + x7942 +
            x8083 + (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1210] = -11000000.0 * sc[10] + sc[2] * x2692 + x8083 + x8313 +
            (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1250] = 3.2e+16 * x5347 + x7892 + x8083 +
            (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1290] = -50000000.0 * sc[10] * x476 - 30000000.0 * sc[10] * x816 + x8082 +
            (30000000.0 * sc[10] * x234) * (x476 - x877) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x816 + (-x234) * (x476 - x877)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1330] =
    50000000.0 * sc[10] * x257 - 40000000.0 * sc[10] * x285 -
    50000000.0 * sc[10] * x356 + 40000000.0 * sc[10] * x493 +
    30000000.0 * sc[10] * x818 - 30000000.0 * sc[10] * x849 + sc[14] * x8192 -
    70000000.0 * sc[6] * x928 + 70000000.0 * sc[6] * x932 - x1041 * x928 +
    x1041 * x932 + x1044 * x285 - x1044 * x493 - x160 * x928 + x160 * x932 +
    x196 * x285 - x196 * x493 - x274 * x928 + x274 * x932 + x285 * x69 +
    x285 * x980 + x321 * x928 - x321 * x932 - x493 * x69 - x493 * x980 + x8014 +
    (30000000.0 * sc[10] * x234) * (-x257 + x356) +
    (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 - x1041 * x220 +
     x1044 * x235 - x160 * x220 + x196 * x235 - x220 * x274 + x220 * x321 +
     x235 * x69 + x235 * x980) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 - x117 * x274 +
     x117 * x321) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1370] = x8083 - x8319 + (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1410] = -40000000.0 * sc[10] * x357 - 50000000.0 * sc[10] * x367 +
            30000000.0 * sc[10] * x657 + 40000000.0 * sc[10] * x764 -
            30000000.0 * sc[10] * x863 + 50000000.0 * sc[10] * x877 +
            70000000.0 * sc[6] * x933 + x1041 * x933 + x1044 * x357 +
            x160 * x933 + x196 * x357 + x274 * x933 - x321 * x933 + x357 * x69 +
            x357 * x980 + x3763 + x6755 - x69 * x764 - x764 * x980 + x8029 +
            x8031 + (30000000.0 * sc[10] * x234) * (x367 - x877) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1450] = -30000000.0 * sc[10] * x354 - 40000000.0 * sc[10] * x358 -
            50000000.0 * sc[10] * x402 + 70000000.0 * sc[6] * x934 +
            x1041 * x934 + x1044 * x358 + x160 * x934 + x196 * x358 +
            x274 * x934 - x321 * x934 + x358 * x69 + x358 * x980 + x3763 +
            x8029 + x8031 + x8081 +
            (30000000.0 * sc[10] * x234) * (x402 - x877) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1490] = -30000000.0 * sc[10] * x363 - 50000000.0 * sc[10] * x466 + x8082 +
            (30000000.0 * sc[10] * x234) * (x466 - x877) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (x363 - x657 + (-x234) * (x466 - x877)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1530] = -1000000.0 * sc[10] * x8092 + x7705 + x8083 +
            (30000000.0 * sc[10] * x234) * (-x877 + x887) +
            (-40000000.0 * sc[10] * x235 - 70000000.0 * sc[6] * x220 -
             x1041 * x220 + x1044 * x235 - x160 * x220 + x196 * x235 -
             x220 * x274 + x220 * x321 + x235 * x69 + x235 * x980) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-70000000.0 * sc[6] * x117 - x1041 * x117 - x117 * x160 -
             x117 * x274 + x117 * x321) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[11] = -60000000.0 * sc[11] * x255 + 60000000.0 * sc[11] * x371 +
          50000000.0 * sc[20] * x283 - 50000000.0 * sc[20] * x344 -
          x106 * x338 - x150 * x283 + x150 * x344 + x2332 * x2337 -
          x2337 * x2372 - 3.3817876377952801e+32 * x2352 * x2355 +
          3.3817876377952801e+32 * x2352 * x2361 - 1.7339e+21 * x2364 +
          1.7339e+21 * x2368 + x314 * x349 - x314 * x362 +
          (60000000.0 * sc[11] * x234) * (-x607 + x659) +
          (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-50000000.0 * sc[20] * x117 + x117 * x150) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
          (x106 * x74) *
            (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
             (-x117) * (-x349 + x362 +
                        (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[51] = -60000000.0 * sc[11] * x468 + 60000000.0 * sc[11] * x606 -
          50000000.0 * sc[20] * x627 + 50000000.0 * sc[20] * x650 +
          x150 * x627 - x150 * x650 + x314 * x317 - x314 * x680 + x8327 +
          (60000000.0 * sc[11] * x234) * (-x687 + x709) +
          (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-50000000.0 * sc[20] * x117 + x117 * x150) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
          (x106 * x74) *
            (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
             (-x117) * (-x317 + x680 +
                        (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[91] =
    sc[10] * x115 * x27 + 60000000.0 * sc[11] * x612 -
    60000000.0 * sc[11] * x616 + 60000000.0 * sc[20] * x583 -
    50000000.0 * sc[20] * x666 + 50000000.0 * sc[20] * x671 - x106 * x940 +
    x150 * x666 - x150 * x671 + x2557 - x2719 - x314 * x677 + x314 * x685 +
    (60000000.0 * sc[11] * x234) * (-x723 + x730) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (x106 * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[131] =
    -sc[11] * x5717 + 60000000.0 * sc[11] * x622 - 60000000.0 * sc[11] * x630 -
    50000000.0 * sc[20] * x679 + 50000000.0 * sc[20] * x696 + x150 * x679 -
    x150 * x696 - x166 * x314 + x314 * x706 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x739 + x743) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (x106 * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[171] =
    sc[10] * x5803 + 60000000.0 * sc[11] * x131 - 60000000.0 * sc[11] * x633 -
    50000000.0 * sc[20] * x700 + 50000000.0 * sc[20] * x701 - x106 * x504 +
    x150 * x700 - x150 * x701 + x2557 + x314 * x721 - x314 * x728 - x6479 +
    (60000000.0 * sc[11] * x234) * (-x756 + x763) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (x106 * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[211] =
    1000000.0 * sc[10] - 60000000.0 * sc[11] * x176 +
    60000000.0 * sc[11] * x643 - sc[11] * x7130 + 50000000.0 * sc[20] * x617 +
    x150 * x180 - x150 * x617 + x314 * x736 - x314 * x737 + x3231 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x782 + x794) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (x106 * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[251] =
    sc[10] * x3308 + 60000000.0 * sc[11] * x207 - 60000000.0 * sc[11] * x653 -
    50000000.0 * sc[20] * x726 + 50000000.0 * sc[20] * x732 - x106 * x814 +
    x150 * x726 - x150 * x732 + x2339 + x314 * x741 - x314 * x748 +
    (60000000.0 * sc[11] * x234) * (-x829 + x843) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (x106 * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[291] =
    sc[10] * x6677 + 60000000.0 * sc[11] * x159 - 60000000.0 * sc[11] * x370 -
    50000000.0 * sc[20] * x733 + 50000000.0 * sc[20] * x740 - x106 * x858 +
    x150 * x733 - x150 * x740 +
    x2332 * (1.68 * x2333 * x240 + 12.0 * x2335 * x240) -
    2.8986751181102398e+33 * x2352 * x2355 +
    2.8986751181102398e+33 * x2352 * x2361 - 1.4862e+22 * x2364 +
    1.4862e+22 * x2368 - x2372 * (1.68 * x2333 * x240 + 12.0 * x2335 * x240) +
    x314 * x751 - x314 * x760 + (60000000.0 * sc[11] * x234) * (-x864 + x871) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (x106 * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[331] =
    x7187 + x8341 + (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[371] =
    60000000.0 * sc[11] * x674 - 60000000.0 * sc[11] * x676 - sc[11] * x7225 -
    50000000.0 * sc[20] * x745 + 50000000.0 * sc[20] * x747 - x106 * x866 -
    x145 * x314 + x150 * x745 - x150 * x747 + x2557 + x314 * x840 +
    (60000000.0 * sc[11] * x234) * (-x898 + x903) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (x106 * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[411] =
    4.92 * sc[10] * exp(-g_RT_qss[2] - x422 + x53) +
    32000000.0 * sc[10] * exp(-g_RT_qss[3] + 286.83349950869001 * invT - x422) +
    60000000.0 * sc[11] * x686 - 60000000.0 * sc[11] * x689 +
    8480000.0 * sc[12] + sc[15] * x8102 + 392000.0 * sc[19] -
    50000000.0 * sc[20] * x759 + 50000000.0 * sc[20] * x767 + sc[20] * x8144 +
    sc[29] * x8122 + 11000000.0 * sc[30] + sc[4] * x5803 + 1000000.0 * sc[5] +
    sc[6] * x3308 + sc[7] * x6677 + x115 * x956 + x150 * x759 - x150 * x767 -
    x314 * x856 + x314 * x862 + x7228 + x8099 + x8111 + x8141 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x912 + x918) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (x106 * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[451] =
    -60000000.0 * sc[11] * x292 + 60000000.0 * sc[11] * x693 - sc[12] * x2340 -
    sc[14] * x8162 - sc[16] * x8165 - sc[18] * x8167 - sc[19] * x8172 -
    50000000.0 * sc[20] * x786 + 50000000.0 * sc[20] * x809 - sc[21] * x8156 -
    sc[27] * x8158 - sc[28] * x8160 - sc[29] * x8154 - sc[3] * x5717 -
    sc[5] * x7130 - sc[9] * x7225 - x106 * x944 - 16000000.0 * x12 * x982 -
    60000000.0 * x148 + x150 * x786 - x150 * x809 - 2.46 * x217 * exp(x53) -
    2.477e+21 * x2329 * x477 + x2339 + x314 * x861 - x314 * x875 -
    50000000.0 * x3360 * x56 - x4003 - x437 * x8354 - x6814 +
    (60000000.0 * sc[11] * x234) * (-x929 + x935) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (x106 * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[491] =
    8480000.0 * sc[10] - sc[11] * x2340 - 16000000.0 * sc[11] * x330 * x982 -
    60000000.0 * sc[11] * x704 + 50000000.0 * sc[20] * x330 - x106 * x946 -
    x314 * x780 + x3231 + x8359 +
    (60000000.0 * sc[11] * x234) * (-x877 + x945) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (x106 * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[531] =
    60000000.0 * sc[11] * x705 - 60000000.0 * sc[11] * x708 +
    50000000.0 * sc[20] * x851 + x150 * x180 - x150 * x851 + x314 * x879 -
    x314 * x880 + x3231 + x8189 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x953 + x958) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (x106 * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[571] =
    -60000000.0 * sc[11] * x710 - sc[11] * x8162 + 50000000.0 * sc[20] * x859 -
    x150 * x859 - x314 * x884 + x8339 +
    (60000000.0 * sc[11] * x234) * (-x877 + x962) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (x106 * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[611] =
    sc[10] * x8102 - 60000000.0 * sc[11] * x711 + 50000000.0 * sc[20] * x867 -
    x150 * x867 - x314 * x886 + x8339 +
    (60000000.0 * sc[11] * x234) * (-x877 + x969) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (x106 * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[651] =
    -refCinv * sc[11] * x8354 + 60000000.0 * sc[11] * x713 -
    60000000.0 * sc[11] * x719 - sc[11] * x8165 - 50000000.0 * sc[20] * x341 +
    50000000.0 * sc[20] * x343 - x106 * x947 + x150 * x341 - x150 * x343 +
    x2332 * (0.42 * x2333 * x240 + 3.0 * x2335 * x240) -
    7.2466877952755894e+32 * x2352 * x2355 +
    7.2466877952755894e+32 * x2352 * x2361 - 3.7155e+21 * x2364 +
    3.7155e+21 * x2368 - x2372 * (0.42 * x2333 * x240 + 3.0 * x2335 * x240) +
    x314 * x889 - x314 * x893 + (60000000.0 * sc[11] * x234) * (x593 - x993) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (x106 * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[691] =
    -60000000.0 * sc[11] * x155 + 60000000.0 * sc[11] * x722 +
    50000000.0 * sc[20] * x1 - 50000000.0 * sc[20] * x890 - x1 * x150 -
    x106 * x813 + x150 * x890 + x2339 + x314 * x894 - x314 * x897 +
    (60000000.0 * sc[11] * x234) * (-x1014 + x839) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (x106 * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[731] =
    60000000.0 * sc[11] * x731 - 60000000.0 * sc[11] * x738 - sc[11] * x8167 -
    50000000.0 * sc[20] * x892 + 50000000.0 * sc[20] * x900 - x106 * x99 +
    x150 * x892 - x150 * x900 + x2557 - x314 * x872 + x314 * x902 +
    (60000000.0 * sc[11] * x234) * (-x1027 + x1036) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (x106 * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[771] =
    392000.0 * sc[10] - 60000000.0 * sc[11] * x742 - sc[11] * x8172 +
    50000000.0 * sc[20] * x905 - x106 * x952 - x150 * x905 - x214 * x314 +
    x3231 + x8359 + (60000000.0 * sc[11] * x234) * (x1042 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (x106 * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[811] =
    sc[10] * x8144 + 60000000.0 * sc[11] * x744 - 60000000.0 * sc[11] * x752 -
    50000000.0 * sc[20] * x906 + 50000000.0 * sc[20] * x915 +
    60000000.0 * sc[2] * x583 - x106 * x35 + 50000000.0 * x12 + x150 * x906 -
    x150 * x915 + x2557 + x314 * x699 - x314 * x904 +
    (60000000.0 * sc[11] * x234) * (-x1052 + x1057) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (x106 * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[851] =
    -60000000.0 * sc[11] * x750 - sc[11] * x8156 + 50000000.0 * sc[20] * x518 -
    x150 * x518 - x314 * x882 + x8339 +
    (60000000.0 * sc[11] * x234) * (x1061 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (x106 * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[891] =
    60000000.0 * sc[11] * x776 - 60000000.0 * sc[11] * x781 -
    50000000.0 * sc[20] * x919 + 50000000.0 * sc[20] * x920 - x106 * x51 +
    x150 * x919 - x150 * x920 +
    x2332 * (0.84 * x2333 * x240 + 6.0 * x2335 * x240) -
    1.4493375590551199e+33 * x2352 * x2355 +
    1.4493375590551199e+33 * x2352 * x2361 - 7.431e+21 * x2364 +
    7.431e+21 * x2368 - x2372 * (0.84 * x2333 * x240 + 6.0 * x2335 * x240) +
    x314 * x909 - x314 * x910 + x8273 +
    (60000000.0 * sc[11] * x234) * (x126 - x308) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (x106 * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[931] =
    60000000.0 * sc[11] * x785 - 60000000.0 * sc[11] * x793 +
    50000000.0 * sc[20] * x923 + x150 * x180 - x150 * x923 + x314 * x684 -
    x314 * x768 + x3231 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x303 + x310) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (x106 * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[971] =
    -60000000.0 * sc[11] * x801 + 50000000.0 * sc[20] * x925 - x106 * x609 -
    x150 * x925 - x314 * x772 + x3231 + x8359 +
    (60000000.0 * sc[11] * x234) * (x325 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (x106 * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1011] =
    x8341 + (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1051] =
    x8341 + 12100000000000.0 * exp(-28783.993284029999 * invT) +
    (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1091] =
    -60000000.0 * sc[11] * x803 - sc[11] * x8158 + x8340 +
    (60000000.0 * sc[11] * x234) * (x326 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1131] =
    -sc[11] * x8160 - 60000000.0 * sc[11] * x826 + 50000000.0 * sc[20] * x927 -
    x150 * x927 - x314 * x911 + x8304 + x8339 +
    (60000000.0 * sc[11] * x234) * (x336 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (x106 * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1171] =
    sc[10] * x8122 - sc[11] * x8154 + x8341 +
    (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1211] =
    11000000.0 * sc[10] + x8341 +
    (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1251] =
    x8341 + (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1291] =
    -60000000.0 * sc[11] * x816 + x8340 +
    (60000000.0 * sc[11] * x234) * (x476 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1331] =
    60000000.0 * sc[11] * x818 - 60000000.0 * sc[11] * x849 -
    50000000.0 * sc[20] * x928 + 50000000.0 * sc[20] * x932 + x150 * x928 -
    x150 * x932 - x285 * x314 + x314 * x493 + x8327 +
    (60000000.0 * sc[11] * x234) * (-x257 + x356) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (x106 * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1371] =
    x8341 + (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1411] =
    -60000000.0 * sc[11] * x863 + 50000000.0 * sc[20] * x933 - x150 * x933 -
    x314 * x357 + x8339 + (60000000.0 * sc[11] * x234) * (x367 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (x106 * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1451] =
    -60000000.0 * sc[11] * x354 + 60000000.0 * sc[11] * x657 +
    50000000.0 * sc[20] * x934 + x150 * x180 - x150 * x934 - x314 * x358 +
    x314 * x764 + x3231 + x8327 + (60000000.0 * sc[11] * x234) * (x402 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (x106 * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1491] =
    -60000000.0 * sc[11] * x363 + x8340 +
    (60000000.0 * sc[11] * x234) * (x466 - x877) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (x106 * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1531] =
    x8341 + (60000000.0 * sc[11] * x234) * (-x877 + x887) +
    (-50000000.0 * sc[20] * x220 + x150 * x220 - x235 * x314) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-50000000.0 * sc[20] * x117 + x117 * x150) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[12] =
    24600000.0 * sc[33] * x255 - 24600000.0 * sc[33] * x371 +
    33000000.0 * sc[9] * x255 + 20000000.0 * sc[9] * x338 -
    33000000.0 * sc[9] * x371 + x2028 + x2082 + x255 * x271 - x271 * x371 -
    x349 * x681 + x362 * x681 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x607 + x659) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-15000000.0 * sc[3] * x117) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
    (-20000000.0 * sc[9] * x74) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[52] =
    24600000.0 * sc[33] * x468 - 24600000.0 * sc[33] * x606 -
    80000000.0 * sc[3] * x317 + 80000000.0 * sc[3] * x680 +
    30000000.0 * sc[4] * x468 - 30000000.0 * sc[4] * x606 +
    33000000.0 * sc[9] * x468 - 33000000.0 * sc[9] * x606 + x2429 +
    x271 * x468 - x271 * x606 - x317 * x681 + x680 * x681 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x687 + x709) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-15000000.0 * sc[3] * x117) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
    (-20000000.0 * sc[9] * x74) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[92] =
    sc[13] * x2842 + sc[17] * x2706 + 90000000.0 * sc[25] -
    24600000.0 * sc[33] * x612 + 24600000.0 * sc[33] * x616 -
    15000000.0 * sc[3] * x666 + 15000000.0 * sc[3] * x671 +
    2244000000000.0 * sc[7] * x2315 * x437 - 33000000.0 * sc[9] * x612 +
    33000000.0 * sc[9] * x616 + 20000000.0 * sc[9] * x940 + x2527 -
    x271 * x612 + x271 * x616 + x2824 + x2885 * x437 + x677 * x681 -
    x681 * x685 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x723 + x730) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-15000000.0 * sc[3] * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (-20000000.0 * sc[9] * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[132] =
    sc[13] * x5733 + 19.2 * sc[20] * exp(x41) - 24600000.0 * sc[33] * x622 +
    24600000.0 * sc[33] * x630 + x166 * x681 + x2328 - x271 * x622 +
    x271 * x630 + x2980 + x5708 + x5759 + x5777 - x681 * x706 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x739 + x743) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-15000000.0 * sc[3] * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (-20000000.0 * sc[9] * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[172] =
    sc[16] * x5833 - 24600000.0 * sc[33] * x131 + 24600000.0 * sc[33] * x633 -
    33000000.0 * sc[9] * x131 + 20000000.0 * sc[9] * x504 +
    33000000.0 * sc[9] * x633 - x131 * x271 + x2527 + x271 * x633 + x3102 +
    x3108 + x6561 + x6584 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x756 + x763) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-15000000.0 * sc[3] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (-20000000.0 * sc[9] * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[212] =
    -sc[12] * x7143 + 1000000.0 * sc[13] * x2786 + sc[16] * x2111 +
    24600000.0 * sc[33] * x176 - 24600000.0 * sc[33] * x643 -
    80000000.0 * sc[3] * x736 + 80000000.0 * sc[3] * x737 +
    30000000.0 * sc[4] * x176 - 30000000.0 * sc[4] * x643 +
    33000000.0 * sc[9] * x176 - 33000000.0 * sc[9] * x643 + x176 * x271 -
    x271 * x643 + x3229 - x681 * x736 + x681 * x737 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x782 + x794) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-15000000.0 * sc[3] * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[252] =
    -374000000000.0 * sc[12] * x2318 - sc[12] * x3374 -
    24600000.0 * sc[33] * x207 + 24600000.0 * sc[33] * x653 -
    15000000.0 * sc[3] * x726 + 15000000.0 * sc[3] * x732 -
    33000000.0 * sc[9] * x207 + 33000000.0 * sc[9] * x653 +
    20000000.0 * sc[9] * x814 - x207 * x271 + 374000000000.0 * x2312 * x2315 +
    x271 * x653 + x3356 - x681 * x741 + x681 * x748 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x829 + x843) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-15000000.0 * sc[3] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (-20000000.0 * sc[9] * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[292] =
    -sc[12] * x143 - 2244000000000.0 * sc[12] * x2318 + sc[16] * x6716 -
    24600000.0 * sc[33] * x159 + 24600000.0 * sc[33] * x370 -
    33000000.0 * sc[9] * x159 + 33000000.0 * sc[9] * x370 +
    20000000.0 * sc[9] * x858 - x159 * x271 + 2244000000000.0 * x2312 * x2315 +
    x271 * x370 + x3622 + x3635 - x681 * x751 + x681 * x760 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x864 + x871) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-15000000.0 * sc[3] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (-20000000.0 * sc[9] * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[332] =
    -sc[12] * x7191 + x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[372] =
    sc[13] * x7217 - 24600000.0 * sc[33] * x674 + 24600000.0 * sc[33] * x676 +
    80000000.0 * sc[3] * x145 - 80000000.0 * sc[3] * x840 -
    30000000.0 * sc[4] * x674 + 30000000.0 * sc[4] * x676 -
    33000000.0 * sc[9] * x674 + 33000000.0 * sc[9] * x676 +
    20000000.0 * sc[9] * x866 - 20000000.0 * sc_qss[3] * x74 + x145 * x681 +
    33000000.0 * x148 + x2527 - x271 * x674 + x271 * x676 + 10600000.0 * x3806 +
    x3847 - 20000000.0 * x392 / x72 - x681 * x840 - x7224 + x7775 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x898 + x903) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-15000000.0 * sc[3] * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (-20000000.0 * sc[9] * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[412] =
    -24600000.0 * sc[33] * x686 + 24600000.0 * sc[33] * x689 +
    80000000.0 * sc[3] * x856 - 80000000.0 * sc[3] * x862 -
    30000000.0 * sc[4] * x686 + 30000000.0 * sc[4] * x689 -
    33000000.0 * sc[9] * x686 + 33000000.0 * sc[9] * x689 - x271 * x686 +
    x271 * x689 + x3960 + x681 * x856 - x681 * x862 + x8135 + x8141 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x912 + x918) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-15000000.0 * sc[3] * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (-20000000.0 * sc[9] * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[452] =
    -sc[12] * x2340 + sc[16] * x8165 + 24600000.0 * sc[33] * x292 -
    24600000.0 * sc[33] * x693 + 33000000.0 * sc[9] * x292 -
    33000000.0 * sc[9] * x693 + 20000000.0 * sc[9] * x944 + x271 * x292 -
    x271 * x693 + x4051 + x4056 - x681 * x861 + x681 * x875 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x929 + x935) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-15000000.0 * sc[3] * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (-20000000.0 * sc[9] * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[492] =
    -sc[11] * x2340 - 40000000.0 * sc[12] * x384 - sc[13] * x7785 -
    sc[16] * x8456 - sc[18] * x8439 - 90330000.0 * sc[19] - sc[20] * x8446 -
    sc[21] * x6023 - 60000000.0 * sc[28] - sc[30] * x6019 -
    24600000.0 * sc[32] * x574 + 24600000.0 * sc[33] * x704 +
    15000000.0 * sc[3] * x330 - 33000000.0 * sc[3] * x562 - 60000000.0 * sc[3] -
    sc[5] * x7143 - sc[6] * x3374 - sc[7] * x143 -
    2244000000000.0 * sc[7] * x2318 - sc[8] * x7191 +
    33000000.0 * sc[9] * x704 + 20000000.0 * sc[9] * x946 -
    187000000000.0 * x2318 * (sc[0] + 2 * sc[6] + x2594) + x2527 + x271 * x704 +
    x3228 + x3735 + x4137 + x5919 + x6842 - x7236 + x8184 + x8379 + x8416 +
    x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x945) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[532] =
    -sc[12] * x7785 + sc[2] * x2842 - 24600000.0 * sc[33] * x705 +
    24600000.0 * sc[33] * x708 + sc[3] * x5733 + 15000000.0 * sc[3] * x851 +
    1000000.0 * sc[5] * x2786 - 33000000.0 * sc[9] * x705 +
    33000000.0 * sc[9] * x708 + sc[9] * x7217 - x271 * x705 + x271 * x708 +
    x3228 + x4202 - x681 * x879 + x681 * x880 + x6863 + x8189 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x953 + x958) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-15000000.0 * sc[3] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[572] =
    24600000.0 * sc[33] * x710 + 15000000.0 * sc[3] * x859 +
    80000000.0 * sc[3] * x884 + 30000000.0 * sc[4] * x710 +
    33000000.0 * sc[9] * x710 + x271 * x710 + x3228 + x3735 + x5919 + x6744 +
    x681 * x884 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x962) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[612] =
    24600000.0 * sc[33] * x711 + 15000000.0 * sc[3] * x867 +
    80000000.0 * sc[3] * x886 + 30000000.0 * sc[4] * x711 +
    33000000.0 * sc[9] * x711 + x271 * x711 + x3228 + x3735 + x5919 + x6744 +
    x681 * x886 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x969) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[652] =
    2244000000000.0 * refCinv * sc[2] * sc[7] * x2315 +
    refCinv * sc[2] * x2885 + sc[11] * x8165 - 327250000000.0 * sc[12] * x2318 +
    sc[19] * x8474 + sc[20] * x8476 + sc[21] * x8478 + sc[29] * x8472 -
    24600000.0 * sc[33] * x713 + 24600000.0 * sc[33] * x719 + sc[4] * x5833 +
    sc[5] * x2111 + sc[7] * x6716 - 33000000.0 * sc[9] * x713 +
    33000000.0 * sc[9] * x719 + 20000000.0 * sc[9] * x947 +
    327250000000.0 * x2312 * x2315 + x4484 - x681 * x889 + x681 * x893 + x8484 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x593 - x993) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-15000000.0 * sc[3] * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (-20000000.0 * sc[9] * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[692] =
    -673200000000.0 * sc[12] * x2318 + sc[2] * x2706 +
    24600000.0 * sc[33] * x155 - 24600000.0 * sc[33] * x722 +
    33000000.0 * sc[9] * x155 - 33000000.0 * sc[9] * x722 +
    20000000.0 * sc[9] * x813 + 673200000000.0 * x2312 * x2315 + x3355 -
    x681 * x894 + x681 * x897 + x8489 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x1014 + x839) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-15000000.0 * sc[3] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (-20000000.0 * sc[9] * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[732] =
    -sc[12] * x8439 - 24600000.0 * sc[33] * x731 + 24600000.0 * sc[33] * x738 +
    80000000.0 * sc[3] * x872 - 80000000.0 * sc[3] * x902 -
    30000000.0 * sc[4] * x731 + 30000000.0 * sc[4] * x738 -
    33000000.0 * sc[9] * x731 + 33000000.0 * sc[9] * x738 +
    20000000.0 * sc[9] * x99 + x2527 - x271 * x731 + x271 * x738 + x4695 +
    x681 * x872 - x681 * x902 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x1027 + x1036) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-15000000.0 * sc[3] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (-20000000.0 * sc[9] * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[772] =
    -90330000.0 * sc[12] + sc[16] * x8474 + 24600000.0 * sc[33] * x742 +
    80000000.0 * sc[3] * x214 + 15000000.0 * sc[3] * x905 +
    30000000.0 * sc[4] * x742 + 33000000.0 * sc[9] * x742 +
    20000000.0 * sc[9] * x952 + x214 * x681 + x2527 + x271 * x742 + x3228 +
    x3735 + x5919 + x6744 + x7813 + x8379 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x1042 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[812] =
    -sc[12] * x8446 + sc[16] * x8476 - 24600000.0 * sc[33] * x744 +
    24600000.0 * sc[33] * x752 - 80000000.0 * sc[3] * x699 +
    80000000.0 * sc[3] * x904 + 19.2 * sc[3] * exp(x41) -
    30000000.0 * sc[4] * x744 + 30000000.0 * sc[4] * x752 +
    20000000.0 * sc[9] * x35 - 33000000.0 * sc[9] * x744 +
    33000000.0 * sc[9] * x752 + x2527 - x271 * x744 + x271 * x752 + x4874 -
    x681 * x699 + x681 * x904 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x1052 + x1057) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-15000000.0 * sc[3] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (-20000000.0 * sc[9] * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[852] =
    -sc[12] * x6023 + sc[16] * x8478 + 24600000.0 * sc[33] * x750 +
    15000000.0 * sc[3] * x518 + 80000000.0 * sc[3] * x882 +
    30000000.0 * sc[4] * x750 + 33000000.0 * sc[9] * x750 + x271 * x750 +
    x3228 + x3735 + x5919 + x6744 + x681 * x882 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x1061 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[892] =
    -24600000.0 * sc[33] * x776 + 24600000.0 * sc[33] * x781 +
    20000000.0 * sc[9] * x51 - 33000000.0 * sc[9] * x776 +
    33000000.0 * sc[9] * x781 - x271 * x776 + x271 * x781 + x5046 + x5058 -
    x681 * x909 + x681 * x910 + x8379 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x126 - x308) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-15000000.0 * sc[3] * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (-20000000.0 * sc[9] * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[932] =
    -24600000.0 * sc[33] * x785 + 24600000.0 * sc[33] * x793 -
    80000000.0 * sc[3] * x684 + 80000000.0 * sc[3] * x768 +
    15000000.0 * sc[3] * x923 - 30000000.0 * sc[4] * x785 +
    30000000.0 * sc[4] * x793 - 33000000.0 * sc[9] * x785 +
    33000000.0 * sc[9] * x793 - x271 * x785 + x271 * x793 + x3228 -
    x681 * x684 + x681 * x768 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x303 + x310) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-15000000.0 * sc[3] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[972] =
    24600000.0 * sc[33] * x801 + 80000000.0 * sc[3] * x772 +
    15000000.0 * sc[3] * x925 + 30000000.0 * sc[4] * x801 +
    20000000.0 * sc[9] * x609 + 33000000.0 * sc[9] * x801 + x2527 +
    x271 * x801 + x3228 + x3735 + x5919 + x6744 + x681 * x772 + x8379 + x8416 +
    x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x325 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1012] =
    90000000.0 * sc[2] + x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1052] =
    x8422 + 36300000000000.0 * exp(-28783.993284029999 * invT) +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1092] =
    24600000.0 * sc[33] * x803 + 30000000.0 * sc[4] * x803 +
    33000000.0 * sc[9] * x803 + x271 * x803 + x3229 + x3736 + x5919 + x8416 +
    x8421 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x326 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1132] =
    -60000000.0 * sc[12] + 24600000.0 * sc[33] * x826 +
    80000000.0 * sc[3] * x911 + 15000000.0 * sc[3] * x927 +
    30000000.0 * sc[4] * x826 + 33000000.0 * sc[9] * x826 + x271 * x826 +
    x3228 + x3735 + x5919 + x6744 + x681 * x911 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x336 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1172] =
    sc[16] * x8472 + x6253 + x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1212] =
    -sc[12] * x6019 + x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1252] =
    x6256 + x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1292] =
    -24600000.0 * sc[12] * x574 + 24600000.0 * sc[33] * x816 +
    30000000.0 * sc[4] * x816 + 33000000.0 * sc[9] * x816 + x271 * x816 +
    x3229 + x3736 + x5919 + x8416 + x8421 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x476 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1332] =
    -24600000.0 * sc[33] * x818 + 24600000.0 * sc[33] * x849 +
    80000000.0 * sc[3] * x285 - 80000000.0 * sc[3] * x493 -
    30000000.0 * sc[4] * x818 + 30000000.0 * sc[4] * x849 -
    33000000.0 * sc[9] * x818 + 33000000.0 * sc[9] * x849 + 24600000.0 * x148 -
    x271 * x818 + x271 * x849 + x285 * x681 - x493 * x681 + x5420 + x8385 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x257 + x356) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-15000000.0 * sc[3] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (-20000000.0 * sc[9] * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1372] =
    x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1412] =
    24600000.0 * sc[33] * x863 + 80000000.0 * sc[3] * x357 +
    15000000.0 * sc[3] * x933 + 30000000.0 * sc[4] * x863 +
    33000000.0 * sc[9] * x863 + x271 * x863 + x3228 + x357 * x681 + x3735 +
    x5919 + x6744 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x367 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1452] =
    24600000.0 * sc[33] * x354 + 80000000.0 * sc[3] * x358 +
    15000000.0 * sc[3] * x934 + 30000000.0 * sc[4] * x354 +
    33000000.0 * sc[9] * x354 + x271 * x354 + x3228 + x358 * x681 + x3735 +
    x5919 + x6744 + x8385 + x8416 + x8419 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x402 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1492] =
    24600000.0 * sc[33] * x363 + 30000000.0 * sc[4] * x363 +
    33000000.0 * sc[9] * x363 + x271 * x363 + x3229 + x3736 + x5919 + x8416 +
    x8421 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (x466 - x877) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1532] =
    x8422 +
    (-24600000.0 * sc[33] * x234 - 30000000.0 * sc[4] * x234 -
     33000000.0 * sc[9] * x234 - x234 * x271) *
      (-x877 + x887) +
    (-15000000.0 * sc[3] * x220 + 80000000.0 * sc[3] * x235 + x235 * x681) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-15000000.0 * sc[3] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-20000000.0 * sc[9] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[13] =
    -sc[12] * sc[2] * x2034 * x2035 * x27 + sc[13] * x2034 * x2075 +
    3549000000000000.0 * sc[16] * sc[6] * x7328 * exp(x7324) +
    14000000.0 * sc[17] * x283 - 14000000.0 * sc[17] * x344 -
    20000000.0 * sc[5] * x349 + 20000000.0 * sc[5] * x362 +
    4.1845186046511603e+29 * x1046 * x7311 -
    4.1845186046511603e+29 * x1046 * x7312 - 945000000000.0 * x2033 * x2079 -
    1.1704128440366999e+18 * x2041 * x2044 +
    1.1704128440366999e+18 * x2041 * x2057 + 945000000000.0 * x2052 + x2245 -
    x255 * x624 + x349 * x368 - x362 * x368 + x371 * x624 -
    3549000000000000.0 * x7315 * x7328 + x7322 * x7331 - x7322 * x7340 +
    (x234 * x624 - x234 * x691) * (-x607 + x659) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[53] =
    -14000000.0 * sc[17] * x627 + 14000000.0 * sc[17] * x650 -
    20000000.0 * sc[5] * x317 + 20000000.0 * sc[5] * x680 + x2244 + x2453 +
    x317 * x368 - x368 * x680 - x468 * x624 + x606 * x624 + x7361 +
    (x234 * x624 - x234 * x691) * (-x687 + x709) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[93] =
    sc[12] * x2035 * x27 + 20000000.0 * sc[14] - 14000000.0 * sc[17] * x666 +
    14000000.0 * sc[17] * x671 + sc[24] * x2791 + 20000000.0 * sc[5] * x677 -
    20000000.0 * sc[5] * x685 + x2244 + x2849 - x368 * x677 + x368 * x685 +
    x612 * x624 - x616 * x624 + x7361 +
    (x234 * x624 - x234 * x691) * (-x723 + x730) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[133] =
    -sc[13] * x5733 + 10000000.0 * sc[14] - 14000000.0 * sc[17] * x679 +
    14000000.0 * sc[17] * x696 + 0.384 * sc[20] * exp(x41) +
    16040000.0 * sc[21] + 96000000.0 * sc[30] + 20000000.0 * sc[5] * x166 -
    20000000.0 * sc[5] * x706 - x166 * x368 + x2244 + x2998 + x368 * x706 +
    x622 * x624 - x624 * x630 + x7361 +
    (x234 * x624 - x234 * x691) * (-x739 + x743) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[173] =
    sc[12] * x5820 - sc[13] * x437 * x6492 + 5000000.0 * sc[14] -
    14000000.0 * sc[17] * x700 + 14000000.0 * sc[17] * x701 -
    sc[19] * x6535 * x6563 + x131 * x624 + x2244 + x3127 + x368 * x721 -
    x368 * x728 - x624 * x633 - x6537 + x6585 + x7361 +
    (x234 * x624 - x234 * x691) * (-x756 + x763) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[213] =
    sc[12] * x7143 - 1000000.0 * sc[13] * x2786 - sc[13] * x7172 +
    14000000.0 * sc[17] * x617 + 30000000.0 * sc[4] * x617 -
    20000000.0 * sc[4] * x736 + 20000000.0 * sc[4] * x737 - x176 * x624 +
    x176 * x691 + x3239 + x368 * x736 - x368 * x737 + x624 * x643 -
    x643 * x691 + x6624 + x7121 + x7361 + x8568 +
    (x234 * x624 - x234 * x691) * (-x782 + x794) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[253] =
    -sc[13] * x3314 + 5070000000000000.0 * sc[16] * x27 * x7328 * exp(x7324) -
    14000000.0 * sc[17] * x726 + 14000000.0 * sc[17] * x732 -
    20000000.0 * sc[5] * x741 + 20000000.0 * sc[5] * x748 + x207 * x624 +
    x3377 + x3458 + x368 * x741 - x368 * x748 - x624 * x653 + x7412 +
    (x234 * x624 - x234 * x691) * (-x829 + x843) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[293] =
    sc[12] * x143 - sc[13] * x6679 - 14000000.0 * sc[17] * x733 +
    14000000.0 * sc[17] * x740 - 20000000.0 * sc[5] * x751 +
    20000000.0 * sc[5] * x760 - 18000.0 * sc[9] * x6535 * x7180 +
    3.5867302325581401e+30 * x1046 * x7311 -
    3.5867302325581401e+30 * x1046 * x7312 + x159 * x624 -
    x2029 * (1.68 * x2064 * x240 + 12.0 * x2065 * x240) -
    8100000000000.0 * x2033 * x2079 - 1.0032110091743101e+19 * x2041 * x2044 +
    1.0032110091743101e+19 * x2041 * x2057 + 8100000000000.0 * x2052 +
    x2520 * (1.68 * x2064 * x240 + 12.0 * x2065 * x240) + x368 * x751 -
    x368 * x760 + x3687 - x370 * x624 - 3.042e+16 * x7315 * x7328 +
    x7321 * x7331 * x7429 - x7321 * x7340 * x7429 + 3.042e+16 * x7338 +
    (x234 * x624 - x234 * x691) * (-x864 + x871) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[333] =
    sc[12] * x7191 + x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[373] =
    sc[10] * x6782 - sc[13] * x7217 - 1046.0 * sc[13] * x7769 -
    14000000.0 * sc[17] * x745 + 14000000.0 * sc[17] * x747 + 18000.0 * sc[25] +
    20000000.0 * sc[5] * x145 - 20000000.0 * sc[5] * x840 -
    18000.0 * sc[7] * x6535 * x7180 - x145 * x368 + x2244 + x368 * x840 +
    x3870 + x624 * x674 - x624 * x676 + x7220 + x7361 + x7775 +
    (x234 * x624 - x234 * x691) * (-x898 + x903) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[413] =
    -sc[13] * x5976 - 14000000.0 * sc[17] * x759 + 14000000.0 * sc[17] * x767 +
    20000000.0 * sc[5] * x856 - 20000000.0 * sc[5] * x862 + sc[9] * x6782 +
    x2244 - x368 * x856 + x368 * x862 + x3976 + x624 * x686 - x624 * x689 -
    x6795 + x7361 - x8141 + (x234 * x624 - x234 * x691) * (-x912 + x918) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[453] =
    sc[12] * x2340 - 14000000.0 * sc[17] * x786 + 14000000.0 * sc[17] * x809 -
    20000000.0 * sc[5] * x861 + 20000000.0 * sc[5] * x875 - x292 * x624 +
    x3458 + x368 * x861 - x368 * x875 + x4067 + x624 * x693 + x7412 +
    (x234 * x624 - x234 * x691) * (-x929 + x935) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[493] =
    sc[11] * x2340 - sc[13] * x7785 + 14000000.0 * sc[17] * x330 +
    30000000.0 * sc[4] * x330 + sc[4] * x5820 + 20000000.0 * sc[4] * x780 +
    sc[5] * x7143 + 20000000.0 * sc[5] * x780 + sc[6] * x3374 + sc[7] * x143 +
    sc[8] * x7191 + x2035 * x956 - x368 * x780 + x3759 - x624 * x704 + x6747 +
    x691 * x704 + x8568 + x8581 + (x234 * x624 - x234 * x691) * (-x877 + x945) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[533] =
    -sc[10] * x5976 - sc[12] * x7785 - 14000000.0 * sc[16] * x417 +
    14000000.0 * sc[17] * x851 - sc[21] * x6035 - sc[3] * x5733 -
    1000000.0 * sc[5] * x2786 - sc[5] * x7172 - sc[6] * x3314 - sc[7] * x6679 -
    sc[9] * x7217 - 1046.0 * sc[9] * x7769 -
    94600000.0 * x148 * exp(259.15658288943098 * invT) - x2075 - x217 * x821 +
    x3239 + x368 * x879 - x368 * x880 + x4229 + x624 * x705 - x624 * x708 -
    x6844 - x6853 + x6866 - x7237 - x7330 + x7361 - x8189 + x8568 +
    (x234 * x624 - x234 * x691) * (-x953 + x958) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[573] =
    14000000.0 * sc[17] * x859 + 20000000.0 * sc[2] + 10000000.0 * sc[3] +
    30000000.0 * sc[4] * x859 + 20000000.0 * sc[4] * x884 + 5000000.0 * sc[4] +
    20000000.0 * sc[5] * x884 + 2.2e+18 * x2200 * x2204 * x88 - x368 * x884 +
    x3759 - x624 * x710 + x6747 + x691 * x710 + x7243 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (-x877 + x962) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[613] =
    14000000.0 * sc[17] * x867 + 30000000.0 * sc[4] * x867 +
    20000000.0 * sc[4] * x886 + 20000000.0 * sc[5] * x886 -
    1046.0 * sc[9] * x6535 * x7768 - x368 * x886 + x3759 - x624 * x711 + x6747 +
    x691 * x711 + x8568 + x8581 + (x234 * x624 - x234 * x691) * (-x877 + x969) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[653] =
    2025000000000.0 * sc[12] * sc[2] * x2033 * exp(x2048) -
    14000000.0 * sc[13] * x417 - 14000000.0 * sc[17] * x341 +
    14000000.0 * sc[17] * x343 - sc[4] * x6492 * x6535 -
    20000000.0 * sc[5] * x889 + 20000000.0 * sc[5] * x893 +
    5070000000000000.0 * sc[6] * x27 * x7328 * exp(x7324) +
    8.9668255813953501e+29 * x1046 * x7311 -
    8.9668255813953501e+29 * x1046 * x7312 -
    x2029 * (0.42 * x2064 * x240 + 3.0 * x2065 * x240) -
    2025000000000.0 * x2033 * x2079 - 2.5080275229357798e+18 * x2041 * x2044 +
    2.5080275229357798e+18 * x2041 * x2057 +
    x2520 * (0.42 * x2064 * x240 + 3.0 * x2065 * x240) + x368 * x889 -
    x368 * x893 + x4500 + x624 * x713 - x624 * x719 -
    7605000000000000.0 * x7315 * x7328 + x7321 * x7331 * x7464 -
    x7321 * x7340 * x7464 + 7605000000000000.0 * x7338 +
    (x234 * x624 - x234 * x691) * (x593 - x993) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[693] =
    14000000.0 * sc[17] * x1 - 14000000.0 * sc[17] * x890 -
    20000000.0 * sc[5] * x894 + 20000000.0 * sc[5] * x897 + 14000000.0 * x12 -
    x155 * x624 + x368 * x894 - x368 * x897 + x4625 + x624 * x722 + x7412 +
    (x234 * x624 - x234 * x691) * (-x1014 + x839) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[733] =
    -14000000.0 * sc[17] * x892 + 14000000.0 * sc[17] * x900 +
    20000000.0 * sc[5] * x872 - 20000000.0 * sc[5] * x902 + x2244 -
    x368 * x872 + x368 * x902 + x4707 + x624 * x731 - x624 * x738 + x7361 +
    (x234 * x624 - x234 * x691) * (-x1027 + x1036) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[773] =
    14000000.0 * sc[17] * x905 + 20000000.0 * sc[4] * x214 -
    sc[4] * x6535 * x6563 + 30000000.0 * sc[4] * x905 +
    20000000.0 * sc[5] * x214 - x214 * x368 + x3759 - x624 * x742 + x6747 +
    x691 * x742 + x7813 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x1042 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[813] =
    -14000000.0 * sc[17] * x906 + 14000000.0 * sc[17] * x915 +
    0.384 * sc[3] * exp(x41) - 20000000.0 * sc[5] * x699 +
    20000000.0 * sc[5] * x904 + x2244 + x368 * x699 - x368 * x904 + x4886 +
    x624 * x744 - x624 * x752 + x7361 +
    (x234 * x624 - x234 * x691) * (-x1052 + x1057) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[853] =
    -sc[13] * x6035 + 14000000.0 * sc[17] * x518 + 16040000.0 * sc[3] +
    30000000.0 * sc[4] * x518 + 20000000.0 * sc[4] * x882 +
    20000000.0 * sc[5] * x882 + 24000000.0 * sc[5] - x368 * x882 + x3759 -
    x624 * x750 - x6534 + x6747 + x691 * x750 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x1061 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[893] =
    -14000000.0 * sc[17] * x919 + 14000000.0 * sc[17] * x920 -
    20000000.0 * sc[5] * x909 + 20000000.0 * sc[5] * x910 +
    1.79336511627907e+30 * x1046 * x7311 -
    1.79336511627907e+30 * x1046 * x7312 -
    x2029 * (0.84 * x2064 * x240 + 6.0 * x2065 * x240) -
    4050000000000.0 * x2033 * x2079 - 5.0160550458715597e+18 * x2041 * x2044 +
    5.0160550458715597e+18 * x2041 * x2057 + 4050000000000.0 * x2052 +
    x2520 * (0.84 * x2064 * x240 + 6.0 * x2065 * x240) + x368 * x909 -
    x368 * x910 + x5087 + x624 * x776 - x624 * x781 -
    1.521e+16 * x7315 * x7328 + x7316 * x7331 - x7316 * x7340 +
    1.521e+16 * x7338 + (x234 * x624 - x234 * x691) * (x126 - x308) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[933] =
    14000000.0 * sc[17] * x923 - 20000000.0 * sc[5] * x684 +
    20000000.0 * sc[5] * x768 + x3239 + x368 * x684 - x368 * x768 + x5178 +
    x624 * x785 - x624 * x793 + x7361 + x8568 +
    (x234 * x624 - x234 * x691) * (-x303 + x310) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[973] =
    14000000.0 * sc[17] * x925 + sc[2] * x2791 + 20000000.0 * sc[4] * x772 +
    30000000.0 * sc[4] * x925 + 20000000.0 * sc[5] * x772 - x368 * x772 +
    x3759 - x624 * x801 + x6747 + x691 * x801 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x325 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1013] =
    18000.0 * sc[9] + x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1053] =
    x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1093] =
    x3760 - x624 * x803 + x691 * x803 + x8582 +
    (x234 * x624 - x234 * x691) * (x326 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1133] =
    14000000.0 * sc[17] * x927 + 20000000.0 * sc[4] * x911 +
    30000000.0 * sc[4] * x927 + 20000000.0 * sc[5] * x911 + 6600000.0 * sc[5] -
    x368 * x911 + x3759 - x624 * x826 + x6747 + x691 * x826 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x336 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1173] =
    x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1213] =
    96000000.0 * sc[3] + 24000000.0 * sc[5] + x8584 +
    (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1253] =
    x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1293] =
    x3760 - x624 * x816 + x691 * x816 + x8582 +
    (x234 * x624 - x234 * x691) * (x476 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1333] =
    -14000000.0 * sc[17] * x928 + 14000000.0 * sc[17] * x932 +
    20000000.0 * sc[5] * x285 - 20000000.0 * sc[5] * x493 + x2244 -
    x285 * x368 + x368 * x493 + x5435 + x624 * x818 - x624 * x849 + x7361 +
    (x234 * x624 - x234 * x691) * (-x257 + x356) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1373] =
    x8584 + (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1413] =
    14000000.0 * sc[17] * x933 + 20000000.0 * sc[4] * x357 +
    30000000.0 * sc[4] * x933 + 20000000.0 * sc[5] * x357 - x357 * x368 +
    x3759 - x624 * x863 + x6747 + x691 * x863 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x367 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1453] =
    14000000.0 * sc[17] * x934 + 20000000.0 * sc[4] * x358 +
    30000000.0 * sc[4] * x934 + 20000000.0 * sc[5] * x358 - x354 * x624 +
    x354 * x691 - x358 * x368 + x3759 + x6747 + x8568 + x8581 +
    (x234 * x624 - x234 * x691) * (x402 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1493] =
    -x363 * x624 + x363 * x691 + x3760 + x8582 +
    (x234 * x624 - x234 * x691) * (x466 - x877) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1533] =
    2092.0 * sc[38] * exp(1806.0446135731399 * invT) + x7278 + x8584 +
    (x234 * x624 - x234 * x691) * (-x877 + x887) +
    (-14000000.0 * sc[17] * x220 - 30000000.0 * sc[4] * x220 +
     20000000.0 * sc[4] * x235 + 20000000.0 * sc[5] * x235 - x235 * x368) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-14000000.0 * sc[17] * x117 - 30000000.0 * sc[4] * x117) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[14] = x1756 + x283 * x999 - x344 * x999 + x8640 +
          (-x220 * x999) * (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-x117 * x999) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[54] = x1756 - x627 * x999 + x650 * x999 + x8640 +
          (-x220 * x999) * (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-x117 * x999) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[94] = sc[13] * x2202 * x88 + 96000000.0 * sc[38] + x1756 + x2587 + x2730 +
          x8640 + (-x220 * x999) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
          (-x117 * x999) *
            (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[134] = -sc[14] * x5742 - 10000000.0 * sc[14] + 36000000.0 * sc[38] + x1756 +
           x5726 - x679 * x999 + x696 * x999 + x8640 +
           (-x220 * x999) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-x117 * x999) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[174] =
    sc[10] * x3085 + sc[15] * x6487 + x1756 + x5807 + x6527 - x700 * x999 +
    x701 * x999 + x8640 +
    (-x220 * x999) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x999) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[214] = 13400000.0 * sc[10] + sc[13] * x7172 + x8643 +
           (-x220 * x999) * (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-x117 * x999) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[254] =
    sc[13] * x3314 - sc[14] * x3256 + x3420 - x726 * x999 + x732 * x999 +
    x8644 + (-x220 * x999) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x999) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[294] =
    sc[13] * x6679 - 6.3 * sc[14] * x6687 + 1.32e+19 * x2200 * x2226 -
    1.32e+19 * x2200 * x2236 - x2203 * (1.68 * x2222 + 12.0 * x2223) +
    5.3777777777777801e+31 * x2210 * x2215 -
    5.3777777777777801e+31 * x2210 * x2218 +
    x2239 * (1.68 * x2222 + 12.0 * x2223) + x3566 +
    (-x220 * x999) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x999) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[334] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-x117 * x999) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[374] = sc[10] * x5950 - 154820.0 * ((sc[14]) * (sc[14])) * x7764 -
           sc[14] * x5946 + x1756 - x7220 - x745 * x999 + x747 * x999 + x8640 +
           (-x220 * x999) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-x117 * x999) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[414] = sc[15] * x8102 + 2000000.0 * sc[38] * x8092 + sc[4] * x3085 +
           13400000.0 * sc[5] + sc[9] * x5950 + x1756 - x759 * x999 +
           x767 * x999 + x8089 + x8640 +
           (-x220 * x999) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-x117 * x999) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[454] = -sc[14] * x8162 + x3420 - x786 * x999 + x809 * x999 + x8644 +
           (-x220 * x999) * (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-x117 * x999) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[494] =
    x330 * x999 + x8642 +
    (-x220 * x999) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x999) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[534] =
    sc[2] * x2202 * x88 + sc[5] * x7172 + sc[6] * x3314 + sc[7] * x6679 +
    x2132 + x851 * x999 + x8642 +
    (-x220 * x999) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x999) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[574] =
    -sc[11] * x8162 - 309640.0 * sc[14] * sc[9] * x7764 -
    8.6e+16 * sc[2] * x1723 * x966 - 68000000.0 * sc[2] - sc[33] * x8192 -
    sc[34] * x8648 - sc[3] * x5742 - 10000000.0 * sc[3] - sc[6] * x3256 -
    6.3 * sc[7] * x6687 - sc[9] * x5946 - 2.2e+18 * x2200 * x2204 * x88 +
    x6873 - x7243 - 4000000.0 * x8194 + x859 * x999 + x8642 +
    (-x220 * x999) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x999) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[614] =
    8.6e+16 * refC * x1729 * x88 + sc[10] * x8102 + sc[4] * x6487 + x4292 +
    x6074 + x8642 + x867 * x999 +
    (-x220 * x999) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x999) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[654] = -sc[13] * sc[2] * x2202 * x2225 * x88 + x1718 +
           2.2e+18 * x2200 * x2225 * x2236 * x88 + 3.3e+18 * x2200 * x2226 -
           3.3e+18 * x2200 * x2236 + 1.3444444444444401e+31 * x2210 * x2215 -
           1.3444444444444401e+31 * x2210 * x2218 +
           (-x220 * x999) * (-x713 + x719 + (-x234) * (x593 - x993)) +
           (-x117 * x999) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[694] =
    x1 * x999 + x3420 + x8644 - x890 * x999 +
    (-x220 * x999) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x999) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[734] =
    x1756 + x8640 - x892 * x999 + x900 * x999 +
    (-x220 * x999) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x999) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[774] = x8642 + x905 * x999 +
           (-x220 * x999) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-x117 * x999) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[814] =
    x1756 + x8640 - x906 * x999 + x915 * x999 +
    (-x220 * x999) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x999) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[854] =
    x518 * x999 + x8642 +
    (-x220 * x999) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x999) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[894] = 6.6e+18 * x2200 * x2226 - 6.6e+18 * x2200 * x2236 -
           x2203 * (0.84 * x2222 + 6.0 * x2223) +
           2.6888888888888901e+31 * x2210 * x2215 -
           2.6888888888888901e+31 * x2210 * x2218 +
           x2239 * (0.84 * x2222 + 6.0 * x2223) + x5016 +
           (-x220 * x999) * (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-x117 * x999) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[934] =
    x8642 + x923 * x999 +
    (-x220 * x999) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x999) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[974] = x8642 + x925 * x999 +
           (-x220 * x999) * (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-x117 * x999) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1014] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1054] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1094] =
    x8643 + (-x220 * x999) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x999) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1134] =
    x3234 + x8640 + x927 * x999 +
    (-x220 * x999) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x999) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1174] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1214] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1254] = x8643 + (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1294] =
    x8643 + (-x220 * x999) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x999) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1334] =
    -sc[14] * x8192 + 1690000.0 * sc[38] * x982 + x1756 + x8640 - x928 * x999 +
    x932 * x999 + (-x220 * x999) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x999) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1374] = -sc[14] * x8648 + x8319 + x8643 +
            (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1414] = x8642 + x933 * x999 +
            (-x220 * x999) * (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-x117 * x999) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1454] = x8642 + x934 * x999 +
            (-x220 * x999) * (x354 - x657 + (-x234) * (x402 - x877)) +
            (-x117 * x999) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1494] =
    x8643 + (-x220 * x999) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x999) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1534] = 2000000.0 * sc[10] * x8092 + 96000000.0 * sc[2] +
            1690000.0 * sc[33] * x982 +
            309640.0 * sc[38] * exp(30.696216614087898 * invT) +
            36000000.0 * sc[3] + x8643 +
            (-x220 * x999) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x999) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[15] = x1744 + x249 * x283 - x249 * x344 +
          (-x220 * x249) * (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-x117 * x249) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[55] = x1744 - x249 * x627 + x249 * x650 +
          (-x220 * x249) * (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-x117 * x249) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[95] = 8.6e+16 * sc[14] * x1723 * x966 + x1744 - x249 * x666 + x249 * x671 -
          x2587 + (-x220 * x249) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
          (-x117 * x249) *
            (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[135] = x1744 - x249 * x679 + x249 * x696 - x5726 +
           (-x220 * x249) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-x117 * x249) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[175] =
    sc[10] * x6367 * x92 + sc[14] * x5812 - sc[15] * x6487 +
    60000000.0 * sc[38] + x1744 - x249 * x700 + x249 * x701 +
    (-x220 * x249) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x249) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[215] = x7515 + (-x220 * x249) * (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-x117 * x249) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[255] =
    sc[14] * x3256 + x1056 - x249 * x726 + x249 * x732 +
    (-x220 * x249) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x249) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[295] =
    -8.6e+16 * sc[14] * sc[2] * x1723 * x966 * x974 + 6.3 * sc[14] * x6687 +
    1.62e+27 * sc[7] * x12 * x247 * x90 + x12 * x247 * x92 -
    2.187e+46 * x12 * x279 * x7506 + 5.16e+17 * x1726 + x1731 * x88 * x974 +
    8.8752e+26 * x1732 * x1735 - 8.8752e+26 * x1732 * x1751 -
    1.62e+27 * x247 * x429 - x249 * x733 + x249 * x740 - 5.16e+17 * x3409 +
    2.187e+46 * x615 * x7506 + 1.62e+27 * x6369 * x90 +
    6.9428571428571398e+45 * x6376 * x6378 -
    6.9428571428571398e+45 * x6376 * x6381 +
    x6386 * x6397 * (1.68 * x6384 + 12.0 * x6385) - 1.62e+27 * x6395 -
    x6661 * (1.68 * x6384 + 12.0 * x6385) +
    x7520 * (12.0 * x7514 + 1.68 * x7551) -
    x7526 * (12.0 * x7514 + 1.68 * x7551) +
    (-x220 * x249) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x249) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[335] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-x117 * x249) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[375] = -1046.0 * sc[13] * x7769 - sc[15] * x6762 + x1744 - x249 * x745 +
           x249 * x747 +
           (-x220 * x249) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-x117 * x249) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[415] = -sc[15] * x8102 + sc[4] * x6367 * x92 + x1744 - x249 * x759 +
           x249 * x767 +
           (-x220 * x249) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-x117 * x249) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[455] = sc[14] * x8162 + x1056 - x249 * x786 + x249 * x809 +
           (-x220 * x249) * (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-x117 * x249) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[495] =
    x249 * x330 + x6387 +
    (-x220 * x249) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x249) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[535] =
    -1046.0 * sc[9] * x7769 + x249 * x851 + x6387 +
    (-x220 * x249) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x249) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[575] =
    sc[11] * x8162 + 8.6e+16 * sc[2] * x1723 * x966 + sc[4] * x5812 +
    sc[6] * x3256 + 6.3 * sc[7] * x6687 + x249 * x859 + x6387 +
    (-x220 * x249) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x249) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[615] =
    -8.6e+16 * refC * x1729 * x88 - 2.7e+26 * refC * x6370 * x88 -
    sc[10] * x8102 - sc[4] * x6487 - 1046.0 * sc[9] * x6535 * x7768 -
    sc[9] * x6762 - x247 * x965 + x249 * x867 - x4292 - x6074 + x6387 +
    (-x220 * x249) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x249) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[655] = 1.29e+17 * x1726 + 2.2188e+26 * x1732 * x1735 -
           2.2188e+26 * x1732 * x1751 - x1748 * x978 + x1754 * x978 -
           x249 * x341 + x249 * x343 - 1.29e+17 * x3409 +
           5.4675e+45 * x615 * x7506 - x6369 * x6917 * x92 +
           4.05e+26 * x6369 * x90 + 1.73571428571429e+45 * x6376 * x6378 -
           1.73571428571429e+45 * x6376 * x6381 - 4.05e+26 * x6395 +
           x6397 * x6917 + 4.05e+26 * x7510 * x90 - 4.05e+26 * x7517 +
           x7520 * (3.0 * x7514 + 0.42 * x7551) - 5.4675e+45 * x7523 -
           x7526 * (3.0 * x7514 + 0.42 * x7551) +
           (-x220 * x249) * (-x713 + x719 + (-x234) * (x593 - x993)) +
           (-x117 * x249) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[695] =
    x1 * x249 + x1056 - x249 * x890 +
    (-x220 * x249) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x249) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[735] =
    x1744 - x249 * x892 + x249 * x900 +
    (-x220 * x249) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x249) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[775] = x249 * x905 + x6387 +
           (-x220 * x249) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-x117 * x249) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[815] =
    x1744 - x249 * x906 + x249 * x915 +
    (-x220 * x249) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x249) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[855] =
    x249 * x518 + x6387 +
    (-x220 * x249) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x249) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[895] = 2.58e+17 * x1726 + 4.4376e+26 * x1732 * x1735 -
           4.4376e+26 * x1732 * x1751 - x1748 * (6.0 * x1741 + 0.84 * x3412) +
           x1754 * (6.0 * x1741 + 0.84 * x3412) - x249 * x919 + x249 * x920 -
           2.58e+17 * x3409 + 1.0935e+46 * x615 * x7506 +
           8.1e+26 * x6369 * x90 + 3.4714285714285699e+45 * x6376 * x6378 -
           3.4714285714285699e+45 * x6376 * x6381 +
           x6386 * x6397 * (0.84 * x6384 + 6.0 * x6385) - 8.1e+26 * x6395 -
           x6661 * (0.84 * x6384 + 6.0 * x6385) + 8.1e+26 * x7510 * x90 -
           x7510 * x92 * x95 + 2.7e+26 * x7517 * x88 * x95 - 8.1e+26 * x7517 -
           1.0935e+46 * x7523 +
           (-x220 * x249) * (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-x117 * x249) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[935] =
    x249 * x923 + x6387 +
    (-x220 * x249) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x249) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[975] = x249 * x925 + x6387 +
           (-x220 * x249) * (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-x117 * x249) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1015] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1055] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1095] =
    x7515 + (-x220 * x249) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x249) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1135] =
    x249 * x927 + x6387 +
    (-x220 * x249) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x249) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1175] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1215] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1255] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1295] =
    x7515 + (-x220 * x249) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x249) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1335] =
    x1744 - x249 * x928 + x249 * x932 +
    (-x220 * x249) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x249) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1375] = x7515 + (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1415] = x249 * x933 + x6387 +
            (-x220 * x249) * (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-x117 * x249) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1455] = x249 * x934 + x6387 +
            (-x220 * x249) * (x354 - x657 + (-x234) * (x402 - x877)) +
            (-x117 * x249) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1495] =
    x7515 + (-x220 * x249) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x249) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1535] = 2092.0 * sc[38] * exp(1806.0446135731399 * invT) +
            60000000.0 * sc[4] + x7515 +
            (-x220 * x249) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x249) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[16] = -1.883e+21 * sc[16] * x202 + 14000000.0 * sc[17] * x283 -
          14000000.0 * sc[17] * x344 + 50000000.0 * sc[23] * x255 -
          30000000.0 * sc[23] * x349 + 30000000.0 * sc[23] * x362 -
          50000000.0 * sc[23] * x371 - 29000000.0 * sc[33] * x607 +
          29000000.0 * sc[33] * x659 + 40000000.0 * sc[9] * x283 -
          40000000.0 * sc[9] * x344 - 1.883e+16 * x118 * x280 -
          1.013054e+25 * x124 * x634 + x171 * x8676 +
          6.2534197530864195e+36 * x194 * x238 -
          6.2534197530864195e+36 * x194 * x475 + x2028 + x2322 +
          1.013054e+25 * x253 + x255 * x271 - x255 * x297 - x271 * x371 +
          1.883e+16 * x280 * x830 - x283 * x954 + x297 * x371 + x315 * x349 -
          x315 * x362 + x344 * x954 + x349 * x831 - x362 * x831 + x5634 +
          1.883e+21 * x640 * x8664 + x7352 - x8676 * x8680 - x8693 * x8698 +
          x8693 * x8718 + 217000000.0 * x8724 - 217000000.0 * x8730 +
          (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
           x234 * x271 + x234 * x297) *
            (-x607 + x659) +
          (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
           15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
           x235 * x315 - x235 * x831) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
           40000000.0 * sc[9] * x117 + x117 * x954) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[56] = -sc[16] * x47 - 14000000.0 * sc[17] * x627 +
          14000000.0 * sc[17] * x650 - 30000000.0 * sc[23] * x317 +
          50000000.0 * sc[23] * x468 - 50000000.0 * sc[23] * x606 +
          30000000.0 * sc[23] * x680 - 29000000.0 * sc[33] * x687 +
          29000000.0 * sc[33] * x709 + 57000000.0 * sc[3] * x468 -
          57000000.0 * sc[3] * x606 - 50000000.0 * sc[4] * x687 +
          50000000.0 * sc[4] * x709 - 40000000.0 * sc[9] * x627 +
          40000000.0 * sc[9] * x650 + x2429 + x271 * x468 - x271 * x606 -
          x297 * x468 + x297 * x606 + x315 * x317 - x315 * x680 + x317 * x831 -
          x5609 * x687 + x5609 * x709 + x627 * x954 - x650 * x954 -
          x680 * x831 + x8748 + x8772 +
          (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
           x234 * x271 + x234 * x297) *
            (-x687 + x709) +
          (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
           15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
           x235 * x315 - x235 * x831) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
           40000000.0 * sc[9] * x117 + x117 * x954) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[96] = 120000000.0 * sc[12] + sc[17] * x2711 + sc[17] * x2714 -
          14000000.0 * sc[17] * x666 + 14000000.0 * sc[17] * x671 -
          50000000.0 * sc[23] * x612 + 50000000.0 * sc[23] * x616 +
          30000000.0 * sc[23] * x677 - 30000000.0 * sc[23] * x685 +
          100000000.0 * sc[23] - sc[33] * x2735 * x437 -
          29000000.0 * sc[33] * x723 + 29000000.0 * sc[33] * x730 -
          28000000.0 * sc[4] * x435 * x437 - 40000000.0 * sc[9] * x666 +
          40000000.0 * sc[9] * x671 - 200000000.0 * x227 * x232 - x271 * x612 +
          x271 * x616 + x2781 + x2890 + x297 * x612 - x297 * x616 -
          x315 * x677 + x315 * x685 - x5609 * x723 + x5609 * x730 +
          x666 * x954 - x671 * x954 - x677 * x831 + x685 * x831 + x8748 +
          x8772 +
          (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
           x234 * x271 + x234 * x297) *
            (-x723 + x730) +
          (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
           15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
           x235 * x315 - x235 * x831) *
            (-x612 + x616 + (-x234) * (-x723 + x730)) +
          (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
           40000000.0 * sc[9] * x117 + x117 * x954) *
            (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[136] = 30000000.0 * sc[12] + sc[17] * x5721 - 14000000.0 * sc[17] * x679 +
           14000000.0 * sc[17] * x696 + 4.08 * sc[18] * exp(x97) +
           48000000.0 * sc[19] + 30000000.0 * sc[23] * x166 -
           50000000.0 * sc[23] * x622 + 50000000.0 * sc[23] * x630 -
           30000000.0 * sc[23] * x706 + 200000000.0 * sc[23] -
           29000000.0 * sc[33] * x739 + 29000000.0 * sc[33] * x743 +
           sc[37] * x5688 - 40000000.0 * sc[9] * x679 +
           40000000.0 * sc[9] * x696 - x166 * x315 - x166 * x831 + x2328 -
           x271 * x622 + x271 * x630 + x297 * x622 - x297 * x630 + x3007 +
           x315 * x706 + x5678 + x5793 + x679 * x954 - x696 * x954 +
           x706 * x831 + x8748 + x8772 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x739 + x743) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[176] =
    30200000.0 * sc[12] - sc[13] * x437 * x6492 + sc[17] * x6469 -
    14000000.0 * sc[17] * x700 + 14000000.0 * sc[17] * x701 -
    50000000.0 * sc[23] * x131 + 50000000.0 * sc[23] * x633 -
    30000000.0 * sc[23] * x721 + 30000000.0 * sc[23] * x728 -
    29000000.0 * sc[33] * x756 + 29000000.0 * sc[33] * x763 -
    40000000.0 * sc[9] * x700 + 40000000.0 * sc[9] * x701 - x131 * x271 +
    x131 * x297 - 3200000.0 * x232 * x6498 + x261 + x271 * x633 - x297 * x633 +
    x3075 + x3102 + x315 * x721 - x315 * x728 - x5609 * x756 + x5609 * x763 +
    x6530 + x6589 + x700 * x954 - x701 * x954 + x721 * x831 - x728 * x831 +
    x8748 + x8772 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x756 + x763) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[216] = -sc[16] * x2111 + 14000000.0 * sc[17] * x617 +
           50000000.0 * sc[23] * x176 - 50000000.0 * sc[23] * x643 -
           30000000.0 * sc[23] * x736 + 30000000.0 * sc[23] * x737 -
           29000000.0 * sc[33] * x782 + 29000000.0 * sc[33] * x794 +
           57000000.0 * sc[3] * x176 - 57000000.0 * sc[3] * x643 -
           50000000.0 * sc[4] * x782 + 50000000.0 * sc[4] * x794 +
           40000000.0 * sc[9] * x617 + x176 * x271 - x176 * x297 + x2321 -
           x271 * x643 + x297 * x643 + x315 * x736 - x315 * x737 + x3229 -
           x5609 * x782 + x5609 * x794 + x5648 - x617 * x954 - x6605 +
           x736 * x831 + x7368 - x737 * x831 + x8568 + x8748 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x782 + x794) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[256] =
    -14000000.0 * sc[17] * x726 + 14000000.0 * sc[17] * x732 -
    50000000.0 * sc[23] * x207 + 50000000.0 * sc[23] * x653 -
    30000000.0 * sc[23] * x741 + 30000000.0 * sc[23] * x748 -
    29000000.0 * sc[33] * x829 + 29000000.0 * sc[33] * x843 -
    40000000.0 * sc[9] * x726 + 40000000.0 * sc[9] * x732 + x113 - x207 * x271 +
    x207 * x297 + x271 * x653 - x297 * x653 + x315 * x741 - x315 * x748 +
    x3401 + x5890 + x726 * x954 - x732 * x954 + x741 * x831 + x7419 -
    x748 * x831 + x8835 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x829 + x843) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[296] =
    -1.614e+22 * sc[16] * x202 - 12000000.0 * sc[16] * x411 - sc[16] * x6716 -
    14000000.0 * sc[17] * x733 + 14000000.0 * sc[17] * x740 -
    50000000.0 * sc[23] * x159 + 50000000.0 * sc[23] * x370 -
    30000000.0 * sc[23] * x751 + 30000000.0 * sc[23] * x760 -
    29000000.0 * sc[33] * x864 + 29000000.0 * sc[33] * x871 -
    40000000.0 * sc[9] * x733 + 40000000.0 * sc[9] * x740 -
    1.614e+17 * x118 * x280 - 8.68332e+25 * x124 * x634 - x159 * x271 +
    x159 * x297 + x171 * x7415 + 5.3600740740740798e+37 * x194 * x238 -
    5.3600740740740798e+37 * x194 * x475 + 8.68332e+25 * x253 + x271 * x370 +
    1.614e+17 * x280 * x830 - x297 * x370 + x315 * x751 - x315 * x760 + x3622 +
    x3695 + x5914 + 1.614e+22 * x640 * x8664 + x733 * x954 - x740 * x954 -
    x7415 * x8680 + x7438 + x751 * x831 - x760 * x831 - x8698 * x8868 +
    x8718 * x8868 + 1860000000.0 * x8724 - 1860000000.0 * x8730 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x864 + x871) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[336] = x8905 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x877 + x887) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[376] = -14000000.0 * sc[17] * x745 + 14000000.0 * sc[17] * x747 +
           30000000.0 * sc[23] * x145 - 50000000.0 * sc[23] * x674 +
           50000000.0 * sc[23] * x676 + 3200000.0 * sc[23] * x6767 -
           30000000.0 * sc[23] * x840 + 18000.0 * sc[25] -
           29000000.0 * sc[33] * x898 + 29000000.0 * sc[33] * x903 -
           57000000.0 * sc[3] * x674 + 57000000.0 * sc[3] * x676 -
           50000000.0 * sc[4] * x898 + 50000000.0 * sc[4] * x903 -
           40000000.0 * sc[9] * x745 + 40000000.0 * sc[9] * x747 +
           40000000.0 * x12 - x145 * x315 - x145 * x831 +
           58000000.0 * x258 * exp(-289.85279950351901 * invT) - x271 * x674 +
           x271 * x676 + x297 * x674 - x297 * x676 + x315 * x840 + x3847 -
           x5609 * x898 + x5609 * x903 - x5949 + x7224 + x745 * x954 -
           x747 * x954 + x831 * x840 + x8748 + x8772 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x898 + x903) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[416] = 8480000.0 * sc[12] - 14000000.0 * sc[17] * x759 +
           14000000.0 * sc[17] * x767 - 50000000.0 * sc[23] * x686 +
           50000000.0 * sc[23] * x689 + 30000000.0 * sc[23] * x856 -
           30000000.0 * sc[23] * x862 + 50000000.0 * sc[23] -
           29000000.0 * sc[33] * x912 + 29000000.0 * sc[33] * x918 -
           57000000.0 * sc[3] * x686 + 57000000.0 * sc[3] * x689 -
           50000000.0 * sc[4] * x912 + 50000000.0 * sc[4] * x918 -
           40000000.0 * sc[9] * x759 + 40000000.0 * sc[9] * x767 - x271 * x686 +
           x271 * x689 + x297 * x686 - x297 * x689 - x315 * x856 + x315 * x862 +
           x3960 - x5609 * x912 + x5609 * x918 + x759 * x954 - x767 * x954 +
           x8153 - x831 * x856 + x831 * x862 + x8748 + x8772 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x912 + x918) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[456] = -sc[16] * x8165 - 14000000.0 * sc[17] * x786 +
           14000000.0 * sc[17] * x809 + 50000000.0 * sc[23] * x292 -
           50000000.0 * sc[23] * x693 - 30000000.0 * sc[23] * x861 +
           30000000.0 * sc[23] * x875 - 29000000.0 * sc[33] * x929 +
           29000000.0 * sc[33] * x935 + 57000000.0 * sc[3] * x292 -
           57000000.0 * sc[3] * x693 - 50000000.0 * sc[4] * x929 +
           50000000.0 * sc[4] * x935 - 40000000.0 * sc[9] * x786 +
           40000000.0 * sc[9] * x809 + x113 + x2321 + x271 * x292 -
           x271 * x693 - x292 * x297 + x297 * x693 + x315 * x861 - x315 * x875 +
           x4051 - x437 * x8354 - x5609 * x929 + x5609 * x935 + x5648 +
           x786 * x954 - x809 * x954 + x831 * x861 - x831 * x875 + x8835 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (-x929 + x935) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[496] =
    8480000.0 * sc[10] - sc[16] * x8456 + 14000000.0 * sc[17] * x330 +
    sc[18] * x8439 + 90330000.0 * sc[19] + sc[20] * x8446 +
    50000000.0 * sc[23] * x704 + 30000000.0 * sc[23] * x780 +
    60000000.0 * sc[28] + 120000000.0 * sc[2] + 29000000.0 * sc[33] * x945 +
    30000000.0 * sc[3] + 30200000.0 * sc[4] + 40000000.0 * sc[9] * x330 +
    x271 * x704 - x297 * x704 - x315 * x780 - x330 * x954 + x4143 +
    x5609 * x945 + x7236 - x780 * x831 + x8416 + x8568 + x8953 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x877 + x945) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[536] =
    -14000000.0 * sc[16] * x417 + 14000000.0 * sc[17] * x851 -
    50000000.0 * sc[23] * x705 + 50000000.0 * sc[23] * x708 -
    30000000.0 * sc[23] * x879 + 30000000.0 * sc[23] * x880 -
    29000000.0 * sc[33] * x953 + 29000000.0 * sc[33] * x958 -
    sc[4] * x437 * x6492 + 40000000.0 * sc[9] * x851 + x2321 - x271 * x705 +
    x271 * x708 + x297 * x705 - x297 * x708 + x315 * x879 - x315 * x880 +
    x3228 + x4217 - x5609 * x953 + x5609 * x958 + x5648 + x7330 + x7368 +
    x831 * x879 - x831 * x880 - x851 * x954 + x8568 + x8748 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x953 + x958) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[576] =
    14000000.0 * sc[17] * x859 + 50000000.0 * sc[23] * x710 +
    30000000.0 * sc[23] * x884 + 29000000.0 * sc[33] * x962 +
    57000000.0 * sc[3] * x710 + 15000000.0 * sc[3] * x859 +
    50000000.0 * sc[4] * x962 + 40000000.0 * sc[9] * x859 + x271 * x710 -
    x297 * x710 - x315 * x884 + x3228 + x3742 + x5609 * x962 + x7368 -
    x831 * x884 + x8416 + x8568 - x859 * x954 + x8892 + x8899 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x877 + x962) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[616] =
    14000000.0 * sc[17] * x867 + 50000000.0 * sc[23] * x711 +
    30000000.0 * sc[23] * x886 + 29000000.0 * sc[33] * x969 +
    57000000.0 * sc[3] * x711 + 15000000.0 * sc[3] * x867 +
    50000000.0 * sc[4] * x969 + 40000000.0 * sc[9] * x867 + x271 * x711 -
    x297 * x711 - x315 * x886 + x3228 + x5609 * x969 - x831 * x886 + x8416 +
    x8568 - x867 * x954 + x8953 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x877 + x969) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[656] =
    -refCinv * sc[11] * x8354 - sc[11] * x8165 - 14000000.0 * sc[13] * x417 -
    4.035e+21 * sc[16] * x202 - 14000000.0 * sc[17] * x341 +
    14000000.0 * sc[17] * x343 - 40000000.0 * sc[18] * x437 * x9008 -
    50000000.0 * sc[18] * x580 - sc[1] * x47 - sc[20] * x6078 - sc[20] * x8201 -
    sc[20] * x8476 - sc[21] * x8478 - 50000000.0 * sc[23] * x713 +
    50000000.0 * sc[23] * x719 - sc[29] * x8472 - sc[33] * x6080 -
    sc[33] * x9020 - sc[35] * x8984 - 6400000.0 * sc[4] * x437 * x6498 -
    sc[4] * x6492 * x6535 - sc[5] * x2111 - 12000000.0 * sc[7] * x411 -
    sc[7] * x6716 - 40000000.0 * sc[9] * x341 + 40000000.0 * sc[9] * x343 -
    4.035e+16 * x118 * x280 - 100000000.0 * x12 * x82 - x121 * x148 * x280 -
    2.17083e+25 * x124 * x634 + x171 * x8991 +
    1.34001851851852e+37 * x194 * x238 - 1.34001851851852e+37 * x194 * x475 -
    2.69e+21 * x202 * x27 - x217 * x508 - 400000000.0 * x227 * x2312 +
    2.17083e+25 * x253 + 4.035e+16 * x280 * x830 + x297 * x713 - x297 * x719 +
    x315 * x889 - x315 * x893 + x3344 + x341 * x954 - x343 * x954 - x4336 +
    x4544 - x6082 + x6111 + 4.035e+21 * x640 * x8664 - x6892 + x6909 + x8231 +
    x831 * x889 - x831 * x893 + x8484 - x8680 * x8991 - x8698 * x9000 +
    x8718 * x9000 + x9018 + x9032 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (x593 - x993) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[696] =
    14000000.0 * sc[17] * x1 - 14000000.0 * sc[17] * x890 +
    50000000.0 * sc[23] * x155 - 50000000.0 * sc[23] * x722 -
    30000000.0 * sc[23] * x894 + 30000000.0 * sc[23] * x897 + sc[2] * x2711 +
    sc[2] * x2714 - 29000000.0 * sc[33] * x1014 + 29000000.0 * sc[33] * x839 +
    sc[3] * x5721 + sc[4] * x6469 + 40000000.0 * sc[9] * x1 -
    40000000.0 * sc[9] * x890 - x1 * x954 + x113 + 14000000.0 * x12 -
    x155 * x297 + x297 * x722 + x315 * x894 - x315 * x897 + x4642 + x6134 +
    x831 * x894 - x831 * x897 + x8489 + x8835 + x890 * x954 + x9035 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x1014 + x839) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[736] =
    sc[12] * x8439 - 50000000.0 * sc[16] * x580 - 14000000.0 * sc[17] * x892 +
    14000000.0 * sc[17] * x900 - 50000000.0 * sc[23] * x731 +
    50000000.0 * sc[23] * x738 + 30000000.0 * sc[23] * x872 -
    30000000.0 * sc[23] * x902 - 29000000.0 * sc[33] * x1027 +
    29000000.0 * sc[33] * x1036 - 57000000.0 * sc[3] * x731 +
    57000000.0 * sc[3] * x738 + 4.08 * sc[3] * exp(x97) -
    50000000.0 * sc[4] * x1027 + 50000000.0 * sc[4] * x1036 -
    40000000.0 * sc[9] * x892 + 40000000.0 * sc[9] * x900 - x1027 * x5609 +
    x1036 * x5609 - 20000000.0 * x232 * x9008 - x271 * x731 + x271 * x738 +
    x297 * x731 - x297 * x738 - x315 * x872 + x315 * x902 + x4695 + x6948 -
    x831 * x872 + x831 * x902 + x8748 + x8772 + x892 * x954 - x900 * x954 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x1027 + x1036) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[776] = 90330000.0 * sc[12] - 30000000.0 * sc[16] * x521 - sc[16] * x8474 +
           14000000.0 * sc[17] * x905 + 30000000.0 * sc[23] * x214 +
           50000000.0 * sc[23] * x742 + 29000000.0 * sc[33] * x1042 +
           57000000.0 * sc[3] * x742 + 15000000.0 * sc[3] * x905 +
           48000000.0 * sc[3] + 50000000.0 * sc[4] * x1042 +
           40000000.0 * sc[9] * x905 + x1042 * x5609 - x214 * x315 -
           x214 * x831 + x271 * x742 - x297 * x742 + x3228 + x8416 + x8568 +
           x8953 - x905 * x954 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (x1042 - x877) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[816] =
    sc[12] * x8446 - sc[16] * x6078 - sc[16] * x8201 - sc[16] * x8476 -
    14000000.0 * sc[17] * x906 + 14000000.0 * sc[17] * x915 -
    30000000.0 * sc[23] * x699 - 50000000.0 * sc[23] * x744 +
    50000000.0 * sc[23] * x752 + 30000000.0 * sc[23] * x904 -
    29000000.0 * sc[33] * x1052 + 29000000.0 * sc[33] * x1057 -
    57000000.0 * sc[3] * x744 + 57000000.0 * sc[3] * x752 -
    50000000.0 * sc[4] * x1052 + 50000000.0 * sc[4] * x1057 -
    40000000.0 * sc[9] * x906 + 40000000.0 * sc[9] * x915 - x1052 * x5609 +
    x1057 * x5609 - x271 * x744 + x271 * x752 + x297 * x744 - x297 * x752 +
    x315 * x699 - x315 * x904 + x4874 + x699 * x831 - x831 * x904 + x8748 +
    x8772 + x906 * x954 - x915 * x954 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x1052 + x1057) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[856] =
    -sc[16] * x8478 + 14000000.0 * sc[17] * x518 + 50000000.0 * sc[23] * x750 +
    30000000.0 * sc[23] * x882 + 29000000.0 * sc[33] * x1061 +
    15000000.0 * sc[3] * x518 + 57000000.0 * sc[3] * x750 +
    50000000.0 * sc[4] * x1061 + 40000000.0 * sc[9] * x518 + x1061 * x5609 +
    x271 * x750 - x297 * x750 - x315 * x882 + x3228 - x518 * x954 + x5935 -
    x831 * x882 + x8416 + x8568 + x8898 + x9093 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (x1061 - x877) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[896] = -8.07e+21 * sc[16] * x202 - 14000000.0 * sc[17] * x919 +
           14000000.0 * sc[17] * x920 - 50000000.0 * sc[23] * x776 +
           50000000.0 * sc[23] * x781 - 30000000.0 * sc[23] * x909 +
           30000000.0 * sc[23] * x910 + 29000000.0 * sc[33] * x126 -
           29000000.0 * sc[33] * x308 - 57000000.0 * sc[3] * x776 +
           57000000.0 * sc[3] * x781 + 50000000.0 * sc[4] * x126 -
           50000000.0 * sc[4] * x308 - 40000000.0 * sc[9] * x919 +
           40000000.0 * sc[9] * x920 - 8.07e+16 * x118 * x280 -
           4.34166e+25 * x124 * x634 + x126 * x5609 + x171 * x9101 +
           2.6800370370370399e+37 * x194 * x238 -
           2.6800370370370399e+37 * x194 * x475 + x2321 + 4.34166e+25 * x253 -
           x271 * x776 + x271 * x781 + 8.07e+16 * x280 * x830 + x297 * x776 -
           x297 * x781 - x308 * x5609 + x315 * x909 - x315 * x910 + x5046 +
           x5648 + 8.07e+21 * x640 * x8664 + x7318 + x831 * x909 - x831 * x910 -
           x8680 * x9101 - x8689 * x8698 + x8689 * x8718 + 930000000.0 * x8724 -
           930000000.0 * x8730 + x919 * x954 - x920 * x954 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (x126 - x308) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[936] =
    50000000.0 * sc[10] + 14000000.0 * sc[17] * x923 -
    30000000.0 * sc[23] * x684 + 30000000.0 * sc[23] * x768 -
    50000000.0 * sc[23] * x785 + 50000000.0 * sc[23] * x793 +
    40000000.0 * sc[23] + 100000000.0 * sc[2] - 29000000.0 * sc[33] * x303 +
    29000000.0 * sc[33] * x310 + 15000000.0 * sc[3] * x923 +
    200000000.0 * sc[3] + 3200000.0 * sc[9] * x6767 +
    40000000.0 * sc[9] * x923 + 50000000.0 * x148 + 30000000.0 * x217 + x2321 -
    x271 * x785 + x271 * x793 + x297 * x785 - x297 * x793 - x303 * x5609 +
    x310 * x5609 + x315 * x684 - x315 * x768 + x5190 + x542 + x5648 +
    x684 * x831 + x7368 - x768 * x831 + x8568 + x8691 + x8748 - x923 * x954 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x303 + x310) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[976] = 14000000.0 * sc[17] * x925 + 30000000.0 * sc[23] * x772 +
           50000000.0 * sc[23] * x801 + 29000000.0 * sc[33] * x325 +
           57000000.0 * sc[3] * x801 + 15000000.0 * sc[3] * x925 +
           50000000.0 * sc[4] * x325 + 40000000.0 * sc[9] * x925 + x271 * x801 -
           x297 * x801 - x315 * x772 + x3228 + x325 * x5609 +
           2.69e+21 * x477 * x8664 + x5237 - x772 * x831 + x8416 + x8568 +
           x8953 - x925 * x954 +
           (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
            x234 * x271 + x234 * x297) *
             (x325 - x877) +
           (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
            15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
            x220 * x954 - x235 * x315 - x235 * x831) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
            40000000.0 * sc[9] * x117 + x117 * x954) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1016] = 18000.0 * sc[9] + x8297 + x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1056] = x8905 + 12100000000000.0 * exp(-28783.993284029999 * invT) +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1096] = 50000000.0 * sc[23] * x803 + 29000000.0 * sc[33] * x326 +
            57000000.0 * sc[3] * x803 + 50000000.0 * sc[4] * x326 +
            x271 * x803 - x297 * x803 + x3229 + x326 * x5609 + x3742 + x6240 +
            x8416 + x8892 + x8899 + x8903 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (x326 - x877) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x803 + (-x234) * (x326 - x877)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1136] =
    60000000.0 * sc[12] + 14000000.0 * sc[17] * x927 +
    50000000.0 * sc[23] * x826 + 30000000.0 * sc[23] * x911 +
    29000000.0 * sc[33] * x336 + 57000000.0 * sc[3] * x826 +
    15000000.0 * sc[3] * x927 + 50000000.0 * sc[4] * x336 +
    40000000.0 * sc[9] * x927 + x271 * x826 - x297 * x826 - x315 * x911 +
    x3228 + x336 * x5609 - x831 * x911 + x8416 + x8568 + x8953 - x927 * x954 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (x336 - x877) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1176] = -sc[16] * x8472 + x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1216] = x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1256] = x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1296] = -29000000.0 * sc[16] * x599 + 50000000.0 * sc[23] * x816 +
            29000000.0 * sc[33] * x476 + 20000000.0 * sc[37] +
            57000000.0 * sc[3] * x816 + 50000000.0 * sc[4] * x476 -
            310000000.0 * x27 * x437 * x8728 + x271 * x816 - x297 * x816 +
            x3229 + x3742 + x476 * x5609 + x8416 + x8892 + x8899 + x8903 +
            x9159 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (x476 - x877) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x816 + (-x234) * (x476 - x877)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1336] =
    -sc[16] * x6080 - sc[16] * x9020 - 14000000.0 * sc[17] * x928 +
    14000000.0 * sc[17] * x932 + 30000000.0 * sc[23] * x285 -
    30000000.0 * sc[23] * x493 - 50000000.0 * sc[23] * x818 +
    50000000.0 * sc[23] * x849 - 29000000.0 * sc[33] * x257 +
    29000000.0 * sc[33] * x356 - 57000000.0 * sc[3] * x818 +
    57000000.0 * sc[3] * x849 - 50000000.0 * sc[4] * x257 +
    50000000.0 * sc[4] * x356 - 40000000.0 * sc[9] * x928 +
    40000000.0 * sc[9] * x932 - x2312 * x2735 - x257 * x5609 +
    29000000.0 * x258 - x271 * x818 + x271 * x849 - x285 * x315 - x285 * x831 +
    x297 * x818 - x297 * x849 + x315 * x493 + x356 * x5609 + x493 * x831 +
    x5420 + x8748 + x8772 + x9165 + x928 * x954 - x932 * x954 +
    (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 - x234 * x271 +
     x234 * x297) *
      (-x257 + x356) +
    (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
     15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 + x220 * x954 -
     x235 * x315 - x235 * x831) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
     40000000.0 * sc[9] * x117 + x117 * x954) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1376] = x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1416] = -sc[16] * x8984 + 14000000.0 * sc[17] * x933 +
            30000000.0 * sc[23] * x357 + 50000000.0 * sc[23] * x863 +
            29000000.0 * sc[33] * x367 + 57000000.0 * sc[3] * x863 +
            15000000.0 * sc[3] * x933 + 50000000.0 * sc[4] * x367 +
            40000000.0 * sc[9] * x933 + x271 * x863 - x297 * x863 -
            x315 * x357 + x3228 - x357 * x831 + x367 * x5609 + x5935 + x8416 +
            x8568 + x8898 + x9093 - x933 * x954 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (x367 - x877) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1456] = 14000000.0 * sc[17] * x934 + 50000000.0 * sc[23] * x354 +
            30000000.0 * sc[23] * x358 + 29000000.0 * sc[33] * x402 +
            57000000.0 * sc[3] * x354 + 15000000.0 * sc[3] * x934 +
            50000000.0 * sc[4] * x402 + 40000000.0 * sc[9] * x934 +
            x271 * x354 - x297 * x354 - x315 * x358 + x3228 - x358 * x831 +
            x3742 + x402 * x5609 + x7368 + x8416 + x8568 + x8892 + x8899 -
            x934 * x954 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (x402 - x877) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1496] = 50000000.0 * sc[23] * x363 + 20000000.0 * sc[32] +
            29000000.0 * sc[33] * x466 + 57000000.0 * sc[3] * x363 +
            sc[3] * x5688 + 50000000.0 * sc[4] * x466 +
            310000000.0 * x27 * exp(-27198.860786745099 * invT) + x271 * x363 -
            x297 * x363 + x3229 + x3742 + x466 * x5609 + x5556 + x8416 + x8892 +
            x8899 + x8903 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (x466 - x877) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (x363 - x657 + (-x234) * (x466 - x877)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1536] = x8905 +
            (-50000000.0 * sc[23] * x234 - 57000000.0 * sc[3] * x234 -
             x234 * x271 + x234 * x297) *
              (-x877 + x887) +
            (-14000000.0 * sc[17] * x220 + 30000000.0 * sc[23] * x235 -
             15000000.0 * sc[3] * x220 - 40000000.0 * sc[9] * x220 +
             x220 * x954 - x235 * x315 - x235 * x831) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-14000000.0 * sc[17] * x117 - 15000000.0 * sc[3] * x117 -
             40000000.0 * sc[9] * x117 + x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[17] = -14000000.0 * sc[17] * x283 + 14000000.0 * sc[17] * x344 -
          x255 * x271 + x271 * x371 - x329 * x349 + x329 * x362 + x349 * x67 -
          x362 * x67 - 7.0715881057268703e+19 * x5613 * x5616 +
          7.0715881057268703e+19 * x5613 * x5620 +
          821100000000.0 * x5624 * x5631 - 821100000000.0 * x5628 +
          (x234 * x271) * (-x607 + x659) +
          (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (14000000.0 * sc[17] * x117) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[57] = -sc[17] * x288 + 14000000.0 * sc[17] * x627 -
          14000000.0 * sc[17] * x650 - x271 * x468 + x271 * x606 - x317 * x329 +
          x317 * x67 + x329 * x680 - x67 * x680 + x9202 +
          (x234 * x271) * (-x687 + x709) +
          (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (14000000.0 * sc[17] * x117) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[97] = -5280000.0 * sc[17] * sc[2] * x2628 - sc[17] * x2706 -
          sc[17] * x2711 - sc[17] * x2714 + 14000000.0 * sc[17] * x666 -
          14000000.0 * sc[17] * x671 + x271 * x612 - x271 * x616 + x329 * x677 -
          x329 * x685 - x67 * x677 + x67 * x685 + x9202 +
          (x234 * x271) * (-x723 + x730) +
          (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
            (-x612 + x616 + (-x234) * (-x723 + x730)) +
          (14000000.0 * sc[17] * x117) *
            (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[137] = 30000000.0 * sc[12] + sc[16] * x5788 - sc[17] * x5721 +
           14000000.0 * sc[17] * x679 - 14000000.0 * sc[17] * x696 +
           sc[24] * x5764 + x166 * x329 - x166 * x67 + x271 * x622 -
           x271 * x630 - x329 * x706 + x67 * x706 + x9202 +
           (x234 * x271) * (-x739 + x743) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (14000000.0 * sc[17] * x117) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[177] =
    sc[16] * x3066 + sc[16] * x3068 - sc[17] * x6469 +
    14000000.0 * sc[17] * x700 - 14000000.0 * sc[17] * x701 + x131 * x271 -
    x271 * x633 - x329 * x721 + x329 * x728 + x67 * x721 - x67 * x728 + x9202 +
    (x234 * x271) * (-x756 + x763) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (14000000.0 * sc[17] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[217] = 14000000.0 * sc[17] * x180 - 14000000.0 * sc[17] * x617 -
           x176 * x271 + x271 * x643 - x329 * x736 + x329 * x737 + x6605 +
           x67 * x736 - x67 * x737 + x9202 + (x234 * x271) * (-x782 + x794) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (14000000.0 * sc[17] * x117) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[257] =
    -2346000000000.0 * refC * sc[17] * x5624 * x5626 +
    14000000.0 * sc[17] * x726 - 14000000.0 * sc[17] * x732 + x207 * x271 -
    x271 * x653 - x329 * x741 + x329 * x748 -
    2.0204537444933901e+20 * x5613 * x5616 +
    2.0204537444933901e+20 * x5613 * x5620 + 2346000000000.0 * x5624 * x5631 +
    x67 * x741 - x67 * x748 + (x234 * x271) * (-x829 + x843) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (14000000.0 * sc[17] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[297] =
    14000000.0 * sc[17] * x733 - 14000000.0 * sc[17] * x740 + x159 * x271 -
    x271 * x370 - x329 * x751 + x329 * x760 -
    1.2122722466960399e+21 * x5613 * x5616 +
    1.2122722466960399e+21 * x5613 * x5620 + 14076000000000.0 * x5624 * x5631 -
    14076000000000.0 * x5628 + x67 * x751 - x67 * x760 +
    (x234 * x271) * (-x864 + x871) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (14000000.0 * sc[17] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[337] = x9207 + (x234 * x271) * (-x877 + x887) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (14000000.0 * sc[17] * x117) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[377] = 14000000.0 * sc[17] * x745 - 14000000.0 * sc[17] * x747 +
           x145 * x329 - x145 * x67 + x271 * x674 - x271 * x676 - x329 * x840 +
           2640000.0 * x3806 + x5949 + x67 * x840 + x7742 + x9202 +
           (x234 * x271) * (-x898 + x903) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (14000000.0 * sc[17] * x117) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[417] = 14000000.0 * sc[17] * x759 - 14000000.0 * sc[17] * x767 +
           x271 * x686 - x271 * x689 + x329 * x856 - x329 * x862 - x67 * x856 +
           x67 * x862 + x9202 + (x234 * x271) * (-x912 + x918) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (14000000.0 * sc[17] * x117) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[457] = 14000000.0 * sc[17] * x786 - 14000000.0 * sc[17] * x809 -
           x271 * x292 + x271 * x693 - x329 * x861 + x329 * x875 + x67 * x861 -
           x67 * x875 + x9202 + (x234 * x271) * (-x929 + x935) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (14000000.0 * sc[17] * x117) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[497] =
    sc[16] * x8456 - 14000000.0 * sc[17] * x330 + 30000000.0 * sc[3] -
    x271 * x704 + x329 * x780 - x67 * x780 + x9208 +
    (x234 * x271) * (-x877 + x945) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (14000000.0 * sc[17] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[537] =
    14000000.0 * sc[16] * x417 + 14000000.0 * sc[17] * x180 -
    14000000.0 * sc[17] * x851 + x271 * x705 - x271 * x708 - x329 * x879 +
    x329 * x880 + x67 * x879 - x67 * x880 + x9202 +
    (x234 * x271) * (-x953 + x958) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (14000000.0 * sc[17] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[577] =
    -14000000.0 * sc[17] * x859 - x271 * x710 + x329 * x884 - x67 * x884 +
    x9208 + (x234 * x271) * (-x877 + x962) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (14000000.0 * sc[17] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[617] =
    -14000000.0 * sc[17] * x867 - x271 * x711 + x329 * x886 - x67 * x886 +
    x9208 + (x234 * x271) * (-x877 + x969) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (14000000.0 * sc[17] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[657] = sc[12] * x8456 + 14000000.0 * sc[13] * x417 +
           14000000.0 * sc[17] * x341 - 14000000.0 * sc[17] * x343 +
           sc[33] * x9020 + sc[3] * x5788 + sc[4] * x3066 + sc[4] * x3068 +
           x271 * x713 - x271 * x719 - x329 * x889 + x329 * x893 -
           1.7678970264317202e+20 * x5613 * x5616 +
           1.7678970264317202e+20 * x5613 * x5620 +
           2052750000000.0 * x5624 * x5631 - 2052750000000.0 * x5628 + x6082 +
           x67 * x889 - x67 * x893 + x6892 + (x234 * x271) * (x593 - x993) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x713 + x719 + (-x234) * (x593 - x993)) +
           (14000000.0 * sc[17] * x117) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[697] =
    -1173000000000.0 * refC * x2597 * x5624 * x5626 - 14000000.0 * sc[17] * x1 +
    14000000.0 * sc[17] * x890 - sc[1] * x288 -
    2640000.0 * ((sc[2]) * (sc[2])) * x2628 - sc[2] * x2706 - sc[2] * x2711 -
    sc[2] * x2714 - sc[33] * x7805 - sc[3] * x5721 - sc[4] * x6469 -
    x1026 * x217 - 14000000.0 * x12 -
    3400000.0 * x148 * exp(-347.21949940525701 * invT) - x155 * x271 +
    x271 * x722 - x329 * x894 + x329 * x897 -
    3.6368167400881101e+20 * x5613 * x5616 +
    3.6368167400881101e+20 * x5613 * x5620 + 4222800000000.0 * x5624 * x5631 -
    4222800000000.0 * x5628 + x67 * x894 - x67 * x897 - x9035 +
    (x234 * x271) * (-x1014 + x839) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (14000000.0 * sc[17] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[737] =
    14000000.0 * sc[17] * x892 - 14000000.0 * sc[17] * x900 + x271 * x731 -
    x271 * x738 + x329 * x872 - x329 * x902 - x67 * x872 + x67 * x902 + x9202 +
    (x234 * x271) * (-x1027 + x1036) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (14000000.0 * sc[17] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[777] = -14000000.0 * sc[17] * x905 + x214 * x329 - x214 * x67 -
           x271 * x742 + x9208 + (x234 * x271) * (x1042 - x877) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (14000000.0 * sc[17] * x117) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[817] =
    14000000.0 * sc[17] * x906 - 14000000.0 * sc[17] * x915 + x271 * x744 -
    x271 * x752 - x329 * x699 + x329 * x904 + x67 * x699 - x67 * x904 + x9202 +
    (x234 * x271) * (-x1052 + x1057) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (14000000.0 * sc[17] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[857] =
    -14000000.0 * sc[17] * x518 - x271 * x750 + x329 * x882 - x67 * x882 +
    x9208 + (x234 * x271) * (x1061 - x877) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (14000000.0 * sc[17] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[897] = 14000000.0 * sc[17] * x919 - 14000000.0 * sc[17] * x920 +
           x271 * x776 - x271 * x781 - x329 * x909 + x329 * x910 + x67 * x909 -
           x67 * x910 + x9202 + (x234 * x271) * (x126 - x308) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (14000000.0 * sc[17] * x117) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[937] =
    14000000.0 * sc[17] * x180 - 14000000.0 * sc[17] * x923 + x271 * x785 -
    x271 * x793 - x329 * x684 + x329 * x768 + x67 * x684 - x67 * x768 + x9202 +
    (x234 * x271) * (-x303 + x310) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (14000000.0 * sc[17] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[977] = -14000000.0 * sc[17] * x925 + sc[3] * x5764 - x271 * x801 +
           x329 * x772 - x67 * x772 + x9208 + (x234 * x271) * (x325 - x877) +
           (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (14000000.0 * sc[17] * x117) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1017] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1057] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1097] = -x271 * x803 + x9206 + (x234 * x271) * (x326 - x877) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x803 + (-x234) * (x326 - x877)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1137] =
    -14000000.0 * sc[17] * x927 - x271 * x826 + x329 * x911 - x67 * x911 +
    x9208 + (x234 * x271) * (x336 - x877) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (14000000.0 * sc[17] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1177] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1217] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1257] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1297] = -x271 * x816 - x9159 + x9206 + (x234 * x271) * (x476 - x877) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x816 + (-x234) * (x476 - x877)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1337] =
    sc[16] * x9020 - sc[17] * x7805 + 14000000.0 * sc[17] * x928 -
    14000000.0 * sc[17] * x932 + x271 * x818 - x271 * x849 + x285 * x329 -
    x285 * x67 - x329 * x493 + x364 + x493 * x67 + x9202 +
    (x234 * x271) * (-x257 + x356) +
    (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (14000000.0 * sc[17] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1377] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1417] = -14000000.0 * sc[17] * x933 - x271 * x863 + x329 * x357 -
            x357 * x67 + x9208 + (x234 * x271) * (x367 - x877) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (14000000.0 * sc[17] * x117) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1457] = -14000000.0 * sc[17] * x934 - x271 * x354 + x329 * x358 -
            x358 * x67 + x9208 + (x234 * x271) * (x402 - x877) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (14000000.0 * sc[17] * x117) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1497] = -x271 * x363 + x366 + x7839 + x9206 +
            (x234 * x271) * (x466 - x877) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (x363 - x657 + (-x234) * (x466 - x877)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1537] = x9207 + (x234 * x271) * (-x877 + x887) +
            (14000000.0 * sc[17] * x220 + x235 * x329 - x235 * x67) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (14000000.0 * sc[17] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[18] = 50000000.0 * sc[23] * x255 - 50000000.0 * sc[23] * x371 +
          100000000.0 * sc[2] * x338 + x102 * x338 + x1873 - x349 * x831 +
          x362 * x831 + x9223 + (-50000000.0 * sc[23] * x234) * (-x607 + x659) +
          (x235 * x831) * (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-100000000.0 * sc[2] * x74 - x102 * x74) *
            (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
             (-x117) * (-x349 + x362 +
                        (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[58] =
    -50000000.0 * sc[10] * x687 + 50000000.0 * sc[10] * x709 +
    50000000.0 * sc[23] * x468 - 50000000.0 * sc[23] * x606 - x317 * x831 +
    x680 * x831 + x9225 + (-50000000.0 * sc[23] * x234) * (-x687 + x709) +
    (x235 * x831) * (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[98] =
    -100000000.0 * sc[18] * x379 + 90000000.0 * sc[19] + sc[23] * x2723 -
    50000000.0 * sc[23] * x612 + 50000000.0 * sc[23] * x616 + sc[24] * x2799 +
    sc[27] * x2650 + 100000000.0 * sc[2] * x940 -
    100000000.0 * sc_qss[3] * x74 + x102 * x940 + x1824 + x1831 -
    100000000.0 * x392 / x72 + x677 * x831 - x685 * x831 + x9223 +
    (-50000000.0 * sc[23] * x234) * (-x723 + x730) +
    (x235 * x831) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[138] =
    -50000000.0 * sc[10] * x739 + 50000000.0 * sc[10] * x743 -
    20.4 * sc[18] * exp(x97) - 50000000.0 * sc[23] * x622 +
    50000000.0 * sc[23] * x630 + x166 * x831 - x706 * x831 + x9225 +
    (-50000000.0 * sc[23] * x234) * (-x739 + x743) +
    (x235 * x831) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[178] =
    -50000000.0 * sc[10] * x756 + 50000000.0 * sc[10] * x763 - sc[18] * x3095 +
    30110000.0 * sc[19] - 50000000.0 * sc[23] * x131 +
    50000000.0 * sc[23] * x633 + 100000000.0 * sc[2] * x504 + x102 * x504 +
    x1831 - x6530 - x721 * x831 + x728 * x831 + x9223 +
    (-50000000.0 * sc[23] * x234) * (-x756 + x763) +
    (x235 * x831) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[218] =
    -50000000.0 * sc[10] * x782 + 50000000.0 * sc[10] * x794 - sc[18] * x7134 +
    50000000.0 * sc[23] * x176 - 50000000.0 * sc[23] * x643 - x736 * x831 +
    x737 * x831 + x9225 + (-50000000.0 * sc[23] * x234) * (-x782 + x794) +
    (x235 * x831) * (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[258] =
    -50000000.0 * sc[10] * x829 + 50000000.0 * sc[10] * x843 - sc[18] * x3362 -
    32000000.0 * sc[18] * x489 - 50000000.0 * sc[23] * x207 +
    50000000.0 * sc[23] * x653 + 100000000.0 * sc[2] * x814 + x102 * x814 +
    x3436 - x741 * x831 + x748 * x831 + x9230 +
    (-50000000.0 * sc[23] * x234) * (-x829 + x843) +
    (x235 * x831) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[298] =
    -sc[18] * x6690 - 50000000.0 * sc[23] * x159 + 50000000.0 * sc[23] * x370 +
    100000000.0 * sc[2] * x858 + x102 * x858 + 45018.75 * x333 * x63 + x3590 +
    14700000000.0 * x566 * x9213 - 14700000000.0 * x566 * x9216 -
    45018.75 * x62 * x63 - x751 * x831 + x760 * x831 +
    (-50000000.0 * sc[23] * x234) * (-x864 + x871) +
    (x235 * x831) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[338] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[378] =
    -50000000.0 * sc[10] * x898 + 50000000.0 * sc[10] * x903 -
    50000000.0 * sc[23] * x674 + 50000000.0 * sc[23] * x676 +
    100000000.0 * sc[2] * x866 + x102 * x866 + x145 * x831 + x1831 + x7212 -
    x831 * x840 + x9223 + (-50000000.0 * sc[23] * x234) * (-x898 + x903) +
    (x235 * x831) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[418] =
    -50000000.0 * sc[10] * x912 + 50000000.0 * sc[10] * x918 + sc[16] * x6791 -
    sc[18] * x3922 - sc[18] * x8118 + 392000.0 * sc[19] -
    50000000.0 * sc[23] * x686 + 50000000.0 * sc[23] * x689 +
    50000000.0 * x258 + x831 * x856 - x831 * x862 + x9225 +
    (-50000000.0 * sc[23] * x234) * (-x912 + x918) +
    (x235 * x831) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[458] =
    -50000000.0 * sc[10] * x929 + 50000000.0 * sc[10] * x935 - sc[18] * x8167 +
    50000000.0 * sc[23] * x292 - 50000000.0 * sc[23] * x693 +
    100000000.0 * sc[2] * x944 + x102 * x944 + x3436 - x831 * x861 +
    x831 * x875 + x9230 + (-50000000.0 * sc[23] * x234) * (-x929 + x935) +
    (x235 * x831) * (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[498] =
    50000000.0 * sc[10] * x945 - sc[18] * x8439 + 50000000.0 * sc[23] * x704 +
    100000000.0 * sc[2] * x946 + x102 * x946 + x1831 + x3779 + x5925 +
    x780 * x831 + x8892 + x9223 +
    (-50000000.0 * sc[23] * x234) * (-x877 + x945) +
    (x235 * x831) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[538] =
    -50000000.0 * sc[10] * x953 + 50000000.0 * sc[10] * x958 -
    50000000.0 * sc[23] * x705 + 50000000.0 * sc[23] * x708 - x831 * x879 +
    x831 * x880 + x9225 + (-50000000.0 * sc[23] * x234) * (-x953 + x958) +
    (x235 * x831) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[578] =
    50000000.0 * sc[10] * x962 + 50000000.0 * sc[23] * x710 + x3779 + x5925 +
    x831 * x884 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (-x877 + x962) +
    (x235 * x831) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[618] =
    50000000.0 * sc[10] * x969 + 50000000.0 * sc[23] * x711 + x3779 + x5925 +
    x831 * x886 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (-x877 + x969) +
    (x235 * x831) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[658] =
    sc[10] * x6791 - 20000000.0 * sc[18] * x437 * x9008 -
    50000000.0 * sc[18] * x580 + sc[19] * x8474 - 50000000.0 * sc[23] * x713 +
    50000000.0 * sc[23] * x719 + 100000000.0 * sc[2] * x947 + x102 * x947 +
    x217 * x508 + 11254.6875 * x333 * x63 + x4443 +
    3675000000.0 * x566 * x9213 - 3675000000.0 * x566 * x9216 -
    11254.6875 * x62 * x63 - x831 * x889 + x831 * x893 +
    (-50000000.0 * sc[23] * x234) * (x593 - x993) +
    (x235 * x831) * (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[698] =
    -50000000.0 * sc[10] * x1014 + 50000000.0 * sc[10] * x839 +
    50000000.0 * sc[23] * x155 - 50000000.0 * sc[23] * x722 +
    100000000.0 * sc[2] * x813 + x102 * x813 + x3436 - x831 * x894 +
    x831 * x897 + x9230 + (-50000000.0 * sc[23] * x234) * (-x1014 + x839) +
    (x235 * x831) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[738] =
    -sc[10] * x3922 - sc[10] * x8118 - sc[11] * x8167 - sc[12] * x8439 -
    50000000.0 * sc[16] * x580 - 960000.0 * sc[20] * x9240 -
    50000000.0 * sc[23] * x731 + 50000000.0 * sc[23] * x738 -
    100000000.0 * sc[2] * x379 + 100000000.0 * sc[2] * x99 -
    20.4 * sc[3] * exp(x97) - sc[4] * x3095 - sc[5] * x7134 - sc[6] * x3362 -
    32000000.0 * sc[6] * x489 - sc[7] * x6690 + x102 * x99 -
    10000000.0 * x232 * x9008 + x530 - 2450000000.0 * x566 * x61 * exp(x486) -
    x6948 + x831 * x872 - x831 * x902 + x9244 +
    (-50000000.0 * sc[23] * x234) * (-x1027 + x1036) +
    (x235 * x831) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[778] =
    50000000.0 * sc[10] * x1042 + 392000.0 * sc[10] + sc[16] * x8474 +
    1920000.0 * sc[19] + 50000000.0 * sc[23] * x742 +
    100000000.0 * sc[2] * x952 + 90000000.0 * sc[2] + 30110000.0 * sc[4] +
    x102 * x952 + x1831 + x1850 + x214 * x831 + x3779 + x5925 + x7249 + x8892 +
    x9223 + (-50000000.0 * sc[23] * x234) * (x1042 - x877) +
    (x235 * x831) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[818] =
    -50000000.0 * sc[10] * x1052 + 50000000.0 * sc[10] * x1057 -
    960000.0 * sc[18] * x9240 - 50000000.0 * sc[23] * x744 +
    50000000.0 * sc[23] * x752 + 100000000.0 * sc[2] * x35 + x102 * x35 +
    x4731 - x699 * x831 + x831 * x904 + x9244 +
    (-50000000.0 * sc[23] * x234) * (-x1052 + x1057) +
    (x235 * x831) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[858] =
    50000000.0 * sc[10] * x1061 + 50000000.0 * sc[23] * x750 + x3779 + x5925 +
    x831 * x882 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (x1061 - x877) +
    (x235 * x831) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[898] =
    50000000.0 * sc[10] * x126 - 50000000.0 * sc[10] * x308 -
    50000000.0 * sc[23] * x776 + 50000000.0 * sc[23] * x781 +
    100000000.0 * sc[2] * x51 + x102 * x51 + 22509.375 * x333 * x63 + x4731 +
    7350000000.0 * x566 * x9213 - 7350000000.0 * x566 * x9216 -
    22509.375 * x62 * x63 - x831 * x909 + x831 * x910 +
    (-50000000.0 * sc[23] * x234) * (x126 - x308) +
    (x235 * x831) * (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[938] =
    -50000000.0 * sc[10] * x303 + 50000000.0 * sc[10] * x310 -
    50000000.0 * sc[23] * x785 + 50000000.0 * sc[23] * x793 +
    20000000.0 * sc[23] + sc[2] * x2723 + 50000000.0 * x148 - x684 * x831 +
    x768 * x831 + x9225 + (-50000000.0 * sc[23] * x234) * (-x303 + x310) +
    (x235 * x831) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[978] =
    50000000.0 * sc[10] * x325 + 50000000.0 * sc[23] * x801 + sc[2] * x2799 +
    100000000.0 * sc[2] * x609 + x102 * x609 + x1831 + x3779 + x5925 +
    x772 * x831 + x8892 + x9223 +
    (-50000000.0 * sc[23] * x234) * (x325 - x877) +
    (x235 * x831) * (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1018] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1058] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1098] =
    50000000.0 * sc[10] * x326 + 50000000.0 * sc[23] * x803 + sc[2] * x2650 +
    x9235 + (-50000000.0 * sc[23] * x234) * (x326 - x877) +
    (x235 * x831) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1138] =
    50000000.0 * sc[10] * x336 + 50000000.0 * sc[23] * x826 + x3779 + x5925 +
    x8301 + x831 * x911 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (x336 - x877) +
    (x235 * x831) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1178] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1218] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1258] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1298] =
    50000000.0 * sc[10] * x476 + 50000000.0 * sc[23] * x816 + x9235 +
    (-50000000.0 * sc[23] * x234) * (x476 - x877) +
    (x235 * x831) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1338] =
    -50000000.0 * sc[10] * x257 + 50000000.0 * sc[10] * x356 -
    50000000.0 * sc[23] * x818 + 50000000.0 * sc[23] * x849 +
    100000000.0 * sc[2] * x626 + x102 * x626 + x1831 + x285 * x831 -
    x493 * x831 + x9223 + (-50000000.0 * sc[23] * x234) * (-x257 + x356) +
    (x235 * x831) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1378] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1418] =
    50000000.0 * sc[10] * x367 + 50000000.0 * sc[23] * x863 + x357 * x831 +
    x3779 + x5925 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (x367 - x877) +
    (x235 * x831) * (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1458] =
    50000000.0 * sc[10] * x402 + 50000000.0 * sc[23] * x354 + x358 * x831 +
    x3779 + x5925 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (x402 - x877) +
    (x235 * x831) * (x354 - x657 + (-x234) * (x402 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1498] =
    50000000.0 * sc[10] * x466 + 50000000.0 * sc[23] * x363 + x3779 + x5925 +
    x824 * x831 + x8892 + x9225 +
    (-50000000.0 * sc[23] * x234) * (x466 - x877) +
    (x235 * x831) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1538] =
    x9236 + (-50000000.0 * sc[23] * x234) * (-x877 + x887) +
    (x235 * x831) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-100000000.0 * sc[2] * x74 - x102 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[19] =
    -30000000.0 * sc[23] * x349 + 30000000.0 * sc[23] * x362 +
    1.7955e+21 * x1836 + x1852 * (1.4 * x1842 + 0.196 * x1844) -
    1.1931237046632101e+34 * x1854 * x1856 + 1.1931237046632101e+34 * x1860 -
    x1867 * (1.4 * x1842 + 0.196 * x1844) - 1.7955e+21 * x1870 + x2190 + x7987 +
    x9292 + (-30000000.0 * sc[10] * x234) * (-x607 + x659) +
    (30000000.0 * sc[23] * x235) * (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-x74 * x990) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[59] =
    30000000.0 * sc[10] * x468 - 30000000.0 * sc[10] * x606 -
    30000000.0 * sc[23] * x317 + 30000000.0 * sc[23] * x680 + x1827 + x2150 +
    x626 * x990 + (-30000000.0 * sc[10] * x234) * (-x687 + x709) +
    (30000000.0 * sc[23] * x235) * (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-x74 * x990) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[99] =
    30000000.0 * sc[23] * x677 - 30000000.0 * sc[23] * x685 + sc[24] * x2783 +
    sc[28] * x2746 + x1819 + x1827 + x2150 + 5000.0 * x2638 + x2832 + x2854 +
    (-30000000.0 * sc[10] * x234) * (-x723 + x730) +
    (30000000.0 * sc[23] * x235) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-x74 * x990) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[139] =
    -30000000.0 * sc[10] * x622 + 30000000.0 * sc[10] * x630 -
    96000000.0 * sc[19] + 30000000.0 * sc[23] * x166 -
    30000000.0 * sc[23] * x706 + sc[25] * x5699 + x1834 + x5780 +
    (-30000000.0 * sc[10] * x234) * (-x739 + x743) +
    (30000000.0 * sc[23] * x235) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-x74 * x990) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[179] =
    -30000000.0 * sc[10] * x131 + 30000000.0 * sc[10] * x633 - sc[19] * x5839 -
    sc[19] * x6535 * x6563 - 30110000.0 * sc[19] + sc[20] * x6569 -
    30000000.0 * sc[23] * x721 + 30000000.0 * sc[23] * x728 + x1827 + x2150 +
    x504 * x990 + x6512 + (-30000000.0 * sc[10] * x234) * (-x756 + x763) +
    (30000000.0 * sc[23] * x235) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x74 * x990) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[219] =
    30000000.0 * sc[10] * x176 - 30000000.0 * sc[10] * x643 + sc[18] * x7134 -
    sc[19] * x7160 - 10000000.0 * sc[19] + sc[20] * x602 -
    30000000.0 * sc[23] * x736 + 30000000.0 * sc[23] * x737 +
    6600000.0 * sc[28] + x1834 +
    (-30000000.0 * sc[10] * x234) * (-x782 + x794) +
    (30000000.0 * sc[23] * x235) * (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-x74 * x990) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[259] =
    -sc[19] * x3383 - 30000000.0 * sc[23] * x741 + 30000000.0 * sc[23] * x748 +
    x1828 + x3367 + x3446 + (-30000000.0 * sc[10] * x234) * (-x829 + x843) +
    (30000000.0 * sc[23] * x235) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x74 * x990) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[299] =
    sc[18] * x6690 - sc[19] * x3536 - sc[19] * x6692 -
    30000000.0 * sc[23] * x751 + 30000000.0 * sc[23] * x760 +
    1.539e+22 * x1836 + x1852 * (12.0 * x1842 + 1.68 * x1844) -
    1.0226774611399e+35 * x1854 * x1856 + 1.0226774611399e+35 * x1860 -
    x1867 * (12.0 * x1842 + 1.68 * x1844) - 1.539e+22 * x1870 + x3658 + x7997 +
    x8078 + (-30000000.0 * sc[10] * x234) * (-x864 + x871) +
    (30000000.0 * sc[23] * x235) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x74 * x990) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[339] =
    -x7197 + x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[379] =
    -30000000.0 * sc[10] * x674 + 30000000.0 * sc[10] * x676 +
    30000000.0 * sc[23] * x145 - 30000000.0 * sc[23] * x840 + x1827 + x2150 -
    x5944 - x7212 + x7222 - x7775 + x866 * x990 +
    (-30000000.0 * sc[10] * x234) * (-x898 + x903) +
    (30000000.0 * sc[23] * x235) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-x74 * x990) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[419] =
    -30000000.0 * sc[10] * x686 + 30000000.0 * sc[10] * x689 + sc[16] * x5980 -
    sc[19] * x3951 - sc[19] * x7981 - 392000.0 * sc[19] + sc[20] * x8144 +
    30000000.0 * sc[23] * x856 - 30000000.0 * sc[23] * x862 + sc[28] * x8114 +
    30000000.0 * x148 + x1834 + (-30000000.0 * sc[10] * x234) * (-x912 + x918) +
    (30000000.0 * sc[23] * x235) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-x74 * x990) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[459] =
    30000000.0 * sc[10] * x292 - 30000000.0 * sc[10] * x693 + sc[18] * x8167 -
    sc[19] * x8172 - 30000000.0 * sc[23] * x861 + 30000000.0 * sc[23] * x875 +
    x1828 + x3446 + x944 * x990 +
    (-30000000.0 * sc[10] * x234) * (-x929 + x935) +
    (30000000.0 * sc[23] * x235) * (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-x74 * x990) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[499] =
    30000000.0 * sc[10] * x704 + sc[13] * x7785 + sc[18] * x8439 -
    90330000.0 * sc[19] + 30000000.0 * sc[23] * x780 + x9329 + x946 * x990 +
    (-30000000.0 * sc[10] * x234) * (-x877 + x945) +
    (30000000.0 * sc[23] * x235) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x74 * x990) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[539] =
    -refCinv * sc[19] * sc[4] * x6563 - 30000000.0 * sc[10] * x705 +
    30000000.0 * sc[10] * x708 + sc[12] * x7785 - 30000000.0 * sc[23] * x879 +
    30000000.0 * sc[23] * x880 + x1834 +
    (-30000000.0 * sc[10] * x234) * (-x953 + x958) +
    (30000000.0 * sc[23] * x235) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x74 * x990) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[579] =
    30000000.0 * sc[10] * x710 + 30000000.0 * sc[23] * x884 + x8055 +
    (-30000000.0 * sc[10] * x234) * (-x877 + x962) +
    (30000000.0 * sc[23] * x235) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x74 * x990) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[619] =
    30000000.0 * sc[10] * x711 + 30000000.0 * sc[23] * x886 + x8055 +
    (-30000000.0 * sc[10] * x234) * (-x877 + x969) +
    (30000000.0 * sc[23] * x235) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x74 * x990) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[659] =
    sc[10] * x5980 + 2.5566936528497398e+34 * sc[19] * x1854 * exp(x1855) +
    sc[20] * x8476 + 3.8475e+21 * x1836 + x1852 * (3.0 * x1842 + 0.42 * x1844) -
    2.5566936528497398e+34 * x1854 * x1856 -
    x1867 * (3.0 * x1842 + 0.42 * x1844) - 3.8475e+21 * x1870 + x4469 + x7950 +
    x9032 + x9337 + (-30000000.0 * sc[10] * x234) * (x593 - x993) +
    (30000000.0 * sc[23] * x235) * (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-x74 * x990) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[699] =
    30000000.0 * sc[10] * x155 - 30000000.0 * sc[10] * x722 -
    30000000.0 * sc[23] * x894 + 30000000.0 * sc[23] * x897 + x1828 + x3446 +
    x813 * x990 + (-30000000.0 * sc[10] * x234) * (-x1014 + x839) +
    (30000000.0 * sc[23] * x235) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x74 * x990) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[739] =
    -30000000.0 * sc[10] * x731 + 30000000.0 * sc[10] * x738 + sc[11] * x8167 +
    sc[12] * x8439 + 1920000.0 * sc[20] * x9240 + 30000000.0 * sc[23] * x872 -
    30000000.0 * sc[23] * x902 + sc[5] * x7134 + sc[6] * x3362 + sc[7] * x6690 +
    x1865 + x4761 + x9302 + x9339 + x99 * x990 +
    (-30000000.0 * sc[10] * x234) * (-x1027 + x1036) +
    (30000000.0 * sc[23] * x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x74 * x990) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[779] =
    -sc[10] * x3951 - sc[10] * x7981 - 392000.0 * sc[10] - sc[11] * x8172 -
    90330000.0 * sc[12] - 30000000.0 * sc[16] * x521 - sc[16] * x8474 -
    3840000.0 * sc[19] - sc[21] * x9272 + 30000000.0 * sc[23] * x214 -
    96000000.0 * sc[3] - sc[4] * x5839 - sc[4] * x6535 * x6563 -
    30110000.0 * sc[4] - sc[5] * x7160 - 10000000.0 * sc[5] - sc[6] * x3383 -
    sc[7] * x3536 - sc[7] * x6692 - x1850 + x4815 - x6150 - x7248 - x7249 -
    x7813 - x8253 + x9329 + (-30000000.0 * sc[10] * x234) * (x1042 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-x74 * x990) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[819] =
    sc[10] * x8144 + sc[16] * x8476 + 1920000.0 * sc[18] * x9240 -
    30000000.0 * sc[23] * x699 + 30000000.0 * sc[23] * x904 + sc[4] * x6569 +
    sc[5] * x602 + x4761 + x4891 + x4899 + x6174 + x7252 + x9302 + x9339 +
    (-30000000.0 * sc[10] * x234) * (-x1052 + x1057) +
    (30000000.0 * sc[23] * x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x74 * x990) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[859] =
    30000000.0 * sc[10] * x750 - sc[19] * x9272 + 30000000.0 * sc[23] * x882 +
    x8055 - x8267 + (-30000000.0 * sc[10] * x234) * (x1061 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x74 * x990) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[899] =
    -30000000.0 * sc[10] * x776 + 30000000.0 * sc[10] * x781 -
    30000000.0 * sc[23] * x909 + 30000000.0 * sc[23] * x910 + x4761 +
    x51 * x990 + x9339 + x9353 + (-30000000.0 * sc[10] * x234) * (x126 - x308) +
    (30000000.0 * sc[23] * x235) * (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-x74 * x990) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[939] =
    -30000000.0 * sc[10] * x785 + 30000000.0 * sc[10] * x793 -
    30000000.0 * sc[23] * x684 + 30000000.0 * sc[23] * x768 + x1834 +
    30000000.0 * x217 + (-30000000.0 * sc[10] * x234) * (-x303 + x310) +
    (30000000.0 * sc[23] * x235) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x74 * x990) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[979] =
    30000000.0 * sc[10] * x801 + 30000000.0 * sc[23] * x772 + sc[2] * x2783 +
    x609 * x990 + x9329 + (-30000000.0 * sc[10] * x234) * (x325 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-x74 * x990) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1019] =
    sc[3] * x5699 + x7048 + x9328 +
    (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1059] =
    5000.0 * x5258 + x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1099] =
    30000000.0 * sc[10] * x803 + 30000000.0 * sc[23] * x824 + x8055 +
    (-30000000.0 * sc[10] * x234) * (x326 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1139] =
    sc[10] * x8114 + 30000000.0 * sc[10] * x826 + 30000000.0 * sc[23] * x911 +
    sc[2] * x2746 + 6600000.0 * sc[5] + x8055 +
    (-30000000.0 * sc[10] * x234) * (x336 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x74 * x990) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1179] =
    x7942 + x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1219] =
    x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1259] =
    x9253 + x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1299] =
    30000000.0 * sc[10] * x816 + 30000000.0 * sc[23] * x824 + x8055 +
    (-30000000.0 * sc[10] * x234) * (x476 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1339] =
    -30000000.0 * sc[10] * x818 + 30000000.0 * sc[10] * x849 +
    30000000.0 * sc[23] * x285 - 30000000.0 * sc[23] * x493 + x1834 +
    (-30000000.0 * sc[10] * x234) * (-x257 + x356) +
    (30000000.0 * sc[23] * x235) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x74 * x990) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1379] =
    x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1419] =
    30000000.0 * sc[10] * x863 + 30000000.0 * sc[23] * x357 + x8055 +
    (-30000000.0 * sc[10] * x234) * (x367 - x877) +
    (30000000.0 * sc[23] * x235) * (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-x74 * x990) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1459] =
    30000000.0 * sc[10] * x354 + 30000000.0 * sc[23] * x358 + x8055 +
    (-30000000.0 * sc[10] * x234) * (x402 - x877) +
    (30000000.0 * sc[23] * x235) * (x354 - x657 + (-x234) * (x402 - x877)) +
    (-x74 * x990) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1499] =
    30000000.0 * sc[10] * x363 + 30000000.0 * sc[23] * x824 + x8055 +
    (-30000000.0 * sc[10] * x234) * (x466 - x877) +
    (30000000.0 * sc[23] * x235) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x74 * x990) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1539] =
    x9328 + (-30000000.0 * sc[10] * x234) * (-x877 + x887) +
    (30000000.0 * sc[23] * x235) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x74 * x990) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[20] =
    -30000000.0 * sc[20] * x255 - 100000000.0 * sc[20] * x283 +
    100000000.0 * sc[20] * x344 + 30000000.0 * sc[20] * x371 + 4.9e+44 * x1048 -
    x1050 * (1.4 * x240 * x7289 + 0.196 * x240 * x7290) +
    4.2875e+76 * x1051 * x32 + x1055 * x338 + x106 * x338 +
    2.25657894736842e+29 * x2146 * x2162 -
    2.25657894736842e+29 * x2146 * x2175 -
    x2147 * (0.196 * x2152 + 1.4 * x2154) - 9.8e+17 * x2161 * x2165 +
    9.8e+17 * x2165 * x2182 + x2169 * (0.196 * x2152 + 1.4 * x2154) + x2298 -
    4.2875e+76 * x31 * x32 - x349 * x368 + 20000000.0 * x349 * x808 +
    x362 * x368 - 20000000.0 * x362 * x808 - 4.9e+44 * x7281 +
    x7302 * (1.4 * x240 * x7289 + 0.196 * x240 * x7290) +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x607 + x659) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x255 - x371 + (-x234) * (-x607 + x659)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))) +
    (-x1055 * x74 - x106 * x74) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[60] = -30000000.0 * sc[20] * x468 + 30000000.0 * sc[20] * x606 +
          100000000.0 * sc[20] * x627 - 100000000.0 * sc[20] * x650 + x2460 +
          x2556 - x317 * x368 + 20000000.0 * x317 * x808 + x368 * x680 -
          20000000.0 * x680 * x808 + x9356 +
          (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
            (-x687 + x709) +
          (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 -
           x220 * x321 + x235 * x368 - 20000000.0 * x235 * x808) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (100000000.0 * sc[20] * x117 - x117 * x321) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))) +
          (-x1055 * x74 - x106 * x74) *
            (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
             (-x117) * (-x317 + x680 +
                        (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[100] =
    1.4e+18 * sc[19] * x2165 * x25 * exp(x2158) + 30000000.0 * sc[20] * x612 -
    30000000.0 * sc[20] * x616 + 100000000.0 * sc[20] * x666 -
    100000000.0 * sc[20] * x671 + 2000000.0 * sc[21] +
    30000000.0 * sc[27] * x570 + 20000000.0 * sc[28] * x2748 +
    50000000.0 * sc[28] * x397 + 8000000000000000.0 * sc[29] * exp(x2576) +
    x1055 * x940 + x106 * x940 + x2148 + x2556 + 1.6e+16 * x2578 +
    95100.0 * x2638 + x2868 + x368 * x677 - x368 * x685 -
    20000000.0 * x677 * x808 + 20000000.0 * x685 * x808 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x723 + x730) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))) +
    (-x1055 * x74 - x106 * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[140] =
    30000000.0 * sc[20] * x622 - 30000000.0 * sc[20] * x630 +
    100000000.0 * sc[20] * x679 - 100000000.0 * sc[20] * x696 -
    20000000.0 * x166 * x808 + x2556 + x2990 + x5678 + x5785 +
    20000000.0 * x706 * x808 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x739 + x743) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))) +
    (-x1055 * x74 - x106 * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[180] =
    sc[19] * x5839 + 30000000.0 * sc[20] * x131 - sc[20] * x3017 -
    30000000.0 * sc[20] * x633 - sc[20] * x6569 + 100000000.0 * sc[20] * x700 -
    100000000.0 * sc[20] * x701 + sc[26] * x6454 + x1055 * x504 + x106 * x504 +
    x2148 + x2556 + x3119 - x368 * x721 + x368 * x728 +
    20000000.0 * x721 * x808 - 20000000.0 * x728 * x808 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x756 + x763) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))) +
    (-x1055 * x74 - x106 * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[220] =
    sc[19] * x7160 - 30000000.0 * sc[20] * x176 + 100000000.0 * sc[20] * x180 -
    sc[20] * x602 - 100000000.0 * sc[20] * x617 + 30000000.0 * sc[20] * x643 -
    sc[20] * x6607 - sc[20] * x7164 + 300000.0 * sc[21] + x3202 - x368 * x736 +
    x368 * x737 + 20000000.0 * x736 * x808 - 20000000.0 * x737 * x808 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x782 + x794) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x176 - x643 + (-x234) * (-x782 + x794)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[260] =
    7.0e+44 * refCinv * x27 * x3360 * x408 + 30000000.0 * sc[20] * x207 -
    sc[20] * x3258 - 30000000.0 * sc[20] * x653 + 100000000.0 * sc[20] * x726 -
    100000000.0 * sc[20] * x732 + x1055 * x814 + x106 * x814 + x3386 + x3468 -
    x368 * x741 + x368 * x748 + x38 + 20000000.0 * x741 * x808 -
    20000000.0 * x748 * x808 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x829 + x843) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))) +
    (-x1055 * x74 - x106 * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[300] =
    sc[19] * x6692 + 30000000.0 * sc[20] * x159 - 30000000.0 * sc[20] * x370 +
    100000000.0 * sc[20] * x733 - 100000000.0 * sc[20] * x740 +
    4.2e+45 * x1048 - x1050 * (12.0 * x240 * x7289 + 1.68 * x240 * x7290) +
    3.675e+77 * x1051 * x32 + x1055 * x858 + x106 * x858 +
    1.9342105263157899e+30 * x2146 * x2162 -
    1.9342105263157899e+30 * x2146 * x2175 -
    x2147 * (1.68 * x2152 + 12.0 * x2154) - 8.4e+18 * x2161 * x2165 +
    8.4e+18 * x2165 * x2182 + x2169 * (1.68 * x2152 + 12.0 * x2154) -
    3.675e+77 * x31 * x32 + x3672 - x368 * x751 + x368 * x760 -
    4.2e+45 * x7281 + x7302 * (12.0 * x240 * x7289 + 1.68 * x240 * x7290) +
    20000000.0 * x751 * x808 - 20000000.0 * x760 * x808 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x864 + x871) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))) +
    (-x1055 * x74 - x106 * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[340] =
    -sc[20] * x7200 + x7197 + x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[380] =
    30000000.0 * sc[20] * x674 - 30000000.0 * sc[20] * x676 +
    100000000.0 * sc[20] * x745 - 100000000.0 * sc[20] * x747 +
    20000.0 * sc[21] + x1055 * x866 + x106 * x866 + x145 * x368 -
    20000000.0 * x145 * x808 + x2148 + x2556 - x368 * x840 + x3863 - x7222 +
    20000000.0 * x808 * x840 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x898 + x903) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))) +
    (-x1055 * x74 - x106 * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[420] =
    sc[12] * x5996 - sc[20] * x3901 + 30000000.0 * sc[20] * x686 -
    30000000.0 * sc[20] * x689 + 100000000.0 * sc[20] * x759 -
    100000000.0 * sc[20] * x767 - sc[20] * x8144 - sc[20] * x8147 +
    50000000.0 * sc[23] + x2556 + x368 * x856 - x368 * x862 + x3986 -
    20000000.0 * x808 * x856 + 20000000.0 * x808 * x862 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x912 + x918) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))) +
    (-x1055 * x74 - x106 * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[460] =
    sc[19] * x8172 - 30000000.0 * sc[20] * x292 + 30000000.0 * sc[20] * x693 +
    100000000.0 * sc[20] * x786 - 100000000.0 * sc[20] * x809 + x1055 * x944 +
    x106 * x944 + 50000000.0 * x3360 * x56 + x3468 - x368 * x861 + x368 * x875 +
    x38 + x4075 + 20000000.0 * x808 * x861 - 20000000.0 * x808 * x875 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x929 + x935) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x292 - x693 + (-x234) * (-x929 + x935)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))) +
    (-x1055 * x74 - x106 * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[500] =
    12000000.0 * sc[10] * x330 * x982 + sc[10] * x5996 +
    40000000.0 * sc[10] * x780 + 60000000.0 * sc[11] * x704 +
    90330000.0 * sc[19] - 100000000.0 * sc[20] * x330 -
    30000000.0 * sc[20] * x704 - sc[20] * x8446 + x1055 * x946 + x106 * x946 +
    x368 * x780 - 20000000.0 * x780 * x808 + x9370 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x945) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[540] =
    100000000.0 * sc[20] * x180 + 30000000.0 * sc[20] * x705 -
    30000000.0 * sc[20] * x708 - 100000000.0 * sc[20] * x851 + x217 * x821 +
    x3200 - x368 * x879 + x368 * x880 + x4211 + 20000000.0 * x808 * x879 -
    20000000.0 * x808 * x880 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x953 + x958) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[580] =
    40000000.0 * sc[10] * x884 + 60000000.0 * sc[11] * x710 -
    30000000.0 * sc[20] * x710 - 100000000.0 * sc[20] * x859 + x321 * x859 +
    x368 * x884 - 20000000.0 * x808 * x884 + x9372 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x962) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[620] =
    40000000.0 * sc[10] * x886 + 60000000.0 * sc[11] * x711 -
    30000000.0 * sc[20] * x711 - 100000000.0 * sc[20] * x867 + x321 * x867 +
    x368 * x886 - 20000000.0 * x808 * x886 + x9372 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x969) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[660] =
    1.05e+45 * refCinv * sc[6] * x3360 * x408 + 100000000.0 * sc[20] * x341 -
    100000000.0 * sc[20] * x343 - sc[20] * x6078 + 30000000.0 * sc[20] * x713 -
    30000000.0 * sc[20] * x719 - 1.05e+45 * sc[20] * x7280 - sc[20] * x8201 -
    sc[20] * x8476 + sc[21] * x8478 -
    x1050 * (3.0 * x240 * x7289 + 0.42 * x240 * x7290) +
    9.1875e+76 * x1051 * x32 + x1055 * x947 + x106 * x947 +
    4.8355263157894698e+29 * x2146 * x2162 -
    4.8355263157894698e+29 * x2146 * x2175 -
    x2147 * (0.42 * x2152 + 3.0 * x2154) - 2.1e+18 * x2161 * x2165 +
    2.1e+18 * x2165 * x2182 + x2169 * (0.42 * x2152 + 3.0 * x2154) -
    9.1875e+76 * x31 * x32 - x368 * x889 + x368 * x893 + x4518 +
    x7302 * (3.0 * x240 * x7289 + 0.42 * x240 * x7290) +
    20000000.0 * x808 * x889 - 20000000.0 * x808 * x893 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x593 - x993) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))) +
    (-x1055 * x74 - x106 * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[700] =
    -100000000.0 * sc[20] * x1 - 30000000.0 * sc[20] * x155 +
    30000000.0 * sc[20] * x722 + 100000000.0 * sc[20] * x890 + x1055 * x813 +
    x106 * x813 - x368 * x894 + x368 * x897 + x38 + x4632 +
    20000000.0 * x808 * x894 - 20000000.0 * x808 * x897 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x1014 + x839) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))) +
    (-x1055 * x74 - x106 * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[740] =
    30000000.0 * sc[20] * x731 - 30000000.0 * sc[20] * x738 +
    100000000.0 * sc[20] * x892 - 100000000.0 * sc[20] * x900 -
    960000.0 * sc[20] * x9240 + x1055 * x99 + x106 * x99 + x2556 + x368 * x872 -
    x368 * x902 + x4714 - 20000000.0 * x808 * x872 + 20000000.0 * x808 * x902 +
    x9354 + x9373 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x1027 + x1036) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))) +
    (-x1055 * x74 - x106 * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[780] =
    40000000.0 * sc[10] * x214 + 60000000.0 * sc[11] * x742 + sc[11] * x8172 +
    90330000.0 * sc[12] + 1920000.0 * sc[19] - 30000000.0 * sc[20] * x742 -
    100000000.0 * sc[20] * x905 + 1.4e+18 * sc[2] * x2165 * x25 * exp(x2158) +
    sc[4] * x5839 + sc[5] * x7160 + sc[6] * x3383 + sc[7] * x6692 +
    x1055 * x952 + x106 * x952 + x214 * x368 - 20000000.0 * x214 * x808 +
    x321 * x905 + x7248 + x9370 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (x1042 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[820] =
    -1.4e+18 * refC * x2165 * x25 *
      exp(-g_RT[19] + g_RT[20] - g_RT[2] + x2158) -
    sc[10] * x3901 - sc[10] * x8144 - sc[10] * x8147 - sc[12] * x8446 -
    sc[16] * x6078 - sc[16] * x8201 - sc[16] * x8476 -
    960000.0 * sc[18] * x9240 + 30000000.0 * sc[20] * x744 -
    30000000.0 * sc[20] * x752 + 100000000.0 * sc[20] * x906 -
    100000000.0 * sc[20] * x915 - sc[21] * x4823 - sc[4] * x3017 -
    sc[4] * x6569 - sc[5] * x602 - sc[5] * x6607 - sc[5] * x7164 -
    sc[6] * x3258 - sc[8] * x7200 + x1055 * x35 + x106 * x35 -
    100000000.0 * x12 - 30000000.0 * x148 -
    20000000.0 * x217 * exp(-3019.29999482832 * invT) + x2556 -
    7.0e+44 * x27 * x7280 + x4909 + x6178 + 20000000.0 * x699 * x808 - x7252 -
    20000000.0 * x808 * x904 + x9354 + x9373 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x1052 + x1057) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))) +
    (-x1055 * x74 - x106 * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[860] =
    40000000.0 * sc[10] * x882 + 60000000.0 * sc[11] * x750 + sc[16] * x8478 -
    sc[20] * x4823 - 100000000.0 * sc[20] * x518 - 30000000.0 * sc[20] * x750 +
    2000000.0 * sc[2] + 300000.0 * sc[5] + 20000.0 * sc[9] + x2253 * x477 +
    x321 * x518 + x368 * x882 - 20000000.0 * x808 * x882 + x9372 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (x1061 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[900] =
    30000000.0 * sc[20] * x776 - 30000000.0 * sc[20] * x781 +
    100000000.0 * sc[20] * x919 - 100000000.0 * sc[20] * x920 +
    2.1e+45 * x1048 - x1050 * (6.0 * x240 * x7289 + 0.84 * x240 * x7290) +
    1.8375e+77 * x1051 * x32 + x1055 * x51 + x106 * x51 -
    1.8375e+77 * x31 * x32 - x368 * x909 + x368 * x910 + x5101 -
    2.1e+45 * x7281 + x7302 * (6.0 * x240 * x7289 + 0.84 * x240 * x7290) +
    20000000.0 * x808 * x909 - 20000000.0 * x808 * x910 + x9373 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x126 - x308) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x776 + x781 + (-x234) * (x126 - x308)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))) +
    (-x1055 * x74 - x106 * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[940] =
    50000000.0 * sc[10] + 100000000.0 * sc[20] * x180 +
    30000000.0 * sc[20] * x785 - 30000000.0 * sc[20] * x793 -
    100000000.0 * sc[20] * x923 + x3200 - x368 * x684 + x368 * x768 + x5184 +
    20000000.0 * x684 * x808 - 20000000.0 * x768 * x808 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x303 + x310) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[980] =
    40000000.0 * sc[10] * x772 + 60000000.0 * sc[11] * x801 -
    30000000.0 * sc[20] * x801 - 100000000.0 * sc[20] * x925 + x1055 * x609 +
    x106 * x609 + x321 * x925 + x368 * x772 - 20000000.0 * x772 * x808 + x9370 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x325 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x801 + (-x234) * (x325 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1020] =
    x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1060] =
    sc[4] * x6454 + 95100.0 * x5258 + x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1100] =
    60000000.0 * sc[11] * x803 - 30000000.0 * sc[20] * x803 +
    30000000.0 * sc[2] * x570 + x3774 + x6240 + x9366 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x326 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1140] =
    40000000.0 * sc[10] * x911 + 60000000.0 * sc[11] * x826 -
    30000000.0 * sc[20] * x826 - 100000000.0 * sc[20] * x927 +
    20000000.0 * sc[2] * x2748 + 50000000.0 * sc[2] * x397 + x321 * x927 +
    x368 * x911 - 20000000.0 * x808 * x911 + x9372 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x336 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1180] =
    8000000000000000.0 * sc[2] * exp(x2576) + x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1220] =
    x8313 + x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1260] =
    1.6e+16 * x5347 + x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1300] =
    60000000.0 * sc[11] * x816 - 30000000.0 * sc[20] * x816 + x3774 + x9366 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x476 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1340] =
    30000000.0 * sc[20] * x818 - 30000000.0 * sc[20] * x849 +
    100000000.0 * sc[20] * x928 - 100000000.0 * sc[20] * x932 + x2556 +
    x285 * x368 - 20000000.0 * x285 * x808 - x368 * x493 +
    20000000.0 * x493 * x808 + x5442 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x257 + x356) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))) +
    (-x1055 * x74 - x106 * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1380] =
    x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1420] =
    40000000.0 * sc[10] * x357 + 60000000.0 * sc[11] * x863 +
    100000000.0 * sc[20] * x180 + 30000000.0 * sc[20] * x657 -
    30000000.0 * sc[20] * x863 - 100000000.0 * sc[20] * x933 + x3200 +
    x321 * x933 + x357 * x368 - 20000000.0 * x357 * x808 + x3773 + x5933 +
    20000000.0 * x764 * x808 + x9356 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x367 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x863 + (-x234) * (x367 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1460] =
    40000000.0 * sc[10] * x358 + 60000000.0 * sc[11] * x354 -
    30000000.0 * sc[20] * x354 - 100000000.0 * sc[20] * x934 + x321 * x934 +
    x358 * x368 - 20000000.0 * x358 * x808 + x9372 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x402 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x354 - x657 + (-x234) * (x402 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1500] =
    60000000.0 * sc[11] * x363 - 30000000.0 * sc[20] * x363 + x3774 + x9366 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) * (x466 - x877) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1540] =
    x9368 +
    (-60000000.0 * sc[11] * x234 + 30000000.0 * sc[20] * x234) *
      (-x877 + x887) +
    (40000000.0 * sc[10] * x235 + 100000000.0 * sc[20] * x220 - x220 * x321 +
     x235 * x368 - 20000000.0 * x235 * x808) *
      (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (100000000.0 * sc[20] * x117 - x117 * x321) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))) +
    (-x1055 * x74 - x106 * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[21] = x2027 - x2252 * x2282 + x2252 * x2291 +
          2.10395779078274e+51 * x2259 * x2263 -
          2.10395779078274e+51 * x2259 * x2278 + 1.4189e+27 * x2271 -
          1.4189e+27 * x2276 + x274 * x283 - x274 * x344 + x9292 +
          (-x220 * x274) * (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-x117 * x274) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[61] = x2517 - x274 * x627 + x274 * x650 +
          (-x220 * x274) * (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-x117 * x274) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[101] = 2.027e+27 * sc[20] * x2250 * x27 * exp(x2267) -
           sc[21] * x2022 * exp(x1982) - 4990000.0 * sc[21] * x2768 -
           2000000.0 * sc[21] + sc[30] * x2692 + x2517 + 1.6e+16 * x2578 +
           x2583 - x274 * x666 + x274 * x671 +
           (-x220 * x274) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
           (-x117 * x274) *
             (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[141] = -16040000.0 * sc[21] + 96000000.0 * sc[30] + x2517 - x274 * x679 +
           x274 * x696 + x5713 + x5759 +
           (-x220 * x274) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-x117 * x274) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[181] =
    24000000.0 * sc[13] * x2801 * x6577 - sc[21] * x5800 + x2517 - x274 * x700 +
    x274 * x701 + x6474 - x6537 +
    (-x220 * x274) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x274) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[221] = sc[20] * x7164 - 24600000.0 * sc[21] + sc[22] * x7126 +
           24000000.0 * sc[30] + x9379 +
           (-x220 * x274) * (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-x117 * x274) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[261] =
    sc[20] * x3258 - sc[21] * x3252 + x2273 - x274 * x726 + x274 * x732 +
    (-x220 * x274) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x274) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[301] =
    -sc[21] * x6675 + 1.80339239209949e+52 * x2259 * x2263 -
    1.80339239209949e+52 * x2259 * x2278 + 1.2162e+28 * x2271 -
    1.2162e+28 * x2276 - x2282 * x3662 + x2291 * x3662 - x274 * x733 +
    x274 * x740 + x3608 + x7997 +
    (-x220 * x274) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x274) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[341] = sc[20] * x7200 - x7185 + x9379 +
           (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-x117 * x274) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[381] = -20000.0 * sc[21] + sc[22] * x7215 + x2517 - x274 * x745 +
           x274 * x747 +
           (-x220 * x274) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-x117 * x274) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[421] = sc[13] * x5976 + sc[28] * x8114 + x2517 + 9980000.0 * x3903 + x6795 +
           x8099 + x8129 +
           (-x220 * x274) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-x117 * x274) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[461] = -sc[21] * x8156 + x2273 - x274 * x786 + x274 * x809 +
           (-x220 * x274) * (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-x117 * x274) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[501] =
    sc[20] * x8446 - sc[21] * x6023 + x274 * x330 + x3504 +
    (-x220 * x274) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x274) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[541] =
    sc[10] * x5976 - sc[21] * x6035 + x274 * x851 + x3504 - x6844 + x6853 +
    (-x220 * x274) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x274) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[581] =
    x274 * x859 + x3504 +
    (-x220 * x274) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x274) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[621] =
    x274 * x867 + x3504 +
    (-x220 * x274) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x274) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[661] = -sc[21] * x8478 -
           x2251 * x2282 * (0.42 * x2284 * x240 + 3.0 * x2285 * x240) +
           x2251 * x2291 * (0.42 * x2284 * x240 + 3.0 * x2285 * x240) +
           4.5084809802487197e+51 * x2259 * x2263 -
           4.5084809802487197e+51 * x2259 * x2278 + 3.0405e+27 * x2271 -
           3.0405e+27 * x2276 - x274 * x341 + x274 * x343 + x4419 + x9337 +
           (-x220 * x274) * (-x713 + x719 + (-x234) * (x593 - x993)) +
           (-x117 * x274) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[701] =
    x1 * x274 + x2273 - x274 * x890 +
    (-x220 * x274) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x274) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[741] =
    x2517 - x274 * x892 + x274 * x900 +
    (-x220 * x274) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x274) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[781] = -sc[21] * x9272 + x274 * x905 + x3504 - x8253 +
           (-x220 * x274) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-x117 * x274) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[821] =
    sc[12] * x8446 - sc[21] * x4823 + sc[5] * x7164 + sc[6] * x3258 +
    sc[8] * x7200 + 2.027e+27 * x2250 * x956 * exp(x2267) + x2517 -
    x274 * x906 + x274 * x915 +
    (-x220 * x274) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x274) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[861] =
    -sc[10] * x3895 - sc[10] * x8125 - sc[11] * x8156 - sc[12] * x6023 -
    sc[13] * x6035 - sc[16] * x8478 - sc[19] * x9272 - sc[20] * x4823 -
    sc[2] * x2022 * exp(x1982) - 4990000.0 * sc[2] * x2768 - 2000000.0 * sc[2] -
    16040000.0 * sc[3] - sc[4] * x5800 - 24600000.0 * sc[5] - sc[6] * x3252 -
    sc[7] * x6675 - 20000.0 * sc[9] - x2253 * x477 + x274 * x518 + x3504 -
    x6534 - x7258 - x8267 +
    (-x220 * x274) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x274) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[901] = sc[5] * x7126 + sc[9] * x7215 +
           40000000.0 * x12 * exp(276.769166192596 * invT) -
           x2251 * x2282 * (0.84 * x2284 * x240 + 6.0 * x2285 * x240) +
           x2251 * x2291 * (0.84 * x2284 * x240 + 6.0 * x2285 * x240) +
           9.0169619604974394e+51 * x2259 * x2263 -
           9.0169619604974394e+51 * x2259 * x2278 + 6.081e+27 * x2271 -
           6.081e+27 * x2276 - x274 * x919 + x274 * x920 + x4967 + x5069 +
           x6190 + x6997 + x8273 + x9353 +
           (-x220 * x274) * (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-x117 * x274) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[941] =
    x274 * x923 + x3504 +
    (-x220 * x274) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x274) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[981] = x274 * x925 + x3504 +
           (-x220 * x274) * (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-x117 * x274) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1021] = x9379 + (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1061] = x9379 + (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1101] =
    x9379 + (-x220 * x274) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x274) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1141] =
    sc[10] * x8114 + x274 * x927 + x3504 +
    (-x220 * x274) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x274) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1181] = x6253 + x9379 +
            (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1221] = sc[2] * x2692 + 96000000.0 * sc[3] + 24000000.0 * sc[5] + x9379 +
            (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1261] = 1.6e+16 * x5347 + x9253 + x9379 +
            (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1301] =
    x9379 + (-x220 * x274) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x274) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1341] =
    x2517 - x274 * x928 + x274 * x932 +
    (-x220 * x274) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x274) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1381] = x9379 + (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1421] = x274 * x933 + x3504 +
            (-x220 * x274) * (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-x117 * x274) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1461] = x274 * x934 + x3504 +
            (-x220 * x274) * (x354 - x657 + (-x234) * (x402 - x877)) +
            (-x117 * x274) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1501] =
    x9379 + (-x220 * x274) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x274) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1541] = x9379 + (-x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x274) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[22] = 1.0344481132075499e+66 * refC * sc[22] * x27 * x7863 *
            exp(-2.0 * g_RT[10] + g_RT[22] + x7876) /
            ((x7848 + 1.0) * (x7848 + 1.0)) -
          1.0344481132075499e+66 * ((sc[10]) * (sc[10])) * x27 * x7863 *
            exp(x7876) / ((x7848 + 1.0) * (x7848 + 1.0)) +
          x1829 * x7858 + 1.393e+29 * x1981 * x2015 - 1.393e+29 * x1985 +
          5.32067178502879e+46 * x1990 * x1996 -
          5.32067178502879e+46 * x1990 * x2018 +
          x2011 * (1.4 * x2000 * x240 + 0.196 * x2001 * x240) -
          x2024 * (1.4 * x2000 * x240 + 0.196 * x2001 * x240) - x274 * x283 +
          x274 * x344 - x7849 * x7858 + 1.239e+38 * x7874 - 1.239e+38 * x7879 +
          (x220 * x274) * (x255 - x371 + (-x234) * (-x607 + x659)) +
          (x117 * x274) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[62] = x274 * x627 - x274 * x650 + x7998 +
          (x220 * x274) * (x468 - x606 + (-x234) * (-x687 + x709)) +
          (x117 * x274) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[102] = sc[21] * x2022 * exp(x1982) - x2583 + x274 * x666 - x274 * x671 +
           x7998 + (x220 * x274) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
           (x117 * x274) *
             (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[142] = x274 * x679 - x274 * x696 - x5713 + x7998 +
           (x220 * x274) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (x117 * x274) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[182] = sc[21] * x5800 + x274 * x700 - x274 * x701 - x6474 + x7998 +
           (x220 * x274) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
           (x117 * x274) * (-x721 + x728 +
                            (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[222] = 300000.0 * sc[21] - sc[22] * x7126 + x9389 +
           (x220 * x274) * (x176 - x643 + (-x234) * (-x782 + x794)) +
           (x117 * x274) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[262] = sc[21] * x3252 + x2003 + x274 * x726 - x274 * x732 +
           (x220 * x274) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
           (x117 * x274) * (-x741 + x748 +
                            (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[302] =
    sc[21] * x6675 + x1829 * (12.0 * x240 * x7854 + 1.68 * x240 * x7857) +
    1.194e+30 * x1981 * x2015 - 1.194e+30 * x1985 +
    4.5605758157389599e+47 * x1990 * x1996 -
    4.5605758157389599e+47 * x1990 * x2018 + x2011 * x3603 - x2024 * x3603 +
    x274 * x733 - x274 * x740 -
    x7849 * (12.0 * x240 * x7854 + 1.68 * x240 * x7857) + 1.062e+39 * x7874 -
    8.8666981132075502e+66 * x7878 - 1.062e+39 * x7879 +
    8.8666981132075502e+66 * x7881 +
    (x220 * x274) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (x117 * x274) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[342] =
    x7185 + x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[382] = -sc[22] * x7215 + x274 * x745 - x274 * x747 + x7998 +
           (x220 * x274) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (x117 * x274) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[422] = 3.54e+38 * sc[10] * x27 * x7860 * x7863 * exp(x7865) +
           sc[21] * x8125 + x274 * x759 - x274 * x767 + x7998 - x8099 +
           (x220 * x274) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (x117 * x274) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[462] = sc[21] * x8156 + x2003 + x274 * x786 - x274 * x809 +
           (x220 * x274) * (x292 - x693 + (-x234) * (-x929 + x935)) +
           (x117 * x274) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[502] = -x274 * x330 + x9388 +
           (x220 * x274) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
           (x117 * x274) * (-x764 + x780 +
                            (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[542] = -x274 * x851 + x9388 +
           (x220 * x274) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
           (x117 * x274) * (-x879 + x880 +
                            (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[582] = -x274 * x859 + x9388 +
           (x220 * x274) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
           (x117 * x274) * (-x764 + x884 +
                            (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[622] = -x274 * x867 + x9388 +
           (x220 * x274) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
           (x117 * x274) * (-x764 + x886 +
                            (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[662] = x1829 * (3.0 * x240 * x7854 + 0.42 * x240 * x7857) +
           2.985e+29 * x1981 * x2015 - 2.985e+29 * x1985 +
           1.14014395393474e+47 * x1990 * x1996 -
           1.14014395393474e+47 * x1990 * x2018 + x2011 * x4414 -
           x2024 * x4414 + x274 * x341 - x274 * x343 -
           x7849 * (3.0 * x240 * x7854 + 0.42 * x240 * x7857) +
           2.655e+38 * x7874 - 2.2166745283018902e+66 * x7878 -
           2.655e+38 * x7879 + 2.2166745283018902e+66 * x7881 +
           (x220 * x274) * (-x713 + x719 + (-x234) * (x593 - x993)) +
           (x117 * x274) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[702] = -x1 * x274 + x2003 + x274 * x890 +
           (x220 * x274) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
           (x117 * x274) * (-x894 + x897 +
                            (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[742] =
    x274 * x892 - x274 * x900 + x7998 +
    (x220 * x274) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (x117 * x274) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[782] = -x274 * x905 + x9388 +
           (x220 * x274) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (x117 * x274) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[822] =
    x274 * x906 - x274 * x915 + x7998 +
    (x220 * x274) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (x117 * x274) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[862] = sc[10] * x8125 + sc[11] * x8156 + sc[2] * x2022 * exp(x1982) +
           sc[4] * x5800 + 300000.0 * sc[5] + sc[6] * x3252 + sc[7] * x6675 -
           x274 * x518 + x7258 + x9388 +
           (x220 * x274) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
           (x117 * x274) * (-x764 + x882 +
                            (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[902] = -sc[5] * x7126 - sc[9] * x7215 -
           40000000.0 * x12 * exp(276.769166192596 * invT) +
           x1829 * (6.0 * x240 * x7854 + 0.84 * x240 * x7857) -
           1.99e+29 * x1981 * x1983 * x477 + 5.97e+29 * x1981 * x2015 -
           5.97e+29 * x1985 + 2.2802879078694799e+47 * x1990 * x1996 -
           2.2802879078694799e+47 * x1990 * x2018 + x2011 * x5064 -
           x2024 * x5064 + x274 * x919 - x274 * x920 -
           1.77e+38 * x477 * x7860 * x7866 - x4967 - x6190 - x6997 -
           x7849 * (6.0 * x240 * x7854 + 0.84 * x240 * x7857) +
           5.31e+38 * x7874 - 4.4333490566037699e+66 * x7878 -
           5.31e+38 * x7879 + 4.4333490566037699e+66 * x7881 - x8273 +
           (x220 * x274) * (-x776 + x781 + (-x234) * (x126 - x308)) +
           (x117 * x274) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[942] = -x274 * x923 + x9388 +
           (x220 * x274) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
           (x117 * x274) * (-x684 + x768 +
                            (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[982] = -x274 * x925 + x9388 +
           (x220 * x274) * (-x657 + x801 + (-x234) * (x325 - x877)) +
           (x117 * x274) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1022] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1062] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1102] =
    x9389 + (x220 * x274) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1142] = -x274 * x927 + x9388 +
            (x220 * x274) * (-x657 + x826 + (-x234) * (x336 - x877)) +
            (x117 * x274) * (-x764 + x911 +
                             (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1182] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1222] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1262] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1302] =
    x9389 + (x220 * x274) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1342] =
    x274 * x928 - x274 * x932 + x7998 +
    (x220 * x274) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (x117 * x274) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1382] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1422] = -x274 * x933 + x9388 +
            (x220 * x274) * (-x657 + x863 + (-x234) * (x367 - x877)) +
            (x117 * x274) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1462] = -x274 * x934 + x9388 +
            (x220 * x274) * (x354 - x657 + (-x234) * (x402 - x877)) +
            (x117 * x274) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1502] =
    x9389 + (x220 * x274) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (x117 * x274) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1542] =
    x9389 + (x220 * x274) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (x117 * x274) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[23] = -50000000.0 * sc[23] * x255 + 30000000.0 * sc[23] * x349 -
          30000000.0 * sc[23] * x362 + 50000000.0 * sc[23] * x371 +
          1.883e+16 * x118 * x280 + 1.013054e+25 * x124 * x634 -
          1.013054e+25 * x253 + x255 * x297 - 1.883e+16 * x280 * x830 +
          x283 * x954 - x297 * x371 - x344 * x954 + x8693 * x8698 -
          x8693 * x8718 +
          (50000000.0 * sc[23] * x234 - x234 * x297) * (-x607 + x659) +
          (-30000000.0 * sc[23] * x235 - x220 * x954) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-x117 * x954) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[63] = 30000000.0 * sc[23] * x317 - 50000000.0 * sc[23] * x468 +
          50000000.0 * sc[23] * x606 - 30000000.0 * sc[23] * x680 +
          x297 * x468 - x297 * x606 - x627 * x954 + x650 * x954 + x7851 +
          (50000000.0 * sc[23] * x234 - x234 * x297) * (-x687 + x709) +
          (-30000000.0 * sc[23] * x235 - x220 * x954) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-x117 * x954) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[103] = -sc[23] * x2723 + 50000000.0 * sc[23] * x612 -
           50000000.0 * sc[23] * x616 - 30000000.0 * sc[23] * x677 +
           30000000.0 * sc[23] * x685 - 100000000.0 * sc[23] +
           50000000.0 * sc[24] * x2786 + 100000000.0 * x227 * x232 -
           x297 * x612 + x297 * x616 - x666 * x954 + x671 * x954 + x7851 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x723 + x730) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x612 + x616 + (-x234) * (-x723 + x730)) +
           (-x117 * x954) *
             (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[143] = 16.32 * sc[18] * exp(x97) - 30000000.0 * sc[23] * x166 +
           50000000.0 * sc[23] * x622 - 50000000.0 * sc[23] * x630 +
           30000000.0 * sc[23] * x706 - 100000000.0 * sc[23] +
           10000000.0 * sc[24] * x2786 - x297 * x622 + x297 * x630 -
           x679 * x954 + x696 * x954 + x7851 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x739 + x743) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-x117 * x954) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[183] =
    50000000.0 * sc[23] * x131 - sc[23] * x5827 - 50000000.0 * sc[23] * x633 +
    30000000.0 * sc[23] * x721 - 30000000.0 * sc[23] * x728 +
    7500000.0 * sc[24] * x6508 - x131 * x297 + 1600000.0 * x232 * x6498 +
    x297 * x633 - x700 * x954 + x701 * x954 + x7851 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x756 + x763) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x954) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[223] = -50000000.0 * sc[23] * x176 + 50000000.0 * sc[23] * x643 +
           30000000.0 * sc[23] * x736 - 30000000.0 * sc[23] * x737 +
           x176 * x297 - x297 * x643 + x3225 + x617 * x954 + x7851 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x782 + x794) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-x117 * x954) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[263] =
    50000000.0 * sc[23] * x207 - 50000000.0 * sc[23] * x3339 -
    50000000.0 * sc[23] * x653 + 30000000.0 * sc[23] * x741 -
    30000000.0 * sc[23] * x748 - x207 * x297 + x252 + x297 * x653 -
    x726 * x954 + x732 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x829 + x843) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x954) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[303] =
    50000000.0 * sc[23] * x159 - 50000000.0 * sc[23] * x370 - sc[23] * x6685 +
    30000000.0 * sc[23] * x751 - 30000000.0 * sc[23] * x760 +
    1.614e+17 * x118 * x280 + 8.68332e+25 * x124 * x634 - x159 * x297 -
    8.68332e+25 * x253 - 1.614e+17 * x280 * x830 + x297 * x370 - x733 * x954 +
    x740 * x954 + x8698 * x8868 - x8718 * x8868 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x864 + x871) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x954) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[343] = x8694 + (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-x117 * x954) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[383] = -30000000.0 * sc[23] * x145 + 50000000.0 * sc[23] * x674 -
           50000000.0 * sc[23] * x676 - 1600000.0 * sc[23] * x6767 +
           30000000.0 * sc[23] * x840 - x297 * x674 + x297 * x676 -
           x745 * x954 + x747 * x954 + x7851 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x898 + x903) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-x117 * x954) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[423] = 50000000.0 * sc[23] * x686 - 50000000.0 * sc[23] * x689 -
           30000000.0 * sc[23] * x856 + 30000000.0 * sc[23] * x862 -
           50000000.0 * sc[23] - x297 * x686 + x297 * x689 - x759 * x954 +
           x767 * x954 + x7851 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x912 + x918) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-x117 * x954) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[463] = -50000000.0 * sc[23] * x292 + 50000000.0 * sc[23] * x693 +
           30000000.0 * sc[23] * x861 - 30000000.0 * sc[23] * x875 + x252 +
           x292 * x297 - x297 * x693 - x786 * x954 + x809 * x954 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (-x929 + x935) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-x117 * x954) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[503] =
    -50000000.0 * sc[23] * x704 - 30000000.0 * sc[23] * x780 + x297 * x704 +
    x330 * x954 + x8846 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x945) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x954) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[543] =
    50000000.0 * sc[23] * x705 - 50000000.0 * sc[23] * x708 +
    30000000.0 * sc[23] * x879 - 30000000.0 * sc[23] * x880 - x297 * x705 +
    x297 * x708 + x3225 + x7851 + x851 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x953 + x958) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x954) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[583] =
    -50000000.0 * sc[23] * x710 - 30000000.0 * sc[23] * x884 + x297 * x710 +
    x859 * x954 + x8846 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x962) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x954) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[623] =
    -50000000.0 * sc[23] * x711 - 30000000.0 * sc[23] * x886 + x297 * x711 +
    x867 * x954 + x8846 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x969) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x954) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[663] =
    40000000.0 * sc[18] * x437 * x9008 + 50000000.0 * sc[18] * x580 +
    30000000.0 * sc[19] * x521 + sc[20] * x8201 + 50000000.0 * sc[23] * x713 -
    50000000.0 * sc[23] * x719 + 30000000.0 * sc[23] * x889 -
    30000000.0 * sc[23] * x893 + sc[35] * x8984 +
    3200000.0 * sc[4] * x437 * x6498 + 4.035e+16 * x118 * x280 +
    100000000.0 * x12 * x82 + x121 * x148 * x280 + 2.17083e+25 * x124 * x634 +
    200000000.0 * x227 * x2312 - 2.17083e+25 * x253 - 4.035e+16 * x280 * x830 -
    x297 * x713 + x297 * x719 - x341 * x954 + x343 * x954 + x8698 * x9000 -
    x8718 * x9000 + (50000000.0 * sc[23] * x234 - x234 * x297) * (x593 - x993) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-x117 * x954) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[703] =
    -50000000.0 * sc[23] * x155 + 50000000.0 * sc[23] * x722 +
    30000000.0 * sc[23] * x894 - 30000000.0 * sc[23] * x897 + x1 * x954 +
    x155 * x297 + x252 - x297 * x722 - x890 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x1014 + x839) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x954) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[743] =
    50000000.0 * sc[16] * x580 + 50000000.0 * sc[23] * x731 -
    50000000.0 * sc[23] * x738 - 30000000.0 * sc[23] * x872 +
    30000000.0 * sc[23] * x902 + 16.32 * sc[3] * exp(x97) +
    20000000.0 * x232 * x9008 - x297 * x731 + x297 * x738 + x7851 -
    x892 * x954 + x900 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x1027 + x1036) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x954) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[783] = 30000000.0 * sc[16] * x521 - 30000000.0 * sc[23] * x214 -
           50000000.0 * sc[23] * x742 + x297 * x742 + x8846 + x905 * x954 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (x1042 - x877) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-x117 * x954) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[823] =
    sc[16] * x8201 + 30000000.0 * sc[23] * x699 + 50000000.0 * sc[23] * x744 -
    50000000.0 * sc[23] * x752 - 30000000.0 * sc[23] * x904 - x297 * x744 +
    x297 * x752 + x7851 - x906 * x954 + x915 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x1052 + x1057) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x954) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[863] =
    -50000000.0 * sc[23] * x750 - 30000000.0 * sc[23] * x882 + x297 * x750 +
    x518 * x954 + x8846 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (x1061 - x877) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x954) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[903] = 50000000.0 * sc[23] * x776 - 50000000.0 * sc[23] * x781 +
           30000000.0 * sc[23] * x909 - 30000000.0 * sc[23] * x910 +
           8.07e+16 * x118 * x280 + 4.34166e+25 * x124 * x634 -
           4.34166e+25 * x253 - 8.07e+16 * x280 * x830 - x297 * x776 +
           x297 * x781 + x8689 * x8698 - x8689 * x8718 - x919 * x954 +
           x920 * x954 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (x126 - x308) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-x117 * x954) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[943] =
    -50000000.0 * sc[10] + 30000000.0 * sc[23] * x684 -
    30000000.0 * sc[23] * x768 + 50000000.0 * sc[23] * x785 -
    50000000.0 * sc[23] * x793 - 40000000.0 * sc[23] - sc[2] * x2723 -
    100000000.0 * sc[2] - 100000000.0 * sc[3] - sc[4] * x5827 -
    50000000.0 * sc[6] * x3339 - sc[7] * x6685 - 1600000.0 * sc[9] * x6767 -
    50000000.0 * x148 - 30000000.0 * x217 - x297 * x785 + x297 * x793 + x3225 -
    x542 + x7851 - x8691 + x923 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x303 + x310) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x954) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[983] = -30000000.0 * sc[23] * x772 - 50000000.0 * sc[23] * x801 +
           50000000.0 * sc[2] * x2786 + 10000000.0 * sc[3] * x2786 +
           7500000.0 * sc[4] * x6508 + x297 * x801 + x8846 + x925 * x954 +
           (50000000.0 * sc[23] * x234 - x234 * x297) * (x325 - x877) +
           (-30000000.0 * sc[23] * x235 - x220 * x954) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-x117 * x954) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1023] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1063] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1103] =
    -50000000.0 * sc[23] * x803 + x297 * x803 + x8037 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (x326 - x877) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x954) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1143] =
    -50000000.0 * sc[23] * x826 - 30000000.0 * sc[23] * x911 + x297 * x826 +
    x8846 + x927 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (x336 - x877) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x954) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1183] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1223] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1263] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1303] =
    -50000000.0 * sc[23] * x816 + x297 * x816 + x8037 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (x476 - x877) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x954) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1343] =
    -30000000.0 * sc[23] * x285 + 30000000.0 * sc[23] * x493 +
    50000000.0 * sc[23] * x818 - 50000000.0 * sc[23] * x849 - x297 * x818 +
    x297 * x849 + x7851 - x9165 - x928 * x954 + x932 * x954 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (-x257 + x356) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x954) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1383] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1423] = sc[16] * x8984 - 30000000.0 * sc[23] * x357 -
            50000000.0 * sc[23] * x863 + x297 * x863 + x8846 + x933 * x954 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (x367 - x877) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-x117 * x954) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1463] = -50000000.0 * sc[23] * x354 - 30000000.0 * sc[23] * x358 +
            x297 * x354 + x8846 + x934 * x954 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (x402 - x877) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (-x117 * x954) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1503] =
    -50000000.0 * sc[23] * x363 + x297 * x363 + x8037 +
    (50000000.0 * sc[23] * x234 - x234 * x297) * (x466 - x877) +
    (-30000000.0 * sc[23] * x235 - x220 * x954) *
      (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x954) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1543] = x8694 +
            (50000000.0 * sc[23] * x234 - x234 * x297) * (-x877 + x887) +
            (-30000000.0 * sc[23] * x235 - x220 * x954) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-x117 * x954) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[24] =
    1.883e+21 * sc[16] * x202 - x171 * x8676 -
    6.2534197530864195e+36 * x194 * x238 +
    6.2534197530864195e+36 * x194 * x475 + x1977 - x315 * x349 + x315 * x362 -
    x349 * x67 + x362 * x67 - 1.883e+21 * x640 * x8664 + x8676 * x8680 +
    (-x234 * x624) * (-x607 + x659) +
    (x235 * x315 + x235 * x67) * (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-20000000.0 * sc[4] * x74) *
      (x283 - x344 + (-x220) * (x255 - x371 + (-x234) * (-x607 + x659)) +
       (-x117) *
         (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659))));
  J[64] =
    x2483 - x315 * x317 + x315 * x680 - x317 * x67 + x468 * x624 - x606 * x624 +
    x67 * x680 + x8673 + (-x234 * x624) * (-x687 + x709) +
    (x235 * x315 + x235 * x67) * (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-20000000.0 * sc[4] * x74) *
      (-x627 + x650 + (-x220) * (x468 - x606 + (-x234) * (-x687 + x709)) +
       (-x117) *
         (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709))));
  J[104] =
    x2482 + x2808 + x2894 + x315 * x677 - x315 * x685 + x67 * x677 -
    x67 * x685 + x8673 + (-x234 * x624) * (-x723 + x730) +
    (x235 * x315 + x235 * x67) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-20000000.0 * sc[4] * x74) *
      (-x666 + x671 + (-x220) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
       (-x117) *
         (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730))));
  J[144] =
    48000000.0 * sc[19] + sc[29] * x2342 + x166 * x315 + x2483 + x2894 -
    x315 * x706 + x5766 - x622 * x624 + x624 * x630 + x8673 +
    (-x234 * x624) * (-x739 + x743) +
    (x235 * x315 + x235 * x67) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-20000000.0 * sc[4] * x74) *
      (-x679 + x696 + (-x220) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
       (-x117) *
         (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743))));
  J[184] =
    sc[23] * x5827 - sc[24] * x5796 - 7500000.0 * sc[24] * x6508 +
    10000000.0 * sc[25] * x6508 + x2482 + x3101 - x315 * x721 + x315 * x728 -
    x67 * x721 + x67 * x728 + x8673 + (-x234 * x624) * (-x756 + x763) +
    (x235 * x315 + x235 * x67) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-20000000.0 * sc[4] * x74) *
      (-x700 + x701 + (-x220) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
       (-x117) *
         (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763))));
  J[224] =
    -sc[24] * x7138 + x176 * x624 + x2483 - x315 * x736 + x315 * x737 -
    x624 * x643 - x67 * x736 + x67 * x737 + x8673 +
    (-x234 * x624) * (-x782 + x794) +
    (x235 * x315 + x235 * x67) * (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (x176 - x643 + (-x234) * (-x782 + x794)) +
       (-x117) *
         (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794))));
  J[264] =
    50000000.0 * sc[23] * x3339 - sc[24] * x3248 + 20000000.0 * sc[4] * x814 +
    x135 - x207 * x624 - x315 * x741 + x315 * x748 + x3330 + x624 * x653 -
    x67 * x741 + x67 * x748 + (-x234 * x624) * (-x829 + x843) +
    (x235 * x315 + x235 * x67) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-20000000.0 * sc[4] * x74) *
      (-x726 + x732 + (-x220) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
       (-x117) *
         (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843))));
  J[304] =
    1.614e+22 * sc[16] * x202 + sc[23] * x6685 - sc[24] * x6670 - x171 * x7415 -
    5.3600740740740798e+37 * x194 * x238 +
    5.3600740740740798e+37 * x194 * x475 - x315 * x751 + x315 * x760 + x3621 -
    1.614e+22 * x640 * x8664 - x67 * x751 + x67 * x760 + x7415 * x8680 +
    (-x234 * x624) * (-x864 + x871) +
    (x235 * x315 + x235 * x67) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-20000000.0 * sc[4] * x74) *
      (-x733 + x740 + (-x220) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
       (-x117) *
         (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871))));
  J[344] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[384] =
    140000.0 * sc[25] + 20000000.0 * sc[4] * x866 + x145 * x315 + x145 * x67 +
    x2482 - x315 * x840 - x624 * x674 + x624 * x676 - x67 * x840 + x8673 +
    (-x234 * x624) * (-x898 + x903) +
    (x235 * x315 + x235 * x67) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-20000000.0 * sc[4] * x74) *
      (-x745 + x747 + (-x220) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
       (-x117) *
         (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903))));
  J[424] =
    sc[16] * x3946 + x2483 + x315 * x856 - x315 * x862 - x3948 - x624 * x686 +
    x624 * x689 + x67 * x856 - x67 * x862 + x8673 +
    (-x234 * x624) * (-x912 + x918) +
    (x235 * x315 + x235 * x67) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-20000000.0 * sc[4] * x74) *
      (-x759 + x767 + (-x220) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
       (-x117) *
         (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918))));
  J[464] =
    20000000.0 * sc[4] * x944 + x135 + x292 * x624 - x315 * x861 + x315 * x875 +
    x3330 - x624 * x693 - x67 * x861 + x67 * x875 +
    (-x234 * x624) * (-x929 + x935) +
    (x235 * x315 + x235 * x67) * (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-20000000.0 * sc[4] * x74) *
      (-x786 + x809 + (-x220) * (x292 - x693 + (-x234) * (-x929 + x935)) +
       (-x117) *
         (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935))));
  J[504] =
    20000000.0 * sc[4] * x946 + x315 * x780 + x624 * x704 + x67 * x780 + x9412 +
    (-x234 * x624) * (-x877 + x945) +
    (x235 * x315 + x235 * x67) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x330 + (-x220) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
       (-x117) *
         (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945))));
  J[544] =
    94600000.0 * x148 * exp(259.15658288943098 * invT) + x2483 - x315 * x879 +
    x315 * x880 - x624 * x705 + x624 * x708 - x67 * x879 + x67 * x880 + x8673 +
    (-x234 * x624) * (-x953 + x958) +
    (x235 * x315 + x235 * x67) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x851 + (-x220) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
       (-x117) *
         (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958))));
  J[584] =
    x199 + x315 * x884 + x3777 + x5929 + x624 * x710 + x67 * x884 +
    (-x234 * x624) * (-x877 + x962) +
    (x235 * x315 + x235 * x67) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x859 + (-x220) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
       (-x117) *
         (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962))));
  J[624] =
    x199 + x315 * x886 + x3777 + x5929 + x624 * x711 + x67 * x886 +
    (-x234 * x624) * (-x877 + x969) +
    (x235 * x315 + x235 * x67) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x867 + (-x220) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
       (-x117) *
         (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969))));
  J[664] =
    4.035e+21 * sc[16] * x202 - x171 * x8991 -
    1.34001851851852e+37 * x194 * x238 + 1.34001851851852e+37 * x194 * x475 +
    2.69e+21 * x202 * x27 - x315 * x889 + x315 * x893 + x4432 -
    4.035e+21 * x640 * x8664 - x67 * x889 + x67 * x893 + x8680 * x8991 +
    (-x234 * x624) * (x593 - x993) +
    (x235 * x315 + x235 * x67) * (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-20000000.0 * sc[4] * x74) *
      (-x341 + x343 + (-x220) * (-x713 + x719 + (-x234) * (x593 - x993)) +
       (-x117) *
         (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993))));
  J[704] =
    20000000.0 * sc[4] * x813 + x1026 * x217 + x135 + x155 * x624 -
    x315 * x894 + x315 * x897 + x3330 - x624 * x722 - x67 * x894 + x67 * x897 +
    (-x234 * x624) * (-x1014 + x839) +
    (x235 * x315 + x235 * x67) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-20000000.0 * sc[4] * x74) *
      (x1 - x890 + (-x220) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
       (-x117) *
         (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839))));
  J[744] =
    sc[4] * x3095 + 20000000.0 * sc[4] * x99 + x315 * x872 - x315 * x902 +
    x4752 - x624 * x731 + x624 * x738 + x67 * x872 - x67 * x902 + x8673 +
    (-x234 * x624) * (-x1027 + x1036) +
    (x235 * x315 + x235 * x67) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-20000000.0 * sc[4] * x74) *
      (-x892 + x900 + (-x220) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
       (-x117) *
         (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036))));
  J[784] =
    48000000.0 * sc[3] + 20000000.0 * sc[4] * x952 + x214 * x315 + x214 * x67 +
    x624 * x742 + x9412 + (-x234 * x624) * (x1042 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x905 + (-x220) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
       (-x117) *
         (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877))));
  J[824] =
    20000000.0 * sc[4] * x35 - x315 * x699 + x315 * x904 + x4752 - x624 * x744 +
    x624 * x752 - x67 * x699 + x67 * x904 + x8673 +
    (-x234 * x624) * (-x1052 + x1057) +
    (x235 * x315 + x235 * x67) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-20000000.0 * sc[4] * x74) *
      (-x906 + x915 + (-x220) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
       (-x117) *
         (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057))));
  J[864] =
    x199 + x315 * x882 + x3777 + x5929 + x624 * x750 + x67 * x882 +
    (-x234 * x624) * (x1061 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x518 + (-x220) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
       (-x117) *
         (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877))));
  J[904] =
    8.07e+21 * sc[16] * x202 + 20000000.0 * sc[4] * x51 - x171 * x9101 -
    2.6800370370370399e+37 * x194 * x238 +
    2.6800370370370399e+37 * x194 * x475 - x315 * x909 + x315 * x910 + x4752 -
    x624 * x776 + x624 * x781 - 8.07e+21 * x640 * x8664 - x67 * x909 +
    x67 * x910 + x8680 * x9101 + (-x234 * x624) * (x126 - x308) +
    (x235 * x315 + x235 * x67) * (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-20000000.0 * sc[4] * x74) *
      (-x919 + x920 + (-x220) * (-x776 + x781 + (-x234) * (x126 - x308)) +
       (-x117) *
         (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308))));
  J[944] =
    sc[4] * x5827 + 50000000.0 * sc[6] * x3339 + sc[7] * x6685 + x2483 -
    x315 * x684 + x315 * x768 - x624 * x785 + x624 * x793 - x67 * x684 +
    x67 * x768 + x8673 + (-x234 * x624) * (-x303 + x310) +
    (x235 * x315 + x235 * x67) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x923 + (-x220) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
       (-x117) *
         (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310))));
  J[984] =
    -10000000.0 * sc[3] * x2786 - sc[3] * x5764 - sc[4] * x5796 -
    7500000.0 * sc[4] * x6508 - sc[5] * x7138 - sc[6] * x3248 - sc[7] * x6670 +
    x315 * x772 - 2.69e+21 * x477 * x8664 + x5248 + x67 * x772 + x9412 +
    (-x234 * x624) * (x325 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x925 + (-x220) * (-x657 + x801 + (-x234) * (x325 - x877)) +
       (-x117) *
         (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877))));
  J[1024] =
    20000000.0 * sc[2] * x2892 + 20000000.0 * sc[3] * x2892 +
    10000000.0 * sc[4] * x6508 + 140000.0 * sc[9] + x1957 + x9411 +
    (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1064] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1104] =
    x624 * x803 + x9410 + (-x234 * x624) * (x326 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x803 + (-x234) * (x326 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877))));
  J[1144] =
    x199 + x315 * x911 + x3777 + x5929 + x624 * x826 + x67 * x911 +
    (-x234 * x624) * (x336 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x927 + (-x220) * (-x657 + x826 + (-x234) * (x336 - x877)) +
       (-x117) *
         (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877))));
  J[1184] =
    sc[3] * x2342 + x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1224] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1264] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1304] =
    x624 * x816 + x9410 + (-x234 * x624) * (x476 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x816 + (-x234) * (x476 - x877)) +
       (-x117) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877))));
  J[1344] =
    x2483 + x285 * x315 + x285 * x67 - x315 * x493 - x493 * x67 - x624 * x818 +
    x624 * x849 + x8673 + (-x234 * x624) * (-x257 + x356) +
    (x235 * x315 + x235 * x67) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-20000000.0 * sc[4] * x74) *
      (-x928 + x932 + (-x220) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
       (-x117) *
         (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356))));
  J[1384] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[1424] =
    x199 + x315 * x357 + x357 * x67 + x3777 + x5929 + x624 * x863 +
    (-x234 * x624) * (x367 - x877) +
    (x235 * x315 + x235 * x67) * (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x933 + (-x220) * (-x657 + x863 + (-x234) * (x367 - x877)) +
       (-x117) *
         (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877))));
  J[1464] =
    x199 + x315 * x358 + x354 * x624 + x358 * x67 + x3777 + x5929 +
    (-x234 * x624) * (x402 - x877) +
    (x235 * x315 + x235 * x67) * (x354 - x657 + (-x234) * (x402 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (-x180 + x934 + (-x220) * (x354 - x657 + (-x234) * (x402 - x877)) +
       (-x117) *
         (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877))));
  J[1504] =
    x363 * x624 + x9410 + (-x234 * x624) * (x466 - x877) +
    (x235 * x315 + x235 * x67) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (x363 - x657 + (-x234) * (x466 - x877)) +
       (-x117) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877))));
  J[1544] =
    x9411 + (-x234 * x624) * (-x877 + x887) +
    (x235 * x315 + x235 * x67) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-20000000.0 * sc[4] * x74) *
      (x717 + (-x220) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
       (-x117) * (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887))));
  J[25] = sc[25] * x1957 * x1965 + 3.0630303030303001e+50 * x1936 * x1942 -
          3.0630303030303001e+50 * x1936 * x1967 + 2.66e+29 * x1950 -
          2.66e+29 * x1955 - x1965 * x1971;
  J[65] = x1929;
  J[105] = 3.8e+29 * sc[24] * x1926 * x25 * exp(x1946) - 90000000.0 * sc[25] +
           x1929 - x2894;
  J[145] = -sc[25] * x5699 + x1929 - x2894;
  J[185] = sc[13] * x437 * x6492 + sc[24] * x5796 -
           10000000.0 * sc[25] * x6508 + x1929 - x6512;
  J[225] = 10000000.0 * sc[19] + sc[24] * x7138 + x1929;
  J[265] = sc[24] * x3248 + x9416;
  J[305] = sc[24] * x6670 + sc[25] * x1957 * x3613 +
           2.6254545454545501e+51 * x1936 * x1942 -
           2.6254545454545501e+51 * x1936 * x1967 + 2.28e+30 * x1950 -
           2.28e+30 * x1955 - x1971 * x3613;
  J[345] = x1929;
  J[385] = -158000.0 * sc[25] + x1929 + x5944;
  J[425] = sc[12] * x3892 + x1929 + x437 * x8151;
  J[465] = x9416;
  J[505] = sc[10] * x3892 + x1929;
  J[545] = sc[4] * x437 * x6492 + x1929;
  J[585] = x1929;
  J[625] = x1929;
  J[665] = sc[4] * x6492 * x6535 -
           x1927 * x1971 * (0.42 * x1962 + 3.0 * x1963) +
           x1930 * (0.42 * x1962 + 3.0 * x1963) +
           6.5636363636363603e+50 * x1936 * x1942 -
           6.5636363636363603e+50 * x1936 * x1967 + 5.7e+29 * x1950 -
           5.7e+29 * x1955 + x2801 * x8151;
  J[705] = x9416;
  J[745] = x1952;
  J[785] = 10000000.0 * sc[5] + x1929 + x6150;
  J[825] = x1952;
  J[865] = x1929;
  J[905] = x1952;
  J[945] = x1929;
  J[985] = 3.8e+29 * sc[2] * x1926 * x25 * exp(x1946) + sc[4] * x5796 +
           sc[5] * x7138 + sc[6] * x3248 + sc[7] * x6670 + x1929;
  J[1025] = -20000000.0 * sc[2] * x2892 - 90000000.0 * sc[2] -
            20000000.0 * sc[3] * x2892 - sc[3] * x5699 -
            10000000.0 * sc[4] * x6508 - 158000.0 * sc[9] + x1929 - x1957 -
            x7048 - x8297;
  J[1065] = x1929;
  J[1105] = x1929;
  J[1145] = x1929;
  J[1185] = x1929;
  J[1225] = x1929;
  J[1265] = x1929;
  J[1305] = x1929;
  J[1345] = x1929;
  J[1385] = x1929;
  J[1425] = x1929;
  J[1465] = x1929;
  J[1505] = x1929;
  J[1545] = x1929;
  J[26] = 0;
  J[66] = 0;
  J[106] = -100100.0 * x2638;
  J[146] = 0;
  J[186] = sc[20] * x3017 - sc[26] * x6454;
  J[226] = sc[20] * x6607;
  J[266] = 0;
  J[306] = sc[19] * x3536;
  J[346] = 0;
  J[386] = 0;
  J[426] = refCinv * sc[12] * x8133;
  J[466] = x437 * x8354;
  J[506] = x2801 * x8133;
  J[546] = 0;
  J[586] = 0;
  J[626] = 0;
  J[666] = refCinv * sc[11] * x8354;
  J[706] = 0;
  J[746] = 0;
  J[786] = sc[7] * x3536;
  J[826] = sc[4] * x3017 + sc[5] * x6607;
  J[866] = 0;
  J[906] = 0;
  J[946] = 0;
  J[986] = 0;
  J[1026] = 0;
  J[1066] = -sc[4] * x6454 - 100100.0 * x5258 -
            48400000000000.0 * exp(-28783.993284029999 * invT);
  J[1106] = 0;
  J[1146] = 0;
  J[1186] = 0;
  J[1226] = 0;
  J[1266] = 0;
  J[1306] = 0;
  J[1346] = 0;
  J[1386] = 0;
  J[1426] = 0;
  J[1466] = 0;
  J[1506] = 0;
  J[1546] = 0;
  J[27] = 30000000.0 * sc[20] * x255 - 30000000.0 * sc[20] * x371 +
          (-30000000.0 * sc[20] * x234) * (-x607 + x659);
  J[67] = 30000000.0 * sc[20] * x468 - 30000000.0 * sc[20] * x606 +
          (-30000000.0 * sc[20] * x234) * (-x687 + x709);
  J[107] = 18000000.0 * sc[28] + x2657 +
           (-30000000.0 * sc[20] * x234) * (-x723 + x730);
  J[147] = -30000000.0 * sc[20] * x622 + 30000000.0 * sc[20] * x630 - x5678 +
           (-30000000.0 * sc[20] * x234) * (-x739 + x743);
  J[187] = -30000000.0 * sc[20] * x131 + 30000000.0 * sc[20] * x633 +
           6000000.0 * sc[28] + (-30000000.0 * sc[20] * x234) * (-x756 + x763);
  J[227] = 30000000.0 * sc[20] * x176 - 30000000.0 * sc[20] * x643 -
           sc[27] * x2096 + (-30000000.0 * sc[20] * x234) * (-x782 + x794);
  J[267] = -30000000.0 * sc[20] * x207 + 30000000.0 * sc[20] * x653 -
           sc[27] * x3320 + (-30000000.0 * sc[20] * x234) * (-x829 + x843);
  J[307] = -30000000.0 * sc[20] * x159 + 30000000.0 * sc[20] * x370 -
           sc[27] * x6681 + (-30000000.0 * sc[20] * x234) * (-x864 + x871);
  J[347] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[387] = -30000000.0 * sc[20] * x674 + 30000000.0 * sc[20] * x676 + x7206 +
           (-30000000.0 * sc[20] * x234) * (-x898 + x903);
  J[427] = sc[18] * x3922 - 30000000.0 * sc[20] * x686 +
           30000000.0 * sc[20] * x689 + x8111 +
           (-30000000.0 * sc[20] * x234) * (-x912 + x918);
  J[467] = 30000000.0 * sc[20] * x292 - 30000000.0 * sc[20] * x693 -
           sc[27] * x8158 + (-30000000.0 * sc[20] * x234) * (-x929 + x935);
  J[507] = 30000000.0 * sc[20] * x704 + x3729 +
           (-30000000.0 * sc[20] * x234) * (-x877 + x945);
  J[547] = -30000000.0 * sc[20] * x705 + 30000000.0 * sc[20] * x708 +
           (-30000000.0 * sc[20] * x234) * (-x953 + x958);
  J[587] = 30000000.0 * sc[20] * x710 + x3729 +
           (-30000000.0 * sc[20] * x234) * (-x877 + x962);
  J[627] = 30000000.0 * sc[20] * x711 + x3729 +
           (-30000000.0 * sc[20] * x234) * (-x877 + x969);
  J[667] = sc[20] * x6078 - 30000000.0 * sc[20] * x713 +
           30000000.0 * sc[20] * x719 +
           (-30000000.0 * sc[20] * x234) * (x593 - x993);
  J[707] = 30000000.0 * sc[20] * x155 - 30000000.0 * sc[20] * x722 +
           (-30000000.0 * sc[20] * x234) * (-x1014 + x839);
  J[747] = sc[10] * x3922 - 30000000.0 * sc[20] * x731 +
           30000000.0 * sc[20] * x738 +
           (-30000000.0 * sc[20] * x234) * (-x1027 + x1036);
  J[787] = 30000000.0 * sc[20] * x742 + x3729 +
           (-30000000.0 * sc[20] * x234) * (x1042 - x877);
  J[827] = sc[16] * x6078 - 30000000.0 * sc[20] * x744 +
           30000000.0 * sc[20] * x752 + 30000000.0 * x148 +
           (-30000000.0 * sc[20] * x234) * (-x1052 + x1057);
  J[867] = 30000000.0 * sc[20] * x750 + x3729 +
           (-30000000.0 * sc[20] * x234) * (x1061 - x877);
  J[907] = -30000000.0 * sc[20] * x776 + 30000000.0 * sc[20] * x781 +
           (-30000000.0 * sc[20] * x234) * (x126 - x308);
  J[947] = -30000000.0 * sc[20] * x785 + 30000000.0 * sc[20] * x793 +
           (-30000000.0 * sc[20] * x234) * (-x303 + x310);
  J[987] = 30000000.0 * sc[20] * x801 + x3729 +
           (-30000000.0 * sc[20] * x234) * (x325 - x877);
  J[1027] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1067] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1107] = -sc[11] * x8158 - sc[5] * x2096 - sc[6] * x3320 - sc[7] * x6681 +
            x5276 - x6240 + (-30000000.0 * sc[20] * x234) * (x326 - x877);
  J[1147] = 30000000.0 * sc[20] * x826 + 18000000.0 * sc[2] +
            6000000.0 * sc[4] + x3729 + x5304 + x7268 + x8304 +
            (-30000000.0 * sc[20] * x234) * (x336 - x877);
  J[1187] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1227] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1267] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1307] = 30000000.0 * sc[20] * x816 + x3729 +
            (-30000000.0 * sc[20] * x234) * (x476 - x877);
  J[1347] = -30000000.0 * sc[20] * x818 + 30000000.0 * sc[20] * x849 +
            (-30000000.0 * sc[20] * x234) * (-x257 + x356);
  J[1387] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[1427] = 30000000.0 * sc[20] * x863 + x3729 +
            (-30000000.0 * sc[20] * x234) * (x367 - x877);
  J[1467] = 30000000.0 * sc[20] * x354 + x3729 +
            (-30000000.0 * sc[20] * x234) * (x402 - x877);
  J[1507] = 30000000.0 * sc[20] * x363 + x3729 +
            (-30000000.0 * sc[20] * x234) * (x466 - x877);
  J[1547] = x3730 + (-30000000.0 * sc[20] * x234) * (-x877 + x887);
  J[28] = x1813 + x7936 +
          (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (-50000000.0 * sc[20] * x117) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[68] = x2422 + x8010 +
          (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (-50000000.0 * sc[20] * x117) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[108] = -50000000.0 * sc[20] * x666 + 50000000.0 * sc[20] * x671 +
           sc[27] * x2654 + x2755 + x2763 + x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x612 + x616 + (-x234) * (-x723 + x730)) +
           (-50000000.0 * sc[20] * x117) *
             (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[148] = -50000000.0 * sc[20] * x679 + 50000000.0 * sc[20] * x696 +
           20000000.0 * x166 * x808 + x5756 - 20000000.0 * x706 * x808 + x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (-50000000.0 * sc[20] * x117) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[188] =
    sc[19] * x6535 * x6563 - 50000000.0 * sc[20] * x700 +
    50000000.0 * sc[20] * x701 - sc[28] * x5809 - 6000000.0 * sc[28] +
    sc[29] * x6483 - 20000000.0 * x721 * x808 + 20000000.0 * x728 * x808 +
    x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-50000000.0 * sc[20] * x117) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[228] = 50000000.0 * sc[20] * x617 + sc[27] * x2096 - 9260000.0 * sc[28] +
           x3231 + x7156 - 20000000.0 * x736 * x808 + 20000000.0 * x737 * x808 +
           x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (-50000000.0 * sc[20] * x117) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[268] =
    -50000000.0 * sc[20] * x726 + 50000000.0 * sc[20] * x732 + sc[27] * x3320 -
    sc[28] * x3254 + x3428 - 20000000.0 * x741 * x808 +
    20000000.0 * x748 * x808 + x8045 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-50000000.0 * sc[20] * x117) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[308] =
    sc[27] * x6681 - sc[28] * x6683 + x3580 + x8066 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-50000000.0 * sc[20] * x117) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[348] = -sc[28] * x7189 + x9423 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (-50000000.0 * sc[20] * x117) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[388] = -50000000.0 * sc[20] * x745 + 50000000.0 * sc[20] * x747 +
           sc[29] * x7209 + 20000000.0 * x145 * x808 - x7206 -
           20000000.0 * x808 * x840 + x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (-50000000.0 * sc[20] * x117) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[428] = sc[18] * x8118 + sc[19] * x3951 - 50000000.0 * sc[20] * x759 +
           50000000.0 * sc[20] * x767 + sc[29] * x8122 +
           20000000.0 * x808 * x856 - 20000000.0 * x808 * x862 + x8116 + x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (-50000000.0 * sc[20] * x117) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[468] = -50000000.0 * sc[20] * x786 + 50000000.0 * sc[20] * x809 +
           sc[27] * x8158 - sc[28] * x8160 + x3428 + x8045 -
           20000000.0 * x808 * x861 + 20000000.0 * x808 * x875 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (-50000000.0 * sc[20] * x117) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[508] =
    50000000.0 * sc[20] * x330 - 60000000.0 * sc[28] +
    20000000.0 * x780 * x808 + x9422 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-50000000.0 * sc[20] * x117) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[548] =
    refCinv * sc[19] * sc[4] * x6563 + 50000000.0 * sc[20] * x851 + x3231 -
    20000000.0 * x808 * x879 + 20000000.0 * x808 * x880 + x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-50000000.0 * sc[20] * x117) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[588] =
    50000000.0 * sc[20] * x859 + 20000000.0 * x808 * x884 + x9422 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-50000000.0 * sc[20] * x117) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[628] =
    50000000.0 * sc[20] * x867 + 20000000.0 * x808 * x886 + x9422 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-50000000.0 * sc[20] * x117) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[668] = sc[29] * x8472 + x4399 + x8217 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x713 + x719 + (-x234) * (x593 - x993)) +
           (-50000000.0 * sc[20] * x117) *
             (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[708] =
    x4584 + x8045 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-50000000.0 * sc[20] * x117) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[748] =
    sc[10] * x8118 - 50000000.0 * sc[20] * x892 + 50000000.0 * sc[20] * x900 +
    20000000.0 * x808 * x872 - 20000000.0 * x808 * x902 + x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-50000000.0 * sc[20] * x117) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[788] = sc[10] * x3951 + 50000000.0 * sc[20] * x905 + sc[4] * x6535 * x6563 +
           20000000.0 * x214 * x808 + x8253 + x9422 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (-50000000.0 * sc[20] * x117) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[828] =
    x4865 + x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-50000000.0 * sc[20] * x117) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[868] =
    50000000.0 * sc[20] * x518 + 20000000.0 * x808 * x882 + x8267 + x9422 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-50000000.0 * sc[20] * x117) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[908] = x5028 + x8289 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (-50000000.0 * sc[20] * x117) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[948] =
    50000000.0 * sc[20] * x923 + x3231 - 20000000.0 * x684 * x808 +
    20000000.0 * x768 * x808 + x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-50000000.0 * sc[20] * x117) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[988] = 50000000.0 * sc[20] * x925 + x3231 - 20000000.0 * x764 * x808 +
           20000000.0 * x772 * x808 + x9418 +
           (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (-50000000.0 * sc[20] * x117) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1028] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1068] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1108] = sc[11] * x8158 + sc[2] * x2654 + sc[5] * x2096 + sc[6] * x3320 +
            sc[7] * x6681 + x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x803 + (-x234) * (x326 - x877)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1148] =
    -sc[10] * x8114 - sc[11] * x8160 - 60000000.0 * sc[12] +
    50000000.0 * sc[20] * x927 - sc[4] * x5809 - 6000000.0 * sc[4] -
    9260000.0 * sc[5] - sc[6] * x3254 - sc[7] * x6683 - sc[8] * x7189 - x5304 +
    x5324 - x7268 - x7890 - x8301 - x8304 + x9422 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-50000000.0 * sc[20] * x117) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1188] = sc[10] * x8122 + sc[16] * x8472 + sc[4] * x6483 + sc[9] * x7209 +
            x1787 + x5341 + x6252 + x7272 + x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1228] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1268] = x7892 + x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1308] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x816 + (-x234) * (x476 - x877)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1348] =
    x5413 + x9418 +
    (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-50000000.0 * sc[20] * x117) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1388] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1428] = 50000000.0 * sc[20] * x933 + 20000000.0 * x357 * x808 + x9422 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (-50000000.0 * sc[20] * x117) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1468] = 50000000.0 * sc[20] * x934 + x3231 + 20000000.0 * x358 * x808 -
            20000000.0 * x764 * x808 + x9418 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (-50000000.0 * sc[20] * x117) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1508] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (x363 - x657 + (-x234) * (x466 - x877)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1548] = x9423 +
            (-50000000.0 * sc[20] * x220 + 20000000.0 * x235 * x808) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (-50000000.0 * sc[20] * x117) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[29] = 6.19115e+87 * x1768 * x1769 - 6.19115e+87 * x1768 * x1770 -
          9.31e+47 * x1785 * x1792 + 9.31e+47 * x1785 * x1796 +
          x1789 * (1.4 * x1773 * x240 + 0.196 * x1775 * x240) -
          x1810 * (1.4 * x1773 * x240 + 0.196 * x1775 * x240) + x1922 -
          2.989e+46 * x7944 * x7956 + 2.989e+46 * x7956 * x7985 +
          5.105212e+85 * x7959 * x7961 - 5.105212e+85 * x7959 * x7977 +
          x7974 * (0.196 * x7966 + 1.4 * x7968) -
          x7983 * (0.196 * x7966 + 1.4 * x7968);
  J[69] = x2510;
  J[109] = sc[24] * x2801 * x2804 + sc[28] * x1764 + 1800000.0 * sc[30] +
           x2510 + 3.2e+16 * x2578 + x2764;
  J[149] = -sc[29] * x2342 + x2510 - x5756 - x5759;
  J[189] = sc[28] * x5809 - sc[29] * x6483 + 24000000.0 * sc[30] + x2510;
  J[229] = 2660000.0 * sc[28] - sc[29] * x7152 + x2510 - x7156;
  J[269] = sc[28] * x3254 - sc[29] * x3244 + x3495;
  J[309] = -sc[10] * sc[19] * x7948 * x7981 + sc[28] * x6683 - sc[29] * x6673 +
           5.3067e+88 * x1768 * x1769 - 5.3067e+88 * x1768 * x1770 -
           7.98e+48 * x1785 * x1792 + 7.98e+48 * x1785 * x1796 +
           x1789 * (12.0 * x1773 * x240 + 1.68 * x1775 * x240) -
           x1810 * (12.0 * x1773 * x240 + 1.68 * x1775 * x240) +
           4.27e+46 * x25 * x7948 * x7971 + x3598 + 2.562e+47 * x7956 * x7985 +
           4.375896e+86 * x7959 * x7961 - 4.375896e+86 * x7959 * x7977 -
           2.562e+47 * x7971;
  J[349] = sc[28] * x7189 + x2510;
  J[389] = -sc[29] * x7209 + 90000.0 * sc[30] + x2510;
  J[429] = sc[19] * x7981 + sc[20] * x3901 - sc[29] * x3897 - sc[29] * x8122 +
           11000000.0 * sc[30] + x2510 + x3948;
  J[469] = sc[28] * x8160 - sc[29] * x8154 + x3495;
  J[509] = sc[21] * x6023 + 60000000.0 * sc[28] + x2510;
  J[549] = x2510;
  J[589] = x2510;
  J[629] = x2510;
  J[669] = -sc[29] * x8472 + 1.326675e+88 * x1768 * x1769 -
           1.326675e+88 * x1768 * x1770 - 1.995e+48 * x1785 * x1792 +
           1.995e+48 * x1785 * x1796 +
           x1789 * (3.0 * x1773 * x240 + 0.42 * x1775 * x240) -
           x1810 * (3.0 * x1773 * x240 + 0.42 * x1775 * x240) + x4407 +
           x7949 * x7974 - x7949 * x7983 + 6.405e+46 * x7956 * x7985 +
           1.093974e+86 * x7959 * x7961 - 1.093974e+86 * x7959 * x7977 -
           6.405e+46 * x7971;
  J[709] = x3495;
  J[749] = x1778 + x7993;
  J[789] = sc[10] * x7981 + x2510;
  J[829] = sc[10] * x3901 + x1778 + x7993;
  J[869] = sc[12] * x6023 + x2510;
  J[909] = 2.65335e+88 * x1768 * x1769 - 2.65335e+88 * x1768 * x1770 -
           3.99e+48 * x1785 * x1792 + 3.99e+48 * x1785 * x1796 +
           x1789 * (6.0 * x1773 * x240 + 0.84 * x1775 * x240) -
           x1810 * (6.0 * x1773 * x240 + 0.84 * x1775 * x240) + x5037 + x7993;
  J[949] = x2510;
  J[989] = sc[2] * x2801 * x2804 + x2510;
  J[1029] = x2510;
  J[1069] = x2510;
  J[1109] = x2510;
  J[1149] = sc[11] * x8160 + 60000000.0 * sc[12] + sc[2] * x1764 +
            sc[4] * x5809 + 2660000.0 * sc[5] + sc[6] * x3254 + sc[7] * x6683 +
            sc[8] * x7189 + x2510;
  J[1189] = -sc[10] * x3897 - sc[10] * x8122 - sc[11] * x8154 - sc[16] * x8472 -
            8000000000000000.0 * sc[2] * exp(x2576) - sc[3] * x2342 -
            sc[4] * x6483 - sc[5] * x7152 - sc[6] * x3244 - sc[7] * x6673 -
            sc[9] * x7209 - x1787 + x2510 - x2756 * x956 - x5341 - x6252 -
            x6253 - x7272 - x7942;
  J[1229] = 11000000.0 * sc[10] + 1800000.0 * sc[2] + 24000000.0 * sc[4] +
            90000.0 * sc[9] + 6.26e+26 * x1876 * x1895 * x477 + x2510;
  J[1269] = x2510 + 3.2e+16 * x5347;
  J[1309] = x2510;
  J[1349] = x2510;
  J[1389] = x2510;
  J[1429] = x2510;
  J[1469] = x2510;
  J[1509] = x2510;
  J[1549] = x2510;
  J[30] = -4.382e+26 * x1876 * x1897 +
          x1878 * (1.4 * x1901 * x240 + 0.196 * x1902 * x240) +
          2.0625052631578899e+46 * x1885 * x1890 -
          2.0625052631578899e+46 * x1885 * x1918 + 4.382e+26 * x1913 -
          x1916 * (1.4 * x1901 * x240 + 0.196 * x1902 * x240);
  J[70] = x1877;
  J[110] = sc[29] * x27 * x2756 - sc[30] * x2692 - 1800000.0 * sc[30] + x1877;
  J[150] = -96000000.0 * sc[30] + x1877 + x5708;
  J[190] = -24000000.0 * sc[30] + x1877 + x6537;
  J[230] = sc[29] * x7152 - 24000000.0 * sc[30] + x1877;
  J[270] = sc[29] * x3244 + x1880;
  J[310] = sc[29] * x6673 - 3.756e+27 * x1876 * x1897 +
           x1878 * (12.0 * x1901 * x240 + 1.68 * x1902 * x240) +
           1.7678616541353401e+47 * x1885 * x1890 -
           1.7678616541353401e+47 * x1885 * x1918 + 3.756e+27 * x1913 -
           x1916 * (12.0 * x1901 * x240 + 1.68 * x1902 * x240);
  J[350] = x1877;
  J[390] = -90000.0 * sc[30] + x1877;
  J[430] = sc[20] * x8147 + sc[21] * x3895 - 11000000.0 * sc[30] + x1877;
  J[470] = sc[29] * x8154 + x1880;
  J[510] = -sc[30] * x6019 + x1877;
  J[550] = sc[21] * x6035 + x1877 + x6844;
  J[590] = x1877;
  J[630] = x1877;
  J[670] = -9.39e+26 * x1876 * x1897 +
           x1878 * (3.0 * x1901 * x240 + 0.42 * x1902 * x240) +
           4.4196541353383503e+46 * x1885 * x1890 -
           4.4196541353383503e+46 * x1885 * x1918 + 9.39e+26 * x1913 -
           x1916 * (3.0 * x1901 * x240 + 0.42 * x1902 * x240);
  J[710] = x1880;
  J[750] = x1877;
  J[790] = x1877;
  J[830] = sc[10] * x8147 + x1877;
  J[870] = sc[10] * x3895 + sc[13] * x6035 + x1877 + x6534;
  J[910] = -1.878e+27 * x1876 * x1897 +
           x1878 * (6.0 * x1901 * x240 + 0.84 * x1902 * x240) +
           8.8393082706766904e+46 * x1885 * x1890 -
           8.8393082706766904e+46 * x1885 * x1918 + 1.878e+27 * x1913 -
           x1916 * (6.0 * x1901 * x240 + 0.84 * x1902 * x240);
  J[950] = x1877;
  J[990] = x1877;
  J[1030] = x1877;
  J[1070] = x1877;
  J[1110] = x1877;
  J[1150] = x1877;
  J[1190] = sc[11] * x8154 + sc[5] * x7152 + sc[6] * x3244 + sc[7] * x6673 +
            x1877 + x2756 * x956;
  J[1230] = -11000000.0 * sc[10] - sc[12] * x6019 - sc[2] * x2692 -
            1800000.0 * sc[2] - 96000000.0 * sc[3] - 24000000.0 * sc[4] -
            24000000.0 * sc[5] - 90000.0 * sc[9] -
            6.26e+26 * x1876 * x1895 * x477 + x1877 - x8313;
  J[1270] = x1877 + x6256;
  J[1310] = x1877;
  J[1350] = x1877;
  J[1390] = x1877;
  J[1430] = x1877;
  J[1470] = x1877;
  J[1510] = x1877;
  J[1550] = x1877;
  J[31] = -sc[28] * x7890 * x7911 + sc[31] * x7892 * x7911 +
          2.737e+48 * x7888 * x7933 + 1.070167e+89 * x7898 * x7904 -
          1.070167e+89 * x7898 * x7926 - 2.737e+48 * x7931 -
          1.1211666666666701e+81 * x9250 * x9277 +
          1.1211666666666701e+81 * x9250 * x9287 +
          x9256 * (1.4 * x240 * x9267 + 0.196 * x240 * x9268) +
          1.085e+44 * x9261 * x9263 -
          x9274 * (1.4 * x240 * x9267 + 0.196 * x240 * x9268) -
          1.085e+44 * x9290;
  J[71] = x9270;
  J[111] = -4.8e+16 * x2578 + x9270;
  J[151] = -x5708 + x9270;
  J[191] = x9270;
  J[231] = x9270;
  J[271] = x7910;
  J[311] = 2.346e+49 * x7888 * x7933 + 9.17286e+89 * x7898 * x7904 -
           9.17286e+89 * x7898 * x7926 - 2.346e+49 * x7931 +
           x8003 * (1.68 * x240 * x7908 + 12.0 * x240 * x7909) -
           x8006 * (1.68 * x240 * x7908 + 12.0 * x240 * x7909) -
           9.61e+81 * x9250 * x9277 + 9.61e+81 * x9250 * x9287 +
           x9256 * (12.0 * x240 * x9267 + 1.68 * x240 * x9268) +
           9.3e+44 * x9261 * x9263 -
           x9274 * (12.0 * x240 * x9267 + 1.68 * x240 * x9268) -
           9.3e+44 * x9290;
  J[351] = x9270;
  J[391] = x9270;
  J[431] =
    3.91e+48 * sc[28] * x27 * x7888 * exp(x7912) + sc[29] * x3897 + x9270;
  J[471] = x7910;
  J[511] = sc[30] * x6019 + x9270;
  J[551] = x9270;
  J[591] = x9270;
  J[631] = x9270;
  J[671] =
    -5.865e+48 * refC * sc[31] * x7888 * x7891 + 5.865e+48 * x7888 * x7933 +
    2.293215e+89 * x7898 * x7904 - 2.293215e+89 * x7898 * x7926 +
    x8003 * (0.42 * x240 * x7908 + 3.0 * x240 * x7909) -
    x8006 * (0.42 * x240 * x7908 + 3.0 * x240 * x7909) -
    2.4025e+81 * x9250 * x9277 + 2.4025e+81 * x9250 * x9287 +
    x9256 * (3.0 * x240 * x9267 + 0.42 * x240 * x9268) +
    2.325e+44 * x9261 * x9263 -
    x9274 * (3.0 * x240 * x9267 + 0.42 * x240 * x9268) - 2.325e+44 * x9290;
  J[711] = x7910;
  J[751] = x9270;
  J[791] = sc[21] * x9272 + x9270;
  J[831] = sc[21] * x4823 + x9270;
  J[871] = sc[19] * x9272 + sc[20] * x4823 + x9270;
  J[911] = -4.65e+44 * refC * sc[31] * x9252 * x9261 +
           1.173e+49 * x7888 * x7933 + 4.58643e+89 * x7898 * x7904 -
           4.58643e+89 * x7898 * x7926 - 1.173e+49 * x7931 +
           x8003 * (0.84 * x240 * x7908 + 6.0 * x240 * x7909) -
           x8006 * (0.84 * x240 * x7908 + 6.0 * x240 * x7909) -
           4.805e+81 * x9250 * x9277 + 4.805e+81 * x9250 * x9287 +
           x9256 * (6.0 * x240 * x9267 + 0.84 * x240 * x9268) +
           4.65e+44 * x9261 * x9263 -
           x9274 * (6.0 * x240 * x9267 + 0.84 * x240 * x9268);
  J[951] = x9270;
  J[991] = x9270;
  J[1031] = x9270;
  J[1071] = x9270;
  J[1111] = x9270;
  J[1151] = x7890 + x9270;
  J[1191] = sc[10] * x3897 + x9270;
  J[1231] = sc[12] * x6019 + x9270;
  J[1271] = -4.8e+16 * x5347 - x6256 - x7892 - x9253 + x9270;
  J[1311] = x9270;
  J[1351] = x9270;
  J[1391] = x9270;
  J[1431] = x9270;
  J[1471] = x9270;
  J[1511] = x9270;
  J[1551] = x9270;
  J[32] = 24600000.0 * sc[33] * x255 - 24600000.0 * sc[33] * x371 -
          29000000.0 * sc[33] * x607 + 29000000.0 * sc[33] * x659 +
          217000000.0 * x8724 - 217000000.0 * x8730 +
          (-24600000.0 * sc[33] * x234) * (-x607 + x659);
  J[72] = sc[16] * x47 + 24600000.0 * sc[33] * x468 -
          24600000.0 * sc[33] * x606 - 29000000.0 * sc[33] * x687 +
          29000000.0 * sc[33] * x709 + sc[3] * x226 + x8748 +
          (-24600000.0 * sc[33] * x234) * (-x687 + x709);
  J[112] = sc[33] * x2741 - 24600000.0 * sc[33] * x612 +
           24600000.0 * sc[33] * x616 - 29000000.0 * sc[33] * x723 +
           29000000.0 * sc[33] * x730 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x723 + x730);
  J[152] = sc[1] * x226 + sc[33] * x5751 - 24600000.0 * sc[33] * x622 +
           24600000.0 * sc[33] * x630 - 29000000.0 * sc[33] * x739 +
           29000000.0 * sc[33] * x743 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x739 + x743);
  J[192] = -sc[32] * x3076 - 24600000.0 * sc[33] * x131 +
           24600000.0 * sc[33] * x633 - 29000000.0 * sc[33] * x756 +
           29000000.0 * sc[33] * x763 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x756 + x763);
  J[232] = 24600000.0 * sc[33] * x176 - 24600000.0 * sc[33] * x643 -
           29000000.0 * sc[33] * x782 + 29000000.0 * sc[33] * x794 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x782 + x794);
  J[272] = -24600000.0 * sc[33] * x207 + 24600000.0 * sc[33] * x653 -
           29000000.0 * sc[33] * x829 + 29000000.0 * sc[33] * x843 + x8835 +
           (-24600000.0 * sc[33] * x234) * (-x829 + x843);
  J[312] = -24600000.0 * sc[33] * x159 + 24600000.0 * sc[33] * x370 -
           29000000.0 * sc[33] * x864 + 29000000.0 * sc[33] * x871 +
           1860000000.0 * x8724 - 1860000000.0 * x8730 +
           (-24600000.0 * sc[33] * x234) * (-x864 + x871);
  J[352] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[392] = -sc[32] * x5954 - 24600000.0 * sc[33] * x674 +
           24600000.0 * sc[33] * x676 - 29000000.0 * sc[33] * x898 +
           29000000.0 * sc[33] * x903 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x898 + x903);
  J[432] = -24600000.0 * sc[33] * x686 + 24600000.0 * sc[33] * x689 -
           29000000.0 * sc[33] * x912 + 29000000.0 * sc[33] * x918 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x912 + x918);
  J[472] = 24600000.0 * sc[33] * x292 - 24600000.0 * sc[33] * x693 -
           29000000.0 * sc[33] * x929 + 29000000.0 * sc[33] * x935 + x8835 +
           (-24600000.0 * sc[33] * x234) * (-x929 + x935);
  J[512] = -24600000.0 * sc[32] * x574 + 24600000.0 * sc[33] * x704 +
           29000000.0 * sc[33] * x945 + x1848 +
           (-24600000.0 * sc[33] * x234) * (-x877 + x945);
  J[552] = -24600000.0 * sc[33] * x705 + 24600000.0 * sc[33] * x708 -
           29000000.0 * sc[33] * x953 + 29000000.0 * sc[33] * x958 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x953 + x958);
  J[592] = 24600000.0 * sc[33] * x710 + 29000000.0 * sc[33] * x962 + x1848 +
           (-24600000.0 * sc[33] * x234) * (-x877 + x962);
  J[632] = 24600000.0 * sc[33] * x711 + 29000000.0 * sc[33] * x969 + x1848 +
           (-24600000.0 * sc[33] * x234) * (-x877 + x969);
  J[672] = sc[1] * x47 - 24600000.0 * sc[33] * x713 +
           24600000.0 * sc[33] * x719 + sc[33] * x9020 + x9018 +
           (-24600000.0 * sc[33] * x234) * (x593 - x993);
  J[712] = -29000000.0 * sc[33] * x1014 + 24600000.0 * sc[33] * x155 -
           24600000.0 * sc[33] * x722 + 29000000.0 * sc[33] * x839 + x8835 -
           x9035 + (-24600000.0 * sc[33] * x234) * (-x1014 + x839);
  J[752] = -29000000.0 * sc[33] * x1027 + 29000000.0 * sc[33] * x1036 -
           24600000.0 * sc[33] * x731 + 24600000.0 * sc[33] * x738 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x1027 + x1036);
  J[792] = 29000000.0 * sc[33] * x1042 + 24600000.0 * sc[33] * x742 + x1848 +
           (-24600000.0 * sc[33] * x234) * (x1042 - x877);
  J[832] = -29000000.0 * sc[33] * x1052 + 29000000.0 * sc[33] * x1057 -
           24600000.0 * sc[33] * x744 + 24600000.0 * sc[33] * x752 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x1052 + x1057);
  J[872] = 29000000.0 * sc[33] * x1061 + 24600000.0 * sc[33] * x750 + x8419 +
           x8898 + (-24600000.0 * sc[33] * x234) * (x1061 - x877);
  J[912] = 29000000.0 * sc[33] * x126 - 29000000.0 * sc[33] * x308 -
           24600000.0 * sc[33] * x776 + 24600000.0 * sc[33] * x781 +
           930000000.0 * x8724 - 930000000.0 * x8730 +
           (-24600000.0 * sc[33] * x234) * (x126 - x308);
  J[952] = -29000000.0 * sc[33] * x303 + 29000000.0 * sc[33] * x310 -
           24600000.0 * sc[33] * x785 + 24600000.0 * sc[33] * x793 + x8748 +
           (-24600000.0 * sc[33] * x234) * (-x303 + x310);
  J[992] = 29000000.0 * sc[33] * x325 + 24600000.0 * sc[33] * x801 + x1848 +
           (-24600000.0 * sc[33] * x234) * (x325 - x877);
  J[1032] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1072] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1112] = 29000000.0 * sc[33] * x326 + 24600000.0 * sc[33] * x803 + x1848 +
            (-24600000.0 * sc[33] * x234) * (x326 - x877);
  J[1152] = 29000000.0 * sc[33] * x336 + 24600000.0 * sc[33] * x826 + x1848 +
            (-24600000.0 * sc[33] * x234) * (x336 - x877);
  J[1192] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1232] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1272] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1312] = -24600000.0 * sc[12] * x574 - 29000000.0 * sc[16] * x599 +
            29000000.0 * sc[33] * x476 + 24600000.0 * sc[33] * x816 -
            20000000.0 * sc[37] - sc[4] * x3076 - sc[9] * x5954 + x1848 -
            310000000.0 * x27 * x437 * x8728 - x348 - x9159 +
            (-24600000.0 * sc[33] * x234) * (x476 - x877);
  J[1352] = sc[16] * x9020 + sc[2] * x2741 - 29000000.0 * sc[33] * x257 +
            29000000.0 * sc[33] * x356 - 24600000.0 * sc[33] * x818 +
            24600000.0 * sc[33] * x849 + sc[3] * x5751 + 24600000.0 * x148 +
            29000000.0 * x258 - x352 + x8748 +
            (-24600000.0 * sc[33] * x234) * (-x257 + x356);
  J[1392] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[1432] = 29000000.0 * sc[33] * x367 + 24600000.0 * sc[33] * x863 + x1848 +
            (-24600000.0 * sc[33] * x234) * (x367 - x877);
  J[1472] = 24600000.0 * sc[33] * x354 + 29000000.0 * sc[33] * x402 + x1848 +
            (-24600000.0 * sc[33] * x234) * (x402 - x877);
  J[1512] = -20000000.0 * sc[32] + 24600000.0 * sc[33] * x363 +
            29000000.0 * sc[33] * x466 + x1848 +
            310000000.0 * x27 * exp(-27198.860786745099 * invT) +
            (-24600000.0 * sc[33] * x234) * (x466 - x877);
  J[1552] = x9435 + (-24600000.0 * sc[33] * x234) * (-x877 + x887);
  J[33] = -40800000.0 * sc[33] * x255 + 40800000.0 * sc[33] * x371 +
          29000000.0 * sc[33] * x607 - 29000000.0 * sc[33] * x659 -
          x283 * x642 - x283 * x800 + x344 * x642 + x344 * x800 + x349 * x642 +
          x349 * x800 - x362 * x642 - x362 * x800 + 74200000.0 * x5588 -
          74200000.0 * x5592 + (40800000.0 * sc[33] * x234) * (-x607 + x659) +
          (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
            (x255 - x371 + (-x234) * (-x607 + x659)) +
          (x117 * x642 + x117 * x800) *
            (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[73] = sc[17] * x288 - 40800000.0 * sc[33] * x468 +
          40800000.0 * sc[33] * x606 + 29000000.0 * sc[33] * x687 -
          29000000.0 * sc[33] * x709 + sc[3] * x226 + x317 * x642 +
          x317 * x800 + x5651 + x627 * x642 + x627 * x800 - x642 * x650 -
          x642 * x680 - x650 * x800 - x680 * x800 +
          (40800000.0 * sc[33] * x234) * (-x687 + x709) +
          (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
            (x468 - x606 + (-x234) * (-x687 + x709)) +
          (x117 * x642 + x117 * x800) *
            (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[113] = -sc[33] * x2735 * x437 - sc[33] * x2741 +
           40800000.0 * sc[33] * x612 - 40800000.0 * sc[33] * x616 +
           29000000.0 * sc[33] * x723 - 29000000.0 * sc[33] * x730 +
           38000000.0 * sc[35] * x2661 + 38000000.0 * sc[35] * x2665 +
           310000000000.0 * sc[36] * x2678 + 310000000000.0 * sc[36] * x2682 +
           16200000.0 * sc[37] * x537 + x2570 + x5651 + x642 * x666 -
           x642 * x671 - x642 * x677 + x642 * x685 + x666 * x800 - x671 * x800 -
           x677 * x800 + x685 * x800 +
           (40800000.0 * sc[33] * x234) * (-x723 + x730) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x612 + x616 + (-x234) * (-x723 + x730)) +
           (x117 * x642 + x117 * x800) *
             (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[153] = sc[1] * x226 - 106000000.0 * sc[33] * x27 * x5590 - sc[33] * x5751 +
           40800000.0 * sc[33] * x622 - 40800000.0 * sc[33] * x630 +
           29000000.0 * sc[33] * x739 - 29000000.0 * sc[33] * x743 +
           sc[37] * x5688 - x166 * x642 - x166 * x800 + x5651 + x5682 +
           x642 * x679 - x642 * x696 + x642 * x706 + x679 * x800 - x696 * x800 +
           x706 * x800 + (40800000.0 * sc[33] * x234) * (-x739 + x743) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x622 + x630 + (-x234) * (-x739 + x743)) +
           (x117 * x642 + x117 * x800) *
             (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[193] =
    sc[32] * x3076 + 40800000.0 * sc[33] * x131 - sc[33] * x3021 -
    40800000.0 * sc[33] * x633 + 29000000.0 * sc[33] * x756 -
    29000000.0 * sc[33] * x763 + sc[34] * x6458 + x3075 + x5651 + x642 * x700 -
    x642 * x701 + x642 * x721 - x642 * x728 + x700 * x800 - x701 * x800 +
    x721 * x800 - x728 * x800 + (40800000.0 * sc[33] * x234) * (-x756 + x763) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (x117 * x642 + x117 * x800) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[233] = -40800000.0 * sc[33] * x176 + 40800000.0 * sc[33] * x643 +
           29000000.0 * sc[33] * x782 - 29000000.0 * sc[33] * x794 -
           x617 * x642 - x617 * x800 + x642 * x736 - x642 * x737 - x6602 +
           x736 * x800 - x737 * x800 + x9440 +
           (40800000.0 * sc[33] * x234) * (-x782 + x794) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (x176 - x643 + (-x234) * (-x782 + x794)) +
           (x117 * x642 + x117 * x800) *
             (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[273] =
    40800000.0 * sc[33] * x207 - 40800000.0 * sc[33] * x653 +
    29000000.0 * sc[33] * x829 - 29000000.0 * sc[33] * x843 + x5870 +
    x642 * x726 - x642 * x732 + x642 * x741 - x642 * x748 + x726 * x800 -
    x732 * x800 + x741 * x800 - x748 * x800 +
    (40800000.0 * sc[33] * x234) * (-x829 + x843) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (x117 * x642 + x117 * x800) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[313] =
    40800000.0 * sc[33] * x159 - 40800000.0 * sc[33] * x370 +
    29000000.0 * sc[33] * x864 - 29000000.0 * sc[33] * x871 +
    636000000.0 * x5588 - 636000000.0 * x5592 + x642 * x733 - x642 * x740 +
    x642 * x751 - x642 * x760 + x733 * x800 - x740 * x800 + x751 * x800 -
    x760 * x800 + (40800000.0 * sc[33] * x234) * (-x864 + x871) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (x117 * x642 + x117 * x800) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[353] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x657 + x663 + (-x234) * (-x877 + x887)) +
           (x117 * x642 + x117 * x800) *
             (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[393] = sc[32] * x5954 - sc[33] * x5941 + 40800000.0 * sc[33] * x674 -
           40800000.0 * sc[33] * x676 + 29000000.0 * sc[33] * x898 -
           29000000.0 * sc[33] * x903 - x145 * x642 - x145 * x800 + x5651 +
           x642 * x745 - x642 * x747 + x642 * x840 + x745 * x800 - x747 * x800 +
           x7742 + x800 * x840 + (40800000.0 * sc[33] * x234) * (-x898 + x903) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x674 + x676 + (-x234) * (-x898 + x903)) +
           (x117 * x642 + x117 * x800) *
             (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[433] = 40800000.0 * sc[33] * x686 - 40800000.0 * sc[33] * x689 +
           29000000.0 * sc[33] * x912 - 29000000.0 * sc[33] * x918 + x5651 +
           x642 * x759 - x642 * x767 - x642 * x856 + x642 * x862 + x759 * x800 -
           x767 * x800 - x800 * x856 + x800 * x862 + x8089 +
           (40800000.0 * sc[33] * x234) * (-x912 + x918) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x686 + x689 + (-x234) * (-x912 + x918)) +
           (x117 * x642 + x117 * x800) *
             (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[473] = -40800000.0 * sc[33] * x292 + 40800000.0 * sc[33] * x693 +
           29000000.0 * sc[33] * x929 - 29000000.0 * sc[33] * x935 + x5870 +
           x642 * x786 - x642 * x809 + x642 * x861 - x642 * x875 + x786 * x800 -
           x800 * x809 + x800 * x861 - x800 * x875 +
           (40800000.0 * sc[33] * x234) * (-x929 + x935) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (x292 - x693 + (-x234) * (-x929 + x935)) +
           (x117 * x642 + x117 * x800) *
             (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[513] =
    24600000.0 * sc[32] * x574 - 40800000.0 * sc[33] * x704 -
    29000000.0 * sc[33] * x945 - x330 * x642 - x330 * x800 - x642 * x780 -
    x780 * x800 + x9442 + (40800000.0 * sc[33] * x234) * (-x877 + x945) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (x117 * x642 + x117 * x800) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[553] =
    40800000.0 * sc[33] * x705 - 40800000.0 * sc[33] * x708 +
    29000000.0 * sc[33] * x953 - 29000000.0 * sc[33] * x958 - x642 * x851 +
    x642 * x879 - x642 * x880 - x800 * x851 + x800 * x879 - x800 * x880 +
    x9440 + (40800000.0 * sc[33] * x234) * (-x953 + x958) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (x117 * x642 + x117 * x800) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[593] =
    -40800000.0 * sc[33] * x710 - sc[33] * x8192 - 29000000.0 * sc[33] * x962 +
    sc[34] * x8648 - x642 * x859 - x642 * x884 - x800 * x859 - x800 * x884 +
    x9442 + (40800000.0 * sc[33] * x234) * (-x877 + x962) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (x117 * x642 + x117 * x800) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[633] =
    -40800000.0 * sc[33] * x711 - 29000000.0 * sc[33] * x969 - x642 * x867 -
    x642 * x886 - x800 * x867 - x800 * x886 + x9442 +
    (40800000.0 * sc[33] * x234) * (-x877 + x969) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (x117 * x642 + x117 * x800) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[673] =
    29000000.0 * sc[32] * x599 - 29000000.0 * sc[33] * x593 - sc[33] * x6080 +
    40800000.0 * sc[33] * x713 - 40800000.0 * sc[33] * x719 - sc[33] * x9020 +
    29000000.0 * sc[33] * x993 + sc[35] * x8984 + x341 * x642 + x341 * x800 -
    x343 * x642 - x343 * x800 - x4336 + 159000000.0 * x5588 -
    159000000.0 * x5592 + x642 * x889 - x642 * x893 + x800 * x889 -
    x800 * x893 + (40800000.0 * sc[33] * x234) * (x593 - x993) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x713 + x719 + (-x234) * (x593 - x993)) +
    (x117 * x642 + x117 * x800) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[713] =
    sc[1] * x288 + 29000000.0 * sc[33] * x1014 - 40800000.0 * sc[33] * x155 +
    40800000.0 * sc[33] * x722 - sc[33] * x7805 - 29000000.0 * sc[33] * x839 -
    x1 * x642 - x1 * x800 + x5870 + x642 * x890 + x642 * x894 - x642 * x897 +
    x800 * x890 + x800 * x894 - x800 * x897 + x9035 +
    (40800000.0 * sc[33] * x234) * (-x1014 + x839) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (x117 * x642 + x117 * x800) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[753] =
    29000000.0 * sc[33] * x1027 - 29000000.0 * sc[33] * x1036 +
    40800000.0 * sc[33] * x731 - 40800000.0 * sc[33] * x738 + x5651 -
    x642 * x872 + x642 * x892 - x642 * x900 + x642 * x902 - x800 * x872 +
    x800 * x892 - x800 * x900 + x800 * x902 +
    (40800000.0 * sc[33] * x234) * (-x1027 + x1036) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (x117 * x642 + x117 * x800) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[793] = -29000000.0 * sc[33] * x1042 - 40800000.0 * sc[33] * x742 -
           x214 * x642 - x214 * x800 - x642 * x905 - x800 * x905 + x9442 +
           (40800000.0 * sc[33] * x234) * (x1042 - x877) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x657 + x742 + (-x234) * (x1042 - x877)) +
           (x117 * x642 + x117 * x800) *
             (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[833] =
    29000000.0 * sc[33] * x1052 - 29000000.0 * sc[33] * x1057 +
    40800000.0 * sc[33] * x744 - 40800000.0 * sc[33] * x752 + x5651 +
    x642 * x699 - x642 * x904 + x642 * x906 - x642 * x915 + x699 * x800 -
    x800 * x904 + x800 * x906 - x800 * x915 +
    (40800000.0 * sc[33] * x234) * (-x1052 + x1057) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (x117 * x642 + x117 * x800) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[873] =
    -29000000.0 * sc[33] * x1061 - 40800000.0 * sc[33] * x750 - x518 * x642 -
    x518 * x800 - x642 * x882 - x800 * x882 + x9442 +
    (40800000.0 * sc[33] * x234) * (x1061 - x877) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (x117 * x642 + x117 * x800) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[913] = -29000000.0 * sc[33] * x126 + 29000000.0 * sc[33] * x308 +
           40800000.0 * sc[33] * x776 - 40800000.0 * sc[33] * x781 +
           318000000.0 * x5588 - 318000000.0 * x5592 + x642 * x909 -
           x642 * x910 + x642 * x919 - x642 * x920 + x800 * x909 - x800 * x910 +
           x800 * x919 - x800 * x920 +
           (40800000.0 * sc[33] * x234) * (x126 - x308) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x776 + x781 + (-x234) * (x126 - x308)) +
           (x117 * x642 + x117 * x800) *
             (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[953] =
    29000000.0 * sc[33] * x303 - 29000000.0 * sc[33] * x310 +
    40800000.0 * sc[33] * x785 - 40800000.0 * sc[33] * x793 + x642 * x684 -
    x642 * x768 - x642 * x923 + x684 * x800 - x768 * x800 - x800 * x923 -
    x8691 + x9440 + (40800000.0 * sc[33] * x234) * (-x303 + x310) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (x117 * x642 + x117 * x800) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[993] = -29000000.0 * sc[33] * x325 - 40800000.0 * sc[33] * x801 -
           x642 * x772 - x642 * x925 - x772 * x800 - x800 * x925 + x9442 +
           (40800000.0 * sc[33] * x234) * (x325 - x877) +
           (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
             (-x657 + x801 + (-x234) * (x325 - x877)) +
           (x117 * x642 + x117 * x800) *
             (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1033] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1073] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1113] = -29000000.0 * sc[33] * x326 - 40800000.0 * sc[33] * x803 + x9443 +
            (40800000.0 * sc[33] * x234) * (x326 - x877) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x803 + (-x234) * (x326 - x877)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1153] =
    -29000000.0 * sc[33] * x336 - 40800000.0 * sc[33] * x826 - x642 * x911 -
    x642 * x927 - x800 * x911 - x800 * x927 + x9442 +
    (40800000.0 * sc[33] * x234) * (x336 - x877) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x657 + x826 + (-x234) * (x336 - x877)) +
    (x117 * x642 + x117 * x800) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1193] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1233] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1273] = x9444 + (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1313] = 24600000.0 * sc[12] * x574 + 29000000.0 * sc[16] * x599 -
            29000000.0 * sc[33] * x476 - 40800000.0 * sc[33] * x816 +
            sc[4] * x3076 + sc[9] * x5954 - x348 + x9159 + x9443 +
            (40800000.0 * sc[33] * x234) * (x476 - x877) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x816 + (-x234) * (x476 - x877)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1353] =
    -sc[14] * x8192 - sc[16] * x6080 - sc[16] * x9020 - sc[17] * x7805 -
    sc[2] * x2741 + 29000000.0 * sc[33] * x257 - 29000000.0 * sc[33] * x356 +
    40800000.0 * sc[33] * x818 - 40800000.0 * sc[33] * x849 -
    1690000.0 * sc[38] * x982 - 106000000.0 * sc[3] * x27 * x5590 -
    sc[3] * x5751 - sc[4] * x3021 - sc[9] * x5941 - x1000 * x12 - x1000 * x217 -
    x12 * x558 - 40800000.0 * x148 - x217 * x558 - x2312 * x2735 -
    29000000.0 * x258 - x285 * x642 - x285 * x800 - x352 - x364 + x493 * x642 +
    x493 * x800 + x5651 + x642 * x928 - x642 * x932 - x7073 + x800 * x928 -
    x800 * x932 - x9165 + (40800000.0 * sc[33] * x234) * (-x257 + x356) +
    (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
      (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (x117 * x642 + x117 * x800) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1393] = sc[14] * x8648 + sc[4] * x6458 + 106000000.0 * x27 * x5587 + x5458 +
            x6282 + x8319 + x9444 +
            (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1433] = sc[16] * x8984 + 38000000.0 * sc[2] * x2661 +
            38000000.0 * sc[2] * x2665 - 29000000.0 * sc[33] * x367 -
            40800000.0 * sc[33] * x863 - x357 * x642 - x357 * x800 -
            x642 * x933 - x800 * x933 + x9442 +
            (40800000.0 * sc[33] * x234) * (x367 - x877) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x863 + (-x234) * (x367 - x877)) +
            (x117 * x642 + x117 * x800) *
              (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1473] = 310000000000.0 * sc[2] * x2678 + 310000000000.0 * sc[2] * x2682 -
            40800000.0 * sc[33] * x354 - 29000000.0 * sc[33] * x402 -
            x358 * x642 - x358 * x800 - x642 * x934 - x800 * x934 + x9442 +
            (40800000.0 * sc[33] * x234) * (x402 - x877) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (x354 - x657 + (-x234) * (x402 - x877)) +
            (x117 * x642 + x117 * x800) *
              (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1513] = 16200000.0 * sc[2] * x537 - 40800000.0 * sc[33] * x363 -
            29000000.0 * sc[33] * x466 + sc[3] * x5688 - x366 + x5556 + x7839 +
            x9443 + (40800000.0 * sc[33] * x234) * (x466 - x877) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (x363 - x657 + (-x234) * (x466 - x877)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1553] = -1690000.0 * sc[33] * x982 + x9444 +
            (40800000.0 * sc[33] * x234) * (-x877 + x887) +
            (x220 * x642 + x220 * x800 - x235 * x642 - x235 * x800) *
              (-x657 + x663 + (-x234) * (-x877 + x887)) +
            (x117 * x642 + x117 * x800) *
              (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[34] = -74200000.0 * x5588 + 74200000.0 * x5592;
  J[74] = x9449;
  J[114] = -x2570 + x9449;
  J[154] = 106000000.0 * sc[33] * x27 * x5590 - x5682 + x9449;
  J[194] = sc[33] * x3021 - sc[34] * x6458 + x9449;
  J[234] = x6602 + x9449;
  J[274] = -212000000.0 * x5588 + 212000000.0 * x5592;
  J[314] = -636000000.0 * x5588 + 636000000.0 * x5592;
  J[354] = x9449;
  J[394] = sc[33] * x5941 + x9449;
  J[434] = -x8089 + x9449;
  J[474] = -212000000.0 * x5588 + 212000000.0 * x5592;
  J[514] = x9449;
  J[554] = x9449;
  J[594] = sc[33] * x8192 - sc[34] * x8648 + x9449;
  J[634] = x9449;
  J[674] = -159000000.0 * x5588 + 159000000.0 * x5592;
  J[714] = -212000000.0 * x5588 + 212000000.0 * x5592;
  J[754] = x9449;
  J[794] = x9449;
  J[834] = x9449;
  J[874] = x9449;
  J[914] = -318000000.0 * x5588 + 318000000.0 * x5592;
  J[954] = x9449;
  J[994] = x9449;
  J[1034] = x9449;
  J[1074] = x9449;
  J[1114] = x9449;
  J[1154] = x9449;
  J[1194] = x9449;
  J[1234] = x9449;
  J[1274] = x9449;
  J[1314] = x9449;
  J[1354] = sc[14] * x8192 + 1690000.0 * sc[38] * x982 +
            106000000.0 * sc[3] * x27 * x5590 + sc[4] * x3021 + sc[9] * x5941 +
            x7073 + x9449;
  J[1394] = -sc[14] * x8648 - sc[4] * x6458 - 106000000.0 * x27 * x5587 -
            x5458 - x6282 - x8319 + x9449;
  J[1434] = x9449;
  J[1474] = x9449;
  J[1514] = x9449;
  J[1554] = 1690000.0 * sc[33] * x982 + x9449;
  J[35] =
    x283 * x642 - x344 * x642 - x349 * x642 + x362 * x642 +
    (-x220 * x642 + x235 * x642) * (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-x117 * x642) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[75] =
    -x317 * x642 - x627 * x642 + x642 * x650 + x642 * x680 +
    (-x220 * x642 + x235 * x642) * (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-x117 * x642) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[115] =
    -2100000000.0 * sc[35] * exp(x9451) + 2100000000.0 * sc[36] * x9452 +
    x2670 +
    (-x220 * x642 + x235 * x642) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-x117 * x642) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[155] =
    x166 * x642 - x642 * x679 + x642 * x696 - x642 * x706 +
    (-x220 * x642 + x235 * x642) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-x117 * x642) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[195] =
    -x642 * x700 + x642 * x701 - x642 * x721 + x642 * x728 +
    (-x220 * x642 + x235 * x642) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x642) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[235] =
    -x180 * x642 + x617 * x642 - x642 * x736 + x642 * x737 +
    (-x220 * x642 + x235 * x642) * (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-x117 * x642) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[275] =
    -x642 * x726 + x642 * x732 - x642 * x741 + x642 * x748 +
    (-x220 * x642 + x235 * x642) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x642) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[315] =
    -x642 * x733 + x642 * x740 - x642 * x751 + x642 * x760 +
    (-x220 * x642 + x235 * x642) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x642) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[355] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[395] =
    x145 * x642 - x642 * x745 + x642 * x747 - x642 * x840 +
    (-x220 * x642 + x235 * x642) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-x117 * x642) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[435] =
    -x642 * x759 + x642 * x767 + x642 * x856 - x642 * x862 +
    (-x220 * x642 + x235 * x642) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-x117 * x642) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[475] =
    -x642 * x786 + x642 * x809 - x642 * x861 + x642 * x875 +
    (-x220 * x642 + x235 * x642) * (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-x117 * x642) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[515] =
    x330 * x642 + x3751 + x642 * x780 +
    (-x220 * x642 + x235 * x642) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x642) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[555] =
    -x180 * x642 + x642 * x851 - x642 * x879 + x642 * x880 +
    (-x220 * x642 + x235 * x642) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x642) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[595] =
    x3751 + x642 * x859 + x642 * x884 +
    (-x220 * x642 + x235 * x642) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x642) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[635] =
    x3751 + x642 * x867 + x642 * x886 +
    (-x220 * x642 + x235 * x642) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x642) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[675] =
    -sc[35] * x8984 - x341 * x642 + x343 * x642 - x642 * x889 + x642 * x893 +
    (-x220 * x642 + x235 * x642) * (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-x117 * x642) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[715] =
    x1 * x642 - x642 * x890 - x642 * x894 + x642 * x897 +
    (-x220 * x642 + x235 * x642) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x642) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[755] =
    x642 * x872 - x642 * x892 + x642 * x900 - x642 * x902 +
    (-x220 * x642 + x235 * x642) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x642) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[795] =
    x214 * x642 + x3751 + x642 * x905 +
    (-x220 * x642 + x235 * x642) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-x117 * x642) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[835] =
    -x642 * x699 + x642 * x904 - x642 * x906 + x642 * x915 +
    (-x220 * x642 + x235 * x642) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x642) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[875] =
    x3751 + x518 * x642 + x642 * x882 +
    (-x220 * x642 + x235 * x642) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x642) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[915] =
    -x642 * x909 + x642 * x910 - x642 * x919 + x642 * x920 +
    (-x220 * x642 + x235 * x642) * (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-x117 * x642) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[955] =
    -x180 * x642 - x642 * x684 + x642 * x768 + x642 * x923 + x8691 +
    (-x220 * x642 + x235 * x642) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x642) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[995] =
    x3751 + x642 * x772 + x642 * x925 +
    (-x220 * x642 + x235 * x642) * (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-x117 * x642) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1035] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1075] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1115] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x642) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1155] =
    x3751 + x642 * x911 + x642 * x927 +
    (-x220 * x642 + x235 * x642) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x642) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1195] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1235] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1275] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1315] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x642) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1355] =
    x5401 + x9165 +
    (-x220 * x642 + x235 * x642) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x642) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1395] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1435] =
    -sc[16] * x8984 - 2100000000.0 * sc[2] * exp(x9451) + x5483 +
    (-x220 * x642 + x235 * x642) * (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-x117 * x642) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1475] =
    2100000000.0 * sc[2] * x9452 + x358 * x642 + x3751 + x642 * x934 +
    (-x220 * x642 + x235 * x642) * (x354 - x657 + (-x234) * (x402 - x877)) +
    (-x117 * x642) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1515] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x642) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1555] =
    x3752 +
    (-x220 * x642 + x235 * x642) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x642) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[36] =
    x283 * x800 - x344 * x800 - x349 * x800 + x362 * x800 +
    (-x220 * x800 + x235 * x800) * (x255 - x371 + (-x234) * (-x607 + x659)) +
    (-x117 * x800) *
      (-x349 + x362 + (x235) * (x255 - x371 + (-x234) * (-x607 + x659)));
  J[76] =
    -x317 * x800 - x627 * x800 + x650 * x800 + x680 * x800 +
    (-x220 * x800 + x235 * x800) * (x468 - x606 + (-x234) * (-x687 + x709)) +
    (-x117 * x800) *
      (-x317 + x680 + (x235) * (x468 - x606 + (-x234) * (-x687 + x709)));
  J[116] =
    2100000000.0 * sc[35] * exp(x9451) - 2100000000.0 * sc[36] * x9452 + x2690 +
    (-x220 * x800 + x235 * x800) * (-x612 + x616 + (-x234) * (-x723 + x730)) +
    (-x117 * x800) *
      (x677 - x685 + (x235) * (-x612 + x616 + (-x234) * (-x723 + x730)));
  J[156] =
    x166 * x800 - x5686 - x679 * x800 + x696 * x800 - x706 * x800 +
    (-x220 * x800 + x235 * x800) * (-x622 + x630 + (-x234) * (-x739 + x743)) +
    (-x117 * x800) *
      (x166 - x706 + (x235) * (-x622 + x630 + (-x234) * (-x739 + x743)));
  J[196] =
    -sc[36] * x6462 + sc[37] * x5794 - x700 * x800 + x701 * x800 - x721 * x800 +
    x728 * x800 +
    (-x220 * x800 + x235 * x800) * (-x131 + x633 + (-x234) * (-x756 + x763)) +
    (-x117 * x800) *
      (-x721 + x728 + (x235) * (-x131 + x633 + (-x234) * (-x756 + x763)));
  J[236] =
    -x180 * x800 + x617 * x800 - x736 * x800 + x737 * x800 +
    (-x220 * x800 + x235 * x800) * (x176 - x643 + (-x234) * (-x782 + x794)) +
    (-x117 * x800) *
      (-x736 + x737 + (x235) * (x176 - x643 + (-x234) * (-x782 + x794)));
  J[276] =
    x3304 +
    (-x220 * x800 + x235 * x800) * (-x207 + x653 + (-x234) * (-x829 + x843)) +
    (-x117 * x800) *
      (-x741 + x748 + (x235) * (-x207 + x653 + (-x234) * (-x829 + x843)));
  J[316] =
    sc[37] * x6667 - x733 * x800 + x740 * x800 - x751 * x800 + x760 * x800 +
    (-x220 * x800 + x235 * x800) * (-x159 + x370 + (-x234) * (-x864 + x871)) +
    (-x117 * x800) *
      (-x751 + x760 + (x235) * (-x159 + x370 + (-x234) * (-x864 + x871)));
  J[356] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[396] =
    x145 * x800 - x745 * x800 + x747 * x800 - x800 * x840 +
    (-x220 * x800 + x235 * x800) * (-x674 + x676 + (-x234) * (-x898 + x903)) +
    (-x117 * x800) *
      (x145 - x840 + (x235) * (-x674 + x676 + (-x234) * (-x898 + x903)));
  J[436] =
    -x759 * x800 + x767 * x800 + x800 * x856 - x800 * x862 +
    (-x220 * x800 + x235 * x800) * (-x686 + x689 + (-x234) * (-x912 + x918)) +
    (-x117 * x800) *
      (x856 - x862 + (x235) * (-x686 + x689 + (-x234) * (-x912 + x918)));
  J[476] =
    -x786 * x800 + x800 * x809 - x800 * x861 + x800 * x875 +
    (-x220 * x800 + x235 * x800) * (x292 - x693 + (-x234) * (-x929 + x935)) +
    (-x117 * x800) *
      (-x861 + x875 + (x235) * (x292 - x693 + (-x234) * (-x929 + x935)));
  J[516] =
    x330 * x800 + x3768 + x780 * x800 +
    (-x220 * x800 + x235 * x800) * (-x657 + x704 + (-x234) * (-x877 + x945)) +
    (-x117 * x800) *
      (-x764 + x780 + (x235) * (-x657 + x704 + (-x234) * (-x877 + x945)));
  J[556] =
    -x180 * x800 + x800 * x851 - x800 * x879 + x800 * x880 +
    (-x220 * x800 + x235 * x800) * (-x705 + x708 + (-x234) * (-x953 + x958)) +
    (-x117 * x800) *
      (-x879 + x880 + (x235) * (-x705 + x708 + (-x234) * (-x953 + x958)));
  J[596] =
    x3768 + x800 * x859 + x800 * x884 +
    (-x220 * x800 + x235 * x800) * (-x657 + x710 + (-x234) * (-x877 + x962)) +
    (-x117 * x800) *
      (-x764 + x884 + (x235) * (-x657 + x710 + (-x234) * (-x877 + x962)));
  J[636] =
    x3768 + x800 * x867 + x800 * x886 +
    (-x220 * x800 + x235 * x800) * (-x657 + x711 + (-x234) * (-x877 + x969)) +
    (-x117 * x800) *
      (-x764 + x886 + (x235) * (-x657 + x711 + (-x234) * (-x877 + x969)));
  J[676] =
    -x341 * x800 + x343 * x800 - x800 * x889 + x800 * x893 +
    (-x220 * x800 + x235 * x800) * (-x713 + x719 + (-x234) * (x593 - x993)) +
    (-x117 * x800) *
      (-x889 + x893 + (x235) * (-x713 + x719 + (-x234) * (x593 - x993)));
  J[716] =
    x1 * x800 - x800 * x890 - x800 * x894 + x800 * x897 +
    (-x220 * x800 + x235 * x800) * (x155 - x722 + (-x234) * (-x1014 + x839)) +
    (-x117 * x800) *
      (-x894 + x897 + (x235) * (x155 - x722 + (-x234) * (-x1014 + x839)));
  J[756] =
    x800 * x872 - x800 * x892 + x800 * x900 - x800 * x902 +
    (-x220 * x800 + x235 * x800) * (-x731 + x738 + (-x234) * (-x1027 + x1036)) +
    (-x117 * x800) *
      (x872 - x902 + (x235) * (-x731 + x738 + (-x234) * (-x1027 + x1036)));
  J[796] =
    x214 * x800 + x3768 + x800 * x905 +
    (-x220 * x800 + x235 * x800) * (-x657 + x742 + (-x234) * (x1042 - x877)) +
    (-x117 * x800) *
      (x214 - x764 + (x235) * (-x657 + x742 + (-x234) * (x1042 - x877)));
  J[836] =
    -x699 * x800 + x800 * x904 - x800 * x906 + x800 * x915 +
    (-x220 * x800 + x235 * x800) * (-x744 + x752 + (-x234) * (-x1052 + x1057)) +
    (-x117 * x800) *
      (-x699 + x904 + (x235) * (-x744 + x752 + (-x234) * (-x1052 + x1057)));
  J[876] =
    x3768 + x518 * x800 + x800 * x882 +
    (-x220 * x800 + x235 * x800) * (-x657 + x750 + (-x234) * (x1061 - x877)) +
    (-x117 * x800) *
      (-x764 + x882 + (x235) * (-x657 + x750 + (-x234) * (x1061 - x877)));
  J[916] =
    -x800 * x909 + x800 * x910 - x800 * x919 + x800 * x920 +
    (-x220 * x800 + x235 * x800) * (-x776 + x781 + (-x234) * (x126 - x308)) +
    (-x117 * x800) *
      (-x909 + x910 + (x235) * (-x776 + x781 + (-x234) * (x126 - x308)));
  J[956] =
    -x180 * x800 - x684 * x800 + x768 * x800 + x800 * x923 +
    (-x220 * x800 + x235 * x800) * (-x785 + x793 + (-x234) * (-x303 + x310)) +
    (-x117 * x800) *
      (-x684 + x768 + (x235) * (-x785 + x793 + (-x234) * (-x303 + x310)));
  J[996] =
    x3768 + x772 * x800 + x800 * x925 +
    (-x220 * x800 + x235 * x800) * (-x657 + x801 + (-x234) * (x325 - x877)) +
    (-x117 * x800) *
      (-x764 + x772 + (x235) * (-x657 + x801 + (-x234) * (x325 - x877)));
  J[1036] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1076] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1116] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x803 + (-x234) * (x326 - x877)) +
    (-x117 * x800) * (x825 + (x235) * (-x657 + x803 + (-x234) * (x326 - x877)));
  J[1156] =
    x3768 + x800 * x911 + x800 * x927 +
    (-x220 * x800 + x235 * x800) * (-x657 + x826 + (-x234) * (x336 - x877)) +
    (-x117 * x800) *
      (-x764 + x911 + (x235) * (-x657 + x826 + (-x234) * (x336 - x877)));
  J[1196] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1236] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1276] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1316] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x816 + (-x234) * (x476 - x877)) +
    (-x117 * x800) * (x825 + (x235) * (-x657 + x816 + (-x234) * (x476 - x877)));
  J[1356] =
    x5394 +
    (-x220 * x800 + x235 * x800) * (-x818 + x849 + (-x234) * (-x257 + x356)) +
    (-x117 * x800) *
      (x285 - x493 + (x235) * (-x818 + x849 + (-x234) * (-x257 + x356)));
  J[1396] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[1436] =
    2100000000.0 * sc[2] * exp(x9451) + x357 * x800 + x3768 + x800 * x933 +
    (-x220 * x800 + x235 * x800) * (-x657 + x863 + (-x234) * (x367 - x877)) +
    (-x117 * x800) *
      (x357 - x764 + (x235) * (-x657 + x863 + (-x234) * (x367 - x877)));
  J[1476] =
    -2100000000.0 * sc[2] * x9452 - sc[4] * x6462 + x5529 - x6293 +
    (-x220 * x800 + x235 * x800) * (x354 - x657 + (-x234) * (x402 - x877)) +
    (-x117 * x800) *
      (x358 - x764 + (x235) * (x354 - x657 + (-x234) * (x402 - x877)));
  J[1516] =
    sc[4] * x5794 + sc[6] * x3302 + sc[7] * x6667 + x3769 +
    (-x220 * x800 + x235 * x800) * (x363 - x657 + (-x234) * (x466 - x877)) +
    (-x117 * x800) * (x825 + (x235) * (x363 - x657 + (-x234) * (x466 - x877)));
  J[1556] =
    x3769 +
    (-x220 * x800 + x235 * x800) * (-x657 + x663 + (-x234) * (-x877 + x887)) +
    (-x117 * x800) *
      (x825 + (x235) * (-x657 + x663 + (-x234) * (-x877 + x887)));
  J[37] = 16200000.0 * sc[33] * x255 - 16200000.0 * sc[33] * x371 -
          217000000.0 * x8724 + 217000000.0 * x8730 +
          (-16200000.0 * sc[33] * x234) * (-x607 + x659);
  J[77] = sc[16] * x47 + sc[17] * x288 + 16200000.0 * sc[33] * x468 -
          16200000.0 * sc[33] * x606 + x9459 +
          (-16200000.0 * sc[33] * x234) * (-x687 + x709);
  J[117] = sc[33] * x2735 * x437 - 16200000.0 * sc[33] * x612 +
           16200000.0 * sc[33] * x616 - 16200000.0 * sc[37] * x537 + x2686 +
           x9459 + (-16200000.0 * sc[33] * x234) * (-x723 + x730);
  J[157] = -16200000.0 * sc[33] * x622 + 16200000.0 * sc[33] * x630 -
           sc[37] * x5688 + x5686 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x739 + x743);
  J[197] = -16200000.0 * sc[33] * x131 + 16200000.0 * sc[33] * x633 +
           sc[36] * x6462 - sc[37] * x5794 - x3075 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x756 + x763);
  J[237] = 16200000.0 * sc[33] * x176 - 16200000.0 * sc[33] * x643 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x782 + x794);
  J[277] = -16200000.0 * sc[33] * x207 + 16200000.0 * sc[33] * x653 -
           sc[37] * x3302 - 620000000.0 * x8724 + 620000000.0 * x8730 +
           (-16200000.0 * sc[33] * x234) * (-x829 + x843);
  J[317] = -16200000.0 * sc[33] * x159 + 16200000.0 * sc[33] * x370 -
           sc[37] * x6667 - 1860000000.0 * x8724 + 1860000000.0 * x8730 +
           (-16200000.0 * sc[33] * x234) * (-x864 + x871);
  J[357] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[397] = -16200000.0 * sc[33] * x674 + 16200000.0 * sc[33] * x676 - x7742 +
           x9459 + (-16200000.0 * sc[33] * x234) * (-x898 + x903);
  J[437] = -16200000.0 * sc[33] * x686 + 16200000.0 * sc[33] * x689 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x912 + x918);
  J[477] = 16200000.0 * sc[33] * x292 - 16200000.0 * sc[33] * x693 -
           620000000.0 * x8724 + 620000000.0 * x8730 +
           (-16200000.0 * sc[33] * x234) * (-x929 + x935);
  J[517] = 16200000.0 * sc[33] * x704 + x9461 +
           (-16200000.0 * sc[33] * x234) * (-x877 + x945);
  J[557] = -16200000.0 * sc[33] * x705 + 16200000.0 * sc[33] * x708 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x953 + x958);
  J[597] = 16200000.0 * sc[33] * x710 + x9461 +
           (-16200000.0 * sc[33] * x234) * (-x877 + x962);
  J[637] = 16200000.0 * sc[33] * x711 + x9461 +
           (-16200000.0 * sc[33] * x234) * (-x877 + x969);
  J[677] = 310000000.0 * refCinv * sc[32] * x27 * x8728 + sc[1] * x47 +
           sc[33] * x6080 - 16200000.0 * sc[33] * x713 +
           16200000.0 * sc[33] * x719 + x4336 - 465000000.0 * x8724 +
           465000000.0 * x8730 + (-16200000.0 * sc[33] * x234) * (x593 - x993);
  J[717] = sc[1] * x288 + 16200000.0 * sc[33] * x155 -
           16200000.0 * sc[33] * x722 + sc[33] * x7805 - 620000000.0 * x8724 +
           620000000.0 * x8730 +
           (-16200000.0 * sc[33] * x234) * (-x1014 + x839);
  J[757] = -16200000.0 * sc[33] * x731 + 16200000.0 * sc[33] * x738 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x1027 + x1036);
  J[797] = 16200000.0 * sc[33] * x742 + x9461 +
           (-16200000.0 * sc[33] * x234) * (x1042 - x877);
  J[837] = -16200000.0 * sc[33] * x744 + 16200000.0 * sc[33] * x752 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x1052 + x1057);
  J[877] = 16200000.0 * sc[33] * x750 + x9461 +
           (-16200000.0 * sc[33] * x234) * (x1061 - x877);
  J[917] = -16200000.0 * sc[33] * x776 + 16200000.0 * sc[33] * x781 -
           930000000.0 * x8724 + 930000000.0 * x8730 +
           (-16200000.0 * sc[33] * x234) * (x126 - x308);
  J[957] = -16200000.0 * sc[33] * x785 + 16200000.0 * sc[33] * x793 + x9459 +
           (-16200000.0 * sc[33] * x234) * (-x303 + x310);
  J[997] = 16200000.0 * sc[33] * x801 + x9461 +
           (-16200000.0 * sc[33] * x234) * (x325 - x877);
  J[1037] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1077] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1117] = 16200000.0 * sc[33] * x803 + x9461 +
            (-16200000.0 * sc[33] * x234) * (x326 - x877);
  J[1157] = 16200000.0 * sc[33] * x826 + x9461 +
            (-16200000.0 * sc[33] * x234) * (x336 - x877);
  J[1197] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1237] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1277] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1317] = 16200000.0 * sc[33] * x816 - 20000000.0 * sc[37] +
            310000000.0 * x27 * x437 * x8728 + x9461 +
            (-16200000.0 * sc[33] * x234) * (x476 - x877);
  J[1357] = sc[16] * x6080 + sc[17] * x7805 - 16200000.0 * sc[33] * x818 +
            16200000.0 * sc[33] * x849 + 16200000.0 * x148 + x2312 * x2735 -
            x364 + x9459 + (-16200000.0 * sc[33] * x234) * (-x257 + x356);
  J[1397] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[1437] = 16200000.0 * sc[33] * x863 + x9461 +
            (-16200000.0 * sc[33] * x234) * (x367 - x877);
  J[1477] = 16200000.0 * sc[33] * x354 + sc[4] * x6462 + x5528 + x6293 + x9461 +
            (-16200000.0 * sc[33] * x234) * (x402 - x877);
  J[1517] = -16200000.0 * sc[2] * x537 - 20000000.0 * sc[32] +
            16200000.0 * sc[33] * x363 - sc[3] * x5688 - sc[4] * x5794 -
            sc[6] * x3302 - sc[7] * x6667 -
            310000000.0 * x27 * exp(-27198.860786745099 * invT) - x366 - x5556 -
            x7839 + x9461 + (-16200000.0 * sc[33] * x234) * (x466 - x877);
  J[1557] = x9462 + (-16200000.0 * sc[33] * x234) * (-x877 + x887);
  J[38] = x7697;
  J[78] = x7697;
  J[118] = -96000000.0 * sc[38] + x7697;
  J[158] = -36000000.0 * sc[38] + x7697;
  J[198] = sc[14] * x3023 - 60000000.0 * sc[38] + x7697;
  J[238] = -x7121 + x7697;
  J[278] = x7697;
  J[318] = 18000.0 * sc[9] * x6535 * x7180 + x7697;
  J[358] = x7697;
  J[398] = 2092.0 * sc[13] * x7769 + 154820.0 * ((sc[14]) * (sc[14])) * x7764 +
           sc[14] * x5946 + sc[15] * x6762 + 18000.0 * sc[7] * x6535 * x7180 +
           x7686 + x7697;
  J[438] = -1000000.0 * sc[38] * x8092 + sc[9] * x20 * x7692 * x7702 + x7697;
  J[478] = x7697;
  J[518] = x7697;
  J[558] = 2092.0 * sc[9] * x7769 + x7237 + x7697;
  J[598] = 309640.0 * sc[14] * sc[9] * x7764 + sc[34] * x8648 + sc[4] * x3023 +
           sc[9] * x5946 + x7697 + 2000000.0 * x8194;
  J[638] = 2092.0 * sc[9] * x6535 * x7768 + sc[9] * x6762 + x7697;
  J[678] = x7697;
  J[718] = x7697;
  J[758] = x7697;
  J[798] = x7697;
  J[838] = x7697;
  J[878] = x7697;
  J[918] = x7697;
  J[958] = x7697;
  J[998] = x7697;
  J[1038] = x7697;
  J[1078] = x7697;
  J[1118] = x7697;
  J[1158] = x7697;
  J[1198] = x7697;
  J[1238] = x7697;
  J[1278] = x7697;
  J[1318] = x7697;
  J[1358] = -1690000.0 * sc[38] * x982 + x7697;
  J[1398] = sc[14] * x8648 + x7697;
  J[1438] = x7697;
  J[1478] = x7697;
  J[1518] = x7697;
  J[1558] = -1000000.0 * sc[10] * x8092 - 96000000.0 * sc[2] -
            1690000.0 * sc[33] * x982 -
            309640.0 * sc[38] * exp(30.696216614087898 * invT) -
            4184.0 * sc[38] * exp(1806.0446135731399 * invT) -
            36000000.0 * sc[3] - 60000000.0 * sc[4] - x7278 + x7697 - x7705;

  for (int k = 0; k < 39; k++) {
    J[1560 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[39], dcRdT[39], e_RT[39];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 39; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1560 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 39; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 39; ++m) {
      dehmixdc += eh_RT[m] * J[k * 40 + m];
    }
    J[k * 40 + 39] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1599] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[39];

  for (int k = 0; k < 39; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 39; k++) {
    J[1560 + k] *= 1.e-6;
    J[k * 40 + 39] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 158;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 30264;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 39;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 3.99500000E+01;
  WT[1] = 2.80140000E+01;
  WT[2] = 1.00800000E+00;
  WT[3] = 1.59990000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 3.30060000E+01;
  WT[6] = 2.01600000E+00;
  WT[7] = 1.80150000E+01;
  WT[8] = 3.40140000E+01;
  WT[9] = 3.19980000E+01;
  WT[10] = 1.50350000E+01;
  WT[11] = 1.60430000E+01;
  WT[12] = 2.90180000E+01;
  WT[13] = 3.00260000E+01;
  WT[14] = 3.10340000E+01;
  WT[15] = 3.20420000E+01;
  WT[16] = 2.80100000E+01;
  WT[17] = 4.40090000E+01;
  WT[18] = 2.60380000E+01;
  WT[19] = 2.70460000E+01;
  WT[20] = 2.80540000E+01;
  WT[21] = 2.90620000E+01;
  WT[22] = 3.00700000E+01;
  WT[23] = 4.10290000E+01;
  WT[24] = 4.20370000E+01;
  WT[25] = 4.30450000E+01;
  WT[26] = 4.40530000E+01;
  WT[27] = 4.00650000E+01;
  WT[28] = 4.10730000E+01;
  WT[29] = 4.20810000E+01;
  WT[30] = 4.30890000E+01;
  WT[31] = 5.61080000E+01;
  WT[32] = 1.40070000E+01;
  WT[33] = 3.00060000E+01;
  WT[34] = 4.60050000E+01;
  WT[35] = 4.30250000E+01;
  WT[36] = 4.30250000E+01;
  WT[37] = 4.20170000E+01;
  WT[38] = 4.70330000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 1.36500000E+02;
  EPS[1] = 9.75300000E+01;
  EPS[2] = 1.45000000E+02;
  EPS[3] = 8.00000000E+01;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 1.07400000E+02;
  EPS[6] = 3.80000000E+01;
  EPS[7] = 5.72400000E+02;
  EPS[8] = 1.07400000E+02;
  EPS[9] = 1.07400000E+02;
  EPS[10] = 1.44000000E+02;
  EPS[11] = 1.41400000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 4.98000000E+02;
  EPS[14] = 4.17000000E+02;
  EPS[15] = 4.81800000E+02;
  EPS[16] = 9.81000000E+01;
  EPS[17] = 2.44000000E+02;
  EPS[18] = 2.09000000E+02;
  EPS[19] = 2.09000000E+02;
  EPS[20] = 2.80800000E+02;
  EPS[21] = 2.52300000E+02;
  EPS[22] = 2.52300000E+02;
  EPS[23] = 1.50000000E+02;
  EPS[24] = 4.36000000E+02;
  EPS[25] = 4.36000000E+02;
  EPS[26] = 2.52000000E+02;
  EPS[27] = 2.52000000E+02;
  EPS[28] = 2.66800000E+02;
  EPS[29] = 2.66800000E+02;
  EPS[30] = 2.66800000E+02;
  EPS[31] = 3.57000000E+02;
  EPS[32] = 7.14000000E+01;
  EPS[33] = 9.75300000E+01;
  EPS[34] = 2.00000000E+02;
  EPS[35] = 2.32400000E+02;
  EPS[36] = 2.32400000E+02;
  EPS[37] = 2.32400000E+02;
  EPS[38] = 4.81800000E+02;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 3.33000000E+00;
  SIG[1] = 3.62100000E+00;
  SIG[2] = 2.05000000E+00;
  SIG[3] = 2.75000000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 3.45800000E+00;
  SIG[6] = 2.92000000E+00;
  SIG[7] = 2.60500000E+00;
  SIG[8] = 3.45800000E+00;
  SIG[9] = 3.45800000E+00;
  SIG[10] = 3.80000000E+00;
  SIG[11] = 3.74600000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 3.59000000E+00;
  SIG[14] = 3.69000000E+00;
  SIG[15] = 3.62600000E+00;
  SIG[16] = 3.65000000E+00;
  SIG[17] = 3.76300000E+00;
  SIG[18] = 4.10000000E+00;
  SIG[19] = 4.10000000E+00;
  SIG[20] = 3.97100000E+00;
  SIG[21] = 4.30200000E+00;
  SIG[22] = 4.30200000E+00;
  SIG[23] = 2.50000000E+00;
  SIG[24] = 3.97000000E+00;
  SIG[25] = 3.97000000E+00;
  SIG[26] = 4.76000000E+00;
  SIG[27] = 4.76000000E+00;
  SIG[28] = 4.98200000E+00;
  SIG[29] = 4.98200000E+00;
  SIG[30] = 4.98200000E+00;
  SIG[31] = 5.17600000E+00;
  SIG[32] = 3.29800000E+00;
  SIG[33] = 3.62100000E+00;
  SIG[34] = 3.50000000E+00;
  SIG[35] = 3.82800000E+00;
  SIG[36] = 3.82800000E+00;
  SIG[37] = 3.82800000E+00;
  SIG[38] = 3.62600000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 1.84400000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 1.70000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 0.00000000E+00;
  DIP[34] = 0.00000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 0.00000000E+00;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 1.76000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 7.90000000E-01;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 1.60000000E+00;
  POL[10] = 0.00000000E+00;
  POL[11] = 2.60000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 1.95000000E+00;
  POL[17] = 2.65000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 1.76000000E+00;
  POL[34] = 0.00000000E+00;
  POL[35] = 0.00000000E+00;
  POL[36] = 0.00000000E+00;
  POL[37] = 0.00000000E+00;
  POL[38] = 0.00000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 0.00000000E+00;
  ZROT[1] = 4.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 0.00000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 1.00000000E+00;
  ZROT[6] = 2.80000000E+02;
  ZROT[7] = 4.00000000E+00;
  ZROT[8] = 3.80000000E+00;
  ZROT[9] = 3.80000000E+00;
  ZROT[10] = 0.00000000E+00;
  ZROT[11] = 1.30000000E+01;
  ZROT[12] = 0.00000000E+00;
  ZROT[13] = 2.00000000E+00;
  ZROT[14] = 2.00000000E+00;
  ZROT[15] = 1.00000000E+00;
  ZROT[16] = 1.80000000E+00;
  ZROT[17] = 2.10000000E+00;
  ZROT[18] = 2.50000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.50000000E+00;
  ZROT[21] = 1.50000000E+00;
  ZROT[22] = 1.50000000E+00;
  ZROT[23] = 1.00000000E+00;
  ZROT[24] = 2.00000000E+00;
  ZROT[25] = 2.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 0.00000000E+00;
  ZROT[33] = 4.00000000E+00;
  ZROT[34] = 1.00000000E+00;
  ZROT[35] = 1.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 1.00000000E+00;
  ZROT[38] = 1.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 0;
  NLIN[1] = 1;
  NLIN[2] = 0;
  NLIN[3] = 0;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 1;
  NLIN[7] = 2;
  NLIN[8] = 2;
  NLIN[9] = 1;
  NLIN[10] = 1;
  NLIN[11] = 2;
  NLIN[12] = 2;
  NLIN[13] = 2;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 1;
  NLIN[17] = 1;
  NLIN[18] = 1;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 2;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 1;
  NLIN[27] = 1;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 0;
  NLIN[33] = 1;
  NLIN[34] = 2;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 1;
  NLIN[38] = 2;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.90422662E+01;
  COFETA[1] = 3.47025711E+00;
  COFETA[2] = -3.75102111E-01;
  COFETA[3] = 1.66086076E-02;
  COFETA[4] = -1.65695492E+01;
  COFETA[5] = 2.39056562E+00;
  COFETA[6] = -2.34558144E-01;
  COFETA[7] = 1.05024037E-02;
  COFETA[8] = -2.04078253E+01;
  COFETA[9] = 3.65436395E+00;
  COFETA[10] = -3.98339635E-01;
  COFETA[11] = 1.75883009E-02;
  COFETA[12] = -1.50926370E+01;
  COFETA[13] = 1.92606504E+00;
  COFETA[14] = -1.73487476E-01;
  COFETA[15] = 7.82572931E-03;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.71463359E+01;
  COFETA[21] = 2.68036374E+00;
  COFETA[22] = -2.72570227E-01;
  COFETA[23] = 1.21650964E-02;
  COFETA[24] = -1.38347555E+01;
  COFETA[25] = 1.00106621E+00;
  COFETA[26] = -4.98105694E-02;
  COFETA[27] = 2.31450475E-03;
  COFETA[28] = -1.05420930E+01;
  COFETA[29] = -1.37777266E+00;
  COFETA[30] = 4.20502561E-01;
  COFETA[31] = -2.40627344E-02;
  COFETA[32] = -1.71312945E+01;
  COFETA[33] = 2.68036374E+00;
  COFETA[34] = -2.72570227E-01;
  COFETA[35] = 1.21650964E-02;
  COFETA[36] = -1.71618439E+01;
  COFETA[37] = 2.68036374E+00;
  COFETA[38] = -2.72570227E-01;
  COFETA[39] = 1.21650964E-02;
  COFETA[40] = -2.02316522E+01;
  COFETA[41] = 3.63241793E+00;
  COFETA[42] = -3.95581049E-01;
  COFETA[43] = 1.74725495E-02;
  COFETA[44] = -2.00094678E+01;
  COFETA[45] = 3.57220167E+00;
  COFETA[46] = -3.87936446E-01;
  COFETA[47] = 1.71483254E-02;
  COFETA[48] = -1.98501400E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -1.98330663E+01;
  COFETA[53] = 2.69480162E+00;
  COFETA[54] = -1.65880845E-01;
  COFETA[55] = 3.14504769E-03;
  COFETA[56] = -1.99945964E+01;
  COFETA[57] = 2.86923161E+00;
  COFETA[58] = -2.03325438E-01;
  COFETA[59] = 5.39055928E-03;
  COFETA[60] = -2.05644597E+01;
  COFETA[61] = 3.03946431E+00;
  COFETA[62] = -2.16994867E-01;
  COFETA[63] = 5.61394012E-03;
  COFETA[64] = -1.66188439E+01;
  COFETA[65] = 2.40307799E+00;
  COFETA[66] = -2.36167638E-01;
  COFETA[67] = 1.05714061E-02;
  COFETA[68] = -2.40015087E+01;
  COFETA[69] = 5.14359547E+00;
  COFETA[70] = -5.74269731E-01;
  COFETA[71] = 2.44937679E-02;
  COFETA[72] = -2.33666497E+01;
  COFETA[73] = 4.80350223E+00;
  COFETA[74] = -5.38341336E-01;
  COFETA[75] = 2.32747213E-02;
  COFETA[76] = -2.33476586E+01;
  COFETA[77] = 4.80350223E+00;
  COFETA[78] = -5.38341336E-01;
  COFETA[79] = 2.32747213E-02;
  COFETA[80] = -2.50655480E+01;
  COFETA[81] = 5.33982977E+00;
  COFETA[82] = -5.89982992E-01;
  COFETA[83] = 2.47780650E-02;
  COFETA[84] = -2.46581444E+01;
  COFETA[85] = 5.19497183E+00;
  COFETA[86] = -5.78827339E-01;
  COFETA[87] = 2.46050921E-02;
  COFETA[88] = -2.46410962E+01;
  COFETA[89] = 5.19497183E+00;
  COFETA[90] = -5.78827339E-01;
  COFETA[91] = 2.46050921E-02;
  COFETA[92] = -1.92183918E+01;
  COFETA[93] = 3.75164499E+00;
  COFETA[94] = -4.10390993E-01;
  COFETA[95] = 1.80861665E-02;
  COFETA[96] = -2.23395728E+01;
  COFETA[97] = 3.86433912E+00;
  COFETA[98] = -3.41553983E-01;
  COFETA[99] = 1.17083447E-02;
  COFETA[100] = -2.23277248E+01;
  COFETA[101] = 3.86433912E+00;
  COFETA[102] = -3.41553983E-01;
  COFETA[103] = 1.17083447E-02;
  COFETA[104] = -2.46420702E+01;
  COFETA[105] = 5.19146996E+00;
  COFETA[106] = -5.78430696E-01;
  COFETA[107] = 2.45902122E-02;
  COFETA[108] = -2.46895153E+01;
  COFETA[109] = 5.19146996E+00;
  COFETA[110] = -5.78430696E-01;
  COFETA[111] = 2.45902122E-02;
  COFETA[112] = -2.51527894E+01;
  COFETA[113] = 5.30723075E+00;
  COFETA[114] = -5.89742369E-01;
  COFETA[115] = 2.49294033E-02;
  COFETA[116] = -2.51406667E+01;
  COFETA[117] = 5.30723075E+00;
  COFETA[118] = -5.89742369E-01;
  COFETA[119] = 2.49294033E-02;
  COFETA[120] = -2.51288310E+01;
  COFETA[121] = 5.30723075E+00;
  COFETA[122] = -5.89742369E-01;
  COFETA[123] = 2.49294033E-02;
  COFETA[124] = -2.48316268E+01;
  COFETA[125] = 4.94595777E+00;
  COFETA[126] = -5.12278955E-01;
  COFETA[127] = 2.03286378E-02;
  COFETA[128] = -1.49299043E+01;
  COFETA[129] = 1.69625877E+00;
  COFETA[130] = -1.42936462E-01;
  COFETA[131] = 6.47223426E-03;
  COFETA[132] = -1.65352027E+01;
  COFETA[133] = 2.39056562E+00;
  COFETA[134] = -2.34558144E-01;
  COFETA[135] = 1.05024037E-02;
  COFETA[136] = -2.24069409E+01;
  COFETA[137] = 4.68007883E+00;
  COFETA[138] = -5.23982071E-01;
  COFETA[139] = 2.27205629E-02;
  COFETA[140] = -2.38129571E+01;
  COFETA[141] = 5.08149651E+00;
  COFETA[142] = -5.69446240E-01;
  COFETA[143] = 2.44183705E-02;
  COFETA[144] = -2.38129571E+01;
  COFETA[145] = 5.08149651E+00;
  COFETA[146] = -5.69446240E-01;
  COFETA[147] = 2.44183705E-02;
  COFETA[148] = -2.38248106E+01;
  COFETA[149] = 5.08149651E+00;
  COFETA[150] = -5.69446240E-01;
  COFETA[151] = 2.44183705E-02;
  COFETA[152] = -2.03725587E+01;
  COFETA[153] = 3.03946431E+00;
  COFETA[154] = -2.16994867E-01;
  COFETA[155] = 5.61394012E-03;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = -3.17204599E+00;
  COFLAM[1] = 3.47025711E+00;
  COFLAM[2] = -3.75102111E-01;
  COFLAM[3] = 1.66086076E-02;
  COFLAM[4] = 1.29305954E+01;
  COFLAM[5] = -3.52816965E+00;
  COFLAM[6] = 6.45498434E-01;
  COFLAM[7] = -3.19375023E-02;
  COFLAM[8] = -8.57944636E-01;
  COFLAM[9] = 3.65436395E+00;
  COFLAM[10] = -3.98339635E-01;
  COFLAM[11] = 1.75883009E-02;
  COFLAM[12] = 1.69268564E+00;
  COFLAM[13] = 1.92606504E+00;
  COFLAM[14] = -1.73487476E-01;
  COFLAM[15] = 7.82572931E-03;
  COFLAM[16] = 1.50119775E+01;
  COFLAM[17] = -3.63267617E+00;
  COFLAM[18] = 5.92838774E-01;
  COFLAM[19] = -2.62920291E-02;
  COFLAM[20] = -1.12959874E+00;
  COFLAM[21] = 2.34014328E+00;
  COFLAM[22] = -1.63245076E-01;
  COFLAM[23] = 5.80319843E-03;
  COFLAM[24] = 9.24082480E+00;
  COFLAM[25] = -4.69567526E-01;
  COFLAM[26] = 1.15980102E-01;
  COFLAM[27] = -2.61033156E-03;
  COFLAM[28] = 2.33729836E+01;
  COFLAM[29] = -8.96536178E+00;
  COFLAM[30] = 1.52828630E+00;
  COFLAM[31] = -7.58551616E-02;
  COFLAM[32] = 8.84006318E-01;
  COFLAM[33] = 1.31525455E+00;
  COFLAM[34] = 1.91773906E-02;
  COFLAM[35] = -4.41642314E-03;
  COFLAM[36] = -1.93717634E+00;
  COFLAM[37] = 2.89110257E+00;
  COFLAM[38] = -2.71096988E-01;
  COFLAM[39] = 1.15344939E-02;
  COFLAM[40] = 1.39937895E+01;
  COFLAM[41] = -4.64256403E+00;
  COFLAM[42] = 9.07728510E-01;
  COFLAM[43] = -4.77274380E-02;
  COFLAM[44] = 1.33091614E+01;
  COFLAM[45] = -4.96140250E+00;
  COFLAM[46] = 1.03295495E+00;
  COFLAM[47] = -5.63420011E-02;
  COFLAM[48] = 6.30244184E+00;
  COFLAM[49] = -2.22810729E+00;
  COFLAM[50] = 6.37340380E-01;
  COFLAM[51] = -3.81055943E-02;
  COFLAM[52] = 5.39305623E+00;
  COFLAM[53] = -2.39312259E+00;
  COFLAM[54] = 7.39585006E-01;
  COFLAM[55] = -4.58435469E-02;
  COFLAM[56] = -1.10587028E+01;
  COFLAM[57] = 4.78793775E+00;
  COFLAM[58] = -2.82998801E-01;
  COFLAM[59] = 2.34922792E-03;
  COFLAM[60] = -1.83490841E+00;
  COFLAM[61] = 5.55822580E-01;
  COFLAM[62] = 3.51309961E-01;
  COFLAM[63] = -2.85527493E-02;
  COFLAM[64] = 1.18777275E+01;
  COFLAM[65] = -3.15463597E+00;
  COFLAM[66] = 6.01972754E-01;
  COFLAM[67] = -3.03211015E-02;
  COFLAM[68] = -1.13649201E+01;
  COFLAM[69] = 5.88177354E+00;
  COFLAM[70] = -5.68651792E-01;
  COFLAM[71] = 2.03561484E-02;
  COFLAM[72] = -7.70164041E+00;
  COFLAM[73] = 4.56884430E+00;
  COFLAM[74] = -4.04747578E-01;
  COFLAM[75] = 1.40841066E-02;
  COFLAM[76] = -9.10383958E+00;
  COFLAM[77] = 4.54798776E+00;
  COFLAM[78] = -3.18114363E-01;
  COFLAM[79] = 6.59577260E-03;
  COFLAM[80] = -1.46152767E+01;
  COFLAM[81] = 6.36251222E+00;
  COFLAM[82] = -5.03831917E-01;
  COFLAM[83] = 1.26120967E-02;
  COFLAM[84] = -8.95009242E+00;
  COFLAM[85] = 4.02514973E+00;
  COFLAM[86] = -1.84063835E-01;
  COFLAM[87] = -1.94055121E-03;
  COFLAM[88] = -1.09902158E+01;
  COFLAM[89] = 4.70647555E+00;
  COFLAM[90] = -2.52272322E-01;
  COFLAM[91] = 1.75186734E-04;
  COFLAM[92] = -5.96382011E+00;
  COFLAM[93] = 4.39355990E+00;
  COFLAM[94] = -3.97598235E-01;
  COFLAM[95] = 1.39749618E-02;
  COFLAM[96] = -8.32870491E+00;
  COFLAM[97] = 3.97067241E+00;
  COFLAM[98] = -2.21252281E-01;
  COFLAM[99] = 1.47870386E-03;
  COFLAM[100] = -6.27424897E+00;
  COFLAM[101] = 2.90471284E+00;
  COFLAM[102] = -4.35144336E-02;
  COFLAM[103] = -7.77922743E-03;
  COFLAM[104] = -2.77092071E+01;
  COFLAM[105] = 1.17665995E+01;
  COFLAM[106] = -1.26344181E+00;
  COFLAM[107] = 4.79446321E-02;
  COFLAM[108] = -1.58786816E+01;
  COFLAM[109] = 7.19465933E+00;
  COFLAM[110] = -6.71633277E-01;
  COFLAM[111] = 2.23916634E-02;
  COFLAM[112] = -2.14189910E+01;
  COFLAM[113] = 9.40840962E+00;
  COFLAM[114] = -9.66247319E-01;
  COFLAM[115] = 3.55085303E-02;
  COFLAM[116] = -1.70514626E+01;
  COFLAM[117] = 7.35906672E+00;
  COFLAM[118] = -6.52820712E-01;
  COFLAM[119] = 1.99982085E-02;
  COFLAM[120] = -1.92766749E+01;
  COFLAM[121] = 8.39485888E+00;
  COFLAM[122] = -8.05424342E-01;
  COFLAM[123] = 2.74026959E-02;
  COFLAM[124] = -1.45831859E+01;
  COFLAM[125] = 5.90742404E+00;
  COFLAM[126] = -3.94364795E-01;
  COFLAM[127] = 5.56233024E-03;
  COFLAM[128] = 1.98838734E+00;
  COFLAM[129] = 1.69625877E+00;
  COFLAM[130] = -1.42936462E-01;
  COFLAM[131] = 6.47223426E-03;
  COFLAM[132] = 9.56599978E+00;
  COFLAM[133] = -2.13077714E+00;
  COFLAM[134] = 4.54319184E-01;
  COFLAM[135] = -2.33434869E-02;
  COFLAM[136] = -1.39111470E+01;
  COFLAM[137] = 7.26782640E+00;
  COFLAM[138] = -7.97501361E-01;
  COFLAM[139] = 3.25210608E-02;
  COFLAM[140] = -1.18051789E+01;
  COFLAM[141] = 6.05433413E+00;
  COFLAM[142] = -5.78395161E-01;
  COFLAM[143] = 2.02076896E-02;
  COFLAM[144] = -6.28657099E+00;
  COFLAM[145] = 3.68588787E+00;
  COFLAM[146] = -2.44665089E-01;
  COFLAM[147] = 4.69898271E-03;
  COFLAM[148] = -1.12094227E+01;
  COFLAM[149] = 5.94941207E+00;
  COFLAM[150] = -5.91419381E-01;
  COFLAM[151] = 2.18094760E-02;
  COFLAM[152] = -1.89905217E+01;
  COFLAM[153] = 8.67271919E+00;
  COFLAM[154] = -9.03524932E-01;
  COFLAM[155] = 3.48741085E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.72274176E+01;
  COFD[1] = 4.09361913E+00;
  COFD[2] = -3.19258125E-01;
  COFD[3] = 1.39526981E-02;
  COFD[4] = -1.59877962E+01;
  COFD[5] = 3.63340763E+00;
  COFD[6] = -2.60307961E-01;
  COFD[7] = 1.14256954E-02;
  COFD[8] = -1.54738770E+01;
  COFD[9] = 4.15765300E+00;
  COFD[10] = -3.27126237E-01;
  COFD[11] = 1.42762611E-02;
  COFD[12] = -1.49610523E+01;
  COFD[13] = 3.41988961E+00;
  COFD[14] = -2.33128386E-01;
  COFD[15] = 1.02689994E-02;
  COFD[16] = -1.49826737E+01;
  COFD[17] = 3.41988961E+00;
  COFD[18] = -2.33128386E-01;
  COFD[19] = 1.02689994E-02;
  COFD[20] = -1.62465647E+01;
  COFD[21] = 3.72612300E+00;
  COFD[22] = -2.71663673E-01;
  COFD[23] = 1.18889643E-02;
  COFD[24] = -1.23130320E+01;
  COFD[25] = 2.74418790E+00;
  COFD[26] = -1.46230156E-01;
  COFD[27] = 6.53948886E-03;
  COFD[28] = -2.12755915E+01;
  COFD[29] = 5.60381989E+00;
  COFD[30] = -4.91225459E-01;
  COFD[31] = 2.04487844E-02;
  COFD[32] = -1.62547451E+01;
  COFD[33] = 3.72612300E+00;
  COFD[34] = -2.71663673E-01;
  COFD[35] = 1.18889643E-02;
  COFD[36] = -1.62380132E+01;
  COFD[37] = 3.72612300E+00;
  COFD[38] = -2.71663673E-01;
  COFD[39] = 1.18889643E-02;
  COFD[40] = -1.72197029E+01;
  COFD[41] = 4.14993355E+00;
  COFD[42] = -3.26168062E-01;
  COFD[43] = 1.42364115E-02;
  COFD[44] = -1.71754233E+01;
  COFD[45] = 4.13131681E+00;
  COFD[46] = -3.23897559E-01;
  COFD[47] = 1.41438222E-02;
  COFD[48] = -2.14255154E+01;
  COFD[49] = 5.52240865E+00;
  COFD[50] = -4.84699537E-01;
  COFD[51] = 2.03247833E-02;
  COFD[52] = -2.14353342E+01;
  COFD[53] = 5.52240865E+00;
  COFD[54] = -4.84699537E-01;
  COFD[55] = 2.03247833E-02;
  COFD[56] = -2.10026942E+01;
  COFD[57] = 5.38326647E+00;
  COFD[58] = -4.71201048E-01;
  COFD[59] = 1.99207516E-02;
  COFD[60] = -2.13502433E+01;
  COFD[61] = 5.48617067E+00;
  COFD[62] = -4.80816776E-01;
  COFD[63] = 2.01887868E-02;
  COFD[64] = -1.60074270E+01;
  COFD[65] = 3.63723937E+00;
  COFD[66] = -2.60754222E-01;
  COFD[67] = 1.14428814E-02;
  COFD[68] = -1.93483786E+01;
  COFD[69] = 4.79506290E+00;
  COFD[70] = -4.04621659E-01;
  COFD[71] = 1.74244230E-02;
  COFD[72] = -1.87717415E+01;
  COFD[73] = 4.61078776E+00;
  COFD[74] = -3.82625667E-01;
  COFD[75] = 1.65478601E-02;
  COFD[76] = -1.87831526E+01;
  COFD[77] = 4.61078776E+00;
  COFD[78] = -3.82625667E-01;
  COFD[79] = 1.65478601E-02;
  COFD[80] = -1.98040420E+01;
  COFD[81] = 4.97569695E+00;
  COFD[82] = -4.26123307E-01;
  COFD[83] = 1.82788664E-02;
  COFD[84] = -1.94928919E+01;
  COFD[85] = 4.83189721E+00;
  COFD[86] = -4.08932249E-01;
  COFD[87] = 1.75924650E-02;
  COFD[88] = -1.95026899E+01;
  COFD[89] = 4.83189721E+00;
  COFD[90] = -4.08932249E-01;
  COFD[91] = 1.75924650E-02;
  COFD[92] = -1.72570708E+01;
  COFD[93] = 4.19757624E+00;
  COFD[94] = -3.32087529E-01;
  COFD[95] = 1.44827462E-02;
  COFD[96] = -2.12451070E+01;
  COFD[97] = 5.40444222E+00;
  COFD[98] = -4.72708609E-01;
  COFD[99] = 1.99362392E-02;
  COFD[100] = -2.12508452E+01;
  COFD[101] = 5.40444222E+00;
  COFD[102] = -4.72708609E-01;
  COFD[103] = 1.99362392E-02;
  COFD[104] = -1.97155668E+01;
  COFD[105] = 4.83069339E+00;
  COFD[106] = -4.08794086E-01;
  COFD[107] = 1.75872010E-02;
  COFD[108] = -1.96924408E+01;
  COFD[109] = 4.83069339E+00;
  COFD[110] = -4.08794086E-01;
  COFD[111] = 1.75872010E-02;
  COFD[112] = -1.99687862E+01;
  COFD[113] = 4.90643348E+00;
  COFD[114] = -4.17847566E-01;
  COFD[115] = 1.79485301E-02;
  COFD[116] = -1.99747268E+01;
  COFD[117] = 4.90643348E+00;
  COFD[118] = -4.17847566E-01;
  COFD[119] = 1.79485301E-02;
  COFD[120] = -1.99804559E+01;
  COFD[121] = 4.90643348E+00;
  COFD[122] = -4.17847566E-01;
  COFD[123] = 1.79485301E-02;
  COFD[124] = -2.10640502E+01;
  COFD[125] = 5.23527231E+00;
  COFD[126] = -4.55448724E-01;
  COFD[127] = 1.93756364E-02;
  COFD[128] = -1.47042106E+01;
  COFD[129] = 3.27505697E+00;
  COFD[130] = -2.14306851E-01;
  COFD[131] = 9.45219335E-03;
  COFD[132] = -1.60076986E+01;
  COFD[133] = 3.63340763E+00;
  COFD[134] = -2.60307961E-01;
  COFD[135] = 1.14256954E-02;
  COFD[136] = -1.85744784E+01;
  COFD[137] = 4.54507313E+00;
  COFD[138] = -3.74508073E-01;
  COFD[139] = 1.62126770E-02;
  COFD[140] = -1.91975554E+01;
  COFD[141] = 4.73837374E+00;
  COFD[142] = -3.97916523E-01;
  COFD[143] = 1.71599378E-02;
  COFD[144] = -1.91975554E+01;
  COFD[145] = 4.73837374E+00;
  COFD[146] = -3.97916523E-01;
  COFD[147] = 1.71599378E-02;
  COFD[148] = -1.91918132E+01;
  COFD[149] = 4.73837374E+00;
  COFD[150] = -3.97916523E-01;
  COFD[151] = 1.71599378E-02;
  COFD[152] = -2.14475654E+01;
  COFD[153] = 5.48617067E+00;
  COFD[154] = -4.80816776E-01;
  COFD[155] = 2.01887868E-02;
  COFD[156] = -1.59877962E+01;
  COFD[157] = 3.63340763E+00;
  COFD[158] = -2.60307961E-01;
  COFD[159] = 1.14256954E-02;
  COFD[160] = -1.49828551E+01;
  COFD[161] = 3.25781069E+00;
  COFD[162] = -2.12199367E-01;
  COFD[163] = 9.36657283E-03;
  COFD[164] = -1.42894603E+01;
  COFD[165] = 3.67490723E+00;
  COFD[166] = -2.65114792E-01;
  COFD[167] = 1.16092671E-02;
  COFD[168] = -1.40756909E+01;
  COFD[169] = 3.07549274E+00;
  COFD[170] = -1.88889344E-01;
  COFD[171] = 8.37152866E-03;
  COFD[172] = -1.40949183E+01;
  COFD[173] = 3.07549274E+00;
  COFD[174] = -1.88889344E-01;
  COFD[175] = 8.37152866E-03;
  COFD[176] = -1.52486292E+01;
  COFD[177] = 3.35922578E+00;
  COFD[178] = -2.25181399E-01;
  COFD[179] = 9.92132878E-03;
  COFD[180] = -1.16906458E+01;
  COFD[181] = 2.47469981E+00;
  COFD[182] = -1.10436257E-01;
  COFD[183] = 4.95273813E-03;
  COFD[184] = -2.10643264E+01;
  COFD[185] = 5.53614864E+00;
  COFD[186] = -4.86046753E-01;
  COFD[187] = 2.03659193E-02;
  COFD[188] = -1.52554785E+01;
  COFD[189] = 3.35922578E+00;
  COFD[190] = -2.25181399E-01;
  COFD[191] = 9.92132878E-03;
  COFD[192] = -1.52414498E+01;
  COFD[193] = 3.35922578E+00;
  COFD[194] = -2.25181399E-01;
  COFD[195] = 9.92132878E-03;
  COFD[196] = -1.59633426E+01;
  COFD[197] = 3.66853818E+00;
  COFD[198] = -2.64346221E-01;
  COFD[199] = 1.15784613E-02;
  COFD[200] = -1.59327344E+01;
  COFD[201] = 3.65620899E+00;
  COFD[202] = -2.62933804E-01;
  COFD[203] = 1.15253223E-02;
  COFD[204] = -2.04750606E+01;
  COFD[205] = 5.23112374E+00;
  COFD[206] = -4.54967682E-01;
  COFD[207] = 1.93570423E-02;
  COFD[208] = -2.04833743E+01;
  COFD[209] = 5.23112374E+00;
  COFD[210] = -4.54967682E-01;
  COFD[211] = 1.93570423E-02;
  COFD[212] = -2.02268939E+01;
  COFD[213] = 5.13632099E+00;
  COFD[214] = -4.44839130E-01;
  COFD[215] = 1.90058356E-02;
  COFD[216] = -2.03844292E+01;
  COFD[217] = 5.18856872E+00;
  COFD[218] = -4.50001829E-01;
  COFD[219] = 1.91636142E-02;
  COFD[220] = -1.50031706E+01;
  COFD[221] = 3.26223357E+00;
  COFD[222] = -2.12746642E-01;
  COFD[223] = 9.38912883E-03;
  COFD[224] = -1.81432499E+01;
  COFD[225] = 4.37565431E+00;
  COFD[226] = -3.53906025E-01;
  COFD[227] = 1.53760786E-02;
  COFD[228] = -1.76002073E+01;
  COFD[229] = 4.19171952E+00;
  COFD[230] = -3.31354810E-01;
  COFD[231] = 1.44520623E-02;
  COFD[232] = -1.76099599E+01;
  COFD[233] = 4.19171952E+00;
  COFD[234] = -3.31354810E-01;
  COFD[235] = 1.44520623E-02;
  COFD[236] = -1.85864196E+01;
  COFD[237] = 4.54915847E+00;
  COFD[238] = -3.75000738E-01;
  COFD[239] = 1.62324821E-02;
  COFD[240] = -1.83166409E+01;
  COFD[241] = 4.42045763E+00;
  COFD[242] = -3.59451578E-01;
  COFD[243] = 1.56056164E-02;
  COFD[244] = -1.83249359E+01;
  COFD[245] = 4.42045763E+00;
  COFD[246] = -3.59451578E-01;
  COFD[247] = 1.56056164E-02;
  COFD[248] = -1.59884349E+01;
  COFD[249] = 3.72220402E+00;
  COFD[250] = -2.71150591E-01;
  COFD[251] = 1.18665265E-02;
  COFD[252] = -2.02646659E+01;
  COFD[253] = 5.10426133E+00;
  COFD[254] = -4.41256919E-01;
  COFD[255] = 1.88737290E-02;
  COFD[256] = -2.02693704E+01;
  COFD[257] = 5.10426133E+00;
  COFD[258] = -4.41256919E-01;
  COFD[259] = 1.88737290E-02;
  COFD[260] = -1.85159963E+01;
  COFD[261] = 4.41886064E+00;
  COFD[262] = -3.59254256E-01;
  COFD[263] = 1.55974661E-02;
  COFD[264] = -1.84970149E+01;
  COFD[265] = 4.41886064E+00;
  COFD[266] = -3.59254256E-01;
  COFD[267] = 1.55974661E-02;
  COFD[268] = -1.87434421E+01;
  COFD[269] = 4.48550694E+00;
  COFD[270] = -3.67277454E-01;
  COFD[271] = 1.59194755E-02;
  COFD[272] = -1.87483223E+01;
  COFD[273] = 4.48550694E+00;
  COFD[274] = -3.67277454E-01;
  COFD[275] = 1.59194755E-02;
  COFD[276] = -1.87530190E+01;
  COFD[277] = 4.48550694E+00;
  COFD[278] = -3.67277454E-01;
  COFD[279] = 1.59194755E-02;
  COFD[280] = -1.98610465E+01;
  COFD[281] = 4.84231878E+00;
  COFD[282] = -4.10101001E-01;
  COFD[283] = 1.76356687E-02;
  COFD[284] = -1.39186828E+01;
  COFD[285] = 2.97137588E+00;
  COFD[286] = -1.75491257E-01;
  COFD[287] = 7.79646773E-03;
  COFD[288] = -1.49997335E+01;
  COFD[289] = 3.25781069E+00;
  COFD[290] = -2.12199367E-01;
  COFD[291] = 9.36657283E-03;
  COFD[292] = -1.74272359E+01;
  COFD[293] = 4.14166966E+00;
  COFD[294] = -3.25149462E-01;
  COFD[295] = 1.41943811E-02;
  COFD[296] = -1.79721047E+01;
  COFD[297] = 4.30841971E+00;
  COFD[298] = -3.45524579E-01;
  COFD[299] = 1.50265381E-02;
  COFD[300] = -1.79721047E+01;
  COFD[301] = 4.30841971E+00;
  COFD[302] = -3.45524579E-01;
  COFD[303] = 1.50265381E-02;
  COFD[304] = -1.79673967E+01;
  COFD[305] = 4.30841971E+00;
  COFD[306] = -3.45524579E-01;
  COFD[307] = 1.50265381E-02;
  COFD[308] = -2.04649116E+01;
  COFD[309] = 5.18856872E+00;
  COFD[310] = -4.50001829E-01;
  COFD[311] = 1.91636142E-02;
  COFD[312] = -1.54738770E+01;
  COFD[313] = 4.15765300E+00;
  COFD[314] = -3.27126237E-01;
  COFD[315] = 1.42762611E-02;
  COFD[316] = -1.42894603E+01;
  COFD[317] = 3.67490723E+00;
  COFD[318] = -2.65114792E-01;
  COFD[319] = 1.16092671E-02;
  COFD[320] = -1.47968875E+01;
  COFD[321] = 4.23027636E+00;
  COFD[322] = -3.36139991E-01;
  COFD[323] = 1.46507621E-02;
  COFD[324] = -1.34230419E+01;
  COFD[325] = 3.48624238E+00;
  COFD[326] = -2.41554467E-01;
  COFD[327] = 1.06263545E-02;
  COFD[328] = -1.34248014E+01;
  COFD[329] = 3.48624238E+00;
  COFD[330] = -2.41554467E-01;
  COFD[331] = 1.06263545E-02;
  COFD[332] = -1.46554904E+01;
  COFD[333] = 3.83606243E+00;
  COFD[334] = -2.86076532E-01;
  COFD[335] = 1.25205829E-02;
  COFD[336] = -1.14366544E+01;
  COFD[337] = 2.78323501E+00;
  COFD[338] = -1.51214064E-01;
  COFD[339] = 6.75150012E-03;
  COFD[340] = -1.95739720E+01;
  COFD[341] = 5.61113230E+00;
  COFD[342] = -4.90190187E-01;
  COFD[343] = 2.03260675E-02;
  COFD[344] = -1.46559297E+01;
  COFD[345] = 3.83606243E+00;
  COFD[346] = -2.86076532E-01;
  COFD[347] = 1.25205829E-02;
  COFD[348] = -1.46550238E+01;
  COFD[349] = 3.83606243E+00;
  COFD[350] = -2.86076532E-01;
  COFD[351] = 1.25205829E-02;
  COFD[352] = -1.57995045E+01;
  COFD[353] = 4.22225052E+00;
  COFD[354] = -3.35156428E-01;
  COFD[355] = 1.46104855E-02;
  COFD[356] = -1.57199190E+01;
  COFD[357] = 4.19936335E+00;
  COFD[358] = -3.32311009E-01;
  COFD[359] = 1.44921003E-02;
  COFD[360] = -1.97544605E+01;
  COFD[361] = 5.56931926E+00;
  COFD[362] = -4.89105511E-01;
  COFD[363] = 2.04493129E-02;
  COFD[364] = -1.97550243E+01;
  COFD[365] = 5.56931926E+00;
  COFD[366] = -4.89105511E-01;
  COFD[367] = 2.04493129E-02;
  COFD[368] = -1.92718738E+01;
  COFD[369] = 5.41172124E+00;
  COFD[370] = -4.73213887E-01;
  COFD[371] = 1.99405473E-02;
  COFD[372] = -1.96866259E+01;
  COFD[373] = 5.54637286E+00;
  COFD[374] = -4.87070324E-01;
  COFD[375] = 2.03983467E-02;
  COFD[376] = -1.43151328E+01;
  COFD[377] = 3.68038508E+00;
  COFD[378] = -2.65779346E-01;
  COFD[379] = 1.16360771E-02;
  COFD[380] = -1.76147183E+01;
  COFD[381] = 4.86049500E+00;
  COFD[382] = -4.12200578E-01;
  COFD[383] = 1.77160971E-02;
  COFD[384] = -1.72232379E+01;
  COFD[385] = 4.69060745E+00;
  COFD[386] = -3.92369888E-01;
  COFD[387] = 1.69459661E-02;
  COFD[388] = -1.72239329E+01;
  COFD[389] = 4.69060745E+00;
  COFD[390] = -3.92369888E-01;
  COFD[391] = 1.69459661E-02;
  COFD[392] = -1.82252070E+01;
  COFD[393] = 5.05237312E+00;
  COFD[394] = -4.35182396E-01;
  COFD[395] = 1.86363074E-02;
  COFD[396] = -1.79339484E+01;
  COFD[397] = 4.91373893E+00;
  COFD[398] = -4.18747629E-01;
  COFD[399] = 1.79856610E-02;
  COFD[400] = -1.79345106E+01;
  COFD[401] = 4.91373893E+00;
  COFD[402] = -4.18747629E-01;
  COFD[403] = 1.79856610E-02;
  COFD[404] = -1.54460977E+01;
  COFD[405] = 4.26819983E+00;
  COFD[406] = -3.40766379E-01;
  COFD[407] = 1.48393361E-02;
  COFD[408] = -1.94688845E+01;
  COFD[409] = 5.43830787E+00;
  COFD[410] = -4.75472880E-01;
  COFD[411] = 1.99909996E-02;
  COFD[412] = -1.94691588E+01;
  COFD[413] = 5.43830787E+00;
  COFD[414] = -4.75472880E-01;
  COFD[415] = 1.99909996E-02;
  COFD[416] = -1.80736227E+01;
  COFD[417] = 4.91182086E+00;
  COFD[418] = -4.18511339E-01;
  COFD[419] = 1.79759141E-02;
  COFD[420] = -1.80725106E+01;
  COFD[421] = 4.91182086E+00;
  COFD[422] = -4.18511339E-01;
  COFD[423] = 1.79759141E-02;
  COFD[424] = -1.83539845E+01;
  COFD[425] = 4.98756925E+00;
  COFD[426] = -4.27526072E-01;
  COFD[427] = 1.83341755E-02;
  COFD[428] = -1.83542714E+01;
  COFD[429] = 4.98756925E+00;
  COFD[430] = -4.27526072E-01;
  COFD[431] = 1.83341755E-02;
  COFD[432] = -1.83545451E+01;
  COFD[433] = 4.98756925E+00;
  COFD[434] = -4.27526072E-01;
  COFD[435] = 1.83341755E-02;
  COFD[436] = -1.94091316E+01;
  COFD[437] = 5.32291505E+00;
  COFD[438] = -4.65883522E-01;
  COFD[439] = 1.97916109E-02;
  COFD[440] = -1.32522938E+01;
  COFD[441] = 3.34156587E+00;
  COFD[442] = -2.22853306E-01;
  COFD[443] = 9.81883417E-03;
  COFD[444] = -1.42906145E+01;
  COFD[445] = 3.67490723E+00;
  COFD[446] = -2.65114792E-01;
  COFD[447] = 1.16092671E-02;
  COFD[448] = -1.68734802E+01;
  COFD[449] = 4.63687143E+00;
  COFD[450] = -3.85900861E-01;
  COFD[451] = 1.66856798E-02;
  COFD[452] = -1.74816690E+01;
  COFD[453] = 4.80792005E+00;
  COFD[454] = -4.06126584E-01;
  COFD[455] = 1.74831083E-02;
  COFD[456] = -1.74816690E+01;
  COFD[457] = 4.80792005E+00;
  COFD[458] = -4.06126584E-01;
  COFD[459] = 1.74831083E-02;
  COFD[460] = -1.74813945E+01;
  COFD[461] = 4.80792005E+00;
  COFD[462] = -4.06126584E-01;
  COFD[463] = 1.74831083E-02;
  COFD[464] = -1.96915102E+01;
  COFD[465] = 5.54637286E+00;
  COFD[466] = -4.87070324E-01;
  COFD[467] = 2.03983467E-02;
  COFD[468] = -1.49610523E+01;
  COFD[469] = 3.41988961E+00;
  COFD[470] = -2.33128386E-01;
  COFD[471] = 1.02689994E-02;
  COFD[472] = -1.40756909E+01;
  COFD[473] = 3.07549274E+00;
  COFD[474] = -1.88889344E-01;
  COFD[475] = 8.37152866E-03;
  COFD[476] = -1.34230419E+01;
  COFD[477] = 3.48624238E+00;
  COFD[478] = -2.41554467E-01;
  COFD[479] = 1.06263545E-02;
  COFD[480] = -1.32093517E+01;
  COFD[481] = 2.90778936E+00;
  COFD[482] = -1.67388544E-01;
  COFD[483] = 7.45220609E-03;
  COFD[484] = -1.32243932E+01;
  COFD[485] = 2.90778936E+00;
  COFD[486] = -1.67388544E-01;
  COFD[487] = 7.45220609E-03;
  COFD[488] = -1.43190281E+01;
  COFD[489] = 3.17651319E+00;
  COFD[490] = -2.02028974E-01;
  COFD[491] = 8.94232502E-03;
  COFD[492] = -1.09595844E+01;
  COFD[493] = 2.30836460E+00;
  COFD[494] = -8.76339315E-02;
  COFD[495] = 3.90878445E-03;
  COFD[496] = -1.94093476E+01;
  COFD[497] = 5.16013126E+00;
  COFD[498] = -4.46824543E-01;
  COFD[499] = 1.90464887E-02;
  COFD[500] = -1.43238892E+01;
  COFD[501] = 3.17651319E+00;
  COFD[502] = -2.02028974E-01;
  COFD[503] = 8.94232502E-03;
  COFD[504] = -1.43139120E+01;
  COFD[505] = 3.17651319E+00;
  COFD[506] = -2.02028974E-01;
  COFD[507] = 8.94232502E-03;
  COFD[508] = -1.50766073E+01;
  COFD[509] = 3.47945612E+00;
  COFD[510] = -2.40703722E-01;
  COFD[511] = 1.05907441E-02;
  COFD[512] = -1.50270285E+01;
  COFD[513] = 3.46140064E+00;
  COFD[514] = -2.38440092E-01;
  COFD[515] = 1.04960087E-02;
  COFD[516] = -1.94313018E+01;
  COFD[517] = 5.02567894E+00;
  COFD[518] = -4.32045169E-01;
  COFD[519] = 1.85132214E-02;
  COFD[520] = -1.94373032E+01;
  COFD[521] = 5.02567894E+00;
  COFD[522] = -4.32045169E-01;
  COFD[523] = 1.85132214E-02;
  COFD[524] = -1.88179325E+01;
  COFD[525] = 4.79683898E+00;
  COFD[526] = -4.04829719E-01;
  COFD[527] = 1.74325475E-02;
  COFD[528] = -1.93364494E+01;
  COFD[529] = 4.98286777E+00;
  COFD[530] = -4.26970814E-01;
  COFD[531] = 1.83122917E-02;
  COFD[532] = -1.40998907E+01;
  COFD[533] = 3.08120012E+00;
  COFD[534] = -1.89629903E-01;
  COFD[535] = 8.40361952E-03;
  COFD[536] = -1.70534750E+01;
  COFD[537] = 4.14240922E+00;
  COFD[538] = -3.25239774E-01;
  COFD[539] = 1.41980687E-02;
  COFD[540] = -1.65488277E+01;
  COFD[541] = 3.95035840E+00;
  COFD[542] = -3.00959418E-01;
  COFD[543] = 1.31692593E-02;
  COFD[544] = -1.65559708E+01;
  COFD[545] = 3.95035840E+00;
  COFD[546] = -3.00959418E-01;
  COFD[547] = 1.31692593E-02;
  COFD[548] = -1.74792034E+01;
  COFD[549] = 4.29676909E+00;
  COFD[550] = -3.44085306E-01;
  COFD[551] = 1.49671135E-02;
  COFD[552] = -1.72496558E+01;
  COFD[553] = 4.17889917E+00;
  COFD[554] = -3.29752510E-01;
  COFD[555] = 1.43850275E-02;
  COFD[556] = -1.72556425E+01;
  COFD[557] = 4.17889917E+00;
  COFD[558] = -3.29752510E-01;
  COFD[559] = 1.43850275E-02;
  COFD[560] = -1.49500258E+01;
  COFD[561] = 3.52327209E+00;
  COFD[562] = -2.46286208E-01;
  COFD[563] = 1.08285963E-02;
  COFD[564] = -1.90883170E+01;
  COFD[565] = 4.84384483E+00;
  COFD[566] = -4.10265575E-01;
  COFD[567] = 1.76414287E-02;
  COFD[568] = -1.90915553E+01;
  COFD[569] = 4.84384483E+00;
  COFD[570] = -4.10265575E-01;
  COFD[571] = 1.76414287E-02;
  COFD[572] = -1.74362915E+01;
  COFD[573] = 4.17761385E+00;
  COFD[574] = -3.29594803E-01;
  COFD[575] = 1.43785522E-02;
  COFD[576] = -1.74232048E+01;
  COFD[577] = 4.17761385E+00;
  COFD[578] = -3.29594803E-01;
  COFD[579] = 1.43785522E-02;
  COFD[580] = -1.76774947E+01;
  COFD[581] = 4.24719726E+00;
  COFD[582] = -3.38206061E-01;
  COFD[583] = 1.47350654E-02;
  COFD[584] = -1.76808635E+01;
  COFD[585] = 4.24719726E+00;
  COFD[586] = -3.38206061E-01;
  COFD[587] = 1.47350654E-02;
  COFD[588] = -1.76840960E+01;
  COFD[589] = 4.24719726E+00;
  COFD[590] = -3.38206061E-01;
  COFD[591] = 1.47350654E-02;
  COFD[592] = -1.87878758E+01;
  COFD[593] = 4.61260432E+00;
  COFD[594] = -3.82854484E-01;
  COFD[595] = 1.65575163E-02;
  COFD[596] = -1.31034501E+01;
  COFD[597] = 2.80913567E+00;
  COFD[598] = -1.54536855E-01;
  COFD[599] = 6.89359313E-03;
  COFD[600] = -1.40879048E+01;
  COFD[601] = 3.07549274E+00;
  COFD[602] = -1.88889344E-01;
  COFD[603] = 8.37152866E-03;
  COFD[604] = -1.62772129E+01;
  COFD[605] = 3.88250968E+00;
  COFD[606] = -2.92155848E-01;
  COFD[607] = 1.27867850E-02;
  COFD[608] = -1.69259507E+01;
  COFD[609] = 4.09077642E+00;
  COFD[610] = -3.18894990E-01;
  COFD[611] = 1.39371445E-02;
  COFD[612] = -1.69259507E+01;
  COFD[613] = 4.09077642E+00;
  COFD[614] = -3.18894990E-01;
  COFD[615] = 1.39371445E-02;
  COFD[616] = -1.69227098E+01;
  COFD[617] = 4.09077642E+00;
  COFD[618] = -3.18894990E-01;
  COFD[619] = 1.39371445E-02;
  COFD[620] = -1.93925565E+01;
  COFD[621] = 4.98286777E+00;
  COFD[622] = -4.26970814E-01;
  COFD[623] = 1.83122917E-02;
  COFD[624] = -1.49826737E+01;
  COFD[625] = 3.41988961E+00;
  COFD[626] = -2.33128386E-01;
  COFD[627] = 1.02689994E-02;
  COFD[628] = -1.40949183E+01;
  COFD[629] = 3.07549274E+00;
  COFD[630] = -1.88889344E-01;
  COFD[631] = 8.37152866E-03;
  COFD[632] = -1.34248014E+01;
  COFD[633] = 3.48624238E+00;
  COFD[634] = -2.41554467E-01;
  COFD[635] = 1.06263545E-02;
  COFD[636] = -1.32243932E+01;
  COFD[637] = 2.90778936E+00;
  COFD[638] = -1.67388544E-01;
  COFD[639] = 7.45220609E-03;
  COFD[640] = -1.32399011E+01;
  COFD[641] = 2.90778936E+00;
  COFD[642] = -1.67388544E-01;
  COFD[643] = 7.45220609E-03;
  COFD[644] = -1.43393972E+01;
  COFD[645] = 3.17651319E+00;
  COFD[646] = -2.02028974E-01;
  COFD[647] = 8.94232502E-03;
  COFD[648] = -1.09629118E+01;
  COFD[649] = 2.30836460E+00;
  COFD[650] = -8.76339315E-02;
  COFD[651] = 3.90878445E-03;
  COFD[652] = -1.94252948E+01;
  COFD[653] = 5.16013126E+00;
  COFD[654] = -4.46824543E-01;
  COFD[655] = 1.90464887E-02;
  COFD[656] = -1.43444614E+01;
  COFD[657] = 3.17651319E+00;
  COFD[658] = -2.02028974E-01;
  COFD[659] = 8.94232502E-03;
  COFD[660] = -1.43340695E+01;
  COFD[661] = 3.17651319E+00;
  COFD[662] = -2.02028974E-01;
  COFD[663] = 8.94232502E-03;
  COFD[664] = -1.50911746E+01;
  COFD[665] = 3.47945612E+00;
  COFD[666] = -2.40703722E-01;
  COFD[667] = 1.05907441E-02;
  COFD[668] = -1.50420909E+01;
  COFD[669] = 3.46140064E+00;
  COFD[670] = -2.38440092E-01;
  COFD[671] = 1.04960087E-02;
  COFD[672] = -1.94507789E+01;
  COFD[673] = 5.02567894E+00;
  COFD[674] = -4.32045169E-01;
  COFD[675] = 1.85132214E-02;
  COFD[676] = -1.94570202E+01;
  COFD[677] = 5.02567894E+00;
  COFD[678] = -4.32045169E-01;
  COFD[679] = 1.85132214E-02;
  COFD[680] = -1.88378792E+01;
  COFD[681] = 4.79683898E+00;
  COFD[682] = -4.04829719E-01;
  COFD[683] = 1.74325475E-02;
  COFD[684] = -1.93566163E+01;
  COFD[685] = 4.98286777E+00;
  COFD[686] = -4.26970814E-01;
  COFD[687] = 1.83122917E-02;
  COFD[688] = -1.41191170E+01;
  COFD[689] = 3.08120012E+00;
  COFD[690] = -1.89629903E-01;
  COFD[691] = 8.40361952E-03;
  COFD[692] = -1.70756953E+01;
  COFD[693] = 4.14240922E+00;
  COFD[694] = -3.25239774E-01;
  COFD[695] = 1.41980687E-02;
  COFD[696] = -1.65675292E+01;
  COFD[697] = 3.95035840E+00;
  COFD[698] = -3.00959418E-01;
  COFD[699] = 1.31692593E-02;
  COFD[700] = -1.65749465E+01;
  COFD[701] = 3.95035840E+00;
  COFD[702] = -3.00959418E-01;
  COFD[703] = 1.31692593E-02;
  COFD[704] = -1.74984410E+01;
  COFD[705] = 4.29676909E+00;
  COFD[706] = -3.44085306E-01;
  COFD[707] = 1.49671135E-02;
  COFD[708] = -1.72691436E+01;
  COFD[709] = 4.17889917E+00;
  COFD[710] = -3.29752510E-01;
  COFD[711] = 1.43850275E-02;
  COFD[712] = -1.72753698E+01;
  COFD[713] = 4.17889917E+00;
  COFD[714] = -3.29752510E-01;
  COFD[715] = 1.43850275E-02;
  COFD[716] = -1.49718147E+01;
  COFD[717] = 3.52327209E+00;
  COFD[718] = -2.46286208E-01;
  COFD[719] = 1.08285963E-02;
  COFD[720] = -1.91102567E+01;
  COFD[721] = 4.84384483E+00;
  COFD[722] = -4.10265575E-01;
  COFD[723] = 1.76414287E-02;
  COFD[724] = -1.91136407E+01;
  COFD[725] = 4.84384483E+00;
  COFD[726] = -4.10265575E-01;
  COFD[727] = 1.76414287E-02;
  COFD[728] = -1.74585179E+01;
  COFD[729] = 4.17761385E+00;
  COFD[730] = -3.29594803E-01;
  COFD[731] = 1.43785522E-02;
  COFD[732] = -1.74448444E+01;
  COFD[733] = 4.17761385E+00;
  COFD[734] = -3.29594803E-01;
  COFD[735] = 1.43785522E-02;
  COFD[736] = -1.76992903E+01;
  COFD[737] = 4.24719726E+00;
  COFD[738] = -3.38206061E-01;
  COFD[739] = 1.47350654E-02;
  COFD[740] = -1.77028097E+01;
  COFD[741] = 4.24719726E+00;
  COFD[742] = -3.38206061E-01;
  COFD[743] = 1.47350654E-02;
  COFD[744] = -1.77061877E+01;
  COFD[745] = 4.24719726E+00;
  COFD[746] = -3.38206061E-01;
  COFD[747] = 1.47350654E-02;
  COFD[748] = -1.88114840E+01;
  COFD[749] = 4.61260432E+00;
  COFD[750] = -3.82854484E-01;
  COFD[751] = 1.65575163E-02;
  COFD[752] = -1.31174788E+01;
  COFD[753] = 2.80913567E+00;
  COFD[754] = -1.54536855E-01;
  COFD[755] = 6.89359313E-03;
  COFD[756] = -1.41076172E+01;
  COFD[757] = 3.07549274E+00;
  COFD[758] = -1.88889344E-01;
  COFD[759] = 8.37152866E-03;
  COFD[760] = -1.62996992E+01;
  COFD[761] = 3.88250968E+00;
  COFD[762] = -2.92155848E-01;
  COFD[763] = 1.27867850E-02;
  COFD[764] = -1.69480333E+01;
  COFD[765] = 4.09077642E+00;
  COFD[766] = -3.18894990E-01;
  COFD[767] = 1.39371445E-02;
  COFD[768] = -1.69480333E+01;
  COFD[769] = 4.09077642E+00;
  COFD[770] = -3.18894990E-01;
  COFD[771] = 1.39371445E-02;
  COFD[772] = -1.69446466E+01;
  COFD[773] = 4.09077642E+00;
  COFD[774] = -3.18894990E-01;
  COFD[775] = 1.39371445E-02;
  COFD[776] = -1.94151732E+01;
  COFD[777] = 4.98286777E+00;
  COFD[778] = -4.26970814E-01;
  COFD[779] = 1.83122917E-02;
  COFD[780] = -1.62465647E+01;
  COFD[781] = 3.72612300E+00;
  COFD[782] = -2.71663673E-01;
  COFD[783] = 1.18889643E-02;
  COFD[784] = -1.52486292E+01;
  COFD[785] = 3.35922578E+00;
  COFD[786] = -2.25181399E-01;
  COFD[787] = 9.92132878E-03;
  COFD[788] = -1.46554904E+01;
  COFD[789] = 3.83606243E+00;
  COFD[790] = -2.86076532E-01;
  COFD[791] = 1.25205829E-02;
  COFD[792] = -1.43190281E+01;
  COFD[793] = 3.17651319E+00;
  COFD[794] = -2.02028974E-01;
  COFD[795] = 8.94232502E-03;
  COFD[796] = -1.43393972E+01;
  COFD[797] = 3.17651319E+00;
  COFD[798] = -2.02028974E-01;
  COFD[799] = 8.94232502E-03;
  COFD[800] = -1.55666313E+01;
  COFD[801] = 3.48070094E+00;
  COFD[802] = -2.40859499E-01;
  COFD[803] = 1.05972514E-02;
  COFD[804] = -1.18998160E+01;
  COFD[805] = 2.57507000E+00;
  COFD[806] = -1.24033737E-01;
  COFD[807] = 5.56694959E-03;
  COFD[808] = -2.06463656E+01;
  COFD[809] = 5.41688482E+00;
  COFD[810] = -4.73387188E-01;
  COFD[811] = 1.99280175E-02;
  COFD[812] = -1.55740954E+01;
  COFD[813] = 3.48070094E+00;
  COFD[814] = -2.40859499E-01;
  COFD[815] = 1.05972514E-02;
  COFD[816] = -1.55588172E+01;
  COFD[817] = 3.48070094E+00;
  COFD[818] = -2.40859499E-01;
  COFD[819] = 1.05972514E-02;
  COFD[820] = -1.63542358E+01;
  COFD[821] = 3.82388595E+00;
  COFD[822] = -2.84480724E-01;
  COFD[823] = 1.24506311E-02;
  COFD[824] = -1.62775683E+01;
  COFD[825] = 3.79163564E+00;
  COFD[826] = -2.80257365E-01;
  COFD[827] = 1.22656902E-02;
  COFD[828] = -2.08277510E+01;
  COFD[829] = 5.35267674E+00;
  COFD[830] = -4.69010505E-01;
  COFD[831] = 1.98979152E-02;
  COFD[832] = -2.08367641E+01;
  COFD[833] = 5.35267674E+00;
  COFD[834] = -4.69010505E-01;
  COFD[835] = 1.98979152E-02;
  COFD[836] = -2.02637913E+01;
  COFD[837] = 5.14984081E+00;
  COFD[838] = -4.46093018E-01;
  COFD[839] = 1.90396647E-02;
  COFD[840] = -2.07672755E+01;
  COFD[841] = 5.32244593E+00;
  COFD[842] = -4.65829403E-01;
  COFD[843] = 1.97895274E-02;
  COFD[844] = -1.52792799E+01;
  COFD[845] = 3.36790500E+00;
  COFD[846] = -2.26321740E-01;
  COFD[847] = 9.97135055E-03;
  COFD[848] = -1.84777509E+01;
  COFD[849] = 4.49330851E+00;
  COFD[850] = -3.68208715E-01;
  COFD[851] = 1.59565402E-02;
  COFD[852] = -1.78903850E+01;
  COFD[853] = 4.29613154E+00;
  COFD[854] = -3.44012526E-01;
  COFD[855] = 1.49643715E-02;
  COFD[856] = -1.79009121E+01;
  COFD[857] = 4.29613154E+00;
  COFD[858] = -3.44012526E-01;
  COFD[859] = 1.49643715E-02;
  COFD[860] = -1.89616566E+01;
  COFD[861] = 4.68595732E+00;
  COFD[862] = -3.91842840E-01;
  COFD[863] = 1.69262542E-02;
  COFD[864] = -1.86409085E+01;
  COFD[865] = 4.53572533E+00;
  COFD[866] = -3.73386925E-01;
  COFD[867] = 1.61678881E-02;
  COFD[868] = -1.86499019E+01;
  COFD[869] = 4.53572533E+00;
  COFD[870] = -3.73386925E-01;
  COFD[871] = 1.61678881E-02;
  COFD[872] = -1.64255877E+01;
  COFD[873] = 3.89309916E+00;
  COFD[874] = -2.93528188E-01;
  COFD[875] = 1.28463177E-02;
  COFD[876] = -2.05272244E+01;
  COFD[877] = 5.18417470E+00;
  COFD[878] = -4.49491573E-01;
  COFD[879] = 1.91438508E-02;
  COFD[880] = -2.05324009E+01;
  COFD[881] = 5.18417470E+00;
  COFD[882] = -4.49491573E-01;
  COFD[883] = 1.91438508E-02;
  COFD[884] = -1.88512637E+01;
  COFD[885] = 4.53427279E+00;
  COFD[886] = -3.73213513E-01;
  COFD[887] = 1.61609973E-02;
  COFD[888] = -1.88303884E+01;
  COFD[889] = 4.53427279E+00;
  COFD[890] = -3.73213513E-01;
  COFD[891] = 1.61609973E-02;
  COFD[892] = -1.91208247E+01;
  COFD[893] = 4.61801405E+00;
  COFD[894] = -3.83535652E-01;
  COFD[895] = 1.65862513E-02;
  COFD[896] = -1.91261897E+01;
  COFD[897] = 4.61801405E+00;
  COFD[898] = -3.83535652E-01;
  COFD[899] = 1.65862513E-02;
  COFD[900] = -1.91313579E+01;
  COFD[901] = 4.61801405E+00;
  COFD[902] = -3.83535652E-01;
  COFD[903] = 1.65862513E-02;
  COFD[904] = -2.02566153E+01;
  COFD[905] = 4.97613338E+00;
  COFD[906] = -4.26175206E-01;
  COFD[907] = 1.82809270E-02;
  COFD[908] = -1.41301009E+01;
  COFD[909] = 3.05837263E+00;
  COFD[910] = -1.86672802E-01;
  COFD[911] = 8.27575734E-03;
  COFD[912] = -1.52669139E+01;
  COFD[913] = 3.35922578E+00;
  COFD[914] = -2.25181399E-01;
  COFD[915] = 9.92132878E-03;
  COFD[916] = -1.77428141E+01;
  COFD[917] = 4.25438185E+00;
  COFD[918] = -3.39084808E-01;
  COFD[919] = 1.47709916E-02;
  COFD[920] = -1.83348590E+01;
  COFD[921] = 4.43878381E+00;
  COFD[922] = -3.61697624E-01;
  COFD[923] = 1.56975581E-02;
  COFD[924] = -1.83348590E+01;
  COFD[925] = 4.43878381E+00;
  COFD[926] = -3.61697624E-01;
  COFD[927] = 1.56975581E-02;
  COFD[928] = -1.83296787E+01;
  COFD[929] = 4.43878381E+00;
  COFD[930] = -3.61697624E-01;
  COFD[931] = 1.56975581E-02;
  COFD[932] = -2.08554822E+01;
  COFD[933] = 5.32244593E+00;
  COFD[934] = -4.65829403E-01;
  COFD[935] = 1.97895274E-02;
  COFD[936] = -1.23130320E+01;
  COFD[937] = 2.74418790E+00;
  COFD[938] = -1.46230156E-01;
  COFD[939] = 6.53948886E-03;
  COFD[940] = -1.16906458E+01;
  COFD[941] = 2.47469981E+00;
  COFD[942] = -1.10436257E-01;
  COFD[943] = 4.95273813E-03;
  COFD[944] = -1.14366544E+01;
  COFD[945] = 2.78323501E+00;
  COFD[946] = -1.51214064E-01;
  COFD[947] = 6.75150012E-03;
  COFD[948] = -1.09595844E+01;
  COFD[949] = 2.30836460E+00;
  COFD[950] = -8.76339315E-02;
  COFD[951] = 3.90878445E-03;
  COFD[952] = -1.09629118E+01;
  COFD[953] = 2.30836460E+00;
  COFD[954] = -8.76339315E-02;
  COFD[955] = 3.90878445E-03;
  COFD[956] = -1.18998160E+01;
  COFD[957] = 2.57507000E+00;
  COFD[958] = -1.24033737E-01;
  COFD[959] = 5.56694959E-03;
  COFD[960] = -1.03270769E+01;
  COFD[961] = 2.19285409E+00;
  COFD[962] = -7.54492786E-02;
  COFD[963] = 3.51398213E-03;
  COFD[964] = -1.71983144E+01;
  COFD[965] = 4.63881440E+00;
  COFD[966] = -3.86139677E-01;
  COFD[967] = 1.66955099E-02;
  COFD[968] = -1.19006697E+01;
  COFD[969] = 2.57507000E+00;
  COFD[970] = -1.24033737E-01;
  COFD[971] = 5.56694959E-03;
  COFD[972] = -1.18989101E+01;
  COFD[973] = 2.57507000E+00;
  COFD[974] = -1.24033737E-01;
  COFD[975] = 5.56694959E-03;
  COFD[976] = -1.25141403E+01;
  COFD[977] = 2.77873601E+00;
  COFD[978] = -1.50637360E-01;
  COFD[979] = 6.72684281E-03;
  COFD[980] = -1.24693714E+01;
  COFD[981] = 2.76686648E+00;
  COFD[982] = -1.49120141E-01;
  COFD[983] = 6.66220432E-03;
  COFD[984] = -1.60517517E+01;
  COFD[985] = 4.11188603E+00;
  COFD[986] = -3.21540884E-01;
  COFD[987] = 1.40482564E-02;
  COFD[988] = -1.60528433E+01;
  COFD[989] = 4.11188603E+00;
  COFD[990] = -3.21540884E-01;
  COFD[991] = 1.40482564E-02;
  COFD[992] = -1.58456453E+01;
  COFD[993] = 4.02074796E+00;
  COFD[994] = -3.10018539E-01;
  COFD[995] = 1.35599559E-02;
  COFD[996] = -1.59537397E+01;
  COFD[997] = 4.07051484E+00;
  COFD[998] = -3.16303109E-01;
  COFD[999] = 1.38259377E-02;
  COFD[1000] = -1.17159884E+01;
  COFD[1001] = 2.48123210E+00;
  COFD[1002] = -1.11322604E-01;
  COFD[1003] = 4.99282389E-03;
  COFD[1004] = -1.37794466E+01;
  COFD[1005] = 3.23973858E+00;
  COFD[1006] = -2.09989036E-01;
  COFD[1007] = 9.27667906E-03;
  COFD[1008] = -1.34709956E+01;
  COFD[1009] = 3.09379603E+00;
  COFD[1010] = -1.91268635E-01;
  COFD[1011] = 8.47480224E-03;
  COFD[1012] = -1.34723365E+01;
  COFD[1013] = 3.09379603E+00;
  COFD[1014] = -1.91268635E-01;
  COFD[1015] = 8.47480224E-03;
  COFD[1016] = -1.42229344E+01;
  COFD[1017] = 3.38669384E+00;
  COFD[1018] = -2.28784122E-01;
  COFD[1019] = 1.00790953E-02;
  COFD[1020] = -1.39914049E+01;
  COFD[1021] = 3.26384506E+00;
  COFD[1022] = -2.12947087E-01;
  COFD[1023] = 9.39743888E-03;
  COFD[1024] = -1.39924933E+01;
  COFD[1025] = 3.26384506E+00;
  COFD[1026] = -2.12947087E-01;
  COFD[1027] = 9.39743888E-03;
  COFD[1028] = -1.22004476E+01;
  COFD[1029] = 2.80725489E+00;
  COFD[1030] = -1.54291406E-01;
  COFD[1031] = 6.88290911E-03;
  COFD[1032] = -1.57035004E+01;
  COFD[1033] = 3.93614244E+00;
  COFD[1034] = -2.99111497E-01;
  COFD[1035] = 1.30888229E-02;
  COFD[1036] = -1.57040365E+01;
  COFD[1037] = 3.93614244E+00;
  COFD[1038] = -2.99111497E-01;
  COFD[1039] = 1.30888229E-02;
  COFD[1040] = -1.41229493E+01;
  COFD[1041] = 3.26291213E+00;
  COFD[1042] = -2.12831025E-01;
  COFD[1043] = 9.39262629E-03;
  COFD[1044] = -1.41207761E+01;
  COFD[1045] = 3.26291213E+00;
  COFD[1046] = -2.12831025E-01;
  COFD[1047] = 9.39262629E-03;
  COFD[1048] = -1.43129867E+01;
  COFD[1049] = 3.31177824E+00;
  COFD[1050] = -2.18945280E-01;
  COFD[1051] = 9.64764419E-03;
  COFD[1052] = -1.43135474E+01;
  COFD[1053] = 3.31177824E+00;
  COFD[1054] = -2.18945280E-01;
  COFD[1055] = 9.64764419E-03;
  COFD[1056] = -1.43140824E+01;
  COFD[1057] = 3.31177824E+00;
  COFD[1058] = -2.18945280E-01;
  COFD[1059] = 9.64764419E-03;
  COFD[1060] = -1.52614345E+01;
  COFD[1061] = 3.64565939E+00;
  COFD[1062] = -2.61726871E-01;
  COFD[1063] = 1.14799244E-02;
  COFD[1064] = -1.08473079E+01;
  COFD[1065] = 2.19094415E+00;
  COFD[1066] = -7.11992510E-02;
  COFD[1067] = 3.14105973E-03;
  COFD[1068] = -1.16928791E+01;
  COFD[1069] = 2.47469981E+00;
  COFD[1070] = -1.10436257E-01;
  COFD[1071] = 4.95273813E-03;
  COFD[1072] = -1.31911433E+01;
  COFD[1073] = 3.04970299E+00;
  COFD[1074] = -1.85555523E-01;
  COFD[1075] = 8.22773480E-03;
  COFD[1076] = -1.36889460E+01;
  COFD[1077] = 3.19999740E+00;
  COFD[1078] = -2.04999020E-01;
  COFD[1079] = 9.06766105E-03;
  COFD[1080] = -1.36889460E+01;
  COFD[1081] = 3.19999740E+00;
  COFD[1082] = -2.04999020E-01;
  COFD[1083] = 9.06766105E-03;
  COFD[1084] = -1.36884094E+01;
  COFD[1085] = 3.19999740E+00;
  COFD[1086] = -2.04999020E-01;
  COFD[1087] = 9.06766105E-03;
  COFD[1088] = -1.59632633E+01;
  COFD[1089] = 4.07051484E+00;
  COFD[1090] = -3.16303109E-01;
  COFD[1091] = 1.38259377E-02;
  COFD[1092] = -2.12755915E+01;
  COFD[1093] = 5.60381989E+00;
  COFD[1094] = -4.91225459E-01;
  COFD[1095] = 2.04487844E-02;
  COFD[1096] = -2.10643264E+01;
  COFD[1097] = 5.53614864E+00;
  COFD[1098] = -4.86046753E-01;
  COFD[1099] = 2.03659193E-02;
  COFD[1100] = -1.95739720E+01;
  COFD[1101] = 5.61113230E+00;
  COFD[1102] = -4.90190187E-01;
  COFD[1103] = 2.03260675E-02;
  COFD[1104] = -1.94093476E+01;
  COFD[1105] = 5.16013126E+00;
  COFD[1106] = -4.46824543E-01;
  COFD[1107] = 1.90464887E-02;
  COFD[1108] = -1.94252948E+01;
  COFD[1109] = 5.16013126E+00;
  COFD[1110] = -4.46824543E-01;
  COFD[1111] = 1.90464887E-02;
  COFD[1112] = -2.06463656E+01;
  COFD[1113] = 5.41688482E+00;
  COFD[1114] = -4.73387188E-01;
  COFD[1115] = 1.99280175E-02;
  COFD[1116] = -1.71983144E+01;
  COFD[1117] = 4.63881440E+00;
  COFD[1118] = -3.86139677E-01;
  COFD[1119] = 1.66955099E-02;
  COFD[1120] = -1.19157788E+01;
  COFD[1121] = 9.28952533E-01;
  COFD[1122] = 2.42107483E-01;
  COFD[1123] = -1.59824150E-02;
  COFD[1124] = -2.06516251E+01;
  COFD[1125] = 5.41688482E+00;
  COFD[1126] = -4.73387188E-01;
  COFD[1127] = 1.99280175E-02;
  COFD[1128] = -2.12652444E+01;
  COFD[1129] = 5.59961822E+00;
  COFD[1130] = -4.91624856E-01;
  COFD[1131] = 2.05035546E-02;
  COFD[1132] = -2.12831283E+01;
  COFD[1133] = 5.61184117E+00;
  COFD[1134] = -4.90532156E-01;
  COFD[1135] = 2.03507922E-02;
  COFD[1136] = -2.14087360E+01;
  COFD[1137] = 5.57281993E+00;
  COFD[1138] = -4.76690860E-01;
  COFD[1139] = 1.94000702E-02;
  COFD[1140] = -1.77498465E+01;
  COFD[1141] = 3.57475686E+00;
  COFD[1142] = -1.56396297E-01;
  COFD[1143] = 3.12157721E-03;
  COFD[1144] = -1.77563175E+01;
  COFD[1145] = 3.57475686E+00;
  COFD[1146] = -1.56396297E-01;
  COFD[1147] = 3.12157721E-03;
  COFD[1148] = -1.65295191E+01;
  COFD[1149] = 2.97569077E+00;
  COFD[1150] = -6.75650795E-02;
  COFD[1151] = -1.08649440E-03;
  COFD[1152] = -1.80253593E+01;
  COFD[1153] = 3.69199168E+00;
  COFD[1154] = -1.74005516E-01;
  COFD[1155] = 3.97694372E-03;
  COFD[1156] = -2.11388255E+01;
  COFD[1157] = 5.55529689E+00;
  COFD[1158] = -4.87942530E-01;
  COFD[1159] = 2.04249057E-02;
  COFD[1160] = -2.07653629E+01;
  COFD[1161] = 5.01091988E+00;
  COFD[1162] = -3.77985581E-01;
  COFD[1163] = 1.40968617E-02;
  COFD[1164] = -2.15095920E+01;
  COFD[1165] = 5.46737673E+00;
  COFD[1166] = -4.55696085E-01;
  COFD[1167] = 1.81982625E-02;
  COFD[1168] = -2.15172712E+01;
  COFD[1169] = 5.46737673E+00;
  COFD[1170] = -4.55696085E-01;
  COFD[1171] = 1.81982625E-02;
  COFD[1172] = -2.08812277E+01;
  COFD[1173] = 5.08859217E+00;
  COFD[1174] = -3.90525428E-01;
  COFD[1175] = 1.47376395E-02;
  COFD[1176] = -2.12597258E+01;
  COFD[1177] = 5.24930667E+00;
  COFD[1178] = -4.17435088E-01;
  COFD[1179] = 1.61434424E-02;
  COFD[1180] = -2.12661812E+01;
  COFD[1181] = 5.24930667E+00;
  COFD[1182] = -4.17435088E-01;
  COFD[1183] = 1.61434424E-02;
  COFD[1184] = -2.10440599E+01;
  COFD[1185] = 5.59806282E+00;
  COFD[1186] = -4.87109535E-01;
  COFD[1187] = 2.01370226E-02;
  COFD[1188] = -1.87383877E+01;
  COFD[1189] = 3.96926341E+00;
  COFD[1190] = -2.16412264E-01;
  COFD[1191] = 6.06012078E-03;
  COFD[1192] = -1.87419126E+01;
  COFD[1193] = 3.96926341E+00;
  COFD[1194] = -2.16412264E-01;
  COFD[1195] = 6.06012078E-03;
  COFD[1196] = -2.14597040E+01;
  COFD[1197] = 5.25056135E+00;
  COFD[1198] = -4.17658192E-01;
  COFD[1199] = 1.61554773E-02;
  COFD[1200] = -2.14454635E+01;
  COFD[1201] = 5.25056135E+00;
  COFD[1202] = -4.17658192E-01;
  COFD[1203] = 1.61554773E-02;
  COFD[1204] = -2.13847376E+01;
  COFD[1205] = 5.17440955E+00;
  COFD[1206] = -4.04678430E-01;
  COFD[1207] = 1.54706350E-02;
  COFD[1208] = -2.13884026E+01;
  COFD[1209] = 5.17440955E+00;
  COFD[1210] = -4.04678430E-01;
  COFD[1211] = 1.54706350E-02;
  COFD[1212] = -2.13919213E+01;
  COFD[1213] = 5.17440955E+00;
  COFD[1214] = -4.04678430E-01;
  COFD[1215] = 1.54706350E-02;
  COFD[1216] = -2.03437771E+01;
  COFD[1217] = 4.57152878E+00;
  COFD[1218] = -3.08371263E-01;
  COFD[1219] = 1.05838559E-02;
  COFD[1220] = -1.92450630E+01;
  COFD[1221] = 5.05708283E+00;
  COFD[1222] = -4.35739290E-01;
  COFD[1223] = 1.86583205E-02;
  COFD[1224] = -2.10774895E+01;
  COFD[1225] = 5.53614864E+00;
  COFD[1226] = -4.86046753E-01;
  COFD[1227] = 2.03659193E-02;
  COFD[1228] = -2.14542455E+01;
  COFD[1229] = 5.49993732E+00;
  COFD[1230] = -4.62042917E-01;
  COFD[1231] = 1.85577413E-02;
  COFD[1232] = -2.13622755E+01;
  COFD[1233] = 5.35901292E+00;
  COFD[1234] = -4.36172487E-01;
  COFD[1235] = 1.71345319E-02;
  COFD[1236] = -2.13622755E+01;
  COFD[1237] = 5.35901292E+00;
  COFD[1238] = -4.36172487E-01;
  COFD[1239] = 1.71345319E-02;
  COFD[1240] = -2.13587478E+01;
  COFD[1241] = 5.35901292E+00;
  COFD[1242] = -4.36172487E-01;
  COFD[1243] = 1.71345319E-02;
  COFD[1244] = -1.80862788E+01;
  COFD[1245] = 3.69199168E+00;
  COFD[1246] = -1.74005516E-01;
  COFD[1247] = 3.97694372E-03;
  COFD[1248] = -1.62547451E+01;
  COFD[1249] = 3.72612300E+00;
  COFD[1250] = -2.71663673E-01;
  COFD[1251] = 1.18889643E-02;
  COFD[1252] = -1.52554785E+01;
  COFD[1253] = 3.35922578E+00;
  COFD[1254] = -2.25181399E-01;
  COFD[1255] = 9.92132878E-03;
  COFD[1256] = -1.46559297E+01;
  COFD[1257] = 3.83606243E+00;
  COFD[1258] = -2.86076532E-01;
  COFD[1259] = 1.25205829E-02;
  COFD[1260] = -1.43238892E+01;
  COFD[1261] = 3.17651319E+00;
  COFD[1262] = -2.02028974E-01;
  COFD[1263] = 8.94232502E-03;
  COFD[1264] = -1.43444614E+01;
  COFD[1265] = 3.17651319E+00;
  COFD[1266] = -2.02028974E-01;
  COFD[1267] = 8.94232502E-03;
  COFD[1268] = -1.55740954E+01;
  COFD[1269] = 3.48070094E+00;
  COFD[1270] = -2.40859499E-01;
  COFD[1271] = 1.05972514E-02;
  COFD[1272] = -1.19006697E+01;
  COFD[1273] = 2.57507000E+00;
  COFD[1274] = -1.24033737E-01;
  COFD[1275] = 5.56694959E-03;
  COFD[1276] = -2.06516251E+01;
  COFD[1277] = 5.41688482E+00;
  COFD[1278] = -4.73387188E-01;
  COFD[1279] = 1.99280175E-02;
  COFD[1280] = -1.55816727E+01;
  COFD[1281] = 3.48070094E+00;
  COFD[1282] = -2.40859499E-01;
  COFD[1283] = 1.05972514E-02;
  COFD[1284] = -1.55661647E+01;
  COFD[1285] = 3.48070094E+00;
  COFD[1286] = -2.40859499E-01;
  COFD[1287] = 1.05972514E-02;
  COFD[1288] = -1.63588948E+01;
  COFD[1289] = 3.82388595E+00;
  COFD[1290] = -2.84480724E-01;
  COFD[1291] = 1.24506311E-02;
  COFD[1292] = -1.62824385E+01;
  COFD[1293] = 3.79163564E+00;
  COFD[1294] = -2.80257365E-01;
  COFD[1295] = 1.22656902E-02;
  COFD[1296] = -2.08347318E+01;
  COFD[1297] = 5.35267674E+00;
  COFD[1298] = -4.69010505E-01;
  COFD[1299] = 1.98979152E-02;
  COFD[1300] = -2.08438728E+01;
  COFD[1301] = 5.35267674E+00;
  COFD[1302] = -4.69010505E-01;
  COFD[1303] = 1.98979152E-02;
  COFD[1304] = -2.02710239E+01;
  COFD[1305] = 5.14984081E+00;
  COFD[1306] = -4.46093018E-01;
  COFD[1307] = 1.90396647E-02;
  COFD[1308] = -2.07746282E+01;
  COFD[1309] = 5.32244593E+00;
  COFD[1310] = -4.65829403E-01;
  COFD[1311] = 1.97895274E-02;
  COFD[1312] = -1.52861287E+01;
  COFD[1313] = 3.36790500E+00;
  COFD[1314] = -2.26321740E-01;
  COFD[1315] = 9.97135055E-03;
  COFD[1316] = -1.84862906E+01;
  COFD[1317] = 4.49330851E+00;
  COFD[1318] = -3.68208715E-01;
  COFD[1319] = 1.59565402E-02;
  COFD[1320] = -1.78969625E+01;
  COFD[1321] = 4.29613154E+00;
  COFD[1322] = -3.44012526E-01;
  COFD[1323] = 1.49643715E-02;
  COFD[1324] = -1.79076305E+01;
  COFD[1325] = 4.29613154E+00;
  COFD[1326] = -3.44012526E-01;
  COFD[1327] = 1.49643715E-02;
  COFD[1328] = -1.89685112E+01;
  COFD[1329] = 4.68595732E+00;
  COFD[1330] = -3.91842840E-01;
  COFD[1331] = 1.69262542E-02;
  COFD[1332] = -1.86478950E+01;
  COFD[1333] = 4.53572533E+00;
  COFD[1334] = -3.73386925E-01;
  COFD[1335] = 1.61678881E-02;
  COFD[1336] = -1.86570161E+01;
  COFD[1337] = 4.53572533E+00;
  COFD[1338] = -3.73386925E-01;
  COFD[1339] = 1.61678881E-02;
  COFD[1340] = -1.64338675E+01;
  COFD[1341] = 3.89309916E+00;
  COFD[1342] = -2.93528188E-01;
  COFD[1343] = 1.28463177E-02;
  COFD[1344] = -2.05355943E+01;
  COFD[1345] = 5.18417470E+00;
  COFD[1346] = -4.49491573E-01;
  COFD[1347] = 1.91438508E-02;
  COFD[1348] = -2.05408587E+01;
  COFD[1349] = 5.18417470E+00;
  COFD[1350] = -4.49491573E-01;
  COFD[1351] = 1.91438508E-02;
  COFD[1352] = -1.88598070E+01;
  COFD[1353] = 4.53427279E+00;
  COFD[1354] = -3.73213513E-01;
  COFD[1355] = 1.61609973E-02;
  COFD[1356] = -1.88385796E+01;
  COFD[1357] = 4.53427279E+00;
  COFD[1358] = -3.73213513E-01;
  COFD[1359] = 1.61609973E-02;
  COFD[1360] = -1.91291085E+01;
  COFD[1361] = 4.61801405E+00;
  COFD[1362] = -3.83535652E-01;
  COFD[1363] = 1.65862513E-02;
  COFD[1364] = -1.91345636E+01;
  COFD[1365] = 4.61801405E+00;
  COFD[1366] = -3.83535652E-01;
  COFD[1367] = 1.65862513E-02;
  COFD[1368] = -1.91398195E+01;
  COFD[1369] = 4.61801405E+00;
  COFD[1370] = -3.83535652E-01;
  COFD[1371] = 1.65862513E-02;
  COFD[1372] = -2.02660328E+01;
  COFD[1373] = 4.97613338E+00;
  COFD[1374] = -4.26175206E-01;
  COFD[1375] = 1.82809270E-02;
  COFD[1376] = -1.41345352E+01;
  COFD[1377] = 3.05837263E+00;
  COFD[1378] = -1.86672802E-01;
  COFD[1379] = 8.27575734E-03;
  COFD[1380] = -1.52740201E+01;
  COFD[1381] = 3.35922578E+00;
  COFD[1382] = -2.25181399E-01;
  COFD[1383] = 9.92132878E-03;
  COFD[1384] = -1.77515170E+01;
  COFD[1385] = 4.25438185E+00;
  COFD[1386] = -3.39084808E-01;
  COFD[1387] = 1.47709916E-02;
  COFD[1388] = -1.83433151E+01;
  COFD[1389] = 4.43878381E+00;
  COFD[1390] = -3.61697624E-01;
  COFD[1391] = 1.56975581E-02;
  COFD[1392] = -1.83433151E+01;
  COFD[1393] = 4.43878381E+00;
  COFD[1394] = -3.61697624E-01;
  COFD[1395] = 1.56975581E-02;
  COFD[1396] = -1.83380469E+01;
  COFD[1397] = 4.43878381E+00;
  COFD[1398] = -3.61697624E-01;
  COFD[1399] = 1.56975581E-02;
  COFD[1400] = -2.08642660E+01;
  COFD[1401] = 5.32244593E+00;
  COFD[1402] = -4.65829403E-01;
  COFD[1403] = 1.97895274E-02;
  COFD[1404] = -1.62380132E+01;
  COFD[1405] = 3.72612300E+00;
  COFD[1406] = -2.71663673E-01;
  COFD[1407] = 1.18889643E-02;
  COFD[1408] = -1.52414498E+01;
  COFD[1409] = 3.35922578E+00;
  COFD[1410] = -2.25181399E-01;
  COFD[1411] = 9.92132878E-03;
  COFD[1412] = -1.46550238E+01;
  COFD[1413] = 3.83606243E+00;
  COFD[1414] = -2.86076532E-01;
  COFD[1415] = 1.25205829E-02;
  COFD[1416] = -1.43139120E+01;
  COFD[1417] = 3.17651319E+00;
  COFD[1418] = -2.02028974E-01;
  COFD[1419] = 8.94232502E-03;
  COFD[1420] = -1.43340695E+01;
  COFD[1421] = 3.17651319E+00;
  COFD[1422] = -2.02028974E-01;
  COFD[1423] = 8.94232502E-03;
  COFD[1424] = -1.55588172E+01;
  COFD[1425] = 3.48070094E+00;
  COFD[1426] = -2.40859499E-01;
  COFD[1427] = 1.05972514E-02;
  COFD[1428] = -1.18989101E+01;
  COFD[1429] = 2.57507000E+00;
  COFD[1430] = -1.24033737E-01;
  COFD[1431] = 5.56694959E-03;
  COFD[1432] = -2.12652444E+01;
  COFD[1433] = 5.59961822E+00;
  COFD[1434] = -4.91624856E-01;
  COFD[1435] = 2.05035546E-02;
  COFD[1436] = -1.55661647E+01;
  COFD[1437] = 3.48070094E+00;
  COFD[1438] = -2.40859499E-01;
  COFD[1439] = 1.05972514E-02;
  COFD[1440] = -1.55511233E+01;
  COFD[1441] = 3.48070094E+00;
  COFD[1442] = -2.40859499E-01;
  COFD[1443] = 1.05972514E-02;
  COFD[1444] = -1.63493305E+01;
  COFD[1445] = 3.82388595E+00;
  COFD[1446] = -2.84480724E-01;
  COFD[1447] = 1.24506311E-02;
  COFD[1448] = -1.62724429E+01;
  COFD[1449] = 3.79163564E+00;
  COFD[1450] = -2.80257365E-01;
  COFD[1451] = 1.22656902E-02;
  COFD[1452] = -2.08204356E+01;
  COFD[1453] = 5.35267674E+00;
  COFD[1454] = -4.69010505E-01;
  COFD[1455] = 1.98979152E-02;
  COFD[1456] = -2.08293167E+01;
  COFD[1457] = 5.35267674E+00;
  COFD[1458] = -4.69010505E-01;
  COFD[1459] = 1.98979152E-02;
  COFD[1460] = -2.04928875E+01;
  COFD[1461] = 5.22397941E+00;
  COFD[1462] = -4.54138181E-01;
  COFD[1463] = 1.93249289E-02;
  COFD[1464] = -2.07595763E+01;
  COFD[1465] = 5.32244593E+00;
  COFD[1466] = -4.65829403E-01;
  COFD[1467] = 1.97895274E-02;
  COFD[1468] = -1.52721010E+01;
  COFD[1469] = 3.36790500E+00;
  COFD[1470] = -2.26321740E-01;
  COFD[1471] = 9.97135055E-03;
  COFD[1472] = -1.84688303E+01;
  COFD[1473] = 4.49330851E+00;
  COFD[1474] = -3.68208715E-01;
  COFD[1475] = 1.59565402E-02;
  COFD[1476] = -1.78834868E+01;
  COFD[1477] = 4.29613154E+00;
  COFD[1478] = -3.44012526E-01;
  COFD[1479] = 1.49643715E-02;
  COFD[1480] = -1.78938681E+01;
  COFD[1481] = 4.29613154E+00;
  COFD[1482] = -3.44012526E-01;
  COFD[1483] = 1.49643715E-02;
  COFD[1484] = -1.89544717E+01;
  COFD[1485] = 4.68595732E+00;
  COFD[1486] = -3.91842840E-01;
  COFD[1487] = 1.69262542E-02;
  COFD[1488] = -1.86335873E+01;
  COFD[1489] = 4.53572533E+00;
  COFD[1490] = -3.73386925E-01;
  COFD[1491] = 1.61678881E-02;
  COFD[1492] = -1.86424488E+01;
  COFD[1493] = 4.53572533E+00;
  COFD[1494] = -3.73386925E-01;
  COFD[1495] = 1.61678881E-02;
  COFD[1496] = -1.64169341E+01;
  COFD[1497] = 3.89309916E+00;
  COFD[1498] = -2.93528188E-01;
  COFD[1499] = 1.28463177E-02;
  COFD[1500] = -2.05184780E+01;
  COFD[1501] = 5.18417470E+00;
  COFD[1502] = -4.49491573E-01;
  COFD[1503] = 1.91438508E-02;
  COFD[1504] = -2.05235643E+01;
  COFD[1505] = 5.18417470E+00;
  COFD[1506] = -4.49491573E-01;
  COFD[1507] = 1.91438508E-02;
  COFD[1508] = -1.88423393E+01;
  COFD[1509] = 4.53427279E+00;
  COFD[1510] = -3.73213513E-01;
  COFD[1511] = 1.61609973E-02;
  COFD[1512] = -1.88218258E+01;
  COFD[1513] = 4.53427279E+00;
  COFD[1514] = -3.73213513E-01;
  COFD[1515] = 1.61609973E-02;
  COFD[1516] = -1.91121670E+01;
  COFD[1517] = 4.61801405E+00;
  COFD[1518] = -3.83535652E-01;
  COFD[1519] = 1.65862513E-02;
  COFD[1520] = -1.91174394E+01;
  COFD[1521] = 4.61801405E+00;
  COFD[1522] = -3.83535652E-01;
  COFD[1523] = 1.65862513E-02;
  COFD[1524] = -1.91225175E+01;
  COFD[1525] = 4.61801405E+00;
  COFD[1526] = -3.83535652E-01;
  COFD[1527] = 1.65862513E-02;
  COFD[1528] = -2.02467952E+01;
  COFD[1529] = 4.97613338E+00;
  COFD[1530] = -4.26175206E-01;
  COFD[1531] = 1.82809270E-02;
  COFD[1532] = -1.41254300E+01;
  COFD[1533] = 3.05837263E+00;
  COFD[1534] = -1.86672802E-01;
  COFD[1535] = 8.27575734E-03;
  COFD[1536] = -1.52594691E+01;
  COFD[1537] = 3.35922578E+00;
  COFD[1538] = -2.25181399E-01;
  COFD[1539] = 9.92132878E-03;
  COFD[1540] = -1.77337260E+01;
  COFD[1541] = 4.25438185E+00;
  COFD[1542] = -3.39084808E-01;
  COFD[1543] = 1.47709916E-02;
  COFD[1544] = -1.83260242E+01;
  COFD[1545] = 4.43878381E+00;
  COFD[1546] = -3.61697624E-01;
  COFD[1547] = 1.56975581E-02;
  COFD[1548] = -1.83260242E+01;
  COFD[1549] = 4.43878381E+00;
  COFD[1550] = -3.61697624E-01;
  COFD[1551] = 1.56975581E-02;
  COFD[1552] = -1.83209342E+01;
  COFD[1553] = 4.43878381E+00;
  COFD[1554] = -3.61697624E-01;
  COFD[1555] = 1.56975581E-02;
  COFD[1556] = -2.08463112E+01;
  COFD[1557] = 5.32244593E+00;
  COFD[1558] = -4.65829403E-01;
  COFD[1559] = 1.97895274E-02;
  COFD[1560] = -1.72197029E+01;
  COFD[1561] = 4.14993355E+00;
  COFD[1562] = -3.26168062E-01;
  COFD[1563] = 1.42364115E-02;
  COFD[1564] = -1.59633426E+01;
  COFD[1565] = 3.66853818E+00;
  COFD[1566] = -2.64346221E-01;
  COFD[1567] = 1.15784613E-02;
  COFD[1568] = -1.57995045E+01;
  COFD[1569] = 4.22225052E+00;
  COFD[1570] = -3.35156428E-01;
  COFD[1571] = 1.46104855E-02;
  COFD[1572] = -1.50766073E+01;
  COFD[1573] = 3.47945612E+00;
  COFD[1574] = -2.40703722E-01;
  COFD[1575] = 1.05907441E-02;
  COFD[1576] = -1.50911746E+01;
  COFD[1577] = 3.47945612E+00;
  COFD[1578] = -2.40703722E-01;
  COFD[1579] = 1.05907441E-02;
  COFD[1580] = -1.63542358E+01;
  COFD[1581] = 3.82388595E+00;
  COFD[1582] = -2.84480724E-01;
  COFD[1583] = 1.24506311E-02;
  COFD[1584] = -1.25141403E+01;
  COFD[1585] = 2.77873601E+00;
  COFD[1586] = -1.50637360E-01;
  COFD[1587] = 6.72684281E-03;
  COFD[1588] = -2.12831283E+01;
  COFD[1589] = 5.61184117E+00;
  COFD[1590] = -4.90532156E-01;
  COFD[1591] = 2.03507922E-02;
  COFD[1592] = -1.63588948E+01;
  COFD[1593] = 3.82388595E+00;
  COFD[1594] = -2.84480724E-01;
  COFD[1595] = 1.24506311E-02;
  COFD[1596] = -1.63493305E+01;
  COFD[1597] = 3.82388595E+00;
  COFD[1598] = -2.84480724E-01;
  COFD[1599] = 1.24506311E-02;
  COFD[1600] = -1.73374523E+01;
  COFD[1601] = 4.21416723E+00;
  COFD[1602] = -3.34163932E-01;
  COFD[1603] = 1.45697432E-02;
  COFD[1604] = -1.72738845E+01;
  COFD[1605] = 4.19029808E+00;
  COFD[1606] = -3.31177076E-01;
  COFD[1607] = 1.44446234E-02;
  COFD[1608] = -2.14391914E+01;
  COFD[1609] = 5.56531152E+00;
  COFD[1610] = -4.88789821E-01;
  COFD[1611] = 2.04437116E-02;
  COFD[1612] = -2.14449532E+01;
  COFD[1613] = 5.56531152E+00;
  COFD[1614] = -4.88789821E-01;
  COFD[1615] = 2.04437116E-02;
  COFD[1616] = -2.09612533E+01;
  COFD[1617] = 5.40870099E+00;
  COFD[1618] = -4.73017610E-01;
  COFD[1619] = 1.99399066E-02;
  COFD[1620] = -2.13777287E+01;
  COFD[1621] = 5.54007827E+00;
  COFD[1622] = -4.86434511E-01;
  COFD[1623] = 2.03779006E-02;
  COFD[1624] = -1.59862997E+01;
  COFD[1625] = 3.67388294E+00;
  COFD[1626] = -2.64990709E-01;
  COFD[1627] = 1.16042706E-02;
  COFD[1628] = -1.93276406E+01;
  COFD[1629] = 4.85015581E+00;
  COFD[1630] = -4.10945109E-01;
  COFD[1631] = 1.76651398E-02;
  COFD[1632] = -1.88463801E+01;
  COFD[1633] = 4.68393046E+00;
  COFD[1634] = -3.91610863E-01;
  COFD[1635] = 1.69174645E-02;
  COFD[1636] = -1.88532484E+01;
  COFD[1637] = 4.68393046E+00;
  COFD[1638] = -3.91610863E-01;
  COFD[1639] = 1.69174645E-02;
  COFD[1640] = -1.98646724E+01;
  COFD[1641] = 5.04367502E+00;
  COFD[1642] = -4.34153325E-01;
  COFD[1643] = 1.85956055E-02;
  COFD[1644] = -1.95494660E+01;
  COFD[1645] = 4.90255048E+00;
  COFD[1646] = -4.17368501E-01;
  COFD[1647] = 1.79287358E-02;
  COFD[1648] = -1.95552136E+01;
  COFD[1649] = 4.90255048E+00;
  COFD[1650] = -4.17368501E-01;
  COFD[1651] = 1.79287358E-02;
  COFD[1652] = -1.72828280E+01;
  COFD[1653] = 4.26063341E+00;
  COFD[1654] = -3.39848064E-01;
  COFD[1655] = 1.48021313E-02;
  COFD[1656] = -2.11606942E+01;
  COFD[1657] = 5.42846112E+00;
  COFD[1658] = -4.74321870E-01;
  COFD[1659] = 1.99459749E-02;
  COFD[1660] = -2.11637883E+01;
  COFD[1661] = 5.42846112E+00;
  COFD[1662] = -4.74321870E-01;
  COFD[1663] = 1.99459749E-02;
  COFD[1664] = -1.97157118E+01;
  COFD[1665] = 4.90059208E+00;
  COFD[1666] = -4.17126126E-01;
  COFD[1667] = 1.79186848E-02;
  COFD[1668] = -1.97032058E+01;
  COFD[1669] = 4.90059208E+00;
  COFD[1670] = -4.17126126E-01;
  COFD[1671] = 1.79186848E-02;
  COFD[1672] = -1.99803480E+01;
  COFD[1673] = 4.97875278E+00;
  COFD[1674] = -4.26485475E-01;
  COFD[1675] = 1.82931933E-02;
  COFD[1676] = -1.99835677E+01;
  COFD[1677] = 4.97875278E+00;
  COFD[1678] = -4.26485475E-01;
  COFD[1679] = 1.82931933E-02;
  COFD[1680] = -1.99866562E+01;
  COFD[1681] = 4.97875278E+00;
  COFD[1682] = -4.26485475E-01;
  COFD[1683] = 1.82931933E-02;
  COFD[1684] = -2.10572526E+01;
  COFD[1685] = 5.31360223E+00;
  COFD[1686] = -4.64787000E-01;
  COFD[1687] = 1.97483720E-02;
  COFD[1688] = -1.48128541E+01;
  COFD[1689] = 3.33113524E+00;
  COFD[1690] = -2.21479057E-01;
  COFD[1691] = 9.75837737E-03;
  COFD[1692] = -1.59750720E+01;
  COFD[1693] = 3.66853818E+00;
  COFD[1694] = -2.64346221E-01;
  COFD[1695] = 1.15784613E-02;
  COFD[1696] = -1.86130101E+01;
  COFD[1697] = 4.62613551E+00;
  COFD[1698] = -3.84556396E-01;
  COFD[1699] = 1.66292467E-02;
  COFD[1700] = -1.91935972E+01;
  COFD[1701] = 4.80030220E+00;
  COFD[1702] = -4.05235041E-01;
  COFD[1703] = 1.74483531E-02;
  COFD[1704] = -1.91935972E+01;
  COFD[1705] = 4.80030220E+00;
  COFD[1706] = -4.05235041E-01;
  COFD[1707] = 1.74483531E-02;
  COFD[1708] = -1.91905006E+01;
  COFD[1709] = 4.80030220E+00;
  COFD[1710] = -4.05235041E-01;
  COFD[1711] = 1.74483531E-02;
  COFD[1712] = -2.14314067E+01;
  COFD[1713] = 5.54007827E+00;
  COFD[1714] = -4.86434511E-01;
  COFD[1715] = 2.03779006E-02;
  COFD[1716] = -1.71754233E+01;
  COFD[1717] = 4.13131681E+00;
  COFD[1718] = -3.23897559E-01;
  COFD[1719] = 1.41438222E-02;
  COFD[1720] = -1.59327344E+01;
  COFD[1721] = 3.65620899E+00;
  COFD[1722] = -2.62933804E-01;
  COFD[1723] = 1.15253223E-02;
  COFD[1724] = -1.57199190E+01;
  COFD[1725] = 4.19936335E+00;
  COFD[1726] = -3.32311009E-01;
  COFD[1727] = 1.44921003E-02;
  COFD[1728] = -1.50270285E+01;
  COFD[1729] = 3.46140064E+00;
  COFD[1730] = -2.38440092E-01;
  COFD[1731] = 1.04960087E-02;
  COFD[1732] = -1.50420909E+01;
  COFD[1733] = 3.46140064E+00;
  COFD[1734] = -2.38440092E-01;
  COFD[1735] = 1.04960087E-02;
  COFD[1736] = -1.62775683E+01;
  COFD[1737] = 3.79163564E+00;
  COFD[1738] = -2.80257365E-01;
  COFD[1739] = 1.22656902E-02;
  COFD[1740] = -1.24693714E+01;
  COFD[1741] = 2.76686648E+00;
  COFD[1742] = -1.49120141E-01;
  COFD[1743] = 6.66220432E-03;
  COFD[1744] = -2.14087360E+01;
  COFD[1745] = 5.57281993E+00;
  COFD[1746] = -4.76690860E-01;
  COFD[1747] = 1.94000702E-02;
  COFD[1748] = -1.62824385E+01;
  COFD[1749] = 3.79163564E+00;
  COFD[1750] = -2.80257365E-01;
  COFD[1751] = 1.22656902E-02;
  COFD[1752] = -1.62724429E+01;
  COFD[1753] = 3.79163564E+00;
  COFD[1754] = -2.80257365E-01;
  COFD[1755] = 1.22656902E-02;
  COFD[1756] = -1.72738845E+01;
  COFD[1757] = 4.19029808E+00;
  COFD[1758] = -3.31177076E-01;
  COFD[1759] = 1.44446234E-02;
  COFD[1760] = -1.72167712E+01;
  COFD[1761] = 4.16886779E+00;
  COFD[1762] = -3.28518156E-01;
  COFD[1763] = 1.43341626E-02;
  COFD[1764] = -2.14022312E+01;
  COFD[1765] = 5.55346617E+00;
  COFD[1766] = -4.87783156E-01;
  COFD[1767] = 2.04210886E-02;
  COFD[1768] = -2.14082433E+01;
  COFD[1769] = 5.55346617E+00;
  COFD[1770] = -4.87783156E-01;
  COFD[1771] = 2.04210886E-02;
  COFD[1772] = -2.11381493E+01;
  COFD[1773] = 5.45574448E+00;
  COFD[1774] = -4.77436163E-01;
  COFD[1775] = 2.00644599E-02;
  COFD[1776] = -2.13319769E+01;
  COFD[1777] = 5.52422470E+00;
  COFD[1778] = -4.84872944E-01;
  COFD[1779] = 2.03298213E-02;
  COFD[1780] = -1.59525075E+01;
  COFD[1781] = 3.66023858E+00;
  COFD[1782] = -2.63401043E-01;
  COFD[1783] = 1.15432000E-02;
  COFD[1784] = -1.92867532E+01;
  COFD[1785] = 4.83375900E+00;
  COFD[1786] = -4.09146560E-01;
  COFD[1787] = 1.76006599E-02;
  COFD[1788] = -1.87897289E+01;
  COFD[1789] = 4.66162351E+00;
  COFD[1790] = -3.88920477E-01;
  COFD[1791] = 1.68089648E-02;
  COFD[1792] = -1.87968842E+01;
  COFD[1793] = 4.66162351E+00;
  COFD[1794] = -3.88920477E-01;
  COFD[1795] = 1.68089648E-02;
  COFD[1796] = -1.98075051E+01;
  COFD[1797] = 5.02169524E+00;
  COFD[1798] = -4.31582804E-01;
  COFD[1799] = 1.84953568E-02;
  COFD[1800] = -1.94763687E+01;
  COFD[1801] = 4.87333294E+00;
  COFD[1802] = -4.13769241E-01;
  COFD[1803] = 1.77802244E-02;
  COFD[1804] = -1.94823661E+01;
  COFD[1805] = 4.87333294E+00;
  COFD[1806] = -4.13769241E-01;
  COFD[1807] = 1.77802244E-02;
  COFD[1808] = -1.72316133E+01;
  COFD[1809] = 4.24011069E+00;
  COFD[1810] = -3.37339810E-01;
  COFD[1811] = 1.46996679E-02;
  COFD[1812] = -2.11309194E+01;
  COFD[1813] = 5.41773516E+00;
  COFD[1814] = -4.73414338E-01;
  COFD[1815] = 1.99258685E-02;
  COFD[1816] = -2.11341641E+01;
  COFD[1817] = 5.41773516E+00;
  COFD[1818] = -4.73414338E-01;
  COFD[1819] = 1.99258685E-02;
  COFD[1820] = -1.96464488E+01;
  COFD[1821] = 4.87149639E+00;
  COFD[1822] = -4.13544849E-01;
  COFD[1823] = 1.77710516E-02;
  COFD[1824] = -1.96333360E+01;
  COFD[1825] = 4.87149639E+00;
  COFD[1826] = -4.13544849E-01;
  COFD[1827] = 1.77710516E-02;
  COFD[1828] = -1.99235836E+01;
  COFD[1829] = 4.95514826E+00;
  COFD[1830] = -4.23691395E-01;
  COFD[1831] = 1.81828318E-02;
  COFD[1832] = -1.99269591E+01;
  COFD[1833] = 4.95514826E+00;
  COFD[1834] = -4.23691395E-01;
  COFD[1835] = 1.81828318E-02;
  COFD[1836] = -1.99301980E+01;
  COFD[1837] = 4.95514826E+00;
  COFD[1838] = -4.23691395E-01;
  COFD[1839] = 1.81828318E-02;
  COFD[1840] = -2.09912989E+01;
  COFD[1841] = 5.28557747E+00;
  COFD[1842] = -4.61402384E-01;
  COFD[1843] = 1.96111546E-02;
  COFD[1844] = -1.47473013E+01;
  COFD[1845] = 3.30594991E+00;
  COFD[1846] = -2.18182207E-01;
  COFD[1847] = 9.61429447E-03;
  COFD[1848] = -1.59449700E+01;
  COFD[1849] = 3.65620899E+00;
  COFD[1850] = -2.62933804E-01;
  COFD[1851] = 1.15253223E-02;
  COFD[1852] = -1.85418525E+01;
  COFD[1853] = 4.59643893E+00;
  COFD[1854] = -3.80823304E-01;
  COFD[1855] = 1.64720603E-02;
  COFD[1856] = -1.91463450E+01;
  COFD[1857] = 4.78094221E+00;
  COFD[1858] = -4.02985837E-01;
  COFD[1859] = 1.73614221E-02;
  COFD[1860] = -1.91463450E+01;
  COFD[1861] = 4.78094221E+00;
  COFD[1862] = -4.02985837E-01;
  COFD[1863] = 1.73614221E-02;
  COFD[1864] = -1.91430977E+01;
  COFD[1865] = 4.78094221E+00;
  COFD[1866] = -4.02985837E-01;
  COFD[1867] = 1.73614221E-02;
  COFD[1868] = -2.13881929E+01;
  COFD[1869] = 5.52422470E+00;
  COFD[1870] = -4.84872944E-01;
  COFD[1871] = 2.03298213E-02;
  COFD[1872] = -2.14255154E+01;
  COFD[1873] = 5.52240865E+00;
  COFD[1874] = -4.84699537E-01;
  COFD[1875] = 2.03247833E-02;
  COFD[1876] = -2.04750606E+01;
  COFD[1877] = 5.23112374E+00;
  COFD[1878] = -4.54967682E-01;
  COFD[1879] = 1.93570423E-02;
  COFD[1880] = -1.97544605E+01;
  COFD[1881] = 5.56931926E+00;
  COFD[1882] = -4.89105511E-01;
  COFD[1883] = 2.04493129E-02;
  COFD[1884] = -1.94313018E+01;
  COFD[1885] = 5.02567894E+00;
  COFD[1886] = -4.32045169E-01;
  COFD[1887] = 1.85132214E-02;
  COFD[1888] = -1.94507789E+01;
  COFD[1889] = 5.02567894E+00;
  COFD[1890] = -4.32045169E-01;
  COFD[1891] = 1.85132214E-02;
  COFD[1892] = -2.08277510E+01;
  COFD[1893] = 5.35267674E+00;
  COFD[1894] = -4.69010505E-01;
  COFD[1895] = 1.98979152E-02;
  COFD[1896] = -1.60517517E+01;
  COFD[1897] = 4.11188603E+00;
  COFD[1898] = -3.21540884E-01;
  COFD[1899] = 1.40482564E-02;
  COFD[1900] = -1.77498465E+01;
  COFD[1901] = 3.57475686E+00;
  COFD[1902] = -1.56396297E-01;
  COFD[1903] = 3.12157721E-03;
  COFD[1904] = -2.08347318E+01;
  COFD[1905] = 5.35267674E+00;
  COFD[1906] = -4.69010505E-01;
  COFD[1907] = 1.98979152E-02;
  COFD[1908] = -2.08204356E+01;
  COFD[1909] = 5.35267674E+00;
  COFD[1910] = -4.69010505E-01;
  COFD[1911] = 1.98979152E-02;
  COFD[1912] = -2.14391914E+01;
  COFD[1913] = 5.56531152E+00;
  COFD[1914] = -4.88789821E-01;
  COFD[1915] = 2.04437116E-02;
  COFD[1916] = -2.14022312E+01;
  COFD[1917] = 5.55346617E+00;
  COFD[1918] = -4.87783156E-01;
  COFD[1919] = 2.04210886E-02;
  COFD[1920] = -1.90328637E+01;
  COFD[1921] = 3.99221757E+00;
  COFD[1922] = -2.19854880E-01;
  COFD[1923] = 6.22736279E-03;
  COFD[1924] = -1.90413276E+01;
  COFD[1925] = 3.99221757E+00;
  COFD[1926] = -2.19854880E-01;
  COFD[1927] = 6.22736279E-03;
  COFD[1928] = -2.01801599E+01;
  COFD[1929] = 4.53183330E+00;
  COFD[1930] = -3.02186760E-01;
  COFD[1931] = 1.02756490E-02;
  COFD[1932] = -1.93125597E+01;
  COFD[1933] = 4.10954793E+00;
  COFD[1934] = -2.37523329E-01;
  COFD[1935] = 7.08858141E-03;
  COFD[1936] = -2.05045498E+01;
  COFD[1937] = 5.23843909E+00;
  COFD[1938] = -4.55815614E-01;
  COFD[1939] = 1.93898040E-02;
  COFD[1940] = -2.19215472E+01;
  COFD[1941] = 5.45216133E+00;
  COFD[1942] = -4.52916925E-01;
  COFD[1943] = 1.80456400E-02;
  COFD[1944] = -2.19956299E+01;
  COFD[1945] = 5.55935694E+00;
  COFD[1946] = -4.74154740E-01;
  COFD[1947] = 1.92584304E-02;
  COFD[1948] = -2.20055495E+01;
  COFD[1949] = 5.55935694E+00;
  COFD[1950] = -4.74154740E-01;
  COFD[1951] = 1.92584304E-02;
  COFD[1952] = -2.16296327E+01;
  COFD[1953] = 5.29019717E+00;
  COFD[1954] = -4.24502606E-01;
  COFD[1955] = 1.65197343E-02;
  COFD[1956] = -2.19229146E+01;
  COFD[1957] = 5.41841631E+00;
  COFD[1958] = -4.46818971E-01;
  COFD[1959] = 1.77127652E-02;
  COFD[1960] = -2.19313596E+01;
  COFD[1961] = 5.41841631E+00;
  COFD[1962] = -4.46818971E-01;
  COFD[1963] = 1.77127652E-02;
  COFD[1964] = -2.14204113E+01;
  COFD[1965] = 5.59268435E+00;
  COFD[1966] = -4.91232974E-01;
  COFD[1967] = 2.05064746E-02;
  COFD[1968] = -2.00914970E+01;
  COFD[1969] = 4.41511629E+00;
  COFD[1970] = -2.84086963E-01;
  COFD[1971] = 9.37586971E-03;
  COFD[1972] = -2.00963017E+01;
  COFD[1973] = 4.41511629E+00;
  COFD[1974] = -2.84086963E-01;
  COFD[1975] = 9.37586971E-03;
  COFD[1976] = -2.21305345E+01;
  COFD[1977] = 5.41958743E+00;
  COFD[1978] = -4.47031040E-01;
  COFD[1979] = 1.77243470E-02;
  COFD[1980] = -2.21111508E+01;
  COFD[1981] = 5.41958743E+00;
  COFD[1982] = -4.47031040E-01;
  COFD[1983] = 1.77243470E-02;
  COFD[1984] = -2.20848512E+01;
  COFD[1985] = 5.36053938E+00;
  COFD[1986] = -4.36434519E-01;
  COFD[1987] = 1.71484255E-02;
  COFD[1988] = -2.20898344E+01;
  COFD[1989] = 5.36053938E+00;
  COFD[1990] = -4.36434519E-01;
  COFD[1991] = 1.71484255E-02;
  COFD[1992] = -2.20946312E+01;
  COFD[1993] = 5.36053938E+00;
  COFD[1994] = -4.36434519E-01;
  COFD[1995] = 1.71484255E-02;
  COFD[1996] = -2.13240709E+01;
  COFD[1997] = 4.87252053E+00;
  COFD[1998] = -3.56127804E-01;
  COFD[1999] = 1.29948788E-02;
  COFD[2000] = -1.91058045E+01;
  COFD[2001] = 4.86821670E+00;
  COFD[2002] = -4.13144121E-01;
  COFD[2003] = 1.77546701E-02;
  COFD[2004] = -2.04922413E+01;
  COFD[2005] = 5.23112374E+00;
  COFD[2006] = -4.54967682E-01;
  COFD[2007] = 1.93570423E-02;
  COFD[2008] = -2.19815087E+01;
  COFD[2009] = 5.58446511E+00;
  COFD[2010] = -4.79399331E-01;
  COFD[2011] = 1.95652693E-02;
  COFD[2012] = -2.19914948E+01;
  COFD[2013] = 5.49642957E+00;
  COFD[2014] = -4.61132993E-01;
  COFD[2015] = 1.85004773E-02;
  COFD[2016] = -2.19914948E+01;
  COFD[2017] = 5.49642957E+00;
  COFD[2018] = -4.61132993E-01;
  COFD[2019] = 1.85004773E-02;
  COFD[2020] = -2.19866865E+01;
  COFD[2021] = 5.49642957E+00;
  COFD[2022] = -4.61132993E-01;
  COFD[2023] = 1.85004773E-02;
  COFD[2024] = -1.93946871E+01;
  COFD[2025] = 4.10954793E+00;
  COFD[2026] = -2.37523329E-01;
  COFD[2027] = 7.08858141E-03;
  COFD[2028] = -2.14353342E+01;
  COFD[2029] = 5.52240865E+00;
  COFD[2030] = -4.84699537E-01;
  COFD[2031] = 2.03247833E-02;
  COFD[2032] = -2.04833743E+01;
  COFD[2033] = 5.23112374E+00;
  COFD[2034] = -4.54967682E-01;
  COFD[2035] = 1.93570423E-02;
  COFD[2036] = -1.97550243E+01;
  COFD[2037] = 5.56931926E+00;
  COFD[2038] = -4.89105511E-01;
  COFD[2039] = 2.04493129E-02;
  COFD[2040] = -1.94373032E+01;
  COFD[2041] = 5.02567894E+00;
  COFD[2042] = -4.32045169E-01;
  COFD[2043] = 1.85132214E-02;
  COFD[2044] = -1.94570202E+01;
  COFD[2045] = 5.02567894E+00;
  COFD[2046] = -4.32045169E-01;
  COFD[2047] = 1.85132214E-02;
  COFD[2048] = -2.08367641E+01;
  COFD[2049] = 5.35267674E+00;
  COFD[2050] = -4.69010505E-01;
  COFD[2051] = 1.98979152E-02;
  COFD[2052] = -1.60528433E+01;
  COFD[2053] = 4.11188603E+00;
  COFD[2054] = -3.21540884E-01;
  COFD[2055] = 1.40482564E-02;
  COFD[2056] = -1.77563175E+01;
  COFD[2057] = 3.57475686E+00;
  COFD[2058] = -1.56396297E-01;
  COFD[2059] = 3.12157721E-03;
  COFD[2060] = -2.08438728E+01;
  COFD[2061] = 5.35267674E+00;
  COFD[2062] = -4.69010505E-01;
  COFD[2063] = 1.98979152E-02;
  COFD[2064] = -2.08293167E+01;
  COFD[2065] = 5.35267674E+00;
  COFD[2066] = -4.69010505E-01;
  COFD[2067] = 1.98979152E-02;
  COFD[2068] = -2.14449532E+01;
  COFD[2069] = 5.56531152E+00;
  COFD[2070] = -4.88789821E-01;
  COFD[2071] = 2.04437116E-02;
  COFD[2072] = -2.14082433E+01;
  COFD[2073] = 5.55346617E+00;
  COFD[2074] = -4.87783156E-01;
  COFD[2075] = 2.04210886E-02;
  COFD[2076] = -1.90413276E+01;
  COFD[2077] = 3.99221757E+00;
  COFD[2078] = -2.19854880E-01;
  COFD[2079] = 6.22736279E-03;
  COFD[2080] = -1.90499374E+01;
  COFD[2081] = 3.99221757E+00;
  COFD[2082] = -2.19854880E-01;
  COFD[2083] = 6.22736279E-03;
  COFD[2084] = -2.01889105E+01;
  COFD[2085] = 4.53183330E+00;
  COFD[2086] = -3.02186760E-01;
  COFD[2087] = 1.02756490E-02;
  COFD[2088] = -1.93214466E+01;
  COFD[2089] = 4.10954793E+00;
  COFD[2090] = -2.37523329E-01;
  COFD[2091] = 7.08858141E-03;
  COFD[2092] = -2.05128629E+01;
  COFD[2093] = 5.23843909E+00;
  COFD[2094] = -4.55815614E-01;
  COFD[2095] = 1.93898040E-02;
  COFD[2096] = -2.19317665E+01;
  COFD[2097] = 5.45216133E+00;
  COFD[2098] = -4.52916925E-01;
  COFD[2099] = 1.80456400E-02;
  COFD[2100] = -2.20036321E+01;
  COFD[2101] = 5.55935694E+00;
  COFD[2102] = -4.74154740E-01;
  COFD[2103] = 1.92584304E-02;
  COFD[2104] = -2.20137133E+01;
  COFD[2105] = 5.55935694E+00;
  COFD[2106] = -4.74154740E-01;
  COFD[2107] = 1.92584304E-02;
  COFD[2108] = -2.16379525E+01;
  COFD[2109] = 5.29019717E+00;
  COFD[2110] = -4.24502606E-01;
  COFD[2111] = 1.65197343E-02;
  COFD[2112] = -2.19313850E+01;
  COFD[2113] = 5.41841631E+00;
  COFD[2114] = -4.46818971E-01;
  COFD[2115] = 1.77127652E-02;
  COFD[2116] = -2.19399756E+01;
  COFD[2117] = 5.41841631E+00;
  COFD[2118] = -4.46818971E-01;
  COFD[2119] = 1.77127652E-02;
  COFD[2120] = -2.14303411E+01;
  COFD[2121] = 5.59268435E+00;
  COFD[2122] = -4.91232974E-01;
  COFD[2123] = 2.05064746E-02;
  COFD[2124] = -2.01015275E+01;
  COFD[2125] = 4.41511629E+00;
  COFD[2126] = -2.84086963E-01;
  COFD[2127] = 9.37586971E-03;
  COFD[2128] = -2.01064300E+01;
  COFD[2129] = 4.41511629E+00;
  COFD[2130] = -2.84086963E-01;
  COFD[2131] = 9.37586971E-03;
  COFD[2132] = -2.21407579E+01;
  COFD[2133] = 5.41958743E+00;
  COFD[2134] = -4.47031040E-01;
  COFD[2135] = 1.77243470E-02;
  COFD[2136] = -2.21209816E+01;
  COFD[2137] = 5.41958743E+00;
  COFD[2138] = -4.47031040E-01;
  COFD[2139] = 1.77243470E-02;
  COFD[2140] = -2.20947854E+01;
  COFD[2141] = 5.36053938E+00;
  COFD[2142] = -4.36434519E-01;
  COFD[2143] = 1.71484255E-02;
  COFD[2144] = -2.20998692E+01;
  COFD[2145] = 5.36053938E+00;
  COFD[2146] = -4.36434519E-01;
  COFD[2147] = 1.71484255E-02;
  COFD[2148] = -2.21047637E+01;
  COFD[2149] = 5.36053938E+00;
  COFD[2150] = -4.36434519E-01;
  COFD[2151] = 1.71484255E-02;
  COFD[2152] = -2.13352587E+01;
  COFD[2153] = 4.87252053E+00;
  COFD[2154] = -3.56127804E-01;
  COFD[2155] = 1.29948788E-02;
  COFD[2156] = -1.91112992E+01;
  COFD[2157] = 4.86821670E+00;
  COFD[2158] = -4.13144121E-01;
  COFD[2159] = 1.77546701E-02;
  COFD[2160] = -2.05008481E+01;
  COFD[2161] = 5.23112374E+00;
  COFD[2162] = -4.54967682E-01;
  COFD[2163] = 1.93570423E-02;
  COFD[2164] = -2.19919092E+01;
  COFD[2165] = 5.58446511E+00;
  COFD[2166] = -4.79399331E-01;
  COFD[2167] = 1.95652693E-02;
  COFD[2168] = -2.20016211E+01;
  COFD[2169] = 5.49642957E+00;
  COFD[2170] = -4.61132993E-01;
  COFD[2171] = 1.85004773E-02;
  COFD[2172] = -2.20016211E+01;
  COFD[2173] = 5.49642957E+00;
  COFD[2174] = -4.61132993E-01;
  COFD[2175] = 1.85004773E-02;
  COFD[2176] = -2.19967149E+01;
  COFD[2177] = 5.49642957E+00;
  COFD[2178] = -4.61132993E-01;
  COFD[2179] = 1.85004773E-02;
  COFD[2180] = -1.94051772E+01;
  COFD[2181] = 4.10954793E+00;
  COFD[2182] = -2.37523329E-01;
  COFD[2183] = 7.08858141E-03;
  COFD[2184] = -2.10026942E+01;
  COFD[2185] = 5.38326647E+00;
  COFD[2186] = -4.71201048E-01;
  COFD[2187] = 1.99207516E-02;
  COFD[2188] = -2.02268939E+01;
  COFD[2189] = 5.13632099E+00;
  COFD[2190] = -4.44839130E-01;
  COFD[2191] = 1.90058356E-02;
  COFD[2192] = -1.92718738E+01;
  COFD[2193] = 5.41172124E+00;
  COFD[2194] = -4.73213887E-01;
  COFD[2195] = 1.99405473E-02;
  COFD[2196] = -1.88179325E+01;
  COFD[2197] = 4.79683898E+00;
  COFD[2198] = -4.04829719E-01;
  COFD[2199] = 1.74325475E-02;
  COFD[2200] = -1.88378792E+01;
  COFD[2201] = 4.79683898E+00;
  COFD[2202] = -4.04829719E-01;
  COFD[2203] = 1.74325475E-02;
  COFD[2204] = -2.02637913E+01;
  COFD[2205] = 5.14984081E+00;
  COFD[2206] = -4.46093018E-01;
  COFD[2207] = 1.90396647E-02;
  COFD[2208] = -1.58456453E+01;
  COFD[2209] = 4.02074796E+00;
  COFD[2210] = -3.10018539E-01;
  COFD[2211] = 1.35599559E-02;
  COFD[2212] = -1.65295191E+01;
  COFD[2213] = 2.97569077E+00;
  COFD[2214] = -6.75650795E-02;
  COFD[2215] = -1.08649440E-03;
  COFD[2216] = -2.02710239E+01;
  COFD[2217] = 5.14984081E+00;
  COFD[2218] = -4.46093018E-01;
  COFD[2219] = 1.90396647E-02;
  COFD[2220] = -2.04928875E+01;
  COFD[2221] = 5.22397941E+00;
  COFD[2222] = -4.54138181E-01;
  COFD[2223] = 1.93249289E-02;
  COFD[2224] = -2.09612533E+01;
  COFD[2225] = 5.40870099E+00;
  COFD[2226] = -4.73017610E-01;
  COFD[2227] = 1.99399066E-02;
  COFD[2228] = -2.11381493E+01;
  COFD[2229] = 5.45574448E+00;
  COFD[2230] = -4.77436163E-01;
  COFD[2231] = 2.00644599E-02;
  COFD[2232] = -2.01801599E+01;
  COFD[2233] = 4.53183330E+00;
  COFD[2234] = -3.02186760E-01;
  COFD[2235] = 1.02756490E-02;
  COFD[2236] = -2.01889105E+01;
  COFD[2237] = 4.53183330E+00;
  COFD[2238] = -3.02186760E-01;
  COFD[2239] = 1.02756490E-02;
  COFD[2240] = -1.95876943E+01;
  COFD[2241] = 4.27642977E+00;
  COFD[2242] = -2.68040785E-01;
  COFD[2243] = 8.77649540E-03;
  COFD[2244] = -2.03598994E+01;
  COFD[2245] = 4.60682543E+00;
  COFD[2246] = -3.13971634E-01;
  COFD[2247] = 1.08661011E-02;
  COFD[2248] = -2.02642156E+01;
  COFD[2249] = 5.14499744E+00;
  COFD[2250] = -4.45694433E-01;
  COFD[2251] = 1.90318647E-02;
  COFD[2252] = -2.20420967E+01;
  COFD[2253] = 5.52708328E+00;
  COFD[2254] = -4.68000799E-01;
  COFD[2255] = 1.89131903E-02;
  COFD[2256] = -2.19491665E+01;
  COFD[2257] = 5.59157589E+00;
  COFD[2258] = -4.85617912E-01;
  COFD[2259] = 2.00461138E-02;
  COFD[2260] = -2.19594037E+01;
  COFD[2261] = 5.59157589E+00;
  COFD[2262] = -4.85617912E-01;
  COFD[2263] = 2.00461138E-02;
  COFD[2264] = -2.19670810E+01;
  COFD[2265] = 5.48847873E+00;
  COFD[2266] = -4.59558930E-01;
  COFD[2267] = 1.84107961E-02;
  COFD[2268] = -2.21069995E+01;
  COFD[2269] = 5.55072945E+00;
  COFD[2270] = -4.72525345E-01;
  COFD[2271] = 1.91674202E-02;
  COFD[2272] = -2.21157308E+01;
  COFD[2273] = 5.55072945E+00;
  COFD[2274] = -4.72525345E-01;
  COFD[2275] = 1.91674202E-02;
  COFD[2276] = -2.09241584E+01;
  COFD[2277] = 5.42316225E+00;
  COFD[2278] = -4.73702801E-01;
  COFD[2279] = 1.99217718E-02;
  COFD[2280] = -2.09222393E+01;
  COFD[2281] = 4.82184721E+00;
  COFD[2282] = -3.48128875E-01;
  COFD[2283] = 1.25918978E-02;
  COFD[2284] = -2.09272370E+01;
  COFD[2285] = 4.82184721E+00;
  COFD[2286] = -3.48128875E-01;
  COFD[2287] = 1.25918978E-02;
  COFD[2288] = -2.23161833E+01;
  COFD[2289] = 5.55166300E+00;
  COFD[2290] = -4.72702482E-01;
  COFD[2291] = 1.91773349E-02;
  COFD[2292] = -2.22960253E+01;
  COFD[2293] = 5.55166300E+00;
  COFD[2294] = -4.72702482E-01;
  COFD[2295] = 1.91773349E-02;
  COFD[2296] = -2.23054103E+01;
  COFD[2297] = 5.50872500E+00;
  COFD[2298] = -4.64427323E-01;
  COFD[2299] = 1.87105612E-02;
  COFD[2300] = -2.23105918E+01;
  COFD[2301] = 5.50872500E+00;
  COFD[2302] = -4.64427323E-01;
  COFD[2303] = 1.87105612E-02;
  COFD[2304] = -2.23155813E+01;
  COFD[2305] = 5.50872500E+00;
  COFD[2306] = -4.64427323E-01;
  COFD[2307] = 1.87105612E-02;
  COFD[2308] = -2.19973126E+01;
  COFD[2309] = 5.21365421E+00;
  COFD[2310] = -4.11227771E-01;
  COFD[2311] = 1.58122118E-02;
  COFD[2312] = -1.85699398E+01;
  COFD[2313] = 4.67076124E+00;
  COFD[2314] = -3.90022427E-01;
  COFD[2315] = 1.68533953E-02;
  COFD[2316] = -2.02446510E+01;
  COFD[2317] = 5.13632099E+00;
  COFD[2318] = -4.44839130E-01;
  COFD[2319] = 1.90058356E-02;
  COFD[2320] = -2.19270866E+01;
  COFD[2321] = 5.60963444E+00;
  COFD[2322] = -4.89805286E-01;
  COFD[2323] = 2.03017681E-02;
  COFD[2324] = -2.20823256E+01;
  COFD[2325] = 5.58518321E+00;
  COFD[2326] = -4.80534235E-01;
  COFD[2327] = 1.96556393E-02;
  COFD[2328] = -2.20823256E+01;
  COFD[2329] = 5.58518321E+00;
  COFD[2330] = -4.80534235E-01;
  COFD[2331] = 1.96556393E-02;
  COFD[2332] = -2.20773242E+01;
  COFD[2333] = 5.58518321E+00;
  COFD[2334] = -4.80534235E-01;
  COFD[2335] = 1.96556393E-02;
  COFD[2336] = -2.04451868E+01;
  COFD[2337] = 4.60682543E+00;
  COFD[2338] = -3.13971634E-01;
  COFD[2339] = 1.08661011E-02;
  COFD[2340] = -2.13502433E+01;
  COFD[2341] = 5.48617067E+00;
  COFD[2342] = -4.80816776E-01;
  COFD[2343] = 2.01887868E-02;
  COFD[2344] = -2.03844292E+01;
  COFD[2345] = 5.18856872E+00;
  COFD[2346] = -4.50001829E-01;
  COFD[2347] = 1.91636142E-02;
  COFD[2348] = -1.96866259E+01;
  COFD[2349] = 5.54637286E+00;
  COFD[2350] = -4.87070324E-01;
  COFD[2351] = 2.03983467E-02;
  COFD[2352] = -1.93364494E+01;
  COFD[2353] = 4.98286777E+00;
  COFD[2354] = -4.26970814E-01;
  COFD[2355] = 1.83122917E-02;
  COFD[2356] = -1.93566163E+01;
  COFD[2357] = 4.98286777E+00;
  COFD[2358] = -4.26970814E-01;
  COFD[2359] = 1.83122917E-02;
  COFD[2360] = -2.07672755E+01;
  COFD[2361] = 5.32244593E+00;
  COFD[2362] = -4.65829403E-01;
  COFD[2363] = 1.97895274E-02;
  COFD[2364] = -1.59537397E+01;
  COFD[2365] = 4.07051484E+00;
  COFD[2366] = -3.16303109E-01;
  COFD[2367] = 1.38259377E-02;
  COFD[2368] = -1.80253593E+01;
  COFD[2369] = 3.69199168E+00;
  COFD[2370] = -1.74005516E-01;
  COFD[2371] = 3.97694372E-03;
  COFD[2372] = -2.07746282E+01;
  COFD[2373] = 5.32244593E+00;
  COFD[2374] = -4.65829403E-01;
  COFD[2375] = 1.97895274E-02;
  COFD[2376] = -2.07595763E+01;
  COFD[2377] = 5.32244593E+00;
  COFD[2378] = -4.65829403E-01;
  COFD[2379] = 1.97895274E-02;
  COFD[2380] = -2.13777287E+01;
  COFD[2381] = 5.54007827E+00;
  COFD[2382] = -4.86434511E-01;
  COFD[2383] = 2.03779006E-02;
  COFD[2384] = -2.13319769E+01;
  COFD[2385] = 5.52422470E+00;
  COFD[2386] = -4.84872944E-01;
  COFD[2387] = 2.03298213E-02;
  COFD[2388] = -1.93125597E+01;
  COFD[2389] = 4.10954793E+00;
  COFD[2390] = -2.37523329E-01;
  COFD[2391] = 7.08858141E-03;
  COFD[2392] = -1.93214466E+01;
  COFD[2393] = 4.10954793E+00;
  COFD[2394] = -2.37523329E-01;
  COFD[2395] = 7.08858141E-03;
  COFD[2396] = -2.03598994E+01;
  COFD[2397] = 4.60682543E+00;
  COFD[2398] = -3.13971634E-01;
  COFD[2399] = 1.08661011E-02;
  COFD[2400] = -1.95785091E+01;
  COFD[2401] = 4.22062499E+00;
  COFD[2402] = -2.54326872E-01;
  COFD[2403] = 7.91017784E-03;
  COFD[2404] = -2.04144534E+01;
  COFD[2405] = 5.19614628E+00;
  COFD[2406] = -4.50889164E-01;
  COFD[2407] = 1.91983328E-02;
  COFD[2408] = -2.20063523E+01;
  COFD[2409] = 5.48540187E+00;
  COFD[2410] = -4.58962148E-01;
  COFD[2411] = 1.83770355E-02;
  COFD[2412] = -2.20488281E+01;
  COFD[2413] = 5.58129885E+00;
  COFD[2414] = -4.78532921E-01;
  COFD[2415] = 1.95095699E-02;
  COFD[2416] = -2.20592159E+01;
  COFD[2417] = 5.58129885E+00;
  COFD[2418] = -4.78532921E-01;
  COFD[2419] = 1.95095699E-02;
  COFD[2420] = -2.17419173E+01;
  COFD[2421] = 5.33732875E+00;
  COFD[2422] = -4.32453425E-01;
  COFD[2423] = 1.69373833E-02;
  COFD[2424] = -2.20028153E+01;
  COFD[2425] = 5.45178028E+00;
  COFD[2426] = -4.52847771E-01;
  COFD[2427] = 1.80418544E-02;
  COFD[2428] = -2.20116826E+01;
  COFD[2429] = 5.45178028E+00;
  COFD[2430] = -4.52847771E-01;
  COFD[2431] = 1.80418544E-02;
  COFD[2432] = -2.13796243E+01;
  COFD[2433] = 5.56978987E+00;
  COFD[2434] = -4.89141980E-01;
  COFD[2435] = 2.04499210E-02;
  COFD[2436] = -2.03036345E+01;
  COFD[2437] = 4.50250781E+00;
  COFD[2438] = -2.97622106E-01;
  COFD[2439] = 1.00481473E-02;
  COFD[2440] = -2.03087248E+01;
  COFD[2441] = 4.50250781E+00;
  COFD[2442] = -2.97622106E-01;
  COFD[2443] = 1.00481473E-02;
  COFD[2444] = -2.22150651E+01;
  COFD[2445] = 5.45297208E+00;
  COFD[2446] = -4.53064157E-01;
  COFD[2447] = 1.80537024E-02;
  COFD[2448] = -2.21945357E+01;
  COFD[2449] = 5.45297208E+00;
  COFD[2450] = -4.53064157E-01;
  COFD[2451] = 1.80537024E-02;
  COFD[2452] = -2.21793407E+01;
  COFD[2453] = 5.39861129E+00;
  COFD[2454] = -4.43119198E-01;
  COFD[2455] = 1.75075657E-02;
  COFD[2456] = -2.21846173E+01;
  COFD[2457] = 5.39861129E+00;
  COFD[2458] = -4.43119198E-01;
  COFD[2459] = 1.75075657E-02;
  COFD[2460] = -2.21896993E+01;
  COFD[2461] = 5.39861129E+00;
  COFD[2462] = -4.43119198E-01;
  COFD[2463] = 1.75075657E-02;
  COFD[2464] = -2.15116655E+01;
  COFD[2465] = 4.94878244E+00;
  COFD[2466] = -3.68158605E-01;
  COFD[2467] = 1.36008797E-02;
  COFD[2468] = -1.90218811E+01;
  COFD[2469] = 4.83076737E+00;
  COFD[2470] = -4.08802573E-01;
  COFD[2471] = 1.75875241E-02;
  COFD[2472] = -2.04024603E+01;
  COFD[2473] = 5.18856872E+00;
  COFD[2474] = -4.50001829E-01;
  COFD[2475] = 1.91636142E-02;
  COFD[2476] = -2.19932273E+01;
  COFD[2477] = 5.58514538E+00;
  COFD[2478] = -4.80745077E-01;
  COFD[2479] = 1.96733087E-02;
  COFD[2480] = -2.20212539E+01;
  COFD[2481] = 5.50583166E+00;
  COFD[2482] = -4.63753262E-01;
  COFD[2483] = 1.86693462E-02;
  COFD[2484] = -2.20212539E+01;
  COFD[2485] = 5.50583166E+00;
  COFD[2486] = -4.63753262E-01;
  COFD[2487] = 1.86693462E-02;
  COFD[2488] = -2.20161598E+01;
  COFD[2489] = 5.50583166E+00;
  COFD[2490] = -4.63753262E-01;
  COFD[2491] = 1.86693462E-02;
  COFD[2492] = -1.96653091E+01;
  COFD[2493] = 4.22062499E+00;
  COFD[2494] = -2.54326872E-01;
  COFD[2495] = 7.91017784E-03;
  COFD[2496] = -1.60074270E+01;
  COFD[2497] = 3.63723937E+00;
  COFD[2498] = -2.60754222E-01;
  COFD[2499] = 1.14428814E-02;
  COFD[2500] = -1.50031706E+01;
  COFD[2501] = 3.26223357E+00;
  COFD[2502] = -2.12746642E-01;
  COFD[2503] = 9.38912883E-03;
  COFD[2504] = -1.43151328E+01;
  COFD[2505] = 3.68038508E+00;
  COFD[2506] = -2.65779346E-01;
  COFD[2507] = 1.16360771E-02;
  COFD[2508] = -1.40998907E+01;
  COFD[2509] = 3.08120012E+00;
  COFD[2510] = -1.89629903E-01;
  COFD[2511] = 8.40361952E-03;
  COFD[2512] = -1.41191170E+01;
  COFD[2513] = 3.08120012E+00;
  COFD[2514] = -1.89629903E-01;
  COFD[2515] = 8.40361952E-03;
  COFD[2516] = -1.52792799E+01;
  COFD[2517] = 3.36790500E+00;
  COFD[2518] = -2.26321740E-01;
  COFD[2519] = 9.97135055E-03;
  COFD[2520] = -1.17159884E+01;
  COFD[2521] = 2.48123210E+00;
  COFD[2522] = -1.11322604E-01;
  COFD[2523] = 4.99282389E-03;
  COFD[2524] = -2.11388255E+01;
  COFD[2525] = 5.55529689E+00;
  COFD[2526] = -4.87942530E-01;
  COFD[2527] = 2.04249057E-02;
  COFD[2528] = -1.52861287E+01;
  COFD[2529] = 3.36790500E+00;
  COFD[2530] = -2.26321740E-01;
  COFD[2531] = 9.97135055E-03;
  COFD[2532] = -1.52721010E+01;
  COFD[2533] = 3.36790500E+00;
  COFD[2534] = -2.26321740E-01;
  COFD[2535] = 9.97135055E-03;
  COFD[2536] = -1.59862997E+01;
  COFD[2537] = 3.67388294E+00;
  COFD[2538] = -2.64990709E-01;
  COFD[2539] = 1.16042706E-02;
  COFD[2540] = -1.59525075E+01;
  COFD[2541] = 3.66023858E+00;
  COFD[2542] = -2.63401043E-01;
  COFD[2543] = 1.15432000E-02;
  COFD[2544] = -2.05045498E+01;
  COFD[2545] = 5.23843909E+00;
  COFD[2546] = -4.55815614E-01;
  COFD[2547] = 1.93898040E-02;
  COFD[2548] = -2.05128629E+01;
  COFD[2549] = 5.23843909E+00;
  COFD[2550] = -4.55815614E-01;
  COFD[2551] = 1.93898040E-02;
  COFD[2552] = -2.02642156E+01;
  COFD[2553] = 5.14499744E+00;
  COFD[2554] = -4.45694433E-01;
  COFD[2555] = 1.90318647E-02;
  COFD[2556] = -2.04144534E+01;
  COFD[2557] = 5.19614628E+00;
  COFD[2558] = -4.50889164E-01;
  COFD[2559] = 1.91983328E-02;
  COFD[2560] = -1.50233391E+01;
  COFD[2561] = 3.26660767E+00;
  COFD[2562] = -2.13287177E-01;
  COFD[2563] = 9.41137857E-03;
  COFD[2564] = -1.81735675E+01;
  COFD[2565] = 4.38391495E+00;
  COFD[2566] = -3.54941287E-01;
  COFD[2567] = 1.54195107E-02;
  COFD[2568] = -1.76285583E+01;
  COFD[2569] = 4.19935698E+00;
  COFD[2570] = -3.32310212E-01;
  COFD[2571] = 1.44920670E-02;
  COFD[2572] = -1.76383102E+01;
  COFD[2573] = 4.19935698E+00;
  COFD[2574] = -3.32310212E-01;
  COFD[2575] = 1.44920670E-02;
  COFD[2576] = -1.86157710E+01;
  COFD[2577] = 4.55689508E+00;
  COFD[2578] = -3.75937921E-01;
  COFD[2579] = 1.62703488E-02;
  COFD[2580] = -1.83455387E+01;
  COFD[2581] = 4.42828044E+00;
  COFD[2582] = -3.60417833E-01;
  COFD[2583] = 1.56455103E-02;
  COFD[2584] = -1.83538331E+01;
  COFD[2585] = 4.42828044E+00;
  COFD[2586] = -3.60417833E-01;
  COFD[2587] = 1.56455103E-02;
  COFD[2588] = -1.60261598E+01;
  COFD[2589] = 3.73312045E+00;
  COFD[2590] = -2.72579779E-01;
  COFD[2591] = 1.19290272E-02;
  COFD[2592] = -2.02922626E+01;
  COFD[2593] = 5.11106992E+00;
  COFD[2594] = -4.42047129E-01;
  COFD[2595] = 1.89042990E-02;
  COFD[2596] = -2.02969667E+01;
  COFD[2597] = 5.11106992E+00;
  COFD[2598] = -4.42047129E-01;
  COFD[2599] = 1.89042990E-02;
  COFD[2600] = -1.85444853E+01;
  COFD[2601] = 4.42668307E+00;
  COFD[2602] = -3.60220573E-01;
  COFD[2603] = 1.56373683E-02;
  COFD[2604] = -1.85255055E+01;
  COFD[2605] = 4.42668307E+00;
  COFD[2606] = -3.60220573E-01;
  COFD[2607] = 1.56373683E-02;
  COFD[2608] = -1.87684982E+01;
  COFD[2609] = 4.49191492E+00;
  COFD[2610] = -3.68041771E-01;
  COFD[2611] = 1.59498676E-02;
  COFD[2612] = -1.87733780E+01;
  COFD[2613] = 4.49191492E+00;
  COFD[2614] = -3.68041771E-01;
  COFD[2615] = 1.59498676E-02;
  COFD[2616] = -1.87780743E+01;
  COFD[2617] = 4.49191492E+00;
  COFD[2618] = -3.68041771E-01;
  COFD[2619] = 1.59498676E-02;
  COFD[2620] = -1.98832169E+01;
  COFD[2621] = 4.84731557E+00;
  COFD[2622] = -4.10638352E-01;
  COFD[2623] = 1.76543886E-02;
  COFD[2624] = -1.39388102E+01;
  COFD[2625] = 2.97564184E+00;
  COFD[2626] = -1.76025309E-01;
  COFD[2627] = 7.81869993E-03;
  COFD[2628] = -1.50200477E+01;
  COFD[2629] = 3.26223357E+00;
  COFD[2630] = -2.12746642E-01;
  COFD[2631] = 9.38912883E-03;
  COFD[2632] = -1.74527809E+01;
  COFD[2633] = 4.14792932E+00;
  COFD[2634] = -3.25920382E-01;
  COFD[2635] = 1.42261620E-02;
  COFD[2636] = -1.80021491E+01;
  COFD[2637] = 4.31656593E+00;
  COFD[2638] = -3.46539554E-01;
  COFD[2639] = 1.50688196E-02;
  COFD[2640] = -1.80021491E+01;
  COFD[2641] = 4.31656593E+00;
  COFD[2642] = -3.46539554E-01;
  COFD[2643] = 1.50688196E-02;
  COFD[2644] = -1.79974415E+01;
  COFD[2645] = 4.31656593E+00;
  COFD[2646] = -3.46539554E-01;
  COFD[2647] = 1.50688196E-02;
  COFD[2648] = -2.04949292E+01;
  COFD[2649] = 5.19614628E+00;
  COFD[2650] = -4.50889164E-01;
  COFD[2651] = 1.91983328E-02;
  COFD[2652] = -1.93483786E+01;
  COFD[2653] = 4.79506290E+00;
  COFD[2654] = -4.04621659E-01;
  COFD[2655] = 1.74244230E-02;
  COFD[2656] = -1.81432499E+01;
  COFD[2657] = 4.37565431E+00;
  COFD[2658] = -3.53906025E-01;
  COFD[2659] = 1.53760786E-02;
  COFD[2660] = -1.76147183E+01;
  COFD[2661] = 4.86049500E+00;
  COFD[2662] = -4.12200578E-01;
  COFD[2663] = 1.77160971E-02;
  COFD[2664] = -1.70534750E+01;
  COFD[2665] = 4.14240922E+00;
  COFD[2666] = -3.25239774E-01;
  COFD[2667] = 1.41980687E-02;
  COFD[2668] = -1.70756953E+01;
  COFD[2669] = 4.14240922E+00;
  COFD[2670] = -3.25239774E-01;
  COFD[2671] = 1.41980687E-02;
  COFD[2672] = -1.84777509E+01;
  COFD[2673] = 4.49330851E+00;
  COFD[2674] = -3.68208715E-01;
  COFD[2675] = 1.59565402E-02;
  COFD[2676] = -1.37794466E+01;
  COFD[2677] = 3.23973858E+00;
  COFD[2678] = -2.09989036E-01;
  COFD[2679] = 9.27667906E-03;
  COFD[2680] = -2.07653629E+01;
  COFD[2681] = 5.01091988E+00;
  COFD[2682] = -3.77985581E-01;
  COFD[2683] = 1.40968617E-02;
  COFD[2684] = -1.84862906E+01;
  COFD[2685] = 4.49330851E+00;
  COFD[2686] = -3.68208715E-01;
  COFD[2687] = 1.59565402E-02;
  COFD[2688] = -1.84688303E+01;
  COFD[2689] = 4.49330851E+00;
  COFD[2690] = -3.68208715E-01;
  COFD[2691] = 1.59565402E-02;
  COFD[2692] = -1.93276406E+01;
  COFD[2693] = 4.85015581E+00;
  COFD[2694] = -4.10945109E-01;
  COFD[2695] = 1.76651398E-02;
  COFD[2696] = -1.92867532E+01;
  COFD[2697] = 4.83375900E+00;
  COFD[2698] = -4.09146560E-01;
  COFD[2699] = 1.76006599E-02;
  COFD[2700] = -2.19215472E+01;
  COFD[2701] = 5.45216133E+00;
  COFD[2702] = -4.52916925E-01;
  COFD[2703] = 1.80456400E-02;
  COFD[2704] = -2.19317665E+01;
  COFD[2705] = 5.45216133E+00;
  COFD[2706] = -4.52916925E-01;
  COFD[2707] = 1.80456400E-02;
  COFD[2708] = -2.20420967E+01;
  COFD[2709] = 5.52708328E+00;
  COFD[2710] = -4.68000799E-01;
  COFD[2711] = 1.89131903E-02;
  COFD[2712] = -2.20063523E+01;
  COFD[2713] = 5.48540187E+00;
  COFD[2714] = -4.58962148E-01;
  COFD[2715] = 1.83770355E-02;
  COFD[2716] = -1.81735675E+01;
  COFD[2717] = 4.38391495E+00;
  COFD[2718] = -3.54941287E-01;
  COFD[2719] = 1.54195107E-02;
  COFD[2720] = -2.13425604E+01;
  COFD[2721] = 5.40460130E+00;
  COFD[2722] = -4.72718910E-01;
  COFD[2723] = 1.99362717E-02;
  COFD[2724] = -2.09191230E+01;
  COFD[2725] = 5.30153901E+00;
  COFD[2726] = -4.63335119E-01;
  COFD[2727] = 1.96897053E-02;
  COFD[2728] = -2.09309702E+01;
  COFD[2729] = 5.30153901E+00;
  COFD[2730] = -4.63335119E-01;
  COFD[2731] = 1.96897053E-02;
  COFD[2732] = -2.16802565E+01;
  COFD[2733] = 5.52918296E+00;
  COFD[2734] = -4.85360709E-01;
  COFD[2735] = 2.03448006E-02;
  COFD[2736] = -2.14224440E+01;
  COFD[2737] = 5.41729961E+00;
  COFD[2738] = -4.73400281E-01;
  COFD[2739] = 1.99269567E-02;
  COFD[2740] = -2.14326420E+01;
  COFD[2741] = 5.41729961E+00;
  COFD[2742] = -4.73400281E-01;
  COFD[2743] = 1.99269567E-02;
  COFD[2744] = -1.94485902E+01;
  COFD[2745] = 4.91446566E+00;
  COFD[2746] = -4.18837152E-01;
  COFD[2747] = 1.79893537E-02;
  COFD[2748] = -2.22116629E+01;
  COFD[2749] = 5.54251230E+00;
  COFD[2750] = -4.70946314E-01;
  COFD[2751] = 1.90785869E-02;
  COFD[2752] = -2.22176875E+01;
  COFD[2753] = 5.54251230E+00;
  COFD[2754] = -4.70946314E-01;
  COFD[2755] = 1.90785869E-02;
  COFD[2756] = -2.16458314E+01;
  COFD[2757] = 5.41694410E+00;
  COFD[2758] = -4.73389041E-01;
  COFD[2759] = 1.99278645E-02;
  COFD[2760] = -2.16215581E+01;
  COFD[2761] = 5.41694410E+00;
  COFD[2762] = -4.73389041E-01;
  COFD[2763] = 1.99278645E-02;
  COFD[2764] = -2.18590684E+01;
  COFD[2765] = 5.47368915E+00;
  COFD[2766] = -4.79424291E-01;
  COFD[2767] = 2.01372920E-02;
  COFD[2768] = -2.18653022E+01;
  COFD[2769] = 5.47368915E+00;
  COFD[2770] = -4.79424291E-01;
  COFD[2771] = 2.01372920E-02;
  COFD[2772] = -2.18713176E+01;
  COFD[2773] = 5.47368915E+00;
  COFD[2774] = -4.79424291E-01;
  COFD[2775] = 2.01372920E-02;
  COFD[2776] = -2.25018696E+01;
  COFD[2777] = 5.59178974E+00;
  COFD[2778] = -4.85668031E-01;
  COFD[2779] = 2.00491907E-02;
  COFD[2780] = -1.67983988E+01;
  COFD[2781] = 4.00828594E+00;
  COFD[2782] = -3.08414344E-01;
  COFD[2783] = 1.34907430E-02;
  COFD[2784] = -1.81639552E+01;
  COFD[2785] = 4.37565431E+00;
  COFD[2786] = -3.53906025E-01;
  COFD[2787] = 1.53760786E-02;
  COFD[2788] = -2.07349578E+01;
  COFD[2789] = 5.23705932E+00;
  COFD[2790] = -4.55655792E-01;
  COFD[2791] = 1.93836339E-02;
  COFD[2792] = -2.12614490E+01;
  COFD[2793] = 5.38135645E+00;
  COFD[2794] = -4.71058360E-01;
  COFD[2795] = 1.99188046E-02;
  COFD[2796] = -2.12614490E+01;
  COFD[2797] = 5.38135645E+00;
  COFD[2798] = -4.71058360E-01;
  COFD[2799] = 1.99188046E-02;
  COFD[2800] = -2.12554201E+01;
  COFD[2801] = 5.38135645E+00;
  COFD[2802] = -4.71058360E-01;
  COFD[2803] = 1.99188046E-02;
  COFD[2804] = -2.21082949E+01;
  COFD[2805] = 5.48540187E+00;
  COFD[2806] = -4.58962148E-01;
  COFD[2807] = 1.83770355E-02;
  COFD[2808] = -1.87717415E+01;
  COFD[2809] = 4.61078776E+00;
  COFD[2810] = -3.82625667E-01;
  COFD[2811] = 1.65478601E-02;
  COFD[2812] = -1.76002073E+01;
  COFD[2813] = 4.19171952E+00;
  COFD[2814] = -3.31354810E-01;
  COFD[2815] = 1.44520623E-02;
  COFD[2816] = -1.72232379E+01;
  COFD[2817] = 4.69060745E+00;
  COFD[2818] = -3.92369888E-01;
  COFD[2819] = 1.69459661E-02;
  COFD[2820] = -1.65488277E+01;
  COFD[2821] = 3.95035840E+00;
  COFD[2822] = -3.00959418E-01;
  COFD[2823] = 1.31692593E-02;
  COFD[2824] = -1.65675292E+01;
  COFD[2825] = 3.95035840E+00;
  COFD[2826] = -3.00959418E-01;
  COFD[2827] = 1.31692593E-02;
  COFD[2828] = -1.78903850E+01;
  COFD[2829] = 4.29613154E+00;
  COFD[2830] = -3.44012526E-01;
  COFD[2831] = 1.49643715E-02;
  COFD[2832] = -1.34709956E+01;
  COFD[2833] = 3.09379603E+00;
  COFD[2834] = -1.91268635E-01;
  COFD[2835] = 8.47480224E-03;
  COFD[2836] = -2.15095920E+01;
  COFD[2837] = 5.46737673E+00;
  COFD[2838] = -4.55696085E-01;
  COFD[2839] = 1.81982625E-02;
  COFD[2840] = -1.78969625E+01;
  COFD[2841] = 4.29613154E+00;
  COFD[2842] = -3.44012526E-01;
  COFD[2843] = 1.49643715E-02;
  COFD[2844] = -1.78834868E+01;
  COFD[2845] = 4.29613154E+00;
  COFD[2846] = -3.44012526E-01;
  COFD[2847] = 1.49643715E-02;
  COFD[2848] = -1.88463801E+01;
  COFD[2849] = 4.68393046E+00;
  COFD[2850] = -3.91610863E-01;
  COFD[2851] = 1.69174645E-02;
  COFD[2852] = -1.87897289E+01;
  COFD[2853] = 4.66162351E+00;
  COFD[2854] = -3.88920477E-01;
  COFD[2855] = 1.68089648E-02;
  COFD[2856] = -2.19956299E+01;
  COFD[2857] = 5.55935694E+00;
  COFD[2858] = -4.74154740E-01;
  COFD[2859] = 1.92584304E-02;
  COFD[2860] = -2.20036321E+01;
  COFD[2861] = 5.55935694E+00;
  COFD[2862] = -4.74154740E-01;
  COFD[2863] = 1.92584304E-02;
  COFD[2864] = -2.19491665E+01;
  COFD[2865] = 5.59157589E+00;
  COFD[2866] = -4.85617912E-01;
  COFD[2867] = 2.00461138E-02;
  COFD[2868] = -2.20488281E+01;
  COFD[2869] = 5.58129885E+00;
  COFD[2870] = -4.78532921E-01;
  COFD[2871] = 1.95095699E-02;
  COFD[2872] = -1.76285583E+01;
  COFD[2873] = 4.19935698E+00;
  COFD[2874] = -3.32310212E-01;
  COFD[2875] = 1.44920670E-02;
  COFD[2876] = -2.09191230E+01;
  COFD[2877] = 5.30153901E+00;
  COFD[2878] = -4.63335119E-01;
  COFD[2879] = 1.96897053E-02;
  COFD[2880] = -2.03766918E+01;
  COFD[2881] = 5.13263469E+00;
  COFD[2882] = -4.44457285E-01;
  COFD[2883] = 1.89932102E-02;
  COFD[2884] = -2.03860971E+01;
  COFD[2885] = 5.13263469E+00;
  COFD[2886] = -4.44457285E-01;
  COFD[2887] = 1.89932102E-02;
  COFD[2888] = -2.12121345E+01;
  COFD[2889] = 5.39823225E+00;
  COFD[2890] = -4.72294645E-01;
  COFD[2891] = 1.99340225E-02;
  COFD[2892] = -2.10864229E+01;
  COFD[2893] = 5.34286099E+00;
  COFD[2894] = -4.68100992E-01;
  COFD[2895] = 1.98731399E-02;
  COFD[2896] = -2.10944068E+01;
  COFD[2897] = 5.34286099E+00;
  COFD[2898] = -4.68100992E-01;
  COFD[2899] = 1.98731399E-02;
  COFD[2900] = -1.88646025E+01;
  COFD[2901] = 4.72476764E+00;
  COFD[2902] = -3.96306836E-01;
  COFD[2903] = 1.70964541E-02;
  COFD[2904] = -2.21065263E+01;
  COFD[2905] = 5.58360799E+00;
  COFD[2906] = -4.82701436E-01;
  COFD[2907] = 1.98437922E-02;
  COFD[2908] = -2.21110249E+01;
  COFD[2909] = 5.58360799E+00;
  COFD[2910] = -4.82701436E-01;
  COFD[2911] = 1.98437922E-02;
  COFD[2912] = -2.12766837E+01;
  COFD[2913] = 5.34173603E+00;
  COFD[2914] = -4.67980991E-01;
  COFD[2915] = 1.98689682E-02;
  COFD[2916] = -2.12585287E+01;
  COFD[2917] = 5.34173603E+00;
  COFD[2918] = -4.67980991E-01;
  COFD[2919] = 1.98689682E-02;
  COFD[2920] = -2.14323161E+01;
  COFD[2921] = 5.37331605E+00;
  COFD[2922] = -4.70491203E-01;
  COFD[2923] = 1.99134666E-02;
  COFD[2924] = -2.14369847E+01;
  COFD[2925] = 5.37331605E+00;
  COFD[2926] = -4.70491203E-01;
  COFD[2927] = 1.99134666E-02;
  COFD[2928] = -2.14414758E+01;
  COFD[2929] = 5.37331605E+00;
  COFD[2930] = -4.70491203E-01;
  COFD[2931] = 1.99134666E-02;
  COFD[2932] = -2.22817317E+01;
  COFD[2933] = 5.59185582E+00;
  COFD[2934] = -4.91155812E-01;
  COFD[2935] = 2.05043018E-02;
  COFD[2936] = -1.61614949E+01;
  COFD[2937] = 3.75910622E+00;
  COFD[2938] = -2.75986578E-01;
  COFD[2939] = 1.20782843E-02;
  COFD[2940] = -1.76164585E+01;
  COFD[2941] = 4.19171952E+00;
  COFD[2942] = -3.31354810E-01;
  COFD[2943] = 1.44520623E-02;
  COFD[2944] = -2.02024001E+01;
  COFD[2945] = 5.08408346E+00;
  COFD[2946] = -4.38907391E-01;
  COFD[2947] = 1.87824789E-02;
  COFD[2948] = -2.07294288E+01;
  COFD[2949] = 5.23116678E+00;
  COFD[2950] = -4.54972675E-01;
  COFD[2951] = 1.93572354E-02;
  COFD[2952] = -2.07294288E+01;
  COFD[2953] = 5.23116678E+00;
  COFD[2954] = -4.54972675E-01;
  COFD[2955] = 1.93572354E-02;
  COFD[2956] = -2.07249267E+01;
  COFD[2957] = 5.23116678E+00;
  COFD[2958] = -4.54972675E-01;
  COFD[2959] = 1.93572354E-02;
  COFD[2960] = -2.21259240E+01;
  COFD[2961] = 5.58129885E+00;
  COFD[2962] = -4.78532921E-01;
  COFD[2963] = 1.95095699E-02;
  COFD[2964] = -1.87831526E+01;
  COFD[2965] = 4.61078776E+00;
  COFD[2966] = -3.82625667E-01;
  COFD[2967] = 1.65478601E-02;
  COFD[2968] = -1.76099599E+01;
  COFD[2969] = 4.19171952E+00;
  COFD[2970] = -3.31354810E-01;
  COFD[2971] = 1.44520623E-02;
  COFD[2972] = -1.72239329E+01;
  COFD[2973] = 4.69060745E+00;
  COFD[2974] = -3.92369888E-01;
  COFD[2975] = 1.69459661E-02;
  COFD[2976] = -1.65559708E+01;
  COFD[2977] = 3.95035840E+00;
  COFD[2978] = -3.00959418E-01;
  COFD[2979] = 1.31692593E-02;
  COFD[2980] = -1.65749465E+01;
  COFD[2981] = 3.95035840E+00;
  COFD[2982] = -3.00959418E-01;
  COFD[2983] = 1.31692593E-02;
  COFD[2984] = -1.79009121E+01;
  COFD[2985] = 4.29613154E+00;
  COFD[2986] = -3.44012526E-01;
  COFD[2987] = 1.49643715E-02;
  COFD[2988] = -1.34723365E+01;
  COFD[2989] = 3.09379603E+00;
  COFD[2990] = -1.91268635E-01;
  COFD[2991] = 8.47480224E-03;
  COFD[2992] = -2.15172712E+01;
  COFD[2993] = 5.46737673E+00;
  COFD[2994] = -4.55696085E-01;
  COFD[2995] = 1.81982625E-02;
  COFD[2996] = -1.79076305E+01;
  COFD[2997] = 4.29613154E+00;
  COFD[2998] = -3.44012526E-01;
  COFD[2999] = 1.49643715E-02;
  COFD[3000] = -1.78938681E+01;
  COFD[3001] = 4.29613154E+00;
  COFD[3002] = -3.44012526E-01;
  COFD[3003] = 1.49643715E-02;
  COFD[3004] = -1.88532484E+01;
  COFD[3005] = 4.68393046E+00;
  COFD[3006] = -3.91610863E-01;
  COFD[3007] = 1.69174645E-02;
  COFD[3008] = -1.87968842E+01;
  COFD[3009] = 4.66162351E+00;
  COFD[3010] = -3.88920477E-01;
  COFD[3011] = 1.68089648E-02;
  COFD[3012] = -2.20055495E+01;
  COFD[3013] = 5.55935694E+00;
  COFD[3014] = -4.74154740E-01;
  COFD[3015] = 1.92584304E-02;
  COFD[3016] = -2.20137133E+01;
  COFD[3017] = 5.55935694E+00;
  COFD[3018] = -4.74154740E-01;
  COFD[3019] = 1.92584304E-02;
  COFD[3020] = -2.19594037E+01;
  COFD[3021] = 5.59157589E+00;
  COFD[3022] = -4.85617912E-01;
  COFD[3023] = 2.00461138E-02;
  COFD[3024] = -2.20592159E+01;
  COFD[3025] = 5.58129885E+00;
  COFD[3026] = -4.78532921E-01;
  COFD[3027] = 1.95095699E-02;
  COFD[3028] = -1.76383102E+01;
  COFD[3029] = 4.19935698E+00;
  COFD[3030] = -3.32310212E-01;
  COFD[3031] = 1.44920670E-02;
  COFD[3032] = -2.09309702E+01;
  COFD[3033] = 5.30153901E+00;
  COFD[3034] = -4.63335119E-01;
  COFD[3035] = 1.96897053E-02;
  COFD[3036] = -2.03860971E+01;
  COFD[3037] = 5.13263469E+00;
  COFD[3038] = -4.44457285E-01;
  COFD[3039] = 1.89932102E-02;
  COFD[3040] = -2.03956828E+01;
  COFD[3041] = 5.13263469E+00;
  COFD[3042] = -4.44457285E-01;
  COFD[3043] = 1.89932102E-02;
  COFD[3044] = -2.12218938E+01;
  COFD[3045] = 5.39823225E+00;
  COFD[3046] = -4.72294645E-01;
  COFD[3047] = 1.99340225E-02;
  COFD[3048] = -2.10963496E+01;
  COFD[3049] = 5.34286099E+00;
  COFD[3050] = -4.68100992E-01;
  COFD[3051] = 1.98731399E-02;
  COFD[3052] = -2.11044949E+01;
  COFD[3053] = 5.34286099E+00;
  COFD[3054] = -4.68100992E-01;
  COFD[3055] = 1.98731399E-02;
  COFD[3056] = -1.88761346E+01;
  COFD[3057] = 4.72476764E+00;
  COFD[3058] = -3.96306836E-01;
  COFD[3059] = 1.70964541E-02;
  COFD[3060] = -2.21181680E+01;
  COFD[3061] = 5.58360799E+00;
  COFD[3062] = -4.82701436E-01;
  COFD[3063] = 1.98437922E-02;
  COFD[3064] = -2.21227731E+01;
  COFD[3065] = 5.58360799E+00;
  COFD[3066] = -4.82701436E-01;
  COFD[3067] = 1.98437922E-02;
  COFD[3068] = -2.12885353E+01;
  COFD[3069] = 5.34173603E+00;
  COFD[3070] = -4.67980991E-01;
  COFD[3071] = 1.98689682E-02;
  COFD[3072] = -2.12699528E+01;
  COFD[3073] = 5.34173603E+00;
  COFD[3074] = -4.67980991E-01;
  COFD[3075] = 1.98689682E-02;
  COFD[3076] = -2.14438531E+01;
  COFD[3077] = 5.37331605E+00;
  COFD[3078] = -4.70491203E-01;
  COFD[3079] = 1.99134666E-02;
  COFD[3080] = -2.14486311E+01;
  COFD[3081] = 5.37331605E+00;
  COFD[3082] = -4.70491203E-01;
  COFD[3083] = 1.99134666E-02;
  COFD[3084] = -2.14532286E+01;
  COFD[3085] = 5.37331605E+00;
  COFD[3086] = -4.70491203E-01;
  COFD[3087] = 1.99134666E-02;
  COFD[3088] = -2.22946247E+01;
  COFD[3089] = 5.59185582E+00;
  COFD[3090] = -4.91155812E-01;
  COFD[3091] = 2.05043018E-02;
  COFD[3092] = -1.61680559E+01;
  COFD[3093] = 3.75910622E+00;
  COFD[3094] = -2.75986578E-01;
  COFD[3095] = 1.20782843E-02;
  COFD[3096] = -1.76265366E+01;
  COFD[3097] = 4.19171952E+00;
  COFD[3098] = -3.31354810E-01;
  COFD[3099] = 1.44520623E-02;
  COFD[3100] = -2.02144438E+01;
  COFD[3101] = 5.08408346E+00;
  COFD[3102] = -4.38907391E-01;
  COFD[3103] = 1.87824789E-02;
  COFD[3104] = -2.07411749E+01;
  COFD[3105] = 5.23116678E+00;
  COFD[3106] = -4.54972675E-01;
  COFD[3107] = 1.93572354E-02;
  COFD[3108] = -2.07411749E+01;
  COFD[3109] = 5.23116678E+00;
  COFD[3110] = -4.54972675E-01;
  COFD[3111] = 1.93572354E-02;
  COFD[3112] = -2.07365663E+01;
  COFD[3113] = 5.23116678E+00;
  COFD[3114] = -4.54972675E-01;
  COFD[3115] = 1.93572354E-02;
  COFD[3116] = -2.21380648E+01;
  COFD[3117] = 5.58129885E+00;
  COFD[3118] = -4.78532921E-01;
  COFD[3119] = 1.95095699E-02;
  COFD[3120] = -1.98040420E+01;
  COFD[3121] = 4.97569695E+00;
  COFD[3122] = -4.26123307E-01;
  COFD[3123] = 1.82788664E-02;
  COFD[3124] = -1.85864196E+01;
  COFD[3125] = 4.54915847E+00;
  COFD[3126] = -3.75000738E-01;
  COFD[3127] = 1.62324821E-02;
  COFD[3128] = -1.82252070E+01;
  COFD[3129] = 5.05237312E+00;
  COFD[3130] = -4.35182396E-01;
  COFD[3131] = 1.86363074E-02;
  COFD[3132] = -1.74792034E+01;
  COFD[3133] = 4.29676909E+00;
  COFD[3134] = -3.44085306E-01;
  COFD[3135] = 1.49671135E-02;
  COFD[3136] = -1.74984410E+01;
  COFD[3137] = 4.29676909E+00;
  COFD[3138] = -3.44085306E-01;
  COFD[3139] = 1.49671135E-02;
  COFD[3140] = -1.89616566E+01;
  COFD[3141] = 4.68595732E+00;
  COFD[3142] = -3.91842840E-01;
  COFD[3143] = 1.69262542E-02;
  COFD[3144] = -1.42229344E+01;
  COFD[3145] = 3.38669384E+00;
  COFD[3146] = -2.28784122E-01;
  COFD[3147] = 1.00790953E-02;
  COFD[3148] = -2.08812277E+01;
  COFD[3149] = 5.08859217E+00;
  COFD[3150] = -3.90525428E-01;
  COFD[3151] = 1.47376395E-02;
  COFD[3152] = -1.89685112E+01;
  COFD[3153] = 4.68595732E+00;
  COFD[3154] = -3.91842840E-01;
  COFD[3155] = 1.69262542E-02;
  COFD[3156] = -1.89544717E+01;
  COFD[3157] = 4.68595732E+00;
  COFD[3158] = -3.91842840E-01;
  COFD[3159] = 1.69262542E-02;
  COFD[3160] = -1.98646724E+01;
  COFD[3161] = 5.04367502E+00;
  COFD[3162] = -4.34153325E-01;
  COFD[3163] = 1.85956055E-02;
  COFD[3164] = -1.98075051E+01;
  COFD[3165] = 5.02169524E+00;
  COFD[3166] = -4.31582804E-01;
  COFD[3167] = 1.84953568E-02;
  COFD[3168] = -2.16296327E+01;
  COFD[3169] = 5.29019717E+00;
  COFD[3170] = -4.24502606E-01;
  COFD[3171] = 1.65197343E-02;
  COFD[3172] = -2.16379525E+01;
  COFD[3173] = 5.29019717E+00;
  COFD[3174] = -4.24502606E-01;
  COFD[3175] = 1.65197343E-02;
  COFD[3176] = -2.19670810E+01;
  COFD[3177] = 5.48847873E+00;
  COFD[3178] = -4.59558930E-01;
  COFD[3179] = 1.84107961E-02;
  COFD[3180] = -2.17419173E+01;
  COFD[3181] = 5.33732875E+00;
  COFD[3182] = -4.32453425E-01;
  COFD[3183] = 1.69373833E-02;
  COFD[3184] = -1.86157710E+01;
  COFD[3185] = 4.55689508E+00;
  COFD[3186] = -3.75937921E-01;
  COFD[3187] = 1.62703488E-02;
  COFD[3188] = -2.16802565E+01;
  COFD[3189] = 5.52918296E+00;
  COFD[3190] = -4.85360709E-01;
  COFD[3191] = 2.03448006E-02;
  COFD[3192] = -2.12121345E+01;
  COFD[3193] = 5.39823225E+00;
  COFD[3194] = -4.72294645E-01;
  COFD[3195] = 1.99340225E-02;
  COFD[3196] = -2.12218938E+01;
  COFD[3197] = 5.39823225E+00;
  COFD[3198] = -4.72294645E-01;
  COFD[3199] = 1.99340225E-02;
  COFD[3200] = -2.19327379E+01;
  COFD[3201] = 5.60638188E+00;
  COFD[3202] = -4.91272522E-01;
  COFD[3203] = 2.04396264E-02;
  COFD[3204] = -2.18190524E+01;
  COFD[3205] = 5.55753905E+00;
  COFD[3206] = -4.88136714E-01;
  COFD[3207] = 2.04294957E-02;
  COFD[3208] = -2.18273535E+01;
  COFD[3209] = 5.55753905E+00;
  COFD[3210] = -4.88136714E-01;
  COFD[3211] = 2.04294957E-02;
  COFD[3212] = -1.99081518E+01;
  COFD[3213] = 5.09311649E+00;
  COFD[3214] = -4.39965178E-01;
  COFD[3215] = 1.88238537E-02;
  COFD[3216] = -2.20453687E+01;
  COFD[3217] = 5.44448440E+00;
  COFD[3218] = -4.51529024E-01;
  COFD[3219] = 1.79698119E-02;
  COFD[3220] = -2.20500773E+01;
  COFD[3221] = 5.44448440E+00;
  COFD[3222] = -4.51529024E-01;
  COFD[3223] = 1.79698119E-02;
  COFD[3224] = -2.20153774E+01;
  COFD[3225] = 5.55674298E+00;
  COFD[3226] = -4.88067739E-01;
  COFD[3227] = 2.04278640E-02;
  COFD[3228] = -2.19963797E+01;
  COFD[3229] = 5.55674298E+00;
  COFD[3230] = -4.88067739E-01;
  COFD[3231] = 2.04278640E-02;
  COFD[3232] = -2.21885121E+01;
  COFD[3233] = 5.59472344E+00;
  COFD[3234] = -4.91421518E-01;
  COFD[3235] = 2.05117088E-02;
  COFD[3236] = -2.21933965E+01;
  COFD[3237] = 5.59472344E+00;
  COFD[3238] = -4.91421518E-01;
  COFD[3239] = 2.05117088E-02;
  COFD[3240] = -2.21980972E+01;
  COFD[3241] = 5.59472344E+00;
  COFD[3242] = -4.91421518E-01;
  COFD[3243] = 2.05117088E-02;
  COFD[3244] = -2.25171753E+01;
  COFD[3245] = 5.58249828E+00;
  COFD[3246] = -4.78873376E-01;
  COFD[3247] = 1.95316774E-02;
  COFD[3248] = -1.72409761E+01;
  COFD[3249] = 4.17190426E+00;
  COFD[3250] = -3.28894681E-01;
  COFD[3251] = 1.43498101E-02;
  COFD[3252] = -1.86033102E+01;
  COFD[3253] = 4.54915847E+00;
  COFD[3254] = -3.75000738E-01;
  COFD[3255] = 1.62324821E-02;
  COFD[3256] = -2.10998079E+01;
  COFD[3257] = 5.37657006E+00;
  COFD[3258] = -4.70707921E-01;
  COFD[3259] = 1.99145326E-02;
  COFD[3260] = -2.15270515E+01;
  COFD[3261] = 5.47662534E+00;
  COFD[3262] = -4.79750189E-01;
  COFD[3263] = 2.01492627E-02;
  COFD[3264] = -2.15270515E+01;
  COFD[3265] = 5.47662534E+00;
  COFD[3266] = -4.79750189E-01;
  COFD[3267] = 2.01492627E-02;
  COFD[3268] = -2.15223395E+01;
  COFD[3269] = 5.47662534E+00;
  COFD[3270] = -4.79750189E-01;
  COFD[3271] = 2.01492627E-02;
  COFD[3272] = -2.18224662E+01;
  COFD[3273] = 5.33732875E+00;
  COFD[3274] = -4.32453425E-01;
  COFD[3275] = 1.69373833E-02;
  COFD[3276] = -1.94928919E+01;
  COFD[3277] = 4.83189721E+00;
  COFD[3278] = -4.08932249E-01;
  COFD[3279] = 1.75924650E-02;
  COFD[3280] = -1.83166409E+01;
  COFD[3281] = 4.42045763E+00;
  COFD[3282] = -3.59451578E-01;
  COFD[3283] = 1.56056164E-02;
  COFD[3284] = -1.79339484E+01;
  COFD[3285] = 4.91373893E+00;
  COFD[3286] = -4.18747629E-01;
  COFD[3287] = 1.79856610E-02;
  COFD[3288] = -1.72496558E+01;
  COFD[3289] = 4.17889917E+00;
  COFD[3290] = -3.29752510E-01;
  COFD[3291] = 1.43850275E-02;
  COFD[3292] = -1.72691436E+01;
  COFD[3293] = 4.17889917E+00;
  COFD[3294] = -3.29752510E-01;
  COFD[3295] = 1.43850275E-02;
  COFD[3296] = -1.86409085E+01;
  COFD[3297] = 4.53572533E+00;
  COFD[3298] = -3.73386925E-01;
  COFD[3299] = 1.61678881E-02;
  COFD[3300] = -1.39914049E+01;
  COFD[3301] = 3.26384506E+00;
  COFD[3302] = -2.12947087E-01;
  COFD[3303] = 9.39743888E-03;
  COFD[3304] = -2.12597258E+01;
  COFD[3305] = 5.24930667E+00;
  COFD[3306] = -4.17435088E-01;
  COFD[3307] = 1.61434424E-02;
  COFD[3308] = -1.86478950E+01;
  COFD[3309] = 4.53572533E+00;
  COFD[3310] = -3.73386925E-01;
  COFD[3311] = 1.61678881E-02;
  COFD[3312] = -1.86335873E+01;
  COFD[3313] = 4.53572533E+00;
  COFD[3314] = -3.73386925E-01;
  COFD[3315] = 1.61678881E-02;
  COFD[3316] = -1.95494660E+01;
  COFD[3317] = 4.90255048E+00;
  COFD[3318] = -4.17368501E-01;
  COFD[3319] = 1.79287358E-02;
  COFD[3320] = -1.94763687E+01;
  COFD[3321] = 4.87333294E+00;
  COFD[3322] = -4.13769241E-01;
  COFD[3323] = 1.77802244E-02;
  COFD[3324] = -2.19229146E+01;
  COFD[3325] = 5.41841631E+00;
  COFD[3326] = -4.46818971E-01;
  COFD[3327] = 1.77127652E-02;
  COFD[3328] = -2.19313850E+01;
  COFD[3329] = 5.41841631E+00;
  COFD[3330] = -4.46818971E-01;
  COFD[3331] = 1.77127652E-02;
  COFD[3332] = -2.21069995E+01;
  COFD[3333] = 5.55072945E+00;
  COFD[3334] = -4.72525345E-01;
  COFD[3335] = 1.91674202E-02;
  COFD[3336] = -2.20028153E+01;
  COFD[3337] = 5.45178028E+00;
  COFD[3338] = -4.52847771E-01;
  COFD[3339] = 1.80418544E-02;
  COFD[3340] = -1.83455387E+01;
  COFD[3341] = 4.42828044E+00;
  COFD[3342] = -3.60417833E-01;
  COFD[3343] = 1.56455103E-02;
  COFD[3344] = -2.14224440E+01;
  COFD[3345] = 5.41729961E+00;
  COFD[3346] = -4.73400281E-01;
  COFD[3347] = 1.99269567E-02;
  COFD[3348] = -2.10864229E+01;
  COFD[3349] = 5.34286099E+00;
  COFD[3350] = -4.68100992E-01;
  COFD[3351] = 1.98731399E-02;
  COFD[3352] = -2.10963496E+01;
  COFD[3353] = 5.34286099E+00;
  COFD[3354] = -4.68100992E-01;
  COFD[3355] = 1.98731399E-02;
  COFD[3356] = -2.18190524E+01;
  COFD[3357] = 5.55753905E+00;
  COFD[3358] = -4.88136714E-01;
  COFD[3359] = 2.04294957E-02;
  COFD[3360] = -2.15575647E+01;
  COFD[3361] = 5.44803850E+00;
  COFD[3362] = -4.76610560E-01;
  COFD[3363] = 2.00355294E-02;
  COFD[3364] = -2.15660162E+01;
  COFD[3365] = 5.44803850E+00;
  COFD[3366] = -4.76610560E-01;
  COFD[3367] = 2.00355294E-02;
  COFD[3368] = -1.96309007E+01;
  COFD[3369] = 4.95923807E+00;
  COFD[3370] = -4.24176182E-01;
  COFD[3371] = 1.82020215E-02;
  COFD[3372] = -2.22059507E+01;
  COFD[3373] = 5.51722375E+00;
  COFD[3374] = -4.66081431E-01;
  COFD[3375] = 1.88044011E-02;
  COFD[3376] = -2.22107598E+01;
  COFD[3377] = 5.51722375E+00;
  COFD[3378] = -4.66081431E-01;
  COFD[3379] = 1.88044011E-02;
  COFD[3380] = -2.17498669E+01;
  COFD[3381] = 5.44645703E+00;
  COFD[3382] = -4.76428229E-01;
  COFD[3383] = 2.00285047E-02;
  COFD[3384] = -2.17304659E+01;
  COFD[3385] = 5.44645703E+00;
  COFD[3386] = -4.76428229E-01;
  COFD[3387] = 2.00285047E-02;
  COFD[3388] = -2.19883773E+01;
  COFD[3389] = 5.51276597E+00;
  COFD[3390] = -4.83701824E-01;
  COFD[3391] = 2.02915297E-02;
  COFD[3392] = -2.19933650E+01;
  COFD[3393] = 5.51276597E+00;
  COFD[3394] = -4.83701824E-01;
  COFD[3395] = 2.02915297E-02;
  COFD[3396] = -2.19981661E+01;
  COFD[3397] = 5.51276597E+00;
  COFD[3398] = -4.83701824E-01;
  COFD[3399] = 2.02915297E-02;
  COFD[3400] = -2.25007852E+01;
  COFD[3401] = 5.58206320E+00;
  COFD[3402] = -4.82956809E-01;
  COFD[3403] = 1.98731634E-02;
  COFD[3404] = -1.70022486E+01;
  COFD[3405] = 4.05099737E+00;
  COFD[3406] = -3.13841660E-01;
  COFD[3407] = 1.37218854E-02;
  COFD[3408] = -1.83338346E+01;
  COFD[3409] = 4.42045763E+00;
  COFD[3410] = -3.59451578E-01;
  COFD[3411] = 1.56056164E-02;
  COFD[3412] = -2.08992599E+01;
  COFD[3413] = 5.28495077E+00;
  COFD[3414] = -4.61326381E-01;
  COFD[3415] = 1.96080621E-02;
  COFD[3416] = -2.13502458E+01;
  COFD[3417] = 5.39784038E+00;
  COFD[3418] = -4.72269379E-01;
  COFD[3419] = 1.99339592E-02;
  COFD[3420] = -2.13502458E+01;
  COFD[3421] = 5.39784038E+00;
  COFD[3422] = -4.72269379E-01;
  COFD[3423] = 1.99339592E-02;
  COFD[3424] = -2.13454331E+01;
  COFD[3425] = 5.39784038E+00;
  COFD[3426] = -4.72269379E-01;
  COFD[3427] = 1.99339592E-02;
  COFD[3428] = -2.20850137E+01;
  COFD[3429] = 5.45178028E+00;
  COFD[3430] = -4.52847771E-01;
  COFD[3431] = 1.80418544E-02;
  COFD[3432] = -1.95026899E+01;
  COFD[3433] = 4.83189721E+00;
  COFD[3434] = -4.08932249E-01;
  COFD[3435] = 1.75924650E-02;
  COFD[3436] = -1.83249359E+01;
  COFD[3437] = 4.42045763E+00;
  COFD[3438] = -3.59451578E-01;
  COFD[3439] = 1.56056164E-02;
  COFD[3440] = -1.79345106E+01;
  COFD[3441] = 4.91373893E+00;
  COFD[3442] = -4.18747629E-01;
  COFD[3443] = 1.79856610E-02;
  COFD[3444] = -1.72556425E+01;
  COFD[3445] = 4.17889917E+00;
  COFD[3446] = -3.29752510E-01;
  COFD[3447] = 1.43850275E-02;
  COFD[3448] = -1.72753698E+01;
  COFD[3449] = 4.17889917E+00;
  COFD[3450] = -3.29752510E-01;
  COFD[3451] = 1.43850275E-02;
  COFD[3452] = -1.86499019E+01;
  COFD[3453] = 4.53572533E+00;
  COFD[3454] = -3.73386925E-01;
  COFD[3455] = 1.61678881E-02;
  COFD[3456] = -1.39924933E+01;
  COFD[3457] = 3.26384506E+00;
  COFD[3458] = -2.12947087E-01;
  COFD[3459] = 9.39743888E-03;
  COFD[3460] = -2.12661812E+01;
  COFD[3461] = 5.24930667E+00;
  COFD[3462] = -4.17435088E-01;
  COFD[3463] = 1.61434424E-02;
  COFD[3464] = -1.86570161E+01;
  COFD[3465] = 4.53572533E+00;
  COFD[3466] = -3.73386925E-01;
  COFD[3467] = 1.61678881E-02;
  COFD[3468] = -1.86424488E+01;
  COFD[3469] = 4.53572533E+00;
  COFD[3470] = -3.73386925E-01;
  COFD[3471] = 1.61678881E-02;
  COFD[3472] = -1.95552136E+01;
  COFD[3473] = 4.90255048E+00;
  COFD[3474] = -4.17368501E-01;
  COFD[3475] = 1.79287358E-02;
  COFD[3476] = -1.94823661E+01;
  COFD[3477] = 4.87333294E+00;
  COFD[3478] = -4.13769241E-01;
  COFD[3479] = 1.77802244E-02;
  COFD[3480] = -2.19313596E+01;
  COFD[3481] = 5.41841631E+00;
  COFD[3482] = -4.46818971E-01;
  COFD[3483] = 1.77127652E-02;
  COFD[3484] = -2.19399756E+01;
  COFD[3485] = 5.41841631E+00;
  COFD[3486] = -4.46818971E-01;
  COFD[3487] = 1.77127652E-02;
  COFD[3488] = -2.21157308E+01;
  COFD[3489] = 5.55072945E+00;
  COFD[3490] = -4.72525345E-01;
  COFD[3491] = 1.91674202E-02;
  COFD[3492] = -2.20116826E+01;
  COFD[3493] = 5.45178028E+00;
  COFD[3494] = -4.52847771E-01;
  COFD[3495] = 1.80418544E-02;
  COFD[3496] = -1.83538331E+01;
  COFD[3497] = 4.42828044E+00;
  COFD[3498] = -3.60417833E-01;
  COFD[3499] = 1.56455103E-02;
  COFD[3500] = -2.14326420E+01;
  COFD[3501] = 5.41729961E+00;
  COFD[3502] = -4.73400281E-01;
  COFD[3503] = 1.99269567E-02;
  COFD[3504] = -2.10944068E+01;
  COFD[3505] = 5.34286099E+00;
  COFD[3506] = -4.68100992E-01;
  COFD[3507] = 1.98731399E-02;
  COFD[3508] = -2.11044949E+01;
  COFD[3509] = 5.34286099E+00;
  COFD[3510] = -4.68100992E-01;
  COFD[3511] = 1.98731399E-02;
  COFD[3512] = -2.18273535E+01;
  COFD[3513] = 5.55753905E+00;
  COFD[3514] = -4.88136714E-01;
  COFD[3515] = 2.04294957E-02;
  COFD[3516] = -2.15660162E+01;
  COFD[3517] = 5.44803850E+00;
  COFD[3518] = -4.76610560E-01;
  COFD[3519] = 2.00355294E-02;
  COFD[3520] = -2.15746130E+01;
  COFD[3521] = 5.44803850E+00;
  COFD[3522] = -4.76610560E-01;
  COFD[3523] = 2.00355294E-02;
  COFD[3524] = -1.96408096E+01;
  COFD[3525] = 4.95923807E+00;
  COFD[3526] = -4.24176182E-01;
  COFD[3527] = 1.82020215E-02;
  COFD[3528] = -2.22159601E+01;
  COFD[3529] = 5.51722375E+00;
  COFD[3530] = -4.66081431E-01;
  COFD[3531] = 1.88044011E-02;
  COFD[3532] = -2.22208668E+01;
  COFD[3533] = 5.51722375E+00;
  COFD[3534] = -4.66081431E-01;
  COFD[3535] = 1.88044011E-02;
  COFD[3536] = -2.17600690E+01;
  COFD[3537] = 5.44645703E+00;
  COFD[3538] = -4.76428229E-01;
  COFD[3539] = 2.00285047E-02;
  COFD[3540] = -2.17402758E+01;
  COFD[3541] = 5.44645703E+00;
  COFD[3542] = -4.76428229E-01;
  COFD[3543] = 2.00285047E-02;
  COFD[3544] = -2.19982906E+01;
  COFD[3545] = 5.51276597E+00;
  COFD[3546] = -4.83701824E-01;
  COFD[3547] = 2.02915297E-02;
  COFD[3548] = -2.20033786E+01;
  COFD[3549] = 5.51276597E+00;
  COFD[3550] = -4.83701824E-01;
  COFD[3551] = 2.02915297E-02;
  COFD[3552] = -2.20082773E+01;
  COFD[3553] = 5.51276597E+00;
  COFD[3554] = -4.83701824E-01;
  COFD[3555] = 2.02915297E-02;
  COFD[3556] = -2.25119507E+01;
  COFD[3557] = 5.58206320E+00;
  COFD[3558] = -4.82956809E-01;
  COFD[3559] = 1.98731634E-02;
  COFD[3560] = -1.70077296E+01;
  COFD[3561] = 4.05099737E+00;
  COFD[3562] = -3.13841660E-01;
  COFD[3563] = 1.37218854E-02;
  COFD[3564] = -1.83424223E+01;
  COFD[3565] = 4.42045763E+00;
  COFD[3566] = -3.59451578E-01;
  COFD[3567] = 1.56056164E-02;
  COFD[3568] = -2.09096388E+01;
  COFD[3569] = 5.28495077E+00;
  COFD[3570] = -4.61326381E-01;
  COFD[3571] = 1.96080621E-02;
  COFD[3572] = -2.13603509E+01;
  COFD[3573] = 5.39784038E+00;
  COFD[3574] = -4.72269379E-01;
  COFD[3575] = 1.99339592E-02;
  COFD[3576] = -2.13603509E+01;
  COFD[3577] = 5.39784038E+00;
  COFD[3578] = -4.72269379E-01;
  COFD[3579] = 1.99339592E-02;
  COFD[3580] = -2.13554405E+01;
  COFD[3581] = 5.39784038E+00;
  COFD[3582] = -4.72269379E-01;
  COFD[3583] = 1.99339592E-02;
  COFD[3584] = -2.20954821E+01;
  COFD[3585] = 5.45178028E+00;
  COFD[3586] = -4.52847771E-01;
  COFD[3587] = 1.80418544E-02;
  COFD[3588] = -1.72570708E+01;
  COFD[3589] = 4.19757624E+00;
  COFD[3590] = -3.32087529E-01;
  COFD[3591] = 1.44827462E-02;
  COFD[3592] = -1.59884349E+01;
  COFD[3593] = 3.72220402E+00;
  COFD[3594] = -2.71150591E-01;
  COFD[3595] = 1.18665265E-02;
  COFD[3596] = -1.54460977E+01;
  COFD[3597] = 4.26819983E+00;
  COFD[3598] = -3.40766379E-01;
  COFD[3599] = 1.48393361E-02;
  COFD[3600] = -1.49500258E+01;
  COFD[3601] = 3.52327209E+00;
  COFD[3602] = -2.46286208E-01;
  COFD[3603] = 1.08285963E-02;
  COFD[3604] = -1.49718147E+01;
  COFD[3605] = 3.52327209E+00;
  COFD[3606] = -2.46286208E-01;
  COFD[3607] = 1.08285963E-02;
  COFD[3608] = -1.64255877E+01;
  COFD[3609] = 3.89309916E+00;
  COFD[3610] = -2.93528188E-01;
  COFD[3611] = 1.28463177E-02;
  COFD[3612] = -1.22004476E+01;
  COFD[3613] = 2.80725489E+00;
  COFD[3614] = -1.54291406E-01;
  COFD[3615] = 6.88290911E-03;
  COFD[3616] = -2.10440599E+01;
  COFD[3617] = 5.59806282E+00;
  COFD[3618] = -4.87109535E-01;
  COFD[3619] = 2.01370226E-02;
  COFD[3620] = -1.64338675E+01;
  COFD[3621] = 3.89309916E+00;
  COFD[3622] = -2.93528188E-01;
  COFD[3623] = 1.28463177E-02;
  COFD[3624] = -1.64169341E+01;
  COFD[3625] = 3.89309916E+00;
  COFD[3626] = -2.93528188E-01;
  COFD[3627] = 1.28463177E-02;
  COFD[3628] = -1.72828280E+01;
  COFD[3629] = 4.26063341E+00;
  COFD[3630] = -3.39848064E-01;
  COFD[3631] = 1.48021313E-02;
  COFD[3632] = -1.72316133E+01;
  COFD[3633] = 4.24011069E+00;
  COFD[3634] = -3.37339810E-01;
  COFD[3635] = 1.46996679E-02;
  COFD[3636] = -2.14204113E+01;
  COFD[3637] = 5.59268435E+00;
  COFD[3638] = -4.91232974E-01;
  COFD[3639] = 2.05064746E-02;
  COFD[3640] = -2.14303411E+01;
  COFD[3641] = 5.59268435E+00;
  COFD[3642] = -4.91232974E-01;
  COFD[3643] = 2.05064746E-02;
  COFD[3644] = -2.09241584E+01;
  COFD[3645] = 5.42316225E+00;
  COFD[3646] = -4.73702801E-01;
  COFD[3647] = 1.99217718E-02;
  COFD[3648] = -2.13796243E+01;
  COFD[3649] = 5.56978987E+00;
  COFD[3650] = -4.89141980E-01;
  COFD[3651] = 2.04499210E-02;
  COFD[3652] = -1.60261598E+01;
  COFD[3653] = 3.73312045E+00;
  COFD[3654] = -2.72579779E-01;
  COFD[3655] = 1.19290272E-02;
  COFD[3656] = -1.94485902E+01;
  COFD[3657] = 4.91446566E+00;
  COFD[3658] = -4.18837152E-01;
  COFD[3659] = 1.79893537E-02;
  COFD[3660] = -1.88646025E+01;
  COFD[3661] = 4.72476764E+00;
  COFD[3662] = -3.96306836E-01;
  COFD[3663] = 1.70964541E-02;
  COFD[3664] = -1.88761346E+01;
  COFD[3665] = 4.72476764E+00;
  COFD[3666] = -3.96306836E-01;
  COFD[3667] = 1.70964541E-02;
  COFD[3668] = -1.99081518E+01;
  COFD[3669] = 5.09311649E+00;
  COFD[3670] = -4.39965178E-01;
  COFD[3671] = 1.88238537E-02;
  COFD[3672] = -1.96309007E+01;
  COFD[3673] = 4.95923807E+00;
  COFD[3674] = -4.24176182E-01;
  COFD[3675] = 1.82020215E-02;
  COFD[3676] = -1.96408096E+01;
  COFD[3677] = 4.95923807E+00;
  COFD[3678] = -4.24176182E-01;
  COFD[3679] = 1.82020215E-02;
  COFD[3680] = -1.72414795E+01;
  COFD[3681] = 4.29808578E+00;
  COFD[3682] = -3.44235570E-01;
  COFD[3683] = 1.49727727E-02;
  COFD[3684] = -2.12621849E+01;
  COFD[3685] = 5.47935225E+00;
  COFD[3686] = -4.80056796E-01;
  COFD[3687] = 2.01607180E-02;
  COFD[3688] = -2.12680019E+01;
  COFD[3689] = 5.47935225E+00;
  COFD[3690] = -4.80056796E-01;
  COFD[3691] = 2.01607180E-02;
  COFD[3692] = -1.98678674E+01;
  COFD[3693] = 4.95769834E+00;
  COFD[3694] = -4.23993658E-01;
  COFD[3695] = 1.81947960E-02;
  COFD[3696] = -1.98444255E+01;
  COFD[3697] = 4.95769834E+00;
  COFD[3698] = -4.23993658E-01;
  COFD[3699] = 1.81947960E-02;
  COFD[3700] = -2.01223105E+01;
  COFD[3701] = 5.03101171E+00;
  COFD[3702] = -4.32665019E-01;
  COFD[3703] = 1.85372086E-02;
  COFD[3704] = -2.01283319E+01;
  COFD[3705] = 5.03101171E+00;
  COFD[3706] = -4.32665019E-01;
  COFD[3707] = 1.85372086E-02;
  COFD[3708] = -2.01341398E+01;
  COFD[3709] = 5.03101171E+00;
  COFD[3710] = -4.32665019E-01;
  COFD[3711] = 1.85372086E-02;
  COFD[3712] = -2.12151921E+01;
  COFD[3713] = 5.35335833E+00;
  COFD[3714] = -4.69065665E-01;
  COFD[3715] = 1.98989604E-02;
  COFD[3716] = -1.47490941E+01;
  COFD[3717] = 3.39229020E+00;
  COFD[3718] = -2.29520232E-01;
  COFD[3719] = 1.01114311E-02;
  COFD[3720] = -1.60085598E+01;
  COFD[3721] = 3.72220402E+00;
  COFD[3722] = -2.71150591E-01;
  COFD[3723] = 1.18665265E-02;
  COFD[3724] = -1.86961022E+01;
  COFD[3725] = 4.67999453E+00;
  COFD[3726] = -3.91135253E-01;
  COFD[3727] = 1.68982388E-02;
  COFD[3728] = -1.92638665E+01;
  COFD[3729] = 4.84335373E+00;
  COFD[3730] = -4.10212751E-01;
  COFD[3731] = 1.76395874E-02;
  COFD[3732] = -1.92638665E+01;
  COFD[3733] = 4.84335373E+00;
  COFD[3734] = -4.10212751E-01;
  COFD[3735] = 1.76395874E-02;
  COFD[3736] = -1.92580454E+01;
  COFD[3737] = 4.84335373E+00;
  COFD[3738] = -4.10212751E-01;
  COFD[3739] = 1.76395874E-02;
  COFD[3740] = -2.14782205E+01;
  COFD[3741] = 5.56978987E+00;
  COFD[3742] = -4.89141980E-01;
  COFD[3743] = 2.04499210E-02;
  COFD[3744] = -2.12451070E+01;
  COFD[3745] = 5.40444222E+00;
  COFD[3746] = -4.72708609E-01;
  COFD[3747] = 1.99362392E-02;
  COFD[3748] = -2.02646659E+01;
  COFD[3749] = 5.10426133E+00;
  COFD[3750] = -4.41256919E-01;
  COFD[3751] = 1.88737290E-02;
  COFD[3752] = -1.94688845E+01;
  COFD[3753] = 5.43830787E+00;
  COFD[3754] = -4.75472880E-01;
  COFD[3755] = 1.99909996E-02;
  COFD[3756] = -1.90883170E+01;
  COFD[3757] = 4.84384483E+00;
  COFD[3758] = -4.10265575E-01;
  COFD[3759] = 1.76414287E-02;
  COFD[3760] = -1.91102567E+01;
  COFD[3761] = 4.84384483E+00;
  COFD[3762] = -4.10265575E-01;
  COFD[3763] = 1.76414287E-02;
  COFD[3764] = -2.05272244E+01;
  COFD[3765] = 5.18417470E+00;
  COFD[3766] = -4.49491573E-01;
  COFD[3767] = 1.91438508E-02;
  COFD[3768] = -1.57035004E+01;
  COFD[3769] = 3.93614244E+00;
  COFD[3770] = -2.99111497E-01;
  COFD[3771] = 1.30888229E-02;
  COFD[3772] = -1.87383877E+01;
  COFD[3773] = 3.96926341E+00;
  COFD[3774] = -2.16412264E-01;
  COFD[3775] = 6.06012078E-03;
  COFD[3776] = -2.05355943E+01;
  COFD[3777] = 5.18417470E+00;
  COFD[3778] = -4.49491573E-01;
  COFD[3779] = 1.91438508E-02;
  COFD[3780] = -2.05184780E+01;
  COFD[3781] = 5.18417470E+00;
  COFD[3782] = -4.49491573E-01;
  COFD[3783] = 1.91438508E-02;
  COFD[3784] = -2.11606942E+01;
  COFD[3785] = 5.42846112E+00;
  COFD[3786] = -4.74321870E-01;
  COFD[3787] = 1.99459749E-02;
  COFD[3788] = -2.11309194E+01;
  COFD[3789] = 5.41773516E+00;
  COFD[3790] = -4.73414338E-01;
  COFD[3791] = 1.99258685E-02;
  COFD[3792] = -2.00914970E+01;
  COFD[3793] = 4.41511629E+00;
  COFD[3794] = -2.84086963E-01;
  COFD[3795] = 9.37586971E-03;
  COFD[3796] = -2.01015275E+01;
  COFD[3797] = 4.41511629E+00;
  COFD[3798] = -2.84086963E-01;
  COFD[3799] = 9.37586971E-03;
  COFD[3800] = -2.09222393E+01;
  COFD[3801] = 4.82184721E+00;
  COFD[3802] = -3.48128875E-01;
  COFD[3803] = 1.25918978E-02;
  COFD[3804] = -2.03036345E+01;
  COFD[3805] = 4.50250781E+00;
  COFD[3806] = -2.97622106E-01;
  COFD[3807] = 1.00481473E-02;
  COFD[3808] = -2.02922626E+01;
  COFD[3809] = 5.11106992E+00;
  COFD[3810] = -4.42047129E-01;
  COFD[3811] = 1.89042990E-02;
  COFD[3812] = -2.22116629E+01;
  COFD[3813] = 5.54251230E+00;
  COFD[3814] = -4.70946314E-01;
  COFD[3815] = 1.90785869E-02;
  COFD[3816] = -2.21065263E+01;
  COFD[3817] = 5.58360799E+00;
  COFD[3818] = -4.82701436E-01;
  COFD[3819] = 1.98437922E-02;
  COFD[3820] = -2.21181680E+01;
  COFD[3821] = 5.58360799E+00;
  COFD[3822] = -4.82701436E-01;
  COFD[3823] = 1.98437922E-02;
  COFD[3824] = -2.20453687E+01;
  COFD[3825] = 5.44448440E+00;
  COFD[3826] = -4.51529024E-01;
  COFD[3827] = 1.79698119E-02;
  COFD[3828] = -2.22059507E+01;
  COFD[3829] = 5.51722375E+00;
  COFD[3830] = -4.66081431E-01;
  COFD[3831] = 1.88044011E-02;
  COFD[3832] = -2.22159601E+01;
  COFD[3833] = 5.51722375E+00;
  COFD[3834] = -4.66081431E-01;
  COFD[3835] = 1.88044011E-02;
  COFD[3836] = -2.12621849E+01;
  COFD[3837] = 5.47935225E+00;
  COFD[3838] = -4.80056796E-01;
  COFD[3839] = 2.01607180E-02;
  COFD[3840] = -2.09002680E+01;
  COFD[3841] = 4.72895031E+00;
  COFD[3842] = -3.33332771E-01;
  COFD[3843] = 1.18431478E-02;
  COFD[3844] = -2.09061569E+01;
  COFD[3845] = 4.72895031E+00;
  COFD[3846] = -3.33332771E-01;
  COFD[3847] = 1.18431478E-02;
  COFD[3848] = -2.24268993E+01;
  COFD[3849] = 5.51805678E+00;
  COFD[3850] = -4.66245334E-01;
  COFD[3851] = 1.88137363E-02;
  COFD[3852] = -2.24031695E+01;
  COFD[3853] = 5.51805678E+00;
  COFD[3854] = -4.66245334E-01;
  COFD[3855] = 1.88137363E-02;
  COFD[3856] = -2.24554479E+01;
  COFD[3857] = 5.49330641E+00;
  COFD[3858] = -4.60498247E-01;
  COFD[3859] = 1.84639199E-02;
  COFD[3860] = -2.24615428E+01;
  COFD[3861] = 5.49330641E+00;
  COFD[3862] = -4.60498247E-01;
  COFD[3863] = 1.84639199E-02;
  COFD[3864] = -2.24674225E+01;
  COFD[3865] = 5.49330641E+00;
  COFD[3866] = -4.60498247E-01;
  COFD[3867] = 1.84639199E-02;
  COFD[3868] = -2.20355105E+01;
  COFD[3869] = 5.14570932E+00;
  COFD[3870] = -3.99877142E-01;
  COFD[3871] = 1.52199557E-02;
  COFD[3872] = -1.88275407E+01;
  COFD[3873] = 4.71729964E+00;
  COFD[3874] = -3.95432573E-01;
  COFD[3875] = 1.70623691E-02;
  COFD[3876] = -2.02849926E+01;
  COFD[3877] = 5.10426133E+00;
  COFD[3878] = -4.41256919E-01;
  COFD[3879] = 1.88737290E-02;
  COFD[3880] = -2.20848195E+01;
  COFD[3881] = 5.59135292E+00;
  COFD[3882] = -4.85565630E-01;
  COFD[3883] = 2.00429035E-02;
  COFD[3884] = -2.22648022E+01;
  COFD[3885] = 5.57944619E+00;
  COFD[3886] = -4.78032626E-01;
  COFD[3887] = 1.94775370E-02;
  COFD[3888] = -2.22648022E+01;
  COFD[3889] = 5.57944619E+00;
  COFD[3890] = -4.78032626E-01;
  COFD[3891] = 1.94775370E-02;
  COFD[3892] = -2.22589092E+01;
  COFD[3893] = 5.57944619E+00;
  COFD[3894] = -4.78032626E-01;
  COFD[3895] = 1.94775370E-02;
  COFD[3896] = -2.04033902E+01;
  COFD[3897] = 4.50250781E+00;
  COFD[3898] = -2.97622106E-01;
  COFD[3899] = 1.00481473E-02;
  COFD[3900] = -2.12508452E+01;
  COFD[3901] = 5.40444222E+00;
  COFD[3902] = -4.72708609E-01;
  COFD[3903] = 1.99362392E-02;
  COFD[3904] = -2.02693704E+01;
  COFD[3905] = 5.10426133E+00;
  COFD[3906] = -4.41256919E-01;
  COFD[3907] = 1.88737290E-02;
  COFD[3908] = -1.94691588E+01;
  COFD[3909] = 5.43830787E+00;
  COFD[3910] = -4.75472880E-01;
  COFD[3911] = 1.99909996E-02;
  COFD[3912] = -1.90915553E+01;
  COFD[3913] = 4.84384483E+00;
  COFD[3914] = -4.10265575E-01;
  COFD[3915] = 1.76414287E-02;
  COFD[3916] = -1.91136407E+01;
  COFD[3917] = 4.84384483E+00;
  COFD[3918] = -4.10265575E-01;
  COFD[3919] = 1.76414287E-02;
  COFD[3920] = -2.05324009E+01;
  COFD[3921] = 5.18417470E+00;
  COFD[3922] = -4.49491573E-01;
  COFD[3923] = 1.91438508E-02;
  COFD[3924] = -1.57040365E+01;
  COFD[3925] = 3.93614244E+00;
  COFD[3926] = -2.99111497E-01;
  COFD[3927] = 1.30888229E-02;
  COFD[3928] = -1.87419126E+01;
  COFD[3929] = 3.96926341E+00;
  COFD[3930] = -2.16412264E-01;
  COFD[3931] = 6.06012078E-03;
  COFD[3932] = -2.05408587E+01;
  COFD[3933] = 5.18417470E+00;
  COFD[3934] = -4.49491573E-01;
  COFD[3935] = 1.91438508E-02;
  COFD[3936] = -2.05235643E+01;
  COFD[3937] = 5.18417470E+00;
  COFD[3938] = -4.49491573E-01;
  COFD[3939] = 1.91438508E-02;
  COFD[3940] = -2.11637883E+01;
  COFD[3941] = 5.42846112E+00;
  COFD[3942] = -4.74321870E-01;
  COFD[3943] = 1.99459749E-02;
  COFD[3944] = -2.11341641E+01;
  COFD[3945] = 5.41773516E+00;
  COFD[3946] = -4.73414338E-01;
  COFD[3947] = 1.99258685E-02;
  COFD[3948] = -2.00963017E+01;
  COFD[3949] = 4.41511629E+00;
  COFD[3950] = -2.84086963E-01;
  COFD[3951] = 9.37586971E-03;
  COFD[3952] = -2.01064300E+01;
  COFD[3953] = 4.41511629E+00;
  COFD[3954] = -2.84086963E-01;
  COFD[3955] = 9.37586971E-03;
  COFD[3956] = -2.09272370E+01;
  COFD[3957] = 4.82184721E+00;
  COFD[3958] = -3.48128875E-01;
  COFD[3959] = 1.25918978E-02;
  COFD[3960] = -2.03087248E+01;
  COFD[3961] = 4.50250781E+00;
  COFD[3962] = -2.97622106E-01;
  COFD[3963] = 1.00481473E-02;
  COFD[3964] = -2.02969667E+01;
  COFD[3965] = 5.11106992E+00;
  COFD[3966] = -4.42047129E-01;
  COFD[3967] = 1.89042990E-02;
  COFD[3968] = -2.22176875E+01;
  COFD[3969] = 5.54251230E+00;
  COFD[3970] = -4.70946314E-01;
  COFD[3971] = 1.90785869E-02;
  COFD[3972] = -2.21110249E+01;
  COFD[3973] = 5.58360799E+00;
  COFD[3974] = -4.82701436E-01;
  COFD[3975] = 1.98437922E-02;
  COFD[3976] = -2.21227731E+01;
  COFD[3977] = 5.58360799E+00;
  COFD[3978] = -4.82701436E-01;
  COFD[3979] = 1.98437922E-02;
  COFD[3980] = -2.20500773E+01;
  COFD[3981] = 5.44448440E+00;
  COFD[3982] = -4.51529024E-01;
  COFD[3983] = 1.79698119E-02;
  COFD[3984] = -2.22107598E+01;
  COFD[3985] = 5.51722375E+00;
  COFD[3986] = -4.66081431E-01;
  COFD[3987] = 1.88044011E-02;
  COFD[3988] = -2.22208668E+01;
  COFD[3989] = 5.51722375E+00;
  COFD[3990] = -4.66081431E-01;
  COFD[3991] = 1.88044011E-02;
  COFD[3992] = -2.12680019E+01;
  COFD[3993] = 5.47935225E+00;
  COFD[3994] = -4.80056796E-01;
  COFD[3995] = 2.01607180E-02;
  COFD[3996] = -2.09061569E+01;
  COFD[3997] = 4.72895031E+00;
  COFD[3998] = -3.33332771E-01;
  COFD[3999] = 1.18431478E-02;
  COFD[4000] = -2.09121160E+01;
  COFD[4001] = 4.72895031E+00;
  COFD[4002] = -3.33332771E-01;
  COFD[4003] = 1.18431478E-02;
  COFD[4004] = -2.24329269E+01;
  COFD[4005] = 5.51805678E+00;
  COFD[4006] = -4.66245334E-01;
  COFD[4007] = 1.88137363E-02;
  COFD[4008] = -2.24089162E+01;
  COFD[4009] = 5.51805678E+00;
  COFD[4010] = -4.66245334E-01;
  COFD[4011] = 1.88137363E-02;
  COFD[4012] = -2.24612680E+01;
  COFD[4013] = 5.49330641E+00;
  COFD[4014] = -4.60498247E-01;
  COFD[4015] = 1.84639199E-02;
  COFD[4016] = -2.24674347E+01;
  COFD[4017] = 5.49330641E+00;
  COFD[4018] = -4.60498247E-01;
  COFD[4019] = 1.84639199E-02;
  COFD[4020] = -2.24733846E+01;
  COFD[4021] = 5.49330641E+00;
  COFD[4022] = -4.60498247E-01;
  COFD[4023] = 1.84639199E-02;
  COFD[4024] = -2.20422494E+01;
  COFD[4025] = 5.14570932E+00;
  COFD[4026] = -3.99877142E-01;
  COFD[4027] = 1.52199557E-02;
  COFD[4028] = -1.88304756E+01;
  COFD[4029] = 4.71729964E+00;
  COFD[4030] = -3.95432573E-01;
  COFD[4031] = 1.70623691E-02;
  COFD[4032] = -2.02898932E+01;
  COFD[4033] = 5.10426133E+00;
  COFD[4034] = -4.41256919E-01;
  COFD[4035] = 1.88737290E-02;
  COFD[4036] = -2.20909755E+01;
  COFD[4037] = 5.59135292E+00;
  COFD[4038] = -4.85565630E-01;
  COFD[4039] = 2.00429035E-02;
  COFD[4040] = -2.22707599E+01;
  COFD[4041] = 5.57944619E+00;
  COFD[4042] = -4.78032626E-01;
  COFD[4043] = 1.94775370E-02;
  COFD[4044] = -2.22707599E+01;
  COFD[4045] = 5.57944619E+00;
  COFD[4046] = -4.78032626E-01;
  COFD[4047] = 1.94775370E-02;
  COFD[4048] = -2.22647966E+01;
  COFD[4049] = 5.57944619E+00;
  COFD[4050] = -4.78032626E-01;
  COFD[4051] = 1.94775370E-02;
  COFD[4052] = -2.04096115E+01;
  COFD[4053] = 4.50250781E+00;
  COFD[4054] = -2.97622106E-01;
  COFD[4055] = 1.00481473E-02;
  COFD[4056] = -1.97155668E+01;
  COFD[4057] = 4.83069339E+00;
  COFD[4058] = -4.08794086E-01;
  COFD[4059] = 1.75872010E-02;
  COFD[4060] = -1.85159963E+01;
  COFD[4061] = 4.41886064E+00;
  COFD[4062] = -3.59254256E-01;
  COFD[4063] = 1.55974661E-02;
  COFD[4064] = -1.80736227E+01;
  COFD[4065] = 4.91182086E+00;
  COFD[4066] = -4.18511339E-01;
  COFD[4067] = 1.79759141E-02;
  COFD[4068] = -1.74362915E+01;
  COFD[4069] = 4.17761385E+00;
  COFD[4070] = -3.29594803E-01;
  COFD[4071] = 1.43785522E-02;
  COFD[4072] = -1.74585179E+01;
  COFD[4073] = 4.17761385E+00;
  COFD[4074] = -3.29594803E-01;
  COFD[4075] = 1.43785522E-02;
  COFD[4076] = -1.88512637E+01;
  COFD[4077] = 4.53427279E+00;
  COFD[4078] = -3.73213513E-01;
  COFD[4079] = 1.61609973E-02;
  COFD[4080] = -1.41229493E+01;
  COFD[4081] = 3.26291213E+00;
  COFD[4082] = -2.12831025E-01;
  COFD[4083] = 9.39262629E-03;
  COFD[4084] = -2.14597040E+01;
  COFD[4085] = 5.25056135E+00;
  COFD[4086] = -4.17658192E-01;
  COFD[4087] = 1.61554773E-02;
  COFD[4088] = -1.88598070E+01;
  COFD[4089] = 4.53427279E+00;
  COFD[4090] = -3.73213513E-01;
  COFD[4091] = 1.61609973E-02;
  COFD[4092] = -1.88423393E+01;
  COFD[4093] = 4.53427279E+00;
  COFD[4094] = -3.73213513E-01;
  COFD[4095] = 1.61609973E-02;
  COFD[4096] = -1.97157118E+01;
  COFD[4097] = 4.90059208E+00;
  COFD[4098] = -4.17126126E-01;
  COFD[4099] = 1.79186848E-02;
  COFD[4100] = -1.96464488E+01;
  COFD[4101] = 4.87149639E+00;
  COFD[4102] = -4.13544849E-01;
  COFD[4103] = 1.77710516E-02;
  COFD[4104] = -2.21305345E+01;
  COFD[4105] = 5.41958743E+00;
  COFD[4106] = -4.47031040E-01;
  COFD[4107] = 1.77243470E-02;
  COFD[4108] = -2.21407579E+01;
  COFD[4109] = 5.41958743E+00;
  COFD[4110] = -4.47031040E-01;
  COFD[4111] = 1.77243470E-02;
  COFD[4112] = -2.23161833E+01;
  COFD[4113] = 5.55166300E+00;
  COFD[4114] = -4.72702482E-01;
  COFD[4115] = 1.91773349E-02;
  COFD[4116] = -2.22150651E+01;
  COFD[4117] = 5.45297208E+00;
  COFD[4118] = -4.53064157E-01;
  COFD[4119] = 1.80537024E-02;
  COFD[4120] = -1.85444853E+01;
  COFD[4121] = 4.42668307E+00;
  COFD[4122] = -3.60220573E-01;
  COFD[4123] = 1.56373683E-02;
  COFD[4124] = -2.16458314E+01;
  COFD[4125] = 5.41694410E+00;
  COFD[4126] = -4.73389041E-01;
  COFD[4127] = 1.99278645E-02;
  COFD[4128] = -2.12766837E+01;
  COFD[4129] = 5.34173603E+00;
  COFD[4130] = -4.67980991E-01;
  COFD[4131] = 1.98689682E-02;
  COFD[4132] = -2.12885353E+01;
  COFD[4133] = 5.34173603E+00;
  COFD[4134] = -4.67980991E-01;
  COFD[4135] = 1.98689682E-02;
  COFD[4136] = -2.20153774E+01;
  COFD[4137] = 5.55674298E+00;
  COFD[4138] = -4.88067739E-01;
  COFD[4139] = 2.04278640E-02;
  COFD[4140] = -2.17498669E+01;
  COFD[4141] = 5.44645703E+00;
  COFD[4142] = -4.76428229E-01;
  COFD[4143] = 2.00285047E-02;
  COFD[4144] = -2.17600690E+01;
  COFD[4145] = 5.44645703E+00;
  COFD[4146] = -4.76428229E-01;
  COFD[4147] = 2.00285047E-02;
  COFD[4148] = -1.98678674E+01;
  COFD[4149] = 4.95769834E+00;
  COFD[4150] = -4.23993658E-01;
  COFD[4151] = 1.81947960E-02;
  COFD[4152] = -2.24268993E+01;
  COFD[4153] = 5.51805678E+00;
  COFD[4154] = -4.66245334E-01;
  COFD[4155] = 1.88137363E-02;
  COFD[4156] = -2.24329269E+01;
  COFD[4157] = 5.51805678E+00;
  COFD[4158] = -4.66245334E-01;
  COFD[4159] = 1.88137363E-02;
  COFD[4160] = -2.19581328E+01;
  COFD[4161] = 5.44470367E+00;
  COFD[4162] = -4.76221201E-01;
  COFD[4163] = 2.00203068E-02;
  COFD[4164] = -2.19338477E+01;
  COFD[4165] = 5.44470367E+00;
  COFD[4166] = -4.76221201E-01;
  COFD[4167] = 2.00203068E-02;
  COFD[4168] = -2.21917451E+01;
  COFD[4169] = 5.51146842E+00;
  COFD[4170] = -4.83562214E-01;
  COFD[4171] = 2.02866024E-02;
  COFD[4172] = -2.21979820E+01;
  COFD[4173] = 5.51146842E+00;
  COFD[4174] = -4.83562214E-01;
  COFD[4175] = 2.02866024E-02;
  COFD[4176] = -2.22040003E+01;
  COFD[4177] = 5.51146842E+00;
  COFD[4178] = -4.83562214E-01;
  COFD[4179] = 2.02866024E-02;
  COFD[4180] = -2.27209132E+01;
  COFD[4181] = 5.58204407E+00;
  COFD[4182] = -4.83002356E-01;
  COFD[4183] = 1.98770691E-02;
  COFD[4184] = -1.71740753E+01;
  COFD[4185] = 4.04958641E+00;
  COFD[4186] = -3.13664243E-01;
  COFD[4187] = 1.37144097E-02;
  COFD[4188] = -1.85367099E+01;
  COFD[4189] = 4.41886064E+00;
  COFD[4190] = -3.59254256E-01;
  COFD[4191] = 1.55974661E-02;
  COFD[4192] = -2.11249323E+01;
  COFD[4193] = 5.28304555E+00;
  COFD[4194] = -4.61095222E-01;
  COFD[4195] = 1.95986518E-02;
  COFD[4196] = -2.15712184E+01;
  COFD[4197] = 5.39732073E+00;
  COFD[4198] = -4.72235834E-01;
  COFD[4199] = 1.99338718E-02;
  COFD[4200] = -2.15712184E+01;
  COFD[4201] = 5.39732073E+00;
  COFD[4202] = -4.72235834E-01;
  COFD[4203] = 1.99338718E-02;
  COFD[4204] = -2.15651865E+01;
  COFD[4205] = 5.39732073E+00;
  COFD[4206] = -4.72235834E-01;
  COFD[4207] = 1.99338718E-02;
  COFD[4208] = -2.23170553E+01;
  COFD[4209] = 5.45297208E+00;
  COFD[4210] = -4.53064157E-01;
  COFD[4211] = 1.80537024E-02;
  COFD[4212] = -1.96924408E+01;
  COFD[4213] = 4.83069339E+00;
  COFD[4214] = -4.08794086E-01;
  COFD[4215] = 1.75872010E-02;
  COFD[4216] = -1.84970149E+01;
  COFD[4217] = 4.41886064E+00;
  COFD[4218] = -3.59254256E-01;
  COFD[4219] = 1.55974661E-02;
  COFD[4220] = -1.80725106E+01;
  COFD[4221] = 4.91182086E+00;
  COFD[4222] = -4.18511339E-01;
  COFD[4223] = 1.79759141E-02;
  COFD[4224] = -1.74232048E+01;
  COFD[4225] = 4.17761385E+00;
  COFD[4226] = -3.29594803E-01;
  COFD[4227] = 1.43785522E-02;
  COFD[4228] = -1.74448444E+01;
  COFD[4229] = 4.17761385E+00;
  COFD[4230] = -3.29594803E-01;
  COFD[4231] = 1.43785522E-02;
  COFD[4232] = -1.88303884E+01;
  COFD[4233] = 4.53427279E+00;
  COFD[4234] = -3.73213513E-01;
  COFD[4235] = 1.61609973E-02;
  COFD[4236] = -1.41207761E+01;
  COFD[4237] = 3.26291213E+00;
  COFD[4238] = -2.12831025E-01;
  COFD[4239] = 9.39262629E-03;
  COFD[4240] = -2.14454635E+01;
  COFD[4241] = 5.25056135E+00;
  COFD[4242] = -4.17658192E-01;
  COFD[4243] = 1.61554773E-02;
  COFD[4244] = -1.88385796E+01;
  COFD[4245] = 4.53427279E+00;
  COFD[4246] = -3.73213513E-01;
  COFD[4247] = 1.61609973E-02;
  COFD[4248] = -1.88218258E+01;
  COFD[4249] = 4.53427279E+00;
  COFD[4250] = -3.73213513E-01;
  COFD[4251] = 1.61609973E-02;
  COFD[4252] = -1.97032058E+01;
  COFD[4253] = 4.90059208E+00;
  COFD[4254] = -4.17126126E-01;
  COFD[4255] = 1.79186848E-02;
  COFD[4256] = -1.96333360E+01;
  COFD[4257] = 4.87149639E+00;
  COFD[4258] = -4.13544849E-01;
  COFD[4259] = 1.77710516E-02;
  COFD[4260] = -2.21111508E+01;
  COFD[4261] = 5.41958743E+00;
  COFD[4262] = -4.47031040E-01;
  COFD[4263] = 1.77243470E-02;
  COFD[4264] = -2.21209816E+01;
  COFD[4265] = 5.41958743E+00;
  COFD[4266] = -4.47031040E-01;
  COFD[4267] = 1.77243470E-02;
  COFD[4268] = -2.22960253E+01;
  COFD[4269] = 5.55166300E+00;
  COFD[4270] = -4.72702482E-01;
  COFD[4271] = 1.91773349E-02;
  COFD[4272] = -2.21945357E+01;
  COFD[4273] = 5.45297208E+00;
  COFD[4274] = -4.53064157E-01;
  COFD[4275] = 1.80537024E-02;
  COFD[4276] = -1.85255055E+01;
  COFD[4277] = 4.42668307E+00;
  COFD[4278] = -3.60220573E-01;
  COFD[4279] = 1.56373683E-02;
  COFD[4280] = -2.16215581E+01;
  COFD[4281] = 5.41694410E+00;
  COFD[4282] = -4.73389041E-01;
  COFD[4283] = 1.99278645E-02;
  COFD[4284] = -2.12585287E+01;
  COFD[4285] = 5.34173603E+00;
  COFD[4286] = -4.67980991E-01;
  COFD[4287] = 1.98689682E-02;
  COFD[4288] = -2.12699528E+01;
  COFD[4289] = 5.34173603E+00;
  COFD[4290] = -4.67980991E-01;
  COFD[4291] = 1.98689682E-02;
  COFD[4292] = -2.19963797E+01;
  COFD[4293] = 5.55674298E+00;
  COFD[4294] = -4.88067739E-01;
  COFD[4295] = 2.04278640E-02;
  COFD[4296] = -2.17304659E+01;
  COFD[4297] = 5.44645703E+00;
  COFD[4298] = -4.76428229E-01;
  COFD[4299] = 2.00285047E-02;
  COFD[4300] = -2.17402758E+01;
  COFD[4301] = 5.44645703E+00;
  COFD[4302] = -4.76428229E-01;
  COFD[4303] = 2.00285047E-02;
  COFD[4304] = -1.98444255E+01;
  COFD[4305] = 4.95769834E+00;
  COFD[4306] = -4.23993658E-01;
  COFD[4307] = 1.81947960E-02;
  COFD[4308] = -2.24031695E+01;
  COFD[4309] = 5.51805678E+00;
  COFD[4310] = -4.66245334E-01;
  COFD[4311] = 1.88137363E-02;
  COFD[4312] = -2.24089162E+01;
  COFD[4313] = 5.51805678E+00;
  COFD[4314] = -4.66245334E-01;
  COFD[4315] = 1.88137363E-02;
  COFD[4316] = -2.19338477E+01;
  COFD[4317] = 5.44470367E+00;
  COFD[4318] = -4.76221201E-01;
  COFD[4319] = 2.00203068E-02;
  COFD[4320] = -2.19106877E+01;
  COFD[4321] = 5.44470367E+00;
  COFD[4322] = -4.76221201E-01;
  COFD[4323] = 2.00203068E-02;
  COFD[4324] = -2.21682905E+01;
  COFD[4325] = 5.51146842E+00;
  COFD[4326] = -4.83562214E-01;
  COFD[4327] = 2.02866024E-02;
  COFD[4328] = -2.21742398E+01;
  COFD[4329] = 5.51146842E+00;
  COFD[4330] = -4.83562214E-01;
  COFD[4331] = 2.02866024E-02;
  COFD[4332] = -2.21799775E+01;
  COFD[4333] = 5.51146842E+00;
  COFD[4334] = -4.83562214E-01;
  COFD[4335] = 2.02866024E-02;
  COFD[4336] = -2.26937831E+01;
  COFD[4337] = 5.58204407E+00;
  COFD[4338] = -4.83002356E-01;
  COFD[4339] = 1.98770691E-02;
  COFD[4340] = -1.71622104E+01;
  COFD[4341] = 4.04958641E+00;
  COFD[4342] = -3.13664243E-01;
  COFD[4343] = 1.37144097E-02;
  COFD[4344] = -1.85169413E+01;
  COFD[4345] = 4.41886064E+00;
  COFD[4346] = -3.59254256E-01;
  COFD[4347] = 1.55974661E-02;
  COFD[4348] = -2.11001336E+01;
  COFD[4349] = 5.28304555E+00;
  COFD[4350] = -4.61095222E-01;
  COFD[4351] = 1.95986518E-02;
  COFD[4352] = -2.15472132E+01;
  COFD[4353] = 5.39732073E+00;
  COFD[4354] = -4.72235834E-01;
  COFD[4355] = 1.99338718E-02;
  COFD[4356] = -2.15472132E+01;
  COFD[4357] = 5.39732073E+00;
  COFD[4358] = -4.72235834E-01;
  COFD[4359] = 1.99338718E-02;
  COFD[4360] = -2.15414624E+01;
  COFD[4361] = 5.39732073E+00;
  COFD[4362] = -4.72235834E-01;
  COFD[4363] = 1.99338718E-02;
  COFD[4364] = -2.22919953E+01;
  COFD[4365] = 5.45297208E+00;
  COFD[4366] = -4.53064157E-01;
  COFD[4367] = 1.80537024E-02;
  COFD[4368] = -1.99687862E+01;
  COFD[4369] = 4.90643348E+00;
  COFD[4370] = -4.17847566E-01;
  COFD[4371] = 1.79485301E-02;
  COFD[4372] = -1.87434421E+01;
  COFD[4373] = 4.48550694E+00;
  COFD[4374] = -3.67277454E-01;
  COFD[4375] = 1.59194755E-02;
  COFD[4376] = -1.83539845E+01;
  COFD[4377] = 4.98756925E+00;
  COFD[4378] = -4.27526072E-01;
  COFD[4379] = 1.83341755E-02;
  COFD[4380] = -1.76774947E+01;
  COFD[4381] = 4.24719726E+00;
  COFD[4382] = -3.38206061E-01;
  COFD[4383] = 1.47350654E-02;
  COFD[4384] = -1.76992903E+01;
  COFD[4385] = 4.24719726E+00;
  COFD[4386] = -3.38206061E-01;
  COFD[4387] = 1.47350654E-02;
  COFD[4388] = -1.91208247E+01;
  COFD[4389] = 4.61801405E+00;
  COFD[4390] = -3.83535652E-01;
  COFD[4391] = 1.65862513E-02;
  COFD[4392] = -1.43129867E+01;
  COFD[4393] = 3.31177824E+00;
  COFD[4394] = -2.18945280E-01;
  COFD[4395] = 9.64764419E-03;
  COFD[4396] = -2.13847376E+01;
  COFD[4397] = 5.17440955E+00;
  COFD[4398] = -4.04678430E-01;
  COFD[4399] = 1.54706350E-02;
  COFD[4400] = -1.91291085E+01;
  COFD[4401] = 4.61801405E+00;
  COFD[4402] = -3.83535652E-01;
  COFD[4403] = 1.65862513E-02;
  COFD[4404] = -1.91121670E+01;
  COFD[4405] = 4.61801405E+00;
  COFD[4406] = -3.83535652E-01;
  COFD[4407] = 1.65862513E-02;
  COFD[4408] = -1.99803480E+01;
  COFD[4409] = 4.97875278E+00;
  COFD[4410] = -4.26485475E-01;
  COFD[4411] = 1.82931933E-02;
  COFD[4412] = -1.99235836E+01;
  COFD[4413] = 4.95514826E+00;
  COFD[4414] = -4.23691395E-01;
  COFD[4415] = 1.81828318E-02;
  COFD[4416] = -2.20848512E+01;
  COFD[4417] = 5.36053938E+00;
  COFD[4418] = -4.36434519E-01;
  COFD[4419] = 1.71484255E-02;
  COFD[4420] = -2.20947854E+01;
  COFD[4421] = 5.36053938E+00;
  COFD[4422] = -4.36434519E-01;
  COFD[4423] = 1.71484255E-02;
  COFD[4424] = -2.23054103E+01;
  COFD[4425] = 5.50872500E+00;
  COFD[4426] = -4.64427323E-01;
  COFD[4427] = 1.87105612E-02;
  COFD[4428] = -2.21793407E+01;
  COFD[4429] = 5.39861129E+00;
  COFD[4430] = -4.43119198E-01;
  COFD[4431] = 1.75075657E-02;
  COFD[4432] = -1.87684982E+01;
  COFD[4433] = 4.49191492E+00;
  COFD[4434] = -3.68041771E-01;
  COFD[4435] = 1.59498676E-02;
  COFD[4436] = -2.18590684E+01;
  COFD[4437] = 5.47368915E+00;
  COFD[4438] = -4.79424291E-01;
  COFD[4439] = 2.01372920E-02;
  COFD[4440] = -2.14323161E+01;
  COFD[4441] = 5.37331605E+00;
  COFD[4442] = -4.70491203E-01;
  COFD[4443] = 1.99134666E-02;
  COFD[4444] = -2.14438531E+01;
  COFD[4445] = 5.37331605E+00;
  COFD[4446] = -4.70491203E-01;
  COFD[4447] = 1.99134666E-02;
  COFD[4448] = -2.21885121E+01;
  COFD[4449] = 5.59472344E+00;
  COFD[4450] = -4.91421518E-01;
  COFD[4451] = 2.05117088E-02;
  COFD[4452] = -2.19883773E+01;
  COFD[4453] = 5.51276597E+00;
  COFD[4454] = -4.83701824E-01;
  COFD[4455] = 2.02915297E-02;
  COFD[4456] = -2.19982906E+01;
  COFD[4457] = 5.51276597E+00;
  COFD[4458] = -4.83701824E-01;
  COFD[4459] = 2.02915297E-02;
  COFD[4460] = -2.01223105E+01;
  COFD[4461] = 5.03101171E+00;
  COFD[4462] = -4.32665019E-01;
  COFD[4463] = 1.85372086E-02;
  COFD[4464] = -2.24554479E+01;
  COFD[4465] = 5.49330641E+00;
  COFD[4466] = -4.60498247E-01;
  COFD[4467] = 1.84639199E-02;
  COFD[4468] = -2.24612680E+01;
  COFD[4469] = 5.49330641E+00;
  COFD[4470] = -4.60498247E-01;
  COFD[4471] = 1.84639199E-02;
  COFD[4472] = -2.21917451E+01;
  COFD[4473] = 5.51146842E+00;
  COFD[4474] = -4.83562214E-01;
  COFD[4475] = 2.02866024E-02;
  COFD[4476] = -2.21682905E+01;
  COFD[4477] = 5.51146842E+00;
  COFD[4478] = -4.83562214E-01;
  COFD[4479] = 2.02866024E-02;
  COFD[4480] = -2.23842793E+01;
  COFD[4481] = 5.56066804E+00;
  COFD[4482] = -4.88405706E-01;
  COFD[4483] = 2.04357330E-02;
  COFD[4484] = -2.23903039E+01;
  COFD[4485] = 5.56066804E+00;
  COFD[4486] = -4.88405706E-01;
  COFD[4487] = 2.04357330E-02;
  COFD[4488] = -2.23961150E+01;
  COFD[4489] = 5.56066804E+00;
  COFD[4490] = -4.88405706E-01;
  COFD[4491] = 2.04357330E-02;
  COFD[4492] = -2.28056945E+01;
  COFD[4493] = 5.58523510E+00;
  COFD[4494] = -4.81201481E-01;
  COFD[4495] = 1.97107111E-02;
  COFD[4496] = -1.74072739E+01;
  COFD[4497] = 4.11838823E+00;
  COFD[4498] = -3.22329602E-01;
  COFD[4499] = 1.40802468E-02;
  COFD[4500] = -1.87635759E+01;
  COFD[4501] = 4.48550694E+00;
  COFD[4502] = -3.67277454E-01;
  COFD[4503] = 1.59194755E-02;
  COFD[4504] = -2.13633121E+01;
  COFD[4505] = 5.35135690E+00;
  COFD[4506] = -4.68903699E-01;
  COFD[4507] = 1.98958921E-02;
  COFD[4508] = -2.17012465E+01;
  COFD[4509] = 5.41948945E+00;
  COFD[4510] = -4.73474138E-01;
  COFD[4511] = 1.99217500E-02;
  COFD[4512] = -2.17012465E+01;
  COFD[4513] = 5.41948945E+00;
  COFD[4514] = -4.73474138E-01;
  COFD[4515] = 1.99217500E-02;
  COFD[4516] = -2.16954222E+01;
  COFD[4517] = 5.41948945E+00;
  COFD[4518] = -4.73474138E-01;
  COFD[4519] = 1.99217500E-02;
  COFD[4520] = -2.22779882E+01;
  COFD[4521] = 5.39861129E+00;
  COFD[4522] = -4.43119198E-01;
  COFD[4523] = 1.75075657E-02;
  COFD[4524] = -1.99747268E+01;
  COFD[4525] = 4.90643348E+00;
  COFD[4526] = -4.17847566E-01;
  COFD[4527] = 1.79485301E-02;
  COFD[4528] = -1.87483223E+01;
  COFD[4529] = 4.48550694E+00;
  COFD[4530] = -3.67277454E-01;
  COFD[4531] = 1.59194755E-02;
  COFD[4532] = -1.83542714E+01;
  COFD[4533] = 4.98756925E+00;
  COFD[4534] = -4.27526072E-01;
  COFD[4535] = 1.83341755E-02;
  COFD[4536] = -1.76808635E+01;
  COFD[4537] = 4.24719726E+00;
  COFD[4538] = -3.38206061E-01;
  COFD[4539] = 1.47350654E-02;
  COFD[4540] = -1.77028097E+01;
  COFD[4541] = 4.24719726E+00;
  COFD[4542] = -3.38206061E-01;
  COFD[4543] = 1.47350654E-02;
  COFD[4544] = -1.91261897E+01;
  COFD[4545] = 4.61801405E+00;
  COFD[4546] = -3.83535652E-01;
  COFD[4547] = 1.65862513E-02;
  COFD[4548] = -1.43135474E+01;
  COFD[4549] = 3.31177824E+00;
  COFD[4550] = -2.18945280E-01;
  COFD[4551] = 9.64764419E-03;
  COFD[4552] = -2.13884026E+01;
  COFD[4553] = 5.17440955E+00;
  COFD[4554] = -4.04678430E-01;
  COFD[4555] = 1.54706350E-02;
  COFD[4556] = -1.91345636E+01;
  COFD[4557] = 4.61801405E+00;
  COFD[4558] = -3.83535652E-01;
  COFD[4559] = 1.65862513E-02;
  COFD[4560] = -1.91174394E+01;
  COFD[4561] = 4.61801405E+00;
  COFD[4562] = -3.83535652E-01;
  COFD[4563] = 1.65862513E-02;
  COFD[4564] = -1.99835677E+01;
  COFD[4565] = 4.97875278E+00;
  COFD[4566] = -4.26485475E-01;
  COFD[4567] = 1.82931933E-02;
  COFD[4568] = -1.99269591E+01;
  COFD[4569] = 4.95514826E+00;
  COFD[4570] = -4.23691395E-01;
  COFD[4571] = 1.81828318E-02;
  COFD[4572] = -2.20898344E+01;
  COFD[4573] = 5.36053938E+00;
  COFD[4574] = -4.36434519E-01;
  COFD[4575] = 1.71484255E-02;
  COFD[4576] = -2.20998692E+01;
  COFD[4577] = 5.36053938E+00;
  COFD[4578] = -4.36434519E-01;
  COFD[4579] = 1.71484255E-02;
  COFD[4580] = -2.23105918E+01;
  COFD[4581] = 5.50872500E+00;
  COFD[4582] = -4.64427323E-01;
  COFD[4583] = 1.87105612E-02;
  COFD[4584] = -2.21846173E+01;
  COFD[4585] = 5.39861129E+00;
  COFD[4586] = -4.43119198E-01;
  COFD[4587] = 1.75075657E-02;
  COFD[4588] = -1.87733780E+01;
  COFD[4589] = 4.49191492E+00;
  COFD[4590] = -3.68041771E-01;
  COFD[4591] = 1.59498676E-02;
  COFD[4592] = -2.18653022E+01;
  COFD[4593] = 5.47368915E+00;
  COFD[4594] = -4.79424291E-01;
  COFD[4595] = 2.01372920E-02;
  COFD[4596] = -2.14369847E+01;
  COFD[4597] = 5.37331605E+00;
  COFD[4598] = -4.70491203E-01;
  COFD[4599] = 1.99134666E-02;
  COFD[4600] = -2.14486311E+01;
  COFD[4601] = 5.37331605E+00;
  COFD[4602] = -4.70491203E-01;
  COFD[4603] = 1.99134666E-02;
  COFD[4604] = -2.21933965E+01;
  COFD[4605] = 5.59472344E+00;
  COFD[4606] = -4.91421518E-01;
  COFD[4607] = 2.05117088E-02;
  COFD[4608] = -2.19933650E+01;
  COFD[4609] = 5.51276597E+00;
  COFD[4610] = -4.83701824E-01;
  COFD[4611] = 2.02915297E-02;
  COFD[4612] = -2.20033786E+01;
  COFD[4613] = 5.51276597E+00;
  COFD[4614] = -4.83701824E-01;
  COFD[4615] = 2.02915297E-02;
  COFD[4616] = -2.01283319E+01;
  COFD[4617] = 5.03101171E+00;
  COFD[4618] = -4.32665019E-01;
  COFD[4619] = 1.85372086E-02;
  COFD[4620] = -2.24615428E+01;
  COFD[4621] = 5.49330641E+00;
  COFD[4622] = -4.60498247E-01;
  COFD[4623] = 1.84639199E-02;
  COFD[4624] = -2.24674347E+01;
  COFD[4625] = 5.49330641E+00;
  COFD[4626] = -4.60498247E-01;
  COFD[4627] = 1.84639199E-02;
  COFD[4628] = -2.21979820E+01;
  COFD[4629] = 5.51146842E+00;
  COFD[4630] = -4.83562214E-01;
  COFD[4631] = 2.02866024E-02;
  COFD[4632] = -2.21742398E+01;
  COFD[4633] = 5.51146842E+00;
  COFD[4634] = -4.83562214E-01;
  COFD[4635] = 2.02866024E-02;
  COFD[4636] = -2.23903039E+01;
  COFD[4637] = 5.56066804E+00;
  COFD[4638] = -4.88405706E-01;
  COFD[4639] = 2.04357330E-02;
  COFD[4640] = -2.23964020E+01;
  COFD[4641] = 5.56066804E+00;
  COFD[4642] = -4.88405706E-01;
  COFD[4643] = 2.04357330E-02;
  COFD[4644] = -2.24022848E+01;
  COFD[4645] = 5.56066804E+00;
  COFD[4646] = -4.88405706E-01;
  COFD[4647] = 2.04357330E-02;
  COFD[4648] = -2.28126577E+01;
  COFD[4649] = 5.58523510E+00;
  COFD[4650] = -4.81201481E-01;
  COFD[4651] = 1.97107111E-02;
  COFD[4652] = -1.74103290E+01;
  COFD[4653] = 4.11838823E+00;
  COFD[4654] = -3.22329602E-01;
  COFD[4655] = 1.40802468E-02;
  COFD[4656] = -1.87686577E+01;
  COFD[4657] = 4.48550694E+00;
  COFD[4658] = -3.67277454E-01;
  COFD[4659] = 1.59194755E-02;
  COFD[4660] = -2.13696801E+01;
  COFD[4661] = 5.35135690E+00;
  COFD[4662] = -4.68903699E-01;
  COFD[4663] = 1.98958921E-02;
  COFD[4664] = -2.17074118E+01;
  COFD[4665] = 5.41948945E+00;
  COFD[4666] = -4.73474138E-01;
  COFD[4667] = 1.99217500E-02;
  COFD[4668] = -2.17074118E+01;
  COFD[4669] = 5.41948945E+00;
  COFD[4670] = -4.73474138E-01;
  COFD[4671] = 1.99217500E-02;
  COFD[4672] = -2.17015156E+01;
  COFD[4673] = 5.41948945E+00;
  COFD[4674] = -4.73474138E-01;
  COFD[4675] = 1.99217500E-02;
  COFD[4676] = -2.22844229E+01;
  COFD[4677] = 5.39861129E+00;
  COFD[4678] = -4.43119198E-01;
  COFD[4679] = 1.75075657E-02;
  COFD[4680] = -1.99804559E+01;
  COFD[4681] = 4.90643348E+00;
  COFD[4682] = -4.17847566E-01;
  COFD[4683] = 1.79485301E-02;
  COFD[4684] = -1.87530190E+01;
  COFD[4685] = 4.48550694E+00;
  COFD[4686] = -3.67277454E-01;
  COFD[4687] = 1.59194755E-02;
  COFD[4688] = -1.83545451E+01;
  COFD[4689] = 4.98756925E+00;
  COFD[4690] = -4.27526072E-01;
  COFD[4691] = 1.83341755E-02;
  COFD[4692] = -1.76840960E+01;
  COFD[4693] = 4.24719726E+00;
  COFD[4694] = -3.38206061E-01;
  COFD[4695] = 1.47350654E-02;
  COFD[4696] = -1.77061877E+01;
  COFD[4697] = 4.24719726E+00;
  COFD[4698] = -3.38206061E-01;
  COFD[4699] = 1.47350654E-02;
  COFD[4700] = -1.91313579E+01;
  COFD[4701] = 4.61801405E+00;
  COFD[4702] = -3.83535652E-01;
  COFD[4703] = 1.65862513E-02;
  COFD[4704] = -1.43140824E+01;
  COFD[4705] = 3.31177824E+00;
  COFD[4706] = -2.18945280E-01;
  COFD[4707] = 9.64764419E-03;
  COFD[4708] = -2.13919213E+01;
  COFD[4709] = 5.17440955E+00;
  COFD[4710] = -4.04678430E-01;
  COFD[4711] = 1.54706350E-02;
  COFD[4712] = -1.91398195E+01;
  COFD[4713] = 4.61801405E+00;
  COFD[4714] = -3.83535652E-01;
  COFD[4715] = 1.65862513E-02;
  COFD[4716] = -1.91225175E+01;
  COFD[4717] = 4.61801405E+00;
  COFD[4718] = -3.83535652E-01;
  COFD[4719] = 1.65862513E-02;
  COFD[4720] = -1.99866562E+01;
  COFD[4721] = 4.97875278E+00;
  COFD[4722] = -4.26485475E-01;
  COFD[4723] = 1.82931933E-02;
  COFD[4724] = -1.99301980E+01;
  COFD[4725] = 4.95514826E+00;
  COFD[4726] = -4.23691395E-01;
  COFD[4727] = 1.81828318E-02;
  COFD[4728] = -2.20946312E+01;
  COFD[4729] = 5.36053938E+00;
  COFD[4730] = -4.36434519E-01;
  COFD[4731] = 1.71484255E-02;
  COFD[4732] = -2.21047637E+01;
  COFD[4733] = 5.36053938E+00;
  COFD[4734] = -4.36434519E-01;
  COFD[4735] = 1.71484255E-02;
  COFD[4736] = -2.23155813E+01;
  COFD[4737] = 5.50872500E+00;
  COFD[4738] = -4.64427323E-01;
  COFD[4739] = 1.87105612E-02;
  COFD[4740] = -2.21896993E+01;
  COFD[4741] = 5.39861129E+00;
  COFD[4742] = -4.43119198E-01;
  COFD[4743] = 1.75075657E-02;
  COFD[4744] = -1.87780743E+01;
  COFD[4745] = 4.49191492E+00;
  COFD[4746] = -3.68041771E-01;
  COFD[4747] = 1.59498676E-02;
  COFD[4748] = -2.18713176E+01;
  COFD[4749] = 5.47368915E+00;
  COFD[4750] = -4.79424291E-01;
  COFD[4751] = 2.01372920E-02;
  COFD[4752] = -2.14414758E+01;
  COFD[4753] = 5.37331605E+00;
  COFD[4754] = -4.70491203E-01;
  COFD[4755] = 1.99134666E-02;
  COFD[4756] = -2.14532286E+01;
  COFD[4757] = 5.37331605E+00;
  COFD[4758] = -4.70491203E-01;
  COFD[4759] = 1.99134666E-02;
  COFD[4760] = -2.21980972E+01;
  COFD[4761] = 5.59472344E+00;
  COFD[4762] = -4.91421518E-01;
  COFD[4763] = 2.05117088E-02;
  COFD[4764] = -2.19981661E+01;
  COFD[4765] = 5.51276597E+00;
  COFD[4766] = -4.83701824E-01;
  COFD[4767] = 2.02915297E-02;
  COFD[4768] = -2.20082773E+01;
  COFD[4769] = 5.51276597E+00;
  COFD[4770] = -4.83701824E-01;
  COFD[4771] = 2.02915297E-02;
  COFD[4772] = -2.01341398E+01;
  COFD[4773] = 5.03101171E+00;
  COFD[4774] = -4.32665019E-01;
  COFD[4775] = 1.85372086E-02;
  COFD[4776] = -2.24674225E+01;
  COFD[4777] = 5.49330641E+00;
  COFD[4778] = -4.60498247E-01;
  COFD[4779] = 1.84639199E-02;
  COFD[4780] = -2.24733846E+01;
  COFD[4781] = 5.49330641E+00;
  COFD[4782] = -4.60498247E-01;
  COFD[4783] = 1.84639199E-02;
  COFD[4784] = -2.22040003E+01;
  COFD[4785] = 5.51146842E+00;
  COFD[4786] = -4.83562214E-01;
  COFD[4787] = 2.02866024E-02;
  COFD[4788] = -2.21799775E+01;
  COFD[4789] = 5.51146842E+00;
  COFD[4790] = -4.83562214E-01;
  COFD[4791] = 2.02866024E-02;
  COFD[4792] = -2.23961150E+01;
  COFD[4793] = 5.56066804E+00;
  COFD[4794] = -4.88405706E-01;
  COFD[4795] = 2.04357330E-02;
  COFD[4796] = -2.24022848E+01;
  COFD[4797] = 5.56066804E+00;
  COFD[4798] = -4.88405706E-01;
  COFD[4799] = 2.04357330E-02;
  COFD[4800] = -2.24082377E+01;
  COFD[4801] = 5.56066804E+00;
  COFD[4802] = -4.88405706E-01;
  COFD[4803] = 2.04357330E-02;
  COFD[4804] = -2.28193866E+01;
  COFD[4805] = 5.58523510E+00;
  COFD[4806] = -4.81201481E-01;
  COFD[4807] = 1.97107111E-02;
  COFD[4808] = -1.74132586E+01;
  COFD[4809] = 4.11838823E+00;
  COFD[4810] = -3.22329602E-01;
  COFD[4811] = 1.40802468E-02;
  COFD[4812] = -1.87735503E+01;
  COFD[4813] = 4.48550694E+00;
  COFD[4814] = -3.67277454E-01;
  COFD[4815] = 1.59194755E-02;
  COFD[4816] = -2.13758266E+01;
  COFD[4817] = 5.35135690E+00;
  COFD[4818] = -4.68903699E-01;
  COFD[4819] = 1.98958921E-02;
  COFD[4820] = -2.17133603E+01;
  COFD[4821] = 5.41948945E+00;
  COFD[4822] = -4.73474138E-01;
  COFD[4823] = 1.99217500E-02;
  COFD[4824] = -2.17133603E+01;
  COFD[4825] = 5.41948945E+00;
  COFD[4826] = -4.73474138E-01;
  COFD[4827] = 1.99217500E-02;
  COFD[4828] = -2.17073940E+01;
  COFD[4829] = 5.41948945E+00;
  COFD[4830] = -4.73474138E-01;
  COFD[4831] = 1.99217500E-02;
  COFD[4832] = -2.22906347E+01;
  COFD[4833] = 5.39861129E+00;
  COFD[4834] = -4.43119198E-01;
  COFD[4835] = 1.75075657E-02;
  COFD[4836] = -2.10640502E+01;
  COFD[4837] = 5.23527231E+00;
  COFD[4838] = -4.55448724E-01;
  COFD[4839] = 1.93756364E-02;
  COFD[4840] = -1.98610465E+01;
  COFD[4841] = 4.84231878E+00;
  COFD[4842] = -4.10101001E-01;
  COFD[4843] = 1.76356687E-02;
  COFD[4844] = -1.94091316E+01;
  COFD[4845] = 5.32291505E+00;
  COFD[4846] = -4.65883522E-01;
  COFD[4847] = 1.97916109E-02;
  COFD[4848] = -1.87878758E+01;
  COFD[4849] = 4.61260432E+00;
  COFD[4850] = -3.82854484E-01;
  COFD[4851] = 1.65575163E-02;
  COFD[4852] = -1.88114840E+01;
  COFD[4853] = 4.61260432E+00;
  COFD[4854] = -3.82854484E-01;
  COFD[4855] = 1.65575163E-02;
  COFD[4856] = -2.02566153E+01;
  COFD[4857] = 4.97613338E+00;
  COFD[4858] = -4.26175206E-01;
  COFD[4859] = 1.82809270E-02;
  COFD[4860] = -1.52614345E+01;
  COFD[4861] = 3.64565939E+00;
  COFD[4862] = -2.61726871E-01;
  COFD[4863] = 1.14799244E-02;
  COFD[4864] = -2.03437771E+01;
  COFD[4865] = 4.57152878E+00;
  COFD[4866] = -3.08371263E-01;
  COFD[4867] = 1.05838559E-02;
  COFD[4868] = -2.02660328E+01;
  COFD[4869] = 4.97613338E+00;
  COFD[4870] = -4.26175206E-01;
  COFD[4871] = 1.82809270E-02;
  COFD[4872] = -2.02467952E+01;
  COFD[4873] = 4.97613338E+00;
  COFD[4874] = -4.26175206E-01;
  COFD[4875] = 1.82809270E-02;
  COFD[4876] = -2.10572526E+01;
  COFD[4877] = 5.31360223E+00;
  COFD[4878] = -4.64787000E-01;
  COFD[4879] = 1.97483720E-02;
  COFD[4880] = -2.09912989E+01;
  COFD[4881] = 5.28557747E+00;
  COFD[4882] = -4.61402384E-01;
  COFD[4883] = 1.96111546E-02;
  COFD[4884] = -2.13240709E+01;
  COFD[4885] = 4.87252053E+00;
  COFD[4886] = -3.56127804E-01;
  COFD[4887] = 1.29948788E-02;
  COFD[4888] = -2.13352587E+01;
  COFD[4889] = 4.87252053E+00;
  COFD[4890] = -3.56127804E-01;
  COFD[4891] = 1.29948788E-02;
  COFD[4892] = -2.19973126E+01;
  COFD[4893] = 5.21365421E+00;
  COFD[4894] = -4.11227771E-01;
  COFD[4895] = 1.58122118E-02;
  COFD[4896] = -2.15116655E+01;
  COFD[4897] = 4.94878244E+00;
  COFD[4898] = -3.68158605E-01;
  COFD[4899] = 1.36008797E-02;
  COFD[4900] = -1.98832169E+01;
  COFD[4901] = 4.84731557E+00;
  COFD[4902] = -4.10638352E-01;
  COFD[4903] = 1.76543886E-02;
  COFD[4904] = -2.25018696E+01;
  COFD[4905] = 5.59178974E+00;
  COFD[4906] = -4.85668031E-01;
  COFD[4907] = 2.00491907E-02;
  COFD[4908] = -2.22817317E+01;
  COFD[4909] = 5.59185582E+00;
  COFD[4910] = -4.91155812E-01;
  COFD[4911] = 2.05043018E-02;
  COFD[4912] = -2.22946247E+01;
  COFD[4913] = 5.59185582E+00;
  COFD[4914] = -4.91155812E-01;
  COFD[4915] = 2.05043018E-02;
  COFD[4916] = -2.25171753E+01;
  COFD[4917] = 5.58249828E+00;
  COFD[4918] = -4.78873376E-01;
  COFD[4919] = 1.95316774E-02;
  COFD[4920] = -2.25007852E+01;
  COFD[4921] = 5.58206320E+00;
  COFD[4922] = -4.82956809E-01;
  COFD[4923] = 1.98731634E-02;
  COFD[4924] = -2.25119507E+01;
  COFD[4925] = 5.58206320E+00;
  COFD[4926] = -4.82956809E-01;
  COFD[4927] = 1.98731634E-02;
  COFD[4928] = -2.12151921E+01;
  COFD[4929] = 5.35335833E+00;
  COFD[4930] = -4.69065665E-01;
  COFD[4931] = 1.98989604E-02;
  COFD[4932] = -2.20355105E+01;
  COFD[4933] = 5.14570932E+00;
  COFD[4934] = -3.99877142E-01;
  COFD[4935] = 1.52199557E-02;
  COFD[4936] = -2.20422494E+01;
  COFD[4937] = 5.14570932E+00;
  COFD[4938] = -3.99877142E-01;
  COFD[4939] = 1.52199557E-02;
  COFD[4940] = -2.27209132E+01;
  COFD[4941] = 5.58204407E+00;
  COFD[4942] = -4.83002356E-01;
  COFD[4943] = 1.98770691E-02;
  COFD[4944] = -2.26937831E+01;
  COFD[4945] = 5.58204407E+00;
  COFD[4946] = -4.83002356E-01;
  COFD[4947] = 1.98770691E-02;
  COFD[4948] = -2.28056945E+01;
  COFD[4949] = 5.58523510E+00;
  COFD[4950] = -4.81201481E-01;
  COFD[4951] = 1.97107111E-02;
  COFD[4952] = -2.28126577E+01;
  COFD[4953] = 5.58523510E+00;
  COFD[4954] = -4.81201481E-01;
  COFD[4955] = 1.97107111E-02;
  COFD[4956] = -2.28193866E+01;
  COFD[4957] = 5.58523510E+00;
  COFD[4958] = -4.81201481E-01;
  COFD[4959] = 1.97107111E-02;
  COFD[4960] = -2.27786027E+01;
  COFD[4961] = 5.40563818E+00;
  COFD[4962] = -4.44444322E-01;
  COFD[4963] = 1.75813146E-02;
  COFD[4964] = -1.84519686E+01;
  COFD[4965] = 4.46362510E+00;
  COFD[4966] = -3.64693797E-01;
  COFD[4967] = 1.58180537E-02;
  COFD[4968] = -1.98836911E+01;
  COFD[4969] = 4.84231878E+00;
  COFD[4970] = -4.10101001E-01;
  COFD[4971] = 1.76356687E-02;
  COFD[4972] = -2.22184984E+01;
  COFD[4973] = 5.56261157E+00;
  COFD[4974] = -4.88568348E-01;
  COFD[4975] = 2.04392305E-02;
  COFD[4976] = -2.25129068E+01;
  COFD[4977] = 5.61124534E+00;
  COFD[4978] = -4.90219613E-01;
  COFD[4979] = 2.03279325E-02;
  COFD[4980] = -2.25129068E+01;
  COFD[4981] = 5.61124534E+00;
  COFD[4982] = -4.90219613E-01;
  COFD[4983] = 2.03279325E-02;
  COFD[4984] = -2.25061634E+01;
  COFD[4985] = 5.61124534E+00;
  COFD[4986] = -4.90219613E-01;
  COFD[4987] = 2.03279325E-02;
  COFD[4988] = -2.16250380E+01;
  COFD[4989] = 4.94878244E+00;
  COFD[4990] = -3.68158605E-01;
  COFD[4991] = 1.36008797E-02;
  COFD[4992] = -1.47042106E+01;
  COFD[4993] = 3.27505697E+00;
  COFD[4994] = -2.14306851E-01;
  COFD[4995] = 9.45219335E-03;
  COFD[4996] = -1.39186828E+01;
  COFD[4997] = 2.97137588E+00;
  COFD[4998] = -1.75491257E-01;
  COFD[4999] = 7.79646773E-03;
  COFD[5000] = -1.32522938E+01;
  COFD[5001] = 3.34156587E+00;
  COFD[5002] = -2.22853306E-01;
  COFD[5003] = 9.81883417E-03;
  COFD[5004] = -1.31034501E+01;
  COFD[5005] = 2.80913567E+00;
  COFD[5006] = -1.54536855E-01;
  COFD[5007] = 6.89359313E-03;
  COFD[5008] = -1.31174788E+01;
  COFD[5009] = 2.80913567E+00;
  COFD[5010] = -1.54536855E-01;
  COFD[5011] = 6.89359313E-03;
  COFD[5012] = -1.41301009E+01;
  COFD[5013] = 3.05837263E+00;
  COFD[5014] = -1.86672802E-01;
  COFD[5015] = 8.27575734E-03;
  COFD[5016] = -1.08473079E+01;
  COFD[5017] = 2.19094415E+00;
  COFD[5018] = -7.11992510E-02;
  COFD[5019] = 3.14105973E-03;
  COFD[5020] = -1.92450630E+01;
  COFD[5021] = 5.05708283E+00;
  COFD[5022] = -4.35739290E-01;
  COFD[5023] = 1.86583205E-02;
  COFD[5024] = -1.41345352E+01;
  COFD[5025] = 3.05837263E+00;
  COFD[5026] = -1.86672802E-01;
  COFD[5027] = 8.27575734E-03;
  COFD[5028] = -1.41254300E+01;
  COFD[5029] = 3.05837263E+00;
  COFD[5030] = -1.86672802E-01;
  COFD[5031] = 8.27575734E-03;
  COFD[5032] = -1.48128541E+01;
  COFD[5033] = 3.33113524E+00;
  COFD[5034] = -2.21479057E-01;
  COFD[5035] = 9.75837737E-03;
  COFD[5036] = -1.47473013E+01;
  COFD[5037] = 3.30594991E+00;
  COFD[5038] = -2.18182207E-01;
  COFD[5039] = 9.61429447E-03;
  COFD[5040] = -1.91058045E+01;
  COFD[5041] = 4.86821670E+00;
  COFD[5042] = -4.13144121E-01;
  COFD[5043] = 1.77546701E-02;
  COFD[5044] = -1.91112992E+01;
  COFD[5045] = 4.86821670E+00;
  COFD[5046] = -4.13144121E-01;
  COFD[5047] = 1.77546701E-02;
  COFD[5048] = -1.85699398E+01;
  COFD[5049] = 4.67076124E+00;
  COFD[5050] = -3.90022427E-01;
  COFD[5051] = 1.68533953E-02;
  COFD[5052] = -1.90218811E+01;
  COFD[5053] = 4.83076737E+00;
  COFD[5054] = -4.08802573E-01;
  COFD[5055] = 1.75875241E-02;
  COFD[5056] = -1.39388102E+01;
  COFD[5057] = 2.97564184E+00;
  COFD[5058] = -1.76025309E-01;
  COFD[5059] = 7.81869993E-03;
  COFD[5060] = -1.67983988E+01;
  COFD[5061] = 4.00828594E+00;
  COFD[5062] = -3.08414344E-01;
  COFD[5063] = 1.34907430E-02;
  COFD[5064] = -1.61614949E+01;
  COFD[5065] = 3.75910622E+00;
  COFD[5066] = -2.75986578E-01;
  COFD[5067] = 1.20782843E-02;
  COFD[5068] = -1.61680559E+01;
  COFD[5069] = 3.75910622E+00;
  COFD[5070] = -2.75986578E-01;
  COFD[5071] = 1.20782843E-02;
  COFD[5072] = -1.72409761E+01;
  COFD[5073] = 4.17190426E+00;
  COFD[5074] = -3.28894681E-01;
  COFD[5075] = 1.43498101E-02;
  COFD[5076] = -1.70022486E+01;
  COFD[5077] = 4.05099737E+00;
  COFD[5078] = -3.13841660E-01;
  COFD[5079] = 1.37218854E-02;
  COFD[5080] = -1.70077296E+01;
  COFD[5081] = 4.05099737E+00;
  COFD[5082] = -3.13841660E-01;
  COFD[5083] = 1.37218854E-02;
  COFD[5084] = -1.47490941E+01;
  COFD[5085] = 3.39229020E+00;
  COFD[5086] = -2.29520232E-01;
  COFD[5087] = 1.01114311E-02;
  COFD[5088] = -1.88275407E+01;
  COFD[5089] = 4.71729964E+00;
  COFD[5090] = -3.95432573E-01;
  COFD[5091] = 1.70623691E-02;
  COFD[5092] = -1.88304756E+01;
  COFD[5093] = 4.71729964E+00;
  COFD[5094] = -3.95432573E-01;
  COFD[5095] = 1.70623691E-02;
  COFD[5096] = -1.71740753E+01;
  COFD[5097] = 4.04958641E+00;
  COFD[5098] = -3.13664243E-01;
  COFD[5099] = 1.37144097E-02;
  COFD[5100] = -1.71622104E+01;
  COFD[5101] = 4.04958641E+00;
  COFD[5102] = -3.13664243E-01;
  COFD[5103] = 1.37144097E-02;
  COFD[5104] = -1.74072739E+01;
  COFD[5105] = 4.11838823E+00;
  COFD[5106] = -3.22329602E-01;
  COFD[5107] = 1.40802468E-02;
  COFD[5108] = -1.74103290E+01;
  COFD[5109] = 4.11838823E+00;
  COFD[5110] = -3.22329602E-01;
  COFD[5111] = 1.40802468E-02;
  COFD[5112] = -1.74132586E+01;
  COFD[5113] = 4.11838823E+00;
  COFD[5114] = -3.22329602E-01;
  COFD[5115] = 1.40802468E-02;
  COFD[5116] = -1.84519686E+01;
  COFD[5117] = 4.46362510E+00;
  COFD[5118] = -3.64693797E-01;
  COFD[5119] = 1.58180537E-02;
  COFD[5120] = -1.30341700E+01;
  COFD[5121] = 2.73155251E+00;
  COFD[5122] = -1.44594082E-01;
  COFD[5123] = 6.46883252E-03;
  COFD[5124] = -1.39298715E+01;
  COFD[5125] = 2.97137588E+00;
  COFD[5126] = -1.75491257E-01;
  COFD[5127] = 7.79646773E-03;
  COFD[5128] = -1.58784406E+01;
  COFD[5129] = 3.68407693E+00;
  COFD[5130] = -2.66228170E-01;
  COFD[5131] = 1.16542305E-02;
  COFD[5132] = -1.66287739E+01;
  COFD[5133] = 3.93849401E+00;
  COFD[5134] = -2.99416642E-01;
  COFD[5135] = 1.31020815E-02;
  COFD[5136] = -1.66287739E+01;
  COFD[5137] = 3.93849401E+00;
  COFD[5138] = -2.99416642E-01;
  COFD[5139] = 1.31020815E-02;
  COFD[5140] = -1.66258365E+01;
  COFD[5141] = 3.93849401E+00;
  COFD[5142] = -2.99416642E-01;
  COFD[5143] = 1.31020815E-02;
  COFD[5144] = -1.90728704E+01;
  COFD[5145] = 4.83076737E+00;
  COFD[5146] = -4.08802573E-01;
  COFD[5147] = 1.75875241E-02;
  COFD[5148] = -1.60076986E+01;
  COFD[5149] = 3.63340763E+00;
  COFD[5150] = -2.60307961E-01;
  COFD[5151] = 1.14256954E-02;
  COFD[5152] = -1.49997335E+01;
  COFD[5153] = 3.25781069E+00;
  COFD[5154] = -2.12199367E-01;
  COFD[5155] = 9.36657283E-03;
  COFD[5156] = -1.42906145E+01;
  COFD[5157] = 3.67490723E+00;
  COFD[5158] = -2.65114792E-01;
  COFD[5159] = 1.16092671E-02;
  COFD[5160] = -1.40879048E+01;
  COFD[5161] = 3.07549274E+00;
  COFD[5162] = -1.88889344E-01;
  COFD[5163] = 8.37152866E-03;
  COFD[5164] = -1.41076172E+01;
  COFD[5165] = 3.07549274E+00;
  COFD[5166] = -1.88889344E-01;
  COFD[5167] = 8.37152866E-03;
  COFD[5168] = -1.52669139E+01;
  COFD[5169] = 3.35922578E+00;
  COFD[5170] = -2.25181399E-01;
  COFD[5171] = 9.92132878E-03;
  COFD[5172] = -1.16928791E+01;
  COFD[5173] = 2.47469981E+00;
  COFD[5174] = -1.10436257E-01;
  COFD[5175] = 4.95273813E-03;
  COFD[5176] = -2.10774895E+01;
  COFD[5177] = 5.53614864E+00;
  COFD[5178] = -4.86046753E-01;
  COFD[5179] = 2.03659193E-02;
  COFD[5180] = -1.52740201E+01;
  COFD[5181] = 3.35922578E+00;
  COFD[5182] = -2.25181399E-01;
  COFD[5183] = 9.92132878E-03;
  COFD[5184] = -1.52594691E+01;
  COFD[5185] = 3.35922578E+00;
  COFD[5186] = -2.25181399E-01;
  COFD[5187] = 9.92132878E-03;
  COFD[5188] = -1.59750720E+01;
  COFD[5189] = 3.66853818E+00;
  COFD[5190] = -2.64346221E-01;
  COFD[5191] = 1.15784613E-02;
  COFD[5192] = -1.59449700E+01;
  COFD[5193] = 3.65620899E+00;
  COFD[5194] = -2.62933804E-01;
  COFD[5195] = 1.15253223E-02;
  COFD[5196] = -2.04922413E+01;
  COFD[5197] = 5.23112374E+00;
  COFD[5198] = -4.54967682E-01;
  COFD[5199] = 1.93570423E-02;
  COFD[5200] = -2.05008481E+01;
  COFD[5201] = 5.23112374E+00;
  COFD[5202] = -4.54967682E-01;
  COFD[5203] = 1.93570423E-02;
  COFD[5204] = -2.02446510E+01;
  COFD[5205] = 5.13632099E+00;
  COFD[5206] = -4.44839130E-01;
  COFD[5207] = 1.90058356E-02;
  COFD[5208] = -2.04024603E+01;
  COFD[5209] = 5.18856872E+00;
  COFD[5210] = -4.50001829E-01;
  COFD[5211] = 1.91636142E-02;
  COFD[5212] = -1.50200477E+01;
  COFD[5213] = 3.26223357E+00;
  COFD[5214] = -2.12746642E-01;
  COFD[5215] = 9.38912883E-03;
  COFD[5216] = -1.81639552E+01;
  COFD[5217] = 4.37565431E+00;
  COFD[5218] = -3.53906025E-01;
  COFD[5219] = 1.53760786E-02;
  COFD[5220] = -1.76164585E+01;
  COFD[5221] = 4.19171952E+00;
  COFD[5222] = -3.31354810E-01;
  COFD[5223] = 1.44520623E-02;
  COFD[5224] = -1.76265366E+01;
  COFD[5225] = 4.19171952E+00;
  COFD[5226] = -3.31354810E-01;
  COFD[5227] = 1.44520623E-02;
  COFD[5228] = -1.86033102E+01;
  COFD[5229] = 4.54915847E+00;
  COFD[5230] = -3.75000738E-01;
  COFD[5231] = 1.62324821E-02;
  COFD[5232] = -1.83338346E+01;
  COFD[5233] = 4.42045763E+00;
  COFD[5234] = -3.59451578E-01;
  COFD[5235] = 1.56056164E-02;
  COFD[5236] = -1.83424223E+01;
  COFD[5237] = 4.42045763E+00;
  COFD[5238] = -3.59451578E-01;
  COFD[5239] = 1.56056164E-02;
  COFD[5240] = -1.60085598E+01;
  COFD[5241] = 3.72220402E+00;
  COFD[5242] = -2.71150591E-01;
  COFD[5243] = 1.18665265E-02;
  COFD[5244] = -2.02849926E+01;
  COFD[5245] = 5.10426133E+00;
  COFD[5246] = -4.41256919E-01;
  COFD[5247] = 1.88737290E-02;
  COFD[5248] = -2.02898932E+01;
  COFD[5249] = 5.10426133E+00;
  COFD[5250] = -4.41256919E-01;
  COFD[5251] = 1.88737290E-02;
  COFD[5252] = -1.85367099E+01;
  COFD[5253] = 4.41886064E+00;
  COFD[5254] = -3.59254256E-01;
  COFD[5255] = 1.55974661E-02;
  COFD[5256] = -1.85169413E+01;
  COFD[5257] = 4.41886064E+00;
  COFD[5258] = -3.59254256E-01;
  COFD[5259] = 1.55974661E-02;
  COFD[5260] = -1.87635759E+01;
  COFD[5261] = 4.48550694E+00;
  COFD[5262] = -3.67277454E-01;
  COFD[5263] = 1.59194755E-02;
  COFD[5264] = -1.87686577E+01;
  COFD[5265] = 4.48550694E+00;
  COFD[5266] = -3.67277454E-01;
  COFD[5267] = 1.59194755E-02;
  COFD[5268] = -1.87735503E+01;
  COFD[5269] = 4.48550694E+00;
  COFD[5270] = -3.67277454E-01;
  COFD[5271] = 1.59194755E-02;
  COFD[5272] = -1.98836911E+01;
  COFD[5273] = 4.84231878E+00;
  COFD[5274] = -4.10101001E-01;
  COFD[5275] = 1.76356687E-02;
  COFD[5276] = -1.39298715E+01;
  COFD[5277] = 2.97137588E+00;
  COFD[5278] = -1.75491257E-01;
  COFD[5279] = 7.79646773E-03;
  COFD[5280] = -1.50172016E+01;
  COFD[5281] = 3.25781069E+00;
  COFD[5282] = -2.12199367E-01;
  COFD[5283] = 9.36657283E-03;
  COFD[5284] = -1.74483042E+01;
  COFD[5285] = 4.14166966E+00;
  COFD[5286] = -3.25149462E-01;
  COFD[5287] = 1.41943811E-02;
  COFD[5288] = -1.79926237E+01;
  COFD[5289] = 4.30841971E+00;
  COFD[5290] = -3.45524579E-01;
  COFD[5291] = 1.50265381E-02;
  COFD[5292] = -1.79926237E+01;
  COFD[5293] = 4.30841971E+00;
  COFD[5294] = -3.45524579E-01;
  COFD[5295] = 1.50265381E-02;
  COFD[5296] = -1.79877194E+01;
  COFD[5297] = 4.30841971E+00;
  COFD[5298] = -3.45524579E-01;
  COFD[5299] = 1.50265381E-02;
  COFD[5300] = -2.04861595E+01;
  COFD[5301] = 5.18856872E+00;
  COFD[5302] = -4.50001829E-01;
  COFD[5303] = 1.91636142E-02;
  COFD[5304] = -1.85744784E+01;
  COFD[5305] = 4.54507313E+00;
  COFD[5306] = -3.74508073E-01;
  COFD[5307] = 1.62126770E-02;
  COFD[5308] = -1.74272359E+01;
  COFD[5309] = 4.14166966E+00;
  COFD[5310] = -3.25149462E-01;
  COFD[5311] = 1.41943811E-02;
  COFD[5312] = -1.68734802E+01;
  COFD[5313] = 4.63687143E+00;
  COFD[5314] = -3.85900861E-01;
  COFD[5315] = 1.66856798E-02;
  COFD[5316] = -1.62772129E+01;
  COFD[5317] = 3.88250968E+00;
  COFD[5318] = -2.92155848E-01;
  COFD[5319] = 1.27867850E-02;
  COFD[5320] = -1.62996992E+01;
  COFD[5321] = 3.88250968E+00;
  COFD[5322] = -2.92155848E-01;
  COFD[5323] = 1.27867850E-02;
  COFD[5324] = -1.77428141E+01;
  COFD[5325] = 4.25438185E+00;
  COFD[5326] = -3.39084808E-01;
  COFD[5327] = 1.47709916E-02;
  COFD[5328] = -1.31911433E+01;
  COFD[5329] = 3.04970299E+00;
  COFD[5330] = -1.85555523E-01;
  COFD[5331] = 8.22773480E-03;
  COFD[5332] = -2.14542455E+01;
  COFD[5333] = 5.49993732E+00;
  COFD[5334] = -4.62042917E-01;
  COFD[5335] = 1.85577413E-02;
  COFD[5336] = -1.77515170E+01;
  COFD[5337] = 4.25438185E+00;
  COFD[5338] = -3.39084808E-01;
  COFD[5339] = 1.47709916E-02;
  COFD[5340] = -1.77337260E+01;
  COFD[5341] = 4.25438185E+00;
  COFD[5342] = -3.39084808E-01;
  COFD[5343] = 1.47709916E-02;
  COFD[5344] = -1.86130101E+01;
  COFD[5345] = 4.62613551E+00;
  COFD[5346] = -3.84556396E-01;
  COFD[5347] = 1.66292467E-02;
  COFD[5348] = -1.85418525E+01;
  COFD[5349] = 4.59643893E+00;
  COFD[5350] = -3.80823304E-01;
  COFD[5351] = 1.64720603E-02;
  COFD[5352] = -2.19815087E+01;
  COFD[5353] = 5.58446511E+00;
  COFD[5354] = -4.79399331E-01;
  COFD[5355] = 1.95652693E-02;
  COFD[5356] = -2.19919092E+01;
  COFD[5357] = 5.58446511E+00;
  COFD[5358] = -4.79399331E-01;
  COFD[5359] = 1.95652693E-02;
  COFD[5360] = -2.19270866E+01;
  COFD[5361] = 5.60963444E+00;
  COFD[5362] = -4.89805286E-01;
  COFD[5363] = 2.03017681E-02;
  COFD[5364] = -2.19932273E+01;
  COFD[5365] = 5.58514538E+00;
  COFD[5366] = -4.80745077E-01;
  COFD[5367] = 1.96733087E-02;
  COFD[5368] = -1.74527809E+01;
  COFD[5369] = 4.14792932E+00;
  COFD[5370] = -3.25920382E-01;
  COFD[5371] = 1.42261620E-02;
  COFD[5372] = -2.07349578E+01;
  COFD[5373] = 5.23705932E+00;
  COFD[5374] = -4.55655792E-01;
  COFD[5375] = 1.93836339E-02;
  COFD[5376] = -2.02024001E+01;
  COFD[5377] = 5.08408346E+00;
  COFD[5378] = -4.38907391E-01;
  COFD[5379] = 1.87824789E-02;
  COFD[5380] = -2.02144438E+01;
  COFD[5381] = 5.08408346E+00;
  COFD[5382] = -4.38907391E-01;
  COFD[5383] = 1.87824789E-02;
  COFD[5384] = -2.10998079E+01;
  COFD[5385] = 5.37657006E+00;
  COFD[5386] = -4.70707921E-01;
  COFD[5387] = 1.99145326E-02;
  COFD[5388] = -2.08992599E+01;
  COFD[5389] = 5.28495077E+00;
  COFD[5390] = -4.61326381E-01;
  COFD[5391] = 1.96080621E-02;
  COFD[5392] = -2.09096388E+01;
  COFD[5393] = 5.28495077E+00;
  COFD[5394] = -4.61326381E-01;
  COFD[5395] = 1.96080621E-02;
  COFD[5396] = -1.86961022E+01;
  COFD[5397] = 4.67999453E+00;
  COFD[5398] = -3.91135253E-01;
  COFD[5399] = 1.68982388E-02;
  COFD[5400] = -2.20848195E+01;
  COFD[5401] = 5.59135292E+00;
  COFD[5402] = -4.85565630E-01;
  COFD[5403] = 2.00429035E-02;
  COFD[5404] = -2.20909755E+01;
  COFD[5405] = 5.59135292E+00;
  COFD[5406] = -4.85565630E-01;
  COFD[5407] = 2.00429035E-02;
  COFD[5408] = -2.11249323E+01;
  COFD[5409] = 5.28304555E+00;
  COFD[5410] = -4.61095222E-01;
  COFD[5411] = 1.95986518E-02;
  COFD[5412] = -2.11001336E+01;
  COFD[5413] = 5.28304555E+00;
  COFD[5414] = -4.61095222E-01;
  COFD[5415] = 1.95986518E-02;
  COFD[5416] = -2.13633121E+01;
  COFD[5417] = 5.35135690E+00;
  COFD[5418] = -4.68903699E-01;
  COFD[5419] = 1.98958921E-02;
  COFD[5420] = -2.13696801E+01;
  COFD[5421] = 5.35135690E+00;
  COFD[5422] = -4.68903699E-01;
  COFD[5423] = 1.98958921E-02;
  COFD[5424] = -2.13758266E+01;
  COFD[5425] = 5.35135690E+00;
  COFD[5426] = -4.68903699E-01;
  COFD[5427] = 1.98958921E-02;
  COFD[5428] = -2.22184984E+01;
  COFD[5429] = 5.56261157E+00;
  COFD[5430] = -4.88568348E-01;
  COFD[5431] = 2.04392305E-02;
  COFD[5432] = -1.58784406E+01;
  COFD[5433] = 3.68407693E+00;
  COFD[5434] = -2.66228170E-01;
  COFD[5435] = 1.16542305E-02;
  COFD[5436] = -1.74483042E+01;
  COFD[5437] = 4.14166966E+00;
  COFD[5438] = -3.25149462E-01;
  COFD[5439] = 1.41943811E-02;
  COFD[5440] = -2.00443658E+01;
  COFD[5441] = 5.03042083E+00;
  COFD[5442] = -4.32596342E-01;
  COFD[5443] = 1.85345510E-02;
  COFD[5444] = -2.05658427E+01;
  COFD[5445] = 5.17526774E+00;
  COFD[5446] = -4.48472252E-01;
  COFD[5447] = 1.91050891E-02;
  COFD[5448] = -2.05658427E+01;
  COFD[5449] = 5.17526774E+00;
  COFD[5450] = -4.48472252E-01;
  COFD[5451] = 1.91050891E-02;
  COFD[5452] = -2.05596825E+01;
  COFD[5453] = 5.17526774E+00;
  COFD[5454] = -4.48472252E-01;
  COFD[5455] = 1.91050891E-02;
  COFD[5456] = -2.20972799E+01;
  COFD[5457] = 5.58514538E+00;
  COFD[5458] = -4.80745077E-01;
  COFD[5459] = 1.96733087E-02;
  COFD[5460] = -1.91975554E+01;
  COFD[5461] = 4.73837374E+00;
  COFD[5462] = -3.97916523E-01;
  COFD[5463] = 1.71599378E-02;
  COFD[5464] = -1.79721047E+01;
  COFD[5465] = 4.30841971E+00;
  COFD[5466] = -3.45524579E-01;
  COFD[5467] = 1.50265381E-02;
  COFD[5468] = -1.74816690E+01;
  COFD[5469] = 4.80792005E+00;
  COFD[5470] = -4.06126584E-01;
  COFD[5471] = 1.74831083E-02;
  COFD[5472] = -1.69259507E+01;
  COFD[5473] = 4.09077642E+00;
  COFD[5474] = -3.18894990E-01;
  COFD[5475] = 1.39371445E-02;
  COFD[5476] = -1.69480333E+01;
  COFD[5477] = 4.09077642E+00;
  COFD[5478] = -3.18894990E-01;
  COFD[5479] = 1.39371445E-02;
  COFD[5480] = -1.83348590E+01;
  COFD[5481] = 4.43878381E+00;
  COFD[5482] = -3.61697624E-01;
  COFD[5483] = 1.56975581E-02;
  COFD[5484] = -1.36889460E+01;
  COFD[5485] = 3.19999740E+00;
  COFD[5486] = -2.04999020E-01;
  COFD[5487] = 9.06766105E-03;
  COFD[5488] = -2.13622755E+01;
  COFD[5489] = 5.35901292E+00;
  COFD[5490] = -4.36172487E-01;
  COFD[5491] = 1.71345319E-02;
  COFD[5492] = -1.83433151E+01;
  COFD[5493] = 4.43878381E+00;
  COFD[5494] = -3.61697624E-01;
  COFD[5495] = 1.56975581E-02;
  COFD[5496] = -1.83260242E+01;
  COFD[5497] = 4.43878381E+00;
  COFD[5498] = -3.61697624E-01;
  COFD[5499] = 1.56975581E-02;
  COFD[5500] = -1.91935972E+01;
  COFD[5501] = 4.80030220E+00;
  COFD[5502] = -4.05235041E-01;
  COFD[5503] = 1.74483531E-02;
  COFD[5504] = -1.91463450E+01;
  COFD[5505] = 4.78094221E+00;
  COFD[5506] = -4.02985837E-01;
  COFD[5507] = 1.73614221E-02;
  COFD[5508] = -2.19914948E+01;
  COFD[5509] = 5.49642957E+00;
  COFD[5510] = -4.61132993E-01;
  COFD[5511] = 1.85004773E-02;
  COFD[5512] = -2.20016211E+01;
  COFD[5513] = 5.49642957E+00;
  COFD[5514] = -4.61132993E-01;
  COFD[5515] = 1.85004773E-02;
  COFD[5516] = -2.20823256E+01;
  COFD[5517] = 5.58518321E+00;
  COFD[5518] = -4.80534235E-01;
  COFD[5519] = 1.96556393E-02;
  COFD[5520] = -2.20212539E+01;
  COFD[5521] = 5.50583166E+00;
  COFD[5522] = -4.63753262E-01;
  COFD[5523] = 1.86693462E-02;
  COFD[5524] = -1.80021491E+01;
  COFD[5525] = 4.31656593E+00;
  COFD[5526] = -3.46539554E-01;
  COFD[5527] = 1.50688196E-02;
  COFD[5528] = -2.12614490E+01;
  COFD[5529] = 5.38135645E+00;
  COFD[5530] = -4.71058360E-01;
  COFD[5531] = 1.99188046E-02;
  COFD[5532] = -2.07294288E+01;
  COFD[5533] = 5.23116678E+00;
  COFD[5534] = -4.54972675E-01;
  COFD[5535] = 1.93572354E-02;
  COFD[5536] = -2.07411749E+01;
  COFD[5537] = 5.23116678E+00;
  COFD[5538] = -4.54972675E-01;
  COFD[5539] = 1.93572354E-02;
  COFD[5540] = -2.15270515E+01;
  COFD[5541] = 5.47662534E+00;
  COFD[5542] = -4.79750189E-01;
  COFD[5543] = 2.01492627E-02;
  COFD[5544] = -2.13502458E+01;
  COFD[5545] = 5.39784038E+00;
  COFD[5546] = -4.72269379E-01;
  COFD[5547] = 1.99339592E-02;
  COFD[5548] = -2.13603509E+01;
  COFD[5549] = 5.39784038E+00;
  COFD[5550] = -4.72269379E-01;
  COFD[5551] = 1.99339592E-02;
  COFD[5552] = -1.92638665E+01;
  COFD[5553] = 4.84335373E+00;
  COFD[5554] = -4.10212751E-01;
  COFD[5555] = 1.76395874E-02;
  COFD[5556] = -2.22648022E+01;
  COFD[5557] = 5.57944619E+00;
  COFD[5558] = -4.78032626E-01;
  COFD[5559] = 1.94775370E-02;
  COFD[5560] = -2.22707599E+01;
  COFD[5561] = 5.57944619E+00;
  COFD[5562] = -4.78032626E-01;
  COFD[5563] = 1.94775370E-02;
  COFD[5564] = -2.15712184E+01;
  COFD[5565] = 5.39732073E+00;
  COFD[5566] = -4.72235834E-01;
  COFD[5567] = 1.99338718E-02;
  COFD[5568] = -2.15472132E+01;
  COFD[5569] = 5.39732073E+00;
  COFD[5570] = -4.72235834E-01;
  COFD[5571] = 1.99338718E-02;
  COFD[5572] = -2.17012465E+01;
  COFD[5573] = 5.41948945E+00;
  COFD[5574] = -4.73474138E-01;
  COFD[5575] = 1.99217500E-02;
  COFD[5576] = -2.17074118E+01;
  COFD[5577] = 5.41948945E+00;
  COFD[5578] = -4.73474138E-01;
  COFD[5579] = 1.99217500E-02;
  COFD[5580] = -2.17133603E+01;
  COFD[5581] = 5.41948945E+00;
  COFD[5582] = -4.73474138E-01;
  COFD[5583] = 1.99217500E-02;
  COFD[5584] = -2.25129068E+01;
  COFD[5585] = 5.61124534E+00;
  COFD[5586] = -4.90219613E-01;
  COFD[5587] = 2.03279325E-02;
  COFD[5588] = -1.66287739E+01;
  COFD[5589] = 3.93849401E+00;
  COFD[5590] = -2.99416642E-01;
  COFD[5591] = 1.31020815E-02;
  COFD[5592] = -1.79926237E+01;
  COFD[5593] = 4.30841971E+00;
  COFD[5594] = -3.45524579E-01;
  COFD[5595] = 1.50265381E-02;
  COFD[5596] = -2.05658427E+01;
  COFD[5597] = 5.17526774E+00;
  COFD[5598] = -4.48472252E-01;
  COFD[5599] = 1.91050891E-02;
  COFD[5600] = -2.11796262E+01;
  COFD[5601] = 5.35817304E+00;
  COFD[5602] = -4.69455306E-01;
  COFD[5603] = 1.99063292E-02;
  COFD[5604] = -2.11796262E+01;
  COFD[5605] = 5.35817304E+00;
  COFD[5606] = -4.69455306E-01;
  COFD[5607] = 1.99063292E-02;
  COFD[5608] = -2.11736643E+01;
  COFD[5609] = 5.35817304E+00;
  COFD[5610] = -4.69455306E-01;
  COFD[5611] = 1.99063292E-02;
  COFD[5612] = -2.21221184E+01;
  COFD[5613] = 5.50583166E+00;
  COFD[5614] = -4.63753262E-01;
  COFD[5615] = 1.86693462E-02;
  COFD[5616] = -1.91975554E+01;
  COFD[5617] = 4.73837374E+00;
  COFD[5618] = -3.97916523E-01;
  COFD[5619] = 1.71599378E-02;
  COFD[5620] = -1.79721047E+01;
  COFD[5621] = 4.30841971E+00;
  COFD[5622] = -3.45524579E-01;
  COFD[5623] = 1.50265381E-02;
  COFD[5624] = -1.74816690E+01;
  COFD[5625] = 4.80792005E+00;
  COFD[5626] = -4.06126584E-01;
  COFD[5627] = 1.74831083E-02;
  COFD[5628] = -1.69259507E+01;
  COFD[5629] = 4.09077642E+00;
  COFD[5630] = -3.18894990E-01;
  COFD[5631] = 1.39371445E-02;
  COFD[5632] = -1.69480333E+01;
  COFD[5633] = 4.09077642E+00;
  COFD[5634] = -3.18894990E-01;
  COFD[5635] = 1.39371445E-02;
  COFD[5636] = -1.83348590E+01;
  COFD[5637] = 4.43878381E+00;
  COFD[5638] = -3.61697624E-01;
  COFD[5639] = 1.56975581E-02;
  COFD[5640] = -1.36889460E+01;
  COFD[5641] = 3.19999740E+00;
  COFD[5642] = -2.04999020E-01;
  COFD[5643] = 9.06766105E-03;
  COFD[5644] = -2.13622755E+01;
  COFD[5645] = 5.35901292E+00;
  COFD[5646] = -4.36172487E-01;
  COFD[5647] = 1.71345319E-02;
  COFD[5648] = -1.83433151E+01;
  COFD[5649] = 4.43878381E+00;
  COFD[5650] = -3.61697624E-01;
  COFD[5651] = 1.56975581E-02;
  COFD[5652] = -1.83260242E+01;
  COFD[5653] = 4.43878381E+00;
  COFD[5654] = -3.61697624E-01;
  COFD[5655] = 1.56975581E-02;
  COFD[5656] = -1.91935972E+01;
  COFD[5657] = 4.80030220E+00;
  COFD[5658] = -4.05235041E-01;
  COFD[5659] = 1.74483531E-02;
  COFD[5660] = -1.91463450E+01;
  COFD[5661] = 4.78094221E+00;
  COFD[5662] = -4.02985837E-01;
  COFD[5663] = 1.73614221E-02;
  COFD[5664] = -2.19914948E+01;
  COFD[5665] = 5.49642957E+00;
  COFD[5666] = -4.61132993E-01;
  COFD[5667] = 1.85004773E-02;
  COFD[5668] = -2.20016211E+01;
  COFD[5669] = 5.49642957E+00;
  COFD[5670] = -4.61132993E-01;
  COFD[5671] = 1.85004773E-02;
  COFD[5672] = -2.20823256E+01;
  COFD[5673] = 5.58518321E+00;
  COFD[5674] = -4.80534235E-01;
  COFD[5675] = 1.96556393E-02;
  COFD[5676] = -2.20212539E+01;
  COFD[5677] = 5.50583166E+00;
  COFD[5678] = -4.63753262E-01;
  COFD[5679] = 1.86693462E-02;
  COFD[5680] = -1.80021491E+01;
  COFD[5681] = 4.31656593E+00;
  COFD[5682] = -3.46539554E-01;
  COFD[5683] = 1.50688196E-02;
  COFD[5684] = -2.12614490E+01;
  COFD[5685] = 5.38135645E+00;
  COFD[5686] = -4.71058360E-01;
  COFD[5687] = 1.99188046E-02;
  COFD[5688] = -2.07294288E+01;
  COFD[5689] = 5.23116678E+00;
  COFD[5690] = -4.54972675E-01;
  COFD[5691] = 1.93572354E-02;
  COFD[5692] = -2.07411749E+01;
  COFD[5693] = 5.23116678E+00;
  COFD[5694] = -4.54972675E-01;
  COFD[5695] = 1.93572354E-02;
  COFD[5696] = -2.15270515E+01;
  COFD[5697] = 5.47662534E+00;
  COFD[5698] = -4.79750189E-01;
  COFD[5699] = 2.01492627E-02;
  COFD[5700] = -2.13502458E+01;
  COFD[5701] = 5.39784038E+00;
  COFD[5702] = -4.72269379E-01;
  COFD[5703] = 1.99339592E-02;
  COFD[5704] = -2.13603509E+01;
  COFD[5705] = 5.39784038E+00;
  COFD[5706] = -4.72269379E-01;
  COFD[5707] = 1.99339592E-02;
  COFD[5708] = -1.92638665E+01;
  COFD[5709] = 4.84335373E+00;
  COFD[5710] = -4.10212751E-01;
  COFD[5711] = 1.76395874E-02;
  COFD[5712] = -2.22648022E+01;
  COFD[5713] = 5.57944619E+00;
  COFD[5714] = -4.78032626E-01;
  COFD[5715] = 1.94775370E-02;
  COFD[5716] = -2.22707599E+01;
  COFD[5717] = 5.57944619E+00;
  COFD[5718] = -4.78032626E-01;
  COFD[5719] = 1.94775370E-02;
  COFD[5720] = -2.15712184E+01;
  COFD[5721] = 5.39732073E+00;
  COFD[5722] = -4.72235834E-01;
  COFD[5723] = 1.99338718E-02;
  COFD[5724] = -2.15472132E+01;
  COFD[5725] = 5.39732073E+00;
  COFD[5726] = -4.72235834E-01;
  COFD[5727] = 1.99338718E-02;
  COFD[5728] = -2.17012465E+01;
  COFD[5729] = 5.41948945E+00;
  COFD[5730] = -4.73474138E-01;
  COFD[5731] = 1.99217500E-02;
  COFD[5732] = -2.17074118E+01;
  COFD[5733] = 5.41948945E+00;
  COFD[5734] = -4.73474138E-01;
  COFD[5735] = 1.99217500E-02;
  COFD[5736] = -2.17133603E+01;
  COFD[5737] = 5.41948945E+00;
  COFD[5738] = -4.73474138E-01;
  COFD[5739] = 1.99217500E-02;
  COFD[5740] = -2.25129068E+01;
  COFD[5741] = 5.61124534E+00;
  COFD[5742] = -4.90219613E-01;
  COFD[5743] = 2.03279325E-02;
  COFD[5744] = -1.66287739E+01;
  COFD[5745] = 3.93849401E+00;
  COFD[5746] = -2.99416642E-01;
  COFD[5747] = 1.31020815E-02;
  COFD[5748] = -1.79926237E+01;
  COFD[5749] = 4.30841971E+00;
  COFD[5750] = -3.45524579E-01;
  COFD[5751] = 1.50265381E-02;
  COFD[5752] = -2.05658427E+01;
  COFD[5753] = 5.17526774E+00;
  COFD[5754] = -4.48472252E-01;
  COFD[5755] = 1.91050891E-02;
  COFD[5756] = -2.11796262E+01;
  COFD[5757] = 5.35817304E+00;
  COFD[5758] = -4.69455306E-01;
  COFD[5759] = 1.99063292E-02;
  COFD[5760] = -2.11796262E+01;
  COFD[5761] = 5.35817304E+00;
  COFD[5762] = -4.69455306E-01;
  COFD[5763] = 1.99063292E-02;
  COFD[5764] = -2.11736643E+01;
  COFD[5765] = 5.35817304E+00;
  COFD[5766] = -4.69455306E-01;
  COFD[5767] = 1.99063292E-02;
  COFD[5768] = -2.21221184E+01;
  COFD[5769] = 5.50583166E+00;
  COFD[5770] = -4.63753262E-01;
  COFD[5771] = 1.86693462E-02;
  COFD[5772] = -1.91918132E+01;
  COFD[5773] = 4.73837374E+00;
  COFD[5774] = -3.97916523E-01;
  COFD[5775] = 1.71599378E-02;
  COFD[5776] = -1.79673967E+01;
  COFD[5777] = 4.30841971E+00;
  COFD[5778] = -3.45524579E-01;
  COFD[5779] = 1.50265381E-02;
  COFD[5780] = -1.74813945E+01;
  COFD[5781] = 4.80792005E+00;
  COFD[5782] = -4.06126584E-01;
  COFD[5783] = 1.74831083E-02;
  COFD[5784] = -1.69227098E+01;
  COFD[5785] = 4.09077642E+00;
  COFD[5786] = -3.18894990E-01;
  COFD[5787] = 1.39371445E-02;
  COFD[5788] = -1.69446466E+01;
  COFD[5789] = 4.09077642E+00;
  COFD[5790] = -3.18894990E-01;
  COFD[5791] = 1.39371445E-02;
  COFD[5792] = -1.83296787E+01;
  COFD[5793] = 4.43878381E+00;
  COFD[5794] = -3.61697624E-01;
  COFD[5795] = 1.56975581E-02;
  COFD[5796] = -1.36884094E+01;
  COFD[5797] = 3.19999740E+00;
  COFD[5798] = -2.04999020E-01;
  COFD[5799] = 9.06766105E-03;
  COFD[5800] = -2.13587478E+01;
  COFD[5801] = 5.35901292E+00;
  COFD[5802] = -4.36172487E-01;
  COFD[5803] = 1.71345319E-02;
  COFD[5804] = -1.83380469E+01;
  COFD[5805] = 4.43878381E+00;
  COFD[5806] = -3.61697624E-01;
  COFD[5807] = 1.56975581E-02;
  COFD[5808] = -1.83209342E+01;
  COFD[5809] = 4.43878381E+00;
  COFD[5810] = -3.61697624E-01;
  COFD[5811] = 1.56975581E-02;
  COFD[5812] = -1.91905006E+01;
  COFD[5813] = 4.80030220E+00;
  COFD[5814] = -4.05235041E-01;
  COFD[5815] = 1.74483531E-02;
  COFD[5816] = -1.91430977E+01;
  COFD[5817] = 4.78094221E+00;
  COFD[5818] = -4.02985837E-01;
  COFD[5819] = 1.73614221E-02;
  COFD[5820] = -2.19866865E+01;
  COFD[5821] = 5.49642957E+00;
  COFD[5822] = -4.61132993E-01;
  COFD[5823] = 1.85004773E-02;
  COFD[5824] = -2.19967149E+01;
  COFD[5825] = 5.49642957E+00;
  COFD[5826] = -4.61132993E-01;
  COFD[5827] = 1.85004773E-02;
  COFD[5828] = -2.20773242E+01;
  COFD[5829] = 5.58518321E+00;
  COFD[5830] = -4.80534235E-01;
  COFD[5831] = 1.96556393E-02;
  COFD[5832] = -2.20161598E+01;
  COFD[5833] = 5.50583166E+00;
  COFD[5834] = -4.63753262E-01;
  COFD[5835] = 1.86693462E-02;
  COFD[5836] = -1.79974415E+01;
  COFD[5837] = 4.31656593E+00;
  COFD[5838] = -3.46539554E-01;
  COFD[5839] = 1.50688196E-02;
  COFD[5840] = -2.12554201E+01;
  COFD[5841] = 5.38135645E+00;
  COFD[5842] = -4.71058360E-01;
  COFD[5843] = 1.99188046E-02;
  COFD[5844] = -2.07249267E+01;
  COFD[5845] = 5.23116678E+00;
  COFD[5846] = -4.54972675E-01;
  COFD[5847] = 1.93572354E-02;
  COFD[5848] = -2.07365663E+01;
  COFD[5849] = 5.23116678E+00;
  COFD[5850] = -4.54972675E-01;
  COFD[5851] = 1.93572354E-02;
  COFD[5852] = -2.15223395E+01;
  COFD[5853] = 5.47662534E+00;
  COFD[5854] = -4.79750189E-01;
  COFD[5855] = 2.01492627E-02;
  COFD[5856] = -2.13454331E+01;
  COFD[5857] = 5.39784038E+00;
  COFD[5858] = -4.72269379E-01;
  COFD[5859] = 1.99339592E-02;
  COFD[5860] = -2.13554405E+01;
  COFD[5861] = 5.39784038E+00;
  COFD[5862] = -4.72269379E-01;
  COFD[5863] = 1.99339592E-02;
  COFD[5864] = -1.92580454E+01;
  COFD[5865] = 4.84335373E+00;
  COFD[5866] = -4.10212751E-01;
  COFD[5867] = 1.76395874E-02;
  COFD[5868] = -2.22589092E+01;
  COFD[5869] = 5.57944619E+00;
  COFD[5870] = -4.78032626E-01;
  COFD[5871] = 1.94775370E-02;
  COFD[5872] = -2.22647966E+01;
  COFD[5873] = 5.57944619E+00;
  COFD[5874] = -4.78032626E-01;
  COFD[5875] = 1.94775370E-02;
  COFD[5876] = -2.15651865E+01;
  COFD[5877] = 5.39732073E+00;
  COFD[5878] = -4.72235834E-01;
  COFD[5879] = 1.99338718E-02;
  COFD[5880] = -2.15414624E+01;
  COFD[5881] = 5.39732073E+00;
  COFD[5882] = -4.72235834E-01;
  COFD[5883] = 1.99338718E-02;
  COFD[5884] = -2.16954222E+01;
  COFD[5885] = 5.41948945E+00;
  COFD[5886] = -4.73474138E-01;
  COFD[5887] = 1.99217500E-02;
  COFD[5888] = -2.17015156E+01;
  COFD[5889] = 5.41948945E+00;
  COFD[5890] = -4.73474138E-01;
  COFD[5891] = 1.99217500E-02;
  COFD[5892] = -2.17073940E+01;
  COFD[5893] = 5.41948945E+00;
  COFD[5894] = -4.73474138E-01;
  COFD[5895] = 1.99217500E-02;
  COFD[5896] = -2.25061634E+01;
  COFD[5897] = 5.61124534E+00;
  COFD[5898] = -4.90219613E-01;
  COFD[5899] = 2.03279325E-02;
  COFD[5900] = -1.66258365E+01;
  COFD[5901] = 3.93849401E+00;
  COFD[5902] = -2.99416642E-01;
  COFD[5903] = 1.31020815E-02;
  COFD[5904] = -1.79877194E+01;
  COFD[5905] = 4.30841971E+00;
  COFD[5906] = -3.45524579E-01;
  COFD[5907] = 1.50265381E-02;
  COFD[5908] = -2.05596825E+01;
  COFD[5909] = 5.17526774E+00;
  COFD[5910] = -4.48472252E-01;
  COFD[5911] = 1.91050891E-02;
  COFD[5912] = -2.11736643E+01;
  COFD[5913] = 5.35817304E+00;
  COFD[5914] = -4.69455306E-01;
  COFD[5915] = 1.99063292E-02;
  COFD[5916] = -2.11736643E+01;
  COFD[5917] = 5.35817304E+00;
  COFD[5918] = -4.69455306E-01;
  COFD[5919] = 1.99063292E-02;
  COFD[5920] = -2.11677727E+01;
  COFD[5921] = 5.35817304E+00;
  COFD[5922] = -4.69455306E-01;
  COFD[5923] = 1.99063292E-02;
  COFD[5924] = -2.21158928E+01;
  COFD[5925] = 5.50583166E+00;
  COFD[5926] = -4.63753262E-01;
  COFD[5927] = 1.86693462E-02;
  COFD[5928] = -2.14475654E+01;
  COFD[5929] = 5.48617067E+00;
  COFD[5930] = -4.80816776E-01;
  COFD[5931] = 2.01887868E-02;
  COFD[5932] = -2.04649116E+01;
  COFD[5933] = 5.18856872E+00;
  COFD[5934] = -4.50001829E-01;
  COFD[5935] = 1.91636142E-02;
  COFD[5936] = -1.96915102E+01;
  COFD[5937] = 5.54637286E+00;
  COFD[5938] = -4.87070324E-01;
  COFD[5939] = 2.03983467E-02;
  COFD[5940] = -1.93925565E+01;
  COFD[5941] = 4.98286777E+00;
  COFD[5942] = -4.26970814E-01;
  COFD[5943] = 1.83122917E-02;
  COFD[5944] = -1.94151732E+01;
  COFD[5945] = 4.98286777E+00;
  COFD[5946] = -4.26970814E-01;
  COFD[5947] = 1.83122917E-02;
  COFD[5948] = -2.08554822E+01;
  COFD[5949] = 5.32244593E+00;
  COFD[5950] = -4.65829403E-01;
  COFD[5951] = 1.97895274E-02;
  COFD[5952] = -1.59632633E+01;
  COFD[5953] = 4.07051484E+00;
  COFD[5954] = -3.16303109E-01;
  COFD[5955] = 1.38259377E-02;
  COFD[5956] = -1.80862788E+01;
  COFD[5957] = 3.69199168E+00;
  COFD[5958] = -1.74005516E-01;
  COFD[5959] = 3.97694372E-03;
  COFD[5960] = -2.08642660E+01;
  COFD[5961] = 5.32244593E+00;
  COFD[5962] = -4.65829403E-01;
  COFD[5963] = 1.97895274E-02;
  COFD[5964] = -2.08463112E+01;
  COFD[5965] = 5.32244593E+00;
  COFD[5966] = -4.65829403E-01;
  COFD[5967] = 1.97895274E-02;
  COFD[5968] = -2.14314067E+01;
  COFD[5969] = 5.54007827E+00;
  COFD[5970] = -4.86434511E-01;
  COFD[5971] = 2.03779006E-02;
  COFD[5972] = -2.13881929E+01;
  COFD[5973] = 5.52422470E+00;
  COFD[5974] = -4.84872944E-01;
  COFD[5975] = 2.03298213E-02;
  COFD[5976] = -1.93946871E+01;
  COFD[5977] = 4.10954793E+00;
  COFD[5978] = -2.37523329E-01;
  COFD[5979] = 7.08858141E-03;
  COFD[5980] = -1.94051772E+01;
  COFD[5981] = 4.10954793E+00;
  COFD[5982] = -2.37523329E-01;
  COFD[5983] = 7.08858141E-03;
  COFD[5984] = -2.04451868E+01;
  COFD[5985] = 4.60682543E+00;
  COFD[5986] = -3.13971634E-01;
  COFD[5987] = 1.08661011E-02;
  COFD[5988] = -1.96653091E+01;
  COFD[5989] = 4.22062499E+00;
  COFD[5990] = -2.54326872E-01;
  COFD[5991] = 7.91017784E-03;
  COFD[5992] = -2.04949292E+01;
  COFD[5993] = 5.19614628E+00;
  COFD[5994] = -4.50889164E-01;
  COFD[5995] = 1.91983328E-02;
  COFD[5996] = -2.21082949E+01;
  COFD[5997] = 5.48540187E+00;
  COFD[5998] = -4.58962148E-01;
  COFD[5999] = 1.83770355E-02;
  COFD[6000] = -2.21259240E+01;
  COFD[6001] = 5.58129885E+00;
  COFD[6002] = -4.78532921E-01;
  COFD[6003] = 1.95095699E-02;
  COFD[6004] = -2.21380648E+01;
  COFD[6005] = 5.58129885E+00;
  COFD[6006] = -4.78532921E-01;
  COFD[6007] = 1.95095699E-02;
  COFD[6008] = -2.18224662E+01;
  COFD[6009] = 5.33732875E+00;
  COFD[6010] = -4.32453425E-01;
  COFD[6011] = 1.69373833E-02;
  COFD[6012] = -2.20850137E+01;
  COFD[6013] = 5.45178028E+00;
  COFD[6014] = -4.52847771E-01;
  COFD[6015] = 1.80418544E-02;
  COFD[6016] = -2.20954821E+01;
  COFD[6017] = 5.45178028E+00;
  COFD[6018] = -4.52847771E-01;
  COFD[6019] = 1.80418544E-02;
  COFD[6020] = -2.14782205E+01;
  COFD[6021] = 5.56978987E+00;
  COFD[6022] = -4.89141980E-01;
  COFD[6023] = 2.04499210E-02;
  COFD[6024] = -2.04033902E+01;
  COFD[6025] = 4.50250781E+00;
  COFD[6026] = -2.97622106E-01;
  COFD[6027] = 1.00481473E-02;
  COFD[6028] = -2.04096115E+01;
  COFD[6029] = 4.50250781E+00;
  COFD[6030] = -2.97622106E-01;
  COFD[6031] = 1.00481473E-02;
  COFD[6032] = -2.23170553E+01;
  COFD[6033] = 5.45297208E+00;
  COFD[6034] = -4.53064157E-01;
  COFD[6035] = 1.80537024E-02;
  COFD[6036] = -2.22919953E+01;
  COFD[6037] = 5.45297208E+00;
  COFD[6038] = -4.53064157E-01;
  COFD[6039] = 1.80537024E-02;
  COFD[6040] = -2.22779882E+01;
  COFD[6041] = 5.39861129E+00;
  COFD[6042] = -4.43119198E-01;
  COFD[6043] = 1.75075657E-02;
  COFD[6044] = -2.22844229E+01;
  COFD[6045] = 5.39861129E+00;
  COFD[6046] = -4.43119198E-01;
  COFD[6047] = 1.75075657E-02;
  COFD[6048] = -2.22906347E+01;
  COFD[6049] = 5.39861129E+00;
  COFD[6050] = -4.43119198E-01;
  COFD[6051] = 1.75075657E-02;
  COFD[6052] = -2.16250380E+01;
  COFD[6053] = 4.94878244E+00;
  COFD[6054] = -3.68158605E-01;
  COFD[6055] = 1.36008797E-02;
  COFD[6056] = -1.90728704E+01;
  COFD[6057] = 4.83076737E+00;
  COFD[6058] = -4.08802573E-01;
  COFD[6059] = 1.75875241E-02;
  COFD[6060] = -2.04861595E+01;
  COFD[6061] = 5.18856872E+00;
  COFD[6062] = -4.50001829E-01;
  COFD[6063] = 1.91636142E-02;
  COFD[6064] = -2.20972799E+01;
  COFD[6065] = 5.58514538E+00;
  COFD[6066] = -4.80745077E-01;
  COFD[6067] = 1.96733087E-02;
  COFD[6068] = -2.21221184E+01;
  COFD[6069] = 5.50583166E+00;
  COFD[6070] = -4.63753262E-01;
  COFD[6071] = 1.86693462E-02;
  COFD[6072] = -2.21221184E+01;
  COFD[6073] = 5.50583166E+00;
  COFD[6074] = -4.63753262E-01;
  COFD[6075] = 1.86693462E-02;
  COFD[6076] = -2.21158928E+01;
  COFD[6077] = 5.50583166E+00;
  COFD[6078] = -4.63753262E-01;
  COFD[6079] = 1.86693462E-02;
  COFD[6080] = -1.97704101E+01;
  COFD[6081] = 4.22062499E+00;
  COFD[6082] = -2.54326872E-01;
  COFD[6083] = 7.91017784E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 2;
  KTDIF[1] = 6;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 1.22194046E-01;
  COFTD[1] = 6.90321836E-04;
  COFTD[2] = -3.64845249E-07;
  COFTD[3] = 6.03055495E-11;
  COFTD[4] = 2.01521521E-01;
  COFTD[5] = 5.62743751E-04;
  COFTD[6] = -3.08519054E-07;
  COFTD[7] = 5.22805672E-11;
  COFTD[8] = 0.00000000E+00;
  COFTD[9] = 0.00000000E+00;
  COFTD[10] = 0.00000000E+00;
  COFTD[11] = 0.00000000E+00;
  COFTD[12] = 2.35281489E-01;
  COFTD[13] = 4.65667373E-04;
  COFTD[14] = -2.60938016E-07;
  COFTD[15] = 4.49268709E-11;
  COFTD[16] = 2.37051899E-01;
  COFTD[17] = 4.69171356E-04;
  COFTD[18] = -2.62901483E-07;
  COFTD[19] = 4.52649298E-11;
  COFTD[20] = 1.80186380E-01;
  COFTD[21] = 6.02880848E-04;
  COFTD[22] = -3.27062078E-07;
  COFTD[23] = 5.50169005E-11;
  COFTD[24] = 1.44152190E-01;
  COFTD[25] = 7.99993584E-05;
  COFTD[26] = -4.89707442E-08;
  COFTD[27] = 9.14277269E-12;
  COFTD[28] = -1.74351746E-01;
  COFTD[29] = 8.62242165E-04;
  COFTD[30] = -3.79543417E-07;
  COFTD[31] = 5.60259034E-11;
  COFTD[32] = 1.80513126E-01;
  COFTD[33] = 6.03974096E-04;
  COFTD[34] = -3.27655164E-07;
  COFTD[35] = 5.51166667E-11;
  COFTD[36] = 1.79839678E-01;
  COFTD[37] = 6.01720824E-04;
  COFTD[38] = -3.26432767E-07;
  COFTD[39] = 5.49110406E-11;
  COFTD[40] = 1.00038655E-01;
  COFTD[41] = 6.50465703E-04;
  COFTD[42] = -3.41777446E-07;
  COFTD[43] = 5.62776574E-11;
  COFTD[44] = 1.05123703E-01;
  COFTD[45] = 6.50663360E-04;
  COFTD[46] = -3.42563171E-07;
  COFTD[47] = 5.64801866E-11;
  COFTD[48] = -1.60980730E-01;
  COFTD[49] = 9.03804574E-04;
  COFTD[50] = -4.06926592E-07;
  COFTD[51] = 6.09200234E-11;
  COFTD[52] = -1.61357064E-01;
  COFTD[53] = 9.05917454E-04;
  COFTD[54] = -4.07877889E-07;
  COFTD[55] = 6.10624399E-11;
  COFTD[56] = -1.31244138E-01;
  COFTD[57] = 9.03898764E-04;
  COFTD[58] = -4.17830295E-07;
  COFTD[59] = 6.35723824E-11;
  COFTD[60] = -1.56651155E-01;
  COFTD[61] = 9.09787277E-04;
  COFTD[62] = -4.11713122E-07;
  COFTD[63] = 6.18309211E-11;
  COFTD[64] = 2.00119185E-01;
  COFTD[65] = 5.64791694E-04;
  COFTD[66] = -3.09444383E-07;
  COFTD[67] = 5.24137469E-11;
  COFTD[68] = -2.00308977E-02;
  COFTD[69] = 8.50438113E-04;
  COFTD[70] = -4.21063477E-07;
  COFTD[71] = 6.67958138E-11;
  COFTD[72] = 1.63244604E-02;
  COFTD[73] = 7.90131000E-04;
  COFTD[74] = -3.98291254E-07;
  COFTD[75] = 6.38849501E-11;
  COFTD[76] = 1.63717030E-02;
  COFTD[77] = 7.92417622E-04;
  COFTD[78] = -3.99443901E-07;
  COFTD[79] = 6.40698319E-11;
  COFTD[80] = -5.08743421E-02;
  COFTD[81] = 8.54340362E-04;
  COFTD[82] = -4.15925370E-07;
  COFTD[83] = 6.53061561E-11;
  COFTD[84] = -2.71689899E-02;
  COFTD[85] = 8.37231102E-04;
  COFTD[86] = -4.12886635E-07;
  COFTD[87] = 6.53403612E-11;
  COFTD[88] = -2.72323151E-02;
  COFTD[89] = 8.39182512E-04;
  COFTD[90] = -4.13848987E-07;
  COFTD[91] = 6.54926559E-11;
  COFTD[92] = 9.86932164E-02;
  COFTD[93] = 7.20973229E-04;
  COFTD[94] = -3.77134366E-07;
  COFTD[95] = 6.19201176E-11;
  COFTD[96] = -1.41640200E-01;
  COFTD[97] = 9.21402335E-04;
  COFTD[98] = -4.23209196E-07;
  COFTD[99] = 6.41398937E-11;
  COFTD[100] = -1.41799447E-01;
  COFTD[101] = 9.22438273E-04;
  COFTD[102] = -4.23685013E-07;
  COFTD[103] = 6.42120066E-11;
  COFTD[104] = -2.75427946E-02;
  COFTD[105] = 8.57010907E-04;
  COFTD[106] = -4.22700941E-07;
  COFTD[107] = 6.68992754E-11;
  COFTD[108] = -2.74175456E-02;
  COFTD[109] = 8.53113705E-04;
  COFTD[110] = -4.20778735E-07;
  COFTD[111] = 6.65950553E-11;
  COFTD[112] = -4.05264355E-02;
  COFTD[113] = 8.65034494E-04;
  COFTD[114] = -4.23754623E-07;
  COFTD[115] = 6.67873033E-11;
  COFTD[116] = -4.05741399E-02;
  COFTD[117] = 8.66052741E-04;
  COFTD[118] = -4.24253431E-07;
  COFTD[119] = 6.68659197E-11;
  COFTD[120] = -4.06196633E-02;
  COFTD[121] = 8.67024435E-04;
  COFTD[122] = -4.24729436E-07;
  COFTD[123] = 6.69409420E-11;
  COFTD[124] = -1.04603590E-01;
  COFTD[125] = 9.18546258E-04;
  COFTD[126] = -4.33739512E-07;
  COFTD[127] = 6.68534077E-11;
  COFTD[128] = 2.55342069E-01;
  COFTD[129] = 4.18633590E-04;
  COFTD[130] = -2.37591519E-07;
  COFTD[131] = 4.13090729E-11;
  COFTD[132] = 2.02487758E-01;
  COFTD[133] = 5.65441941E-04;
  COFTD[134] = -3.09998311E-07;
  COFTD[135] = 5.25312371E-11;
  COFTD[136] = 2.76047505E-02;
  COFTD[137] = 8.06199937E-04;
  COFTD[138] = -4.08431546E-07;
  COFTD[139] = 6.57152296E-11;
  COFTD[140] = -8.56133817E-03;
  COFTD[141] = 8.39199736E-04;
  COFTD[142] = -4.17878599E-07;
  COFTD[143] = 6.65229395E-11;
  COFTD[144] = -8.56133817E-03;
  COFTD[145] = 8.39199736E-04;
  COFTD[146] = -4.17878599E-07;
  COFTD[147] = 6.65229395E-11;
  COFTD[148] = -8.55171436E-03;
  COFTD[149] = 8.38256391E-04;
  COFTD[150] = -4.17408861E-07;
  COFTD[151] = 6.64481610E-11;
  COFTD[152] = -1.59826602E-01;
  COFTD[153] = 9.28229412E-04;
  COFTD[154] = -4.20058885E-07;
  COFTD[155] = 6.30842846E-11;
  COFTD[156] = 4.01013632E-01;
  COFTD[157] = 1.97253232E-04;
  COFTD[158] = -1.21698396E-07;
  COFTD[159] = 2.29409318E-11;
  COFTD[160] = 4.31330748E-01;
  COFTD[161] = 9.20535689E-05;
  COFTD[162] = -5.94508898E-08;
  COFTD[163] = 1.21437846E-11;
  COFTD[164] = -1.44152190E-01;
  COFTD[165] = -7.99993584E-05;
  COFTD[166] = 4.89707442E-08;
  COFTD[167] = -9.14277269E-12;
  COFTD[168] = 4.06676789E-01;
  COFTD[169] = 3.84699853E-05;
  COFTD[170] = -2.54843294E-08;
  COFTD[171] = 5.86294132E-12;
  COFTD[172] = 4.12890501E-01;
  COFTD[173] = 3.90577773E-05;
  COFTD[174] = -2.58737105E-08;
  COFTD[175] = 5.95252260E-12;
  COFTD[176] = 4.28228101E-01;
  COFTD[177] = 1.20872486E-04;
  COFTD[178] = -7.70263335E-08;
  COFTD[179] = 1.52677960E-11;
  COFTD[180] = 0.00000000E+00;
  COFTD[181] = 0.00000000E+00;
  COFTD[182] = 0.00000000E+00;
  COFTD[183] = 0.00000000E+00;
  COFTD[184] = 2.27466103E-02;
  COFTD[185] = 6.73071543E-04;
  COFTD[186] = -3.40932103E-07;
  COFTD[187] = 5.48493184E-11;
  COFTD[188] = 4.29786829E-01;
  COFTD[189] = 1.21312456E-04;
  COFTD[190] = -7.73067054E-08;
  COFTD[191] = 1.53233700E-11;
  COFTD[192] = 4.26576987E-01;
  COFTD[193] = 1.20406440E-04;
  COFTD[194] = -7.67293441E-08;
  COFTD[195] = 1.52089282E-11;
  COFTD[196] = 3.31188133E-01;
  COFTD[197] = 1.81325042E-04;
  COFTD[198] = -1.11095367E-07;
  COFTD[199] = 2.07634046E-11;
  COFTD[200] = 3.39554500E-01;
  COFTD[201] = 1.79333587E-04;
  COFTD[202] = -1.10134815E-07;
  COFTD[203] = 2.06425572E-11;
  COFTD[204] = 1.22118967E-01;
  COFTD[205] = 6.18369499E-04;
  COFTD[206] = -3.28420406E-07;
  COFTD[207] = 5.44599896E-11;
  COFTD[208] = 1.22692619E-01;
  COFTD[209] = 6.21274281E-04;
  COFTD[210] = -3.29963157E-07;
  COFTD[211] = 5.47158146E-11;
  COFTD[212] = 1.40313353E-01;
  COFTD[213] = 6.01262661E-04;
  COFTD[214] = -3.21913277E-07;
  COFTD[215] = 5.36675963E-11;
  COFTD[216] = 1.31423336E-01;
  COFTD[217] = 6.16425772E-04;
  COFTD[218] = -3.28569556E-07;
  COFTD[219] = 5.46150455E-11;
  COFTD[220] = 4.30602469E-01;
  COFTD[221] = 9.35955212E-05;
  COFTD[222] = -6.03979306E-08;
  COFTD[223] = 1.23114290E-11;
  COFTD[224] = 2.93190141E-01;
  COFTD[225] = 4.01428114E-04;
  COFTD[226] = -2.30704675E-07;
  COFTD[227] = 4.05174676E-11;
  COFTD[228] = 3.05611370E-01;
  COFTD[229] = 3.24503916E-04;
  COFTD[230] = -1.89888419E-07;
  COFTD[231] = 3.38661408E-11;
  COFTD[232] = 3.07390533E-01;
  COFTD[233] = 3.26393065E-04;
  COFTD[234] = -1.90993884E-07;
  COFTD[235] = 3.40632978E-11;
  COFTD[236] = 2.49016176E-01;
  COFTD[237] = 4.29034331E-04;
  COFTD[238] = -2.42667349E-07;
  COFTD[239] = 4.20799172E-11;
  COFTD[240] = 2.72758271E-01;
  COFTD[241] = 3.94400799E-04;
  COFTD[242] = -2.25799420E-07;
  COFTD[243] = 3.95323710E-11;
  COFTD[244] = 2.74035711E-01;
  COFTD[245] = 3.96247941E-04;
  COFTD[246] = -2.26856932E-07;
  COFTD[247] = 3.97175174E-11;
  COFTD[248] = 3.86105710E-01;
  COFTD[249] = 2.28759408E-04;
  COFTD[250] = -1.39424407E-07;
  COFTD[251] = 2.58988578E-11;
  COFTD[252] = 1.59288295E-01;
  COFTD[253] = 6.02831194E-04;
  COFTD[254] = -3.24836171E-07;
  COFTD[255] = 5.43906658E-11;
  COFTD[256] = 1.59647280E-01;
  COFTD[257] = 6.04189783E-04;
  COFTD[258] = -3.25568248E-07;
  COFTD[259] = 5.45132450E-11;
  COFTD[260] = 2.86248296E-01;
  COFTD[261] = 4.13104248E-04;
  COFTD[262] = -2.36539521E-07;
  COFTD[263] = 4.14172737E-11;
  COFTD[264] = 2.83646335E-01;
  COFTD[265] = 4.09349182E-04;
  COFTD[266] = -2.34389406E-07;
  COFTD[267] = 4.10407959E-11;
  COFTD[268] = 2.71945062E-01;
  COFTD[269] = 4.30812732E-04;
  COFTD[270] = -2.45083425E-07;
  COFTD[271] = 4.26911430E-11;
  COFTD[272] = 2.72586795E-01;
  COFTD[273] = 4.31829359E-04;
  COFTD[274] = -2.45661770E-07;
  COFTD[275] = 4.27918850E-11;
  COFTD[276] = 2.73199845E-01;
  COFTD[277] = 4.32800547E-04;
  COFTD[278] = -2.46214265E-07;
  COFTD[279] = 4.28881244E-11;
  COFTD[280] = 2.11500700E-01;
  COFTD[281] = 5.48074004E-04;
  COFTD[282] = -3.01848819E-07;
  COFTD[283] = 5.13162676E-11;
  COFTD[284] = 4.01448263E-01;
  COFTD[285] = 1.54560270E-05;
  COFTD[286] = -1.02502613E-08;
  COFTD[287] = 2.97445074E-12;
  COFTD[288] = 4.35492076E-01;
  COFTD[289] = 9.29416694E-05;
  COFTD[290] = -6.00244511E-08;
  COFTD[291] = 1.22609436E-11;
  COFTD[292] = 3.35876848E-01;
  COFTD[293] = 3.31390958E-04;
  COFTD[294] = -1.94934498E-07;
  COFTD[295] = 3.49299774E-11;
  COFTD[296] = 3.02943823E-01;
  COFTD[297] = 3.83064991E-04;
  COFTD[298] = -2.21391159E-07;
  COFTD[299] = 3.90635860E-11;
  COFTD[300] = 3.02943823E-01;
  COFTD[301] = 3.83064991E-04;
  COFTD[302] = -2.21391159E-07;
  COFTD[303] = 3.90635860E-11;
  COFTD[304] = 3.02261978E-01;
  COFTD[305] = 3.82202815E-04;
  COFTD[306] = -2.20892867E-07;
  COFTD[307] = 3.89756643E-11;
  COFTD[308] = 1.36817150E-01;
  COFTD[309] = 6.41724825E-04;
  COFTD[310] = -3.42054551E-07;
  COFTD[311] = 5.68565302E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[39];
  amrex::Real SIG[39];
  amrex::Real wt[39];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: AR
  // Imported from NIST
  Tci[0] = 150.860000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (39.948000 * 39.948000 * 48.980000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (39.948000 * 48.980000);
  acentric_i[0] = -0.002000;

  // species 1: N2
  // Imported from NIST
  Tci[1] = 126.192000;
  ai[1] = 1e6 * 0.42748 * Rcst * Rcst * Tci[1] * Tci[1] /
          (28.013400 * 28.013400 * 33.958000);
  bi[1] = 0.08664 * Rcst * Tci[1] / (28.013400 * 33.958000);
  acentric_i[1] = 0.037200;

  // species 2: H
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: OH
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: HO2
  Tci[5] = 1.316 * EPS[5];
  ai[5] = (5.55 * avogadro * avogadro * EPS[5] * boltzmann * 1e-24 * SIG[5] *
           SIG[5] * SIG[5]) /
          (wt[5] * wt[5]);
  bi[5] = 0.855 * avogadro * 1e-24 * SIG[5] * SIG[5] * SIG[5] / (wt[5]);
  acentric_i[5] = 0.0;

  // species 6: H2
  // Imported from NIST
  Tci[6] = 33.145000;
  ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] /
          (2.015880 * 2.015880 * 12.964000);
  bi[6] = 0.08664 * Rcst * Tci[6] / (2.015880 * 12.964000);
  acentric_i[6] = -0.219000;

  // species 7: H2O
  // Imported from NIST
  Tci[7] = 647.096000;
  ai[7] = 1e6 * 0.42748 * Rcst * Rcst * Tci[7] * Tci[7] /
          (18.015340 * 18.015340 * 220.640000);
  bi[7] = 0.08664 * Rcst * Tci[7] / (18.015340 * 220.640000);
  acentric_i[7] = 0.344300;

  // species 8: H2O2
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: O2
  // Imported from NIST
  Tci[9] = 154.581000;
  ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] /
          (31.998800 * 31.998800 * 50.430466);
  bi[9] = 0.08664 * Rcst * Tci[9] / (31.998800 * 50.430466);
  acentric_i[9] = 0.022200;

  // species 10: CH3
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: CH4
  // Imported from NIST
  Tci[11] = 190.560000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (16.043030 * 16.043030 * 45.990000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (16.043030 * 45.990000);
  acentric_i[11] = 0.011000;

  // species 12: HCO
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: CH2O
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: CH3O
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: CH3OH
  // Imported from NIST
  Tci[15] = 512.640000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (32.042000 * 32.042000 * 80.970000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (32.042000 * 80.970000);
  acentric_i[15] = 0.565000;

  // species 16: CO
  // Imported from NIST
  Tci[16] = 132.850000;
  ai[16] = 1e6 * 0.42748 * Rcst * Rcst * Tci[16] * Tci[16] /
           (28.010000 * 28.010000 * 34.940000);
  bi[16] = 0.08664 * Rcst * Tci[16] / (28.010000 * 34.940000);
  acentric_i[16] = 0.045000;

  // species 17: CO2
  // Imported from NIST
  Tci[17] = 304.120000;
  ai[17] = 1e6 * 0.42748 * Rcst * Rcst * Tci[17] * Tci[17] /
           (44.009950 * 44.009950 * 73.740000);
  bi[17] = 0.08664 * Rcst * Tci[17] / (44.009950 * 73.740000);
  acentric_i[17] = 0.225000;

  // species 18: C2H2
  // Imported from NIST
  Tci[18] = 308.300000;
  ai[18] = 1e6 * 0.42748 * Rcst * Rcst * Tci[18] * Tci[18] /
           (26.038000 * 26.038000 * 61.140000);
  bi[18] = 0.08664 * Rcst * Tci[18] / (26.038000 * 61.140000);
  acentric_i[18] = 0.189000;

  // species 19: C2H3
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C2H4
  // Imported from NIST
  Tci[20] = 282.340000;
  ai[20] = 1e6 * 0.42748 * Rcst * Rcst * Tci[20] * Tci[20] /
           (28.054000 * 28.054000 * 50.410000);
  bi[20] = 0.08664 * Rcst * Tci[20] / (28.054000 * 50.410000);
  acentric_i[20] = 0.087000;

  // species 21: C2H5
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: C2H6
  // Imported from NIST
  Tci[22] = 305.320000;
  ai[22] = 1e6 * 0.42748 * Rcst * Rcst * Tci[22] * Tci[22] /
           (30.070120 * 30.070120 * 48.720000);
  bi[22] = 0.08664 * Rcst * Tci[22] / (30.070120 * 48.720000);
  acentric_i[22] = 0.099000;

  // species 23: HCCO
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: CH2CO
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: CH2CHO
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: CH2OCH2
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: aC3H4
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: aC3H5
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: C3H6
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: nC3H7
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C4H81
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: N
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: NO
  // Imported from NIST
  Tci[33] = 180.000000;
  ai[33] = 1e6 * 0.42748 * Rcst * Rcst * Tci[33] * Tci[33] /
           (30.006000 * 30.006000 * 64.800000);
  bi[33] = 0.08664 * Rcst * Tci[33] / (30.006000 * 64.800000);
  acentric_i[33] = 0.582000;

  // species 34: NO2
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: HCNO
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: HNCO
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: NCO
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: CH3O2
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: AR
  // Imported from NIST
  sqrtOneOverTc[0] = 8.1416597423011e-02;
  sqrtAsti[0] = 2.9333346340060e+04;
  Bi[0] = 5.5540880812616e-01;
  Fomega[0] = 4.8197599354800e-01;

  // species 1: N2
  // Imported from NIST
  sqrtOneOverTc[1] = 8.9019282240563e-02;
  sqrtAsti[1] = 4.2022983929562e+04;
  Bi[1] = 9.5560052221563e-01;
  Fomega[1] = 5.4259343186608e-01;

  // species 2: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 7.2391579785311e-02;
  sqrtAsti[2] = 5.8451221185793e+05;
  Bi[2] = 4.4006634563410e+00;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 9.7460146948181e-02;
  sqrtAsti[3] = 4.2500156012386e+04;
  Bi[3] = 6.6930234851885e-01;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 9.7460146948181e-02;
  sqrtAsti[4] = 3.9981183985545e+04;
  Bi[4] = 6.2963299076575e-01;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[5] = 8.4114315417892e-02;
  sqrtAsti[5] = 3.3657825710980e+04;
  Bi[5] = 6.4505861132042e-01;
  Fomega[5] = 4.8508000000000e-01;

  // species 6: H2
  // Imported from NIST
  sqrtOneOverTc[6] = 1.7369646834812e-01;
  sqrtAsti[6] = 2.4824229305911e+05;
  Bi[6] = 9.1362254169923e+00;
  Fomega[6] = 1.3798618890700e-01;

  // species 7: H2O
  // Imported from NIST
  sqrtOneOverTc[7] = 3.9311140369715e-02;
  sqrtAsti[7] = 1.3145468419592e+05;
  Bi[7] = 1.1727204136223e+00;
  Fomega[7] = 1.0013577274636e+00;

  // species 8: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[8] = 8.4114315417892e-02;
  sqrtAsti[8] = 3.2660380884830e+04;
  Bi[8] = 6.2594239211036e-01;
  Fomega[8] = 4.8508000000000e-01;

  // species 9: O2
  // Imported from NIST
  sqrtOneOverTc[9] = 8.0430717653241e-02;
  sqrtAsti[9] = 3.6980081924740e+04;
  Bi[9] = 6.9005216444999e-01;
  Fomega[9] = 5.1945301904908e-01;

  // species 10: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[10] = 7.2642504557751e-02;
  sqrtAsti[10] = 9.8558148656101e+04;
  Bi[10] = 1.8791630452967e+00;
  Fomega[10] = 4.8508000000000e-01;

  // species 11: CH4
  // Imported from NIST
  sqrtOneOverTc[11] = 7.2440948474968e-02;
  sqrtAsti[11] = 9.5215046085708e+04;
  Bi[11] = 1.8605203320660e+00;
  Fomega[11] = 5.0213035482700e-01;

  // species 12: HCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 3.9062261583604e-02;
  sqrtAsti[12] = 8.7202351509582e+04;
  Bi[12] = 8.2098075206475e-01;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[13] = 3.9062261583604e-02;
  sqrtAsti[13] = 8.4274889632487e+04;
  Bi[13] = 7.9341968505345e-01;
  Fomega[13] = 4.8508000000000e-01;

  // species 14: CH3O
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 4.2687825036676e-02;
  sqrtAsti[14] = 7.7751566794340e+04;
  Bi[14] = 8.3360142526260e-01;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: CH3OH
  // Imported from NIST
  sqrtOneOverTc[15] = 4.4166578333598e-02;
  sqrtAsti[15] = 9.6654647783180e+04;
  Bi[15] = 1.4233811698894e+00;
  Fomega[15] = 1.3133918400750e+00;

  // species 16: CO
  // Imported from NIST
  sqrtOneOverTc[16] = 8.6759935530451e-02;
  sqrtAsti[16] = 4.3619324712923e+04;
  Bi[16] = 9.7786303823350e-01;
  Fomega[16] = 5.5459948367500e-01;

  // species 17: CO2
  // Imported from NIST
  sqrtOneOverTc[17] = 5.7342616962522e-02;
  sqrtAsti[17] = 4.3745610142919e+04;
  Bi[17] = 6.7506167841745e-01;
  Fomega[17] = 8.2653709187500e-01;

  // species 18: C2H2
  // Imported from NIST
  sqrtOneOverTc[18] = 5.6952558345025e-02;
  sqrtAsti[18] = 8.2318059295808e+04;
  Bi[18] = 1.3950602011188e+00;
  Fomega[18] = 7.7293553202700e-01;

  // species 19: C2H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 6.0297445312864e-02;
  sqrtAsti[19] = 7.3975040719223e+04;
  Bi[19] = 1.3120960627055e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: C2H4
  // Imported from NIST
  sqrtOneOverTc[20] = 5.9513267432530e-02;
  sqrtAsti[20] = 7.7056842134487e+04;
  Bi[20] = 1.4381805192666e+00;
  Fomega[20] = 6.1893034120300e-01;

  // species 21: C2H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 5.4879915006830e-02;
  sqrtAsti[21] = 8.1297663542693e+04;
  Bi[21] = 1.4105965766665e+00;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: C2H6
  // Imported from NIST
  sqrtOneOverTc[22] = 5.7229819101749e-02;
  sqrtAsti[22] = 7.9078494187583e+04;
  Bi[22] = 1.5012924285481e+00;
  Fomega[22] = 6.3721234098700e-01;

  // species 23: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 7.1174827921716e-02;
  sqrtAsti[23] = 1.9669985462832e+04;
  Bi[23] = 1.9608582502049e-01;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: CH2CO
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 4.1747340173827e-02;
  sqrtAsti[24] = 6.5499293944176e+04;
  Bi[24] = 7.6640249759188e-01;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: CH2CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[25] = 4.1747340173827e-02;
  sqrtAsti[25] = 6.3965473795593e+04;
  Bi[25] = 7.4845537905146e-01;
  Fomega[25] = 4.8508000000000e-01;

  // species 26: CH2OCH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[26] = 5.4912571906481e-02;
  sqrtAsti[26] = 6.2384189749067e+04;
  Bi[26] = 1.2605569606118e+00;
  Fomega[26] = 4.8508000000000e-01;

  // species 27: aC3H4
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 5.4912571906481e-02;
  sqrtAsti[27] = 6.8593802845767e+04;
  Bi[27] = 1.3860305949290e+00;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: aC3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 5.3367780663448e-02;
  sqrtAsti[28] = 7.3719333603301e+04;
  Bi[28] = 1.5501433096373e+00;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 5.3367780663448e-02;
  sqrtAsti[29] = 7.1953475180922e+04;
  Bi[29] = 1.5130114815887e+00;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: nC3H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 5.3367780663448e-02;
  sqrtAsti[30] = 7.0270235769881e+04;
  Bi[30] = 1.4776169360332e+00;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: C4H81
  // Computed from Lennard-Jones
  sqrtOneOverTc[31] = 4.6135788482041e-02;
  sqrtAsti[31] = 6.6105873722398e+04;
  Bi[31] = 1.2725507770503e+00;
  Fomega[31] = 4.8508000000000e-01;

  // species 32: N
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 1.0316275924140e-01;
  sqrtAsti[32] = 6.0230890290396e+04;
  Bi[32] = 1.3186329724611e+00;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: NO
  // Imported from NIST
  sqrtOneOverTc[33] = 7.4535599249993e-02;
  sqrtAsti[33] = 4.0510614916903e+04;
  Bi[33] = 6.6687106751983e-01;
  Fomega[33] = 1.3368144381880e+00;

  // species 34: NO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[34] = 6.1639209090192e-02;
  sqrtAsti[34] = 3.3554545279404e+04;
  Bi[34] = 4.7986182770822e-01;
  Fomega[34] = 4.8508000000000e-01;

  // species 35: HCNO
  // Computed from Lennard-Jones
  sqrtOneOverTc[35] = 5.7181295893460e-02;
  sqrtAsti[35] = 4.4237890058841e+04;
  Bi[35] = 6.7129283860942e-01;
  Fomega[35] = 4.8508000000000e-01;

  // species 36: HNCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[36] = 5.7181295893460e-02;
  sqrtAsti[36] = 4.4237890058841e+04;
  Bi[36] = 6.7129283860942e-01;
  Fomega[36] = 4.8508000000000e-01;

  // species 37: NCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[37] = 5.7181295893460e-02;
  sqrtAsti[37] = 4.5299169854622e+04;
  Bi[37] = 6.8739734824405e-01;
  Fomega[37] = 4.8508000000000e-01;

  // species 38: CH3O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[38] = 3.9713545161155e-02;
  sqrtAsti[38] = 5.3716999347795e+04;
  Bi[38] = 5.2191265081356e-01;
  Fomega[38] = 4.8508000000000e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

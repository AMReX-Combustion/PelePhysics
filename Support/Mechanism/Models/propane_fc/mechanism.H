#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  N
1  O
2  H
3  C
*/

// Species
#define N2_ID 0
#define O_ID 1
#define H_ID 2
#define OH_ID 3
#define H2_ID 4
#define O2_ID 5
#define H2O_ID 6
#define H2O2_ID 7
#define HO2_ID 8
#define CH2GSG_ID 9
#define CH2O_ID 10
#define CH3_ID 11
#define CO_ID 12
#define CH3O_ID 13
#define C2H5_ID 14
#define CH4_ID 15
#define C2H4_ID 16
#define C2H6_ID 17
#define CO2_ID 18
#define HCO_ID 19
#define CH3O2_ID 20
#define CH3O2H_ID 21
#define C2H2_ID 22
#define HCCO_ID 23
#define C2H3_ID 24
#define CH2CHO_ID 25
#define C3H5XA_ID 26
#define C3H6_ID 27
#define C3H5O_ID 28
#define IXC3H7_ID 29
#define NXC3H7_ID 30
#define C3H8_ID 31
#define IXC3H7O2_ID 32
#define NXC3H7O2_ID 33

#define NUM_ELEMENTS 4
#define NUM_SPECIES 34
#define NUM_IONS 0
#define NUM_REACTIONS 167

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 34;
  ii = 167;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[34] = {
  0.0356964374955379, // N2
  0.0625039064941559, // O
  0.9920634920634921, // H
  0.0587993179279120, // OH
  0.4960317460317460, // H2
  0.0312519532470779, // O2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0302975216627280, // HO2
  0.0712910814857061, // CH2GSG
  0.0333044694598015, // CH2O
  0.0665114732291320, // CH3
  0.0357015351660121, // CO
  0.0322227234645872, // CH3O
  0.0344091941366733, // C2H5
  0.0623324814560868, // CH4
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0227226249176305, // CO2
  0.0344613688055690, // HCO
  0.0212616673399528, // CH3O2
  0.0208155533814866, // CH3O2H
  0.0384054074813734, // C2H2
  0.0243730044602598, // HCCO
  0.0369740442209569, // C2H3
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // C3H5XA
  0.0237636938285687, // C3H6
  0.0175217269414073, // C3H5O
  0.0232077792476038, // IXC3H7
  0.0232077792476038, // NXC3H7
  0.0226772796335352, // C3H8
  0.0133178845872122, // IXC3H7O2
  0.0133178845872122, // NXC3H7O2
};
const amrex::Real h_global_imw[34] = {
  0.0356964374955379, // N2
  0.0625039064941559, // O
  0.9920634920634921, // H
  0.0587993179279120, // OH
  0.4960317460317460, // H2
  0.0312519532470779, // O2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0302975216627280, // HO2
  0.0712910814857061, // CH2GSG
  0.0333044694598015, // CH2O
  0.0665114732291320, // CH3
  0.0357015351660121, // CO
  0.0322227234645872, // CH3O
  0.0344091941366733, // C2H5
  0.0623324814560868, // CH4
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0227226249176305, // CO2
  0.0344613688055690, // HCO
  0.0212616673399528, // CH3O2
  0.0208155533814866, // CH3O2H
  0.0384054074813734, // C2H2
  0.0243730044602598, // HCCO
  0.0369740442209569, // C2H3
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // C3H5XA
  0.0237636938285687, // C3H6
  0.0175217269414073, // C3H5O
  0.0232077792476038, // IXC3H7
  0.0232077792476038, // NXC3H7
  0.0226772796335352, // C3H8
  0.0133178845872122, // IXC3H7O2
  0.0133178845872122, // NXC3H7O2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[34] = {
  28.014000, // N2
  15.999000, // O
  1.008000,  // H
  17.007000, // OH
  2.016000,  // H2
  31.998000, // O2
  18.015000, // H2O
  34.014000, // H2O2
  33.006000, // HO2
  14.027000, // CH2GSG
  30.026000, // CH2O
  15.035000, // CH3
  28.010000, // CO
  31.034000, // CH3O
  29.062000, // C2H5
  16.043000, // CH4
  28.054000, // C2H4
  30.070000, // C2H6
  44.009000, // CO2
  29.018000, // HCO
  47.033000, // CH3O2
  48.041000, // CH3O2H
  26.038000, // C2H2
  41.029000, // HCCO
  27.046000, // C2H3
  43.045000, // CH2CHO
  41.073000, // C3H5XA
  42.081000, // C3H6
  57.072000, // C3H5O
  43.089000, // IXC3H7
  43.089000, // NXC3H7
  44.097000, // C3H8
  75.087000, // IXC3H7O2
  75.087000, // NXC3H7O2
};
const amrex::Real h_global_mw[34] = {
  28.014000, // N2
  15.999000, // O
  1.008000,  // H
  17.007000, // OH
  2.016000,  // H2
  31.998000, // O2
  18.015000, // H2O
  34.014000, // H2O2
  33.006000, // HO2
  14.027000, // CH2GSG
  30.026000, // CH2O
  15.035000, // CH3
  28.010000, // CO
  31.034000, // CH3O
  29.062000, // C2H5
  16.043000, // CH4
  28.054000, // C2H4
  30.070000, // C2H6
  44.009000, // CO2
  29.018000, // HCO
  47.033000, // CH3O2
  48.041000, // CH3O2H
  26.038000, // C2H2
  41.029000, // HCCO
  27.046000, // C2H3
  43.045000, // CH2CHO
  41.073000, // C3H5XA
  42.081000, // C3H6
  57.072000, // C3H5O
  43.089000, // IXC3H7
  43.089000, // NXC3H7
  44.097000, // C3H8
  75.087000, // IXC3H7O2
  75.087000, // NXC3H7O2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0356964374955379;  // N2
  imw_new[1] = 0.0625039064941559;  // O
  imw_new[2] = 0.9920634920634921;  // H
  imw_new[3] = 0.0587993179279120;  // OH
  imw_new[4] = 0.4960317460317460;  // H2
  imw_new[5] = 0.0312519532470779;  // O2
  imw_new[6] = 0.0555092978073827;  // H2O
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0302975216627280;  // HO2
  imw_new[9] = 0.0712910814857061;  // CH2GSG
  imw_new[10] = 0.0333044694598015; // CH2O
  imw_new[11] = 0.0665114732291320; // CH3
  imw_new[12] = 0.0357015351660121; // CO
  imw_new[13] = 0.0322227234645872; // CH3O
  imw_new[14] = 0.0344091941366733; // C2H5
  imw_new[15] = 0.0623324814560868; // CH4
  imw_new[16] = 0.0356455407428531; // C2H4
  imw_new[17] = 0.0332557366145660; // C2H6
  imw_new[18] = 0.0227226249176305; // CO2
  imw_new[19] = 0.0344613688055690; // HCO
  imw_new[20] = 0.0212616673399528; // CH3O2
  imw_new[21] = 0.0208155533814866; // CH3O2H
  imw_new[22] = 0.0384054074813734; // C2H2
  imw_new[23] = 0.0243730044602598; // HCCO
  imw_new[24] = 0.0369740442209569; // C2H3
  imw_new[25] = 0.0232315019165989; // CH2CHO
  imw_new[26] = 0.0243468945535997; // C3H5XA
  imw_new[27] = 0.0237636938285687; // C3H6
  imw_new[28] = 0.0175217269414073; // C3H5O
  imw_new[29] = 0.0232077792476038; // IXC3H7
  imw_new[30] = 0.0232077792476038; // NXC3H7
  imw_new[31] = 0.0226772796335352; // C3H8
  imw_new[32] = 0.0133178845872122; // IXC3H7O2
  imw_new[33] = 0.0133178845872122; // NXC3H7O2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 28.014000;  // N2
  mw_new[1] = 15.999000;  // O
  mw_new[2] = 1.008000;   // H
  mw_new[3] = 17.007000;  // OH
  mw_new[4] = 2.016000;   // H2
  mw_new[5] = 31.998000;  // O2
  mw_new[6] = 18.015000;  // H2O
  mw_new[7] = 34.014000;  // H2O2
  mw_new[8] = 33.006000;  // HO2
  mw_new[9] = 14.027000;  // CH2GSG
  mw_new[10] = 30.026000; // CH2O
  mw_new[11] = 15.035000; // CH3
  mw_new[12] = 28.010000; // CO
  mw_new[13] = 31.034000; // CH3O
  mw_new[14] = 29.062000; // C2H5
  mw_new[15] = 16.043000; // CH4
  mw_new[16] = 28.054000; // C2H4
  mw_new[17] = 30.070000; // C2H6
  mw_new[18] = 44.009000; // CO2
  mw_new[19] = 29.018000; // HCO
  mw_new[20] = 47.033000; // CH3O2
  mw_new[21] = 48.041000; // CH3O2H
  mw_new[22] = 26.038000; // C2H2
  mw_new[23] = 41.029000; // HCCO
  mw_new[24] = 27.046000; // C2H3
  mw_new[25] = 43.045000; // CH2CHO
  mw_new[26] = 41.073000; // C3H5XA
  mw_new[27] = 42.081000; // C3H6
  mw_new[28] = 57.072000; // C3H5O
  mw_new[29] = 43.089000; // IXC3H7
  mw_new[30] = 43.089000; // NXC3H7
  mw_new[31] = 44.097000; // C3H8
  mw_new[32] = 75.087000; // IXC3H7O2
  mw_new[33] = 75.087000; // NXC3H7O2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +2.29867700e+00 + 1.40824000e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485500e-12 * tc[4];
    // species 1: O
    species[1] = +1.94642900e+00 - 1.63816600e-03 * tc[1] +
                 2.42103200e-06 * tc[2] - 1.60284300e-09 * tc[3] +
                 3.89069600e-13 * tc[4];
    // species 4: H2
    species[4] = +2.29812400e+00 + 8.24944200e-04 * tc[1] -
                 8.14301500e-07 * tc[2] - 9.47543400e-11 * tc[3] +
                 4.13487200e-13 * tc[4];
    // species 5: O2
    species[5] = +2.21293600e+00 + 1.12748600e-03 * tc[1] -
                 5.75615000e-07 * tc[2] + 1.31387700e-09 * tc[3] -
                 8.76855400e-13 * tc[4];
    // species 6: H2O
    species[6] = +2.38684200e+00 + 3.47498200e-03 * tc[1] -
                 6.35469600e-06 * tc[2] + 6.96858100e-09 * tc[3] -
                 2.50658800e-12 * tc[4];
    // species 7: H2O2
    species[7] = +2.38875400e+00 + 6.56922600e-03 * tc[1] -
                 1.48501300e-07 * tc[2] - 4.62580600e-09 * tc[3] +
                 2.47151500e-12 * tc[4];
    // species 9: CH2GSG
    species[9] = +2.97126500e+00 - 1.69908900e-04 * tc[1] +
                 1.02536900e-06 * tc[2] + 2.49255100e-09 * tc[3] -
                 1.98126600e-12 * tc[4];
    // species 10: CH2O
    species[10] = +6.52731000e-01 + 1.26314400e-02 * tc[1] -
                  1.88816800e-05 * tc[2] + 2.05003100e-08 * tc[3] -
                  8.41323700e-12 * tc[4];
    // species 11: CH3
    species[11] = +1.43044300e+00 + 1.11241000e-02 * tc[1] -
                  1.68022000e-05 * tc[2] + 1.62182900e-08 * tc[3] -
                  5.86495300e-12 * tc[4];
    // species 12: CO
    species[12] = +2.26245200e+00 + 1.51194100e-03 * tc[1] -
                  3.88175500e-06 * tc[2] + 5.58194400e-09 * tc[3] -
                  2.47495100e-12 * tc[4];
    // species 13: CH3O
    species[13] = +1.10620400e+00 + 7.21659500e-03 * tc[1] +
                  5.33847200e-06 * tc[2] - 7.37763600e-09 * tc[3] +
                  2.07561100e-12 * tc[4];
    // species 14: C2H5
    species[14] = +1.69070200e+00 + 8.71913300e-03 * tc[1] +
                  4.41983900e-06 * tc[2] + 9.33870300e-10 * tc[3] -
                  3.92777300e-12 * tc[4];
    // species 15: CH4
    species[15] = -2.21258500e-01 + 1.74766800e-02 * tc[1] -
                  2.78340900e-05 * tc[2] + 3.04970800e-08 * tc[3] -
                  1.22393100e-11 * tc[4];
    // species 16: C2H4
    species[16] = -1.86148800e+00 + 2.79616300e-02 * tc[1] -
                  3.38867700e-05 * tc[2] + 2.78515200e-08 * tc[3] -
                  9.73787900e-12 * tc[4];
    // species 18: CO2
    species[18] = +1.27572500e+00 + 9.92207200e-03 * tc[1] -
                  1.04091100e-05 * tc[2] + 6.86668700e-09 * tc[3] -
                  2.11728000e-12 * tc[4];
    // species 19: HCO
    species[19] = +1.89833000e+00 + 6.19914700e-03 * tc[1] -
                  9.62308400e-06 * tc[2] + 1.08982500e-08 * tc[3] -
                  4.57488500e-12 * tc[4];
    // species 22: C2H2
    species[22] = +1.01356200e+00 + 1.51904500e-02 * tc[1] -
                  1.61631900e-05 * tc[2] + 9.07899200e-09 * tc[3] -
                  1.91274600e-12 * tc[4];
    // species 23: HCCO
    species[23] = +4.04796500e+00 + 4.45347800e-03 * tc[1] +
                  2.26828300e-07 * tc[2] - 1.48209500e-09 * tc[3] +
                  2.25074200e-13 * tc[4];
    // species 24: C2H3
    species[24] = +1.45927600e+00 + 7.37147600e-03 * tc[1] +
                  2.10987300e-06 * tc[2] - 1.32164200e-09 * tc[3] -
                  1.18478400e-12 * tc[4];
    // species 25: CH2CHO
    species[25] = +2.40906200e+00 + 1.07385700e-02 * tc[1] +
                  1.89149200e-06 * tc[2] - 7.15858300e-09 * tc[3] +
                  2.86738500e-12 * tc[4];
    // species 29: IXC3H7
    species[29] = +7.13300000e-01 + 2.54261600e-02 * tc[1] +
                  1.58080800e-06 * tc[2] - 1.82128600e-08 * tc[3] +
                  8.82771000e-12 * tc[4];
    // species 30: NXC3H7
    species[30] = +9.22537000e-01 + 2.47892700e-02 * tc[1] +
                  1.81024900e-06 * tc[2] - 1.78326600e-08 * tc[3] +
                  8.58299600e-12 * tc[4];
    // species 31: C3H8
    species[31] = -1.03079200e-01 + 2.66898600e-02 * tc[1] +
                  5.43142500e-06 * tc[2] - 2.12600100e-08 * tc[3] +
                  9.24333000e-12 * tc[4];
  } else {
    // species 0: N2
    species[0] = +1.92664000e+00 + 1.48797700e-03 * tc[1] -
                 5.68476100e-07 * tc[2] + 1.00970400e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 1: O
    species[1] = +1.54206000e+00 - 2.75506200e-05 * tc[1] -
                 3.10280300e-09 * tc[2] + 4.55106700e-12 * tc[3] -
                 4.36805200e-16 * tc[4];
    // species 4: H2
    species[4] = +1.99142300e+00 + 7.00064400e-04 * tc[1] -
                 5.63382900e-08 * tc[2] - 9.23157800e-12 * tc[3] +
                 1.58275200e-15 * tc[4];
    // species 5: O2
    species[5] = +2.69757800e+00 + 6.13519700e-04 * tc[1] -
                 1.25884200e-07 * tc[2] + 1.77528100e-11 * tc[3] -
                 1.13643500e-15 * tc[4];
    // species 6: H2O
    species[6] = +1.67214600e+00 + 3.05629300e-03 * tc[1] -
                 8.73026000e-07 * tc[2] + 1.20099600e-10 * tc[3] -
                 6.39161800e-15 * tc[4];
    // species 7: H2O2
    species[7] = +3.57316700e+00 + 4.33613600e-03 * tc[1] -
                 1.47468900e-06 * tc[2] + 2.34890400e-10 * tc[3] -
                 1.43165400e-14 * tc[4];
    // species 9: CH2GSG
    species[9] = +2.55288900e+00 + 2.06678800e-03 * tc[1] -
                 1.91411600e-07 * tc[2] - 1.10467300e-10 * tc[3] +
                 2.02135000e-14 * tc[4];
    // species 10: CH2O
    species[10] = +1.99560600e+00 + 6.68132100e-03 * tc[1] -
                  2.62895500e-06 * tc[2] + 4.73715300e-10 * tc[3] -
                  3.21251700e-14 * tc[4];
    // species 11: CH3
    species[11] = +1.84405200e+00 + 6.13797400e-03 * tc[1] -
                  2.23034500e-06 * tc[2] + 3.78516100e-10 * tc[3] -
                  2.45215900e-14 * tc[4];
    // species 12: CO
    species[12] = +2.02507800e+00 + 1.44268900e-03 * tc[1] -
                  5.63082800e-07 * tc[2] + 1.01858100e-10 * tc[3] -
                  6.91095200e-15 * tc[4];
    // species 13: CH3O
    species[13] = +2.77080000e+00 + 7.87149700e-03 * tc[1] -
                  2.65638400e-06 * tc[2] + 3.94443100e-10 * tc[3] -
                  2.11261600e-14 * tc[4];
    // species 14: C2H5
    species[14] = +6.19048000e+00 + 6.48407700e-03 * tc[1] -
                  6.42806500e-07 * tc[2] - 2.34787900e-10 * tc[3] +
                  3.88087700e-14 * tc[4];
    // species 15: CH4
    species[15] = +6.83479000e-01 + 1.02372400e-02 * tc[1] -
                  3.87512900e-06 * tc[2] + 6.78558500e-10 * tc[3] -
                  4.50342300e-14 * tc[4];
    // species 16: C2H4
    species[16] = +2.52841900e+00 + 1.14851800e-02 * tc[1] -
                  4.41838500e-06 * tc[2] + 7.84460100e-10 * tc[3] -
                  5.26684800e-14 * tc[4];
    // species 18: CO2
    species[18] = +3.45362300e+00 + 3.14016900e-03 * tc[1] -
                  1.27841100e-06 * tc[2] + 2.39399700e-10 * tc[3] -
                  1.66903300e-14 * tc[4];
    // species 19: HCO
    species[19] = +2.55727100e+00 + 3.34557300e-03 * tc[1] -
                  1.33500600e-06 * tc[2] + 2.47057300e-10 * tc[3] -
                  1.71385100e-14 * tc[4];
    // species 22: C2H2
    species[22] = +3.43677000e+00 + 5.37603900e-03 * tc[1] -
                  1.91281700e-06 * tc[2] + 3.28637900e-10 * tc[3] -
                  2.15671000e-14 * tc[4];
    // species 23: HCCO
    species[23] = +5.75807300e+00 + 2.00040000e-03 * tc[1] -
                  2.02760700e-07 * tc[2] - 1.04113200e-10 * tc[3] +
                  1.96516500e-14 * tc[4];
    // species 24: C2H3
    species[24] = +4.93346800e+00 + 4.01774600e-03 * tc[1] -
                  3.96674000e-07 * tc[2] - 1.44126700e-10 * tc[3] +
                  2.37864400e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +4.97567000e+00 + 8.13059100e-03 * tc[1] -
                  2.74362400e-06 * tc[2] + 4.07030400e-10 * tc[3] -
                  2.17601700e-14 * tc[4];
    // species 29: IXC3H7
    species[29] = +7.06336900e+00 + 1.57448800e-02 * tc[1] -
                  5.18239200e-06 * tc[2] + 7.47724500e-10 * tc[3] -
                  3.85442200e-14 * tc[4];
    // species 30: NXC3H7
    species[30] = +6.97829100e+00 + 1.57611300e-02 * tc[1] -
                  5.17324300e-06 * tc[2] + 7.44389200e-10 * tc[3] -
                  3.82497800e-14 * tc[4];
    // species 31: C3H8
    species[31] = +6.52521700e+00 + 1.88903400e-02 * tc[1] -
                  6.28392400e-06 * tc[2] + 9.17937300e-10 * tc[3] -
                  4.81241000e-14 * tc[4];
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +2.43586219e+00 + 2.02235804e-04 * tc[1] -
                 1.13546412e-07 * tc[2] + 2.42445149e-10 * tc[3] -
                 7.43651031e-14 * tc[4];
  } else {
    // species 3: OH
    species[3] = +1.62599754e+00 + 1.31992406e-03 * tc[1] -
                 3.59724670e-07 * tc[2] + 4.25630800e-11 * tc[3] -
                 1.82048016e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +2.18310656e+00 + 3.66767950e-03 * tc[1] -
                 9.32385122e-07 * tc[2] - 3.25852919e-10 * tc[3] +
                 1.51139912e-13 * tc[4];
    // species 21: CH3O2H
    species[21] = +2.23442817e+00 + 1.90129767e-02 * tc[1] -
                  1.13386287e-05 * tc[2] + 3.40306653e-09 * tc[3] -
                  4.11830222e-13 * tc[4];
  } else {
    // species 8: HO2
    species[8] = +3.10547423e+00 + 2.38452835e-03 * tc[1] -
                 8.06347989e-07 * tc[2] + 1.24191723e-10 * tc[3] -
                 7.16400108e-15 * tc[4];
    // species 21: CH3O2H
    species[21] = +7.43117091e+00 + 8.06817909e-03 * tc[1] -
                  2.77094921e-06 * tc[2] + 4.31332243e-10 * tc[3] -
                  2.50692146e-14 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -1.02528543e+00 + 2.40764754e-02 * tc[1] -
                  1.11893472e-05 * tc[2] + 2.08340901e-09 * tc[3] -
                  5.29868616e-14 * tc[4];
    // species 33: NXC3H7O2
    species[33] = +1.10731492e+00 + 3.96164986e-02 * tc[1] -
                  2.49491599e-05 * tc[2] + 8.59450300e-09 * tc[3] -
                  1.31240330e-12 * tc[4];
  } else {
    // species 17: C2H6
    species[17] = +5.10683385e+00 + 1.29236361e-02 * tc[1] -
                  4.42527196e-06 * tc[2] + 6.87391726e-10 * tc[3] -
                  3.98901732e-14 * tc[4];
    // species 33: NXC3H7O2
    species[33] = +1.16327059e+01 + 1.69910726e-02 * tc[1] -
                  5.88866873e-06 * tc[2] + 9.22195396e-10 * tc[3] -
                  5.38230675e-14 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +3.26146906e+00 + 1.00873599e-02 * tc[1] -
                  3.21506184e-06 * tc[2] + 2.09409267e-10 * tc[3] +
                  4.18339103e-14 * tc[4];
  } else {
    // species 20: CH3O2
    species[20] = +4.95787891e+00 + 7.90728626e-03 * tc[1] -
                  2.68246234e-06 * tc[2] + 4.13891337e-10 * tc[3] -
                  2.39007330e-14 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = -1.52913196e+00 + 3.34559100e-02 * tc[1] -
                  2.53401027e-05 * tc[2] + 1.02865754e-08 * tc[3] -
                  1.73258340e-12 * tc[4];
  } else {
    // species 26: C3H5XA
    species[26] = +7.45883958e+00 + 1.12695483e-02 * tc[1] -
                  3.83792864e-06 * tc[2] + 5.94059119e-10 * tc[3] -
                  3.43918030e-14 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = -6.05384556e-01 + 2.89107662e-02 * tc[1] -
                  1.54886808e-05 * tc[2] + 3.88814209e-09 * tc[3] -
                  3.37890352e-13 * tc[4];
    // species 32: IXC3H7O2
    species[32] = +4.99416390e-01 + 4.43081205e-02 * tc[1] -
                  3.22414456e-05 * tc[2] + 1.29687136e-08 * tc[3] -
                  2.23370569e-12 * tc[4];
  } else {
    // species 27: C3H6
    species[27] = +7.01595958e+00 + 1.37023634e-02 * tc[1] -
                  4.66249733e-06 * tc[2] + 7.21254402e-10 * tc[3] -
                  4.17370126e-14 * tc[4];
    // species 32: IXC3H7O2
    species[32] = +1.22493493e+01 + 1.64082190e-02 * tc[1] -
                  5.67432062e-06 * tc[2] + 8.87336340e-10 * tc[3] -
                  5.17361535e-14 * tc[4];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +1.98225820e-01 + 3.05579837e-02 * tc[1] -
                  1.80630276e-05 * tc[2] + 4.86150033e-09 * tc[3] -
                  4.19854562e-13 * tc[4];
  } else {
    // species 28: C3H5O
    species[28] = +9.25517520e+00 + 1.14983720e-02 * tc[1] -
                  3.84645659e-06 * tc[2] + 5.88910346e-10 * tc[3] -
                  3.38557923e-14 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 + 1.40824000e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485500e-12 * tc[4];
    // species 1: O
    species[1] = +2.94642900e+00 - 1.63816600e-03 * tc[1] +
                 2.42103200e-06 * tc[2] - 1.60284300e-09 * tc[3] +
                 3.89069600e-13 * tc[4];
    // species 4: H2
    species[4] = +3.29812400e+00 + 8.24944200e-04 * tc[1] -
                 8.14301500e-07 * tc[2] - 9.47543400e-11 * tc[3] +
                 4.13487200e-13 * tc[4];
    // species 5: O2
    species[5] = +3.21293600e+00 + 1.12748600e-03 * tc[1] -
                 5.75615000e-07 * tc[2] + 1.31387700e-09 * tc[3] -
                 8.76855400e-13 * tc[4];
    // species 6: H2O
    species[6] = +3.38684200e+00 + 3.47498200e-03 * tc[1] -
                 6.35469600e-06 * tc[2] + 6.96858100e-09 * tc[3] -
                 2.50658800e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.38875400e+00 + 6.56922600e-03 * tc[1] -
                 1.48501300e-07 * tc[2] - 4.62580600e-09 * tc[3] +
                 2.47151500e-12 * tc[4];
    // species 9: CH2GSG
    species[9] = +3.97126500e+00 - 1.69908900e-04 * tc[1] +
                 1.02536900e-06 * tc[2] + 2.49255100e-09 * tc[3] -
                 1.98126600e-12 * tc[4];
    // species 10: CH2O
    species[10] = +1.65273100e+00 + 1.26314400e-02 * tc[1] -
                  1.88816800e-05 * tc[2] + 2.05003100e-08 * tc[3] -
                  8.41323700e-12 * tc[4];
    // species 11: CH3
    species[11] = +2.43044300e+00 + 1.11241000e-02 * tc[1] -
                  1.68022000e-05 * tc[2] + 1.62182900e-08 * tc[3] -
                  5.86495300e-12 * tc[4];
    // species 12: CO
    species[12] = +3.26245200e+00 + 1.51194100e-03 * tc[1] -
                  3.88175500e-06 * tc[2] + 5.58194400e-09 * tc[3] -
                  2.47495100e-12 * tc[4];
    // species 13: CH3O
    species[13] = +2.10620400e+00 + 7.21659500e-03 * tc[1] +
                  5.33847200e-06 * tc[2] - 7.37763600e-09 * tc[3] +
                  2.07561100e-12 * tc[4];
    // species 14: C2H5
    species[14] = +2.69070200e+00 + 8.71913300e-03 * tc[1] +
                  4.41983900e-06 * tc[2] + 9.33870300e-10 * tc[3] -
                  3.92777300e-12 * tc[4];
    // species 15: CH4
    species[15] = +7.78741500e-01 + 1.74766800e-02 * tc[1] -
                  2.78340900e-05 * tc[2] + 3.04970800e-08 * tc[3] -
                  1.22393100e-11 * tc[4];
    // species 16: C2H4
    species[16] = -8.61488000e-01 + 2.79616300e-02 * tc[1] -
                  3.38867700e-05 * tc[2] + 2.78515200e-08 * tc[3] -
                  9.73787900e-12 * tc[4];
    // species 18: CO2
    species[18] = +2.27572500e+00 + 9.92207200e-03 * tc[1] -
                  1.04091100e-05 * tc[2] + 6.86668700e-09 * tc[3] -
                  2.11728000e-12 * tc[4];
    // species 19: HCO
    species[19] = +2.89833000e+00 + 6.19914700e-03 * tc[1] -
                  9.62308400e-06 * tc[2] + 1.08982500e-08 * tc[3] -
                  4.57488500e-12 * tc[4];
    // species 22: C2H2
    species[22] = +2.01356200e+00 + 1.51904500e-02 * tc[1] -
                  1.61631900e-05 * tc[2] + 9.07899200e-09 * tc[3] -
                  1.91274600e-12 * tc[4];
    // species 23: HCCO
    species[23] = +5.04796500e+00 + 4.45347800e-03 * tc[1] +
                  2.26828300e-07 * tc[2] - 1.48209500e-09 * tc[3] +
                  2.25074200e-13 * tc[4];
    // species 24: C2H3
    species[24] = +2.45927600e+00 + 7.37147600e-03 * tc[1] +
                  2.10987300e-06 * tc[2] - 1.32164200e-09 * tc[3] -
                  1.18478400e-12 * tc[4];
    // species 25: CH2CHO
    species[25] = +3.40906200e+00 + 1.07385700e-02 * tc[1] +
                  1.89149200e-06 * tc[2] - 7.15858300e-09 * tc[3] +
                  2.86738500e-12 * tc[4];
    // species 29: IXC3H7
    species[29] = +1.71330000e+00 + 2.54261600e-02 * tc[1] +
                  1.58080800e-06 * tc[2] - 1.82128600e-08 * tc[3] +
                  8.82771000e-12 * tc[4];
    // species 30: NXC3H7
    species[30] = +1.92253700e+00 + 2.47892700e-02 * tc[1] +
                  1.81024900e-06 * tc[2] - 1.78326600e-08 * tc[3] +
                  8.58299600e-12 * tc[4];
    // species 31: C3H8
    species[31] = +8.96920800e-01 + 2.66898600e-02 * tc[1] +
                  5.43142500e-06 * tc[2] - 2.12600100e-08 * tc[3] +
                  9.24333000e-12 * tc[4];
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 + 1.48797700e-03 * tc[1] -
                 5.68476100e-07 * tc[2] + 1.00970400e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 1: O
    species[1] = +2.54206000e+00 - 2.75506200e-05 * tc[1] -
                 3.10280300e-09 * tc[2] + 4.55106700e-12 * tc[3] -
                 4.36805200e-16 * tc[4];
    // species 4: H2
    species[4] = +2.99142300e+00 + 7.00064400e-04 * tc[1] -
                 5.63382900e-08 * tc[2] - 9.23157800e-12 * tc[3] +
                 1.58275200e-15 * tc[4];
    // species 5: O2
    species[5] = +3.69757800e+00 + 6.13519700e-04 * tc[1] -
                 1.25884200e-07 * tc[2] + 1.77528100e-11 * tc[3] -
                 1.13643500e-15 * tc[4];
    // species 6: H2O
    species[6] = +2.67214600e+00 + 3.05629300e-03 * tc[1] -
                 8.73026000e-07 * tc[2] + 1.20099600e-10 * tc[3] -
                 6.39161800e-15 * tc[4];
    // species 7: H2O2
    species[7] = +4.57316700e+00 + 4.33613600e-03 * tc[1] -
                 1.47468900e-06 * tc[2] + 2.34890400e-10 * tc[3] -
                 1.43165400e-14 * tc[4];
    // species 9: CH2GSG
    species[9] = +3.55288900e+00 + 2.06678800e-03 * tc[1] -
                 1.91411600e-07 * tc[2] - 1.10467300e-10 * tc[3] +
                 2.02135000e-14 * tc[4];
    // species 10: CH2O
    species[10] = +2.99560600e+00 + 6.68132100e-03 * tc[1] -
                  2.62895500e-06 * tc[2] + 4.73715300e-10 * tc[3] -
                  3.21251700e-14 * tc[4];
    // species 11: CH3
    species[11] = +2.84405200e+00 + 6.13797400e-03 * tc[1] -
                  2.23034500e-06 * tc[2] + 3.78516100e-10 * tc[3] -
                  2.45215900e-14 * tc[4];
    // species 12: CO
    species[12] = +3.02507800e+00 + 1.44268900e-03 * tc[1] -
                  5.63082800e-07 * tc[2] + 1.01858100e-10 * tc[3] -
                  6.91095200e-15 * tc[4];
    // species 13: CH3O
    species[13] = +3.77080000e+00 + 7.87149700e-03 * tc[1] -
                  2.65638400e-06 * tc[2] + 3.94443100e-10 * tc[3] -
                  2.11261600e-14 * tc[4];
    // species 14: C2H5
    species[14] = +7.19048000e+00 + 6.48407700e-03 * tc[1] -
                  6.42806500e-07 * tc[2] - 2.34787900e-10 * tc[3] +
                  3.88087700e-14 * tc[4];
    // species 15: CH4
    species[15] = +1.68347900e+00 + 1.02372400e-02 * tc[1] -
                  3.87512900e-06 * tc[2] + 6.78558500e-10 * tc[3] -
                  4.50342300e-14 * tc[4];
    // species 16: C2H4
    species[16] = +3.52841900e+00 + 1.14851800e-02 * tc[1] -
                  4.41838500e-06 * tc[2] + 7.84460100e-10 * tc[3] -
                  5.26684800e-14 * tc[4];
    // species 18: CO2
    species[18] = +4.45362300e+00 + 3.14016900e-03 * tc[1] -
                  1.27841100e-06 * tc[2] + 2.39399700e-10 * tc[3] -
                  1.66903300e-14 * tc[4];
    // species 19: HCO
    species[19] = +3.55727100e+00 + 3.34557300e-03 * tc[1] -
                  1.33500600e-06 * tc[2] + 2.47057300e-10 * tc[3] -
                  1.71385100e-14 * tc[4];
    // species 22: C2H2
    species[22] = +4.43677000e+00 + 5.37603900e-03 * tc[1] -
                  1.91281700e-06 * tc[2] + 3.28637900e-10 * tc[3] -
                  2.15671000e-14 * tc[4];
    // species 23: HCCO
    species[23] = +6.75807300e+00 + 2.00040000e-03 * tc[1] -
                  2.02760700e-07 * tc[2] - 1.04113200e-10 * tc[3] +
                  1.96516500e-14 * tc[4];
    // species 24: C2H3
    species[24] = +5.93346800e+00 + 4.01774600e-03 * tc[1] -
                  3.96674000e-07 * tc[2] - 1.44126700e-10 * tc[3] +
                  2.37864400e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +5.97567000e+00 + 8.13059100e-03 * tc[1] -
                  2.74362400e-06 * tc[2] + 4.07030400e-10 * tc[3] -
                  2.17601700e-14 * tc[4];
    // species 29: IXC3H7
    species[29] = +8.06336900e+00 + 1.57448800e-02 * tc[1] -
                  5.18239200e-06 * tc[2] + 7.47724500e-10 * tc[3] -
                  3.85442200e-14 * tc[4];
    // species 30: NXC3H7
    species[30] = +7.97829100e+00 + 1.57611300e-02 * tc[1] -
                  5.17324300e-06 * tc[2] + 7.44389200e-10 * tc[3] -
                  3.82497800e-14 * tc[4];
    // species 31: C3H8
    species[31] = +7.52521700e+00 + 1.88903400e-02 * tc[1] -
                  6.28392400e-06 * tc[2] + 9.17937300e-10 * tc[3] -
                  4.81241000e-14 * tc[4];
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +3.43586219e+00 + 2.02235804e-04 * tc[1] -
                 1.13546412e-07 * tc[2] + 2.42445149e-10 * tc[3] -
                 7.43651031e-14 * tc[4];
  } else {
    // species 3: OH
    species[3] = +2.62599754e+00 + 1.31992406e-03 * tc[1] -
                 3.59724670e-07 * tc[2] + 4.25630800e-11 * tc[3] -
                 1.82048016e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +3.18310656e+00 + 3.66767950e-03 * tc[1] -
                 9.32385122e-07 * tc[2] - 3.25852919e-10 * tc[3] +
                 1.51139912e-13 * tc[4];
    // species 21: CH3O2H
    species[21] = +3.23442817e+00 + 1.90129767e-02 * tc[1] -
                  1.13386287e-05 * tc[2] + 3.40306653e-09 * tc[3] -
                  4.11830222e-13 * tc[4];
  } else {
    // species 8: HO2
    species[8] = +4.10547423e+00 + 2.38452835e-03 * tc[1] -
                 8.06347989e-07 * tc[2] + 1.24191723e-10 * tc[3] -
                 7.16400108e-15 * tc[4];
    // species 21: CH3O2H
    species[21] = +8.43117091e+00 + 8.06817909e-03 * tc[1] -
                  2.77094921e-06 * tc[2] + 4.31332243e-10 * tc[3] -
                  2.50692146e-14 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -2.52854344e-02 + 2.40764754e-02 * tc[1] -
                  1.11893472e-05 * tc[2] + 2.08340901e-09 * tc[3] -
                  5.29868616e-14 * tc[4];
    // species 33: NXC3H7O2
    species[33] = +2.10731492e+00 + 3.96164986e-02 * tc[1] -
                  2.49491599e-05 * tc[2] + 8.59450300e-09 * tc[3] -
                  1.31240330e-12 * tc[4];
  } else {
    // species 17: C2H6
    species[17] = +6.10683385e+00 + 1.29236361e-02 * tc[1] -
                  4.42527196e-06 * tc[2] + 6.87391726e-10 * tc[3] -
                  3.98901732e-14 * tc[4];
    // species 33: NXC3H7O2
    species[33] = +1.26327059e+01 + 1.69910726e-02 * tc[1] -
                  5.88866873e-06 * tc[2] + 9.22195396e-10 * tc[3] -
                  5.38230675e-14 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +4.26146906e+00 + 1.00873599e-02 * tc[1] -
                  3.21506184e-06 * tc[2] + 2.09409267e-10 * tc[3] +
                  4.18339103e-14 * tc[4];
  } else {
    // species 20: CH3O2
    species[20] = +5.95787891e+00 + 7.90728626e-03 * tc[1] -
                  2.68246234e-06 * tc[2] + 4.13891337e-10 * tc[3] -
                  2.39007330e-14 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = -5.29131958e-01 + 3.34559100e-02 * tc[1] -
                  2.53401027e-05 * tc[2] + 1.02865754e-08 * tc[3] -
                  1.73258340e-12 * tc[4];
  } else {
    // species 26: C3H5XA
    species[26] = +8.45883958e+00 + 1.12695483e-02 * tc[1] -
                  3.83792864e-06 * tc[2] + 5.94059119e-10 * tc[3] -
                  3.43918030e-14 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +3.94615444e-01 + 2.89107662e-02 * tc[1] -
                  1.54886808e-05 * tc[2] + 3.88814209e-09 * tc[3] -
                  3.37890352e-13 * tc[4];
    // species 32: IXC3H7O2
    species[32] = +1.49941639e+00 + 4.43081205e-02 * tc[1] -
                  3.22414456e-05 * tc[2] + 1.29687136e-08 * tc[3] -
                  2.23370569e-12 * tc[4];
  } else {
    // species 27: C3H6
    species[27] = +8.01595958e+00 + 1.37023634e-02 * tc[1] -
                  4.66249733e-06 * tc[2] + 7.21254402e-10 * tc[3] -
                  4.17370126e-14 * tc[4];
    // species 32: IXC3H7O2
    species[32] = +1.32493493e+01 + 1.64082190e-02 * tc[1] -
                  5.67432062e-06 * tc[2] + 8.87336340e-10 * tc[3] -
                  5.17361535e-14 * tc[4];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +1.19822582e+00 + 3.05579837e-02 * tc[1] -
                  1.80630276e-05 * tc[2] + 4.86150033e-09 * tc[3] -
                  4.19854562e-13 * tc[4];
  } else {
    // species 28: C3H5O
    species[28] = +1.02551752e+01 + 1.14983720e-02 * tc[1] -
                  3.84645659e-06 * tc[2] + 5.88910346e-10 * tc[3] -
                  3.38557923e-14 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = -1.020900000000000e+03 * invT - 6.516950000000001e-01 -
                 3.298677000000000e+00 * tc[0] - 7.041200000000000e-04 * tc[1] +
                 6.605369999999999e-07 * tc[2] - 4.701262500000001e-10 * tc[3] +
                 1.222427500000000e-13 * tc[4];
    // species 1: O
    species[1] = +2.914764000000000e+04 * invT - 1.756599999999997e-02 -
                 2.946429000000000e+00 * tc[0] + 8.190830000000000e-04 * tc[1] -
                 4.035053333333333e-07 * tc[2] + 1.335702500000000e-10 * tc[3] -
                 1.945348000000000e-14 * tc[4];
    // species 4: H2
    species[4] = -1.012521000000000e+03 * invT + 6.592218000000000e+00 -
                 3.298124000000000e+00 * tc[0] - 4.124721000000000e-04 * tc[1] +
                 1.357169166666667e-07 * tc[2] + 7.896194999999999e-12 * tc[3] -
                 2.067436000000000e-14 * tc[4];
    // species 5: O2
    species[5] = -1.005249000000000e+03 * invT - 2.821802000000000e+00 -
                 3.212936000000000e+00 * tc[0] - 5.637430000000000e-04 * tc[1] +
                 9.593583333333333e-08 * tc[2] - 1.094897500000000e-10 * tc[3] +
                 4.384277000000000e-14 * tc[4];
    // species 6: H2O
    species[6] = -3.020811000000000e+04 * invT + 7.966090000000001e-01 -
                 3.386842000000000e+00 * tc[0] - 1.737491000000000e-03 * tc[1] +
                 1.059116000000000e-06 * tc[2] - 5.807150833333333e-10 * tc[3] +
                 1.253294000000000e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.766315000000000e+04 * invT - 3.396609000000000e+00 -
                 3.388754000000000e+00 * tc[0] - 3.284613000000000e-03 * tc[1] +
                 2.475021666666666e-08 * tc[2] + 3.854838333333333e-10 * tc[3] -
                 1.235757500000000e-13 * tc[4];
    // species 9: CH2GSG
    species[9] = +4.989368000000000e+04 * invT + 3.913732930000000e+00 -
                 3.971265000000000e+00 * tc[0] + 8.495445000000000e-05 * tc[1] -
                 1.708948333333333e-07 * tc[2] - 2.077125833333333e-10 * tc[3] +
                 9.906330000000000e-14 * tc[4];
    // species 10: CH2O
    species[10] = -1.486540000000000e+04 * invT - 1.213208900000000e+01 -
                  1.652731000000000e+00 * tc[0] -
                  6.315720000000000e-03 * tc[1] +
                  3.146946666666667e-06 * tc[2] -
                  1.708359166666667e-09 * tc[3] + 4.206618500000000e-13 * tc[4];
    // species 11: CH3
    species[11] = +1.642378000000000e+04 * invT - 4.359351000000000e+00 -
                  2.430443000000000e+00 * tc[0] -
                  5.562050000000000e-03 * tc[1] +
                  2.800366666666666e-06 * tc[2] -
                  1.351524166666667e-09 * tc[3] + 2.932476500000000e-13 * tc[4];
    // species 12: CO
    species[12] = -1.431054000000000e+04 * invT - 1.586445000000000e+00 -
                  3.262452000000000e+00 * tc[0] -
                  7.559705000000000e-04 * tc[1] +
                  6.469591666666667e-07 * tc[2] -
                  4.651620000000000e-10 * tc[3] + 1.237475500000000e-13 * tc[4];
    // species 13: CH3O
    species[13] = +9.786011000000000e+02 * invT - 1.104597600000000e+01 -
                  2.106204000000000e+00 * tc[0] -
                  3.608297500000000e-03 * tc[1] -
                  8.897453333333333e-07 * tc[2] +
                  6.148030000000000e-10 * tc[3] - 1.037805500000000e-13 * tc[4];
    // species 14: C2H5
    species[14] = +1.287040000000000e+04 * invT - 9.447498000000000e+00 -
                  2.690702000000000e+00 * tc[0] -
                  4.359566500000000e-03 * tc[1] -
                  7.366398333333332e-07 * tc[2] -
                  7.782252500000001e-11 * tc[3] + 1.963886500000000e-13 * tc[4];
    // species 15: CH4
    species[15] = -9.825228999999999e+03 * invT - 1.294344850000000e+01 -
                  7.787415000000000e-01 * tc[0] -
                  8.738340000000001e-03 * tc[1] +
                  4.639015000000000e-06 * tc[2] -
                  2.541423333333333e-09 * tc[3] + 6.119655000000000e-13 * tc[4];
    // species 16: C2H4
    species[16] = +5.573046000000000e+03 * invT - 2.507297800000000e+01 +
                  8.614880000000000e-01 * tc[0] -
                  1.398081500000000e-02 * tc[1] +
                  5.647795000000000e-06 * tc[2] -
                  2.320960000000000e-09 * tc[3] + 4.868939500000000e-13 * tc[4];
    // species 18: CO2
    species[18] = -4.837314000000000e+04 * invT - 7.912765000000000e+00 -
                  2.275725000000000e+00 * tc[0] -
                  4.961036000000000e-03 * tc[1] +
                  1.734851666666667e-06 * tc[2] -
                  5.722239166666667e-10 * tc[3] + 1.058640000000000e-13 * tc[4];
    // species 19: HCO
    species[19] = +4.159922000000000e+03 * invT - 6.085284000000000e+00 -
                  2.898330000000000e+00 * tc[0] -
                  3.099573500000000e-03 * tc[1] +
                  1.603847333333333e-06 * tc[2] -
                  9.081875000000000e-10 * tc[3] + 2.287442500000000e-13 * tc[4];
    // species 22: C2H2
    species[22] = +2.612444000000000e+04 * invT - 6.791815999999999e+00 -
                  2.013562000000000e+00 * tc[0] -
                  7.595225000000000e-03 * tc[1] +
                  2.693865000000000e-06 * tc[2] -
                  7.565826666666667e-10 * tc[3] + 9.563730000000000e-14 * tc[4];
    // species 23: HCCO
    species[23] = +1.965892000000000e+04 * invT + 4.566121099999999e+00 -
                  5.047965000000000e+00 * tc[0] -
                  2.226739000000000e-03 * tc[1] -
                  3.780471666666667e-08 * tc[2] +
                  1.235079166666667e-10 * tc[3] - 1.125371000000000e-14 * tc[4];
    // species 24: C2H3
    species[24] = +3.335225000000000e+04 * invT - 9.096924000000001e+00 -
                  2.459276000000000e+00 * tc[0] -
                  3.685738000000000e-03 * tc[1] -
                  3.516455000000000e-07 * tc[2] +
                  1.101368333333333e-10 * tc[3] + 5.923920000000000e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +1.521477000000000e+03 * invT - 6.149227999999999e+00 -
                  3.409062000000000e+00 * tc[0] -
                  5.369285000000000e-03 * tc[1] -
                  3.152486666666667e-07 * tc[2] +
                  5.965485833333333e-10 * tc[3] - 1.433692500000000e-13 * tc[4];
    // species 29: IXC3H7
    species[29] = +7.535809000000000e+03 * invT - 1.126571000000000e+01 -
                  1.713300000000000e+00 * tc[0] -
                  1.271308000000000e-02 * tc[1] -
                  2.634680000000000e-07 * tc[2] +
                  1.517738333333333e-09 * tc[3] - 4.413855000000000e-13 * tc[4];
    // species 30: NXC3H7
    species[30] = +9.713281000000001e+03 * invT - 1.207017300000000e+01 -
                  1.922537000000000e+00 * tc[0] -
                  1.239463500000000e-02 * tc[1] -
                  3.017081666666666e-07 * tc[2] +
                  1.486055000000000e-09 * tc[3] - 4.291498000000000e-13 * tc[4];
    // species 31: C3H8
    species[31] = -1.395492000000000e+04 * invT - 1.845840920000000e+01 -
                  8.969208000000000e-01 * tc[0] -
                  1.334493000000000e-02 * tc[1] -
                  9.052375000000000e-07 * tc[2] +
                  1.771667500000000e-09 * tc[3] - 4.621665000000000e-13 * tc[4];
  } else {
    // species 0: N2
    species[0] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                 2.926640000000000e+00 * tc[0] - 7.439885000000000e-04 * tc[1] +
                 9.474601666666666e-08 * tc[2] - 8.414199999999999e-12 * tc[3] +
                 3.376675500000000e-16 * tc[4];
    // species 1: O
    species[1] = +2.923080000000000e+04 * invT - 2.378248000000000e+00 -
                 2.542060000000000e+00 * tc[0] + 1.377531000000000e-05 * tc[1] +
                 5.171338333333333e-10 * tc[2] - 3.792555833333334e-13 * tc[3] +
                 2.184026000000000e-17 * tc[4];
    // species 4: H2
    species[4] = -8.350340000000000e+02 * invT + 4.346533000000000e+00 -
                 2.991423000000000e+00 * tc[0] - 3.500322000000000e-04 * tc[1] +
                 9.389715000000000e-09 * tc[2] + 7.692981666666667e-13 * tc[3] -
                 7.913760000000000e-17 * tc[4];
    // species 5: O2
    species[5] = -1.233930000000000e+03 * invT + 5.084119999999999e-01 -
                 3.697578000000000e+00 * tc[0] - 3.067598500000000e-04 * tc[1] +
                 2.098070000000000e-08 * tc[2] - 1.479400833333333e-12 * tc[3] +
                 5.682175000000001e-17 * tc[4];
    // species 6: H2O
    species[6] = -2.989921000000000e+04 * invT - 4.190671000000000e+00 -
                 2.672146000000000e+00 * tc[0] - 1.528146500000000e-03 * tc[1] +
                 1.455043333333333e-07 * tc[2] - 1.000830000000000e-11 * tc[3] +
                 3.195809000000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.800696000000000e+04 * invT + 4.072030000000000e+00 -
                 4.573167000000000e+00 * tc[0] - 2.168068000000000e-03 * tc[1] +
                 2.457815000000000e-07 * tc[2] - 1.957420000000000e-11 * tc[3] +
                 7.158270000000000e-16 * tc[4];
    // species 9: CH2GSG
    species[9] = +4.984975000000000e+04 * invT + 1.866319000000000e+00 -
                 3.552889000000000e+00 * tc[0] - 1.033394000000000e-03 * tc[1] +
                 3.190193333333333e-08 * tc[2] + 9.205608333333333e-12 * tc[3] -
                 1.010675000000000e-15 * tc[4];
    // species 10: CH2O
    species[10] = -1.532037000000000e+04 * invT - 3.916966000000000e+00 -
                  2.995606000000000e+00 * tc[0] -
                  3.340660500000000e-03 * tc[1] +
                  4.381591666666666e-07 * tc[2] -
                  3.947627500000000e-11 * tc[3] + 1.606258500000000e-15 * tc[4];
    // species 11: CH3
    species[11] = +1.643781000000000e+04 * invT - 2.608645000000000e+00 -
                  2.844052000000000e+00 * tc[0] -
                  3.068987000000000e-03 * tc[1] +
                  3.717241666666666e-07 * tc[2] -
                  3.154300833333333e-11 * tc[3] + 1.226079500000000e-15 * tc[4];
    // species 12: CO
    species[12] = -1.426835000000000e+04 * invT - 3.083140000000000e+00 -
                  3.025078000000000e+00 * tc[0] -
                  7.213445000000000e-04 * tc[1] +
                  9.384713333333334e-08 * tc[2] -
                  8.488174999999999e-12 * tc[3] + 3.455476000000000e-16 * tc[4];
    // species 13: CH3O
    species[13] = +1.278325000000000e+02 * invT + 8.412250000000001e-01 -
                  3.770800000000000e+00 * tc[0] -
                  3.935748500000000e-03 * tc[1] +
                  4.427306666666667e-07 * tc[2] -
                  3.287025833333333e-11 * tc[3] + 1.056308000000000e-15 * tc[4];
    // species 14: C2H5
    species[14] = +1.067455000000000e+04 * invT + 2.197137000000000e+01 -
                  7.190480000000000e+00 * tc[0] -
                  3.242038500000000e-03 * tc[1] +
                  1.071344166666667e-07 * tc[2] +
                  1.956565833333333e-11 * tc[3] - 1.940438500000000e-15 * tc[4];
    // species 15: CH4
    species[15] = -1.008079000000000e+04 * invT - 7.939916000000000e+00 -
                  1.683479000000000e+00 * tc[0] -
                  5.118620000000000e-03 * tc[1] +
                  6.458548333333333e-07 * tc[2] -
                  5.654654166666667e-11 * tc[3] + 2.251711500000000e-15 * tc[4];
    // species 16: C2H4
    species[16] = +4.428289000000000e+03 * invT + 1.298030000000000e+00 -
                  3.528419000000000e+00 * tc[0] -
                  5.742590000000000e-03 * tc[1] +
                  7.363975000000000e-07 * tc[2] -
                  6.537167500000001e-11 * tc[3] + 2.633424000000000e-15 * tc[4];
    // species 18: CO2
    species[18] = -4.896696000000000e+04 * invT + 5.409018900000000e+00 -
                  4.453623000000000e+00 * tc[0] -
                  1.570084500000000e-03 * tc[1] +
                  2.130685000000000e-07 * tc[2] -
                  1.994997500000000e-11 * tc[3] + 8.345165000000000e-16 * tc[4];
    // species 19: HCO
    species[19] = +3.916324000000000e+03 * invT - 1.995028000000000e+00 -
                  3.557271000000000e+00 * tc[0] -
                  1.672786500000000e-03 * tc[1] +
                  2.225010000000000e-07 * tc[2] -
                  2.058810833333333e-11 * tc[3] + 8.569255000000000e-16 * tc[4];
    // species 22: C2H2
    species[22] = +2.566766000000000e+04 * invT + 7.237108000000000e+00 -
                  4.436770000000000e+00 * tc[0] -
                  2.688019500000000e-03 * tc[1] +
                  3.188028333333333e-07 * tc[2] -
                  2.738649166666667e-11 * tc[3] + 1.078355000000000e-15 * tc[4];
    // species 23: HCCO
    species[23] = +1.901513000000000e+04 * invT + 1.582933500000000e+01 -
                  6.758073000000000e+00 * tc[0] -
                  1.000200000000000e-03 * tc[1] +
                  3.379345000000000e-08 * tc[2] +
                  8.676100000000000e-12 * tc[3] - 9.825825000000000e-16 * tc[4];
    // species 24: C2H3
    species[24] = +3.185435000000000e+04 * invT + 1.446378100000000e+01 -
                  5.933468000000000e+00 * tc[0] -
                  2.008873000000000e-03 * tc[1] +
                  6.611233333333333e-08 * tc[2] +
                  1.201055833333333e-11 * tc[3] - 1.189322000000000e-15 * tc[4];
    // species 25: CH2CHO
    species[25] = +4.903218000000000e+02 * invT + 1.102092100000000e+01 -
                  5.975670000000000e+00 * tc[0] -
                  4.065295500000000e-03 * tc[1] +
                  4.572706666666667e-07 * tc[2] -
                  3.391920000000000e-11 * tc[3] + 1.088008500000000e-15 * tc[4];
    // species 29: IXC3H7
    species[29] = +5.313871000000000e+03 * invT + 2.998983900000000e+01 -
                  8.063369000000000e+00 * tc[0] -
                  7.872440000000000e-03 * tc[1] +
                  8.637320000000000e-07 * tc[2] -
                  6.231037499999999e-11 * tc[3] + 1.927211000000000e-15 * tc[4];
    // species 30: NXC3H7
    species[30] = +7.579402000000000e+03 * invT + 2.733440100000000e+01 -
                  7.978291000000000e+00 * tc[0] -
                  7.880565000000001e-03 * tc[1] +
                  8.622071666666666e-07 * tc[2] -
                  6.203243333333333e-11 * tc[3] + 1.912489000000000e-15 * tc[4];
    // species 31: C3H8
    species[31] = -1.646455000000000e+04 * invT + 2.536911700000000e+01 -
                  7.525217000000000e+00 * tc[0] -
                  9.445169999999999e-03 * tc[1] +
                  1.047320666666667e-06 * tc[2] -
                  7.649477500000000e-11 * tc[3] + 2.406205000000000e-15 * tc[4];
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +2.547474660000000e+04 * invT + 2.966385537000000e+00 -
               2.501044220000000e+00 * tc[0] - 0.000000000000000e+00 * tc[1] -
               0.000000000000000e+00 * tc[2] - 0.000000000000000e+00 * tc[3] -
               0.000000000000000e+00 * tc[4];

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +3.743212520000000e+03 * invT + 9.857209199999999e-01 -
                 3.435862190000000e+00 * tc[0] - 1.011179020000000e-04 * tc[1] +
                 1.892440200000000e-08 * tc[2] - 2.020376241666666e-11 * tc[3] +
                 3.718255155000000e-15 * tc[4];
  } else {
    // species 3: OH
    species[3] = +4.120853740000000e+03 * invT - 4.480675530000000e+00 -
                 2.625997540000000e+00 * tc[0] - 6.599620300000000e-04 * tc[1] +
                 5.995411166666667e-08 * tc[2] - 3.546923333333333e-12 * tc[3] +
                 9.102400800000000e-17 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +8.091810130000000e+02 * invT - 5.210604430000000e+00 -
                 3.183106560000000e+00 * tc[0] - 1.833839750000000e-03 * tc[1] +
                 1.553975203333333e-07 * tc[2] + 2.715440991666667e-11 * tc[3] -
                 7.556995600000000e-15 * tc[4];
    // species 21: CH3O2H
    species[21] = -1.771979260000000e+04 * invT - 6.021811320000000e+00 -
                  3.234428170000000e+00 * tc[0] -
                  9.506488350000000e-03 * tc[1] +
                  1.889771450000000e-06 * tc[2] -
                  2.835888775000000e-10 * tc[3] + 2.059151110000000e-14 * tc[4];
  } else {
    // species 8: HO2
    species[8] = +3.981276890000000e+02 * invT + 9.803158699999996e-01 -
                 4.105474230000000e+00 * tc[0] - 1.192264175000000e-03 * tc[1] +
                 1.343913315000000e-07 * tc[2] - 1.034931025000000e-11 * tc[3] +
                 3.582000540000000e-16 * tc[4];
    // species 21: CH3O2H
    species[21] = -1.966787710000000e+04 * invT + 2.754823381000000e+01 -
                  8.431170910000001e+00 * tc[0] -
                  4.034089545000000e-03 * tc[1] +
                  4.618248683333333e-07 * tc[2] -
                  3.594435358333333e-11 * tc[3] + 1.253460730000000e-15 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -1.123455340000000e+04 * invT - 2.119016043440000e+01 +
                  2.528543440000000e-02 * tc[0] -
                  1.203823770000000e-02 * tc[1] +
                  1.864891200000000e-06 * tc[2] -
                  1.736174175000000e-10 * tc[3] + 2.649343080000000e-15 * tc[4];
    // species 33: NXC3H7O2
    species[33] = -7.937455670000000e+03 * invT - 1.680095988000000e+01 -
                  2.107314920000000e+00 * tc[0] -
                  1.980824930000000e-02 * tc[1] +
                  4.158193316666667e-06 * tc[2] -
                  7.162085833333334e-10 * tc[3] + 6.562016500000000e-14 * tc[4];
  } else {
    // species 17: C2H6
    species[17] = -1.375000140000000e+04 * invT + 1.911495885000000e+01 -
                  6.106833850000000e+00 * tc[0] -
                  6.461818050000000e-03 * tc[1] +
                  7.375453266666666e-07 * tc[2] -
                  5.728264383333333e-11 * tc[3] + 1.994508660000000e-15 * tc[4];
    // species 33: NXC3H7O2
    species[33] = -1.191946520000000e+04 * invT + 5.116763560000000e+01 -
                  1.263270590000000e+01 * tc[0] -
                  8.495536300000000e-03 * tc[1] +
                  9.814447883333334e-07 * tc[2] -
                  7.684961633333334e-11 * tc[3] + 2.691153375000000e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = -6.843942590000000e+02 * invT - 9.018341400000001e-01 -
                  4.261469060000000e+00 * tc[0] -
                  5.043679950000000e-03 * tc[1] +
                  5.358436400000000e-07 * tc[2] -
                  1.745077225000000e-11 * tc[3] - 2.091695515000000e-15 * tc[4];
  } else {
    // species 20: CH3O2
    species[20] = -1.535748380000000e+03 * invT + 1.067751777000000e+01 -
                  5.957878910000000e+00 * tc[0] -
                  3.953643130000000e-03 * tc[1] +
                  4.470770566666667e-07 * tc[2] -
                  3.449094475000000e-11 * tc[3] + 1.195036650000000e-15 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = +1.938342260000000e+04 * invT - 2.583584505800000e+01 +
                  5.291319580000000e-01 * tc[0] -
                  1.672795500000000e-02 * tc[1] +
                  4.223350450000001e-06 * tc[2] -
                  8.572146166666666e-10 * tc[3] + 8.662917000000000e-14 * tc[4];
  } else {
    // species 26: C3H5XA
    species[26] = +1.635760920000000e+04 * invT + 3.103978458000000e+01 -
                  8.458839579999999e+00 * tc[0] -
                  5.634774150000000e-03 * tc[1] +
                  6.396547733333333e-07 * tc[2] -
                  4.950492658333333e-11 * tc[3] + 1.719590150000000e-15 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +1.066881640000000e+03 * invT - 2.150575815600000e+01 -
                  3.946154440000000e-01 * tc[0] -
                  1.445538310000000e-02 * tc[1] +
                  2.581446800000000e-06 * tc[2] -
                  3.240118408333333e-10 * tc[3] + 1.689451760000000e-14 * tc[4];
    // species 32: IXC3H7O2
    species[32] = -1.025879800000000e+04 * invT - 1.873423261000000e+01 -
                  1.499416390000000e+00 * tc[0] -
                  2.215406025000000e-02 * tc[1] +
                  5.373574266666667e-06 * tc[2] -
                  1.080726133333333e-09 * tc[3] + 1.116852845000000e-13 * tc[4];
  } else {
    // species 27: C3H6
    species[27] = -1.878212710000000e+03 * invT + 2.803202638000000e+01 -
                  8.015959580000001e+00 * tc[0] -
                  6.851181700000000e-03 * tc[1] +
                  7.770828883333333e-07 * tc[2] -
                  6.010453350000000e-11 * tc[3] + 2.086850630000000e-15 * tc[4];
    // species 32: IXC3H7O2
    species[32] = -1.441098550000000e+04 * invT + 5.615597060000000e+01 -
                  1.324934930000000e+01 * tc[0] -
                  8.204109500000001e-03 * tc[1] +
                  9.457201033333333e-07 * tc[2] -
                  7.394469499999999e-11 * tc[3] + 2.586807675000000e-15 * tc[4];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +9.582177840000000e+03 * invT - 2.035839628000000e+01 -
                  1.198225820000000e+00 * tc[0] -
                  1.527899185000000e-02 * tc[1] +
                  3.010504600000000e-06 * tc[2] -
                  4.051250275000000e-10 * tc[3] + 2.099272810000000e-14 * tc[4];
  } else {
    // species 28: C3H5O
    species[28] = +6.265608100000000e+03 * invT + 3.802067940000000e+01 -
                  1.025517520000000e+01 * tc[0] -
                  5.749186000000000e-03 * tc[1] +
                  6.410760983333333e-07 * tc[2] -
                  4.907586216666667e-11 * tc[3] + 1.692789615000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = -1.02090000e+03 * invT - 1.65169500e+00 -
                 3.29867700e+00 * tc[0] - 7.04120000e-04 * tc[1] +
                 6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                 1.22242750e-13 * tc[4];
    // species 1: O
    species[1] = +2.91476400e+04 * invT - 1.01756600e+00 -
                 2.94642900e+00 * tc[0] + 8.19083000e-04 * tc[1] -
                 4.03505333e-07 * tc[2] + 1.33570250e-10 * tc[3] -
                 1.94534800e-14 * tc[4];
    // species 4: H2
    species[4] = -1.01252100e+03 * invT + 5.59221800e+00 -
                 3.29812400e+00 * tc[0] - 4.12472100e-04 * tc[1] +
                 1.35716917e-07 * tc[2] + 7.89619500e-12 * tc[3] -
                 2.06743600e-14 * tc[4];
    // species 5: O2
    species[5] = -1.00524900e+03 * invT - 3.82180200e+00 -
                 3.21293600e+00 * tc[0] - 5.63743000e-04 * tc[1] +
                 9.59358333e-08 * tc[2] - 1.09489750e-10 * tc[3] +
                 4.38427700e-14 * tc[4];
    // species 6: H2O
    species[6] = -3.02081100e+04 * invT - 2.03391000e-01 -
                 3.38684200e+00 * tc[0] - 1.73749100e-03 * tc[1] +
                 1.05911600e-06 * tc[2] - 5.80715083e-10 * tc[3] +
                 1.25329400e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.76631500e+04 * invT - 4.39660900e+00 -
                 3.38875400e+00 * tc[0] - 3.28461300e-03 * tc[1] +
                 2.47502167e-08 * tc[2] + 3.85483833e-10 * tc[3] -
                 1.23575750e-13 * tc[4];
    // species 9: CH2GSG
    species[9] = +4.98936800e+04 * invT + 2.91373293e+00 -
                 3.97126500e+00 * tc[0] + 8.49544500e-05 * tc[1] -
                 1.70894833e-07 * tc[2] - 2.07712583e-10 * tc[3] +
                 9.90633000e-14 * tc[4];
    // species 10: CH2O
    species[10] = -1.48654000e+04 * invT - 1.31320890e+01 -
                  1.65273100e+00 * tc[0] - 6.31572000e-03 * tc[1] +
                  3.14694667e-06 * tc[2] - 1.70835917e-09 * tc[3] +
                  4.20661850e-13 * tc[4];
    // species 11: CH3
    species[11] = +1.64237800e+04 * invT - 5.35935100e+00 -
                  2.43044300e+00 * tc[0] - 5.56205000e-03 * tc[1] +
                  2.80036667e-06 * tc[2] - 1.35152417e-09 * tc[3] +
                  2.93247650e-13 * tc[4];
    // species 12: CO
    species[12] = -1.43105400e+04 * invT - 2.58644500e+00 -
                  3.26245200e+00 * tc[0] - 7.55970500e-04 * tc[1] +
                  6.46959167e-07 * tc[2] - 4.65162000e-10 * tc[3] +
                  1.23747550e-13 * tc[4];
    // species 13: CH3O
    species[13] = +9.78601100e+02 * invT - 1.20459760e+01 -
                  2.10620400e+00 * tc[0] - 3.60829750e-03 * tc[1] -
                  8.89745333e-07 * tc[2] + 6.14803000e-10 * tc[3] -
                  1.03780550e-13 * tc[4];
    // species 14: C2H5
    species[14] = +1.28704000e+04 * invT - 1.04474980e+01 -
                  2.69070200e+00 * tc[0] - 4.35956650e-03 * tc[1] -
                  7.36639833e-07 * tc[2] - 7.78225250e-11 * tc[3] +
                  1.96388650e-13 * tc[4];
    // species 15: CH4
    species[15] = -9.82522900e+03 * invT - 1.39434485e+01 -
                  7.78741500e-01 * tc[0] - 8.73834000e-03 * tc[1] +
                  4.63901500e-06 * tc[2] - 2.54142333e-09 * tc[3] +
                  6.11965500e-13 * tc[4];
    // species 16: C2H4
    species[16] = +5.57304600e+03 * invT - 2.60729780e+01 +
                  8.61488000e-01 * tc[0] - 1.39808150e-02 * tc[1] +
                  5.64779500e-06 * tc[2] - 2.32096000e-09 * tc[3] +
                  4.86893950e-13 * tc[4];
    // species 18: CO2
    species[18] = -4.83731400e+04 * invT - 8.91276500e+00 -
                  2.27572500e+00 * tc[0] - 4.96103600e-03 * tc[1] +
                  1.73485167e-06 * tc[2] - 5.72223917e-10 * tc[3] +
                  1.05864000e-13 * tc[4];
    // species 19: HCO
    species[19] = +4.15992200e+03 * invT - 7.08528400e+00 -
                  2.89833000e+00 * tc[0] - 3.09957350e-03 * tc[1] +
                  1.60384733e-06 * tc[2] - 9.08187500e-10 * tc[3] +
                  2.28744250e-13 * tc[4];
    // species 22: C2H2
    species[22] = +2.61244400e+04 * invT - 7.79181600e+00 -
                  2.01356200e+00 * tc[0] - 7.59522500e-03 * tc[1] +
                  2.69386500e-06 * tc[2] - 7.56582667e-10 * tc[3] +
                  9.56373000e-14 * tc[4];
    // species 23: HCCO
    species[23] = +1.96589200e+04 * invT + 3.56612110e+00 -
                  5.04796500e+00 * tc[0] - 2.22673900e-03 * tc[1] -
                  3.78047167e-08 * tc[2] + 1.23507917e-10 * tc[3] -
                  1.12537100e-14 * tc[4];
    // species 24: C2H3
    species[24] = +3.33522500e+04 * invT - 1.00969240e+01 -
                  2.45927600e+00 * tc[0] - 3.68573800e-03 * tc[1] -
                  3.51645500e-07 * tc[2] + 1.10136833e-10 * tc[3] +
                  5.92392000e-14 * tc[4];
    // species 25: CH2CHO
    species[25] = +1.52147700e+03 * invT - 7.14922800e+00 -
                  3.40906200e+00 * tc[0] - 5.36928500e-03 * tc[1] -
                  3.15248667e-07 * tc[2] + 5.96548583e-10 * tc[3] -
                  1.43369250e-13 * tc[4];
    // species 29: IXC3H7
    species[29] = +7.53580900e+03 * invT - 1.22657100e+01 -
                  1.71330000e+00 * tc[0] - 1.27130800e-02 * tc[1] -
                  2.63468000e-07 * tc[2] + 1.51773833e-09 * tc[3] -
                  4.41385500e-13 * tc[4];
    // species 30: NXC3H7
    species[30] = +9.71328100e+03 * invT - 1.30701730e+01 -
                  1.92253700e+00 * tc[0] - 1.23946350e-02 * tc[1] -
                  3.01708167e-07 * tc[2] + 1.48605500e-09 * tc[3] -
                  4.29149800e-13 * tc[4];
    // species 31: C3H8
    species[31] = -1.39549200e+04 * invT - 1.94584092e+01 -
                  8.96920800e-01 * tc[0] - 1.33449300e-02 * tc[1] -
                  9.05237500e-07 * tc[2] + 1.77166750e-09 * tc[3] -
                  4.62166500e-13 * tc[4];
  } else {
    // species 0: N2
    species[0] = -9.22797700e+02 * invT - 4.05388800e+00 -
                 2.92664000e+00 * tc[0] - 7.43988500e-04 * tc[1] +
                 9.47460167e-08 * tc[2] - 8.41420000e-12 * tc[3] +
                 3.37667550e-16 * tc[4];
    // species 1: O
    species[1] = +2.92308000e+04 * invT - 3.37824800e+00 -
                 2.54206000e+00 * tc[0] + 1.37753100e-05 * tc[1] +
                 5.17133833e-10 * tc[2] - 3.79255583e-13 * tc[3] +
                 2.18402600e-17 * tc[4];
    // species 4: H2
    species[4] = -8.35034000e+02 * invT + 3.34653300e+00 -
                 2.99142300e+00 * tc[0] - 3.50032200e-04 * tc[1] +
                 9.38971500e-09 * tc[2] + 7.69298167e-13 * tc[3] -
                 7.91376000e-17 * tc[4];
    // species 5: O2
    species[5] = -1.23393000e+03 * invT - 4.91588000e-01 -
                 3.69757800e+00 * tc[0] - 3.06759850e-04 * tc[1] +
                 2.09807000e-08 * tc[2] - 1.47940083e-12 * tc[3] +
                 5.68217500e-17 * tc[4];
    // species 6: H2O
    species[6] = -2.98992100e+04 * invT - 5.19067100e+00 -
                 2.67214600e+00 * tc[0] - 1.52814650e-03 * tc[1] +
                 1.45504333e-07 * tc[2] - 1.00083000e-11 * tc[3] +
                 3.19580900e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.80069600e+04 * invT + 3.07203000e+00 -
                 4.57316700e+00 * tc[0] - 2.16806800e-03 * tc[1] +
                 2.45781500e-07 * tc[2] - 1.95742000e-11 * tc[3] +
                 7.15827000e-16 * tc[4];
    // species 9: CH2GSG
    species[9] = +4.98497500e+04 * invT + 8.66319000e-01 -
                 3.55288900e+00 * tc[0] - 1.03339400e-03 * tc[1] +
                 3.19019333e-08 * tc[2] + 9.20560833e-12 * tc[3] -
                 1.01067500e-15 * tc[4];
    // species 10: CH2O
    species[10] = -1.53203700e+04 * invT - 4.91696600e+00 -
                  2.99560600e+00 * tc[0] - 3.34066050e-03 * tc[1] +
                  4.38159167e-07 * tc[2] - 3.94762750e-11 * tc[3] +
                  1.60625850e-15 * tc[4];
    // species 11: CH3
    species[11] = +1.64378100e+04 * invT - 3.60864500e+00 -
                  2.84405200e+00 * tc[0] - 3.06898700e-03 * tc[1] +
                  3.71724167e-07 * tc[2] - 3.15430083e-11 * tc[3] +
                  1.22607950e-15 * tc[4];
    // species 12: CO
    species[12] = -1.42683500e+04 * invT - 4.08314000e+00 -
                  3.02507800e+00 * tc[0] - 7.21344500e-04 * tc[1] +
                  9.38471333e-08 * tc[2] - 8.48817500e-12 * tc[3] +
                  3.45547600e-16 * tc[4];
    // species 13: CH3O
    species[13] = +1.27832500e+02 * invT - 1.58775000e-01 -
                  3.77080000e+00 * tc[0] - 3.93574850e-03 * tc[1] +
                  4.42730667e-07 * tc[2] - 3.28702583e-11 * tc[3] +
                  1.05630800e-15 * tc[4];
    // species 14: C2H5
    species[14] = +1.06745500e+04 * invT + 2.09713700e+01 -
                  7.19048000e+00 * tc[0] - 3.24203850e-03 * tc[1] +
                  1.07134417e-07 * tc[2] + 1.95656583e-11 * tc[3] -
                  1.94043850e-15 * tc[4];
    // species 15: CH4
    species[15] = -1.00807900e+04 * invT - 8.93991600e+00 -
                  1.68347900e+00 * tc[0] - 5.11862000e-03 * tc[1] +
                  6.45854833e-07 * tc[2] - 5.65465417e-11 * tc[3] +
                  2.25171150e-15 * tc[4];
    // species 16: C2H4
    species[16] = +4.42828900e+03 * invT + 2.98030000e-01 -
                  3.52841900e+00 * tc[0] - 5.74259000e-03 * tc[1] +
                  7.36397500e-07 * tc[2] - 6.53716750e-11 * tc[3] +
                  2.63342400e-15 * tc[4];
    // species 18: CO2
    species[18] = -4.89669600e+04 * invT + 4.40901890e+00 -
                  4.45362300e+00 * tc[0] - 1.57008450e-03 * tc[1] +
                  2.13068500e-07 * tc[2] - 1.99499750e-11 * tc[3] +
                  8.34516500e-16 * tc[4];
    // species 19: HCO
    species[19] = +3.91632400e+03 * invT - 2.99502800e+00 -
                  3.55727100e+00 * tc[0] - 1.67278650e-03 * tc[1] +
                  2.22501000e-07 * tc[2] - 2.05881083e-11 * tc[3] +
                  8.56925500e-16 * tc[4];
    // species 22: C2H2
    species[22] = +2.56676600e+04 * invT + 6.23710800e+00 -
                  4.43677000e+00 * tc[0] - 2.68801950e-03 * tc[1] +
                  3.18802833e-07 * tc[2] - 2.73864917e-11 * tc[3] +
                  1.07835500e-15 * tc[4];
    // species 23: HCCO
    species[23] = +1.90151300e+04 * invT + 1.48293350e+01 -
                  6.75807300e+00 * tc[0] - 1.00020000e-03 * tc[1] +
                  3.37934500e-08 * tc[2] + 8.67610000e-12 * tc[3] -
                  9.82582500e-16 * tc[4];
    // species 24: C2H3
    species[24] = +3.18543500e+04 * invT + 1.34637810e+01 -
                  5.93346800e+00 * tc[0] - 2.00887300e-03 * tc[1] +
                  6.61123333e-08 * tc[2] + 1.20105583e-11 * tc[3] -
                  1.18932200e-15 * tc[4];
    // species 25: CH2CHO
    species[25] = +4.90321800e+02 * invT + 1.00209210e+01 -
                  5.97567000e+00 * tc[0] - 4.06529550e-03 * tc[1] +
                  4.57270667e-07 * tc[2] - 3.39192000e-11 * tc[3] +
                  1.08800850e-15 * tc[4];
    // species 29: IXC3H7
    species[29] = +5.31387100e+03 * invT + 2.89898390e+01 -
                  8.06336900e+00 * tc[0] - 7.87244000e-03 * tc[1] +
                  8.63732000e-07 * tc[2] - 6.23103750e-11 * tc[3] +
                  1.92721100e-15 * tc[4];
    // species 30: NXC3H7
    species[30] = +7.57940200e+03 * invT + 2.63344010e+01 -
                  7.97829100e+00 * tc[0] - 7.88056500e-03 * tc[1] +
                  8.62207167e-07 * tc[2] - 6.20324333e-11 * tc[3] +
                  1.91248900e-15 * tc[4];
    // species 31: C3H8
    species[31] = -1.64645500e+04 * invT + 2.43691170e+01 -
                  7.52521700e+00 * tc[0] - 9.44517000e-03 * tc[1] +
                  1.04732067e-06 * tc[2] - 7.64947750e-11 * tc[3] +
                  2.40620500e-15 * tc[4];
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +2.54747466e+04 * invT + 1.96638554e+00 -
               2.50104422e+00 * tc[0] - 0.00000000e+00 * tc[1] -
               0.00000000e+00 * tc[2] - 0.00000000e+00 * tc[3] -
               0.00000000e+00 * tc[4];

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +3.74321252e+03 * invT - 1.42790800e-02 -
                 3.43586219e+00 * tc[0] - 1.01117902e-04 * tc[1] +
                 1.89244020e-08 * tc[2] - 2.02037624e-11 * tc[3] +
                 3.71825515e-15 * tc[4];
  } else {
    // species 3: OH
    species[3] = +4.12085374e+03 * invT - 5.48067553e+00 -
                 2.62599754e+00 * tc[0] - 6.59962030e-04 * tc[1] +
                 5.99541117e-08 * tc[2] - 3.54692333e-12 * tc[3] +
                 9.10240080e-17 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +8.09181013e+02 * invT - 6.21060443e+00 -
                 3.18310656e+00 * tc[0] - 1.83383975e-03 * tc[1] +
                 1.55397520e-07 * tc[2] + 2.71544099e-11 * tc[3] -
                 7.55699560e-15 * tc[4];
    // species 21: CH3O2H
    species[21] = -1.77197926e+04 * invT - 7.02181132e+00 -
                  3.23442817e+00 * tc[0] - 9.50648835e-03 * tc[1] +
                  1.88977145e-06 * tc[2] - 2.83588878e-10 * tc[3] +
                  2.05915111e-14 * tc[4];
  } else {
    // species 8: HO2
    species[8] = +3.98127689e+02 * invT - 1.96841300e-02 -
                 4.10547423e+00 * tc[0] - 1.19226417e-03 * tc[1] +
                 1.34391332e-07 * tc[2] - 1.03493103e-11 * tc[3] +
                 3.58200054e-16 * tc[4];
    // species 21: CH3O2H
    species[21] = -1.96678771e+04 * invT + 2.65482338e+01 -
                  8.43117091e+00 * tc[0] - 4.03408955e-03 * tc[1] +
                  4.61824868e-07 * tc[2] - 3.59443536e-11 * tc[3] +
                  1.25346073e-15 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -1.12345534e+04 * invT - 2.21901604e+01 +
                  2.52854344e-02 * tc[0] - 1.20382377e-02 * tc[1] +
                  1.86489120e-06 * tc[2] - 1.73617417e-10 * tc[3] +
                  2.64934308e-15 * tc[4];
    // species 33: NXC3H7O2
    species[33] = -7.93745567e+03 * invT - 1.78009599e+01 -
                  2.10731492e+00 * tc[0] - 1.98082493e-02 * tc[1] +
                  4.15819332e-06 * tc[2] - 7.16208583e-10 * tc[3] +
                  6.56201650e-14 * tc[4];
  } else {
    // species 17: C2H6
    species[17] = -1.37500014e+04 * invT + 1.81149589e+01 -
                  6.10683385e+00 * tc[0] - 6.46181805e-03 * tc[1] +
                  7.37545327e-07 * tc[2] - 5.72826438e-11 * tc[3] +
                  1.99450866e-15 * tc[4];
    // species 33: NXC3H7O2
    species[33] = -1.19194652e+04 * invT + 5.01676356e+01 -
                  1.26327059e+01 * tc[0] - 8.49553630e-03 * tc[1] +
                  9.81444788e-07 * tc[2] - 7.68496163e-11 * tc[3] +
                  2.69115337e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = -6.84394259e+02 * invT - 1.90183414e+00 -
                  4.26146906e+00 * tc[0] - 5.04367995e-03 * tc[1] +
                  5.35843640e-07 * tc[2] - 1.74507723e-11 * tc[3] -
                  2.09169552e-15 * tc[4];
  } else {
    // species 20: CH3O2
    species[20] = -1.53574838e+03 * invT + 9.67751777e+00 -
                  5.95787891e+00 * tc[0] - 3.95364313e-03 * tc[1] +
                  4.47077057e-07 * tc[2] - 3.44909447e-11 * tc[3] +
                  1.19503665e-15 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = +1.93834226e+04 * invT - 2.68358451e+01 +
                  5.29131958e-01 * tc[0] - 1.67279550e-02 * tc[1] +
                  4.22335045e-06 * tc[2] - 8.57214617e-10 * tc[3] +
                  8.66291700e-14 * tc[4];
  } else {
    // species 26: C3H5XA
    species[26] = +1.63576092e+04 * invT + 3.00397846e+01 -
                  8.45883958e+00 * tc[0] - 5.63477415e-03 * tc[1] +
                  6.39654773e-07 * tc[2] - 4.95049266e-11 * tc[3] +
                  1.71959015e-15 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +1.06688164e+03 * invT - 2.25057582e+01 -
                  3.94615444e-01 * tc[0] - 1.44553831e-02 * tc[1] +
                  2.58144680e-06 * tc[2] - 3.24011841e-10 * tc[3] +
                  1.68945176e-14 * tc[4];
    // species 32: IXC3H7O2
    species[32] = -1.02587980e+04 * invT - 1.97342326e+01 -
                  1.49941639e+00 * tc[0] - 2.21540602e-02 * tc[1] +
                  5.37357427e-06 * tc[2] - 1.08072613e-09 * tc[3] +
                  1.11685285e-13 * tc[4];
  } else {
    // species 27: C3H6
    species[27] = -1.87821271e+03 * invT + 2.70320264e+01 -
                  8.01595958e+00 * tc[0] - 6.85118170e-03 * tc[1] +
                  7.77082888e-07 * tc[2] - 6.01045335e-11 * tc[3] +
                  2.08685063e-15 * tc[4];
    // species 32: IXC3H7O2
    species[32] = -1.44109855e+04 * invT + 5.51559706e+01 -
                  1.32493493e+01 * tc[0] - 8.20410950e-03 * tc[1] +
                  9.45720103e-07 * tc[2] - 7.39446950e-11 * tc[3] +
                  2.58680767e-15 * tc[4];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +9.58217784e+03 * invT - 2.13583963e+01 -
                  1.19822582e+00 * tc[0] - 1.52789918e-02 * tc[1] +
                  3.01050460e-06 * tc[2] - 4.05125028e-10 * tc[3] +
                  2.09927281e-14 * tc[4];
  } else {
    // species 28: C3H5O
    species[28] = +6.26560810e+03 * invT + 3.70206794e+01 -
                  1.02551752e+01 * tc[0] - 5.74918600e-03 * tc[1] +
                  6.41076098e-07 * tc[2] - 4.90758622e-11 * tc[3] +
                  1.69278961e-15 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +2.29867700e+00 + 7.04120000e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88971000e-13 * tc[4] - 1.02090000e+03 * invT;
    // species 1: O
    species[1] = +1.94642900e+00 - 8.19083000e-04 * tc[1] +
                 8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
                 7.78139200e-14 * tc[4] + 2.91476400e+04 * invT;
    // species 4: H2
    species[4] = +2.29812400e+00 + 4.12472100e-04 * tc[1] -
                 2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
                 8.26974400e-14 * tc[4] - 1.01252100e+03 * invT;
    // species 5: O2
    species[5] = +2.21293600e+00 + 5.63743000e-04 * tc[1] -
                 1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
                 1.75371080e-13 * tc[4] - 1.00524900e+03 * invT;
    // species 6: H2O
    species[6] = +2.38684200e+00 + 1.73749100e-03 * tc[1] -
                 2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
                 5.01317600e-13 * tc[4] - 3.02081100e+04 * invT;
    // species 7: H2O2
    species[7] = +2.38875400e+00 + 3.28461300e-03 * tc[1] -
                 4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
                 4.94303000e-13 * tc[4] - 1.76631500e+04 * invT;
    // species 9: CH2GSG
    species[9] = +2.97126500e+00 - 8.49544500e-05 * tc[1] +
                 3.41789667e-07 * tc[2] + 6.23137750e-10 * tc[3] -
                 3.96253200e-13 * tc[4] + 4.98936800e+04 * invT;
    // species 10: CH2O
    species[10] = +6.52731000e-01 + 6.31572000e-03 * tc[1] -
                  6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
                  1.68264740e-12 * tc[4] - 1.48654000e+04 * invT;
    // species 11: CH3
    species[11] = +1.43044300e+00 + 5.56205000e-03 * tc[1] -
                  5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
                  1.17299060e-12 * tc[4] + 1.64237800e+04 * invT;
    // species 12: CO
    species[12] = +2.26245200e+00 + 7.55970500e-04 * tc[1] -
                  1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
                  4.94990200e-13 * tc[4] - 1.43105400e+04 * invT;
    // species 13: CH3O
    species[13] = +1.10620400e+00 + 3.60829750e-03 * tc[1] +
                  1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                  4.15122200e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 14: C2H5
    species[14] = +1.69070200e+00 + 4.35956650e-03 * tc[1] +
                  1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
                  7.85554600e-13 * tc[4] + 1.28704000e+04 * invT;
    // species 15: CH4
    species[15] = -2.21258500e-01 + 8.73834000e-03 * tc[1] -
                  9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
                  2.44786200e-12 * tc[4] - 9.82522900e+03 * invT;
    // species 16: C2H4
    species[16] = -1.86148800e+00 + 1.39808150e-02 * tc[1] -
                  1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
                  1.94757580e-12 * tc[4] + 5.57304600e+03 * invT;
    // species 18: CO2
    species[18] = +1.27572500e+00 + 4.96103600e-03 * tc[1] -
                  3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
                  4.23456000e-13 * tc[4] - 4.83731400e+04 * invT;
    // species 19: HCO
    species[19] = +1.89833000e+00 + 3.09957350e-03 * tc[1] -
                  3.20769467e-06 * tc[2] + 2.72456250e-09 * tc[3] -
                  9.14977000e-13 * tc[4] + 4.15992200e+03 * invT;
    // species 22: C2H2
    species[22] = +1.01356200e+00 + 7.59522500e-03 * tc[1] -
                  5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
                  3.82549200e-13 * tc[4] + 2.61244400e+04 * invT;
    // species 23: HCCO
    species[23] = +4.04796500e+00 + 2.22673900e-03 * tc[1] +
                  7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
                  4.50148400e-14 * tc[4] + 1.96589200e+04 * invT;
    // species 24: C2H3
    species[24] = +1.45927600e+00 + 3.68573800e-03 * tc[1] +
                  7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
                  2.36956800e-13 * tc[4] + 3.33522500e+04 * invT;
    // species 25: CH2CHO
    species[25] = +2.40906200e+00 + 5.36928500e-03 * tc[1] +
                  6.30497333e-07 * tc[2] - 1.78964575e-09 * tc[3] +
                  5.73477000e-13 * tc[4] + 1.52147700e+03 * invT;
    // species 29: IXC3H7
    species[29] = +7.13300000e-01 + 1.27130800e-02 * tc[1] +
                  5.26936000e-07 * tc[2] - 4.55321500e-09 * tc[3] +
                  1.76554200e-12 * tc[4] + 7.53580900e+03 * invT;
    // species 30: NXC3H7
    species[30] = +9.22537000e-01 + 1.23946350e-02 * tc[1] +
                  6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
                  1.71659920e-12 * tc[4] + 9.71328100e+03 * invT;
    // species 31: C3H8
    species[31] = -1.03079200e-01 + 1.33449300e-02 * tc[1] +
                  1.81047500e-06 * tc[2] - 5.31500250e-09 * tc[3] +
                  1.84866600e-12 * tc[4] - 1.39549200e+04 * invT;
  } else {
    // species 0: N2
    species[0] = +1.92664000e+00 + 7.43988500e-04 * tc[1] -
                 1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 1: O
    species[1] = +1.54206000e+00 - 1.37753100e-05 * tc[1] -
                 1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
                 8.73610400e-17 * tc[4] + 2.92308000e+04 * invT;
    // species 4: H2
    species[4] = +1.99142300e+00 + 3.50032200e-04 * tc[1] -
                 1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
                 3.16550400e-16 * tc[4] - 8.35034000e+02 * invT;
    // species 5: O2
    species[5] = +2.69757800e+00 + 3.06759850e-04 * tc[1] -
                 4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
                 2.27287000e-16 * tc[4] - 1.23393000e+03 * invT;
    // species 6: H2O
    species[6] = +1.67214600e+00 + 1.52814650e-03 * tc[1] -
                 2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
                 1.27832360e-15 * tc[4] - 2.98992100e+04 * invT;
    // species 7: H2O2
    species[7] = +3.57316700e+00 + 2.16806800e-03 * tc[1] -
                 4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
                 2.86330800e-15 * tc[4] - 1.80069600e+04 * invT;
    // species 9: CH2GSG
    species[9] = +2.55288900e+00 + 1.03339400e-03 * tc[1] -
                 6.38038667e-08 * tc[2] - 2.76168250e-11 * tc[3] +
                 4.04270000e-15 * tc[4] + 4.98497500e+04 * invT;
    // species 10: CH2O
    species[10] = +1.99560600e+00 + 3.34066050e-03 * tc[1] -
                  8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
                  6.42503400e-15 * tc[4] - 1.53203700e+04 * invT;
    // species 11: CH3
    species[11] = +1.84405200e+00 + 3.06898700e-03 * tc[1] -
                  7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
                  4.90431800e-15 * tc[4] + 1.64378100e+04 * invT;
    // species 12: CO
    species[12] = +2.02507800e+00 + 7.21344500e-04 * tc[1] -
                  1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
                  1.38219040e-15 * tc[4] - 1.42683500e+04 * invT;
    // species 13: CH3O
    species[13] = +2.77080000e+00 + 3.93574850e-03 * tc[1] -
                  8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                  4.22523200e-15 * tc[4] + 1.27832500e+02 * invT;
    // species 14: C2H5
    species[14] = +6.19048000e+00 + 3.24203850e-03 * tc[1] -
                  2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
                  7.76175400e-15 * tc[4] + 1.06745500e+04 * invT;
    // species 15: CH4
    species[15] = +6.83479000e-01 + 5.11862000e-03 * tc[1] -
                  1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
                  9.00684600e-15 * tc[4] - 1.00807900e+04 * invT;
    // species 16: C2H4
    species[16] = +2.52841900e+00 + 5.74259000e-03 * tc[1] -
                  1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
                  1.05336960e-14 * tc[4] + 4.42828900e+03 * invT;
    // species 18: CO2
    species[18] = +3.45362300e+00 + 1.57008450e-03 * tc[1] -
                  4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
                  3.33806600e-15 * tc[4] - 4.89669600e+04 * invT;
    // species 19: HCO
    species[19] = +2.55727100e+00 + 1.67278650e-03 * tc[1] -
                  4.45002000e-07 * tc[2] + 6.17643250e-11 * tc[3] -
                  3.42770200e-15 * tc[4] + 3.91632400e+03 * invT;
    // species 22: C2H2
    species[22] = +3.43677000e+00 + 2.68801950e-03 * tc[1] -
                  6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
                  4.31342000e-15 * tc[4] + 2.56676600e+04 * invT;
    // species 23: HCCO
    species[23] = +5.75807300e+00 + 1.00020000e-03 * tc[1] -
                  6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
                  3.93033000e-15 * tc[4] + 1.90151300e+04 * invT;
    // species 24: C2H3
    species[24] = +4.93346800e+00 + 2.00887300e-03 * tc[1] -
                  1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
                  4.75728800e-15 * tc[4] + 3.18543500e+04 * invT;
    // species 25: CH2CHO
    species[25] = +4.97567000e+00 + 4.06529550e-03 * tc[1] -
                  9.14541333e-07 * tc[2] + 1.01757600e-10 * tc[3] -
                  4.35203400e-15 * tc[4] + 4.90321800e+02 * invT;
    // species 29: IXC3H7
    species[29] = +7.06336900e+00 + 7.87244000e-03 * tc[1] -
                  1.72746400e-06 * tc[2] + 1.86931125e-10 * tc[3] -
                  7.70884400e-15 * tc[4] + 5.31387100e+03 * invT;
    // species 30: NXC3H7
    species[30] = +6.97829100e+00 + 7.88056500e-03 * tc[1] -
                  1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
                  7.64995600e-15 * tc[4] + 7.57940200e+03 * invT;
    // species 31: C3H8
    species[31] = +6.52521700e+00 + 9.44517000e-03 * tc[1] -
                  2.09464133e-06 * tc[2] + 2.29484325e-10 * tc[3] -
                  9.62482000e-15 * tc[4] - 1.64645500e+04 * invT;
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +2.43586219e+00 + 1.01117902e-04 * tc[1] -
                 3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
                 1.48730206e-14 * tc[4] + 3.74321252e+03 * invT;
  } else {
    // species 3: OH
    species[3] = +1.62599754e+00 + 6.59962030e-04 * tc[1] -
                 1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
                 3.64096032e-16 * tc[4] + 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +2.18310656e+00 + 1.83383975e-03 * tc[1] -
                 3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
                 3.02279824e-14 * tc[4] + 8.09181013e+02 * invT;
    // species 21: CH3O2H
    species[21] = +2.23442817e+00 + 9.50648835e-03 * tc[1] -
                  3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
                  8.23660444e-14 * tc[4] - 1.77197926e+04 * invT;
  } else {
    // species 8: HO2
    species[8] = +3.10547423e+00 + 1.19226417e-03 * tc[1] -
                 2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
                 1.43280022e-15 * tc[4] + 3.98127689e+02 * invT;
    // species 21: CH3O2H
    species[21] = +7.43117091e+00 + 4.03408955e-03 * tc[1] -
                  9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
                  5.01384292e-15 * tc[4] - 1.96678771e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -1.02528543e+00 + 1.20382377e-02 * tc[1] -
                  3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
                  1.05973723e-14 * tc[4] - 1.12345534e+04 * invT;
    // species 33: NXC3H7O2
    species[33] = +1.10731492e+00 + 1.98082493e-02 * tc[1] -
                  8.31638663e-06 * tc[2] + 2.14862575e-09 * tc[3] -
                  2.62480660e-13 * tc[4] - 7.93745567e+03 * invT;
  } else {
    // species 17: C2H6
    species[17] = +5.10683385e+00 + 6.46181805e-03 * tc[1] -
                  1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
                  7.97803464e-15 * tc[4] - 1.37500014e+04 * invT;
    // species 33: NXC3H7O2
    species[33] = +1.16327059e+01 + 8.49553630e-03 * tc[1] -
                  1.96288958e-06 * tc[2] + 2.30548849e-10 * tc[3] -
                  1.07646135e-14 * tc[4] - 1.19194652e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +3.26146906e+00 + 5.04367995e-03 * tc[1] -
                  1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
                  8.36678206e-15 * tc[4] - 6.84394259e+02 * invT;
  } else {
    // species 20: CH3O2
    species[20] = +4.95787891e+00 + 3.95364313e-03 * tc[1] -
                  8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
                  4.78014660e-15 * tc[4] - 1.53574838e+03 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = -1.52913196e+00 + 1.67279550e-02 * tc[1] -
                  8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
                  3.46516680e-13 * tc[4] + 1.93834226e+04 * invT;
  } else {
    // species 26: C3H5XA
    species[26] = +7.45883958e+00 + 5.63477415e-03 * tc[1] -
                  1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
                  6.87836060e-15 * tc[4] + 1.63576092e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = -6.05384556e-01 + 1.44553831e-02 * tc[1] -
                  5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
                  6.75780704e-14 * tc[4] + 1.06688164e+03 * invT;
    // species 32: IXC3H7O2
    species[32] = +4.99416390e-01 + 2.21540602e-02 * tc[1] -
                  1.07471485e-05 * tc[2] + 3.24217840e-09 * tc[3] -
                  4.46741138e-13 * tc[4] - 1.02587980e+04 * invT;
  } else {
    // species 27: C3H6
    species[27] = +7.01595958e+00 + 6.85118170e-03 * tc[1] -
                  1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
                  8.34740252e-15 * tc[4] - 1.87821271e+03 * invT;
    // species 32: IXC3H7O2
    species[32] = +1.22493493e+01 + 8.20410950e-03 * tc[1] -
                  1.89144021e-06 * tc[2] + 2.21834085e-10 * tc[3] -
                  1.03472307e-14 * tc[4] - 1.44109855e+04 * invT;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +1.98225820e-01 + 1.52789918e-02 * tc[1] -
                  6.02100920e-06 * tc[2] + 1.21537508e-09 * tc[3] -
                  8.39709124e-14 * tc[4] + 9.58217784e+03 * invT;
  } else {
    // species 28: C3H5O
    species[28] = +9.25517520e+00 + 5.74918600e-03 * tc[1] -
                  1.28215220e-06 * tc[2] + 1.47227587e-10 * tc[3] -
                  6.77115846e-15 * tc[4] + 6.26560810e+03 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 + 7.04120000e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88971000e-13 * tc[4] - 1.02090000e+03 * invT;
    // species 1: O
    species[1] = +2.94642900e+00 - 8.19083000e-04 * tc[1] +
                 8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
                 7.78139200e-14 * tc[4] + 2.91476400e+04 * invT;
    // species 4: H2
    species[4] = +3.29812400e+00 + 4.12472100e-04 * tc[1] -
                 2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
                 8.26974400e-14 * tc[4] - 1.01252100e+03 * invT;
    // species 5: O2
    species[5] = +3.21293600e+00 + 5.63743000e-04 * tc[1] -
                 1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
                 1.75371080e-13 * tc[4] - 1.00524900e+03 * invT;
    // species 6: H2O
    species[6] = +3.38684200e+00 + 1.73749100e-03 * tc[1] -
                 2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
                 5.01317600e-13 * tc[4] - 3.02081100e+04 * invT;
    // species 7: H2O2
    species[7] = +3.38875400e+00 + 3.28461300e-03 * tc[1] -
                 4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
                 4.94303000e-13 * tc[4] - 1.76631500e+04 * invT;
    // species 9: CH2GSG
    species[9] = +3.97126500e+00 - 8.49544500e-05 * tc[1] +
                 3.41789667e-07 * tc[2] + 6.23137750e-10 * tc[3] -
                 3.96253200e-13 * tc[4] + 4.98936800e+04 * invT;
    // species 10: CH2O
    species[10] = +1.65273100e+00 + 6.31572000e-03 * tc[1] -
                  6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
                  1.68264740e-12 * tc[4] - 1.48654000e+04 * invT;
    // species 11: CH3
    species[11] = +2.43044300e+00 + 5.56205000e-03 * tc[1] -
                  5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
                  1.17299060e-12 * tc[4] + 1.64237800e+04 * invT;
    // species 12: CO
    species[12] = +3.26245200e+00 + 7.55970500e-04 * tc[1] -
                  1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
                  4.94990200e-13 * tc[4] - 1.43105400e+04 * invT;
    // species 13: CH3O
    species[13] = +2.10620400e+00 + 3.60829750e-03 * tc[1] +
                  1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                  4.15122200e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 14: C2H5
    species[14] = +2.69070200e+00 + 4.35956650e-03 * tc[1] +
                  1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
                  7.85554600e-13 * tc[4] + 1.28704000e+04 * invT;
    // species 15: CH4
    species[15] = +7.78741500e-01 + 8.73834000e-03 * tc[1] -
                  9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
                  2.44786200e-12 * tc[4] - 9.82522900e+03 * invT;
    // species 16: C2H4
    species[16] = -8.61488000e-01 + 1.39808150e-02 * tc[1] -
                  1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
                  1.94757580e-12 * tc[4] + 5.57304600e+03 * invT;
    // species 18: CO2
    species[18] = +2.27572500e+00 + 4.96103600e-03 * tc[1] -
                  3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
                  4.23456000e-13 * tc[4] - 4.83731400e+04 * invT;
    // species 19: HCO
    species[19] = +2.89833000e+00 + 3.09957350e-03 * tc[1] -
                  3.20769467e-06 * tc[2] + 2.72456250e-09 * tc[3] -
                  9.14977000e-13 * tc[4] + 4.15992200e+03 * invT;
    // species 22: C2H2
    species[22] = +2.01356200e+00 + 7.59522500e-03 * tc[1] -
                  5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
                  3.82549200e-13 * tc[4] + 2.61244400e+04 * invT;
    // species 23: HCCO
    species[23] = +5.04796500e+00 + 2.22673900e-03 * tc[1] +
                  7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
                  4.50148400e-14 * tc[4] + 1.96589200e+04 * invT;
    // species 24: C2H3
    species[24] = +2.45927600e+00 + 3.68573800e-03 * tc[1] +
                  7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
                  2.36956800e-13 * tc[4] + 3.33522500e+04 * invT;
    // species 25: CH2CHO
    species[25] = +3.40906200e+00 + 5.36928500e-03 * tc[1] +
                  6.30497333e-07 * tc[2] - 1.78964575e-09 * tc[3] +
                  5.73477000e-13 * tc[4] + 1.52147700e+03 * invT;
    // species 29: IXC3H7
    species[29] = +1.71330000e+00 + 1.27130800e-02 * tc[1] +
                  5.26936000e-07 * tc[2] - 4.55321500e-09 * tc[3] +
                  1.76554200e-12 * tc[4] + 7.53580900e+03 * invT;
    // species 30: NXC3H7
    species[30] = +1.92253700e+00 + 1.23946350e-02 * tc[1] +
                  6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
                  1.71659920e-12 * tc[4] + 9.71328100e+03 * invT;
    // species 31: C3H8
    species[31] = +8.96920800e-01 + 1.33449300e-02 * tc[1] +
                  1.81047500e-06 * tc[2] - 5.31500250e-09 * tc[3] +
                  1.84866600e-12 * tc[4] - 1.39549200e+04 * invT;
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 + 7.43988500e-04 * tc[1] -
                 1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 1: O
    species[1] = +2.54206000e+00 - 1.37753100e-05 * tc[1] -
                 1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
                 8.73610400e-17 * tc[4] + 2.92308000e+04 * invT;
    // species 4: H2
    species[4] = +2.99142300e+00 + 3.50032200e-04 * tc[1] -
                 1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
                 3.16550400e-16 * tc[4] - 8.35034000e+02 * invT;
    // species 5: O2
    species[5] = +3.69757800e+00 + 3.06759850e-04 * tc[1] -
                 4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
                 2.27287000e-16 * tc[4] - 1.23393000e+03 * invT;
    // species 6: H2O
    species[6] = +2.67214600e+00 + 1.52814650e-03 * tc[1] -
                 2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
                 1.27832360e-15 * tc[4] - 2.98992100e+04 * invT;
    // species 7: H2O2
    species[7] = +4.57316700e+00 + 2.16806800e-03 * tc[1] -
                 4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
                 2.86330800e-15 * tc[4] - 1.80069600e+04 * invT;
    // species 9: CH2GSG
    species[9] = +3.55288900e+00 + 1.03339400e-03 * tc[1] -
                 6.38038667e-08 * tc[2] - 2.76168250e-11 * tc[3] +
                 4.04270000e-15 * tc[4] + 4.98497500e+04 * invT;
    // species 10: CH2O
    species[10] = +2.99560600e+00 + 3.34066050e-03 * tc[1] -
                  8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
                  6.42503400e-15 * tc[4] - 1.53203700e+04 * invT;
    // species 11: CH3
    species[11] = +2.84405200e+00 + 3.06898700e-03 * tc[1] -
                  7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
                  4.90431800e-15 * tc[4] + 1.64378100e+04 * invT;
    // species 12: CO
    species[12] = +3.02507800e+00 + 7.21344500e-04 * tc[1] -
                  1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
                  1.38219040e-15 * tc[4] - 1.42683500e+04 * invT;
    // species 13: CH3O
    species[13] = +3.77080000e+00 + 3.93574850e-03 * tc[1] -
                  8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                  4.22523200e-15 * tc[4] + 1.27832500e+02 * invT;
    // species 14: C2H5
    species[14] = +7.19048000e+00 + 3.24203850e-03 * tc[1] -
                  2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
                  7.76175400e-15 * tc[4] + 1.06745500e+04 * invT;
    // species 15: CH4
    species[15] = +1.68347900e+00 + 5.11862000e-03 * tc[1] -
                  1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
                  9.00684600e-15 * tc[4] - 1.00807900e+04 * invT;
    // species 16: C2H4
    species[16] = +3.52841900e+00 + 5.74259000e-03 * tc[1] -
                  1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
                  1.05336960e-14 * tc[4] + 4.42828900e+03 * invT;
    // species 18: CO2
    species[18] = +4.45362300e+00 + 1.57008450e-03 * tc[1] -
                  4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
                  3.33806600e-15 * tc[4] - 4.89669600e+04 * invT;
    // species 19: HCO
    species[19] = +3.55727100e+00 + 1.67278650e-03 * tc[1] -
                  4.45002000e-07 * tc[2] + 6.17643250e-11 * tc[3] -
                  3.42770200e-15 * tc[4] + 3.91632400e+03 * invT;
    // species 22: C2H2
    species[22] = +4.43677000e+00 + 2.68801950e-03 * tc[1] -
                  6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
                  4.31342000e-15 * tc[4] + 2.56676600e+04 * invT;
    // species 23: HCCO
    species[23] = +6.75807300e+00 + 1.00020000e-03 * tc[1] -
                  6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
                  3.93033000e-15 * tc[4] + 1.90151300e+04 * invT;
    // species 24: C2H3
    species[24] = +5.93346800e+00 + 2.00887300e-03 * tc[1] -
                  1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
                  4.75728800e-15 * tc[4] + 3.18543500e+04 * invT;
    // species 25: CH2CHO
    species[25] = +5.97567000e+00 + 4.06529550e-03 * tc[1] -
                  9.14541333e-07 * tc[2] + 1.01757600e-10 * tc[3] -
                  4.35203400e-15 * tc[4] + 4.90321800e+02 * invT;
    // species 29: IXC3H7
    species[29] = +8.06336900e+00 + 7.87244000e-03 * tc[1] -
                  1.72746400e-06 * tc[2] + 1.86931125e-10 * tc[3] -
                  7.70884400e-15 * tc[4] + 5.31387100e+03 * invT;
    // species 30: NXC3H7
    species[30] = +7.97829100e+00 + 7.88056500e-03 * tc[1] -
                  1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
                  7.64995600e-15 * tc[4] + 7.57940200e+03 * invT;
    // species 31: C3H8
    species[31] = +7.52521700e+00 + 9.44517000e-03 * tc[1] -
                  2.09464133e-06 * tc[2] + 2.29484325e-10 * tc[3] -
                  9.62482000e-15 * tc[4] - 1.64645500e+04 * invT;
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +3.43586219e+00 + 1.01117902e-04 * tc[1] -
                 3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
                 1.48730206e-14 * tc[4] + 3.74321252e+03 * invT;
  } else {
    // species 3: OH
    species[3] = +2.62599754e+00 + 6.59962030e-04 * tc[1] -
                 1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
                 3.64096032e-16 * tc[4] + 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +3.18310656e+00 + 1.83383975e-03 * tc[1] -
                 3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
                 3.02279824e-14 * tc[4] + 8.09181013e+02 * invT;
    // species 21: CH3O2H
    species[21] = +3.23442817e+00 + 9.50648835e-03 * tc[1] -
                  3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
                  8.23660444e-14 * tc[4] - 1.77197926e+04 * invT;
  } else {
    // species 8: HO2
    species[8] = +4.10547423e+00 + 1.19226417e-03 * tc[1] -
                 2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
                 1.43280022e-15 * tc[4] + 3.98127689e+02 * invT;
    // species 21: CH3O2H
    species[21] = +8.43117091e+00 + 4.03408955e-03 * tc[1] -
                  9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
                  5.01384292e-15 * tc[4] - 1.96678771e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -2.52854344e-02 + 1.20382377e-02 * tc[1] -
                  3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
                  1.05973723e-14 * tc[4] - 1.12345534e+04 * invT;
    // species 33: NXC3H7O2
    species[33] = +2.10731492e+00 + 1.98082493e-02 * tc[1] -
                  8.31638663e-06 * tc[2] + 2.14862575e-09 * tc[3] -
                  2.62480660e-13 * tc[4] - 7.93745567e+03 * invT;
  } else {
    // species 17: C2H6
    species[17] = +6.10683385e+00 + 6.46181805e-03 * tc[1] -
                  1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
                  7.97803464e-15 * tc[4] - 1.37500014e+04 * invT;
    // species 33: NXC3H7O2
    species[33] = +1.26327059e+01 + 8.49553630e-03 * tc[1] -
                  1.96288958e-06 * tc[2] + 2.30548849e-10 * tc[3] -
                  1.07646135e-14 * tc[4] - 1.19194652e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +4.26146906e+00 + 5.04367995e-03 * tc[1] -
                  1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
                  8.36678206e-15 * tc[4] - 6.84394259e+02 * invT;
  } else {
    // species 20: CH3O2
    species[20] = +5.95787891e+00 + 3.95364313e-03 * tc[1] -
                  8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
                  4.78014660e-15 * tc[4] - 1.53574838e+03 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = -5.29131958e-01 + 1.67279550e-02 * tc[1] -
                  8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
                  3.46516680e-13 * tc[4] + 1.93834226e+04 * invT;
  } else {
    // species 26: C3H5XA
    species[26] = +8.45883958e+00 + 5.63477415e-03 * tc[1] -
                  1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
                  6.87836060e-15 * tc[4] + 1.63576092e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +3.94615444e-01 + 1.44553831e-02 * tc[1] -
                  5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
                  6.75780704e-14 * tc[4] + 1.06688164e+03 * invT;
    // species 32: IXC3H7O2
    species[32] = +1.49941639e+00 + 2.21540602e-02 * tc[1] -
                  1.07471485e-05 * tc[2] + 3.24217840e-09 * tc[3] -
                  4.46741138e-13 * tc[4] - 1.02587980e+04 * invT;
  } else {
    // species 27: C3H6
    species[27] = +8.01595958e+00 + 6.85118170e-03 * tc[1] -
                  1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
                  8.34740252e-15 * tc[4] - 1.87821271e+03 * invT;
    // species 32: IXC3H7O2
    species[32] = +1.32493493e+01 + 8.20410950e-03 * tc[1] -
                  1.89144021e-06 * tc[2] + 2.21834085e-10 * tc[3] -
                  1.03472307e-14 * tc[4] - 1.44109855e+04 * invT;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +1.19822582e+00 + 1.52789918e-02 * tc[1] -
                  6.02100920e-06 * tc[2] + 1.21537508e-09 * tc[3] -
                  8.39709124e-14 * tc[4] + 9.58217784e+03 * invT;
  } else {
    // species 28: C3H5O
    species[28] = +1.02551752e+01 + 5.74918600e-03 * tc[1] -
                  1.28215220e-06 * tc[2] + 1.47227587e-10 * tc[3] -
                  6.77115846e-15 * tc[4] + 6.26560810e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 * tc[0] + 1.40824000e-03 * tc[1] -
                 1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                 6.11213750e-13 * tc[4] + 3.95037200e+00;
    // species 1: O
    species[1] = +2.94642900e+00 * tc[0] - 1.63816600e-03 * tc[1] +
                 1.21051600e-06 * tc[2] - 5.34281000e-10 * tc[3] +
                 9.72674000e-14 * tc[4] + 2.96399500e+00;
    // species 4: H2
    species[4] = +3.29812400e+00 * tc[0] + 8.24944200e-04 * tc[1] -
                 4.07150750e-07 * tc[2] - 3.15847800e-11 * tc[3] +
                 1.03371800e-13 * tc[4] - 3.29409400e+00;
    // species 5: O2
    species[5] = +3.21293600e+00 * tc[0] + 1.12748600e-03 * tc[1] -
                 2.87807500e-07 * tc[2] + 4.37959000e-10 * tc[3] -
                 2.19213850e-13 * tc[4] + 6.03473800e+00;
    // species 6: H2O
    species[6] = +3.38684200e+00 * tc[0] + 3.47498200e-03 * tc[1] -
                 3.17734800e-06 * tc[2] + 2.32286033e-09 * tc[3] -
                 6.26647000e-13 * tc[4] + 2.59023300e+00;
    // species 7: H2O2
    species[7] = +3.38875400e+00 * tc[0] + 6.56922600e-03 * tc[1] -
                 7.42506500e-08 * tc[2] - 1.54193533e-09 * tc[3] +
                 6.17878750e-13 * tc[4] + 6.78536300e+00;
    // species 9: CH2GSG
    species[9] = +3.97126500e+00 * tc[0] - 1.69908900e-04 * tc[1] +
                 5.12684500e-07 * tc[2] + 8.30850333e-10 * tc[3] -
                 4.95316500e-13 * tc[4] + 5.75320700e-02;
    // species 10: CH2O
    species[10] = +1.65273100e+00 * tc[0] + 1.26314400e-02 * tc[1] -
                  9.44084000e-06 * tc[2] + 6.83343667e-09 * tc[3] -
                  2.10330925e-12 * tc[4] + 1.37848200e+01;
    // species 11: CH3
    species[11] = +2.43044300e+00 * tc[0] + 1.11241000e-02 * tc[1] -
                  8.40110000e-06 * tc[2] + 5.40609667e-09 * tc[3] -
                  1.46623825e-12 * tc[4] + 6.78979400e+00;
    // species 12: CO
    species[12] = +3.26245200e+00 * tc[0] + 1.51194100e-03 * tc[1] -
                  1.94087750e-06 * tc[2] + 1.86064800e-09 * tc[3] -
                  6.18737750e-13 * tc[4] + 4.84889700e+00;
    // species 13: CH3O
    species[13] = +2.10620400e+00 * tc[0] + 7.21659500e-03 * tc[1] +
                  2.66923600e-06 * tc[2] - 2.45921200e-09 * tc[3] +
                  5.18902750e-13 * tc[4] + 1.31521800e+01;
    // species 14: C2H5
    species[14] = +2.69070200e+00 * tc[0] + 8.71913300e-03 * tc[1] +
                  2.20991950e-06 * tc[2] + 3.11290100e-10 * tc[3] -
                  9.81943250e-13 * tc[4] + 1.21382000e+01;
    // species 15: CH4
    species[15] = +7.78741500e-01 * tc[0] + 1.74766800e-02 * tc[1] -
                  1.39170450e-05 * tc[2] + 1.01656933e-08 * tc[3] -
                  3.05982750e-12 * tc[4] + 1.37221900e+01;
    // species 16: C2H4
    species[16] = -8.61488000e-01 * tc[0] + 2.79616300e-02 * tc[1] -
                  1.69433850e-05 * tc[2] + 9.28384000e-09 * tc[3] -
                  2.43446975e-12 * tc[4] + 2.42114900e+01;
    // species 18: CO2
    species[18] = +2.27572500e+00 * tc[0] + 9.92207200e-03 * tc[1] -
                  5.20455500e-06 * tc[2] + 2.28889567e-09 * tc[3] -
                  5.29320000e-13 * tc[4] + 1.01884900e+01;
    // species 19: HCO
    species[19] = +2.89833000e+00 * tc[0] + 6.19914700e-03 * tc[1] -
                  4.81154200e-06 * tc[2] + 3.63275000e-09 * tc[3] -
                  1.14372125e-12 * tc[4] + 8.98361400e+00;
    // species 22: C2H2
    species[22] = +2.01356200e+00 * tc[0] + 1.51904500e-02 * tc[1] -
                  8.08159500e-06 * tc[2] + 3.02633067e-09 * tc[3] -
                  4.78186500e-13 * tc[4] + 8.80537800e+00;
    // species 23: HCCO
    species[23] = +5.04796500e+00 * tc[0] + 4.45347800e-03 * tc[1] +
                  1.13414150e-07 * tc[2] - 4.94031667e-10 * tc[3] +
                  5.62685500e-14 * tc[4] + 4.81843900e-01;
    // species 24: C2H3
    species[24] = +2.45927600e+00 * tc[0] + 7.37147600e-03 * tc[1] +
                  1.05493650e-06 * tc[2] - 4.40547333e-10 * tc[3] -
                  2.96196000e-13 * tc[4] + 1.15562000e+01;
    // species 25: CH2CHO
    species[25] = +3.40906200e+00 * tc[0] + 1.07385700e-02 * tc[1] +
                  9.45746000e-07 * tc[2] - 2.38619433e-09 * tc[3] +
                  7.16846250e-13 * tc[4] + 9.55829000e+00;
    // species 29: IXC3H7
    species[29] = +1.71330000e+00 * tc[0] + 2.54261600e-02 * tc[1] +
                  7.90404000e-07 * tc[2] - 6.07095333e-09 * tc[3] +
                  2.20692750e-12 * tc[4] + 1.29790100e+01;
    // species 30: NXC3H7
    species[30] = +1.92253700e+00 * tc[0] + 2.47892700e-02 * tc[1] +
                  9.05124500e-07 * tc[2] - 5.94422000e-09 * tc[3] +
                  2.14574900e-12 * tc[4] + 1.39927100e+01;
    // species 31: C3H8
    species[31] = +8.96920800e-01 * tc[0] + 2.66898600e-02 * tc[1] +
                  2.71571250e-06 * tc[2] - 7.08667000e-09 * tc[3] +
                  2.31083250e-12 * tc[4] + 1.93553300e+01;
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 * tc[0] + 1.48797700e-03 * tc[1] -
                 2.84238050e-07 * tc[2] + 3.36568000e-11 * tc[3] -
                 1.68833775e-15 * tc[4] + 5.98052800e+00;
    // species 1: O
    species[1] = +2.54206000e+00 * tc[0] - 2.75506200e-05 * tc[1] -
                 1.55140150e-09 * tc[2] + 1.51702233e-12 * tc[3] -
                 1.09201300e-16 * tc[4] + 4.92030800e+00;
    // species 4: H2
    species[4] = +2.99142300e+00 * tc[0] + 7.00064400e-04 * tc[1] -
                 2.81691450e-08 * tc[2] - 3.07719267e-12 * tc[3] +
                 3.95688000e-16 * tc[4] - 1.35511000e+00;
    // species 5: O2
    species[5] = +3.69757800e+00 * tc[0] + 6.13519700e-04 * tc[1] -
                 6.29421000e-08 * tc[2] + 5.91760333e-12 * tc[3] -
                 2.84108750e-16 * tc[4] + 3.18916600e+00;
    // species 6: H2O
    species[6] = +2.67214600e+00 * tc[0] + 3.05629300e-03 * tc[1] -
                 4.36513000e-07 * tc[2] + 4.00332000e-11 * tc[3] -
                 1.59790450e-15 * tc[4] + 6.86281700e+00;
    // species 7: H2O2
    species[7] = +4.57316700e+00 * tc[0] + 4.33613600e-03 * tc[1] -
                 7.37344500e-07 * tc[2] + 7.82968000e-11 * tc[3] -
                 3.57913500e-15 * tc[4] + 5.01137000e-01;
    // species 9: CH2GSG
    species[9] = +3.55288900e+00 * tc[0] + 2.06678800e-03 * tc[1] -
                 9.57058000e-08 * tc[2] - 3.68224333e-11 * tc[3] +
                 5.05337500e-15 * tc[4] + 1.68657000e+00;
    // species 10: CH2O
    species[10] = +2.99560600e+00 * tc[0] + 6.68132100e-03 * tc[1] -
                  1.31447750e-06 * tc[2] + 1.57905100e-10 * tc[3] -
                  8.03129250e-15 * tc[4] + 6.91257200e+00;
    // species 11: CH3
    species[11] = +2.84405200e+00 * tc[0] + 6.13797400e-03 * tc[1] -
                  1.11517250e-06 * tc[2] + 1.26172033e-10 * tc[3] -
                  6.13039750e-15 * tc[4] + 5.45269700e+00;
    // species 12: CO
    species[12] = +3.02507800e+00 * tc[0] + 1.44268900e-03 * tc[1] -
                  2.81541400e-07 * tc[2] + 3.39527000e-11 * tc[3] -
                  1.72773800e-15 * tc[4] + 6.10821800e+00;
    // species 13: CH3O
    species[13] = +3.77080000e+00 * tc[0] + 7.87149700e-03 * tc[1] -
                  1.32819200e-06 * tc[2] + 1.31481033e-10 * tc[3] -
                  5.28154000e-15 * tc[4] + 2.92957500e+00;
    // species 14: C2H5
    species[14] = +7.19048000e+00 * tc[0] + 6.48407700e-03 * tc[1] -
                  3.21403250e-07 * tc[2] - 7.82626333e-11 * tc[3] +
                  9.70219250e-15 * tc[4] - 1.47808900e+01;
    // species 15: CH4
    species[15] = +1.68347900e+00 * tc[0] + 1.02372400e-02 * tc[1] -
                  1.93756450e-06 * tc[2] + 2.26186167e-10 * tc[3] -
                  1.12585575e-14 * tc[4] + 9.62339500e+00;
    // species 16: C2H4
    species[16] = +3.52841900e+00 * tc[0] + 1.14851800e-02 * tc[1] -
                  2.20919250e-06 * tc[2] + 2.61486700e-10 * tc[3] -
                  1.31671200e-14 * tc[4] + 2.23038900e+00;
    // species 18: CO2
    species[18] = +4.45362300e+00 * tc[0] + 3.14016900e-03 * tc[1] -
                  6.39205500e-07 * tc[2] + 7.97999000e-11 * tc[3] -
                  4.17258250e-15 * tc[4] - 9.55395900e-01;
    // species 19: HCO
    species[19] = +3.55727100e+00 * tc[0] + 3.34557300e-03 * tc[1] -
                  6.67503000e-07 * tc[2] + 8.23524333e-11 * tc[3] -
                  4.28462750e-15 * tc[4] + 5.55229900e+00;
    // species 22: C2H2
    species[22] = +4.43677000e+00 * tc[0] + 5.37603900e-03 * tc[1] -
                  9.56408500e-07 * tc[2] + 1.09545967e-10 * tc[3] -
                  5.39177500e-15 * tc[4] - 2.80033800e+00;
    // species 23: HCCO
    species[23] = +6.75807300e+00 * tc[0] + 2.00040000e-03 * tc[1] -
                  1.01380350e-07 * tc[2] - 3.47044000e-11 * tc[3] +
                  4.91291250e-15 * tc[4] - 9.07126200e+00;
    // species 24: C2H3
    species[24] = +5.93346800e+00 * tc[0] + 4.01774600e-03 * tc[1] -
                  1.98337000e-07 * tc[2] - 4.80422333e-11 * tc[3] +
                  5.94661000e-15 * tc[4] - 8.53031300e+00;
    // species 25: CH2CHO
    species[25] = +5.97567000e+00 * tc[0] + 8.13059100e-03 * tc[1] -
                  1.37181200e-06 * tc[2] + 1.35676800e-10 * tc[3] -
                  5.44004250e-15 * tc[4] - 5.04525100e+00;
    // species 29: IXC3H7
    species[29] = +8.06336900e+00 * tc[0] + 1.57448800e-02 * tc[1] -
                  2.59119600e-06 * tc[2] + 2.49241500e-10 * tc[3] -
                  9.63605500e-15 * tc[4] - 2.19264700e+01;
    // species 30: NXC3H7
    species[30] = +7.97829100e+00 * tc[0] + 1.57611300e-02 * tc[1] -
                  2.58662150e-06 * tc[2] + 2.48129733e-10 * tc[3] -
                  9.56244500e-15 * tc[4] - 1.93561100e+01;
    // species 31: C3H8
    species[31] = +7.52521700e+00 * tc[0] + 1.88903400e-02 * tc[1] -
                  3.14196200e-06 * tc[2] + 3.05979100e-10 * tc[3] -
                  1.20310250e-14 * tc[4] - 1.78439000e+01;
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +2.50104422e+00 * tc[0] + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] - 4.65341317e-01;

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +3.43586219e+00 * tc[0] + 2.02235804e-04 * tc[1] -
                 5.67732060e-08 * tc[2] + 8.08150497e-11 * tc[3] -
                 1.85912758e-14 * tc[4] + 2.45014127e+00;
  } else {
    // species 3: OH
    species[3] = +2.62599754e+00 * tc[0] + 1.31992406e-03 * tc[1] -
                 1.79862335e-07 * tc[2] + 1.41876933e-11 * tc[3] -
                 4.55120040e-16 * tc[4] + 7.10667307e+00;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +3.18310656e+00 * tc[0] + 3.66767950e-03 * tc[1] -
                 4.66192561e-07 * tc[2] - 1.08617640e-10 * tc[3] +
                 3.77849780e-14 * tc[4] + 8.39371099e+00;
    // species 21: CH3O2H
    species[21] = +3.23442817e+00 * tc[0] + 1.90129767e-02 * tc[1] -
                  5.66931435e-06 * tc[2] + 1.13435551e-09 * tc[3] -
                  1.02957555e-13 * tc[4] + 9.25623949e+00;
  } else {
    // species 8: HO2
    species[8] = +4.10547423e+00 * tc[0] + 2.38452835e-03 * tc[1] -
                 4.03173995e-07 * tc[2] + 4.13972410e-11 * tc[3] -
                 1.79100027e-15 * tc[4] + 3.12515836e+00;
    // species 21: CH3O2H
    species[21] = +8.43117091e+00 * tc[0] + 8.06817909e-03 * tc[1] -
                  1.38547461e-06 * tc[2] + 1.43777414e-10 * tc[3] -
                  6.26730365e-15 * tc[4] - 1.91170629e+01;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = -2.52854344e-02 * tc[0] + 2.40764754e-02 * tc[1] -
                  5.59467360e-06 * tc[2] + 6.94469670e-10 * tc[3] -
                  1.32467154e-14 * tc[4] + 2.11648750e+01;
    // species 33: NXC3H7O2
    species[33] = +2.10731492e+00 * tc[0] + 3.96164986e-02 * tc[1] -
                  1.24745800e-05 * tc[2] + 2.86483433e-09 * tc[3] -
                  3.28100825e-13 * tc[4] + 1.89082748e+01;
  } else {
    // species 17: C2H6
    species[17] = +6.10683385e+00 * tc[0] + 1.29236361e-02 * tc[1] -
                  2.21263598e-06 * tc[2] + 2.29130575e-10 * tc[3] -
                  9.97254330e-15 * tc[4] - 1.30081250e+01;
    // species 33: NXC3H7O2
    species[33] = +1.26327059e+01 * tc[0] + 1.69910726e-02 * tc[1] -
                  2.94433436e-06 * tc[2] + 3.07398465e-10 * tc[3] -
                  1.34557669e-14 * tc[4] - 3.85349297e+01;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +4.26146906e+00 * tc[0] + 1.00873599e-02 * tc[1] -
                  1.60753092e-06 * tc[2] + 6.98030890e-11 * tc[3] +
                  1.04584776e-14 * tc[4] + 5.16330320e+00;
  } else {
    // species 20: CH3O2
    species[20] = +5.95787891e+00 * tc[0] + 7.90728626e-03 * tc[1] -
                  1.34123117e-06 * tc[2] + 1.37963779e-10 * tc[3] -
                  5.97518325e-15 * tc[4] - 4.71963886e+00;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = -5.29131958e-01 * tc[0] + 3.34559100e-02 * tc[1] -
                  1.26700514e-05 * tc[2] + 3.42885847e-09 * tc[3] -
                  4.33145850e-13 * tc[4] + 2.53067131e+01;
  } else {
    // species 26: C3H5XA
    species[26] = +8.45883958e+00 * tc[0] + 1.12695483e-02 * tc[1] -
                  1.91896432e-06 * tc[2] + 1.98019706e-10 * tc[3] -
                  8.59795075e-15 * tc[4] - 2.25809450e+01;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +3.94615444e-01 * tc[0] + 2.89107662e-02 * tc[1] -
                  7.74434040e-06 * tc[2] + 1.29604736e-09 * tc[3] -
                  8.44725880e-14 * tc[4] + 2.19003736e+01;
    // species 32: IXC3H7O2
    species[32] = +1.49941639e+00 * tc[0] + 4.43081205e-02 * tc[1] -
                  1.61207228e-05 * tc[2] + 4.32290453e-09 * tc[3] -
                  5.58426423e-13 * tc[4] + 2.02336490e+01;
  } else {
    // species 27: C3H6
    species[27] = +8.01595958e+00 * tc[0] + 1.37023634e-02 * tc[1] -
                  2.33124867e-06 * tc[2] + 2.40418134e-10 * tc[3] -
                  1.04342532e-14 * tc[4] - 2.00160668e+01;
    // species 32: IXC3H7O2
    species[32] = +1.32493493e+01 * tc[0] + 1.64082190e-02 * tc[1] -
                  2.83716031e-06 * tc[2] + 2.95778780e-10 * tc[3] -
                  1.29340384e-14 * tc[4] - 4.29066213e+01;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +1.19822582e+00 * tc[0] + 3.05579837e-02 * tc[1] -
                  9.03151380e-06 * tc[2] + 1.62050011e-09 * tc[3] -
                  1.04963640e-13 * tc[4] + 2.15566221e+01;
  } else {
    // species 28: C3H5O
    species[28] = +1.02551752e+01 * tc[0] + 1.14983720e-02 * tc[1] -
                  1.92322829e-06 * tc[2] + 1.96303449e-10 * tc[3] -
                  8.46394807e-15 * tc[4] - 2.77655042e+01;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[34];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 34; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result +=
      y[0] *
      (+3.29867700e+00 + 1.40824000e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485500e-12 * tc[4]) *
      0.0356964374955379;
    // species 1: O
    result +=
      y[1] *
      (+2.94642900e+00 - 1.63816600e-03 * tc[1] + 2.42103200e-06 * tc[2] -
       1.60284300e-09 * tc[3] + 3.89069600e-13 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+3.29812400e+00 + 8.24944200e-04 * tc[1] - 8.14301500e-07 * tc[2] -
       9.47543400e-11 * tc[3] + 4.13487200e-13 * tc[4]) *
      0.4960317460317460;
    // species 5: O2
    result +=
      y[5] *
      (+3.21293600e+00 + 1.12748600e-03 * tc[1] - 5.75615000e-07 * tc[2] +
       1.31387700e-09 * tc[3] - 8.76855400e-13 * tc[4]) *
      0.0312519532470779;
    // species 6: H2O
    result +=
      y[6] *
      (+3.38684200e+00 + 3.47498200e-03 * tc[1] - 6.35469600e-06 * tc[2] +
       6.96858100e-09 * tc[3] - 2.50658800e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.38875400e+00 + 6.56922600e-03 * tc[1] - 1.48501300e-07 * tc[2] -
       4.62580600e-09 * tc[3] + 2.47151500e-12 * tc[4]) *
      0.0293996589639560;
    // species 9: CH2GSG
    result +=
      y[9] *
      (+3.97126500e+00 - 1.69908900e-04 * tc[1] + 1.02536900e-06 * tc[2] +
       2.49255100e-09 * tc[3] - 1.98126600e-12 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2O
    result +=
      y[10] *
      (+1.65273100e+00 + 1.26314400e-02 * tc[1] - 1.88816800e-05 * tc[2] +
       2.05003100e-08 * tc[3] - 8.41323700e-12 * tc[4]) *
      0.0333044694598015;
    // species 11: CH3
    result +=
      y[11] *
      (+2.43044300e+00 + 1.11241000e-02 * tc[1] - 1.68022000e-05 * tc[2] +
       1.62182900e-08 * tc[3] - 5.86495300e-12 * tc[4]) *
      0.0665114732291320;
    // species 12: CO
    result +=
      y[12] *
      (+3.26245200e+00 + 1.51194100e-03 * tc[1] - 3.88175500e-06 * tc[2] +
       5.58194400e-09 * tc[3] - 2.47495100e-12 * tc[4]) *
      0.0357015351660121;
    // species 13: CH3O
    result +=
      y[13] *
      (+2.10620400e+00 + 7.21659500e-03 * tc[1] + 5.33847200e-06 * tc[2] -
       7.37763600e-09 * tc[3] + 2.07561100e-12 * tc[4]) *
      0.0322227234645872;
    // species 14: C2H5
    result +=
      y[14] *
      (+2.69070200e+00 + 8.71913300e-03 * tc[1] + 4.41983900e-06 * tc[2] +
       9.33870300e-10 * tc[3] - 3.92777300e-12 * tc[4]) *
      0.0344091941366733;
    // species 15: CH4
    result +=
      y[15] *
      (+7.78741500e-01 + 1.74766800e-02 * tc[1] - 2.78340900e-05 * tc[2] +
       3.04970800e-08 * tc[3] - 1.22393100e-11 * tc[4]) *
      0.0623324814560868;
    // species 16: C2H4
    result +=
      y[16] *
      (-8.61488000e-01 + 2.79616300e-02 * tc[1] - 3.38867700e-05 * tc[2] +
       2.78515200e-08 * tc[3] - 9.73787900e-12 * tc[4]) *
      0.0356455407428531;
    // species 18: CO2
    result +=
      y[18] *
      (+2.27572500e+00 + 9.92207200e-03 * tc[1] - 1.04091100e-05 * tc[2] +
       6.86668700e-09 * tc[3] - 2.11728000e-12 * tc[4]) *
      0.0227226249176305;
    // species 19: HCO
    result +=
      y[19] *
      (+2.89833000e+00 + 6.19914700e-03 * tc[1] - 9.62308400e-06 * tc[2] +
       1.08982500e-08 * tc[3] - 4.57488500e-12 * tc[4]) *
      0.0344613688055690;
    // species 22: C2H2
    result +=
      y[22] *
      (+2.01356200e+00 + 1.51904500e-02 * tc[1] - 1.61631900e-05 * tc[2] +
       9.07899200e-09 * tc[3] - 1.91274600e-12 * tc[4]) *
      0.0384054074813734;
    // species 23: HCCO
    result +=
      y[23] *
      (+5.04796500e+00 + 4.45347800e-03 * tc[1] + 2.26828300e-07 * tc[2] -
       1.48209500e-09 * tc[3] + 2.25074200e-13 * tc[4]) *
      0.0243730044602598;
    // species 24: C2H3
    result +=
      y[24] *
      (+2.45927600e+00 + 7.37147600e-03 * tc[1] + 2.10987300e-06 * tc[2] -
       1.32164200e-09 * tc[3] - 1.18478400e-12 * tc[4]) *
      0.0369740442209569;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+3.40906200e+00 + 1.07385700e-02 * tc[1] + 1.89149200e-06 * tc[2] -
       7.15858300e-09 * tc[3] + 2.86738500e-12 * tc[4]) *
      0.0232315019165989;
    // species 29: IXC3H7
    result +=
      y[29] *
      (+1.71330000e+00 + 2.54261600e-02 * tc[1] + 1.58080800e-06 * tc[2] -
       1.82128600e-08 * tc[3] + 8.82771000e-12 * tc[4]) *
      0.0232077792476038;
    // species 30: NXC3H7
    result +=
      y[30] *
      (+1.92253700e+00 + 2.47892700e-02 * tc[1] + 1.81024900e-06 * tc[2] -
       1.78326600e-08 * tc[3] + 8.58299600e-12 * tc[4]) *
      0.0232077792476038;
    // species 31: C3H8
    result +=
      y[31] *
      (+8.96920800e-01 + 2.66898600e-02 * tc[1] + 5.43142500e-06 * tc[2] -
       2.12600100e-08 * tc[3] + 9.24333000e-12 * tc[4]) *
      0.0226772796335352;
  } else {
    // species 0: N2
    result +=
      y[0] *
      (+2.92664000e+00 + 1.48797700e-03 * tc[1] - 5.68476100e-07 * tc[2] +
       1.00970400e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 1: O
    result +=
      y[1] *
      (+2.54206000e+00 - 2.75506200e-05 * tc[1] - 3.10280300e-09 * tc[2] +
       4.55106700e-12 * tc[3] - 4.36805200e-16 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+2.99142300e+00 + 7.00064400e-04 * tc[1] - 5.63382900e-08 * tc[2] -
       9.23157800e-12 * tc[3] + 1.58275200e-15 * tc[4]) *
      0.4960317460317460;
    // species 5: O2
    result +=
      y[5] *
      (+3.69757800e+00 + 6.13519700e-04 * tc[1] - 1.25884200e-07 * tc[2] +
       1.77528100e-11 * tc[3] - 1.13643500e-15 * tc[4]) *
      0.0312519532470779;
    // species 6: H2O
    result +=
      y[6] *
      (+2.67214600e+00 + 3.05629300e-03 * tc[1] - 8.73026000e-07 * tc[2] +
       1.20099600e-10 * tc[3] - 6.39161800e-15 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.57316700e+00 + 4.33613600e-03 * tc[1] - 1.47468900e-06 * tc[2] +
       2.34890400e-10 * tc[3] - 1.43165400e-14 * tc[4]) *
      0.0293996589639560;
    // species 9: CH2GSG
    result +=
      y[9] *
      (+3.55288900e+00 + 2.06678800e-03 * tc[1] - 1.91411600e-07 * tc[2] -
       1.10467300e-10 * tc[3] + 2.02135000e-14 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2O
    result +=
      y[10] *
      (+2.99560600e+00 + 6.68132100e-03 * tc[1] - 2.62895500e-06 * tc[2] +
       4.73715300e-10 * tc[3] - 3.21251700e-14 * tc[4]) *
      0.0333044694598015;
    // species 11: CH3
    result +=
      y[11] *
      (+2.84405200e+00 + 6.13797400e-03 * tc[1] - 2.23034500e-06 * tc[2] +
       3.78516100e-10 * tc[3] - 2.45215900e-14 * tc[4]) *
      0.0665114732291320;
    // species 12: CO
    result +=
      y[12] *
      (+3.02507800e+00 + 1.44268900e-03 * tc[1] - 5.63082800e-07 * tc[2] +
       1.01858100e-10 * tc[3] - 6.91095200e-15 * tc[4]) *
      0.0357015351660121;
    // species 13: CH3O
    result +=
      y[13] *
      (+3.77080000e+00 + 7.87149700e-03 * tc[1] - 2.65638400e-06 * tc[2] +
       3.94443100e-10 * tc[3] - 2.11261600e-14 * tc[4]) *
      0.0322227234645872;
    // species 14: C2H5
    result +=
      y[14] *
      (+7.19048000e+00 + 6.48407700e-03 * tc[1] - 6.42806500e-07 * tc[2] -
       2.34787900e-10 * tc[3] + 3.88087700e-14 * tc[4]) *
      0.0344091941366733;
    // species 15: CH4
    result +=
      y[15] *
      (+1.68347900e+00 + 1.02372400e-02 * tc[1] - 3.87512900e-06 * tc[2] +
       6.78558500e-10 * tc[3] - 4.50342300e-14 * tc[4]) *
      0.0623324814560868;
    // species 16: C2H4
    result +=
      y[16] *
      (+3.52841900e+00 + 1.14851800e-02 * tc[1] - 4.41838500e-06 * tc[2] +
       7.84460100e-10 * tc[3] - 5.26684800e-14 * tc[4]) *
      0.0356455407428531;
    // species 18: CO2
    result +=
      y[18] *
      (+4.45362300e+00 + 3.14016900e-03 * tc[1] - 1.27841100e-06 * tc[2] +
       2.39399700e-10 * tc[3] - 1.66903300e-14 * tc[4]) *
      0.0227226249176305;
    // species 19: HCO
    result +=
      y[19] *
      (+3.55727100e+00 + 3.34557300e-03 * tc[1] - 1.33500600e-06 * tc[2] +
       2.47057300e-10 * tc[3] - 1.71385100e-14 * tc[4]) *
      0.0344613688055690;
    // species 22: C2H2
    result +=
      y[22] *
      (+4.43677000e+00 + 5.37603900e-03 * tc[1] - 1.91281700e-06 * tc[2] +
       3.28637900e-10 * tc[3] - 2.15671000e-14 * tc[4]) *
      0.0384054074813734;
    // species 23: HCCO
    result +=
      y[23] *
      (+6.75807300e+00 + 2.00040000e-03 * tc[1] - 2.02760700e-07 * tc[2] -
       1.04113200e-10 * tc[3] + 1.96516500e-14 * tc[4]) *
      0.0243730044602598;
    // species 24: C2H3
    result +=
      y[24] *
      (+5.93346800e+00 + 4.01774600e-03 * tc[1] - 3.96674000e-07 * tc[2] -
       1.44126700e-10 * tc[3] + 2.37864400e-14 * tc[4]) *
      0.0369740442209569;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+5.97567000e+00 + 8.13059100e-03 * tc[1] - 2.74362400e-06 * tc[2] +
       4.07030400e-10 * tc[3] - 2.17601700e-14 * tc[4]) *
      0.0232315019165989;
    // species 29: IXC3H7
    result +=
      y[29] *
      (+8.06336900e+00 + 1.57448800e-02 * tc[1] - 5.18239200e-06 * tc[2] +
       7.47724500e-10 * tc[3] - 3.85442200e-14 * tc[4]) *
      0.0232077792476038;
    // species 30: NXC3H7
    result +=
      y[30] *
      (+7.97829100e+00 + 1.57611300e-02 * tc[1] - 5.17324300e-06 * tc[2] +
       7.44389200e-10 * tc[3] - 3.82497800e-14 * tc[4]) *
      0.0232077792476038;
    // species 31: C3H8
    result +=
      y[31] *
      (+7.52521700e+00 + 1.88903400e-02 * tc[1] - 6.28392400e-06 * tc[2] +
       9.17937300e-10 * tc[3] - 4.81241000e-14 * tc[4]) *
      0.0226772796335352;
  }

  // species with no change at a midpoint T
  // species 2: H
  result += y[2] *
            (+2.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
             0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
            0.9920634920634921;

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 3: OH
    result +=
      y[3] *
      (+3.43586219e+00 + 2.02235804e-04 * tc[1] - 1.13546412e-07 * tc[2] +
       2.42445149e-10 * tc[3] - 7.43651031e-14 * tc[4]) *
      0.0587993179279120;
  } else {
    // species 3: OH
    result +=
      y[3] *
      (+2.62599754e+00 + 1.31992406e-03 * tc[1] - 3.59724670e-07 * tc[2] +
       4.25630800e-11 * tc[3] - 1.82048016e-15 * tc[4]) *
      0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 8: HO2
    result +=
      y[8] *
      (+3.18310656e+00 + 3.66767950e-03 * tc[1] - 9.32385122e-07 * tc[2] -
       3.25852919e-10 * tc[3] + 1.51139912e-13 * tc[4]) *
      0.0302975216627280;
    // species 21: CH3O2H
    result +=
      y[21] *
      (+3.23442817e+00 + 1.90129767e-02 * tc[1] - 1.13386287e-05 * tc[2] +
       3.40306653e-09 * tc[3] - 4.11830222e-13 * tc[4]) *
      0.0208155533814866;
  } else {
    // species 8: HO2
    result +=
      y[8] *
      (+4.10547423e+00 + 2.38452835e-03 * tc[1] - 8.06347989e-07 * tc[2] +
       1.24191723e-10 * tc[3] - 7.16400108e-15 * tc[4]) *
      0.0302975216627280;
    // species 21: CH3O2H
    result +=
      y[21] *
      (+8.43117091e+00 + 8.06817909e-03 * tc[1] - 2.77094921e-06 * tc[2] +
       4.31332243e-10 * tc[3] - 2.50692146e-14 * tc[4]) *
      0.0208155533814866;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 17: C2H6
    result +=
      y[17] *
      (-2.52854344e-02 + 2.40764754e-02 * tc[1] - 1.11893472e-05 * tc[2] +
       2.08340901e-09 * tc[3] - 5.29868616e-14 * tc[4]) *
      0.0332557366145660;
    // species 33: NXC3H7O2
    result +=
      y[33] *
      (+2.10731492e+00 + 3.96164986e-02 * tc[1] - 2.49491599e-05 * tc[2] +
       8.59450300e-09 * tc[3] - 1.31240330e-12 * tc[4]) *
      0.0133178845872122;
  } else {
    // species 17: C2H6
    result +=
      y[17] *
      (+6.10683385e+00 + 1.29236361e-02 * tc[1] - 4.42527196e-06 * tc[2] +
       6.87391726e-10 * tc[3] - 3.98901732e-14 * tc[4]) *
      0.0332557366145660;
    // species 33: NXC3H7O2
    result +=
      y[33] *
      (+1.26327059e+01 + 1.69910726e-02 * tc[1] - 5.88866873e-06 * tc[2] +
       9.22195396e-10 * tc[3] - 5.38230675e-14 * tc[4]) *
      0.0133178845872122;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 20: CH3O2
    result +=
      y[20] *
      (+4.26146906e+00 + 1.00873599e-02 * tc[1] - 3.21506184e-06 * tc[2] +
       2.09409267e-10 * tc[3] + 4.18339103e-14 * tc[4]) *
      0.0212616673399528;
  } else {
    // species 20: CH3O2
    result +=
      y[20] *
      (+5.95787891e+00 + 7.90728626e-03 * tc[1] - 2.68246234e-06 * tc[2] +
       4.13891337e-10 * tc[3] - 2.39007330e-14 * tc[4]) *
      0.0212616673399528;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 26: C3H5XA
    result +=
      y[26] *
      (-5.29131958e-01 + 3.34559100e-02 * tc[1] - 2.53401027e-05 * tc[2] +
       1.02865754e-08 * tc[3] - 1.73258340e-12 * tc[4]) *
      0.0243468945535997;
  } else {
    // species 26: C3H5XA
    result +=
      y[26] *
      (+8.45883958e+00 + 1.12695483e-02 * tc[1] - 3.83792864e-06 * tc[2] +
       5.94059119e-10 * tc[3] - 3.43918030e-14 * tc[4]) *
      0.0243468945535997;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 27: C3H6
    result +=
      y[27] *
      (+3.94615444e-01 + 2.89107662e-02 * tc[1] - 1.54886808e-05 * tc[2] +
       3.88814209e-09 * tc[3] - 3.37890352e-13 * tc[4]) *
      0.0237636938285687;
    // species 32: IXC3H7O2
    result +=
      y[32] *
      (+1.49941639e+00 + 4.43081205e-02 * tc[1] - 3.22414456e-05 * tc[2] +
       1.29687136e-08 * tc[3] - 2.23370569e-12 * tc[4]) *
      0.0133178845872122;
  } else {
    // species 27: C3H6
    result +=
      y[27] *
      (+8.01595958e+00 + 1.37023634e-02 * tc[1] - 4.66249733e-06 * tc[2] +
       7.21254402e-10 * tc[3] - 4.17370126e-14 * tc[4]) *
      0.0237636938285687;
    // species 32: IXC3H7O2
    result +=
      y[32] *
      (+1.32493493e+01 + 1.64082190e-02 * tc[1] - 5.67432062e-06 * tc[2] +
       8.87336340e-10 * tc[3] - 5.17361535e-14 * tc[4]) *
      0.0133178845872122;
  }

  // species with midpoint at T=1380 kelvin
  if (tT < 1380) {
    // species 28: C3H5O
    result +=
      y[28] *
      (+1.19822582e+00 + 3.05579837e-02 * tc[1] - 1.80630276e-05 * tc[2] +
       4.86150033e-09 * tc[3] - 4.19854562e-13 * tc[4]) *
      0.0175217269414073;
  } else {
    // species 28: C3H5O
    result +=
      y[28] *
      (+1.02551752e+01 + 1.14983720e-02 * tc[1] - 3.84645659e-06 * tc[2] +
       5.88910346e-10 * tc[3] - 3.38557923e-14 * tc[4]) *
      0.0175217269414073;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[34];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 34; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result +=
      y[0] *
      (+2.29867700e+00 + 1.40824000e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485500e-12 * tc[4]) *
      0.0356964374955379;
    // species 1: O
    result +=
      y[1] *
      (+1.94642900e+00 - 1.63816600e-03 * tc[1] + 2.42103200e-06 * tc[2] -
       1.60284300e-09 * tc[3] + 3.89069600e-13 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+2.29812400e+00 + 8.24944200e-04 * tc[1] - 8.14301500e-07 * tc[2] -
       9.47543400e-11 * tc[3] + 4.13487200e-13 * tc[4]) *
      0.4960317460317460;
    // species 5: O2
    result +=
      y[5] *
      (+2.21293600e+00 + 1.12748600e-03 * tc[1] - 5.75615000e-07 * tc[2] +
       1.31387700e-09 * tc[3] - 8.76855400e-13 * tc[4]) *
      0.0312519532470779;
    // species 6: H2O
    result +=
      y[6] *
      (+2.38684200e+00 + 3.47498200e-03 * tc[1] - 6.35469600e-06 * tc[2] +
       6.96858100e-09 * tc[3] - 2.50658800e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+2.38875400e+00 + 6.56922600e-03 * tc[1] - 1.48501300e-07 * tc[2] -
       4.62580600e-09 * tc[3] + 2.47151500e-12 * tc[4]) *
      0.0293996589639560;
    // species 9: CH2GSG
    result +=
      y[9] *
      (+2.97126500e+00 - 1.69908900e-04 * tc[1] + 1.02536900e-06 * tc[2] +
       2.49255100e-09 * tc[3] - 1.98126600e-12 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2O
    result +=
      y[10] *
      (+6.52731000e-01 + 1.26314400e-02 * tc[1] - 1.88816800e-05 * tc[2] +
       2.05003100e-08 * tc[3] - 8.41323700e-12 * tc[4]) *
      0.0333044694598015;
    // species 11: CH3
    result +=
      y[11] *
      (+1.43044300e+00 + 1.11241000e-02 * tc[1] - 1.68022000e-05 * tc[2] +
       1.62182900e-08 * tc[3] - 5.86495300e-12 * tc[4]) *
      0.0665114732291320;
    // species 12: CO
    result +=
      y[12] *
      (+2.26245200e+00 + 1.51194100e-03 * tc[1] - 3.88175500e-06 * tc[2] +
       5.58194400e-09 * tc[3] - 2.47495100e-12 * tc[4]) *
      0.0357015351660121;
    // species 13: CH3O
    result +=
      y[13] *
      (+1.10620400e+00 + 7.21659500e-03 * tc[1] + 5.33847200e-06 * tc[2] -
       7.37763600e-09 * tc[3] + 2.07561100e-12 * tc[4]) *
      0.0322227234645872;
    // species 14: C2H5
    result +=
      y[14] *
      (+1.69070200e+00 + 8.71913300e-03 * tc[1] + 4.41983900e-06 * tc[2] +
       9.33870300e-10 * tc[3] - 3.92777300e-12 * tc[4]) *
      0.0344091941366733;
    // species 15: CH4
    result +=
      y[15] *
      (-2.21258500e-01 + 1.74766800e-02 * tc[1] - 2.78340900e-05 * tc[2] +
       3.04970800e-08 * tc[3] - 1.22393100e-11 * tc[4]) *
      0.0623324814560868;
    // species 16: C2H4
    result +=
      y[16] *
      (-1.86148800e+00 + 2.79616300e-02 * tc[1] - 3.38867700e-05 * tc[2] +
       2.78515200e-08 * tc[3] - 9.73787900e-12 * tc[4]) *
      0.0356455407428531;
    // species 18: CO2
    result +=
      y[18] *
      (+1.27572500e+00 + 9.92207200e-03 * tc[1] - 1.04091100e-05 * tc[2] +
       6.86668700e-09 * tc[3] - 2.11728000e-12 * tc[4]) *
      0.0227226249176305;
    // species 19: HCO
    result +=
      y[19] *
      (+1.89833000e+00 + 6.19914700e-03 * tc[1] - 9.62308400e-06 * tc[2] +
       1.08982500e-08 * tc[3] - 4.57488500e-12 * tc[4]) *
      0.0344613688055690;
    // species 22: C2H2
    result +=
      y[22] *
      (+1.01356200e+00 + 1.51904500e-02 * tc[1] - 1.61631900e-05 * tc[2] +
       9.07899200e-09 * tc[3] - 1.91274600e-12 * tc[4]) *
      0.0384054074813734;
    // species 23: HCCO
    result +=
      y[23] *
      (+4.04796500e+00 + 4.45347800e-03 * tc[1] + 2.26828300e-07 * tc[2] -
       1.48209500e-09 * tc[3] + 2.25074200e-13 * tc[4]) *
      0.0243730044602598;
    // species 24: C2H3
    result +=
      y[24] *
      (+1.45927600e+00 + 7.37147600e-03 * tc[1] + 2.10987300e-06 * tc[2] -
       1.32164200e-09 * tc[3] - 1.18478400e-12 * tc[4]) *
      0.0369740442209569;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+2.40906200e+00 + 1.07385700e-02 * tc[1] + 1.89149200e-06 * tc[2] -
       7.15858300e-09 * tc[3] + 2.86738500e-12 * tc[4]) *
      0.0232315019165989;
    // species 29: IXC3H7
    result +=
      y[29] *
      (+7.13300000e-01 + 2.54261600e-02 * tc[1] + 1.58080800e-06 * tc[2] -
       1.82128600e-08 * tc[3] + 8.82771000e-12 * tc[4]) *
      0.0232077792476038;
    // species 30: NXC3H7
    result +=
      y[30] *
      (+9.22537000e-01 + 2.47892700e-02 * tc[1] + 1.81024900e-06 * tc[2] -
       1.78326600e-08 * tc[3] + 8.58299600e-12 * tc[4]) *
      0.0232077792476038;
    // species 31: C3H8
    result +=
      y[31] *
      (-1.03079200e-01 + 2.66898600e-02 * tc[1] + 5.43142500e-06 * tc[2] -
       2.12600100e-08 * tc[3] + 9.24333000e-12 * tc[4]) *
      0.0226772796335352;
  } else {
    // species 0: N2
    result +=
      y[0] *
      (+1.92664000e+00 + 1.48797700e-03 * tc[1] - 5.68476100e-07 * tc[2] +
       1.00970400e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 1: O
    result +=
      y[1] *
      (+1.54206000e+00 - 2.75506200e-05 * tc[1] - 3.10280300e-09 * tc[2] +
       4.55106700e-12 * tc[3] - 4.36805200e-16 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+1.99142300e+00 + 7.00064400e-04 * tc[1] - 5.63382900e-08 * tc[2] -
       9.23157800e-12 * tc[3] + 1.58275200e-15 * tc[4]) *
      0.4960317460317460;
    // species 5: O2
    result +=
      y[5] *
      (+2.69757800e+00 + 6.13519700e-04 * tc[1] - 1.25884200e-07 * tc[2] +
       1.77528100e-11 * tc[3] - 1.13643500e-15 * tc[4]) *
      0.0312519532470779;
    // species 6: H2O
    result +=
      y[6] *
      (+1.67214600e+00 + 3.05629300e-03 * tc[1] - 8.73026000e-07 * tc[2] +
       1.20099600e-10 * tc[3] - 6.39161800e-15 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.57316700e+00 + 4.33613600e-03 * tc[1] - 1.47468900e-06 * tc[2] +
       2.34890400e-10 * tc[3] - 1.43165400e-14 * tc[4]) *
      0.0293996589639560;
    // species 9: CH2GSG
    result +=
      y[9] *
      (+2.55288900e+00 + 2.06678800e-03 * tc[1] - 1.91411600e-07 * tc[2] -
       1.10467300e-10 * tc[3] + 2.02135000e-14 * tc[4]) *
      0.0712910814857061;
    // species 10: CH2O
    result +=
      y[10] *
      (+1.99560600e+00 + 6.68132100e-03 * tc[1] - 2.62895500e-06 * tc[2] +
       4.73715300e-10 * tc[3] - 3.21251700e-14 * tc[4]) *
      0.0333044694598015;
    // species 11: CH3
    result +=
      y[11] *
      (+1.84405200e+00 + 6.13797400e-03 * tc[1] - 2.23034500e-06 * tc[2] +
       3.78516100e-10 * tc[3] - 2.45215900e-14 * tc[4]) *
      0.0665114732291320;
    // species 12: CO
    result +=
      y[12] *
      (+2.02507800e+00 + 1.44268900e-03 * tc[1] - 5.63082800e-07 * tc[2] +
       1.01858100e-10 * tc[3] - 6.91095200e-15 * tc[4]) *
      0.0357015351660121;
    // species 13: CH3O
    result +=
      y[13] *
      (+2.77080000e+00 + 7.87149700e-03 * tc[1] - 2.65638400e-06 * tc[2] +
       3.94443100e-10 * tc[3] - 2.11261600e-14 * tc[4]) *
      0.0322227234645872;
    // species 14: C2H5
    result +=
      y[14] *
      (+6.19048000e+00 + 6.48407700e-03 * tc[1] - 6.42806500e-07 * tc[2] -
       2.34787900e-10 * tc[3] + 3.88087700e-14 * tc[4]) *
      0.0344091941366733;
    // species 15: CH4
    result +=
      y[15] *
      (+6.83479000e-01 + 1.02372400e-02 * tc[1] - 3.87512900e-06 * tc[2] +
       6.78558500e-10 * tc[3] - 4.50342300e-14 * tc[4]) *
      0.0623324814560868;
    // species 16: C2H4
    result +=
      y[16] *
      (+2.52841900e+00 + 1.14851800e-02 * tc[1] - 4.41838500e-06 * tc[2] +
       7.84460100e-10 * tc[3] - 5.26684800e-14 * tc[4]) *
      0.0356455407428531;
    // species 18: CO2
    result +=
      y[18] *
      (+3.45362300e+00 + 3.14016900e-03 * tc[1] - 1.27841100e-06 * tc[2] +
       2.39399700e-10 * tc[3] - 1.66903300e-14 * tc[4]) *
      0.0227226249176305;
    // species 19: HCO
    result +=
      y[19] *
      (+2.55727100e+00 + 3.34557300e-03 * tc[1] - 1.33500600e-06 * tc[2] +
       2.47057300e-10 * tc[3] - 1.71385100e-14 * tc[4]) *
      0.0344613688055690;
    // species 22: C2H2
    result +=
      y[22] *
      (+3.43677000e+00 + 5.37603900e-03 * tc[1] - 1.91281700e-06 * tc[2] +
       3.28637900e-10 * tc[3] - 2.15671000e-14 * tc[4]) *
      0.0384054074813734;
    // species 23: HCCO
    result +=
      y[23] *
      (+5.75807300e+00 + 2.00040000e-03 * tc[1] - 2.02760700e-07 * tc[2] -
       1.04113200e-10 * tc[3] + 1.96516500e-14 * tc[4]) *
      0.0243730044602598;
    // species 24: C2H3
    result +=
      y[24] *
      (+4.93346800e+00 + 4.01774600e-03 * tc[1] - 3.96674000e-07 * tc[2] -
       1.44126700e-10 * tc[3] + 2.37864400e-14 * tc[4]) *
      0.0369740442209569;
    // species 25: CH2CHO
    result +=
      y[25] *
      (+4.97567000e+00 + 8.13059100e-03 * tc[1] - 2.74362400e-06 * tc[2] +
       4.07030400e-10 * tc[3] - 2.17601700e-14 * tc[4]) *
      0.0232315019165989;
    // species 29: IXC3H7
    result +=
      y[29] *
      (+7.06336900e+00 + 1.57448800e-02 * tc[1] - 5.18239200e-06 * tc[2] +
       7.47724500e-10 * tc[3] - 3.85442200e-14 * tc[4]) *
      0.0232077792476038;
    // species 30: NXC3H7
    result +=
      y[30] *
      (+6.97829100e+00 + 1.57611300e-02 * tc[1] - 5.17324300e-06 * tc[2] +
       7.44389200e-10 * tc[3] - 3.82497800e-14 * tc[4]) *
      0.0232077792476038;
    // species 31: C3H8
    result +=
      y[31] *
      (+6.52521700e+00 + 1.88903400e-02 * tc[1] - 6.28392400e-06 * tc[2] +
       9.17937300e-10 * tc[3] - 4.81241000e-14 * tc[4]) *
      0.0226772796335352;
  }

  // species with no change at a midpoint T
  // species 2: H
  result += y[2] *
            (+1.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
             0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
            0.9920634920634921;

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 3: OH
    result +=
      y[3] *
      (+2.43586219e+00 + 2.02235804e-04 * tc[1] - 1.13546412e-07 * tc[2] +
       2.42445149e-10 * tc[3] - 7.43651031e-14 * tc[4]) *
      0.0587993179279120;
  } else {
    // species 3: OH
    result +=
      y[3] *
      (+1.62599754e+00 + 1.31992406e-03 * tc[1] - 3.59724670e-07 * tc[2] +
       4.25630800e-11 * tc[3] - 1.82048016e-15 * tc[4]) *
      0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 8: HO2
    result +=
      y[8] *
      (+2.18310656e+00 + 3.66767950e-03 * tc[1] - 9.32385122e-07 * tc[2] -
       3.25852919e-10 * tc[3] + 1.51139912e-13 * tc[4]) *
      0.0302975216627280;
    // species 21: CH3O2H
    result +=
      y[21] *
      (+2.23442817e+00 + 1.90129767e-02 * tc[1] - 1.13386287e-05 * tc[2] +
       3.40306653e-09 * tc[3] - 4.11830222e-13 * tc[4]) *
      0.0208155533814866;
  } else {
    // species 8: HO2
    result +=
      y[8] *
      (+3.10547423e+00 + 2.38452835e-03 * tc[1] - 8.06347989e-07 * tc[2] +
       1.24191723e-10 * tc[3] - 7.16400108e-15 * tc[4]) *
      0.0302975216627280;
    // species 21: CH3O2H
    result +=
      y[21] *
      (+7.43117091e+00 + 8.06817909e-03 * tc[1] - 2.77094921e-06 * tc[2] +
       4.31332243e-10 * tc[3] - 2.50692146e-14 * tc[4]) *
      0.0208155533814866;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 17: C2H6
    result +=
      y[17] *
      (-1.02528543e+00 + 2.40764754e-02 * tc[1] - 1.11893472e-05 * tc[2] +
       2.08340901e-09 * tc[3] - 5.29868616e-14 * tc[4]) *
      0.0332557366145660;
    // species 33: NXC3H7O2
    result +=
      y[33] *
      (+1.10731492e+00 + 3.96164986e-02 * tc[1] - 2.49491599e-05 * tc[2] +
       8.59450300e-09 * tc[3] - 1.31240330e-12 * tc[4]) *
      0.0133178845872122;
  } else {
    // species 17: C2H6
    result +=
      y[17] *
      (+5.10683385e+00 + 1.29236361e-02 * tc[1] - 4.42527196e-06 * tc[2] +
       6.87391726e-10 * tc[3] - 3.98901732e-14 * tc[4]) *
      0.0332557366145660;
    // species 33: NXC3H7O2
    result +=
      y[33] *
      (+1.16327059e+01 + 1.69910726e-02 * tc[1] - 5.88866873e-06 * tc[2] +
       9.22195396e-10 * tc[3] - 5.38230675e-14 * tc[4]) *
      0.0133178845872122;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 20: CH3O2
    result +=
      y[20] *
      (+3.26146906e+00 + 1.00873599e-02 * tc[1] - 3.21506184e-06 * tc[2] +
       2.09409267e-10 * tc[3] + 4.18339103e-14 * tc[4]) *
      0.0212616673399528;
  } else {
    // species 20: CH3O2
    result +=
      y[20] *
      (+4.95787891e+00 + 7.90728626e-03 * tc[1] - 2.68246234e-06 * tc[2] +
       4.13891337e-10 * tc[3] - 2.39007330e-14 * tc[4]) *
      0.0212616673399528;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 26: C3H5XA
    result +=
      y[26] *
      (-1.52913196e+00 + 3.34559100e-02 * tc[1] - 2.53401027e-05 * tc[2] +
       1.02865754e-08 * tc[3] - 1.73258340e-12 * tc[4]) *
      0.0243468945535997;
  } else {
    // species 26: C3H5XA
    result +=
      y[26] *
      (+7.45883958e+00 + 1.12695483e-02 * tc[1] - 3.83792864e-06 * tc[2] +
       5.94059119e-10 * tc[3] - 3.43918030e-14 * tc[4]) *
      0.0243468945535997;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 27: C3H6
    result +=
      y[27] *
      (-6.05384556e-01 + 2.89107662e-02 * tc[1] - 1.54886808e-05 * tc[2] +
       3.88814209e-09 * tc[3] - 3.37890352e-13 * tc[4]) *
      0.0237636938285687;
    // species 32: IXC3H7O2
    result +=
      y[32] *
      (+4.99416390e-01 + 4.43081205e-02 * tc[1] - 3.22414456e-05 * tc[2] +
       1.29687136e-08 * tc[3] - 2.23370569e-12 * tc[4]) *
      0.0133178845872122;
  } else {
    // species 27: C3H6
    result +=
      y[27] *
      (+7.01595958e+00 + 1.37023634e-02 * tc[1] - 4.66249733e-06 * tc[2] +
       7.21254402e-10 * tc[3] - 4.17370126e-14 * tc[4]) *
      0.0237636938285687;
    // species 32: IXC3H7O2
    result +=
      y[32] *
      (+1.22493493e+01 + 1.64082190e-02 * tc[1] - 5.67432062e-06 * tc[2] +
       8.87336340e-10 * tc[3] - 5.17361535e-14 * tc[4]) *
      0.0133178845872122;
  }

  // species with midpoint at T=1380 kelvin
  if (tT < 1380) {
    // species 28: C3H5O
    result +=
      y[28] *
      (+1.98225820e-01 + 3.05579837e-02 * tc[1] - 1.80630276e-05 * tc[2] +
       4.86150033e-09 * tc[3] - 4.19854562e-13 * tc[4]) *
      0.0175217269414073;
  } else {
    // species 28: C3H5O
    result +=
      y[28] *
      (+9.25517520e+00 + 1.14983720e-02 * tc[1] - 3.84645659e-06 * tc[2] +
       5.88910346e-10 * tc[3] - 3.38557923e-14 * tc[4]) *
      0.0175217269414073;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[34];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 34; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result += y[0] *
              (+3.29867700e+00 + 7.04120000e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88971000e-13 * tc[4] - 1.02090000e+03 * invT) *
              0.0356964374955379;
    // species 1: O
    result += y[1] *
              (+2.94642900e+00 - 8.19083000e-04 * tc[1] +
               8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
               7.78139200e-14 * tc[4] + 2.91476400e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+3.29812400e+00 + 4.12472100e-04 * tc[1] -
               2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
               8.26974400e-14 * tc[4] - 1.01252100e+03 * invT) *
              0.4960317460317460;
    // species 5: O2
    result += y[5] *
              (+3.21293600e+00 + 5.63743000e-04 * tc[1] -
               1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
               1.75371080e-13 * tc[4] - 1.00524900e+03 * invT) *
              0.0312519532470779;
    // species 6: H2O
    result += y[6] *
              (+3.38684200e+00 + 1.73749100e-03 * tc[1] -
               2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
               5.01317600e-13 * tc[4] - 3.02081100e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.38875400e+00 + 3.28461300e-03 * tc[1] -
               4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
               4.94303000e-13 * tc[4] - 1.76631500e+04 * invT) *
              0.0293996589639560;
    // species 9: CH2GSG
    result += y[9] *
              (+3.97126500e+00 - 8.49544500e-05 * tc[1] +
               3.41789667e-07 * tc[2] + 6.23137750e-10 * tc[3] -
               3.96253200e-13 * tc[4] + 4.98936800e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2O
    result += y[10] *
              (+1.65273100e+00 + 6.31572000e-03 * tc[1] -
               6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
               1.68264740e-12 * tc[4] - 1.48654000e+04 * invT) *
              0.0333044694598015;
    // species 11: CH3
    result += y[11] *
              (+2.43044300e+00 + 5.56205000e-03 * tc[1] -
               5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
               1.17299060e-12 * tc[4] + 1.64237800e+04 * invT) *
              0.0665114732291320;
    // species 12: CO
    result += y[12] *
              (+3.26245200e+00 + 7.55970500e-04 * tc[1] -
               1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
               4.94990200e-13 * tc[4] - 1.43105400e+04 * invT) *
              0.0357015351660121;
    // species 13: CH3O
    result += y[13] *
              (+2.10620400e+00 + 3.60829750e-03 * tc[1] +
               1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
               4.15122200e-13 * tc[4] + 9.78601100e+02 * invT) *
              0.0322227234645872;
    // species 14: C2H5
    result += y[14] *
              (+2.69070200e+00 + 4.35956650e-03 * tc[1] +
               1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
               7.85554600e-13 * tc[4] + 1.28704000e+04 * invT) *
              0.0344091941366733;
    // species 15: CH4
    result += y[15] *
              (+7.78741500e-01 + 8.73834000e-03 * tc[1] -
               9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
               2.44786200e-12 * tc[4] - 9.82522900e+03 * invT) *
              0.0623324814560868;
    // species 16: C2H4
    result += y[16] *
              (-8.61488000e-01 + 1.39808150e-02 * tc[1] -
               1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
               1.94757580e-12 * tc[4] + 5.57304600e+03 * invT) *
              0.0356455407428531;
    // species 18: CO2
    result += y[18] *
              (+2.27572500e+00 + 4.96103600e-03 * tc[1] -
               3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
               4.23456000e-13 * tc[4] - 4.83731400e+04 * invT) *
              0.0227226249176305;
    // species 19: HCO
    result += y[19] *
              (+2.89833000e+00 + 3.09957350e-03 * tc[1] -
               3.20769467e-06 * tc[2] + 2.72456250e-09 * tc[3] -
               9.14977000e-13 * tc[4] + 4.15992200e+03 * invT) *
              0.0344613688055690;
    // species 22: C2H2
    result += y[22] *
              (+2.01356200e+00 + 7.59522500e-03 * tc[1] -
               5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
               3.82549200e-13 * tc[4] + 2.61244400e+04 * invT) *
              0.0384054074813734;
    // species 23: HCCO
    result += y[23] *
              (+5.04796500e+00 + 2.22673900e-03 * tc[1] +
               7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
               4.50148400e-14 * tc[4] + 1.96589200e+04 * invT) *
              0.0243730044602598;
    // species 24: C2H3
    result += y[24] *
              (+2.45927600e+00 + 3.68573800e-03 * tc[1] +
               7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
               2.36956800e-13 * tc[4] + 3.33522500e+04 * invT) *
              0.0369740442209569;
    // species 25: CH2CHO
    result += y[25] *
              (+3.40906200e+00 + 5.36928500e-03 * tc[1] +
               6.30497333e-07 * tc[2] - 1.78964575e-09 * tc[3] +
               5.73477000e-13 * tc[4] + 1.52147700e+03 * invT) *
              0.0232315019165989;
    // species 29: IXC3H7
    result += y[29] *
              (+1.71330000e+00 + 1.27130800e-02 * tc[1] +
               5.26936000e-07 * tc[2] - 4.55321500e-09 * tc[3] +
               1.76554200e-12 * tc[4] + 7.53580900e+03 * invT) *
              0.0232077792476038;
    // species 30: NXC3H7
    result += y[30] *
              (+1.92253700e+00 + 1.23946350e-02 * tc[1] +
               6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
               1.71659920e-12 * tc[4] + 9.71328100e+03 * invT) *
              0.0232077792476038;
    // species 31: C3H8
    result += y[31] *
              (+8.96920800e-01 + 1.33449300e-02 * tc[1] +
               1.81047500e-06 * tc[2] - 5.31500250e-09 * tc[3] +
               1.84866600e-12 * tc[4] - 1.39549200e+04 * invT) *
              0.0226772796335352;
  } else {
    // species 0: N2
    result += y[0] *
              (+2.92664000e+00 + 7.43988500e-04 * tc[1] -
               1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 1: O
    result += y[1] *
              (+2.54206000e+00 - 1.37753100e-05 * tc[1] -
               1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
               8.73610400e-17 * tc[4] + 2.92308000e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+2.99142300e+00 + 3.50032200e-04 * tc[1] -
               1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
               3.16550400e-16 * tc[4] - 8.35034000e+02 * invT) *
              0.4960317460317460;
    // species 5: O2
    result += y[5] *
              (+3.69757800e+00 + 3.06759850e-04 * tc[1] -
               4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
               2.27287000e-16 * tc[4] - 1.23393000e+03 * invT) *
              0.0312519532470779;
    // species 6: H2O
    result += y[6] *
              (+2.67214600e+00 + 1.52814650e-03 * tc[1] -
               2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
               1.27832360e-15 * tc[4] - 2.98992100e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+4.57316700e+00 + 2.16806800e-03 * tc[1] -
               4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
               2.86330800e-15 * tc[4] - 1.80069600e+04 * invT) *
              0.0293996589639560;
    // species 9: CH2GSG
    result += y[9] *
              (+3.55288900e+00 + 1.03339400e-03 * tc[1] -
               6.38038667e-08 * tc[2] - 2.76168250e-11 * tc[3] +
               4.04270000e-15 * tc[4] + 4.98497500e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2O
    result += y[10] *
              (+2.99560600e+00 + 3.34066050e-03 * tc[1] -
               8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
               6.42503400e-15 * tc[4] - 1.53203700e+04 * invT) *
              0.0333044694598015;
    // species 11: CH3
    result += y[11] *
              (+2.84405200e+00 + 3.06898700e-03 * tc[1] -
               7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
               4.90431800e-15 * tc[4] + 1.64378100e+04 * invT) *
              0.0665114732291320;
    // species 12: CO
    result += y[12] *
              (+3.02507800e+00 + 7.21344500e-04 * tc[1] -
               1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
               1.38219040e-15 * tc[4] - 1.42683500e+04 * invT) *
              0.0357015351660121;
    // species 13: CH3O
    result += y[13] *
              (+3.77080000e+00 + 3.93574850e-03 * tc[1] -
               8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
               4.22523200e-15 * tc[4] + 1.27832500e+02 * invT) *
              0.0322227234645872;
    // species 14: C2H5
    result += y[14] *
              (+7.19048000e+00 + 3.24203850e-03 * tc[1] -
               2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
               7.76175400e-15 * tc[4] + 1.06745500e+04 * invT) *
              0.0344091941366733;
    // species 15: CH4
    result += y[15] *
              (+1.68347900e+00 + 5.11862000e-03 * tc[1] -
               1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
               9.00684600e-15 * tc[4] - 1.00807900e+04 * invT) *
              0.0623324814560868;
    // species 16: C2H4
    result += y[16] *
              (+3.52841900e+00 + 5.74259000e-03 * tc[1] -
               1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
               1.05336960e-14 * tc[4] + 4.42828900e+03 * invT) *
              0.0356455407428531;
    // species 18: CO2
    result += y[18] *
              (+4.45362300e+00 + 1.57008450e-03 * tc[1] -
               4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
               3.33806600e-15 * tc[4] - 4.89669600e+04 * invT) *
              0.0227226249176305;
    // species 19: HCO
    result += y[19] *
              (+3.55727100e+00 + 1.67278650e-03 * tc[1] -
               4.45002000e-07 * tc[2] + 6.17643250e-11 * tc[3] -
               3.42770200e-15 * tc[4] + 3.91632400e+03 * invT) *
              0.0344613688055690;
    // species 22: C2H2
    result += y[22] *
              (+4.43677000e+00 + 2.68801950e-03 * tc[1] -
               6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
               4.31342000e-15 * tc[4] + 2.56676600e+04 * invT) *
              0.0384054074813734;
    // species 23: HCCO
    result += y[23] *
              (+6.75807300e+00 + 1.00020000e-03 * tc[1] -
               6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
               3.93033000e-15 * tc[4] + 1.90151300e+04 * invT) *
              0.0243730044602598;
    // species 24: C2H3
    result += y[24] *
              (+5.93346800e+00 + 2.00887300e-03 * tc[1] -
               1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
               4.75728800e-15 * tc[4] + 3.18543500e+04 * invT) *
              0.0369740442209569;
    // species 25: CH2CHO
    result += y[25] *
              (+5.97567000e+00 + 4.06529550e-03 * tc[1] -
               9.14541333e-07 * tc[2] + 1.01757600e-10 * tc[3] -
               4.35203400e-15 * tc[4] + 4.90321800e+02 * invT) *
              0.0232315019165989;
    // species 29: IXC3H7
    result += y[29] *
              (+8.06336900e+00 + 7.87244000e-03 * tc[1] -
               1.72746400e-06 * tc[2] + 1.86931125e-10 * tc[3] -
               7.70884400e-15 * tc[4] + 5.31387100e+03 * invT) *
              0.0232077792476038;
    // species 30: NXC3H7
    result += y[30] *
              (+7.97829100e+00 + 7.88056500e-03 * tc[1] -
               1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
               7.64995600e-15 * tc[4] + 7.57940200e+03 * invT) *
              0.0232077792476038;
    // species 31: C3H8
    result += y[31] *
              (+7.52521700e+00 + 9.44517000e-03 * tc[1] -
               2.09464133e-06 * tc[2] + 2.29484325e-10 * tc[3] -
               9.62482000e-15 * tc[4] - 1.64645500e+04 * invT) *
              0.0226772796335352;
  }

  // species with no change at a midpoint T
  // species 2: H
  result +=
    y[2] *
    (+2.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
     0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
    0.9920634920634921;

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 3: OH
    result += y[3] *
              (+3.43586219e+00 + 1.01117902e-04 * tc[1] -
               3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
               1.48730206e-14 * tc[4] + 3.74321252e+03 * invT) *
              0.0587993179279120;
  } else {
    // species 3: OH
    result += y[3] *
              (+2.62599754e+00 + 6.59962030e-04 * tc[1] -
               1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
               3.64096032e-16 * tc[4] + 4.12085374e+03 * invT) *
              0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 8: HO2
    result += y[8] *
              (+3.18310656e+00 + 1.83383975e-03 * tc[1] -
               3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
               3.02279824e-14 * tc[4] + 8.09181013e+02 * invT) *
              0.0302975216627280;
    // species 21: CH3O2H
    result += y[21] *
              (+3.23442817e+00 + 9.50648835e-03 * tc[1] -
               3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
               8.23660444e-14 * tc[4] - 1.77197926e+04 * invT) *
              0.0208155533814866;
  } else {
    // species 8: HO2
    result += y[8] *
              (+4.10547423e+00 + 1.19226417e-03 * tc[1] -
               2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
               1.43280022e-15 * tc[4] + 3.98127689e+02 * invT) *
              0.0302975216627280;
    // species 21: CH3O2H
    result += y[21] *
              (+8.43117091e+00 + 4.03408955e-03 * tc[1] -
               9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
               5.01384292e-15 * tc[4] - 1.96678771e+04 * invT) *
              0.0208155533814866;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 17: C2H6
    result += y[17] *
              (-2.52854344e-02 + 1.20382377e-02 * tc[1] -
               3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
               1.05973723e-14 * tc[4] - 1.12345534e+04 * invT) *
              0.0332557366145660;
    // species 33: NXC3H7O2
    result += y[33] *
              (+2.10731492e+00 + 1.98082493e-02 * tc[1] -
               8.31638663e-06 * tc[2] + 2.14862575e-09 * tc[3] -
               2.62480660e-13 * tc[4] - 7.93745567e+03 * invT) *
              0.0133178845872122;
  } else {
    // species 17: C2H6
    result += y[17] *
              (+6.10683385e+00 + 6.46181805e-03 * tc[1] -
               1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
               7.97803464e-15 * tc[4] - 1.37500014e+04 * invT) *
              0.0332557366145660;
    // species 33: NXC3H7O2
    result += y[33] *
              (+1.26327059e+01 + 8.49553630e-03 * tc[1] -
               1.96288958e-06 * tc[2] + 2.30548849e-10 * tc[3] -
               1.07646135e-14 * tc[4] - 1.19194652e+04 * invT) *
              0.0133178845872122;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 20: CH3O2
    result += y[20] *
              (+4.26146906e+00 + 5.04367995e-03 * tc[1] -
               1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
               8.36678206e-15 * tc[4] - 6.84394259e+02 * invT) *
              0.0212616673399528;
  } else {
    // species 20: CH3O2
    result += y[20] *
              (+5.95787891e+00 + 3.95364313e-03 * tc[1] -
               8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
               4.78014660e-15 * tc[4] - 1.53574838e+03 * invT) *
              0.0212616673399528;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 26: C3H5XA
    result += y[26] *
              (-5.29131958e-01 + 1.67279550e-02 * tc[1] -
               8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
               3.46516680e-13 * tc[4] + 1.93834226e+04 * invT) *
              0.0243468945535997;
  } else {
    // species 26: C3H5XA
    result += y[26] *
              (+8.45883958e+00 + 5.63477415e-03 * tc[1] -
               1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
               6.87836060e-15 * tc[4] + 1.63576092e+04 * invT) *
              0.0243468945535997;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 27: C3H6
    result += y[27] *
              (+3.94615444e-01 + 1.44553831e-02 * tc[1] -
               5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
               6.75780704e-14 * tc[4] + 1.06688164e+03 * invT) *
              0.0237636938285687;
    // species 32: IXC3H7O2
    result += y[32] *
              (+1.49941639e+00 + 2.21540602e-02 * tc[1] -
               1.07471485e-05 * tc[2] + 3.24217840e-09 * tc[3] -
               4.46741138e-13 * tc[4] - 1.02587980e+04 * invT) *
              0.0133178845872122;
  } else {
    // species 27: C3H6
    result += y[27] *
              (+8.01595958e+00 + 6.85118170e-03 * tc[1] -
               1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
               8.34740252e-15 * tc[4] - 1.87821271e+03 * invT) *
              0.0237636938285687;
    // species 32: IXC3H7O2
    result += y[32] *
              (+1.32493493e+01 + 8.20410950e-03 * tc[1] -
               1.89144021e-06 * tc[2] + 2.21834085e-10 * tc[3] -
               1.03472307e-14 * tc[4] - 1.44109855e+04 * invT) *
              0.0133178845872122;
  }

  // species with midpoint at T=1380 kelvin
  if (tT < 1380) {
    // species 28: C3H5O
    result += y[28] *
              (+1.19822582e+00 + 1.52789918e-02 * tc[1] -
               6.02100920e-06 * tc[2] + 1.21537508e-09 * tc[3] -
               8.39709124e-14 * tc[4] + 9.58217784e+03 * invT) *
              0.0175217269414073;
  } else {
    // species 28: C3H5O
    result += y[28] *
              (+1.02551752e+01 + 5.74918600e-03 * tc[1] -
               1.28215220e-06 * tc[2] + 1.47227587e-10 * tc[3] -
               6.77115846e-15 * tc[4] + 6.26560810e+03 * invT) *
              0.0175217269414073;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[34];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 34; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result += y[0] *
              (+2.29867700e+00 + 7.04120000e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88971000e-13 * tc[4] - 1.02090000e+03 * invT) *
              0.0356964374955379;
    // species 1: O
    result += y[1] *
              (+1.94642900e+00 - 8.19083000e-04 * tc[1] +
               8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
               7.78139200e-14 * tc[4] + 2.91476400e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+2.29812400e+00 + 4.12472100e-04 * tc[1] -
               2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
               8.26974400e-14 * tc[4] - 1.01252100e+03 * invT) *
              0.4960317460317460;
    // species 5: O2
    result += y[5] *
              (+2.21293600e+00 + 5.63743000e-04 * tc[1] -
               1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
               1.75371080e-13 * tc[4] - 1.00524900e+03 * invT) *
              0.0312519532470779;
    // species 6: H2O
    result += y[6] *
              (+2.38684200e+00 + 1.73749100e-03 * tc[1] -
               2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
               5.01317600e-13 * tc[4] - 3.02081100e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+2.38875400e+00 + 3.28461300e-03 * tc[1] -
               4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
               4.94303000e-13 * tc[4] - 1.76631500e+04 * invT) *
              0.0293996589639560;
    // species 9: CH2GSG
    result += y[9] *
              (+2.97126500e+00 - 8.49544500e-05 * tc[1] +
               3.41789667e-07 * tc[2] + 6.23137750e-10 * tc[3] -
               3.96253200e-13 * tc[4] + 4.98936800e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2O
    result += y[10] *
              (+6.52731000e-01 + 6.31572000e-03 * tc[1] -
               6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
               1.68264740e-12 * tc[4] - 1.48654000e+04 * invT) *
              0.0333044694598015;
    // species 11: CH3
    result += y[11] *
              (+1.43044300e+00 + 5.56205000e-03 * tc[1] -
               5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
               1.17299060e-12 * tc[4] + 1.64237800e+04 * invT) *
              0.0665114732291320;
    // species 12: CO
    result += y[12] *
              (+2.26245200e+00 + 7.55970500e-04 * tc[1] -
               1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
               4.94990200e-13 * tc[4] - 1.43105400e+04 * invT) *
              0.0357015351660121;
    // species 13: CH3O
    result += y[13] *
              (+1.10620400e+00 + 3.60829750e-03 * tc[1] +
               1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
               4.15122200e-13 * tc[4] + 9.78601100e+02 * invT) *
              0.0322227234645872;
    // species 14: C2H5
    result += y[14] *
              (+1.69070200e+00 + 4.35956650e-03 * tc[1] +
               1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
               7.85554600e-13 * tc[4] + 1.28704000e+04 * invT) *
              0.0344091941366733;
    // species 15: CH4
    result += y[15] *
              (-2.21258500e-01 + 8.73834000e-03 * tc[1] -
               9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
               2.44786200e-12 * tc[4] - 9.82522900e+03 * invT) *
              0.0623324814560868;
    // species 16: C2H4
    result += y[16] *
              (-1.86148800e+00 + 1.39808150e-02 * tc[1] -
               1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
               1.94757580e-12 * tc[4] + 5.57304600e+03 * invT) *
              0.0356455407428531;
    // species 18: CO2
    result += y[18] *
              (+1.27572500e+00 + 4.96103600e-03 * tc[1] -
               3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
               4.23456000e-13 * tc[4] - 4.83731400e+04 * invT) *
              0.0227226249176305;
    // species 19: HCO
    result += y[19] *
              (+1.89833000e+00 + 3.09957350e-03 * tc[1] -
               3.20769467e-06 * tc[2] + 2.72456250e-09 * tc[3] -
               9.14977000e-13 * tc[4] + 4.15992200e+03 * invT) *
              0.0344613688055690;
    // species 22: C2H2
    result += y[22] *
              (+1.01356200e+00 + 7.59522500e-03 * tc[1] -
               5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
               3.82549200e-13 * tc[4] + 2.61244400e+04 * invT) *
              0.0384054074813734;
    // species 23: HCCO
    result += y[23] *
              (+4.04796500e+00 + 2.22673900e-03 * tc[1] +
               7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
               4.50148400e-14 * tc[4] + 1.96589200e+04 * invT) *
              0.0243730044602598;
    // species 24: C2H3
    result += y[24] *
              (+1.45927600e+00 + 3.68573800e-03 * tc[1] +
               7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
               2.36956800e-13 * tc[4] + 3.33522500e+04 * invT) *
              0.0369740442209569;
    // species 25: CH2CHO
    result += y[25] *
              (+2.40906200e+00 + 5.36928500e-03 * tc[1] +
               6.30497333e-07 * tc[2] - 1.78964575e-09 * tc[3] +
               5.73477000e-13 * tc[4] + 1.52147700e+03 * invT) *
              0.0232315019165989;
    // species 29: IXC3H7
    result += y[29] *
              (+7.13300000e-01 + 1.27130800e-02 * tc[1] +
               5.26936000e-07 * tc[2] - 4.55321500e-09 * tc[3] +
               1.76554200e-12 * tc[4] + 7.53580900e+03 * invT) *
              0.0232077792476038;
    // species 30: NXC3H7
    result += y[30] *
              (+9.22537000e-01 + 1.23946350e-02 * tc[1] +
               6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
               1.71659920e-12 * tc[4] + 9.71328100e+03 * invT) *
              0.0232077792476038;
    // species 31: C3H8
    result += y[31] *
              (-1.03079200e-01 + 1.33449300e-02 * tc[1] +
               1.81047500e-06 * tc[2] - 5.31500250e-09 * tc[3] +
               1.84866600e-12 * tc[4] - 1.39549200e+04 * invT) *
              0.0226772796335352;
  } else {
    // species 0: N2
    result += y[0] *
              (+1.92664000e+00 + 7.43988500e-04 * tc[1] -
               1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 1: O
    result += y[1] *
              (+1.54206000e+00 - 1.37753100e-05 * tc[1] -
               1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
               8.73610400e-17 * tc[4] + 2.92308000e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+1.99142300e+00 + 3.50032200e-04 * tc[1] -
               1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
               3.16550400e-16 * tc[4] - 8.35034000e+02 * invT) *
              0.4960317460317460;
    // species 5: O2
    result += y[5] *
              (+2.69757800e+00 + 3.06759850e-04 * tc[1] -
               4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
               2.27287000e-16 * tc[4] - 1.23393000e+03 * invT) *
              0.0312519532470779;
    // species 6: H2O
    result += y[6] *
              (+1.67214600e+00 + 1.52814650e-03 * tc[1] -
               2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
               1.27832360e-15 * tc[4] - 2.98992100e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.57316700e+00 + 2.16806800e-03 * tc[1] -
               4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
               2.86330800e-15 * tc[4] - 1.80069600e+04 * invT) *
              0.0293996589639560;
    // species 9: CH2GSG
    result += y[9] *
              (+2.55288900e+00 + 1.03339400e-03 * tc[1] -
               6.38038667e-08 * tc[2] - 2.76168250e-11 * tc[3] +
               4.04270000e-15 * tc[4] + 4.98497500e+04 * invT) *
              0.0712910814857061;
    // species 10: CH2O
    result += y[10] *
              (+1.99560600e+00 + 3.34066050e-03 * tc[1] -
               8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
               6.42503400e-15 * tc[4] - 1.53203700e+04 * invT) *
              0.0333044694598015;
    // species 11: CH3
    result += y[11] *
              (+1.84405200e+00 + 3.06898700e-03 * tc[1] -
               7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
               4.90431800e-15 * tc[4] + 1.64378100e+04 * invT) *
              0.0665114732291320;
    // species 12: CO
    result += y[12] *
              (+2.02507800e+00 + 7.21344500e-04 * tc[1] -
               1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
               1.38219040e-15 * tc[4] - 1.42683500e+04 * invT) *
              0.0357015351660121;
    // species 13: CH3O
    result += y[13] *
              (+2.77080000e+00 + 3.93574850e-03 * tc[1] -
               8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
               4.22523200e-15 * tc[4] + 1.27832500e+02 * invT) *
              0.0322227234645872;
    // species 14: C2H5
    result += y[14] *
              (+6.19048000e+00 + 3.24203850e-03 * tc[1] -
               2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
               7.76175400e-15 * tc[4] + 1.06745500e+04 * invT) *
              0.0344091941366733;
    // species 15: CH4
    result += y[15] *
              (+6.83479000e-01 + 5.11862000e-03 * tc[1] -
               1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
               9.00684600e-15 * tc[4] - 1.00807900e+04 * invT) *
              0.0623324814560868;
    // species 16: C2H4
    result += y[16] *
              (+2.52841900e+00 + 5.74259000e-03 * tc[1] -
               1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
               1.05336960e-14 * tc[4] + 4.42828900e+03 * invT) *
              0.0356455407428531;
    // species 18: CO2
    result += y[18] *
              (+3.45362300e+00 + 1.57008450e-03 * tc[1] -
               4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
               3.33806600e-15 * tc[4] - 4.89669600e+04 * invT) *
              0.0227226249176305;
    // species 19: HCO
    result += y[19] *
              (+2.55727100e+00 + 1.67278650e-03 * tc[1] -
               4.45002000e-07 * tc[2] + 6.17643250e-11 * tc[3] -
               3.42770200e-15 * tc[4] + 3.91632400e+03 * invT) *
              0.0344613688055690;
    // species 22: C2H2
    result += y[22] *
              (+3.43677000e+00 + 2.68801950e-03 * tc[1] -
               6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
               4.31342000e-15 * tc[4] + 2.56676600e+04 * invT) *
              0.0384054074813734;
    // species 23: HCCO
    result += y[23] *
              (+5.75807300e+00 + 1.00020000e-03 * tc[1] -
               6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
               3.93033000e-15 * tc[4] + 1.90151300e+04 * invT) *
              0.0243730044602598;
    // species 24: C2H3
    result += y[24] *
              (+4.93346800e+00 + 2.00887300e-03 * tc[1] -
               1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
               4.75728800e-15 * tc[4] + 3.18543500e+04 * invT) *
              0.0369740442209569;
    // species 25: CH2CHO
    result += y[25] *
              (+4.97567000e+00 + 4.06529550e-03 * tc[1] -
               9.14541333e-07 * tc[2] + 1.01757600e-10 * tc[3] -
               4.35203400e-15 * tc[4] + 4.90321800e+02 * invT) *
              0.0232315019165989;
    // species 29: IXC3H7
    result += y[29] *
              (+7.06336900e+00 + 7.87244000e-03 * tc[1] -
               1.72746400e-06 * tc[2] + 1.86931125e-10 * tc[3] -
               7.70884400e-15 * tc[4] + 5.31387100e+03 * invT) *
              0.0232077792476038;
    // species 30: NXC3H7
    result += y[30] *
              (+6.97829100e+00 + 7.88056500e-03 * tc[1] -
               1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
               7.64995600e-15 * tc[4] + 7.57940200e+03 * invT) *
              0.0232077792476038;
    // species 31: C3H8
    result += y[31] *
              (+6.52521700e+00 + 9.44517000e-03 * tc[1] -
               2.09464133e-06 * tc[2] + 2.29484325e-10 * tc[3] -
               9.62482000e-15 * tc[4] - 1.64645500e+04 * invT) *
              0.0226772796335352;
  }

  // species with no change at a midpoint T
  // species 2: H
  result +=
    y[2] *
    (+1.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
     0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
    0.9920634920634921;

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 3: OH
    result += y[3] *
              (+2.43586219e+00 + 1.01117902e-04 * tc[1] -
               3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
               1.48730206e-14 * tc[4] + 3.74321252e+03 * invT) *
              0.0587993179279120;
  } else {
    // species 3: OH
    result += y[3] *
              (+1.62599754e+00 + 6.59962030e-04 * tc[1] -
               1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
               3.64096032e-16 * tc[4] + 4.12085374e+03 * invT) *
              0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 8: HO2
    result += y[8] *
              (+2.18310656e+00 + 1.83383975e-03 * tc[1] -
               3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
               3.02279824e-14 * tc[4] + 8.09181013e+02 * invT) *
              0.0302975216627280;
    // species 21: CH3O2H
    result += y[21] *
              (+2.23442817e+00 + 9.50648835e-03 * tc[1] -
               3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
               8.23660444e-14 * tc[4] - 1.77197926e+04 * invT) *
              0.0208155533814866;
  } else {
    // species 8: HO2
    result += y[8] *
              (+3.10547423e+00 + 1.19226417e-03 * tc[1] -
               2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
               1.43280022e-15 * tc[4] + 3.98127689e+02 * invT) *
              0.0302975216627280;
    // species 21: CH3O2H
    result += y[21] *
              (+7.43117091e+00 + 4.03408955e-03 * tc[1] -
               9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
               5.01384292e-15 * tc[4] - 1.96678771e+04 * invT) *
              0.0208155533814866;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 17: C2H6
    result += y[17] *
              (-1.02528543e+00 + 1.20382377e-02 * tc[1] -
               3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
               1.05973723e-14 * tc[4] - 1.12345534e+04 * invT) *
              0.0332557366145660;
    // species 33: NXC3H7O2
    result += y[33] *
              (+1.10731492e+00 + 1.98082493e-02 * tc[1] -
               8.31638663e-06 * tc[2] + 2.14862575e-09 * tc[3] -
               2.62480660e-13 * tc[4] - 7.93745567e+03 * invT) *
              0.0133178845872122;
  } else {
    // species 17: C2H6
    result += y[17] *
              (+5.10683385e+00 + 6.46181805e-03 * tc[1] -
               1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
               7.97803464e-15 * tc[4] - 1.37500014e+04 * invT) *
              0.0332557366145660;
    // species 33: NXC3H7O2
    result += y[33] *
              (+1.16327059e+01 + 8.49553630e-03 * tc[1] -
               1.96288958e-06 * tc[2] + 2.30548849e-10 * tc[3] -
               1.07646135e-14 * tc[4] - 1.19194652e+04 * invT) *
              0.0133178845872122;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 20: CH3O2
    result += y[20] *
              (+3.26146906e+00 + 5.04367995e-03 * tc[1] -
               1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
               8.36678206e-15 * tc[4] - 6.84394259e+02 * invT) *
              0.0212616673399528;
  } else {
    // species 20: CH3O2
    result += y[20] *
              (+4.95787891e+00 + 3.95364313e-03 * tc[1] -
               8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
               4.78014660e-15 * tc[4] - 1.53574838e+03 * invT) *
              0.0212616673399528;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 26: C3H5XA
    result += y[26] *
              (-1.52913196e+00 + 1.67279550e-02 * tc[1] -
               8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
               3.46516680e-13 * tc[4] + 1.93834226e+04 * invT) *
              0.0243468945535997;
  } else {
    // species 26: C3H5XA
    result += y[26] *
              (+7.45883958e+00 + 5.63477415e-03 * tc[1] -
               1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
               6.87836060e-15 * tc[4] + 1.63576092e+04 * invT) *
              0.0243468945535997;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 27: C3H6
    result += y[27] *
              (-6.05384556e-01 + 1.44553831e-02 * tc[1] -
               5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
               6.75780704e-14 * tc[4] + 1.06688164e+03 * invT) *
              0.0237636938285687;
    // species 32: IXC3H7O2
    result += y[32] *
              (+4.99416390e-01 + 2.21540602e-02 * tc[1] -
               1.07471485e-05 * tc[2] + 3.24217840e-09 * tc[3] -
               4.46741138e-13 * tc[4] - 1.02587980e+04 * invT) *
              0.0133178845872122;
  } else {
    // species 27: C3H6
    result += y[27] *
              (+7.01595958e+00 + 6.85118170e-03 * tc[1] -
               1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
               8.34740252e-15 * tc[4] - 1.87821271e+03 * invT) *
              0.0237636938285687;
    // species 32: IXC3H7O2
    result += y[32] *
              (+1.22493493e+01 + 8.20410950e-03 * tc[1] -
               1.89144021e-06 * tc[2] + 2.21834085e-10 * tc[3] -
               1.03472307e-14 * tc[4] - 1.44109855e+04 * invT) *
              0.0133178845872122;
  }

  // species with midpoint at T=1380 kelvin
  if (tT < 1380) {
    // species 28: C3H5O
    result += y[28] *
              (+1.98225820e-01 + 1.52789918e-02 * tc[1] -
               6.02100920e-06 * tc[2] + 1.21537508e-09 * tc[3] -
               8.39709124e-14 * tc[4] + 9.58217784e+03 * invT) *
              0.0175217269414073;
  } else {
    // species 28: C3H5O
    result += y[28] *
              (+9.25517520e+00 + 5.74918600e-03 * tc[1] -
               1.28215220e-06 * tc[2] + 1.47227587e-10 * tc[3] -
               6.77115846e-15 * tc[4] + 6.26560810e+03 * invT) *
              0.0175217269414073;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[34]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 34; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[34]; //  temporary storage
  amrex::Real x[34];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (28.014000 * YOW);
  x[1] = y[1] / (15.999000 * YOW);
  x[2] = y[2] / (1.008000 * YOW);
  x[3] = y[3] / (17.007000 * YOW);
  x[4] = y[4] / (2.016000 * YOW);
  x[5] = y[5] / (31.998000 * YOW);
  x[6] = y[6] / (18.015000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (33.006000 * YOW);
  x[9] = y[9] / (14.027000 * YOW);
  x[10] = y[10] / (30.026000 * YOW);
  x[11] = y[11] / (15.035000 * YOW);
  x[12] = y[12] / (28.010000 * YOW);
  x[13] = y[13] / (31.034000 * YOW);
  x[14] = y[14] / (29.062000 * YOW);
  x[15] = y[15] / (16.043000 * YOW);
  x[16] = y[16] / (28.054000 * YOW);
  x[17] = y[17] / (30.070000 * YOW);
  x[18] = y[18] / (44.009000 * YOW);
  x[19] = y[19] / (29.018000 * YOW);
  x[20] = y[20] / (47.033000 * YOW);
  x[21] = y[21] / (48.041000 * YOW);
  x[22] = y[22] / (26.038000 * YOW);
  x[23] = y[23] / (41.029000 * YOW);
  x[24] = y[24] / (27.046000 * YOW);
  x[25] = y[25] / (43.045000 * YOW);
  x[26] = y[26] / (41.073000 * YOW);
  x[27] = y[27] / (42.081000 * YOW);
  x[28] = y[28] / (57.072000 * YOW);
  x[29] = y[29] / (43.089000 * YOW);
  x[30] = y[30] / (43.089000 * YOW);
  x[31] = y[31] / (44.097000 * YOW);
  x[32] = y[32] / (75.087000 * YOW);
  x[33] = y[33] / (75.087000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 34; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 28.014000;                  // N2
  XW += x[1] * 15.999000;                  // O
  XW += x[2] * 1.008000;                   // H
  XW += x[3] * 17.007000;                  // OH
  XW += x[4] * 2.016000;                   // H2
  XW += x[5] * 31.998000;                  // O2
  XW += x[6] * 18.015000;                  // H2O
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 33.006000;                  // HO2
  XW += x[9] * 14.027000;                  // CH2GSG
  XW += x[10] * 30.026000;                 // CH2O
  XW += x[11] * 15.035000;                 // CH3
  XW += x[12] * 28.010000;                 // CO
  XW += x[13] * 31.034000;                 // CH3O
  XW += x[14] * 29.062000;                 // C2H5
  XW += x[15] * 16.043000;                 // CH4
  XW += x[16] * 28.054000;                 // C2H4
  XW += x[17] * 30.070000;                 // C2H6
  XW += x[18] * 44.009000;                 // CO2
  XW += x[19] * 29.018000;                 // HCO
  XW += x[20] * 47.033000;                 // CH3O2
  XW += x[21] * 48.041000;                 // CH3O2H
  XW += x[22] * 26.038000;                 // C2H2
  XW += x[23] * 41.029000;                 // HCCO
  XW += x[24] * 27.046000;                 // C2H3
  XW += x[25] * 43.045000;                 // CH2CHO
  XW += x[26] * 41.073000;                 // C3H5XA
  XW += x[27] * 42.081000;                 // C3H6
  XW += x[28] * 57.072000;                 // C3H5O
  XW += x[29] * 43.089000;                 // IXC3H7
  XW += x[30] * 43.089000;                 // NXC3H7
  XW += x[31] * 44.097000;                 // C3H8
  XW += x[32] * 75.087000;                 // IXC3H7O2
  XW += x[33] * 75.087000;                 // NXC3H7O2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;  // N2
  W += c[1] * 15.999000;  // O
  W += c[2] * 1.008000;   // H
  W += c[3] * 17.007000;  // OH
  W += c[4] * 2.016000;   // H2
  W += c[5] * 31.998000;  // O2
  W += c[6] * 18.015000;  // H2O
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 33.006000;  // HO2
  W += c[9] * 14.027000;  // CH2GSG
  W += c[10] * 30.026000; // CH2O
  W += c[11] * 15.035000; // CH3
  W += c[12] * 28.010000; // CO
  W += c[13] * 31.034000; // CH3O
  W += c[14] * 29.062000; // C2H5
  W += c[15] * 16.043000; // CH4
  W += c[16] * 28.054000; // C2H4
  W += c[17] * 30.070000; // C2H6
  W += c[18] * 44.009000; // CO2
  W += c[19] * 29.018000; // HCO
  W += c[20] * 47.033000; // CH3O2
  W += c[21] * 48.041000; // CH3O2H
  W += c[22] * 26.038000; // C2H2
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 27.046000; // C2H3
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 41.073000; // C3H5XA
  W += c[27] * 42.081000; // C3H6
  W += c[28] * 57.072000; // C3H5O
  W += c[29] * 43.089000; // IXC3H7
  W += c[30] * 43.089000; // NXC3H7
  W += c[31] * 44.097000; // C3H8
  W += c[32] * 75.087000; // IXC3H7O2
  W += c[33] * 75.087000; // NXC3H7O2

  for (int id = 0; id < 34; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 28.014000;                    // N2
  XW += x[1] * 15.999000;                    // O
  XW += x[2] * 1.008000;                     // H
  XW += x[3] * 17.007000;                    // OH
  XW += x[4] * 2.016000;                     // H2
  XW += x[5] * 31.998000;                    // O2
  XW += x[6] * 18.015000;                    // H2O
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 33.006000;                    // HO2
  XW += x[9] * 14.027000;                    // CH2GSG
  XW += x[10] * 30.026000;                   // CH2O
  XW += x[11] * 15.035000;                   // CH3
  XW += x[12] * 28.010000;                   // CO
  XW += x[13] * 31.034000;                   // CH3O
  XW += x[14] * 29.062000;                   // C2H5
  XW += x[15] * 16.043000;                   // CH4
  XW += x[16] * 28.054000;                   // C2H4
  XW += x[17] * 30.070000;                   // C2H6
  XW += x[18] * 44.009000;                   // CO2
  XW += x[19] * 29.018000;                   // HCO
  XW += x[20] * 47.033000;                   // CH3O2
  XW += x[21] * 48.041000;                   // CH3O2H
  XW += x[22] * 26.038000;                   // C2H2
  XW += x[23] * 41.029000;                   // HCCO
  XW += x[24] * 27.046000;                   // C2H3
  XW += x[25] * 43.045000;                   // CH2CHO
  XW += x[26] * 41.073000;                   // C3H5XA
  XW += x[27] * 42.081000;                   // C3H6
  XW += x[28] * 57.072000;                   // C3H5O
  XW += x[29] * 43.089000;                   // IXC3H7
  XW += x[30] * 43.089000;                   // NXC3H7
  XW += x[31] * 44.097000;                   // C3H8
  XW += x[32] * 75.087000;                   // IXC3H7O2
  XW += x[33] * 75.087000;                   // NXC3H7O2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;  // N2
  W += c[1] * 15.999000;  // O
  W += c[2] * 1.008000;   // H
  W += c[3] * 17.007000;  // OH
  W += c[4] * 2.016000;   // H2
  W += c[5] * 31.998000;  // O2
  W += c[6] * 18.015000;  // H2O
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 33.006000;  // HO2
  W += c[9] * 14.027000;  // CH2GSG
  W += c[10] * 30.026000; // CH2O
  W += c[11] * 15.035000; // CH3
  W += c[12] * 28.010000; // CO
  W += c[13] * 31.034000; // CH3O
  W += c[14] * 29.062000; // C2H5
  W += c[15] * 16.043000; // CH4
  W += c[16] * 28.054000; // C2H4
  W += c[17] * 30.070000; // C2H6
  W += c[18] * 44.009000; // CO2
  W += c[19] * 29.018000; // HCO
  W += c[20] * 47.033000; // CH3O2
  W += c[21] * 48.041000; // CH3O2H
  W += c[22] * 26.038000; // C2H2
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 27.046000; // C2H3
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 41.073000; // C3H5XA
  W += c[27] * 42.081000; // C3H6
  W += c[28] * 57.072000; // C3H5O
  W += c[29] * 43.089000; // IXC3H7
  W += c[30] * 43.089000; // NXC3H7
  W += c[31] * 44.097000; // C3H8
  W += c[32] * 75.087000; // IXC3H7O2
  W += c[33] * 75.087000; // NXC3H7O2

  for (int id = 0; id < 34; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 28.014000;  // N2
  XW += x[1] * 15.999000;  // O
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 17.007000;  // OH
  XW += x[4] * 2.016000;   // H2
  XW += x[5] * 31.998000;  // O2
  XW += x[6] * 18.015000;  // H2O
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 33.006000;  // HO2
  XW += x[9] * 14.027000;  // CH2GSG
  XW += x[10] * 30.026000; // CH2O
  XW += x[11] * 15.035000; // CH3
  XW += x[12] * 28.010000; // CO
  XW += x[13] * 31.034000; // CH3O
  XW += x[14] * 29.062000; // C2H5
  XW += x[15] * 16.043000; // CH4
  XW += x[16] * 28.054000; // C2H4
  XW += x[17] * 30.070000; // C2H6
  XW += x[18] * 44.009000; // CO2
  XW += x[19] * 29.018000; // HCO
  XW += x[20] * 47.033000; // CH3O2
  XW += x[21] * 48.041000; // CH3O2H
  XW += x[22] * 26.038000; // C2H2
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 27.046000; // C2H3
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 41.073000; // C3H5XA
  XW += x[27] * 42.081000; // C3H6
  XW += x[28] * 57.072000; // C3H5O
  XW += x[29] * 43.089000; // IXC3H7
  XW += x[30] * 43.089000; // NXC3H7
  XW += x[31] * 44.097000; // C3H8
  XW += x[32] * 75.087000; // IXC3H7O2
  XW += x[33] * 75.087000; // NXC3H7O2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;  // N2
  W += c[1] * 15.999000;  // O
  W += c[2] * 1.008000;   // H
  W += c[3] * 17.007000;  // OH
  W += c[4] * 2.016000;   // H2
  W += c[5] * 31.998000;  // O2
  W += c[6] * 18.015000;  // H2O
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 33.006000;  // HO2
  W += c[9] * 14.027000;  // CH2GSG
  W += c[10] * 30.026000; // CH2O
  W += c[11] * 15.035000; // CH3
  W += c[12] * 28.010000; // CO
  W += c[13] * 31.034000; // CH3O
  W += c[14] * 29.062000; // C2H5
  W += c[15] * 16.043000; // CH4
  W += c[16] * 28.054000; // C2H4
  W += c[17] * 30.070000; // C2H6
  W += c[18] * 44.009000; // CO2
  W += c[19] * 29.018000; // HCO
  W += c[20] * 47.033000; // CH3O2
  W += c[21] * 48.041000; // CH3O2H
  W += c[22] * 26.038000; // C2H2
  W += c[23] * 41.029000; // HCCO
  W += c[24] * 27.046000; // C2H3
  W += c[25] * 43.045000; // CH2CHO
  W += c[26] * 41.073000; // C3H5XA
  W += c[27] * 42.081000; // C3H6
  W += c[28] * 57.072000; // C3H5O
  W += c[29] * 43.089000; // IXC3H7
  W += c[30] * 43.089000; // NXC3H7
  W += c[31] * 44.097000; // C3H8
  W += c[32] * 75.087000; // IXC3H7O2
  W += c[33] * 75.087000; // NXC3H7O2

  for (int id = 0; id < 34; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 34; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 34; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 34; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 34; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 34; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;  // N2
  XW += x[1] * 15.999000;  // O
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 17.007000;  // OH
  XW += x[4] * 2.016000;   // H2
  XW += x[5] * 31.998000;  // O2
  XW += x[6] * 18.015000;  // H2O
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 33.006000;  // HO2
  XW += x[9] * 14.027000;  // CH2GSG
  XW += x[10] * 30.026000; // CH2O
  XW += x[11] * 15.035000; // CH3
  XW += x[12] * 28.010000; // CO
  XW += x[13] * 31.034000; // CH3O
  XW += x[14] * 29.062000; // C2H5
  XW += x[15] * 16.043000; // CH4
  XW += x[16] * 28.054000; // C2H4
  XW += x[17] * 30.070000; // C2H6
  XW += x[18] * 44.009000; // CO2
  XW += x[19] * 29.018000; // HCO
  XW += x[20] * 47.033000; // CH3O2
  XW += x[21] * 48.041000; // CH3O2H
  XW += x[22] * 26.038000; // C2H2
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 27.046000; // C2H3
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 41.073000; // C3H5XA
  XW += x[27] * 42.081000; // C3H6
  XW += x[28] * 57.072000; // C3H5O
  XW += x[29] * 43.089000; // IXC3H7
  XW += x[30] * 43.089000; // NXC3H7
  XW += x[31] * 44.097000; // C3H8
  XW += x[32] * 75.087000; // IXC3H7O2
  XW += x[33] * 75.087000; // NXC3H7O2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 28.014000 * XWinv;
  y[1] = x[1] * 15.999000 * XWinv;
  y[2] = x[2] * 1.008000 * XWinv;
  y[3] = x[3] * 17.007000 * XWinv;
  y[4] = x[4] * 2.016000 * XWinv;
  y[5] = x[5] * 31.998000 * XWinv;
  y[6] = x[6] * 18.015000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 33.006000 * XWinv;
  y[9] = x[9] * 14.027000 * XWinv;
  y[10] = x[10] * 30.026000 * XWinv;
  y[11] = x[11] * 15.035000 * XWinv;
  y[12] = x[12] * 28.010000 * XWinv;
  y[13] = x[13] * 31.034000 * XWinv;
  y[14] = x[14] * 29.062000 * XWinv;
  y[15] = x[15] * 16.043000 * XWinv;
  y[16] = x[16] * 28.054000 * XWinv;
  y[17] = x[17] * 30.070000 * XWinv;
  y[18] = x[18] * 44.009000 * XWinv;
  y[19] = x[19] * 29.018000 * XWinv;
  y[20] = x[20] * 47.033000 * XWinv;
  y[21] = x[21] * 48.041000 * XWinv;
  y[22] = x[22] * 26.038000 * XWinv;
  y[23] = x[23] * 41.029000 * XWinv;
  y[24] = x[24] * 27.046000 * XWinv;
  y[25] = x[25] * 43.045000 * XWinv;
  y[26] = x[26] * 41.073000 * XWinv;
  y[27] = x[27] * 42.081000 * XWinv;
  y[28] = x[28] * 57.072000 * XWinv;
  y[29] = x[29] * 43.089000 * XWinv;
  y[30] = x[30] * 43.089000 * XWinv;
  y[31] = x[31] * 44.097000 * XWinv;
  y[32] = x[32] * 75.087000 * XWinv;
  y[33] = x[33] * 75.087000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 34; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;  // N2
  XW += x[1] * 15.999000;  // O
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 17.007000;  // OH
  XW += x[4] * 2.016000;   // H2
  XW += x[5] * 31.998000;  // O2
  XW += x[6] * 18.015000;  // H2O
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 33.006000;  // HO2
  XW += x[9] * 14.027000;  // CH2GSG
  XW += x[10] * 30.026000; // CH2O
  XW += x[11] * 15.035000; // CH3
  XW += x[12] * 28.010000; // CO
  XW += x[13] * 31.034000; // CH3O
  XW += x[14] * 29.062000; // C2H5
  XW += x[15] * 16.043000; // CH4
  XW += x[16] * 28.054000; // C2H4
  XW += x[17] * 30.070000; // C2H6
  XW += x[18] * 44.009000; // CO2
  XW += x[19] * 29.018000; // HCO
  XW += x[20] * 47.033000; // CH3O2
  XW += x[21] * 48.041000; // CH3O2H
  XW += x[22] * 26.038000; // C2H2
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 27.046000; // C2H3
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 41.073000; // C3H5XA
  XW += x[27] * 42.081000; // C3H6
  XW += x[28] * 57.072000; // C3H5O
  XW += x[29] * 43.089000; // IXC3H7
  XW += x[30] * 43.089000; // NXC3H7
  XW += x[31] * 44.097000; // C3H8
  XW += x[32] * 75.087000; // IXC3H7O2
  XW += x[33] * 75.087000; // NXC3H7O2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 34; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 34; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 34; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 28.014000;  // N2
  CW += c[1] * 15.999000;  // O
  CW += c[2] * 1.008000;   // H
  CW += c[3] * 17.007000;  // OH
  CW += c[4] * 2.016000;   // H2
  CW += c[5] * 31.998000;  // O2
  CW += c[6] * 18.015000;  // H2O
  CW += c[7] * 34.014000;  // H2O2
  CW += c[8] * 33.006000;  // HO2
  CW += c[9] * 14.027000;  // CH2GSG
  CW += c[10] * 30.026000; // CH2O
  CW += c[11] * 15.035000; // CH3
  CW += c[12] * 28.010000; // CO
  CW += c[13] * 31.034000; // CH3O
  CW += c[14] * 29.062000; // C2H5
  CW += c[15] * 16.043000; // CH4
  CW += c[16] * 28.054000; // C2H4
  CW += c[17] * 30.070000; // C2H6
  CW += c[18] * 44.009000; // CO2
  CW += c[19] * 29.018000; // HCO
  CW += c[20] * 47.033000; // CH3O2
  CW += c[21] * 48.041000; // CH3O2H
  CW += c[22] * 26.038000; // C2H2
  CW += c[23] * 41.029000; // HCCO
  CW += c[24] * 27.046000; // C2H3
  CW += c[25] * 43.045000; // CH2CHO
  CW += c[26] * 41.073000; // C3H5XA
  CW += c[27] * 42.081000; // C3H6
  CW += c[28] * 57.072000; // C3H5O
  CW += c[29] * 43.089000; // IXC3H7
  CW += c[30] * 43.089000; // NXC3H7
  CW += c[31] * 44.097000; // C3H8
  CW += c[32] * 75.087000; // IXC3H7O2
  CW += c[33] * 75.087000; // NXC3H7O2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 28.014000 * CWinv;
  y[1] = c[1] * 15.999000 * CWinv;
  y[2] = c[2] * 1.008000 * CWinv;
  y[3] = c[3] * 17.007000 * CWinv;
  y[4] = c[4] * 2.016000 * CWinv;
  y[5] = c[5] * 31.998000 * CWinv;
  y[6] = c[6] * 18.015000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 33.006000 * CWinv;
  y[9] = c[9] * 14.027000 * CWinv;
  y[10] = c[10] * 30.026000 * CWinv;
  y[11] = c[11] * 15.035000 * CWinv;
  y[12] = c[12] * 28.010000 * CWinv;
  y[13] = c[13] * 31.034000 * CWinv;
  y[14] = c[14] * 29.062000 * CWinv;
  y[15] = c[15] * 16.043000 * CWinv;
  y[16] = c[16] * 28.054000 * CWinv;
  y[17] = c[17] * 30.070000 * CWinv;
  y[18] = c[18] * 44.009000 * CWinv;
  y[19] = c[19] * 29.018000 * CWinv;
  y[20] = c[20] * 47.033000 * CWinv;
  y[21] = c[21] * 48.041000 * CWinv;
  y[22] = c[22] * 26.038000 * CWinv;
  y[23] = c[23] * 41.029000 * CWinv;
  y[24] = c[24] * 27.046000 * CWinv;
  y[25] = c[25] * 43.045000 * CWinv;
  y[26] = c[26] * 41.073000 * CWinv;
  y[27] = c[27] * 42.081000 * CWinv;
  y[28] = c[28] * 57.072000 * CWinv;
  y[29] = c[29] * 43.089000 * CWinv;
  y[30] = c[30] * 43.089000 * CWinv;
  y[31] = c[31] * 44.097000 * CWinv;
  y[32] = c[32] * 75.087000 * CWinv;
  y[33] = c[33] * 75.087000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 2.967966951578939e+06;  // N2
  cvms[1] *= 5.196863940342046e+06;  // O
  cvms[2] *= 8.248474819596468e+07;  // H
  cvms[3] *= 4.888847308845322e+06;  // OH
  cvms[4] *= 4.124237409798234e+07;  // H2
  cvms[5] *= 2.598431970171023e+06;  // O2
  cvms[6] *= 4.615299815794193e+06;  // H2O
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 2.519076112874398e+06;  // HO2
  cvms[9] *= 5.927470320206203e+06;  // CH2GSG
  cvms[10] *= 2.769087663409458e+06; // CH2O
  cvms[11] *= 5.530071578419182e+06; // CH3
  cvms[12] *= 2.968390795484913e+06; // CO
  cvms[13] *= 2.679146297013998e+06; // CH3O
  cvms[14] *= 2.860939583701480e+06; // C2H5
  cvms[15] *= 5.182610869633635e+06; // CH4
  cvms[16] *= 2.963735160103101e+06; // C2H4
  cvms[17] *= 2.765035789209591e+06; // C2H6
  cvms[18] *= 1.889264154639560e+06; // CO2
  cvms[19] *= 2.865277627042952e+06; // HCO
  cvms[20] *= 1.767793382976472e+06; // CH3O2
  cvms[21] *= 1.730701404665440e+06; // CH3O2H
  cvms[22] *= 3.193203248388218e+06; // C2H2
  cvms[23] *= 2.026484344769124e+06; // HCCO
  cvms[24] *= 3.074193085170909e+06; // C2H3
  cvms[25] *= 1.931574542491170e+06; // CH2CHO
  cvms[26] *= 2.024313446340233e+06; // C3H5XA
  cvms[27] *= 1.975823440068734e+06; // C3H6
  cvms[28] *= 1.456837436598199e+06; // C3H5O
  cvms[29] *= 1.929602130045543e+06; // IXC3H7
  cvms[30] *= 1.929602130045543e+06; // NXC3H7
  cvms[31] *= 1.885493937944359e+06; // C3H8
  cvms[32] *= 1.107310535532547e+06; // IXC3H7O2
  cvms[33] *= 1.107310535532547e+06; // NXC3H7O2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 2.967966951578939e+06;  // N2
  cpms[1] *= 5.196863940342046e+06;  // O
  cpms[2] *= 8.248474819596468e+07;  // H
  cpms[3] *= 4.888847308845322e+06;  // OH
  cpms[4] *= 4.124237409798234e+07;  // H2
  cpms[5] *= 2.598431970171023e+06;  // O2
  cpms[6] *= 4.615299815794193e+06;  // H2O
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 2.519076112874398e+06;  // HO2
  cpms[9] *= 5.927470320206203e+06;  // CH2GSG
  cpms[10] *= 2.769087663409458e+06; // CH2O
  cpms[11] *= 5.530071578419182e+06; // CH3
  cpms[12] *= 2.968390795484913e+06; // CO
  cpms[13] *= 2.679146297013998e+06; // CH3O
  cpms[14] *= 2.860939583701480e+06; // C2H5
  cpms[15] *= 5.182610869633635e+06; // CH4
  cpms[16] *= 2.963735160103101e+06; // C2H4
  cpms[17] *= 2.765035789209591e+06; // C2H6
  cpms[18] *= 1.889264154639560e+06; // CO2
  cpms[19] *= 2.865277627042952e+06; // HCO
  cpms[20] *= 1.767793382976472e+06; // CH3O2
  cpms[21] *= 1.730701404665440e+06; // CH3O2H
  cpms[22] *= 3.193203248388218e+06; // C2H2
  cpms[23] *= 2.026484344769124e+06; // HCCO
  cpms[24] *= 3.074193085170909e+06; // C2H3
  cpms[25] *= 1.931574542491170e+06; // CH2CHO
  cpms[26] *= 2.024313446340233e+06; // C3H5XA
  cpms[27] *= 1.975823440068734e+06; // C3H6
  cpms[28] *= 1.456837436598199e+06; // C3H5O
  cpms[29] *= 1.929602130045543e+06; // IXC3H7
  cpms[30] *= 1.929602130045543e+06; // NXC3H7
  cpms[31] *= 1.885493937944359e+06; // C3H8
  cpms[32] *= 1.107310535532547e+06; // IXC3H7O2
  cpms[33] *= 1.107310535532547e+06; // NXC3H7O2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 34; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 34; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 2.967966951578939e+06;  // N2
  sms[1] *= 5.196863940342046e+06;  // O
  sms[2] *= 8.248474819596468e+07;  // H
  sms[3] *= 4.888847308845322e+06;  // OH
  sms[4] *= 4.124237409798234e+07;  // H2
  sms[5] *= 2.598431970171023e+06;  // O2
  sms[6] *= 4.615299815794193e+06;  // H2O
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 2.519076112874398e+06;  // HO2
  sms[9] *= 5.927470320206203e+06;  // CH2GSG
  sms[10] *= 2.769087663409458e+06; // CH2O
  sms[11] *= 5.530071578419182e+06; // CH3
  sms[12] *= 2.968390795484913e+06; // CO
  sms[13] *= 2.679146297013998e+06; // CH3O
  sms[14] *= 2.860939583701480e+06; // C2H5
  sms[15] *= 5.182610869633635e+06; // CH4
  sms[16] *= 2.963735160103101e+06; // C2H4
  sms[17] *= 2.765035789209591e+06; // C2H6
  sms[18] *= 1.889264154639560e+06; // CO2
  sms[19] *= 2.865277627042952e+06; // HCO
  sms[20] *= 1.767793382976472e+06; // CH3O2
  sms[21] *= 1.730701404665440e+06; // CH3O2H
  sms[22] *= 3.193203248388218e+06; // C2H2
  sms[23] *= 2.026484344769124e+06; // HCCO
  sms[24] *= 3.074193085170909e+06; // C2H3
  sms[25] *= 1.931574542491170e+06; // CH2CHO
  sms[26] *= 2.024313446340233e+06; // C3H5XA
  sms[27] *= 1.975823440068734e+06; // C3H6
  sms[28] *= 1.456837436598199e+06; // C3H5O
  sms[29] *= 1.929602130045543e+06; // IXC3H7
  sms[30] *= 1.929602130045543e+06; // NXC3H7
  sms[31] *= 1.885493937944359e+06; // C3H8
  sms[32] *= 1.107310535532547e+06; // IXC3H7O2
  sms[33] *= 1.107310535532547e+06; // NXC3H7O2
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* /*sc_qss*/,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 6: 2 OH (+M) <=> H2O2 (+M)
  qf[0] = (sc[3] * sc[3]);
  qr[0] = sc[7];

  // reaction 12: H + O2 (+M) <=> HO2 (+M)
  qf[1] = sc[2] * sc[5];
  qr[1] = sc[8];

  // reaction 45: CH3 + H (+M) => CH4 (+M)
  qf[2] = sc[2] * sc[11];
  qr[2] = 0.0;

  // reaction 46: 2 CH3 (+M) <=> C2H6 (+M)
  qf[3] = (sc[11] * sc[11]);
  qr[3] = sc[17];

  // reaction 60: CO + O (+M) => CO2 (+M)
  qf[4] = sc[1] * sc[12];
  qr[4] = 0.0;

  // reaction 75: CH3O (+M) => CH2O + H (+M)
  qf[5] = sc[13];
  qr[5] = 0.0;

  // reaction 92: C2H3 (+M) => C2H2 + H (+M)
  qf[6] = sc[24];
  qr[6] = 0.0;

  // reaction 94: C2H4 + H (+M) <=> C2H5 (+M)
  qf[7] = sc[2] * sc[16];
  qr[7] = sc[14];

  // reaction 103: C2H4 (+M) => C2H2 + H2 (+M)
  qf[8] = sc[16];
  qr[8] = 0.0;

  // reaction 0: H + O + M => OH + M
  qf[9] = sc[1] * sc[2];
  qr[9] = 0.0;

  // reaction 3: 2 O + M => O2 + M
  qf[10] = (sc[1] * sc[1]);
  qr[10] = 0.0;

  // reaction 7: H + OH + M => H2O + M
  qf[11] = sc[2] * sc[3];
  qr[11] = 0.0;

  // reaction 66: HCO + M => CO + H + M
  qf[12] = sc[19];
  qr[12] = 0.0;

  // reaction 67: CO + H + M => HCO + M
  qf[13] = sc[2] * sc[12];
  qr[13] = 0.0;

  // reaction 82: CH3O2 + M => CH3 + O2 + M
  qf[14] = sc[20];
  qr[14] = 0.0;

  // reaction 83: CH3 + O2 + M => CH3O2 + M
  qf[15] = sc[5] * sc[11];
  qr[15] = 0.0;

  // reaction 1: H2 + O => H + OH
  qf[16] = sc[1] * sc[4];
  qr[16] = 0.0;

  // reaction 2: H + OH => H2 + O
  qf[17] = sc[2] * sc[3];
  qr[17] = 0.0;

  // reaction 4: H2 + OH => H + H2O
  qf[18] = sc[3] * sc[4];
  qr[18] = 0.0;

  // reaction 5: H + H2O => H2 + OH
  qf[19] = sc[2] * sc[6];
  qr[19] = 0.0;

  // reaction 8: H2O + O => 2 OH
  qf[20] = sc[1] * sc[6];
  qr[20] = 0.0;

  // reaction 9: 2 OH => H2O + O
  qf[21] = (sc[3] * sc[3]);
  qr[21] = 0.0;

  // reaction 10: H + O2 => O + OH
  qf[22] = sc[2] * sc[5];
  qr[22] = 0.0;

  // reaction 11: O + OH => H + O2
  qf[23] = sc[1] * sc[3];
  qr[23] = 0.0;

  // reaction 13: H + HO2 => 2 OH
  qf[24] = sc[2] * sc[8];
  qr[24] = 0.0;

  // reaction 14: 2 HO2 => H2O2 + O2
  qf[25] = (sc[8] * sc[8]);
  qr[25] = 0.0;

  // reaction 15: H + HO2 => H2 + O2
  qf[26] = sc[2] * sc[8];
  qr[26] = 0.0;

  // reaction 16: HO2 + OH => H2O + O2
  qf[27] = sc[3] * sc[8];
  qr[27] = 0.0;

  // reaction 17: H2O + O2 => HO2 + OH
  qf[28] = sc[5] * sc[6];
  qr[28] = 0.0;

  // reaction 18: 2 HO2 => H2O2 + O2
  qf[29] = (sc[8] * sc[8]);
  qr[29] = 0.0;

  // reaction 19: HO2 + O => O2 + OH
  qf[30] = sc[1] * sc[8];
  qr[30] = 0.0;

  // reaction 20: O2 + OH => HO2 + O
  qf[31] = sc[3] * sc[5];
  qr[31] = 0.0;

  // reaction 21: H2O2 + OH => H2O + HO2
  qf[32] = sc[3] * sc[7];
  qr[32] = 0.0;

  // reaction 22: H + H2O2 => H2O + OH
  qf[33] = sc[2] * sc[7];
  qr[33] = 0.0;

  // reaction 23: H2O2 + OH => H2O + HO2
  qf[34] = sc[3] * sc[7];
  qr[34] = 0.0;

  // reaction 24: H2O + HO2 => H2O2 + OH
  qf[35] = sc[6] * sc[8];
  qr[35] = 0.0;

  // reaction 25: H2O2 + O => HO2 + OH
  qf[36] = sc[1] * sc[7];
  qr[36] = 0.0;

  // reaction 26: H + H2O2 => H2 + HO2
  qf[37] = sc[2] * sc[7];
  qr[37] = 0.0;

  // reaction 27: H2 + HO2 => H + H2O2
  qf[38] = sc[4] * sc[8];
  qr[38] = 0.0;

  // reaction 28: CH2GSG + OH => CH2O + H
  qf[39] = sc[3] * sc[9];
  qr[39] = 0.0;

  // reaction 29: CH2GSG + H2 => CH3 + H
  qf[40] = sc[4] * sc[9];
  qr[40] = 0.0;

  // reaction 30: CH3 + H => CH2GSG + H2
  qf[41] = sc[2] * sc[11];
  qr[41] = 0.0;

  // reaction 31: CH2GSG + O2 => CO + H + OH
  qf[42] = sc[5] * sc[9];
  qr[42] = 0.0;

  // reaction 32: CH2GSG + O => CO + 2 H
  qf[43] = sc[1] * sc[9];
  qr[43] = 0.0;

  // reaction 33: CH3 + HO2 => CH3O + OH
  qf[44] = sc[8] * sc[11];
  qr[44] = 0.0;

  // reaction 34: CH3 + O2 => CH2O + OH
  qf[45] = sc[5] * sc[11];
  qr[45] = 0.0;

  // reaction 35: CH3 + O2 => CH3O + O
  qf[46] = sc[5] * sc[11];
  qr[46] = 0.0;

  // reaction 36: CH3O + O => CH3 + O2
  qf[47] = sc[1] * sc[13];
  qr[47] = 0.0;

  // reaction 37: 2 CH3 <=> C2H5 + H
  qf[48] = (sc[11] * sc[11]);
  qr[48] = sc[2] * sc[14];

  // reaction 38: CH3 + HO2 => CH4 + O2
  qf[49] = sc[8] * sc[11];
  qr[49] = 0.0;

  // reaction 39: CH3 + O => CH2O + H
  qf[50] = sc[1] * sc[11];
  qr[50] = 0.0;

  // reaction 40: CH3 + OH => CH2O + H2
  qf[51] = sc[3] * sc[11];
  qr[51] = 0.0;

  // reaction 41: CH3 + OH => CH2GSG + H2O
  qf[52] = sc[3] * sc[11];
  qr[52] = 0.0;

  // reaction 42: CH2GSG + H2O => CH3 + OH
  qf[53] = sc[6] * sc[9];
  qr[53] = 0.0;

  // reaction 43: CH3 + H2O2 => CH4 + HO2
  qf[54] = sc[7] * sc[11];
  qr[54] = 0.0;

  // reaction 44: CH2GSG + CH3 => C2H4 + H
  qf[55] = sc[9] * sc[11];
  qr[55] = 0.0;

  // reaction 47: CH2GSG + CH4 => 2 CH3
  qf[56] = sc[9] * sc[15];
  qr[56] = 0.0;

  // reaction 48: 2 CH3 => CH2GSG + CH4
  qf[57] = (sc[11] * sc[11]);
  qr[57] = 0.0;

  // reaction 49: CH4 + O => CH3 + OH
  qf[58] = sc[1] * sc[15];
  qr[58] = 0.0;

  // reaction 50: CH3 + OH => CH4 + O
  qf[59] = sc[3] * sc[11];
  qr[59] = 0.0;

  // reaction 51: CH4 + H => CH3 + H2
  qf[60] = sc[2] * sc[15];
  qr[60] = 0.0;

  // reaction 52: CH3 + H2 => CH4 + H
  qf[61] = sc[4] * sc[11];
  qr[61] = 0.0;

  // reaction 53: CH4 + OH => CH3 + H2O
  qf[62] = sc[3] * sc[15];
  qr[62] = 0.0;

  // reaction 54: CH3 + H2O => CH4 + OH
  qf[63] = sc[6] * sc[11];
  qr[63] = 0.0;

  // reaction 55: CO + HO2 => CO2 + OH
  qf[64] = sc[8] * sc[12];
  qr[64] = 0.0;

  // reaction 56: CO + O2 => CO2 + O
  qf[65] = sc[5] * sc[12];
  qr[65] = 0.0;

  // reaction 57: CO2 + O => CO + O2
  qf[66] = sc[1] * sc[18];
  qr[66] = 0.0;

  // reaction 58: CO + OH => CO2 + H
  qf[67] = sc[3] * sc[12];
  qr[67] = 0.0;

  // reaction 59: CO2 + H => CO + OH
  qf[68] = sc[2] * sc[18];
  qr[68] = 0.0;

  // reaction 61: CH3 + HCO => CH4 + CO
  qf[69] = sc[11] * sc[19];
  qr[69] = 0.0;

  // reaction 62: H + HCO => CO + H2
  qf[70] = sc[2] * sc[19];
  qr[70] = 0.0;

  // reaction 63: HCO + O2 => CO + HO2
  qf[71] = sc[5] * sc[19];
  qr[71] = 0.0;

  // reaction 64: HCO + O => CO + OH
  qf[72] = sc[1] * sc[19];
  qr[72] = 0.0;

  // reaction 65: HCO + O => CO2 + H
  qf[73] = sc[1] * sc[19];
  qr[73] = 0.0;

  // reaction 68: HCO + OH => CO + H2O
  qf[74] = sc[3] * sc[19];
  qr[74] = 0.0;

  // reaction 69: CH2O + H => H2 + HCO
  qf[75] = sc[2] * sc[10];
  qr[75] = 0.0;

  // reaction 70: CH2O + O2 => HCO + HO2
  qf[76] = sc[5] * sc[10];
  qr[76] = 0.0;

  // reaction 71: CH2O + OH => H2O + HCO
  qf[77] = sc[3] * sc[10];
  qr[77] = 0.0;

  // reaction 72: CH2O + HO2 => H2O2 + HCO
  qf[78] = sc[8] * sc[10];
  qr[78] = 0.0;

  // reaction 73: CH2O + O => HCO + OH
  qf[79] = sc[1] * sc[10];
  qr[79] = 0.0;

  // reaction 74: CH2O + CH3 => CH4 + HCO
  qf[80] = sc[10] * sc[11];
  qr[80] = 0.0;

  // reaction 76: CH3O + O2 => CH2O + HO2
  qf[81] = sc[5] * sc[13];
  qr[81] = 0.0;

  // reaction 77: CH2GSG + CO2 => CH2O + CO
  qf[82] = sc[9] * sc[18];
  qr[82] = 0.0;

  // reaction 78: CH3 + CH3O2 => 2 CH3O
  qf[83] = sc[11] * sc[20];
  qr[83] = 0.0;

  // reaction 79: CH3O2 + HO2 => CH3O2H + O2
  qf[84] = sc[8] * sc[20];
  qr[84] = 0.0;

  // reaction 80: 2 CH3O2 => 2 CH3O + O2
  qf[85] = (sc[20] * sc[20]);
  qr[85] = 0.0;

  // reaction 81: CH2O + CH3O2 => CH3O2H + HCO
  qf[86] = sc[10] * sc[20];
  qr[86] = 0.0;

  // reaction 84: CH3O2H => CH3O + OH
  qf[87] = sc[21];
  qr[87] = 0.0;

  // reaction 85: CH3O + OH => CH3O2H
  qf[88] = sc[3] * sc[13];
  qr[88] = 0.0;

  // reaction 86: C2H2 + O2 => HCCO + OH
  qf[89] = sc[5] * sc[22];
  qr[89] = 0.0;

  // reaction 87: C2H2 + O => H + HCCO
  qf[90] = sc[1] * sc[22];
  qr[90] = 0.0;

  // reaction 88: C2H3 + O2 => CH2CHO + O
  qf[91] = sc[5] * sc[24];
  qr[91] = 0.0;

  // reaction 89: C2H3 + H => C2H2 + H2
  qf[92] = sc[2] * sc[24];
  qr[92] = 0.0;

  // reaction 90: C2H3 + O2 => CH2O + HCO
  qf[93] = sc[5] * sc[24];
  qr[93] = 0.0;

  // reaction 91: C2H3 + O2 => C2H2 + HO2
  qf[94] = sc[5] * sc[24];
  qr[94] = 0.0;

  // reaction 93: C2H4 + O => CH3 + HCO
  qf[95] = sc[1] * sc[16];
  qr[95] = 0.0;

  // reaction 95: C2H4 + OH => C2H3 + H2O
  qf[96] = sc[3] * sc[16];
  qr[96] = 0.0;

  // reaction 96: C2H3 + H2O => C2H4 + OH
  qf[97] = sc[6] * sc[24];
  qr[97] = 0.0;

  // reaction 97: C2H4 + H => C2H3 + H2
  qf[98] = sc[2] * sc[16];
  qr[98] = 0.0;

  // reaction 98: C2H3 + H2 => C2H4 + H
  qf[99] = sc[4] * sc[24];
  qr[99] = 0.0;

  // reaction 99: C2H4 + CH3O2 => C2H3 + CH3O2H
  qf[100] = sc[16] * sc[20];
  qr[100] = 0.0;

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  qf[101] = sc[11] * sc[16];
  qr[101] = 0.0;

  // reaction 101: C2H3 + CH4 => C2H4 + CH3
  qf[102] = sc[15] * sc[24];
  qr[102] = 0.0;

  // reaction 102: C2H4 + O => CH2CHO + H
  qf[103] = sc[1] * sc[16];
  qr[103] = 0.0;

  // reaction 104: C2H5 + CH3 => C2H4 + CH4
  qf[104] = sc[11] * sc[14];
  qr[104] = 0.0;

  // reaction 105: C2H5 + O2 => C2H4 + HO2
  qf[105] = sc[5] * sc[14];
  qr[105] = 0.0;

  // reaction 106: C2H4 + HO2 => C2H5 + O2
  qf[106] = sc[8] * sc[16];
  qr[106] = 0.0;

  // reaction 107: C2H5 + HO2 => C2H6 + O2
  qf[107] = sc[8] * sc[14];
  qr[107] = 0.0;

  // reaction 108: C2H5 + H => C2H6
  qf[108] = sc[2] * sc[14];
  qr[108] = 0.0;

  // reaction 109: C2H6 + H => C2H5 + H2
  qf[109] = sc[2] * sc[17];
  qr[109] = 0.0;

  // reaction 110: C2H5 + H2 => C2H6 + H
  qf[110] = sc[4] * sc[14];
  qr[110] = 0.0;

  // reaction 111: C2H6 + OH => C2H5 + H2O
  qf[111] = sc[3] * sc[17];
  qr[111] = 0.0;

  // reaction 112: C2H6 + CH2GSG => C2H5 + CH3
  qf[112] = sc[9] * sc[17];
  qr[112] = 0.0;

  // reaction 113: C2H6 + O => C2H5 + OH
  qf[113] = sc[1] * sc[17];
  qr[113] = 0.0;

  // reaction 114: C2H6 + CH3 => C2H5 + CH4
  qf[114] = sc[11] * sc[17];
  qr[114] = 0.0;

  // reaction 115: HCCO + O => 2 CO + H
  qf[115] = sc[1] * sc[23];
  qr[115] = 0.0;

  // reaction 116: HCCO + O2 => CO2 + HCO
  qf[116] = sc[5] * sc[23];
  qr[116] = 0.0;

  // reaction 117: HCCO + OH => 2 HCO
  qf[117] = sc[3] * sc[23];
  qr[117] = 0.0;

  // reaction 118: H + HCCO => CH2GSG + CO
  qf[118] = sc[2] * sc[23];
  qr[118] = 0.0;

  // reaction 119: CH2GSG + CO => H + HCCO
  qf[119] = sc[9] * sc[12];
  qr[119] = 0.0;

  // reaction 120: CH2CHO + O2 => CH2O + CO + OH
  qf[120] = sc[5] * sc[25];
  qr[120] = 0.0;

  // reaction 121: C3H5XA + CH2O => C3H6 + HCO
  qf[121] = sc[10] * sc[26];
  qr[121] = 0.0;

  // reaction 122: C3H6 + HCO => C3H5XA + CH2O
  qf[122] = sc[19] * sc[27];
  qr[122] = 0.0;

  // reaction 123: C3H5XA + HO2 => C3H5O + OH
  qf[123] = sc[8] * sc[26];
  qr[123] = 0.0;

  // reaction 124: C3H5XA + CH3O2 => C3H5O + CH3O
  qf[124] = sc[20] * sc[26];
  qr[124] = 0.0;

  // reaction 125: C3H5XA + HO2 => C3H6 + O2
  qf[125] = sc[8] * sc[26];
  qr[125] = 0.0;

  // reaction 126: C3H5XA + O2 => CH2CHO + CH2O
  qf[126] = sc[5] * sc[26];
  qr[126] = 0.0;

  // reaction 127: C3H5XA + O2 => C2H2 + CH2O + OH
  qf[127] = sc[5] * sc[26];
  qr[127] = 0.0;

  // reaction 128: C3H5XA + H => C3H6
  qf[128] = sc[2] * sc[26];
  qr[128] = 0.0;

  // reaction 129: C3H5XA => C2H2 + CH3
  qf[129] = sc[26];
  qr[129] = 0.0;

  // reaction 130: C3H6 => C2H3 + CH3
  qf[130] = sc[27];
  qr[130] = 0.0;

  // reaction 131: C2H3 + CH3 => C3H6
  qf[131] = sc[11] * sc[24];
  qr[131] = 0.0;

  // reaction 132: C3H6 + O => C2H5 + HCO
  qf[132] = sc[1] * sc[27];
  qr[132] = 0.0;

  // reaction 133: C3H6 + H => C2H4 + CH3
  qf[133] = sc[2] * sc[27];
  qr[133] = 0.0;

  // reaction 134: C2H4 + CH3 => C3H6 + H
  qf[134] = sc[11] * sc[16];
  qr[134] = 0.0;

  // reaction 135: C3H6 + H => C3H5XA + H2
  qf[135] = sc[2] * sc[27];
  qr[135] = 0.0;

  // reaction 136: C3H5XA + H2 => C3H6 + H
  qf[136] = sc[4] * sc[26];
  qr[136] = 0.0;

  // reaction 137: C3H6 + OH => C3H5XA + H2O
  qf[137] = sc[3] * sc[27];
  qr[137] = 0.0;

  // reaction 138: C3H6 + O => C3H5XA + OH
  qf[138] = sc[1] * sc[27];
  qr[138] = 0.0;

  // reaction 139: C3H6 + CH3 => C3H5XA + CH4
  qf[139] = sc[11] * sc[27];
  qr[139] = 0.0;

  // reaction 140: IXC3H7 + O2 => C3H6 + HO2
  qf[140] = sc[5] * sc[29];
  qr[140] = 0.0;

  // reaction 141: IXC3H7 => C3H6 + H
  qf[141] = sc[29];
  qr[141] = 0.0;

  // reaction 142: C3H6 + H => IXC3H7
  qf[142] = sc[2] * sc[27];
  qr[142] = 0.0;

  // reaction 143: NXC3H7 => C2H4 + CH3
  qf[143] = sc[30];
  qr[143] = 0.0;

  // reaction 144: C2H4 + CH3 => NXC3H7
  qf[144] = sc[11] * sc[16];
  qr[144] = 0.0;

  // reaction 145: HO2 + NXC3H7 => C3H8 + O2
  qf[145] = sc[8] * sc[30];
  qr[145] = 0.0;

  // reaction 146: NXC3H7 + O2 => C3H6 + HO2
  qf[146] = sc[5] * sc[30];
  qr[146] = 0.0;

  // reaction 147: NXC3H7 => C3H6 + H
  qf[147] = sc[30];
  qr[147] = 0.0;

  // reaction 148: C3H6 + H => NXC3H7
  qf[148] = sc[2] * sc[27];
  qr[148] = 0.0;

  // reaction 149: C3H8 + OH => H2O + NXC3H7
  qf[149] = sc[3] * sc[31];
  qr[149] = 0.0;

  // reaction 150: C3H8 + HO2 => H2O2 + NXC3H7
  qf[150] = sc[8] * sc[31];
  qr[150] = 0.0;

  // reaction 151: C3H8 + H <=> H2 + NXC3H7
  qf[151] = sc[2] * sc[31];
  qr[151] = sc[4] * sc[30];

  // reaction 152: C3H8 + OH => H2O + IXC3H7
  qf[152] = sc[3] * sc[31];
  qr[152] = 0.0;

  // reaction 153: C3H8 + CH3 => CH4 + IXC3H7
  qf[153] = sc[11] * sc[31];
  qr[153] = 0.0;

  // reaction 154: C3H8 + CH3 => CH4 + NXC3H7
  qf[154] = sc[11] * sc[31];
  qr[154] = 0.0;

  // reaction 155: C3H8 + O => IXC3H7 + OH
  qf[155] = sc[1] * sc[31];
  qr[155] = 0.0;

  // reaction 156: C3H8 + HO2 => H2O2 + IXC3H7
  qf[156] = sc[8] * sc[31];
  qr[156] = 0.0;

  // reaction 157: C3H8 + O => NXC3H7 + OH
  qf[157] = sc[1] * sc[31];
  qr[157] = 0.0;

  // reaction 158: C3H8 + O2 => HO2 + IXC3H7
  qf[158] = sc[5] * sc[31];
  qr[158] = 0.0;

  // reaction 159: HO2 + IXC3H7 => C3H8 + O2
  qf[159] = sc[8] * sc[29];
  qr[159] = 0.0;

  // reaction 160: C3H8 + H => H2 + IXC3H7
  qf[160] = sc[2] * sc[31];
  qr[160] = 0.0;

  // reaction 161: H2 + IXC3H7 => C3H8 + H
  qf[161] = sc[4] * sc[29];
  qr[161] = 0.0;

  // reaction 162: C3H5O => C2H3 + CH2O
  qf[162] = sc[28];
  qr[162] = 0.0;

  // reaction 163: IXC3H7O2 => IXC3H7 + O2
  qf[163] = sc[32];
  qr[163] = 0.0;

  // reaction 164: IXC3H7 + O2 => IXC3H7O2
  qf[164] = sc[5] * sc[29];
  qr[164] = 0.0;

  // reaction 165: NXC3H7O2 => NXC3H7 + O2
  qf[165] = sc[33];
  qr[165] = 0.0;

  // reaction 166: NXC3H7 + O2 => NXC3H7O2
  qf[166] = sc[5] * sc[30];
  qr[166] = 0.0;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 34; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[34];
  gibbs(g_RT, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  H + O + M => OH + M
  k_f = 4720000 * exp((-1) * tc[0]);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC);
  // reaction 1:  H2 + O => H + OH
  k_f = 0.0508 * exp((2.67) * tc[0] - (3166.2744864099) * invT);
  qf[16] *= k_f;
  qr[16] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[4]));
  // reaction 2:  H + OH => H2 + O
  k_f = 0.02231 * exp((2.67) * tc[0] - (2111.97015338246) * invT);
  qf[17] *= k_f;
  qr[17] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 3:  2 O + M => O2 + M
  k_f = 6170 * exp((-0.5) * tc[0]);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 4:  H2 + OH => H + H2O
  k_f = 216 * exp((1.51) * tc[0] - (1726.01806721021) * invT);
  qf[18] *= k_f;
  qr[18] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[4] - g_RT[6]));
  // reaction 5:  H + H2O => H2 + OH
  k_f = 935.2 * exp((1.51) * tc[0] - (9349.8008758183) * invT);
  qf[19] *= k_f;
  qr[19] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 6:  2 OH (+M) <=> H2O2 (+M)
  k_f = 123600000 * exp((-0.37) * tc[0]);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  redP =
    Corr / k_f * 3.041e+18 * exp(-4.63 * tc[0] - (1031.09094823387) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.53) * exp(-tc[1] * 0.01) + 0.47 * exp(-tc[1] * 0.0005) +
    exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC);
  // reaction 7:  H + OH + M => H2O + M
  k_f = 22500000000 * exp((-2) * tc[0]);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 8:  H2O + O => 2 OH
  k_f = 2.97 * exp((2.02) * tc[0] - (6743.15364344982) * invT);
  qf[20] *= k_f;
  qr[20] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[6]));
  // reaction 9:  2 OH => H2O + O
  k_f = 0.3013 * exp((2.02) * tc[0] - (-1937.33384168159) * invT);
  qf[21] *= k_f;
  qr[21] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[3] - g_RT[6]));
  // reaction 10:  H + O2 => O + OH
  k_f = 197000000 * exp(-(8323.15836291014) * invT);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5]));
  // reaction 11:  O + OH => H + O2
  k_f = 15550000 * exp(-(213.841922133716) * invT);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[5]));
  // reaction 12:  H + O2 (+M) <=> HO2 (+M)
  k_f = 1475000 * exp((0.6) * tc[0]);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  redP = Corr / k_f * 35000 * exp(-0.41 * tc[0] - (-561.549541704803) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(0.0 + 0.5 * exp(-tc[1] * 1e-30) + exp(-1e+100 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[2] + g_RT[5] - g_RT[8])) * (refC);
  // reaction 13:  H + HO2 => 2 OH
  k_f = 70800000 * exp(-(150.939838908126) * invT);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[3] + g_RT[8]));
  // reaction 14:  2 HO2 => H2O2 + O2
  k_f = 420000000 * exp(-(6028.49539900728) * invT);
  qf[25] *= k_f;
  qr[25] *= k_f * exp(-(-g_RT[5] - g_RT[7] + 2.000000 * g_RT[8]));
  // reaction 15:  H + HO2 => H2 + O2
  k_f = 16600000 * exp(-(412.652762459844) * invT);
  qf[26] *= k_f;
  qr[26] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[5] + g_RT[8]));
  // reaction 16:  HO2 + OH => H2O + O2
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  qf[27] *= k_f;
  qr[27] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[6] + g_RT[8]));
  // reaction 17:  H2O + O2 => HO2 + OH
  k_f = 6888000000 * exp((-0.33) * tc[0] - (36302.0804641524) * invT);
  qf[28] *= k_f;
  qr[28] *= k_f * exp(-(-g_RT[3] + g_RT[5] + g_RT[6] - g_RT[8]));
  // reaction 18:  2 HO2 => H2O2 + O2
  k_f = 130000 * exp(-(-819.770141595837) * invT);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(-g_RT[5] - g_RT[7] + 2.000000 * g_RT[8]));
  // reaction 19:  HO2 + O => O2 + OH
  k_f = 32500000;
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[5] + g_RT[8]));
  // reaction 20:  O2 + OH => HO2 + O
  k_f = 785700000 * exp((-0.33) * tc[0] - (27873.2013119234) * invT);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[8]));
  // reaction 21:  H2O2 + OH => H2O + HO2
  k_f = 1000000;
  qf[32] *= k_f;
  qr[32] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[7] - g_RT[8]));
  // reaction 22:  H + H2O2 => H2O + OH
  k_f = 24100000 * exp(-(1997.7148094115) * invT);
  qf[33] *= k_f;
  qr[33] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[6] + g_RT[7]));
  // reaction 23:  H2O2 + OH => H2O + HO2
  k_f = 580000000 * exp(-(4810.74629292646) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[7] - g_RT[8]));
  // reaction 24:  H2O + HO2 => H2O2 + OH
  k_f = 97710000 * exp((0.33) * tc[0] - (20641.9878886429) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[7] + g_RT[8]));
  // reaction 25:  H2O2 + O => HO2 + OH
  k_f = 9.55 * exp((2) * tc[0] - (1997.7148094115) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[1] - g_RT[3] + g_RT[7] - g_RT[8]));
  // reaction 26:  H + H2O2 => H2 + HO2
  k_f = 48200000 * exp(-(4000.59765398081) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[7] - g_RT[8]));
  // reaction 27:  H2 + HO2 => H + H2O2
  k_f = 1875000 * exp((0.33) * tc[0] - (12208.0564410891) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[7] + g_RT[8]));
  // reaction 28:  CH2GSG + OH => CH2O + H
  k_f = 30000000;
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[9] - g_RT[10]));
  // reaction 29:  CH2GSG + H2 => CH3 + H
  k_f = 70000000;
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[9] - g_RT[11]));
  // reaction 30:  CH3 + H => CH2GSG + H2
  k_f = 248200000000 * exp((-0.89) * tc[0] - (8116.89488376345) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[9] + g_RT[11]));
  // reaction 31:  CH2GSG + O2 => CO + H + OH
  k_f = 70000000;
  qf[42] *= k_f;
  qr[42] *=
    k_f * exp(-(-g_RT[2] - g_RT[3] + g_RT[5] + g_RT[9] - g_RT[12])) * (refCinv);
  // reaction 32:  CH2GSG + O => CO + 2 H
  k_f = 30000000;
  qf[43] *= k_f;
  qr[43] *=
    k_f * exp(-(g_RT[1] - 2.000000 * g_RT[2] + g_RT[9] - g_RT[12])) * (refCinv);
  // reaction 33:  CH3 + HO2 => CH3O + OH
  k_f = 11000000;
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[11] - g_RT[13]));
  // reaction 34:  CH3 + O2 => CH2O + OH
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[10] + g_RT[11]));
  // reaction 35:  CH3 + O2 => CH3O + O
  k_f = 1995000000000 * exp((-1.57) * tc[0] - (14699.0040976558) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[11] - g_RT[13]));
  // reaction 36:  CH3O + O => CH3 + O2
  k_f = 3585000000000 * exp((-1.59) * tc[0] - (-820.736317594182) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT[13]));
  // reaction 37:  2 CH3 <=> C2H5 + H
  k_f = 6840000 * exp((0.1) * tc[0] - (5334.04633586345) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[11] - g_RT[14]));
  // reaction 38:  CH3 + HO2 => CH4 + O2
  k_f = 3600000;
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[11] - g_RT[15]));
  // reaction 39:  CH3 + O => CH2O + H
  k_f = 80000000;
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[10] + g_RT[11]));
  // reaction 40:  CH3 + OH => CH2O + H2
  k_f = 22500000 * exp(-(2163.806502127) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] + g_RT[11]));
  // reaction 41:  CH3 + OH => CH2GSG + H2O
  k_f = 26500000 * exp(-(1100.00647061583) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[11]));
  // reaction 42:  CH2GSG + H2O => CH3 + OH
  k_f = 32360 * exp((0.89) * tc[0] - (609.415510956148) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[9] - g_RT[11]));
  // reaction 43:  CH3 + H2O2 => CH4 + HO2
  k_f = 336500 * exp((-0.33) * tc[0] - (1259.00280834349) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(g_RT[7] - g_RT[8] + g_RT[11] - g_RT[15]));
  // reaction 44:  CH2GSG + CH3 => C2H4 + H
  k_f = 20000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[2] + g_RT[9] + g_RT[11] - g_RT[16]));
  // reaction 45:  CH3 + H (+M) => CH4 (+M)
  k_f = 2138000000 * exp((-0.4) * tc[0]);
  Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
  redP = Corr / k_f * 3.31e+18 * exp(-4 * tc[0] - (1060.79582801632) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(0.0 + 0.0 + exp(-40 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[2] + g_RT[11] - g_RT[15])) * (refC);
  // reaction 46:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 92140000000 * exp((-1.17) * tc[0] - (319.925027452009) * invT);
  Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
  redP =
    Corr / k_f * 1.135e+24 * exp(-5.246 * tc[0] - (858.019640363653) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.595) * exp(-tc[1] * 0.000892857142857143) +
    0.405 * exp(-tc[1] * 0.014367816091954) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(2.000000 * g_RT[11] - g_RT[17])) * (refC);
  // reaction 47:  CH2GSG + CH4 => 2 CH3
  k_f = 40000000;
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[9] - 2.000000 * g_RT[11] + g_RT[15]));
  // reaction 48:  2 CH3 => CH2GSG + CH4
  k_f = 5429000000 * exp((-0.89) * tc[0] - (7875.39114151044) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[9] + 2.000000 * g_RT[11] - g_RT[15]));
  // reaction 49:  CH4 + O => CH3 + OH
  k_f = 3150000 * exp((0.5) * tc[0] - (5178.05420163064) * invT);
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[11] + g_RT[15]));
  // reaction 50:  CH3 + OH => CH4 + O
  k_f = 52960 * exp((0.5) * tc[0] - (3882.37193051665) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[11] - g_RT[15]));
  // reaction 51:  CH4 + H => CH3 + H2
  k_f = 0.01727 * exp((3) * tc[0] - (4138.42869874472) * invT);
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[11] + g_RT[15]));
  // reaction 52:  CH3 + H2 => CH4 + H
  k_f = 0.000661 * exp((3) * tc[0] - (3896.91992432507) * invT);
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[11] - g_RT[15]));
  // reaction 53:  CH4 + OH => CH3 + H2O
  k_f = 0.193 * exp((2.4) * tc[0] - (1059.83468418464) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[15]));
  // reaction 54:  CH3 + H2O => CH4 + OH
  k_f = 0.03199 * exp((2.4) * tc[0] - (8444.03100603644) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[11] - g_RT[15]));
  // reaction 55:  CO + HO2 => CO2 + OH
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[12] - g_RT[18]));
  // reaction 56:  CO + O2 => CO2 + O
  k_f = 16200000 * exp(-(24003.4601197184) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[12] - g_RT[18]));
  // reaction 57:  CO2 + O => CO + O2
  k_f = 143300000 * exp(-(27133.4073950239) * invT);
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[12] + g_RT[18]));
  // reaction 58:  CO + OH => CO2 + H
  k_f = 0.14 * exp((1.95) * tc[0] - (-677.852977505589) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[18]));
  // reaction 59:  CO2 + H => CO + OH
  k_f = 15.68 * exp((1.95) * tc[0] - (10562.4976865744) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[18]));
  // reaction 60:  CO + O (+M) => CO2 (+M)
  k_f = 18000 * exp(-(1199.70878861172) * invT);
  Corr =
    mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  redP = Corr / k_f * 1350000000000 *
         exp(-2.788 * tc[0] - (2108.96594988761) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT[18])) * (refC);
  // reaction 61:  CH3 + HCO => CH4 + CO
  k_f = 121000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[15] + g_RT[19]));
  // reaction 62:  H + HCO => CO + H2
  k_f = 73400000;
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT[19]));
  // reaction 63:  HCO + O2 => CO + HO2
  k_f = 7580000 * exp(-(206.263479146697) * invT);
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[12] + g_RT[19]));
  // reaction 64:  HCO + O => CO + OH
  k_f = 30200000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[12] + g_RT[19]));
  // reaction 65:  HCO + O => CO2 + H
  k_f = 30000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[18] + g_RT[19]));
  // reaction 66:  HCO + M => CO + H + M
  k_f = 186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr =
    mixture + (1.5) * sc[4] + (5) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(-g_RT[2] - g_RT[12] + g_RT[19])) * (refCinv);
  // reaction 67:  CO + H + M => HCO + M
  k_f = 64.67 * exp(-(-222.381508952422) * invT);
  Corr =
    mixture + (1.5) * sc[4] + (5) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[19])) * (refC);
  // reaction 68:  HCO + OH => CO + H2O
  k_f = 102000000;
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[19]));
  // reaction 69:  CH2O + H => H2 + HCO
  k_f = 933.4 * exp((1.5) * tc[0] - (1497.62311910143) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[10] - g_RT[19]));
  // reaction 70:  CH2O + O2 => HCO + HO2
  k_f = 20500000 * exp(-(19600.3142939271) * invT);
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(g_RT[5] - g_RT[8] + g_RT[10] - g_RT[19]));
  // reaction 71:  CH2O + OH => H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.907656614761) * invT);
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[10] - g_RT[19]));
  // reaction 72:  CH2O + HO2 => H2O2 + HCO
  k_f = 5.82e-09 * exp((4.53) * tc[0] - (3299.53129168165) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[7] + g_RT[8] + g_RT[10] - g_RT[19]));
  // reaction 73:  CH2O + O => HCO + OH
  k_f = 416000 * exp((0.57) * tc[0] - (1389.85927011935) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[1] - g_RT[3] + g_RT[10] - g_RT[19]));
  // reaction 74:  CH2O + CH3 => CH4 + HCO
  k_f = 3.636e-12 * exp((5.42) * tc[0] - (502.255521973033) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(g_RT[10] + g_RT[11] - g_RT[15] - g_RT[19]));
  // reaction 75:  CH3O (+M) => CH2O + H (+M)
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  Corr = mixture;
  redP = Corr / k_f * 2.344e+19 * exp(-2.7 * tc[0] - (15398.3796519578) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(-g_RT[2] - g_RT[10] + g_RT[13])) * (refCinv);
  // reaction 76:  CH3O + O2 => CH2O + HO2
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[10] + g_RT[13]));
  // reaction 77:  CH2GSG + CO2 => CH2O + CO
  k_f = 3000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[12] + g_RT[18]));
  // reaction 78:  CH3 + CH3O2 => 2 CH3O
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[11] - 2.000000 * g_RT[13] + g_RT[20]));
  // reaction 79:  CH3O2 + HO2 => CH3O2H + O2
  k_f = 17500 * exp(-(-1648.08490217704) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[20] - g_RT[21]));
  // reaction 80:  2 CH3O2 => 2 CH3O + O2
  k_f = 14000000000 * exp((-1.61) * tc[0] - (935.95280539683) * invT);
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[5] - 2.000000 * g_RT[13] + 2.000000 * g_RT[20])) *
            (refCinv);
  // reaction 81:  CH2O + CH3O2 => CH3O2H + HCO
  k_f = 1990000 * exp(-(5867.45096944979) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[10] - g_RT[19] + g_RT[20] - g_RT[21]));
  // reaction 82:  CH3O2 + M => CH3 + O2 + M
  k_f = 4.343e+21 * exp((-3.42) * tc[0] - (15332.9564532366) * invT);
  Corr = mixture;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[20])) * (refCinv);
  // reaction 83:  CH3 + O2 + M => CH3O2 + M
  k_f = 54400000000000 * exp((-3.3) * tc[0]);
  Corr = mixture;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(g_RT[5] + g_RT[11] - g_RT[20])) * (refC);
  // reaction 84:  CH3O2H => CH3O + OH
  k_f = 631000000000000 * exp(-(21286.0398027063) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(-g_RT[3] - g_RT[13] + g_RT[21])) * (refCinv);
  // reaction 85:  CH3O + OH => CH3O2H
  k_f = 116600 * exp((0.6) * tc[0] - (-891.211811640133) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[3] + g_RT[13] - g_RT[21])) * (refC);
  // reaction 86:  C2H2 + O2 => HCCO + OH
  k_f = 200 * exp((1.5) * tc[0] - (15146.7713190555) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[3] + g_RT[5] + g_RT[22] - g_RT[23]));
  // reaction 87:  C2H2 + O => H + HCCO
  k_f = 14.3 * exp((2) * tc[0] - (956.161986695548) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[22] - g_RT[23]));
  // reaction 88:  C2H3 + O2 => CH2CHO + O
  k_f = 350000000 * exp((-0.61) * tc[0] - (2646.93979079946) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[24] - g_RT[25]));
  // reaction 89:  C2H3 + H => C2H2 + H2
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[22] + g_RT[24]));
  // reaction 90:  C2H3 + O2 => CH2O + HCO
  k_f = 1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[5] - g_RT[10] - g_RT[19] + g_RT[24]));
  // reaction 91:  C2H3 + O2 => C2H2 + HO2
  k_f = 2.12e-12 * exp((6) * tc[0] - (4772.5018263253) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[22] + g_RT[24]));
  // reaction 92:  C2H3 (+M) => C2H2 + H (+M)
  k_f = 16060000000 * exp((1.028) * tc[0] - (20382.0815129214) * invT);
  Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
  redP =
    Corr / k_f * 1.164e+33 * exp(-6.821 * tc[0] - (22388.9297048172) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10(0.0 + exp(-tc[1] * 0.00148148148148148) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(-g_RT[2] - g_RT[22] + g_RT[24])) * (refCinv);
  // reaction 93:  C2H4 + O => CH3 + HCO
  k_f = 10.2 * exp((1.88) * tc[0] - (90.0858475123609) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[16] - g_RT[19]));
  // reaction 94:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1081000 * exp((0.45) * tc[0] - (916.830572096251) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1.112e+22 * exp(-5 * tc[0] - (2238.25740783281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(0.0 + exp(-tc[1] * 0.0105263157894737) + exp(-200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[2] - g_RT[14] + g_RT[16])) * (refC);
  // reaction 95:  C2H4 + OH => C2H3 + H2O
  k_f = 20500000 * exp(-(2994.16432237137) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[16] - g_RT[24]));
  // reaction 96:  C2H3 + H2O => C2H4 + OH
  k_f = 6033000000 * exp((-0.83) * tc[0] - (10950.0147765773) * invT);
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[16] + g_RT[24]));
  // reaction 97:  C2H4 + H => C2H3 + H2
  k_f = 8.42e-09 * exp((4.62) * tc[0] - (1299.77342260698) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[16] - g_RT[24]));
  // reaction 98:  C2H3 + H2 => C2H4 + H
  k_f = 5.723e-07 * exp((3.79) * tc[0] - (1626.91457704663) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[16] + g_RT[24]));
  // reaction 99:  C2H4 + CH3O2 => C2H3 + CH3O2H
  k_f = 2230000 * exp(-(8650.29951734979) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[16] + g_RT[20] - g_RT[21] - g_RT[24]));
  // reaction 100:  C2H4 + CH3 => C2H3 + CH4
  k_f = 6.62e-06 * exp((3.7) * tc[0] - (4780.55832514484) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[11] - g_RT[15] + g_RT[16] - g_RT[24]));
  // reaction 101:  C2H3 + CH4 => C2H4 + CH3
  k_f = 1.44e-06 * exp((4.02) * tc[0] - (2753.62172395006) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(-g_RT[11] + g_RT[15] - g_RT[16] + g_RT[24]));
  // reaction 102:  C2H4 + O => CH2CHO + H
  k_f = 3.39 * exp((1.88) * tc[0] - (90.0858475123609) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[16] - g_RT[25]));
  // reaction 103:  C2H4 (+M) => C2H2 + H2 (+M)
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1500000000 * exp(-(27898.3369843803) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[4] + g_RT[16] - g_RT[22])) * (refCinv);
  // reaction 104:  C2H5 + CH3 => C2H4 + CH4
  k_f = 19500000 * exp((-0.5) * tc[0]);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(g_RT[11] + g_RT[14] - g_RT[15] - g_RT[16]));
  // reaction 105:  C2H5 + O2 => C2H4 + HO2
  k_f = 1.22e+24 * exp((-5.76) * tc[0] - (5082.43800296109) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(g_RT[5] - g_RT[8] + g_RT[14] - g_RT[16]));
  // reaction 106:  C2H4 + HO2 => C2H5 + O2
  k_f = 1.259e+24 * exp((-5.63) * tc[0] - (11221.706486612) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(-g_RT[5] + g_RT[8] - g_RT[14] + g_RT[16]));
  // reaction 107:  C2H5 + HO2 => C2H6 + O2
  k_f = 267.9 * exp((0.89) * tc[0] - (-967.222689009936) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[14] - g_RT[17]));
  // reaction 108:  C2H5 + H => C2H6
  k_f = 583100 * exp((0.599) * tc[0] - (-1465.87014748915) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[17])) * (refC);
  // reaction 109:  C2H6 + H => C2H5 + H2
  k_f = 0.000554 * exp((3.5) * tc[0] - (2600.15573737959) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[14] + g_RT[17]));
  // reaction 110:  C2H5 + H2 => C2H6 + H
  k_f = 1.355e-07 * exp((4.06) * tc[0] - (4457.02523419901) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[14] - g_RT[17]));
  // reaction 111:  C2H6 + OH => C2H5 + H2O
  k_f = 58 * exp((1.73) * tc[0] - (583.675978500236) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[17]));
  // reaction 112:  C2H6 + CH2GSG => C2H5 + CH3
  k_f = 120000000;
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[9] - g_RT[11] - g_RT[14] + g_RT[17]));
  // reaction 113:  C2H6 + O => C2H5 + OH
  k_f = 13 * exp((2.13) * tc[0] - (2611.69952769315) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[14] + g_RT[17]));
  // reaction 114:  C2H6 + CH3 => C2H5 + CH4
  k_f = 1.51e-13 * exp((6) * tc[0] - (3042.9914354544) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[11] - g_RT[14] - g_RT[15] + g_RT[17]));
  // reaction 115:  HCCO + O => 2 CO + H
  k_f = 80000000;
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[1] - g_RT[2] - 2.000000 * g_RT[12] + g_RT[23])) *
             (refCinv);
  // reaction 116:  HCCO + O2 => CO2 + HCO
  k_f = 240000 * exp(-(-429.731936097256) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(g_RT[5] - g_RT[18] - g_RT[19] + g_RT[23]));
  // reaction 117:  HCCO + OH => 2 HCO
  k_f = 10000000;
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(g_RT[3] - 2.000000 * g_RT[19] + g_RT[23]));
  // reaction 118:  H + HCCO => CH2GSG + CO
  k_f = 110000000;
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT[23]));
  // reaction 119:  CH2GSG + CO => H + HCCO
  k_f = 2046000 * exp((0.89) * tc[0] - (14004.555034512) * invT);
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(-g_RT[2] + g_RT[9] + g_RT[12] - g_RT[23]));
  // reaction 120:  CH2CHO + O2 => CH2O + CO + OH
  k_f = 20000000 * exp(-(2113.53515721311) * invT);
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[10] - g_RT[12] + g_RT[25])) *
             (refCinv);
  // reaction 121:  C3H5XA + CH2O => C3H6 + HCO
  k_f = 630 * exp((1.9) * tc[0] - (9153.51618315451) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[10] - g_RT[19] + g_RT[26] - g_RT[27]));
  // reaction 122:  C3H6 + HCO => C3H5XA + CH2O
  k_f = 109.7 * exp((1.89) * tc[0] - (7971.00734018) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[26] + g_RT[27]));
  // reaction 123:  C3H5XA + HO2 => C3H5O + OH
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[26] - g_RT[28]));
  // reaction 124:  C3H5XA + CH3O2 => C3H5O + CH3O
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(-g_RT[13] + g_RT[20] + g_RT[26] - g_RT[28]));
  // reaction 125:  C3H5XA + HO2 => C3H6 + O2
  k_f = 33320 * exp((0.34) * tc[0] - (-279.753241020818) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[26] - g_RT[27]));
  // reaction 126:  C3H5XA + O2 => CH2CHO + CH2O
  k_f = 7140000000 * exp((-1.21) * tc[0] - (10592.6856543561) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[5] - g_RT[10] - g_RT[25] + g_RT[26]));
  // reaction 127:  C3H5XA + O2 => C2H2 + CH2O + OH
  k_f = 9.72e+23 * exp((-5.71) * tc[0] - (10794.0226423445) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[10] - g_RT[22] + g_RT[26])) *
             (refCinv);
  // reaction 128:  C3H5XA + H => C3H6
  k_f = 4.887e+50 * exp((-12.25) * tc[0] - (14130.3592009631) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[2] + g_RT[26] - g_RT[27])) * (refC);
  // reaction 129:  C3H5XA => C2H2 + CH3
  k_f = 2.397e+48 * exp((-9.9) * tc[0] - (41304.059154418) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[11] - g_RT[22] + g_RT[26])) * (refCinv);
  // reaction 130:  C3H6 => C2H3 + CH3
  k_f = 2.73e+62 * exp((-13.28) * tc[0] - (61996.3183879748) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(-g_RT[11] - g_RT[24] + g_RT[27])) * (refCinv);
  // reaction 131:  C2H3 + CH3 => C3H6
  k_f = 4.712e+53 * exp((-13.19) * tc[0] - (14864.9750183715) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[11] + g_RT[24] - g_RT[27])) * (refC);
  // reaction 132:  C3H6 + O => C2H5 + HCO
  k_f = 15.8 * exp((1.76) * tc[0] - (-611.941658618487) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(g_RT[1] - g_RT[14] - g_RT[19] + g_RT[27]));
  // reaction 133:  C3H6 + H => C2H4 + CH3
  k_f = 4.83e+27 * exp((-5.81) * tc[0] - (9309.50831738731) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT[16] + g_RT[27]));
  // reaction 134:  C2H4 + CH3 => C3H6 + H
  k_f = 2.313e+27 * exp((-5.9) * tc[0] - (15911.7009084119) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[2] + g_RT[11] + g_RT[16] - g_RT[27]));
  // reaction 135:  C3H6 + H => C3H5XA + H2
  k_f = 0.173 * exp((2.5) * tc[0] - (1254.0712850186) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[26] + g_RT[27]));
  // reaction 136:  C3H5XA + H2 => C3H6 + H
  k_f = 0.07933 * exp((2.51) * tc[0] - (9822.82957384139) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[26] - g_RT[27]));
  // reaction 137:  C3H6 + OH => C3H5XA + H2O
  k_f = 3.12 * exp((2) * tc[0] - (-149.978695076439) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[26] + g_RT[27]));
  // reaction 138:  C3H6 + O => C3H5XA + OH
  k_f = 524000 * exp((0.7) * tc[0] - (2960.96711892823) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[26] + g_RT[27]));
  // reaction 139:  C3H6 + CH3 => C3H5XA + CH4
  k_f = 2.21e-06 * exp((3.5) * tc[0] - (2855.72941760849) * invT);
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[11] - g_RT[15] - g_RT[26] + g_RT[27]));
  // reaction 140:  IXC3H7 + O2 => C3H6 + HO2
  k_f = 450000 * exp(-(2526.18791967296) * invT);
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[27] + g_RT[29]));
  // reaction 141:  IXC3H7 => C3H6 + H
  k_f = 8.569e+18 * exp((-1.57) * tc[0] - (20299.8156523956) * invT);
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[2] - g_RT[27] + g_RT[29])) * (refCinv);
  // reaction 142:  C3H6 + H => IXC3H7
  k_f = 13000000 * exp(-(785.012966488705) * invT);
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[2] + g_RT[27] - g_RT[29])) * (refC);
  // reaction 143:  NXC3H7 => C2H4 + CH3
  k_f = 228400000000000 * exp((-0.55) * tc[0] - (14291.4036305206) * invT);
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(-g_RT[11] - g_RT[16] + g_RT[30])) * (refCinv);
  // reaction 144:  C2H4 + CH3 => NXC3H7
  k_f = 410000 * exp(-(3625.22821429044) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[11] + g_RT[16] - g_RT[30])) * (refC);
  // reaction 145:  HO2 + NXC3H7 => C3H8 + O2
  k_f = 2080000;
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[30] - g_RT[31]));
  // reaction 146:  NXC3H7 + O2 => C3H6 + HO2
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[27] + g_RT[30]));
  // reaction 147:  NXC3H7 => C3H6 + H
  k_f = 2.667e+15 * exp((-0.64) * tc[0] - (18528.4527314297) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[2] - g_RT[27] + g_RT[30])) * (refCinv);
  // reaction 148:  C3H6 + H => NXC3H7
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[2] + g_RT[27] - g_RT[30])) * (refC);
  // reaction 149:  C3H8 + OH => H2O + NXC3H7
  k_f = 10540 * exp((0.97) * tc[0] - (798.121760632917) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[30] + g_RT[31]));
  // reaction 150:  C3H8 + HO2 => H2O2 + NXC3H7
  k_f = 16800000 * exp(-(10280.7013858905) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(-g_RT[7] + g_RT[8] - g_RT[30] + g_RT[31]));
  // reaction 151:  C3H8 + H <=> H2 + NXC3H7
  k_f = 3.972 * exp((2.75) * tc[0] - (3400.07901367609) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[30] + g_RT[31]));
  // reaction 152:  C3H8 + OH => H2O + IXC3H7
  k_f = 46.7 * exp((1.61) * tc[0] - (-17.5572294699267) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[29] + g_RT[31]));
  // reaction 153:  C3H8 + CH3 => CH4 + IXC3H7
  k_f = 398000 * exp(-(4780.55832514484) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[11] - g_RT[15] - g_RT[29] + g_RT[31]));
  // reaction 154:  C3H8 + CH3 => CH4 + NXC3H7
  k_f = 1290000 * exp(-(5837.26300166817) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(g_RT[11] - g_RT[15] - g_RT[30] + g_RT[31]));
  // reaction 155:  C3H8 + O => IXC3H7 + OH
  k_f = 28100000 * exp(-(2616.75182301783) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[29] + g_RT[31]));
  // reaction 156:  C3H8 + HO2 => H2O2 + IXC3H7
  k_f = 5600000 * exp(-(8906.96014557683) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(-g_RT[7] + g_RT[8] - g_RT[29] + g_RT[31]));
  // reaction 157:  C3H8 + O => NXC3H7 + OH
  k_f = 113000000 * exp(-(3950.20050490047) * invT);
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[30] + g_RT[31]));
  // reaction 158:  C3H8 + O2 => HO2 + IXC3H7
  k_f = 40000000 * exp(-(23902.7916257242) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[5] - g_RT[8] - g_RT[29] + g_RT[31]));
  // reaction 159:  HO2 + IXC3H7 => C3H8 + O2
  k_f = 2080000;
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[5] + g_RT[8] + g_RT[29] - g_RT[31]));
  // reaction 160:  C3H8 + H => H2 + IXC3H7
  k_f = 1.3 * exp((2.4) * tc[0] - (2249.92197014617) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[29] + g_RT[31]));
  // reaction 161:  H2 + IXC3H7 => C3H8 + H
  k_f = 0.4709 * exp((2.15) * tc[0] - (6129.16389300151) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[29] - g_RT[31]));
  // reaction 162:  C3H5O => C2H3 + CH2O
  k_f = 2028000000000 * exp((0.09) * tc[0] - (11855.7796141925) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(-g_RT[10] - g_RT[24] + g_RT[28])) * (refCinv);
  // reaction 163:  IXC3H7O2 => IXC3H7 + O2
  k_f = 2.803e+17 * exp((-0.62) * tc[0] - (18135.8833461022) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(-g_RT[5] - g_RT[29] + g_RT[32])) * (refCinv);
  // reaction 164:  IXC3H7 + O2 => IXC3H7O2
  k_f = 7540000;
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[5] + g_RT[29] - g_RT[32])) * (refC);
  // reaction 165:  NXC3H7O2 => NXC3H7 + O2
  k_f = 3.364e+19 * exp((-1.32) * tc[0] - (17995.0480978434) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[5] - g_RT[30] + g_RT[33])) * (refCinv);
  // reaction 166:  NXC3H7 + O2 => NXC3H7O2
  k_f = 4520000;
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(g_RT[5] + g_RT[30] - g_RT[33])) * (refC);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 34; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 34; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[34];
  gibbs(g_RT, tc);

  {
    // reaction 6:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 123600000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real redP =
      Corr / k_f * 3.041e+18 * exp(-4.63 * tc[0] - 1031.09094823387 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.53 * exp(-tc[1] * 0.01) + 0.47 * exp(-tc[1] * 0.0005) +
      exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 12:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 1475000 * exp((0.6) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real redP =
      Corr / k_f * 35000 * exp(-0.41 * tc[0] - -561.549541704803 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.0 + 0.5 * exp(-tc[1] * 1e-30) + exp(-1e+100 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[5] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 45:  CH3 + H (+M) => CH4 (+M)
    const amrex::Real k_f = 2138000000 * exp((-0.4) * tc[0]);
    amrex::Real Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
    const amrex::Real redP =
      Corr / k_f * 3.31e+18 * exp(-4 * tc[0] - 1060.79582801632 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(0.0 + 0.0 + exp(-40 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[11]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[11] - g_RT[15])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 46:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      92140000000 * exp((-1.17) * tc[0] - (319.925027452009) * invT);
    amrex::Real Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
    const amrex::Real redP =
      Corr / k_f * 1.135e+24 * exp(-5.246 * tc[0] - 858.019640363653 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.595 * exp(-tc[1] * 0.000892857142857143) +
      0.405 * exp(-tc[1] * 0.014367816091954) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[11] * sc[11]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[11] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 60:  CO + O (+M) => CO2 (+M)
    const amrex::Real k_f = 18000 * exp(-(1199.70878861172) * invT);
    amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real redP = Corr / k_f * 1350000000000 *
                             exp(-2.788 * tc[0] - 2108.96594988761 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT[18])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 75:  CH3O (+M) => CH2O + H (+M)
    const amrex::Real k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 2.344e+19 * exp(-2.7 * tc[0] - 15398.3796519578 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[2] - g_RT[10] + g_RT[13])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 92:  C2H3 (+M) => C2H2 + H (+M)
    const amrex::Real k_f =
      16060000000 * exp((1.028) * tc[0] - (20382.0815129214) * invT);
    amrex::Real Corr = mixture + sc[4] + (4) * sc[6] + sc[12] + (2) * sc[18];
    const amrex::Real redP =
      Corr / k_f * 1.164e+33 * exp(-6.821 * tc[0] - 22388.9297048172 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.0 + 1 * exp(-tc[1] * 0.00148148148148148) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[2] - g_RT[22] + g_RT[24])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 94:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1081000 * exp((0.45) * tc[0] - (916.830572096251) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1.112e+22 * exp(-5 * tc[0] - 2238.25740783281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.0 + 1 * exp(-tc[1] * 0.0105263157894737) + exp(-200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] - g_RT[14] + g_RT[16])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 103:  C2H4 (+M) => C2H2 + H2 (+M)
    const amrex::Real k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1500000000 * exp(-27898.3369843803 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[4] + g_RT[16] - g_RT[22])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[16] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 0:  H + O + M => OH + M
    const amrex::Real k_f = 4720000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 3:  2 O + M => O2 + M
    const amrex::Real k_f = 6170 * exp((-0.5) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 7:  H + OH + M => H2O + M
    const amrex::Real k_f = 22500000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[4] + (11) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 66:  HCO + M => CO + H + M
    const amrex::Real k_f =
      186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[4] + (5) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real qf = Corr * k_f * (sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[2] - g_RT[12] + g_RT[19])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 67:  CO + H + M => HCO + M
    const amrex::Real k_f = 64.67 * exp(-(-222.381508952422) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[4] + (5) * sc[6] + (0.9) * sc[12] + (2.8) * sc[18];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[19])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 82:  CH3O2 + M => CH3 + O2 + M
    const amrex::Real k_f =
      4.343e+21 * exp((-3.42) * tc[0] - (15332.9564532366) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[20])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 83:  CH3 + O2 + M => CH3O2 + M
    const amrex::Real k_f = 54400000000000 * exp((-3.3) * tc[0]);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[11]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[11] - g_RT[20])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 1:  H2 + O => H + OH
    const amrex::Real k_f =
      0.0508 * exp((2.67) * tc[0] - (3166.2744864099) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 2:  H + OH => H2 + O
    const amrex::Real k_f =
      0.02231 * exp((2.67) * tc[0] - (2111.97015338246) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 4:  H2 + OH => H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.01806721021) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 5:  H + H2O => H2 + OH
    const amrex::Real k_f =
      935.2 * exp((1.51) * tc[0] - (9349.8008758183) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 8:  H2O + O => 2 OH
    const amrex::Real k_f =
      2.97 * exp((2.02) * tc[0] - (6743.15364344982) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 9:  2 OH => H2O + O
    const amrex::Real k_f =
      0.3013 * exp((2.02) * tc[0] - (-1937.33384168159) * invT);
    const amrex::Real qf = k_f * ((sc[3] * sc[3]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 10:  H + O2 => O + OH
    const amrex::Real k_f = 197000000 * exp(-(8323.15836291014) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 11:  O + OH => H + O2
    const amrex::Real k_f = 15550000 * exp(-(213.841922133716) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 13:  H + HO2 => 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.939838908126) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += 2.000000 * qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 14:  2 HO2 => H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6028.49539900728) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 15:  H + HO2 => H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.652762459844) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 16:  HO2 + OH => H2O + O2
    const amrex::Real k_f = 28900000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 17:  H2O + O2 => HO2 + OH
    const amrex::Real k_f =
      6888000000 * exp((-0.33) * tc[0] - (36302.0804641524) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 18:  2 HO2 => H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-819.770141595837) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 19:  HO2 + O => O2 + OH
    const amrex::Real k_f = 32500000;
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 20:  O2 + OH => HO2 + O
    const amrex::Real k_f =
      785700000 * exp((-0.33) * tc[0] - (27873.2013119234) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[5] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 21:  H2O2 + OH => H2O + HO2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 22:  H + H2O2 => H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.7148094115) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 23:  H2O2 + OH => H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.74629292646) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 24:  H2O + HO2 => H2O2 + OH
    const amrex::Real k_f =
      97710000 * exp((0.33) * tc[0] - (20641.9878886429) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 25:  H2O2 + O => HO2 + OH
    const amrex::Real k_f = 9.55 * exp((2) * tc[0] - (1997.7148094115) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 26:  H + H2O2 => H2 + HO2
    const amrex::Real k_f = 48200000 * exp(-(4000.59765398081) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 27:  H2 + HO2 => H + H2O2
    const amrex::Real k_f =
      1875000 * exp((0.33) * tc[0] - (12208.0564410891) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 28:  CH2GSG + OH => CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 29:  CH2GSG + H2 => CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 30:  CH3 + H => CH2GSG + H2
    const amrex::Real k_f =
      248200000000 * exp((-0.89) * tc[0] - (8116.89488376345) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 31:  CH2GSG + O2 => CO + H + OH
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 32:  CH2GSG + O => CO + 2 H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += 2.000000 * qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 33:  CH3 + HO2 => CH3O + OH
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 34:  CH3 + O2 => CH2O + OH
    const amrex::Real k_f = 747000 * exp(-(7170.83748771726) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 35:  CH3 + O2 => CH3O + O
    const amrex::Real k_f =
      1995000000000 * exp((-1.57) * tc[0] - (14699.0040976558) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 36:  CH3O + O => CH3 + O2
    const amrex::Real k_f =
      3585000000000 * exp((-1.59) * tc[0] - (-820.736317594182) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 37:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      6840000 * exp((0.1) * tc[0] - (5334.04633586345) * invT);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + 2.000000 * g_RT[11] - g_RT[14])) *
                           (sc[2] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 38:  CH3 + HO2 => CH4 + O2
    const amrex::Real k_f = 3600000;
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 39:  CH3 + O => CH2O + H
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 40:  CH3 + OH => CH2O + H2
    const amrex::Real k_f = 22500000 * exp(-(2163.806502127) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 41:  CH3 + OH => CH2GSG + H2O
    const amrex::Real k_f = 26500000 * exp(-(1100.00647061583) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 42:  CH2GSG + H2O => CH3 + OH
    const amrex::Real k_f =
      32360 * exp((0.89) * tc[0] - (609.415510956148) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 43:  CH3 + H2O2 => CH4 + HO2
    const amrex::Real k_f =
      336500 * exp((-0.33) * tc[0] - (1259.00280834349) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[8] += qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 44:  CH2GSG + CH3 => C2H4 + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[9] -= qdot;
    wdot[11] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 47:  CH2GSG + CH4 => 2 CH3
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 48:  2 CH3 => CH2GSG + CH4
    const amrex::Real k_f =
      5429000000 * exp((-0.89) * tc[0] - (7875.39114151044) * invT);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 49:  CH4 + O => CH3 + OH
    const amrex::Real k_f =
      3150000 * exp((0.5) * tc[0] - (5178.05420163064) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 50:  CH3 + OH => CH4 + O
    const amrex::Real k_f =
      52960 * exp((0.5) * tc[0] - (3882.37193051665) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 51:  CH4 + H => CH3 + H2
    const amrex::Real k_f =
      0.01727 * exp((3) * tc[0] - (4138.42869874472) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 52:  CH3 + H2 => CH4 + H
    const amrex::Real k_f =
      0.000661 * exp((3) * tc[0] - (3896.91992432507) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 53:  CH4 + OH => CH3 + H2O
    const amrex::Real k_f =
      0.193 * exp((2.4) * tc[0] - (1059.83468418464) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 54:  CH3 + H2O => CH4 + OH
    const amrex::Real k_f =
      0.03199 * exp((2.4) * tc[0] - (8444.03100603644) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 55:  CO + HO2 => CO2 + OH
    const amrex::Real k_f = 30100000 * exp(-(11573.9833135086) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 56:  CO + O2 => CO2 + O
    const amrex::Real k_f = 16200000 * exp(-(24003.4601197184) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 57:  CO2 + O => CO + O2
    const amrex::Real k_f = 143300000 * exp(-(27133.4073950239) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 58:  CO + OH => CO2 + H
    const amrex::Real k_f =
      0.14 * exp((1.95) * tc[0] - (-677.852977505589) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 59:  CO2 + H => CO + OH
    const amrex::Real k_f =
      15.68 * exp((1.95) * tc[0] - (10562.4976865744) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 61:  CH3 + HCO => CH4 + CO
    const amrex::Real k_f = 121000000;
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 62:  H + HCO => CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 63:  HCO + O2 => CO + HO2
    const amrex::Real k_f = 7580000 * exp(-(206.263479146697) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 64:  HCO + O => CO + OH
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 65:  HCO + O => CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 68:  HCO + OH => CO + H2O
    const amrex::Real k_f = 102000000;
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 69:  CH2O + H => H2 + HCO
    const amrex::Real k_f =
      933.4 * exp((1.5) * tc[0] - (1497.62311910143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 70:  CH2O + O2 => HCO + HO2
    const amrex::Real k_f = 20500000 * exp(-(19600.3142939271) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 71:  CH2O + OH => H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.907656614761) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 72:  CH2O + HO2 => H2O2 + HCO
    const amrex::Real k_f =
      5.82e-09 * exp((4.53) * tc[0] - (3299.53129168165) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 73:  CH2O + O => HCO + OH
    const amrex::Real k_f =
      416000 * exp((0.57) * tc[0] - (1389.85927011935) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 74:  CH2O + CH3 => CH4 + HCO
    const amrex::Real k_f =
      3.636e-12 * exp((5.42) * tc[0] - (502.255521973033) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 76:  CH3O + O2 => CH2O + HO2
    const amrex::Real k_f = 55000 * exp(-(1219.79719791064) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 77:  CH2GSG + CO2 => CH2O + CO
    const amrex::Real k_f = 3000000;
    const amrex::Real qf = k_f * (sc[9] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 78:  CH3 + CH3O2 => 2 CH3O
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[13] += 2.000000 * qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 79:  CH3O2 + HO2 => CH3O2H + O2
    const amrex::Real k_f = 17500 * exp(-(-1648.08490217704) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 80:  2 CH3O2 => 2 CH3O + O2
    const amrex::Real k_f =
      14000000000 * exp((-1.61) * tc[0] - (935.95280539683) * invT);
    const amrex::Real qf = k_f * ((sc[20] * sc[20]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[13] += 2.000000 * qdot;
    wdot[20] -= 2.000000 * qdot;
  }

  {
    // reaction 81:  CH2O + CH3O2 => CH3O2H + HCO
    const amrex::Real k_f = 1990000 * exp(-(5867.45096944979) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 84:  CH3O2H => CH3O + OH
    const amrex::Real k_f = 631000000000000 * exp(-(21286.0398027063) * invT);
    const amrex::Real qf = k_f * (sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[13] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 85:  CH3O + OH => CH3O2H
    const amrex::Real k_f =
      116600 * exp((0.6) * tc[0] - (-891.211811640133) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 86:  C2H2 + O2 => HCCO + OH
    const amrex::Real k_f =
      200 * exp((1.5) * tc[0] - (15146.7713190555) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[22] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 87:  C2H2 + O => H + HCCO
    const amrex::Real k_f = 14.3 * exp((2) * tc[0] - (956.161986695548) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[22] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 88:  C2H3 + O2 => CH2CHO + O
    const amrex::Real k_f =
      350000000 * exp((-0.61) * tc[0] - (2646.93979079946) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[24] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 89:  C2H3 + H => C2H2 + H2
    const amrex::Real k_f = 20000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 90:  C2H3 + O2 => CH2O + HCO
    const amrex::Real k_f =
      1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[19] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 91:  C2H3 + O2 => C2H2 + HO2
    const amrex::Real k_f =
      2.12e-12 * exp((6) * tc[0] - (4772.5018263253) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 93:  C2H4 + O => CH3 + HCO
    const amrex::Real k_f =
      10.2 * exp((1.88) * tc[0] - (90.0858475123609) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 95:  C2H4 + OH => C2H3 + H2O
    const amrex::Real k_f = 20500000 * exp(-(2994.16432237137) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 96:  C2H3 + H2O => C2H4 + OH
    const amrex::Real k_f =
      6033000000 * exp((-0.83) * tc[0] - (10950.0147765773) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 97:  C2H4 + H => C2H3 + H2
    const amrex::Real k_f =
      8.42e-09 * exp((4.62) * tc[0] - (1299.77342260698) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 98:  C2H3 + H2 => C2H4 + H
    const amrex::Real k_f =
      5.723e-07 * exp((3.79) * tc[0] - (1626.91457704663) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 99:  C2H4 + CH3O2 => C2H3 + CH3O2H
    const amrex::Real k_f = 2230000 * exp(-(8650.29951734979) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 100:  C2H4 + CH3 => C2H3 + CH4
    const amrex::Real k_f =
      6.62e-06 * exp((3.7) * tc[0] - (4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 101:  C2H3 + CH4 => C2H4 + CH3
    const amrex::Real k_f =
      1.44e-06 * exp((4.02) * tc[0] - (2753.62172395006) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[15] -= qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 102:  C2H4 + O => CH2CHO + H
    const amrex::Real k_f =
      3.39 * exp((1.88) * tc[0] - (90.0858475123609) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[16] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 104:  C2H5 + CH3 => C2H4 + CH4
    const amrex::Real k_f = 19500000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[11] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 105:  C2H5 + O2 => C2H4 + HO2
    const amrex::Real k_f =
      1.22e+24 * exp((-5.76) * tc[0] - (5082.43800296109) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 106:  C2H4 + HO2 => C2H5 + O2
    const amrex::Real k_f =
      1.259e+24 * exp((-5.63) * tc[0] - (11221.706486612) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  C2H5 + HO2 => C2H6 + O2
    const amrex::Real k_f =
      267.9 * exp((0.89) * tc[0] - (-967.222689009936) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 108:  C2H5 + H => C2H6
    const amrex::Real k_f =
      583100 * exp((0.599) * tc[0] - (-1465.87014748915) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 109:  C2H6 + H => C2H5 + H2
    const amrex::Real k_f =
      0.000554 * exp((3.5) * tc[0] - (2600.15573737959) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 110:  C2H5 + H2 => C2H6 + H
    const amrex::Real k_f =
      1.355e-07 * exp((4.06) * tc[0] - (4457.02523419901) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 111:  C2H6 + OH => C2H5 + H2O
    const amrex::Real k_f =
      58 * exp((1.73) * tc[0] - (583.675978500236) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 112:  C2H6 + CH2GSG => C2H5 + CH3
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 113:  C2H6 + O => C2H5 + OH
    const amrex::Real k_f =
      13 * exp((2.13) * tc[0] - (2611.69952769315) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 114:  C2H6 + CH3 => C2H5 + CH4
    const amrex::Real k_f =
      1.51e-13 * exp((6) * tc[0] - (3042.9914354544) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[14] += qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 115:  HCCO + O => 2 CO + H
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[1] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[12] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 116:  HCCO + O2 => CO2 + HCO
    const amrex::Real k_f = 240000 * exp(-(-429.731936097256) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[18] += qdot;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 117:  HCCO + OH => 2 HCO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[19] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 118:  H + HCCO => CH2GSG + CO
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 119:  CH2GSG + CO => H + HCCO
    const amrex::Real k_f =
      2046000 * exp((0.89) * tc[0] - (14004.555034512) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[9] -= qdot;
    wdot[12] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 120:  CH2CHO + O2 => CH2O + CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2113.53515721311) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 121:  C3H5XA + CH2O => C3H6 + HCO
    const amrex::Real k_f =
      630 * exp((1.9) * tc[0] - (9153.51618315451) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 122:  C3H6 + HCO => C3H5XA + CH2O
    const amrex::Real k_f =
      109.7 * exp((1.89) * tc[0] - (7971.00734018) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 123:  C3H5XA + HO2 => C3H5O + OH
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 124:  C3H5XA + CH3O2 => C3H5O + CH3O
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[20] -= qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 125:  C3H5XA + HO2 => C3H6 + O2
    const amrex::Real k_f =
      33320 * exp((0.34) * tc[0] - (-279.753241020818) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[26] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 126:  C3H5XA + O2 => CH2CHO + CH2O
    const amrex::Real k_f =
      7140000000 * exp((-1.21) * tc[0] - (10592.6856543561) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 127:  C3H5XA + O2 => C2H2 + CH2O + OH
    const amrex::Real k_f =
      9.72e+23 * exp((-5.71) * tc[0] - (10794.0226423445) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 128:  C3H5XA + H => C3H6
    const amrex::Real k_f =
      4.887e+50 * exp((-12.25) * tc[0] - (14130.3592009631) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[26] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 129:  C3H5XA => C2H2 + CH3
    const amrex::Real k_f =
      2.397e+48 * exp((-9.9) * tc[0] - (41304.059154418) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[22] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 130:  C3H6 => C2H3 + CH3
    const amrex::Real k_f =
      2.73e+62 * exp((-13.28) * tc[0] - (61996.3183879748) * invT);
    const amrex::Real qf = k_f * (sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[24] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 131:  C2H3 + CH3 => C3H6
    const amrex::Real k_f =
      4.712e+53 * exp((-13.19) * tc[0] - (14864.9750183715) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 132:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      15.8 * exp((1.76) * tc[0] - (-611.941658618487) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 133:  C3H6 + H => C2H4 + CH3
    const amrex::Real k_f =
      4.83e+27 * exp((-5.81) * tc[0] - (9309.50831738731) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 134:  C2H4 + CH3 => C3H6 + H
    const amrex::Real k_f =
      2.313e+27 * exp((-5.9) * tc[0] - (15911.7009084119) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[11] -= qdot;
    wdot[16] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 135:  C3H6 + H => C3H5XA + H2
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1254.0712850186) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[26] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 136:  C3H5XA + H2 => C3H6 + H
    const amrex::Real k_f =
      0.07933 * exp((2.51) * tc[0] - (9822.82957384139) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[26] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 137:  C3H6 + OH => C3H5XA + H2O
    const amrex::Real k_f =
      3.12 * exp((2) * tc[0] - (-149.978695076439) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[26] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 138:  C3H6 + O => C3H5XA + OH
    const amrex::Real k_f =
      524000 * exp((0.7) * tc[0] - (2960.96711892823) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[26] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 139:  C3H6 + CH3 => C3H5XA + CH4
    const amrex::Real k_f =
      2.21e-06 * exp((3.5) * tc[0] - (2855.72941760849) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[26] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 140:  IXC3H7 + O2 => C3H6 + HO2
    const amrex::Real k_f = 450000 * exp(-(2526.18791967296) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 141:  IXC3H7 => C3H6 + H
    const amrex::Real k_f =
      8.569e+18 * exp((-1.57) * tc[0] - (20299.8156523956) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 142:  C3H6 + H => IXC3H7
    const amrex::Real k_f = 13000000 * exp(-(785.012966488705) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 143:  NXC3H7 => C2H4 + CH3
    const amrex::Real k_f =
      228400000000000 * exp((-0.55) * tc[0] - (14291.4036305206) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 144:  C2H4 + CH3 => NXC3H7
    const amrex::Real k_f = 410000 * exp(-(3625.22821429044) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[16] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 145:  HO2 + NXC3H7 => C3H8 + O2
    const amrex::Real k_f = 2080000;
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 146:  NXC3H7 + O2 => C3H6 + HO2
    const amrex::Real k_f = 300000 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[27] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 147:  NXC3H7 => C3H6 + H
    const amrex::Real k_f =
      2.667e+15 * exp((-0.64) * tc[0] - (18528.4527314297) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[27] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 148:  C3H6 + H => NXC3H7
    const amrex::Real k_f = 10000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 149:  C3H8 + OH => H2O + NXC3H7
    const amrex::Real k_f =
      10540 * exp((0.97) * tc[0] - (798.121760632917) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 150:  C3H8 + HO2 => H2O2 + NXC3H7
    const amrex::Real k_f = 16800000 * exp(-(10280.7013858905) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 151:  C3H8 + H <=> H2 + NXC3H7
    const amrex::Real k_f =
      3.972 * exp((2.75) * tc[0] - (3400.07901367609) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[30] + g_RT[31])) * (sc[4] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 152:  C3H8 + OH => H2O + IXC3H7
    const amrex::Real k_f =
      46.7 * exp((1.61) * tc[0] - (-17.5572294699267) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 153:  C3H8 + CH3 => CH4 + IXC3H7
    const amrex::Real k_f = 398000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 154:  C3H8 + CH3 => CH4 + NXC3H7
    const amrex::Real k_f = 1290000 * exp(-(5837.26300166817) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 155:  C3H8 + O => IXC3H7 + OH
    const amrex::Real k_f = 28100000 * exp(-(2616.75182301783) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 156:  C3H8 + HO2 => H2O2 + IXC3H7
    const amrex::Real k_f = 5600000 * exp(-(8906.96014557683) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 157:  C3H8 + O => NXC3H7 + OH
    const amrex::Real k_f = 113000000 * exp(-(3950.20050490047) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 158:  C3H8 + O2 => HO2 + IXC3H7
    const amrex::Real k_f = 40000000 * exp(-(23902.7916257242) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 159:  HO2 + IXC3H7 => C3H8 + O2
    const amrex::Real k_f = 2080000;
    const amrex::Real qf = k_f * (sc[8] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[29] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 160:  C3H8 + H => H2 + IXC3H7
    const amrex::Real k_f =
      1.3 * exp((2.4) * tc[0] - (2249.92197014617) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 161:  H2 + IXC3H7 => C3H8 + H
    const amrex::Real k_f =
      0.4709 * exp((2.15) * tc[0] - (6129.16389300151) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[29] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 162:  C3H5O => C2H3 + CH2O
    const amrex::Real k_f =
      2028000000000 * exp((0.09) * tc[0] - (11855.7796141925) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[24] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 163:  IXC3H7O2 => IXC3H7 + O2
    const amrex::Real k_f =
      2.803e+17 * exp((-0.62) * tc[0] - (18135.8833461022) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[29] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 164:  IXC3H7 + O2 => IXC3H7O2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[29] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 165:  NXC3H7O2 => NXC3H7 + O2
    const amrex::Real k_f =
      3.364e+19 * exp((-1.32) * tc[0] - (17995.0480978434) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[30] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 166:  NXC3H7 + O2 => NXC3H7O2
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[5] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[30] -= qdot;
    wdot[33] += qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 34; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[34]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 34; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 34; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[34]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 34; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[34]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 34; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[34];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;  // N2
  XW += x[1] * 15.999000;  // O
  XW += x[2] * 1.008000;   // H
  XW += x[3] * 17.007000;  // OH
  XW += x[4] * 2.016000;   // H2
  XW += x[5] * 31.998000;  // O2
  XW += x[6] * 18.015000;  // H2O
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 33.006000;  // HO2
  XW += x[9] * 14.027000;  // CH2GSG
  XW += x[10] * 30.026000; // CH2O
  XW += x[11] * 15.035000; // CH3
  XW += x[12] * 28.010000; // CO
  XW += x[13] * 31.034000; // CH3O
  XW += x[14] * 29.062000; // C2H5
  XW += x[15] * 16.043000; // CH4
  XW += x[16] * 28.054000; // C2H4
  XW += x[17] * 30.070000; // C2H6
  XW += x[18] * 44.009000; // CO2
  XW += x[19] * 29.018000; // HCO
  XW += x[20] * 47.033000; // CH3O2
  XW += x[21] * 48.041000; // CH3O2H
  XW += x[22] * 26.038000; // C2H2
  XW += x[23] * 41.029000; // HCCO
  XW += x[24] * 27.046000; // C2H3
  XW += x[25] * 43.045000; // CH2CHO
  XW += x[26] * 41.073000; // C3H5XA
  XW += x[27] * 42.081000; // C3H6
  XW += x[28] * 57.072000; // C3H5O
  XW += x[29] * 43.089000; // IXC3H7
  XW += x[30] * 43.089000; // NXC3H7
  XW += x[31] * 44.097000; // C3H8
  XW += x[32] * 75.087000; // IXC3H7O2
  XW += x[33] * 75.087000; // NXC3H7O2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 34; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 34; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // N2
  kcharge[1] = 0;  // O
  kcharge[2] = 0;  // H
  kcharge[3] = 0;  // OH
  kcharge[4] = 0;  // H2
  kcharge[5] = 0;  // O2
  kcharge[6] = 0;  // H2O
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // HO2
  kcharge[9] = 0;  // CH2GSG
  kcharge[10] = 0; // CH2O
  kcharge[11] = 0; // CH3
  kcharge[12] = 0; // CO
  kcharge[13] = 0; // CH3O
  kcharge[14] = 0; // C2H5
  kcharge[15] = 0; // CH4
  kcharge[16] = 0; // C2H4
  kcharge[17] = 0; // C2H6
  kcharge[18] = 0; // CO2
  kcharge[19] = 0; // HCO
  kcharge[20] = 0; // CH3O2
  kcharge[21] = 0; // CH3O2H
  kcharge[22] = 0; // C2H2
  kcharge[23] = 0; // HCCO
  kcharge[24] = 0; // C2H3
  kcharge[25] = 0; // CH2CHO
  kcharge[26] = 0; // C3H5XA
  kcharge[27] = 0; // C3H6
  kcharge[28] = 0; // C3H5O
  kcharge[29] = 0; // IXC3H7
  kcharge[30] = 0; // NXC3H7
  kcharge[31] = 0; // C3H8
  kcharge[32] = 0; // IXC3H7O2
  kcharge[33] = 0; // NXC3H7O2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[34];
  CKCHRG(kchrg);

  for (int id = 0; id < 34; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +1.40824000e-03 - 7.92644400e-06 * tc[1] +
                 1.69245450e-08 * tc[2] - 9.77942000e-12 * tc[3];
    // species 1: O
    species[1] = -1.63816600e-03 + 4.84206400e-06 * tc[1] -
                 4.80852900e-09 * tc[2] + 1.55627840e-12 * tc[3];
    // species 4: H2
    species[4] = +8.24944200e-04 - 1.62860300e-06 * tc[1] -
                 2.84263020e-10 * tc[2] + 1.65394880e-12 * tc[3];
    // species 5: O2
    species[5] = +1.12748600e-03 - 1.15123000e-06 * tc[1] +
                 3.94163100e-09 * tc[2] - 3.50742160e-12 * tc[3];
    // species 6: H2O
    species[6] = +3.47498200e-03 - 1.27093920e-05 * tc[1] +
                 2.09057430e-08 * tc[2] - 1.00263520e-11 * tc[3];
    // species 7: H2O2
    species[7] = +6.56922600e-03 - 2.97002600e-07 * tc[1] -
                 1.38774180e-08 * tc[2] + 9.88606000e-12 * tc[3];
    // species 9: CH2GSG
    species[9] = -1.69908900e-04 + 2.05073800e-06 * tc[1] +
                 7.47765300e-09 * tc[2] - 7.92506400e-12 * tc[3];
    // species 10: CH2O
    species[10] = +1.26314400e-02 - 3.77633600e-05 * tc[1] +
                  6.15009300e-08 * tc[2] - 3.36529480e-11 * tc[3];
    // species 11: CH3
    species[11] = +1.11241000e-02 - 3.36044000e-05 * tc[1] +
                  4.86548700e-08 * tc[2] - 2.34598120e-11 * tc[3];
    // species 12: CO
    species[12] = +1.51194100e-03 - 7.76351000e-06 * tc[1] +
                  1.67458320e-08 * tc[2] - 9.89980400e-12 * tc[3];
    // species 13: CH3O
    species[13] = +7.21659500e-03 + 1.06769440e-05 * tc[1] -
                  2.21329080e-08 * tc[2] + 8.30244400e-12 * tc[3];
    // species 14: C2H5
    species[14] = +8.71913300e-03 + 8.83967800e-06 * tc[1] +
                  2.80161090e-09 * tc[2] - 1.57110920e-11 * tc[3];
    // species 15: CH4
    species[15] = +1.74766800e-02 - 5.56681800e-05 * tc[1] +
                  9.14912400e-08 * tc[2] - 4.89572400e-11 * tc[3];
    // species 16: C2H4
    species[16] = +2.79616300e-02 - 6.77735400e-05 * tc[1] +
                  8.35545600e-08 * tc[2] - 3.89515160e-11 * tc[3];
    // species 18: CO2
    species[18] = +9.92207200e-03 - 2.08182200e-05 * tc[1] +
                  2.06000610e-08 * tc[2] - 8.46912000e-12 * tc[3];
    // species 19: HCO
    species[19] = +6.19914700e-03 - 1.92461680e-05 * tc[1] +
                  3.26947500e-08 * tc[2] - 1.82995400e-11 * tc[3];
    // species 22: C2H2
    species[22] = +1.51904500e-02 - 3.23263800e-05 * tc[1] +
                  2.72369760e-08 * tc[2] - 7.65098400e-12 * tc[3];
    // species 23: HCCO
    species[23] = +4.45347800e-03 + 4.53656600e-07 * tc[1] -
                  4.44628500e-09 * tc[2] + 9.00296800e-13 * tc[3];
    // species 24: C2H3
    species[24] = +7.37147600e-03 + 4.21974600e-06 * tc[1] -
                  3.96492600e-09 * tc[2] - 4.73913600e-12 * tc[3];
    // species 25: CH2CHO
    species[25] = +1.07385700e-02 + 3.78298400e-06 * tc[1] -
                  2.14757490e-08 * tc[2] + 1.14695400e-11 * tc[3];
    // species 29: IXC3H7
    species[29] = +2.54261600e-02 + 3.16161600e-06 * tc[1] -
                  5.46385800e-08 * tc[2] + 3.53108400e-11 * tc[3];
    // species 30: NXC3H7
    species[30] = +2.47892700e-02 + 3.62049800e-06 * tc[1] -
                  5.34979800e-08 * tc[2] + 3.43319840e-11 * tc[3];
    // species 31: C3H8
    species[31] = +2.66898600e-02 + 1.08628500e-05 * tc[1] -
                  6.37800300e-08 * tc[2] + 3.69733200e-11 * tc[3];
  } else {
    // species 0: N2
    species[0] = +1.48797700e-03 - 1.13695220e-06 * tc[1] +
                 3.02911200e-10 * tc[2] - 2.70134040e-14 * tc[3];
    // species 1: O
    species[1] = -2.75506200e-05 - 6.20560600e-09 * tc[1] +
                 1.36532010e-11 * tc[2] - 1.74722080e-15 * tc[3];
    // species 4: H2
    species[4] = +7.00064400e-04 - 1.12676580e-07 * tc[1] -
                 2.76947340e-11 * tc[2] + 6.33100800e-15 * tc[3];
    // species 5: O2
    species[5] = +6.13519700e-04 - 2.51768400e-07 * tc[1] +
                 5.32584300e-11 * tc[2] - 4.54574000e-15 * tc[3];
    // species 6: H2O
    species[6] = +3.05629300e-03 - 1.74605200e-06 * tc[1] +
                 3.60298800e-10 * tc[2] - 2.55664720e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.33613600e-03 - 2.94937800e-06 * tc[1] +
                 7.04671200e-10 * tc[2] - 5.72661600e-14 * tc[3];
    // species 9: CH2GSG
    species[9] = +2.06678800e-03 - 3.82823200e-07 * tc[1] -
                 3.31401900e-10 * tc[2] + 8.08540000e-14 * tc[3];
    // species 10: CH2O
    species[10] = +6.68132100e-03 - 5.25791000e-06 * tc[1] +
                  1.42114590e-09 * tc[2] - 1.28500680e-13 * tc[3];
    // species 11: CH3
    species[11] = +6.13797400e-03 - 4.46069000e-06 * tc[1] +
                  1.13554830e-09 * tc[2] - 9.80863600e-14 * tc[3];
    // species 12: CO
    species[12] = +1.44268900e-03 - 1.12616560e-06 * tc[1] +
                  3.05574300e-10 * tc[2] - 2.76438080e-14 * tc[3];
    // species 13: CH3O
    species[13] = +7.87149700e-03 - 5.31276800e-06 * tc[1] +
                  1.18332930e-09 * tc[2] - 8.45046400e-14 * tc[3];
    // species 14: C2H5
    species[14] = +6.48407700e-03 - 1.28561300e-06 * tc[1] -
                  7.04363700e-10 * tc[2] + 1.55235080e-13 * tc[3];
    // species 15: CH4
    species[15] = +1.02372400e-02 - 7.75025800e-06 * tc[1] +
                  2.03567550e-09 * tc[2] - 1.80136920e-13 * tc[3];
    // species 16: C2H4
    species[16] = +1.14851800e-02 - 8.83677000e-06 * tc[1] +
                  2.35338030e-09 * tc[2] - 2.10673920e-13 * tc[3];
    // species 18: CO2
    species[18] = +3.14016900e-03 - 2.55682200e-06 * tc[1] +
                  7.18199100e-10 * tc[2] - 6.67613200e-14 * tc[3];
    // species 19: HCO
    species[19] = +3.34557300e-03 - 2.67001200e-06 * tc[1] +
                  7.41171900e-10 * tc[2] - 6.85540400e-14 * tc[3];
    // species 22: C2H2
    species[22] = +5.37603900e-03 - 3.82563400e-06 * tc[1] +
                  9.85913700e-10 * tc[2] - 8.62684000e-14 * tc[3];
    // species 23: HCCO
    species[23] = +2.00040000e-03 - 4.05521400e-07 * tc[1] -
                  3.12339600e-10 * tc[2] + 7.86066000e-14 * tc[3];
    // species 24: C2H3
    species[24] = +4.01774600e-03 - 7.93348000e-07 * tc[1] -
                  4.32380100e-10 * tc[2] + 9.51457600e-14 * tc[3];
    // species 25: CH2CHO
    species[25] = +8.13059100e-03 - 5.48724800e-06 * tc[1] +
                  1.22109120e-09 * tc[2] - 8.70406800e-14 * tc[3];
    // species 29: IXC3H7
    species[29] = +1.57448800e-02 - 1.03647840e-05 * tc[1] +
                  2.24317350e-09 * tc[2] - 1.54176880e-13 * tc[3];
    // species 30: NXC3H7
    species[30] = +1.57611300e-02 - 1.03464860e-05 * tc[1] +
                  2.23316760e-09 * tc[2] - 1.52999120e-13 * tc[3];
    // species 31: C3H8
    species[31] = +1.88903400e-02 - 1.25678480e-05 * tc[1] +
                  2.75381190e-09 * tc[2] - 1.92496400e-13 * tc[3];
  }

  // species with no change at a midpoint T
  // species 2: H
  species[2] = +0.00000000e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3];

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 3: OH
    species[3] = +2.02235804e-04 - 2.27092824e-07 * tc[1] +
                 7.27335447e-10 * tc[2] - 2.97460412e-13 * tc[3];
  } else {
    // species 3: OH
    species[3] = +1.31992406e-03 - 7.19449340e-07 * tc[1] +
                 1.27689240e-10 * tc[2] - 7.28192064e-15 * tc[3];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: HO2
    species[8] = +3.66767950e-03 - 1.86477024e-06 * tc[1] -
                 9.77558757e-10 * tc[2] + 6.04559648e-13 * tc[3];
    // species 21: CH3O2H
    species[21] = +1.90129767e-02 - 2.26772574e-05 * tc[1] +
                  1.02091996e-08 * tc[2] - 1.64732089e-12 * tc[3];
  } else {
    // species 8: HO2
    species[8] = +2.38452835e-03 - 1.61269598e-06 * tc[1] +
                 3.72575169e-10 * tc[2] - 2.86560043e-14 * tc[3];
    // species 21: CH3O2H
    species[21] = +8.06817909e-03 - 5.54189842e-06 * tc[1] +
                  1.29399673e-09 * tc[2] - 1.00276858e-13 * tc[3];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 17: C2H6
    species[17] = +2.40764754e-02 - 2.23786944e-05 * tc[1] +
                  6.25022703e-09 * tc[2] - 2.11947446e-13 * tc[3];
    // species 33: NXC3H7O2
    species[33] = +3.96164986e-02 - 4.98983198e-05 * tc[1] +
                  2.57835090e-08 * tc[2] - 5.24961320e-12 * tc[3];
  } else {
    // species 17: C2H6
    species[17] = +1.29236361e-02 - 8.85054392e-06 * tc[1] +
                  2.06217518e-09 * tc[2] - 1.59560693e-13 * tc[3];
    // species 33: NXC3H7O2
    species[33] = +1.69910726e-02 - 1.17773375e-05 * tc[1] +
                  2.76658619e-09 * tc[2] - 2.15292270e-13 * tc[3];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 20: CH3O2
    species[20] = +1.00873599e-02 - 6.43012368e-06 * tc[1] +
                  6.28227801e-10 * tc[2] + 1.67335641e-13 * tc[3];
  } else {
    // species 20: CH3O2
    species[20] = +7.90728626e-03 - 5.36492468e-06 * tc[1] +
                  1.24167401e-09 * tc[2] - 9.56029320e-14 * tc[3];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 26: C3H5XA
    species[26] = +3.34559100e-02 - 5.06802054e-05 * tc[1] +
                  3.08597262e-08 * tc[2] - 6.93033360e-12 * tc[3];
  } else {
    // species 26: C3H5XA
    species[26] = +1.12695483e-02 - 7.67585728e-06 * tc[1] +
                  1.78217736e-09 * tc[2] - 1.37567212e-13 * tc[3];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 27: C3H6
    species[27] = +2.89107662e-02 - 3.09773616e-05 * tc[1] +
                  1.16644263e-08 * tc[2] - 1.35156141e-12 * tc[3];
    // species 32: IXC3H7O2
    species[32] = +4.43081205e-02 - 6.44828912e-05 * tc[1] +
                  3.89061408e-08 * tc[2] - 8.93482276e-12 * tc[3];
  } else {
    // species 27: C3H6
    species[27] = +1.37023634e-02 - 9.32499466e-06 * tc[1] +
                  2.16376321e-09 * tc[2] - 1.66948050e-13 * tc[3];
    // species 32: IXC3H7O2
    species[32] = +1.64082190e-02 - 1.13486412e-05 * tc[1] +
                  2.66200902e-09 * tc[2] - 2.06944614e-13 * tc[3];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 28: C3H5O
    species[28] = +3.05579837e-02 - 3.61260552e-05 * tc[1] +
                  1.45845010e-08 * tc[2] - 1.67941825e-12 * tc[3];
  } else {
    // species 28: C3H5O
    species[28] = +1.14983720e-02 - 7.69291318e-06 * tc[1] +
                  1.76673104e-09 * tc[2] - 1.35423169e-13 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 1225; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[34];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 34; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[34];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[34];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[34];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 6: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 123600000 * exp(-0.37 * tc[0]);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 3.041e+30 * exp(-4.63 * tc[0] - (1031.09094823387) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.63 * invT + (1031.09094823387) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.47) * exp(-T / 100);
  Fcent2 = 0.47 * exp(-T / 2000);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 2000 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(2.000000 * g_RT[3] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] -= 2 * q; // OH
  wdot[7] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac + k_f * 2.000000 * sc[3];
  dqdc[4] = 2.5 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 12 * dcdc_fac;
  dqdc[7] = dcdc_fac - k_r;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 1.9 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = 3.8 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 3] += -2 * dqdc[k];
    J[35 * k + 7] += dqdc[k];
  }
  J[1193] += -2 * dqdT; // dwdot[OH]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT

  // reaction 12: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 1475000 * exp(0.6 * tc[0]);
  dlnkfdT = 0.6 * invT;
  // pressure-fall-off
  k_0 = 3.5e+16 * exp(-0.41 * tc[0] - (-561.549541704803) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.41 * invT + (-561.549541704803) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = exp(-1e+100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 1e+30 + Fcent3 * 1e+100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(g_RT[2] + g_RT[5] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[5]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q; // H
  wdot[5] -= q; // O2
  wdot[8] += q; // HO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac + k_f * sc[5];
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2.5 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[2];
  dqdc[6] = 12 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac - k_r;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 1.9 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = 3.8 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 5] -= dqdc[k];
    J[35 * k + 8] += dqdc[k];
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 45: CH3 + H (+M) => CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 2138000000 * exp(-0.4 * tc[0]);
  dlnkfdT = -0.4 * invT;
  // pressure-fall-off
  k_0 = 3.31e+30 * exp(-4 * tc[0] - (1060.79582801632) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4 * invT + (1060.79582801632) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.;
  Fcent3 = exp(-40 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (+Fcent3 * 40 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // H
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac + k_f * sc[11];
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 5 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * sc[2];
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = 3 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 11] -= dqdc[k];
    J[35 * k + 15] += dqdc[k];
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 46: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 92140000000 * exp(-1.17 * tc[0] - (319.925027452009) * invT);
  dlnkfdT = -1.17 * invT + (319.925027452009) * invT2;
  // pressure-fall-off
  k_0 = 1.135e+36 * exp(-5.246 * tc[0] - (858.019640363653) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.246 * invT + (858.019640363653) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.405) * exp(-T / 1120);
  Fcent2 = 0.405 * exp(-T / 69.6);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1120 - Fcent2 / 69.6 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(2.000000 * g_RT[11] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= 2 * q; // CH3
  wdot[17] += q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 5 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac + k_f * 2.000000 * sc[11];
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac - k_r;
  dqdc[18] = 3 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 11] += -2 * dqdc[k];
    J[35 * k + 17] += dqdc[k];
  }
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1207] += dqdT;      // dwdot[C2H6]/dT

  // reaction 60: CO + O (+M) => CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 18000 * exp(-(1199.70878861172) * invT);
  dlnkfdT = (1199.70878861172) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.788 * tc[0] - (2108.96594988761) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.788 * invT + (2108.96594988761) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // O
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[12];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2.5 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 12 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 1.9 * dcdc_fac + k_f * sc[1];
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = 3.8 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 1] -= dqdc[k];
    J[35 * k + 12] -= dqdc[k];
    J[35 * k + 18] += dqdc[k];
  }
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 75: CH3O (+M) => CH2O + H (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  dlnkfdT = (6793.42498836372) * invT2;
  // pressure-fall-off
  k_0 = 2.344e+25 * exp(-2.7 * tc[0] - (15398.3796519578) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.7 * invT + (15398.3796519578) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // H
  wdot[10] += q; // CH2O
  wdot[13] -= q; // CH3O
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac + k_f;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] += dqdc[k];
    J[35 * k + 10] += dqdc[k];
    J[35 * k + 13] -= dqdc[k];
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 92: C2H3 (+M) => C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = sc[24];
  k_f = 16060000000 * exp(1.028 * tc[0] - (20382.0815129214) * invT);
  dlnkfdT = 1.028 * invT + (20382.0815129214) * invT2;
  // pressure-fall-off
  k_0 = 1.164e+39 * exp(-6.821 * tc[0] - (22388.9297048172) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.821 * invT + (22388.9297048172) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 1 * exp(-T / 675);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 675 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // H
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 5 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = 2 * dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = 3 * dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac + k_f;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] += dqdc[k];
    J[35 * k + 22] += dqdc[k];
    J[35 * k + 24] -= dqdc[k];
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 94: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 1081000 * exp(0.45 * tc[0] - (916.830572096251) * invT);
  dlnkfdT = 0.45 * invT + (916.830572096251) * invT2;
  // pressure-fall-off
  k_0 = 1.112e+34 * exp(-5 * tc[0] - (2238.25740783281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5 * invT + (2238.25740783281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 1 * exp(-T / 95);
  Fcent3 = exp(-200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 95 + Fcent3 * 200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[2] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // H
  wdot[14] += q; // C2H5
  wdot[16] -= q; // C2H4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac + k_f * sc[16];
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac - k_r;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac + k_f * sc[2];
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 14] += dqdc[k];
    J[35 * k + 16] -= dqdc[k];
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT

  // reaction 103: C2H4 (+M) => C2H2 + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[16];
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  dlnkfdT = (38244.4666011587) * invT2;
  // pressure-fall-off
  k_0 = 1.5e+15 * exp(-(27898.3369843803) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (27898.3369843803) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[4] += q;  // H2
  wdot[16] -= q; // C2H4
  wdot[22] += q; // C2H2
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac + k_f;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 4] += dqdc[k];
    J[35 * k + 16] -= dqdc[k];
    J[35 * k + 22] += dqdc[k];
  }
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT

  // reaction 0: H + O + M => OH + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 4720000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * sc[2];
  dqdc[2] = q_nocor + k_f * sc[1];
  dqdc[3] = q_nocor;
  dqdc[4] = 2.5 * q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 12 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = 1.9 * q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = 3.8 * q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 1] -= dqdc[k];
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 3] += dqdc[k];
  }
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT

  // reaction 3: 2 O + M => O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = (sc[1] * sc[1]);
  k_f = 6170 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= 2 * q; // O
  wdot[5] += q;     // O2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * 2.000000 * sc[1];
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = 2.5 * q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 12 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = 1.9 * q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = 3.8 * q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 1] += -2 * dqdc[k];
    J[35 * k + 5] += dqdc[k];
  }
  J[1191] += -2 * dqdT; // dwdot[O]/dT
  J[1195] += dqdT;      // dwdot[O2]/dT

  // reaction 7: H + OH + M => H2O + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 22500000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor + k_f * sc[3];
  dqdc[3] = q_nocor + k_f * sc[2];
  dqdc[4] = 2.5 * q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 12 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = 1.9 * q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = 3.8 * q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 3] -= dqdc[k];
    J[35 * k + 6] += dqdc[k];
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT

  // reaction 66: HCO + M => CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (6 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[19];
  k_f = 186000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = 2.5 * q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 6 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = 1.9 * q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = 3.8 * q_nocor;
  dqdc[19] = q_nocor + k_f;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] += dqdc[k];
    J[35 * k + 12] += dqdc[k];
    J[35 * k + 19] -= dqdc[k];
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 67: CO + H + M => HCO + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (6 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 64.67 * exp(-(-222.381508952422) * invT);
  dlnkfdT = (-222.381508952422) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[12] -= q; // CO
  wdot[19] += q; // HCO
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor + k_f * sc[12];
  dqdc[3] = q_nocor;
  dqdc[4] = 2.5 * q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 6 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = 1.9 * q_nocor + k_f * sc[2];
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = 3.8 * q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 2] -= dqdc[k];
    J[35 * k + 12] -= dqdc[k];
    J[35 * k + 19] += dqdc[k];
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 82: CH3O2 + M => CH3 + O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[20];
  k_f = 4.343e+21 * exp(-3.42 * tc[0] - (15332.9564532366) * invT);
  dlnkfdT = -3.42 * invT + (15332.9564532366) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[11] += q; // CH3
  wdot[20] -= q; // CH3O2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor + k_f;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 5] += dqdc[k];
    J[35 * k + 11] += dqdc[k];
    J[35 * k + 20] -= dqdc[k];
  }
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT

  // reaction 83: CH3 + O2 + M => CH3O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 54400000000000 * exp(-3.3 * tc[0]);
  dlnkfdT = -3.3 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[20] += q; // CH3O2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor + k_f * sc[11];
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor + k_f * sc[5];
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  for (int k = 0; k < 34; k++) {
    J[35 * k + 5] -= dqdc[k];
    J[35 * k + 11] -= dqdc[k];
    J[35 * k + 20] += dqdc[k];
  }
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1210] += dqdT; // dwdot[CH3O2]/dT

  // reaction 1: H2 + O => H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 0.0508 * exp(2.67 * tc[0] - (3166.2744864099) * invT);
  dlnkfdT = 2.67 * invT + (3166.2744864099) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] += q; // H
  wdot[3] += q; // OH
  wdot[4] -= q; // H2
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[39] -= dqdci; // dwdot[H2]/d[O]
  // d()/d[H2]
  dqdci = +k_f * sc[1];
  J[141] -= dqdci; // dwdot[O]/d[H2]
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[143] += dqdci; // dwdot[OH]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT

  // reaction 2: H + OH => H2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 0.02231 * exp(2.67 * tc[0] - (2111.97015338246) * invT);
  dlnkfdT = 2.67 * invT + (2111.97015338246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[2] -= q; // H
  wdot[3] -= q; // OH
  wdot[4] += q; // H2
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[71] += dqdci; // dwdot[O]/d[H]
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] -= dqdci; // dwdot[OH]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[107] -= dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] += dqdci; // dwdot[H2]/d[OH]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT

  // reaction 4: H2 + OH => H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 216 * exp(1.51 * tc[0] - (1726.01806721021) * invT);
  dlnkfdT = 1.51 * invT + (1726.01806721021) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // H
  wdot[3] -= q; // OH
  wdot[4] -= q; // H2
  wdot[6] += q; // H2O
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] -= dqdci; // dwdot[H2]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[143] -= dqdci; // dwdot[OH]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[146] += dqdci; // dwdot[H2O]/d[H2]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT

  // reaction 5: H + H2O => H2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 935.2 * exp(1.51 * tc[0] - (9349.8008758183) * invT);
  dlnkfdT = 1.51 * invT + (9349.8008758183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[4] += q; // H2
  wdot[6] -= q; // H2O
  // d()/d[H]
  dqdci = +k_f * sc[6];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[76] -= dqdci; // dwdot[H2O]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[2];
  J[212] -= dqdci; // dwdot[H]/d[H2O]
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[214] += dqdci; // dwdot[H2]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT

  // reaction 8: H2O + O => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 2.97 * exp(2.02 * tc[0] - (6743.15364344982) * invT);
  dlnkfdT = 2.02 * invT + (6743.15364344982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // O
  wdot[3] += 2 * q; // OH
  wdot[6] -= q;     // H2O
  // d()/d[O]
  dqdci = +k_f * sc[6];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[38] += 2 * dqdci; // dwdot[OH]/d[O]
  J[41] -= dqdci;     // dwdot[H2O]/d[O]
  // d()/d[H2O]
  dqdci = +k_f * sc[1];
  J[211] -= dqdci;     // dwdot[O]/d[H2O]
  J[213] += 2 * dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci;     // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1193] += 2 * dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT;     // dwdot[H2O]/dT

  // reaction 9: 2 OH => H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 0.3013 * exp(2.02 * tc[0] - (-1937.33384168159) * invT);
  dlnkfdT = 2.02 * invT + (-1937.33384168159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;     // O
  wdot[3] -= 2 * q; // OH
  wdot[6] += q;     // H2O
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[3];
  J[106] += dqdci;      // dwdot[O]/d[OH]
  J[108] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/dT
  J[1191] += dqdT;      // dwdot[O]/dT
  J[1193] += -2 * dqdT; // dwdot[OH]/dT
  J[1196] += dqdT;      // dwdot[H2O]/dT

  // reaction 10: H + O2 => O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 197000000 * exp(-(8323.15836291014) * invT);
  dlnkfdT = (8323.15836291014) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[5] -= q; // O2
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[71] += dqdci; // dwdot[O]/d[H]
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[75] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[177] -= dqdci; // dwdot[H]/d[O2]
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT

  // reaction 11: O + OH => H + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 15550000 * exp(-(213.841922133716) * invT);
  dlnkfdT = (213.841922133716) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] += q; // H
  wdot[3] -= q; // OH
  wdot[5] += q; // O2
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[38] -= dqdci; // dwdot[OH]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = +k_f * sc[1];
  J[106] -= dqdci; // dwdot[O]/d[OH]
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] += dqdci; // dwdot[O2]/d[OH]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT

  // reaction 13: H + HO2 => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 70800000 * exp(-(150.939838908126) * invT);
  dlnkfdT = (150.939838908126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // H
  wdot[3] += 2 * q; // OH
  wdot[8] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[72] -= dqdci;     // dwdot[H]/d[H]
  J[73] += 2 * dqdci; // dwdot[OH]/d[H]
  J[78] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[282] -= dqdci;     // dwdot[H]/d[HO2]
  J[283] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] -= dqdT;     // dwdot[H]/dT
  J[1193] += 2 * dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT;     // dwdot[HO2]/dT

  // reaction 14: 2 HO2 => H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[8] * sc[8]);
  k_f = 420000000 * exp(-(6028.49539900728) * invT);
  dlnkfdT = (6028.49539900728) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;     // O2
  wdot[7] += q;     // H2O2
  wdot[8] -= 2 * q; // HO2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[8];
  J[285] += dqdci;      // dwdot[O2]/d[HO2]
  J[287] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[288] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT
  J[1198] += -2 * dqdT; // dwdot[HO2]/dT

  // reaction 15: H + HO2 => H2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 16600000 * exp(-(412.652762459844) * invT);
  dlnkfdT = (412.652762459844) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[4] += q; // H2
  wdot[5] += q; // O2
  wdot[8] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[75] += dqdci; // dwdot[O2]/d[H]
  J[78] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[282] -= dqdci; // dwdot[H]/d[HO2]
  J[284] += dqdci; // dwdot[H2]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 16: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[8];
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  dlnkfdT = (-251.60833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[5] += q; // O2
  wdot[6] += q; // H2O
  wdot[8] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] += dqdci; // dwdot[O2]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[113] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[283] -= dqdci; // dwdot[OH]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[286] += dqdci; // dwdot[H2O]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 17: H2O + O2 => HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 6888000000 * exp(-0.33 * tc[0] - (36302.0804641524) * invT);
  dlnkfdT = -0.33 * invT + (36302.0804641524) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // OH
  wdot[5] -= q; // O2
  wdot[6] -= q; // H2O
  wdot[8] += q; // HO2
  // d()/d[O2]
  dqdci = +k_f * sc[6];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[181] -= dqdci; // dwdot[H2O]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  // d()/d[H2O]
  dqdci = +k_f * sc[5];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[215] -= dqdci; // dwdot[O2]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[218] += dqdci; // dwdot[HO2]/d[H2O]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 18: 2 HO2 => H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[8] * sc[8]);
  k_f = 130000 * exp(-(-819.770141595837) * invT);
  dlnkfdT = (-819.770141595837) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;     // O2
  wdot[7] += q;     // H2O2
  wdot[8] -= 2 * q; // HO2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[8];
  J[285] += dqdci;      // dwdot[O2]/d[HO2]
  J[287] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[288] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT
  J[1198] += -2 * dqdT; // dwdot[HO2]/dT

  // reaction 19: HO2 + O => O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 32500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[3] += q; // OH
  wdot[5] += q; // O2
  wdot[8] -= q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[8];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[43] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[281] -= dqdci; // dwdot[O]/d[HO2]
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 20: O2 + OH => HO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 785700000 * exp(-0.33 * tc[0] - (27873.2013119234) * invT);
  dlnkfdT = -0.33 * invT + (27873.2013119234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[3] -= q; // OH
  wdot[5] -= q; // O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[5];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] -= dqdci; // dwdot[O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[3];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[178] -= dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 21: H2O2 + OH => H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[112] -= dqdci; // dwdot[H2O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[248] -= dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 22: H + H2O2 => H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 24100000 * exp(-(1997.7148094115) * invT);
  dlnkfdT = (1997.7148094115) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[76] += dqdci; // dwdot[H2O]/d[H]
  J[77] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[247] -= dqdci; // dwdot[H]/d[H2O2]
  J[248] += dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT

  // reaction 23: H2O2 + OH => H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 580000000 * exp(-(4810.74629292646) * invT);
  dlnkfdT = (4810.74629292646) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[112] -= dqdci; // dwdot[H2O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[248] -= dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 24: H2O + HO2 => H2O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[8];
  k_f = 97710000 * exp(0.33 * tc[0] - (20641.9878886429) * invT);
  dlnkfdT = 0.33 * invT + (20641.9878886429) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // OH
  wdot[6] -= q; // H2O
  wdot[7] += q; // H2O2
  wdot[8] -= q; // HO2
  // d()/d[H2O]
  dqdci = +k_f * sc[8];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[217] += dqdci; // dwdot[H2O2]/d[H2O]
  J[218] -= dqdci; // dwdot[HO2]/d[H2O]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[286] -= dqdci; // dwdot[H2O]/d[HO2]
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 25: H2O2 + O => HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 9.55 * exp(2 * tc[0] - (1997.7148094115) * invT);
  dlnkfdT = 2 * invT + (1997.7148094115) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[3] += q; // OH
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[42] -= dqdci; // dwdot[H2O2]/d[O]
  J[43] += dqdci; // dwdot[HO2]/d[O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[246] -= dqdci; // dwdot[O]/d[H2O2]
  J[248] += dqdci; // dwdot[OH]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 26: H + H2O2 => H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 48200000 * exp(-(4000.59765398081) * invT);
  dlnkfdT = (4000.59765398081) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[4] += q; // H2
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[77] -= dqdci; // dwdot[H2O2]/d[H]
  J[78] += dqdci; // dwdot[HO2]/d[H]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[247] -= dqdci; // dwdot[H]/d[H2O2]
  J[249] += dqdci; // dwdot[H2]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 27: H2 + HO2 => H + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[8];
  k_f = 1875000 * exp(0.33 * tc[0] - (12208.0564410891) * invT);
  dlnkfdT = 0.33 * invT + (12208.0564410891) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // H
  wdot[4] -= q; // H2
  wdot[7] += q; // H2O2
  wdot[8] -= q; // HO2
  // d()/d[H2]
  dqdci = +k_f * sc[8];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[147] += dqdci; // dwdot[H2O2]/d[H2]
  J[148] -= dqdci; // dwdot[HO2]/d[H2]
  // d()/d[HO2]
  dqdci = +k_f * sc[4];
  J[282] += dqdci; // dwdot[H]/d[HO2]
  J[284] -= dqdci; // dwdot[H2]/d[HO2]
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 28: CH2GSG + OH => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] -= q;  // OH
  wdot[9] -= q;  // CH2GSG
  wdot[10] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[114] -= dqdci; // dwdot[CH2GSG]/d[OH]
  J[115] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[3];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[318] -= dqdci; // dwdot[OH]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[325] += dqdci; // dwdot[CH2O]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT

  // reaction 29: CH2GSG + H2 => CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  // d()/d[H2]
  dqdci = +k_f * sc[9];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[149] -= dqdci; // dwdot[CH2GSG]/d[H2]
  J[151] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[4];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[319] -= dqdci; // dwdot[H2]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT

  // reaction 30: CH3 + H => CH2GSG + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 248200000000 * exp(-0.89 * tc[0] - (8116.89488376345) * invT);
  dlnkfdT = -0.89 * invT + (8116.89488376345) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[9] += q;  // CH2GSG
  wdot[11] -= q; // CH3
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[79] += dqdci; // dwdot[CH2GSG]/d[H]
  J[81] -= dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[387] -= dqdci; // dwdot[H]/d[CH3]
  J[389] += dqdci; // dwdot[H2]/d[CH3]
  J[394] += dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 31: CH2GSG + O2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[9] -= q;  // CH2GSG
  wdot[12] += q; // CO
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[177] += dqdci; // dwdot[H]/d[O2]
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[184] -= dqdci; // dwdot[CH2GSG]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[5];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[318] += dqdci; // dwdot[OH]/d[CH2GSG]
  J[320] -= dqdci; // dwdot[O2]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[327] += dqdci; // dwdot[CO]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1202] += dqdT; // dwdot[CO]/dT

  // reaction 32: CH2GSG + O => CO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // O
  wdot[2] += 2 * q; // H
  wdot[9] -= q;     // CH2GSG
  wdot[12] += q;    // CO
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[37] += 2 * dqdci; // dwdot[H]/d[O]
  J[44] -= dqdci;     // dwdot[CH2GSG]/d[O]
  J[47] += dqdci;     // dwdot[CO]/d[O]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[1];
  J[316] -= dqdci;     // dwdot[O]/d[CH2GSG]
  J[317] += 2 * dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci;     // dwdot[CH2GSG]/d[CH2GSG]
  J[327] += dqdci;     // dwdot[CO]/d[CH2GSG]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1192] += 2 * dqdT; // dwdot[H]/dT
  J[1199] -= dqdT;     // dwdot[CH2GSG]/dT
  J[1202] += dqdT;     // dwdot[CO]/dT

  // reaction 33: CH3 + HO2 => CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[13] += q; // CH3O
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[291] -= dqdci; // dwdot[CH3]/d[HO2]
  J[293] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[393] -= dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[398] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT

  // reaction 34: CH3 + O2 => CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  dlnkfdT = (7170.83748771726) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[186] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[5];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[390] -= dqdci; // dwdot[O2]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 35: CH3 + O2 => CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 1995000000000 * exp(-1.57 * tc[0] - (14699.0040976558) * invT);
  dlnkfdT = -1.57 * invT + (14699.0040976558) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[13] += q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[186] -= dqdci; // dwdot[CH3]/d[O2]
  J[188] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[5];
  J[386] += dqdci; // dwdot[O]/d[CH3]
  J[390] -= dqdci; // dwdot[O2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[398] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT

  // reaction 36: CH3O + O => CH3 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 3585000000000 * exp(-1.59 * tc[0] - (-820.736317594182) * invT);
  dlnkfdT = -1.59 * invT + (-820.736317594182) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[5] += q;  // O2
  wdot[11] += q; // CH3
  wdot[13] -= q; // CH3O
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[48] -= dqdci; // dwdot[CH3O]/d[O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[456] -= dqdci; // dwdot[O]/d[CH3O]
  J[460] += dqdci; // dwdot[O2]/d[CH3O]
  J[466] += dqdci; // dwdot[CH3]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 37: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 6840000 * exp(0.1 * tc[0] - (5334.04633586345) * invT);
  dlnkfdT = 0.1 * invT + (5334.04633586345) * invT2;
  // reverse
  phi_r = sc[2] * sc[14];
  Kc = exp(-g_RT[2] + 2.000000 * g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[2] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;      // H
  wdot[11] -= 2 * q; // CH3
  wdot[14] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[72] += dqdci;      // dwdot[H]/d[H]
  J[81] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[84] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[387] += dqdci;      // dwdot[H]/d[CH3]
  J[396] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[399] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[2];
  J[492] += dqdci;      // dwdot[H]/d[C2H5]
  J[501] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[504] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1192] += dqdT;      // dwdot[H]/dT
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT;      // dwdot[C2H5]/dT

  // reaction 38: CH3 + HO2 => CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 3600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[291] -= dqdci; // dwdot[CH3]/d[HO2]
  J[295] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[390] += dqdci; // dwdot[O2]/d[CH3]
  J[393] -= dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 39: CH3 + O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[11];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[45] += dqdci; // dwdot[CH2O]/d[O]
  J[46] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[1];
  J[386] -= dqdci; // dwdot[O]/d[CH3]
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 40: CH3 + OH => CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 22500000 * exp(-(2163.806502127) * invT);
  dlnkfdT = (2163.806502127) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[4] += q;  // H2
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] += dqdci; // dwdot[H2]/d[OH]
  J[115] += dqdci; // dwdot[CH2O]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[389] += dqdci; // dwdot[H2]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 41: CH3 + OH => CH2GSG + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 26500000 * exp(-(1100.00647061583) * invT);
  dlnkfdT = (1100.00647061583) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[9] += q;  // CH2GSG
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[114] += dqdci; // dwdot[CH2GSG]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[391] += dqdci; // dwdot[H2O]/d[CH3]
  J[394] += dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 42: CH2GSG + H2O => CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 32360 * exp(0.89 * tc[0] - (609.415510956148) * invT);
  dlnkfdT = 0.89 * invT + (609.415510956148) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  // d()/d[H2O]
  dqdci = +k_f * sc[9];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[219] -= dqdci; // dwdot[CH2GSG]/d[H2O]
  J[221] += dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[6];
  J[318] += dqdci; // dwdot[OH]/d[CH2GSG]
  J[321] -= dqdci; // dwdot[H2O]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT

  // reaction 43: CH3 + H2O2 => CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 336500 * exp(-0.33 * tc[0] - (1259.00280834349) * invT);
  dlnkfdT = -0.33 * invT + (1259.00280834349) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // H2O2
  wdot[8] += q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2O2]
  dqdci = +k_f * sc[11];
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  J[256] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[260] += dqdci; // dwdot[CH4]/d[H2O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[392] -= dqdci; // dwdot[H2O2]/d[CH3]
  J[393] += dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 44: CH2GSG + CH3 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[9] -= q;  // CH2GSG
  wdot[11] -= q; // CH3
  wdot[16] += q; // C2H4
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[11];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] -= dqdci; // dwdot[CH3]/d[CH2GSG]
  J[331] += dqdci; // dwdot[C2H4]/d[CH2GSG]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[394] -= dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 47: CH2GSG + CH4 => 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;      // CH2GSG
  wdot[11] += 2 * q; // CH3
  wdot[15] -= q;     // CH4
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[15];
  J[324] -= dqdci;     // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += 2 * dqdci; // dwdot[CH3]/d[CH2GSG]
  J[330] -= dqdci;     // dwdot[CH4]/d[CH2GSG]
  // d()/d[CH4]
  dqdci = +k_f * sc[9];
  J[534] -= dqdci;     // dwdot[CH2GSG]/d[CH4]
  J[536] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1199] -= dqdT;     // dwdot[CH2GSG]/dT
  J[1201] += 2 * dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT;     // dwdot[CH4]/dT

  // reaction 48: 2 CH3 => CH2GSG + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 5429000000 * exp(-0.89 * tc[0] - (7875.39114151044) * invT);
  dlnkfdT = -0.89 * invT + (7875.39114151044) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // CH2GSG
  wdot[11] -= 2 * q; // CH3
  wdot[15] += q;     // CH4
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[394] += dqdci;      // dwdot[CH2GSG]/d[CH3]
  J[396] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci;      // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1199] += dqdT;      // dwdot[CH2GSG]/dT
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT;      // dwdot[CH4]/dT

  // reaction 49: CH4 + O => CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 3150000 * exp(0.5 * tc[0] - (5178.05420163064) * invT);
  dlnkfdT = 0.5 * invT + (5178.05420163064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[15];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[50] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[CH4]
  dqdci = +k_f * sc[1];
  J[526] -= dqdci; // dwdot[O]/d[CH4]
  J[528] += dqdci; // dwdot[OH]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 50: CH3 + OH => CH4 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 52960 * exp(0.5 * tc[0] - (3882.37193051665) * invT);
  dlnkfdT = 0.5 * invT + (3882.37193051665) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[3] -= q;  // OH
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  J[120] += dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[386] += dqdci; // dwdot[O]/d[CH3]
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 51: CH4 + H => CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 0.01727 * exp(3 * tc[0] - (4138.42869874472) * invT);
  dlnkfdT = 3 * invT + (4138.42869874472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[81] += dqdci; // dwdot[CH3]/d[H]
  J[85] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[527] -= dqdci; // dwdot[H]/d[CH4]
  J[529] += dqdci; // dwdot[H2]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 52: CH3 + H2 => CH4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 0.000661 * exp(3 * tc[0] - (3896.91992432507) * invT);
  dlnkfdT = 3 * invT + (3896.91992432507) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2]
  dqdci = +k_f * sc[11];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[151] -= dqdci; // dwdot[CH3]/d[H2]
  J[155] += dqdci; // dwdot[CH4]/d[H2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[389] -= dqdci; // dwdot[H2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 53: CH4 + OH => CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 0.193 * exp(2.4 * tc[0] - (1059.83468418464) * invT);
  dlnkfdT = 2.4 * invT + (1059.83468418464) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[15];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[116] += dqdci; // dwdot[CH3]/d[OH]
  J[120] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[528] -= dqdci; // dwdot[OH]/d[CH4]
  J[531] += dqdci; // dwdot[H2O]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 54: CH3 + H2O => CH4 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 0.03199 * exp(2.4 * tc[0] - (8444.03100603644) * invT);
  dlnkfdT = 2.4 * invT + (8444.03100603644) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2O]
  dqdci = +k_f * sc[11];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[221] -= dqdci; // dwdot[CH3]/d[H2O]
  J[225] += dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[391] -= dqdci; // dwdot[H2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 55: CO + HO2 => CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[12];
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  dlnkfdT = (11573.9833135086) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[292] -= dqdci; // dwdot[CO]/d[HO2]
  J[298] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[8];
  J[423] += dqdci; // dwdot[OH]/d[CO]
  J[428] -= dqdci; // dwdot[HO2]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 56: CO + O2 => CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[12];
  k_f = 16200000 * exp(-(24003.4601197184) * invT);
  dlnkfdT = (24003.4601197184) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[187] -= dqdci; // dwdot[CO]/d[O2]
  J[193] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[CO]
  dqdci = +k_f * sc[5];
  J[421] += dqdci; // dwdot[O]/d[CO]
  J[425] -= dqdci; // dwdot[O2]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 57: CO2 + O => CO + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[18];
  k_f = 143300000 * exp(-(27133.4073950239) * invT);
  dlnkfdT = (27133.4073950239) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[5] += q;  // O2
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[47] += dqdci; // dwdot[CO]/d[O]
  J[53] -= dqdci; // dwdot[CO2]/d[O]
  // d()/d[CO2]
  dqdci = +k_f * sc[1];
  J[631] -= dqdci; // dwdot[O]/d[CO2]
  J[635] += dqdci; // dwdot[O2]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 58: CO + OH => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 0.14 * exp(1.95 * tc[0] - (-677.852977505589) * invT);
  dlnkfdT = 1.95 * invT + (-677.852977505589) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] -= q;  // OH
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[117] -= dqdci; // dwdot[CO]/d[OH]
  J[123] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[422] += dqdci; // dwdot[H]/d[CO]
  J[423] -= dqdci; // dwdot[OH]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 59: CO2 + H => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 15.68 * exp(1.95 * tc[0] - (10562.4976865744) * invT);
  dlnkfdT = 1.95 * invT + (10562.4976865744) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[3] += q;  // OH
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[88] -= dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = +k_f * sc[2];
  J[632] -= dqdci; // dwdot[H]/d[CO2]
  J[633] += dqdci; // dwdot[OH]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 61: CH3 + HCO => CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 121000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CO
  wdot[15] += q; // CH4
  wdot[19] -= q; // HCO
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[397] += dqdci; // dwdot[CO]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[404] -= dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[HCO]
  dqdci = +k_f * sc[11];
  J[676] -= dqdci; // dwdot[CH3]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[680] += dqdci; // dwdot[CH4]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 62: H + HCO => CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 73400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[19];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[89] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[667] -= dqdci; // dwdot[H]/d[HCO]
  J[669] += dqdci; // dwdot[H2]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 63: HCO + O2 => CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 7580000 * exp(-(206.263479146697) * invT);
  dlnkfdT = (206.263479146697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  J[194] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[5];
  J[670] -= dqdci; // dwdot[O2]/d[HCO]
  J[673] += dqdci; // dwdot[HO2]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 64: HCO + O => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[47] += dqdci; // dwdot[CO]/d[O]
  J[54] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[666] -= dqdci; // dwdot[O]/d[HCO]
  J[668] += dqdci; // dwdot[OH]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 65: HCO + O => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[18] += q; // CO2
  wdot[19] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[53] += dqdci; // dwdot[CO2]/d[O]
  J[54] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[666] -= dqdci; // dwdot[O]/d[HCO]
  J[667] += dqdci; // dwdot[H]/d[HCO]
  J[683] += dqdci; // dwdot[CO2]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 68: HCO + OH => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 102000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[19];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[117] += dqdci; // dwdot[CO]/d[OH]
  J[124] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[668] -= dqdci; // dwdot[OH]/d[HCO]
  J[671] += dqdci; // dwdot[H2O]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 69: CH2O + H => H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 933.4 * exp(1.5 * tc[0] - (1497.62311910143) * invT);
  dlnkfdT = 1.5 * invT + (1497.62311910143) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[10];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[80] -= dqdci; // dwdot[CH2O]/d[H]
  J[89] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[CH2O]
  dqdci = +k_f * sc[2];
  J[352] -= dqdci; // dwdot[H]/d[CH2O]
  J[354] += dqdci; // dwdot[H2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 70: CH2O + O2 => HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[10];
  k_f = 20500000 * exp(-(19600.3142939271) * invT);
  dlnkfdT = (19600.3142939271) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[185] -= dqdci; // dwdot[CH2O]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH2O]
  dqdci = +k_f * sc[5];
  J[355] -= dqdci; // dwdot[O2]/d[CH2O]
  J[358] += dqdci; // dwdot[HO2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 71: CH2O + OH => H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.907656614761) * invT);
  dlnkfdT = 1.18 * invT + (-224.907656614761) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[115] -= dqdci; // dwdot[CH2O]/d[OH]
  J[124] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[353] -= dqdci; // dwdot[OH]/d[CH2O]
  J[356] += dqdci; // dwdot[H2O]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 72: CH2O + HO2 => H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 5.82e-09 * exp(4.53 * tc[0] - (3299.53129168165) * invT);
  dlnkfdT = 4.53 * invT + (3299.53129168165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[HO2]
  dqdci = +k_f * sc[10];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[290] -= dqdci; // dwdot[CH2O]/d[HO2]
  J[299] += dqdci; // dwdot[HCO]/d[HO2]
  // d()/d[CH2O]
  dqdci = +k_f * sc[8];
  J[357] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[358] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 73: CH2O + O => HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[10];
  k_f = 416000 * exp(0.57 * tc[0] - (1389.85927011935) * invT);
  dlnkfdT = 0.57 * invT + (1389.85927011935) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[45] -= dqdci; // dwdot[CH2O]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2O]
  dqdci = +k_f * sc[1];
  J[351] -= dqdci; // dwdot[O]/d[CH2O]
  J[353] += dqdci; // dwdot[OH]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 74: CH2O + CH3 => CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 3.636e-12 * exp(5.42 * tc[0] - (502.255521973033) * invT);
  dlnkfdT = 5.42 * invT + (502.255521973033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[19] += q; // HCO
  // d()/d[CH2O]
  dqdci = +k_f * sc[11];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[361] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[365] += dqdci; // dwdot[CH4]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[395] -= dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[404] += dqdci; // dwdot[HCO]/d[CH3]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 76: CH3O + O2 => CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[13];
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  dlnkfdT = (1219.79719791064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[10] += q; // CH2O
  wdot[13] -= q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[13];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[188] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3O]
  dqdci = +k_f * sc[5];
  J[460] -= dqdci; // dwdot[O2]/d[CH3O]
  J[463] += dqdci; // dwdot[HO2]/d[CH3O]
  J[465] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 77: CH2GSG + CO2 => CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 3000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // CH2GSG
  wdot[10] += q; // CH2O
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[18];
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[325] += dqdci; // dwdot[CH2O]/d[CH2GSG]
  J[327] += dqdci; // dwdot[CO]/d[CH2GSG]
  J[333] -= dqdci; // dwdot[CO2]/d[CH2GSG]
  // d()/d[CO2]
  dqdci = +k_f * sc[9];
  J[639] -= dqdci; // dwdot[CH2GSG]/d[CO2]
  J[640] += dqdci; // dwdot[CH2O]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 78: CH3 + CH3O2 => 2 CH3O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[20];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q;     // CH3
  wdot[13] += 2 * q; // CH3O
  wdot[20] -= q;     // CH3O2
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[396] -= dqdci;     // dwdot[CH3]/d[CH3]
  J[398] += 2 * dqdci; // dwdot[CH3O]/d[CH3]
  J[405] -= dqdci;     // dwdot[CH3O2]/d[CH3]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[11];
  J[711] -= dqdci;     // dwdot[CH3]/d[CH3O2]
  J[713] += 2 * dqdci; // dwdot[CH3O]/d[CH3O2]
  J[720] -= dqdci;     // dwdot[CH3O2]/d[CH3O2]
  // d()/dT
  J[1201] -= dqdT;     // dwdot[CH3]/dT
  J[1203] += 2 * dqdT; // dwdot[CH3O]/dT
  J[1210] -= dqdT;     // dwdot[CH3O2]/dT

  // reaction 79: CH3O2 + HO2 => CH3O2H + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 17500 * exp(-(-1648.08490217704) * invT);
  dlnkfdT = (-1648.08490217704) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  // d()/d[HO2]
  dqdci = +k_f * sc[20];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[300] -= dqdci; // dwdot[CH3O2]/d[HO2]
  J[301] += dqdci; // dwdot[CH3O2H]/d[HO2]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[8];
  J[705] += dqdci; // dwdot[O2]/d[CH3O2]
  J[708] -= dqdci; // dwdot[HO2]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 80: 2 CH3O2 => 2 CH3O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[20] * sc[20]);
  k_f = 14000000000 * exp(-1.61 * tc[0] - (935.95280539683) * invT);
  dlnkfdT = -1.61 * invT + (935.95280539683) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;      // O2
  wdot[13] += 2 * q; // CH3O
  wdot[20] -= 2 * q; // CH3O2
  // d()/d[CH3O2]
  dqdci = +k_f * 2.000000 * sc[20];
  J[705] += dqdci;      // dwdot[O2]/d[CH3O2]
  J[713] += 2 * dqdci;  // dwdot[CH3O]/d[CH3O2]
  J[720] += -2 * dqdci; // dwdot[CH3O2]/d[CH3O2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1203] += 2 * dqdT;  // dwdot[CH3O]/dT
  J[1210] += -2 * dqdT; // dwdot[CH3O2]/dT

  // reaction 81: CH2O + CH3O2 => CH3O2H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 1990000 * exp(-(5867.45096944979) * invT);
  dlnkfdT = (5867.45096944979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  // d()/d[CH2O]
  dqdci = +k_f * sc[20];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  J[370] -= dqdci; // dwdot[CH3O2]/d[CH2O]
  J[371] += dqdci; // dwdot[CH3O2H]/d[CH2O]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[10];
  J[710] -= dqdci; // dwdot[CH2O]/d[CH3O2]
  J[719] += dqdci; // dwdot[HCO]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 84: CH3O2H => CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21];
  k_f = 631000000000000 * exp(-(21286.0398027063) * invT);
  dlnkfdT = (21286.0398027063) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[13] += q; // CH3O
  wdot[21] -= q; // CH3O2H
  // d()/d[CH3O2H]
  dqdci = +k_f;
  J[738] += dqdci; // dwdot[OH]/d[CH3O2H]
  J[748] += dqdci; // dwdot[CH3O]/d[CH3O2H]
  J[756] -= dqdci; // dwdot[CH3O2H]/d[CH3O2H]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT
  J[1211] -= dqdT; // dwdot[CH3O2H]/dT

  // reaction 85: CH3O + OH => CH3O2H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 116600 * exp(0.6 * tc[0] - (-891.211811640133) * invT);
  dlnkfdT = 0.6 * invT + (-891.211811640133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[13] -= q; // CH3O
  wdot[21] += q; // CH3O2H
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[118] -= dqdci; // dwdot[CH3O]/d[OH]
  J[126] += dqdci; // dwdot[CH3O2H]/d[OH]
  // d()/d[CH3O]
  dqdci = +k_f * sc[3];
  J[458] -= dqdci; // dwdot[OH]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  J[476] += dqdci; // dwdot[CH3O2H]/d[CH3O]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 86: C2H2 + O2 => HCCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 200 * exp(1.5 * tc[0] - (15146.7713190555) * invT);
  dlnkfdT = 1.5 * invT + (15146.7713190555) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[22] -= q; // C2H2
  wdot[23] += q; // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[22];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[197] -= dqdci; // dwdot[C2H2]/d[O2]
  J[198] += dqdci; // dwdot[HCCO]/d[O2]
  // d()/d[C2H2]
  dqdci = +k_f * sc[5];
  J[773] += dqdci; // dwdot[OH]/d[C2H2]
  J[775] -= dqdci; // dwdot[O2]/d[C2H2]
  J[792] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[793] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1212] -= dqdT; // dwdot[C2H2]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 87: C2H2 + O => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 14.3 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[23] += q; // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[57] -= dqdci; // dwdot[C2H2]/d[O]
  J[58] += dqdci; // dwdot[HCCO]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[1];
  J[771] -= dqdci; // dwdot[O]/d[C2H2]
  J[772] += dqdci; // dwdot[H]/d[C2H2]
  J[792] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[793] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1212] -= dqdT; // dwdot[C2H2]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 88: C2H3 + O2 => CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 350000000 * exp(-0.61 * tc[0] - (2646.93979079946) * invT);
  dlnkfdT = -0.61 * invT + (2646.93979079946) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[24] -= q; // C2H3
  wdot[25] += q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  J[200] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[841] += dqdci; // dwdot[O]/d[C2H3]
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[865] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 89: C2H3 + H => C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[92] += dqdci; // dwdot[C2H2]/d[H]
  J[94] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[2];
  J[842] -= dqdci; // dwdot[H]/d[C2H3]
  J[844] += dqdci; // dwdot[H2]/d[C2H3]
  J[862] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 90: C2H3 + O2 => CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 1.7e+23 * exp(-5.31 * tc[0] - (3270.90832773068) * invT);
  dlnkfdT = -5.31 * invT + (3270.90832773068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[19] += q; // HCO
  wdot[24] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[850] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[859] += dqdci; // dwdot[HCO]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 91: C2H3 + O2 => C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 2.12e-12 * exp(6 * tc[0] - (4772.5018263253) * invT);
  dlnkfdT = 6 * invT + (4772.5018263253) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[197] += dqdci; // dwdot[C2H2]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[848] += dqdci; // dwdot[HO2]/d[C2H3]
  J[862] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 93: C2H4 + O => CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 10.2 * exp(1.88 * tc[0] - (90.0858475123609) * invT);
  dlnkfdT = 1.88 * invT + (90.0858475123609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[11] += q; // CH3
  wdot[16] -= q; // C2H4
  wdot[19] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[51] -= dqdci; // dwdot[C2H4]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[561] -= dqdci; // dwdot[O]/d[C2H4]
  J[571] += dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[579] += dqdci; // dwdot[HCO]/d[C2H4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 95: C2H4 + OH => C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 20500000 * exp(-(2994.16432237137) * invT);
  dlnkfdT = (2994.16432237137) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[121] -= dqdci; // dwdot[C2H4]/d[OH]
  J[129] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[563] -= dqdci; // dwdot[OH]/d[C2H4]
  J[566] += dqdci; // dwdot[H2O]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 96: C2H3 + H2O => C2H4 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[24];
  k_f = 6033000000 * exp(-0.83 * tc[0] - (10950.0147765773) * invT);
  dlnkfdT = -0.83 * invT + (10950.0147765773) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[H2O]
  dqdci = +k_f * sc[24];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[226] += dqdci; // dwdot[C2H4]/d[H2O]
  J[234] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[6];
  J[843] += dqdci; // dwdot[OH]/d[C2H3]
  J[846] -= dqdci; // dwdot[H2O]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 97: C2H4 + H => C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 8.42e-09 * exp(4.62 * tc[0] - (1299.77342260698) * invT);
  dlnkfdT = 4.62 * invT + (1299.77342260698) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[86] -= dqdci; // dwdot[C2H4]/d[H]
  J[94] += dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[562] -= dqdci; // dwdot[H]/d[C2H4]
  J[564] += dqdci; // dwdot[H2]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 98: C2H3 + H2 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 5.723e-07 * exp(3.79 * tc[0] - (1626.91457704663) * invT);
  dlnkfdT = 3.79 * invT + (1626.91457704663) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[H2]
  dqdci = +k_f * sc[24];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[156] += dqdci; // dwdot[C2H4]/d[H2]
  J[164] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[4];
  J[842] += dqdci; // dwdot[H]/d[C2H3]
  J[844] -= dqdci; // dwdot[H2]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 99: C2H4 + CH3O2 => C2H3 + CH3O2H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[20];
  k_f = 2230000 * exp(-(8650.29951734979) * invT);
  dlnkfdT = (8650.29951734979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // C2H4
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  wdot[24] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[20];
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[580] -= dqdci; // dwdot[CH3O2]/d[C2H4]
  J[581] += dqdci; // dwdot[CH3O2H]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[16];
  J[716] -= dqdci; // dwdot[C2H4]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  J[724] += dqdci; // dwdot[C2H3]/d[CH3O2]
  // d()/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 6.62e-06 * exp(3.7 * tc[0] - (4780.55832514484) * invT);
  dlnkfdT = 3.7 * invT + (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[409] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[575] += dqdci; // dwdot[CH4]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 101: C2H3 + CH4 => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[24];
  k_f = 1.44e-06 * exp(4.02 * tc[0] - (2753.62172395006) * invT);
  dlnkfdT = 4.02 * invT + (2753.62172395006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[CH4]
  dqdci = +k_f * sc[24];
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  J[541] += dqdci; // dwdot[C2H4]/d[CH4]
  J[549] -= dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[C2H3]
  dqdci = +k_f * sc[15];
  J[851] += dqdci; // dwdot[CH3]/d[C2H3]
  J[855] -= dqdci; // dwdot[CH4]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 102: C2H4 + O => CH2CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 3.39 * exp(1.88 * tc[0] - (90.0858475123609) * invT);
  dlnkfdT = 1.88 * invT + (90.0858475123609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[16] -= q; // C2H4
  wdot[25] += q; // CH2CHO
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[51] -= dqdci; // dwdot[C2H4]/d[O]
  J[60] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[561] -= dqdci; // dwdot[O]/d[C2H4]
  J[562] += dqdci; // dwdot[H]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[585] += dqdci; // dwdot[CH2CHO]/d[C2H4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 104: C2H5 + CH3 => C2H4 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[14];
  k_f = 19500000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[14] -= q; // C2H5
  wdot[15] += q; // CH4
  wdot[16] += q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[399] -= dqdci; // dwdot[C2H5]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[401] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H5]
  dqdci = +k_f * sc[11];
  J[501] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[505] += dqdci; // dwdot[CH4]/d[C2H5]
  J[506] += dqdci; // dwdot[C2H4]/d[C2H5]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 105: C2H5 + O2 => C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[14];
  k_f = 1.22e+24 * exp(-5.76 * tc[0] - (5082.43800296109) * invT);
  dlnkfdT = -5.76 * invT + (5082.43800296109) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[14] -= q; // C2H5
  wdot[16] += q; // C2H4
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[189] -= dqdci; // dwdot[C2H5]/d[O2]
  J[191] += dqdci; // dwdot[C2H4]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[5];
  J[495] -= dqdci; // dwdot[O2]/d[C2H5]
  J[498] += dqdci; // dwdot[HO2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[506] += dqdci; // dwdot[C2H4]/d[C2H5]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 106: C2H4 + HO2 => C2H5 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 1.259e+24 * exp(-5.63 * tc[0] - (11221.706486612) * invT);
  dlnkfdT = -5.63 * invT + (11221.706486612) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[14] += q; // C2H5
  wdot[16] -= q; // C2H4
  // d()/d[HO2]
  dqdci = +k_f * sc[16];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[294] += dqdci; // dwdot[C2H5]/d[HO2]
  J[296] -= dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[C2H4]
  dqdci = +k_f * sc[8];
  J[565] += dqdci; // dwdot[O2]/d[C2H4]
  J[568] -= dqdci; // dwdot[HO2]/d[C2H4]
  J[574] += dqdci; // dwdot[C2H5]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT

  // reaction 107: C2H5 + HO2 => C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 267.9 * exp(0.89 * tc[0] - (-967.222689009936) * invT);
  dlnkfdT = 0.89 * invT + (-967.222689009936) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[294] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[297] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[495] += dqdci; // dwdot[O2]/d[C2H5]
  J[498] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 108: C2H5 + H => C2H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 583100 * exp(0.599 * tc[0] - (-1465.87014748915) * invT);
  dlnkfdT = 0.599 * invT + (-1465.87014748915) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[14];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[84] -= dqdci; // dwdot[C2H5]/d[H]
  J[87] += dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H5]
  dqdci = +k_f * sc[2];
  J[492] -= dqdci; // dwdot[H]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 109: C2H6 + H => C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[17];
  k_f = 0.000554 * exp(3.5 * tc[0] - (2600.15573737959) * invT);
  dlnkfdT = 3.5 * invT + (2600.15573737959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[17];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[84] += dqdci; // dwdot[C2H5]/d[H]
  J[87] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H6]
  dqdci = +k_f * sc[2];
  J[597] -= dqdci; // dwdot[H]/d[C2H6]
  J[599] += dqdci; // dwdot[H2]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 110: C2H5 + H2 => C2H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 1.355e-07 * exp(4.06 * tc[0] - (4457.02523419901) * invT);
  dlnkfdT = 4.06 * invT + (4457.02523419901) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[H2]
  dqdci = +k_f * sc[14];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[154] -= dqdci; // dwdot[C2H5]/d[H2]
  J[157] += dqdci; // dwdot[C2H6]/d[H2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[492] += dqdci; // dwdot[H]/d[C2H5]
  J[494] -= dqdci; // dwdot[H2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 111: C2H6 + OH => C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 58 * exp(1.73 * tc[0] - (583.675978500236) * invT);
  dlnkfdT = 1.73 * invT + (583.675978500236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[17];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[119] += dqdci; // dwdot[C2H5]/d[OH]
  J[122] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[598] -= dqdci; // dwdot[OH]/d[C2H6]
  J[601] += dqdci; // dwdot[H2O]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 112: C2H6 + CH2GSG => C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[17];
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  J[329] += dqdci; // dwdot[C2H5]/d[CH2GSG]
  J[332] -= dqdci; // dwdot[C2H6]/d[CH2GSG]
  // d()/d[C2H6]
  dqdci = +k_f * sc[9];
  J[604] -= dqdci; // dwdot[CH2GSG]/d[C2H6]
  J[606] += dqdci; // dwdot[CH3]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 113: C2H6 + O => C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[17];
  k_f = 13 * exp(2.13 * tc[0] - (2611.69952769315) * invT);
  dlnkfdT = 2.13 * invT + (2611.69952769315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[17];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[49] += dqdci; // dwdot[C2H5]/d[O]
  J[52] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[C2H6]
  dqdci = +k_f * sc[1];
  J[596] -= dqdci; // dwdot[O]/d[C2H6]
  J[598] += dqdci; // dwdot[OH]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 114: C2H6 + CH3 => C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 1.51e-13 * exp(6 * tc[0] - (3042.9914354544) * invT);
  dlnkfdT = 6 * invT + (3042.9914354544) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[14] += q; // C2H5
  wdot[15] += q; // CH4
  wdot[17] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[399] += dqdci; // dwdot[C2H5]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[402] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H6]
  dqdci = +k_f * sc[11];
  J[606] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[610] += dqdci; // dwdot[CH4]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 115: HCCO + O => 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[23];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;      // O
  wdot[2] += q;      // H
  wdot[12] += 2 * q; // CO
  wdot[23] -= q;     // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[37] += dqdci;     // dwdot[H]/d[O]
  J[47] += 2 * dqdci; // dwdot[CO]/d[O]
  J[58] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[HCCO]
  dqdci = +k_f * sc[1];
  J[806] -= dqdci;     // dwdot[O]/d[HCCO]
  J[807] += dqdci;     // dwdot[H]/d[HCCO]
  J[817] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[828] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1192] += dqdT;     // dwdot[H]/dT
  J[1202] += 2 * dqdT; // dwdot[CO]/dT
  J[1213] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 116: HCCO + O2 => CO2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 240000 * exp(-(-429.731936097256) * invT);
  dlnkfdT = (-429.731936097256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[18] += q; // CO2
  wdot[19] += q; // HCO
  wdot[23] -= q; // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[193] += dqdci; // dwdot[CO2]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  J[198] -= dqdci; // dwdot[HCCO]/d[O2]
  // d()/d[HCCO]
  dqdci = +k_f * sc[5];
  J[810] -= dqdci; // dwdot[O2]/d[HCCO]
  J[823] += dqdci; // dwdot[CO2]/d[HCCO]
  J[824] += dqdci; // dwdot[HCO]/d[HCCO]
  J[828] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1213] -= dqdT; // dwdot[HCCO]/dT

  // reaction 117: HCCO + OH => 2 HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // OH
  wdot[19] += 2 * q; // HCO
  wdot[23] -= q;     // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[108] -= dqdci;     // dwdot[OH]/d[OH]
  J[124] += 2 * dqdci; // dwdot[HCO]/d[OH]
  J[128] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[3];
  J[808] -= dqdci;     // dwdot[OH]/d[HCCO]
  J[824] += 2 * dqdci; // dwdot[HCO]/d[HCCO]
  J[828] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1193] -= dqdT;     // dwdot[OH]/dT
  J[1209] += 2 * dqdT; // dwdot[HCO]/dT
  J[1213] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 118: H + HCCO => CH2GSG + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[23];
  k_f = 110000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[9] += q;  // CH2GSG
  wdot[12] += q; // CO
  wdot[23] -= q; // HCCO
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[CH2GSG]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[93] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[2];
  J[807] -= dqdci; // dwdot[H]/d[HCCO]
  J[814] += dqdci; // dwdot[CH2GSG]/d[HCCO]
  J[817] += dqdci; // dwdot[CO]/d[HCCO]
  J[828] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1213] -= dqdT; // dwdot[HCCO]/dT

  // reaction 119: CH2GSG + CO => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 2046000 * exp(0.89 * tc[0] - (14004.555034512) * invT);
  dlnkfdT = 0.89 * invT + (14004.555034512) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[9] -= q;  // CH2GSG
  wdot[12] -= q; // CO
  wdot[23] += q; // HCCO
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[12];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[327] -= dqdci; // dwdot[CO]/d[CH2GSG]
  J[338] += dqdci; // dwdot[HCCO]/d[CH2GSG]
  // d()/d[CO]
  dqdci = +k_f * sc[9];
  J[422] += dqdci; // dwdot[H]/d[CO]
  J[429] -= dqdci; // dwdot[CH2GSG]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[443] += dqdci; // dwdot[HCCO]/d[CO]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 120: CH2CHO + O2 => CH2O + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[25];
  k_f = 20000000 * exp(-(2113.53515721311) * invT);
  dlnkfdT = (2113.53515721311) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[12] += q; // CO
  wdot[25] -= q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[25];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  J[200] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[5];
  J[878] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[880] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[885] += dqdci; // dwdot[CH2O]/d[CH2CHO]
  J[887] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[900] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1215] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 121: C3H5XA + CH2O => C3H6 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[26];
  k_f = 630 * exp(1.9 * tc[0] - (9153.51618315451) * invT);
  dlnkfdT = 1.9 * invT + (9153.51618315451) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[CH2O]
  dqdci = +k_f * sc[26];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  J[376] -= dqdci; // dwdot[C3H5XA]/d[CH2O]
  J[377] += dqdci; // dwdot[C3H6]/d[CH2O]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[10];
  J[920] -= dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[929] += dqdci; // dwdot[HCO]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 122: C3H6 + HCO => C3H5XA + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[27];
  k_f = 109.7 * exp(1.89 * tc[0] - (7971.00734018) * invT);
  dlnkfdT = 1.89 * invT + (7971.00734018) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] += q; // CH2O
  wdot[19] -= q; // HCO
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[HCO]
  dqdci = +k_f * sc[27];
  J[675] += dqdci; // dwdot[CH2O]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  J[691] += dqdci; // dwdot[C3H5XA]/d[HCO]
  J[692] -= dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[955] += dqdci; // dwdot[CH2O]/d[C3H6]
  J[964] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 123: C3H5XA + HO2 => C3H5O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[26] -= q; // C3H5XA
  wdot[28] += q; // C3H5O
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[306] -= dqdci; // dwdot[C3H5XA]/d[HO2]
  J[308] += dqdci; // dwdot[C3H5O]/d[HO2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[8];
  J[913] += dqdci; // dwdot[OH]/d[C3H5XA]
  J[918] -= dqdci; // dwdot[HO2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[938] += dqdci; // dwdot[C3H5O]/d[C3H5XA]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1218] += dqdT; // dwdot[C3H5O]/dT

  // reaction 124: C3H5XA + CH3O2 => C3H5O + CH3O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[26];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] += q; // CH3O
  wdot[20] -= q; // CH3O2
  wdot[26] -= q; // C3H5XA
  wdot[28] += q; // C3H5O
  // d()/d[CH3O2]
  dqdci = +k_f * sc[26];
  J[713] += dqdci; // dwdot[CH3O]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[726] -= dqdci; // dwdot[C3H5XA]/d[CH3O2]
  J[728] += dqdci; // dwdot[C3H5O]/d[CH3O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[20];
  J[923] += dqdci; // dwdot[CH3O]/d[C3H5XA]
  J[930] -= dqdci; // dwdot[CH3O2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[938] += dqdci; // dwdot[C3H5O]/d[C3H5XA]
  // d()/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1218] += dqdT; // dwdot[C3H5O]/dT

  // reaction 125: C3H5XA + HO2 => C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 33320 * exp(0.34 * tc[0] - (-279.753241020818) * invT);
  dlnkfdT = 0.34 * invT + (-279.753241020818) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[306] -= dqdci; // dwdot[C3H5XA]/d[HO2]
  J[307] += dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[8];
  J[915] += dqdci; // dwdot[O2]/d[C3H5XA]
  J[918] -= dqdci; // dwdot[HO2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 126: C3H5XA + O2 => CH2CHO + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 7140000000 * exp(-1.21 * tc[0] - (10592.6856543561) * invT);
  dlnkfdT = -1.21 * invT + (10592.6856543561) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[25] += q; // CH2CHO
  wdot[26] -= q; // C3H5XA
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[200] += dqdci; // dwdot[CH2CHO]/d[O2]
  J[201] -= dqdci; // dwdot[C3H5XA]/d[O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[5];
  J[915] -= dqdci; // dwdot[O2]/d[C3H5XA]
  J[920] += dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[935] += dqdci; // dwdot[CH2CHO]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 127: C3H5XA + O2 => C2H2 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 9.72e+23 * exp(-5.71 * tc[0] - (10794.0226423445) * invT);
  dlnkfdT = -5.71 * invT + (10794.0226423445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[22] += q; // C2H2
  wdot[26] -= q; // C3H5XA
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[197] += dqdci; // dwdot[C2H2]/d[O2]
  J[201] -= dqdci; // dwdot[C3H5XA]/d[O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[5];
  J[913] += dqdci; // dwdot[OH]/d[C3H5XA]
  J[915] -= dqdci; // dwdot[O2]/d[C3H5XA]
  J[920] += dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[932] += dqdci; // dwdot[C2H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 128: C3H5XA + H => C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 4.887e+50 * exp(-12.25 * tc[0] - (14130.3592009631) * invT);
  dlnkfdT = -12.25 * invT + (14130.3592009631) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[96] -= dqdci; // dwdot[C3H5XA]/d[H]
  J[97] += dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[2];
  J[912] -= dqdci; // dwdot[H]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 129: C3H5XA => C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.397e+48 * exp(-9.9 * tc[0] - (41304.059154418) * invT);
  dlnkfdT = -9.9 * invT + (41304.059154418) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[26] -= q; // C3H5XA
  // d()/d[C3H5XA]
  dqdci = +k_f;
  J[921] += dqdci; // dwdot[CH3]/d[C3H5XA]
  J[932] += dqdci; // dwdot[C2H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 130: C3H6 => C2H3 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27];
  k_f = 2.73e+62 * exp(-13.28 * tc[0] - (61996.3183879748) * invT);
  dlnkfdT = -13.28 * invT + (61996.3183879748) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[24] += q; // C2H3
  wdot[27] -= q; // C3H6
  // d()/d[C3H6]
  dqdci = +k_f;
  J[956] += dqdci; // dwdot[CH3]/d[C3H6]
  J[969] += dqdci; // dwdot[C2H3]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 131: C2H3 + CH3 => C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 4.712e+53 * exp(-13.19 * tc[0] - (14864.9750183715) * invT);
  dlnkfdT = -13.19 * invT + (14864.9750183715) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[24] -= q; // C2H3
  wdot[27] += q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[24];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[409] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[412] += dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[851] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[867] += dqdci; // dwdot[C3H6]/d[C2H3]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 132: C3H6 + O => C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 15.8 * exp(1.76 * tc[0] - (-611.941658618487) * invT);
  dlnkfdT = 1.76 * invT + (-611.941658618487) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[14] += q; // C2H5
  wdot[19] += q; // HCO
  wdot[27] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[49] += dqdci; // dwdot[C2H5]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  J[62] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[946] -= dqdci; // dwdot[O]/d[C3H6]
  J[959] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[964] += dqdci; // dwdot[HCO]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 133: C3H6 + H => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 4.83e+27 * exp(-5.81 * tc[0] - (9309.50831738731) * invT);
  dlnkfdT = -5.81 * invT + (9309.50831738731) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[11] += q; // CH3
  wdot[16] += q; // C2H4
  wdot[27] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[81] += dqdci; // dwdot[CH3]/d[H]
  J[86] += dqdci; // dwdot[C2H4]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[956] += dqdci; // dwdot[CH3]/d[C3H6]
  J[961] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 134: C2H4 + CH3 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 2.313e+27 * exp(-5.9 * tc[0] - (15911.7009084119) * invT);
  dlnkfdT = -5.9 * invT + (15911.7009084119) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[11] -= q; // CH3
  wdot[16] -= q; // C2H4
  wdot[27] += q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[412] += dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[562] += dqdci; // dwdot[H]/d[C2H4]
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[587] += dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 135: C3H6 + H => C3H5XA + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 0.173 * exp(2.5 * tc[0] - (1254.0712850186) * invT);
  dlnkfdT = 2.5 * invT + (1254.0712850186) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[96] += dqdci; // dwdot[C3H5XA]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[949] += dqdci; // dwdot[H2]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 136: C3H5XA + H2 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 0.07933 * exp(2.51 * tc[0] - (9822.82957384139) * invT);
  dlnkfdT = 2.51 * invT + (9822.82957384139) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[H2]
  dqdci = +k_f * sc[26];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[166] -= dqdci; // dwdot[C3H5XA]/d[H2]
  J[167] += dqdci; // dwdot[C3H6]/d[H2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[4];
  J[912] += dqdci; // dwdot[H]/d[C3H5XA]
  J[914] -= dqdci; // dwdot[H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 137: C3H6 + OH => C3H5XA + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 3.12 * exp(2 * tc[0] - (-149.978695076439) * invT);
  dlnkfdT = 2 * invT + (-149.978695076439) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[131] += dqdci; // dwdot[C3H5XA]/d[OH]
  J[132] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[948] -= dqdci; // dwdot[OH]/d[C3H6]
  J[951] += dqdci; // dwdot[H2O]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 138: C3H6 + O => C3H5XA + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 524000 * exp(0.7 * tc[0] - (2960.96711892823) * invT);
  dlnkfdT = 0.7 * invT + (2960.96711892823) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[61] += dqdci; // dwdot[C3H5XA]/d[O]
  J[62] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[946] -= dqdci; // dwdot[O]/d[C3H6]
  J[948] += dqdci; // dwdot[OH]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 139: C3H6 + CH3 => C3H5XA + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[27];
  k_f = 2.21e-06 * exp(3.5 * tc[0] - (2855.72941760849) * invT);
  dlnkfdT = 3.5 * invT + (2855.72941760849) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[27];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[411] += dqdci; // dwdot[C3H5XA]/d[CH3]
  J[412] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C3H6]
  dqdci = +k_f * sc[11];
  J[956] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[960] += dqdci; // dwdot[CH4]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 140: IXC3H7 + O2 => C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 450000 * exp(-(2526.18791967296) * invT);
  dlnkfdT = (2526.18791967296) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[27] += q; // C3H6
  wdot[29] -= q; // IXC3H7
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[202] += dqdci; // dwdot[C3H6]/d[O2]
  J[204] -= dqdci; // dwdot[IXC3H7]/d[O2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[5];
  J[1020] -= dqdci; // dwdot[O2]/d[IXC3H7]
  J[1023] += dqdci; // dwdot[HO2]/d[IXC3H7]
  J[1042] += dqdci; // dwdot[C3H6]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT

  // reaction 141: IXC3H7 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 8.569e+18 * exp(-1.57 * tc[0] - (20299.8156523956) * invT);
  dlnkfdT = -1.57 * invT + (20299.8156523956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[27] += q; // C3H6
  wdot[29] -= q; // IXC3H7
  // d()/d[IXC3H7]
  dqdci = +k_f;
  J[1017] += dqdci; // dwdot[H]/d[IXC3H7]
  J[1042] += dqdci; // dwdot[C3H6]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT

  // reaction 142: C3H6 + H => IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 13000000 * exp(-(785.012966488705) * invT);
  dlnkfdT = (785.012966488705) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[27] -= q; // C3H6
  wdot[29] += q; // IXC3H7
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  J[99] += dqdci; // dwdot[IXC3H7]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[974] += dqdci; // dwdot[IXC3H7]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT

  // reaction 143: NXC3H7 => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 228400000000000 * exp(-0.55 * tc[0] - (14291.4036305206) * invT);
  dlnkfdT = -0.55 * invT + (14291.4036305206) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[16] += q; // C2H4
  wdot[30] -= q; // NXC3H7
  // d()/d[NXC3H7]
  dqdci = +k_f;
  J[1061] += dqdci; // dwdot[CH3]/d[NXC3H7]
  J[1066] += dqdci; // dwdot[C2H4]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 144: C2H4 + CH3 => NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 410000 * exp(-(3625.22821429044) * invT);
  dlnkfdT = (3625.22821429044) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[16] -= q; // C2H4
  wdot[30] += q; // NXC3H7
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[415] += dqdci; // dwdot[NXC3H7]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[590] += dqdci; // dwdot[NXC3H7]/d[C2H4]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT

  // reaction 145: HO2 + NXC3H7 => C3H8 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 2080000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[30] -= q; // NXC3H7
  wdot[31] += q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[310] -= dqdci; // dwdot[NXC3H7]/d[HO2]
  J[311] += dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[8];
  J[1055] += dqdci; // dwdot[O2]/d[NXC3H7]
  J[1058] -= dqdci; // dwdot[HO2]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1081] += dqdci; // dwdot[C3H8]/d[NXC3H7]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 146: NXC3H7 + O2 => C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[30];
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[27] += q; // C3H6
  wdot[30] -= q; // NXC3H7
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[202] += dqdci; // dwdot[C3H6]/d[O2]
  J[205] -= dqdci; // dwdot[NXC3H7]/d[O2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[5];
  J[1055] -= dqdci; // dwdot[O2]/d[NXC3H7]
  J[1058] += dqdci; // dwdot[HO2]/d[NXC3H7]
  J[1077] += dqdci; // dwdot[C3H6]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 147: NXC3H7 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 2.667e+15 * exp(-0.64 * tc[0] - (18528.4527314297) * invT);
  dlnkfdT = -0.64 * invT + (18528.4527314297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[27] += q; // C3H6
  wdot[30] -= q; // NXC3H7
  // d()/d[NXC3H7]
  dqdci = +k_f;
  J[1052] += dqdci; // dwdot[H]/d[NXC3H7]
  J[1077] += dqdci; // dwdot[C3H6]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 148: C3H6 + H => NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[27] -= q; // C3H6
  wdot[30] += q; // NXC3H7
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[97] -= dqdci;  // dwdot[C3H6]/d[H]
  J[100] += dqdci; // dwdot[NXC3H7]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[975] += dqdci; // dwdot[NXC3H7]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT

  // reaction 149: C3H8 + OH => H2O + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 10540 * exp(0.97 * tc[0] - (798.121760632917) * invT);
  dlnkfdT = 0.97 * invT + (798.121760632917) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[135] += dqdci; // dwdot[NXC3H7]/d[OH]
  J[136] -= dqdci; // dwdot[C3H8]/d[OH]
  // d()/d[C3H8]
  dqdci = +k_f * sc[3];
  J[1088] -= dqdci; // dwdot[OH]/d[C3H8]
  J[1091] += dqdci; // dwdot[H2O]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 150: C3H8 + HO2 => H2O2 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[31];
  k_f = 16800000 * exp(-(10280.7013858905) * invT);
  dlnkfdT = (10280.7013858905) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[310] += dqdci; // dwdot[NXC3H7]/d[HO2]
  J[311] -= dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[8];
  J[1092] += dqdci; // dwdot[H2O2]/d[C3H8]
  J[1093] -= dqdci; // dwdot[HO2]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 151: C3H8 + H <=> H2 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[31];
  k_f = 3.972 * exp(2.75 * tc[0] - (3400.07901367609) * invT);
  dlnkfdT = 2.75 * invT + (3400.07901367609) * invT2;
  // reverse
  phi_r = sc[4] * sc[30];
  Kc = exp(g_RT[2] - g_RT[4] - g_RT[30] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[31]) + (h_RT[4] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[H]
  dqdci = +k_f * sc[31];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[74] += dqdci;  // dwdot[H2]/d[H]
  J[100] += dqdci; // dwdot[NXC3H7]/d[H]
  J[101] -= dqdci; // dwdot[C3H8]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[30];
  J[142] -= dqdci; // dwdot[H]/d[H2]
  J[144] += dqdci; // dwdot[H2]/d[H2]
  J[170] += dqdci; // dwdot[NXC3H7]/d[H2]
  J[171] -= dqdci; // dwdot[C3H8]/d[H2]
  // d()/d[NXC3H7]
  dqdci = -k_r * sc[4];
  J[1052] -= dqdci; // dwdot[H]/d[NXC3H7]
  J[1054] += dqdci; // dwdot[H2]/d[NXC3H7]
  J[1080] += dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1081] -= dqdci; // dwdot[C3H8]/d[NXC3H7]
  // d()/d[C3H8]
  dqdci = +k_f * sc[2];
  J[1087] -= dqdci; // dwdot[H]/d[C3H8]
  J[1089] += dqdci; // dwdot[H2]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 152: C3H8 + OH => H2O + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 46.7 * exp(1.61 * tc[0] - (-17.5572294699267) * invT);
  dlnkfdT = 1.61 * invT + (-17.5572294699267) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[134] += dqdci; // dwdot[IXC3H7]/d[OH]
  J[136] -= dqdci; // dwdot[C3H8]/d[OH]
  // d()/d[C3H8]
  dqdci = +k_f * sc[3];
  J[1088] -= dqdci; // dwdot[OH]/d[C3H8]
  J[1091] += dqdci; // dwdot[H2O]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 153: C3H8 + CH3 => CH4 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[31];
  k_f = 398000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[CH3]
  dqdci = +k_f * sc[31];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[414] += dqdci; // dwdot[IXC3H7]/d[CH3]
  J[416] -= dqdci; // dwdot[C3H8]/d[CH3]
  // d()/d[C3H8]
  dqdci = +k_f * sc[11];
  J[1096] -= dqdci; // dwdot[CH3]/d[C3H8]
  J[1100] += dqdci; // dwdot[CH4]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 154: C3H8 + CH3 => CH4 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[31];
  k_f = 1290000 * exp(-(5837.26300166817) * invT);
  dlnkfdT = (5837.26300166817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[CH3]
  dqdci = +k_f * sc[31];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[415] += dqdci; // dwdot[NXC3H7]/d[CH3]
  J[416] -= dqdci; // dwdot[C3H8]/d[CH3]
  // d()/d[C3H8]
  dqdci = +k_f * sc[11];
  J[1096] -= dqdci; // dwdot[CH3]/d[C3H8]
  J[1100] += dqdci; // dwdot[CH4]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 155: C3H8 + O => IXC3H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[31];
  k_f = 28100000 * exp(-(2616.75182301783) * invT);
  dlnkfdT = (2616.75182301783) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[64] += dqdci; // dwdot[IXC3H7]/d[O]
  J[66] -= dqdci; // dwdot[C3H8]/d[O]
  // d()/d[C3H8]
  dqdci = +k_f * sc[1];
  J[1086] -= dqdci; // dwdot[O]/d[C3H8]
  J[1088] += dqdci; // dwdot[OH]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 156: C3H8 + HO2 => H2O2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[31];
  k_f = 5600000 * exp(-(8906.96014557683) * invT);
  dlnkfdT = (8906.96014557683) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[309] += dqdci; // dwdot[IXC3H7]/d[HO2]
  J[311] -= dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[8];
  J[1092] += dqdci; // dwdot[H2O2]/d[C3H8]
  J[1093] -= dqdci; // dwdot[HO2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 157: C3H8 + O => NXC3H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[31];
  k_f = 113000000 * exp(-(3950.20050490047) * invT);
  dlnkfdT = (3950.20050490047) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[65] += dqdci; // dwdot[NXC3H7]/d[O]
  J[66] -= dqdci; // dwdot[C3H8]/d[O]
  // d()/d[C3H8]
  dqdci = +k_f * sc[1];
  J[1086] -= dqdci; // dwdot[O]/d[C3H8]
  J[1088] += dqdci; // dwdot[OH]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 158: C3H8 + O2 => HO2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[31];
  k_f = 40000000 * exp(-(23902.7916257242) * invT);
  dlnkfdT = (23902.7916257242) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O2]
  dqdci = +k_f * sc[31];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[204] += dqdci; // dwdot[IXC3H7]/d[O2]
  J[206] -= dqdci; // dwdot[C3H8]/d[O2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[5];
  J[1090] -= dqdci; // dwdot[O2]/d[C3H8]
  J[1093] += dqdci; // dwdot[HO2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 159: HO2 + IXC3H7 => C3H8 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[29];
  k_f = 2080000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[29] -= q; // IXC3H7
  wdot[31] += q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[29];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[309] -= dqdci; // dwdot[IXC3H7]/d[HO2]
  J[311] += dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[8];
  J[1020] += dqdci; // dwdot[O2]/d[IXC3H7]
  J[1023] -= dqdci; // dwdot[HO2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1046] += dqdci; // dwdot[C3H8]/d[IXC3H7]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 160: C3H8 + H => H2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[31];
  k_f = 1.3 * exp(2.4 * tc[0] - (2249.92197014617) * invT);
  dlnkfdT = 2.4 * invT + (2249.92197014617) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[H]
  dqdci = +k_f * sc[31];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[74] += dqdci;  // dwdot[H2]/d[H]
  J[99] += dqdci;  // dwdot[IXC3H7]/d[H]
  J[101] -= dqdci; // dwdot[C3H8]/d[H]
  // d()/d[C3H8]
  dqdci = +k_f * sc[2];
  J[1087] -= dqdci; // dwdot[H]/d[C3H8]
  J[1089] += dqdci; // dwdot[H2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 161: H2 + IXC3H7 => C3H8 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[29];
  k_f = 0.4709 * exp(2.15 * tc[0] - (6129.16389300151) * invT);
  dlnkfdT = 2.15 * invT + (6129.16389300151) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[29] -= q; // IXC3H7
  wdot[31] += q; // C3H8
  // d()/d[H2]
  dqdci = +k_f * sc[29];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[169] -= dqdci; // dwdot[IXC3H7]/d[H2]
  J[171] += dqdci; // dwdot[C3H8]/d[H2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[4];
  J[1017] += dqdci; // dwdot[H]/d[IXC3H7]
  J[1019] -= dqdci; // dwdot[H2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1046] += dqdci; // dwdot[C3H8]/d[IXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 162: C3H5O => C2H3 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 2028000000000 * exp(0.09 * tc[0] - (11855.7796141925) * invT);
  dlnkfdT = 0.09 * invT + (11855.7796141925) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] += q; // CH2O
  wdot[24] += q; // C2H3
  wdot[28] -= q; // C3H5O
  // d()/d[C3H5O]
  dqdci = +k_f;
  J[990] += dqdci;  // dwdot[CH2O]/d[C3H5O]
  J[1004] += dqdci; // dwdot[C2H3]/d[C3H5O]
  J[1008] -= dqdci; // dwdot[C3H5O]/d[C3H5O]
  // d()/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT
  J[1218] -= dqdT; // dwdot[C3H5O]/dT

  // reaction 163: IXC3H7O2 => IXC3H7 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 2.803e+17 * exp(-0.62 * tc[0] - (18135.8833461022) * invT);
  dlnkfdT = -0.62 * invT + (18135.8833461022) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[29] += q; // IXC3H7
  wdot[32] -= q; // IXC3H7O2
  // d()/d[IXC3H7O2]
  dqdci = +k_f;
  J[1125] += dqdci; // dwdot[O2]/d[IXC3H7O2]
  J[1149] += dqdci; // dwdot[IXC3H7]/d[IXC3H7O2]
  J[1152] -= dqdci; // dwdot[IXC3H7O2]/d[IXC3H7O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1222] -= dqdT; // dwdot[IXC3H7O2]/dT

  // reaction 164: IXC3H7 + O2 => IXC3H7O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[29] -= q; // IXC3H7
  wdot[32] += q; // IXC3H7O2
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[204] -= dqdci; // dwdot[IXC3H7]/d[O2]
  J[207] += dqdci; // dwdot[IXC3H7O2]/d[O2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[5];
  J[1020] -= dqdci; // dwdot[O2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1047] += dqdci; // dwdot[IXC3H7O2]/d[IXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1222] += dqdT; // dwdot[IXC3H7O2]/dT

  // reaction 165: NXC3H7O2 => NXC3H7 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 3.364e+19 * exp(-1.32 * tc[0] - (17995.0480978434) * invT);
  dlnkfdT = -1.32 * invT + (17995.0480978434) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[30] += q; // NXC3H7
  wdot[33] -= q; // NXC3H7O2
  // d()/d[NXC3H7O2]
  dqdci = +k_f;
  J[1160] += dqdci; // dwdot[O2]/d[NXC3H7O2]
  J[1185] += dqdci; // dwdot[NXC3H7]/d[NXC3H7O2]
  J[1188] -= dqdci; // dwdot[NXC3H7O2]/d[NXC3H7O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1223] -= dqdT; // dwdot[NXC3H7O2]/dT

  // reaction 166: NXC3H7 + O2 => NXC3H7O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[30];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[30] -= q; // NXC3H7
  wdot[33] += q; // NXC3H7O2
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[205] -= dqdci; // dwdot[NXC3H7]/d[O2]
  J[208] += dqdci; // dwdot[NXC3H7O2]/d[O2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[5];
  J[1055] -= dqdci; // dwdot[O2]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1083] += dqdci; // dwdot[NXC3H7O2]/d[NXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT
  J[1223] += dqdT; // dwdot[NXC3H7O2]/dT

  amrex::Real c_R[34], dcRdT[34], e_RT[34];
  amrex::Real* eh_RT;
  if (HP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 34; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1190 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 34; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 34; ++m) {
      dehmixdc += eh_RT[m] * J[k * 35 + m];
    }
    J[k * 35 + 34] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1224] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[34];

  for (int k = 0; k < 34; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 34; k++) {
    J[1190 + k] *= 1.e-6;
    J[k * 35 + 34] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 1225; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[34];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 34; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[34];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[34];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[34];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 6: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 123600000 * exp(-0.37 * tc[0]);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 3.041e+30 * exp(-4.63 * tc[0] - (1031.09094823387) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.63 * invT + (1031.09094823387) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.47) * exp(-T / 100);
  Fcent2 = 0.47 * exp(-T / 2000);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 2000 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(2.000000 * g_RT[3] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[3]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] -= 2 * q; // OH
  wdot[7] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[OH]
    dqdci = +k_f * 2.000000 * sc[3];
    J[108] += -2 * dqdci; // dwdot[OH]/d[OH]
    J[112] += dqdci;      // dwdot[H2O2]/d[OH]
    // d()/d[H2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[143] += -2 * dqdci; // dwdot[OH]/d[H2]
    J[147] += dqdci;      // dwdot[H2O2]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[213] += -2 * dqdci; // dwdot[OH]/d[H2O]
    J[217] += dqdci;      // dwdot[H2O2]/d[H2O]
    // d()/d[H2O2]
    dqdci = -k_r;
    J[248] += -2 * dqdci; // dwdot[OH]/d[H2O2]
    J[252] += dqdci;      // dwdot[H2O2]/d[H2O2]
    // d()/d[CO]
    dqdci = (1.9 - 1) * dcdc_fac;
    J[423] += -2 * dqdci; // dwdot[OH]/d[CO]
    J[427] += dqdci;      // dwdot[H2O2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * dcdc_fac;
    J[633] += -2 * dqdci; // dwdot[OH]/d[CO2]
    J[637] += dqdci;      // dwdot[H2O2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac + k_f * 2.000000 * sc[3];
    dqdc[4] = 2.5 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 12 * dcdc_fac;
    dqdc[7] = dcdc_fac - k_r;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 1.9 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = 3.8 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 3] += -2 * dqdc[k];
      J[35 * k + 7] += dqdc[k];
    }
  }
  J[1193] += -2 * dqdT; // dwdot[OH]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT

  // reaction 12: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 1475000 * exp(0.6 * tc[0]);
  dlnkfdT = 0.6 * invT;
  // pressure-fall-off
  k_0 = 3.5e+16 * exp(-0.41 * tc[0] - (-561.549541704803) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.41 * invT + (-561.549541704803) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = exp(-1e+100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 1e+30 + Fcent3 * 1e+100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(g_RT[2] + g_RT[5] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[5]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q; // H
  wdot[5] -= q; // O2
  wdot[8] += q; // HO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[5];
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[75] -= dqdci; // dwdot[O2]/d[H]
    J[78] += dqdci; // dwdot[HO2]/d[H]
    // d()/d[H2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[142] -= dqdci; // dwdot[H]/d[H2]
    J[145] -= dqdci; // dwdot[O2]/d[H2]
    J[148] += dqdci; // dwdot[HO2]/d[H2]
    // d()/d[O2]
    dqdci = +k_f * sc[2];
    J[177] -= dqdci; // dwdot[H]/d[O2]
    J[180] -= dqdci; // dwdot[O2]/d[O2]
    J[183] += dqdci; // dwdot[HO2]/d[O2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[212] -= dqdci; // dwdot[H]/d[H2O]
    J[215] -= dqdci; // dwdot[O2]/d[H2O]
    J[218] += dqdci; // dwdot[HO2]/d[H2O]
    // d()/d[HO2]
    dqdci = -k_r;
    J[282] -= dqdci; // dwdot[H]/d[HO2]
    J[285] -= dqdci; // dwdot[O2]/d[HO2]
    J[288] += dqdci; // dwdot[HO2]/d[HO2]
    // d()/d[CO]
    dqdci = (1.9 - 1) * dcdc_fac;
    J[422] -= dqdci; // dwdot[H]/d[CO]
    J[425] -= dqdci; // dwdot[O2]/d[CO]
    J[428] += dqdci; // dwdot[HO2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * dcdc_fac;
    J[632] -= dqdci; // dwdot[H]/d[CO2]
    J[635] -= dqdci; // dwdot[O2]/d[CO2]
    J[638] += dqdci; // dwdot[HO2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac + k_f * sc[5];
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2.5 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[2];
    dqdc[6] = 12 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac - k_r;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 1.9 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = 3.8 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 5] -= dqdc[k];
      J[35 * k + 8] += dqdc[k];
    }
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 45: CH3 + H (+M) => CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 2138000000 * exp(-0.4 * tc[0]);
  dlnkfdT = -0.4 * invT;
  // pressure-fall-off
  k_0 = 3.31e+30 * exp(-4 * tc[0] - (1060.79582801632) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4 * invT + (1060.79582801632) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.;
  Fcent3 = exp(-40 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (+Fcent3 * 40 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // H
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[11];
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[81] -= dqdci; // dwdot[CH3]/d[H]
    J[85] += dqdci; // dwdot[CH4]/d[H]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[142] -= dqdci; // dwdot[H]/d[H2]
    J[151] -= dqdci; // dwdot[CH3]/d[H2]
    J[155] += dqdci; // dwdot[CH4]/d[H2]
    // d()/d[H2O]
    dqdci = (5 - 1) * dcdc_fac;
    J[212] -= dqdci; // dwdot[H]/d[H2O]
    J[221] -= dqdci; // dwdot[CH3]/d[H2O]
    J[225] += dqdci; // dwdot[CH4]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * sc[2];
    J[387] -= dqdci; // dwdot[H]/d[CH3]
    J[396] -= dqdci; // dwdot[CH3]/d[CH3]
    J[400] += dqdci; // dwdot[CH4]/d[CH3]
    // d()/d[CO]
    dqdci = (2 - 1) * dcdc_fac;
    J[422] -= dqdci; // dwdot[H]/d[CO]
    J[431] -= dqdci; // dwdot[CH3]/d[CO]
    J[435] += dqdci; // dwdot[CH4]/d[CO]
    // d()/d[CO2]
    dqdci = (3 - 1) * dcdc_fac;
    J[632] -= dqdci; // dwdot[H]/d[CO2]
    J[641] -= dqdci; // dwdot[CH3]/d[CO2]
    J[645] += dqdci; // dwdot[CH4]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac + k_f * sc[11];
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 5 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * sc[2];
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = 3 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 11] -= dqdc[k];
      J[35 * k + 15] += dqdc[k];
    }
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 46: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 92140000000 * exp(-1.17 * tc[0] - (319.925027452009) * invT);
  dlnkfdT = -1.17 * invT + (319.925027452009) * invT2;
  // pressure-fall-off
  k_0 = 1.135e+36 * exp(-5.246 * tc[0] - (858.019640363653) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.246 * invT + (858.019640363653) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.405) * exp(-T / 1120);
  Fcent2 = 0.405 * exp(-T / 69.6);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1120 - Fcent2 / 69.6 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(2.000000 * g_RT[11] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] -= 2 * q; // CH3
  wdot[17] += q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[151] += -2 * dqdci; // dwdot[CH3]/d[H2]
    J[157] += dqdci;      // dwdot[C2H6]/d[H2]
    // d()/d[H2O]
    dqdci = (5 - 1) * dcdc_fac;
    J[221] += -2 * dqdci; // dwdot[CH3]/d[H2O]
    J[227] += dqdci;      // dwdot[C2H6]/d[H2O]
    // d()/d[CH3]
    dqdci = +k_f * 2.000000 * sc[11];
    J[396] += -2 * dqdci; // dwdot[CH3]/d[CH3]
    J[402] += dqdci;      // dwdot[C2H6]/d[CH3]
    // d()/d[CO]
    dqdci = (2 - 1) * dcdc_fac;
    J[431] += -2 * dqdci; // dwdot[CH3]/d[CO]
    J[437] += dqdci;      // dwdot[C2H6]/d[CO]
    // d()/d[C2H6]
    dqdci = -k_r;
    J[606] += -2 * dqdci; // dwdot[CH3]/d[C2H6]
    J[612] += dqdci;      // dwdot[C2H6]/d[C2H6]
    // d()/d[CO2]
    dqdci = (3 - 1) * dcdc_fac;
    J[641] += -2 * dqdci; // dwdot[CH3]/d[CO2]
    J[647] += dqdci;      // dwdot[C2H6]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 5 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac + k_f * 2.000000 * sc[11];
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac - k_r;
    dqdc[18] = 3 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 11] += -2 * dqdc[k];
      J[35 * k + 17] += dqdc[k];
    }
  }
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1207] += dqdT;      // dwdot[C2H6]/dT

  // reaction 60: CO + O (+M) => CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 18000 * exp(-(1199.70878861172) * invT);
  dlnkfdT = (1199.70878861172) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.788 * tc[0] - (2108.96594988761) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.788 * invT + (2108.96594988761) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // O
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * sc[12];
    J[36] -= dqdci; // dwdot[O]/d[O]
    J[47] -= dqdci; // dwdot[CO]/d[O]
    J[53] += dqdci; // dwdot[CO2]/d[O]
    // d()/d[H2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[141] -= dqdci; // dwdot[O]/d[H2]
    J[152] -= dqdci; // dwdot[CO]/d[H2]
    J[158] += dqdci; // dwdot[CO2]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[211] -= dqdci; // dwdot[O]/d[H2O]
    J[222] -= dqdci; // dwdot[CO]/d[H2O]
    J[228] += dqdci; // dwdot[CO2]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * dcdc_fac + k_f * sc[1];
    J[421] -= dqdci; // dwdot[O]/d[CO]
    J[432] -= dqdci; // dwdot[CO]/d[CO]
    J[438] += dqdci; // dwdot[CO2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * dcdc_fac;
    J[631] -= dqdci; // dwdot[O]/d[CO2]
    J[642] -= dqdci; // dwdot[CO]/d[CO2]
    J[648] += dqdci; // dwdot[CO2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[12];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2.5 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 12 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 1.9 * dcdc_fac + k_f * sc[1];
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = 3.8 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 1] -= dqdc[k];
      J[35 * k + 12] -= dqdc[k];
      J[35 * k + 18] += dqdc[k];
    }
  }
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 75: CH3O (+M) => CH2O + H (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  dlnkfdT = (6793.42498836372) * invT2;
  // pressure-fall-off
  k_0 = 2.344e+25 * exp(-2.7 * tc[0] - (15398.3796519578) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.7 * invT + (15398.3796519578) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // H
  wdot[10] += q; // CH2O
  wdot[13] -= q; // CH3O
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH3O]
    dqdci = +k_f;
    J[457] += dqdci; // dwdot[H]/d[CH3O]
    J[465] += dqdci; // dwdot[CH2O]/d[CH3O]
    J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac + k_f;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] += dqdc[k];
      J[35 * k + 10] += dqdc[k];
      J[35 * k + 13] -= dqdc[k];
    }
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 92: C2H3 (+M) => C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (5 - 1) * sc[6] + sc[12] + (3 - 1) * sc[18];
  // forward
  phi_f = sc[24];
  k_f = 16060000000 * exp(1.028 * tc[0] - (20382.0815129214) * invT);
  dlnkfdT = 1.028 * invT + (20382.0815129214) * invT2;
  // pressure-fall-off
  k_0 = 1.164e+39 * exp(-6.821 * tc[0] - (22388.9297048172) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.821 * invT + (22388.9297048172) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 1 * exp(-T / 675);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 675 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // H
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[142] += dqdci; // dwdot[H]/d[H2]
    J[162] += dqdci; // dwdot[C2H2]/d[H2]
    J[164] -= dqdci; // dwdot[C2H3]/d[H2]
    // d()/d[H2O]
    dqdci = (5 - 1) * dcdc_fac;
    J[212] += dqdci; // dwdot[H]/d[H2O]
    J[232] += dqdci; // dwdot[C2H2]/d[H2O]
    J[234] -= dqdci; // dwdot[C2H3]/d[H2O]
    // d()/d[CO]
    dqdci = (2 - 1) * dcdc_fac;
    J[422] += dqdci; // dwdot[H]/d[CO]
    J[442] += dqdci; // dwdot[C2H2]/d[CO]
    J[444] -= dqdci; // dwdot[C2H3]/d[CO]
    // d()/d[CO2]
    dqdci = (3 - 1) * dcdc_fac;
    J[632] += dqdci; // dwdot[H]/d[CO2]
    J[652] += dqdci; // dwdot[C2H2]/d[CO2]
    J[654] -= dqdci; // dwdot[C2H3]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f;
    J[842] += dqdci; // dwdot[H]/d[C2H3]
    J[862] += dqdci; // dwdot[C2H2]/d[C2H3]
    J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 5 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = 2 * dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = 3 * dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac + k_f;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] += dqdc[k];
      J[35 * k + 22] += dqdc[k];
      J[35 * k + 24] -= dqdc[k];
    }
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 94: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 1081000 * exp(0.45 * tc[0] - (916.830572096251) * invT);
  dlnkfdT = 0.45 * invT + (916.830572096251) * invT2;
  // pressure-fall-off
  k_0 = 1.112e+34 * exp(-5 * tc[0] - (2238.25740783281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5 * invT + (2238.25740783281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 1 * exp(-T / 95);
  Fcent3 = exp(-200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent2 / 95 + Fcent3 * 200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[14];
  Kc = refCinv * exp(g_RT[2] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (h_RT[14]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q;  // H
  wdot[14] += q; // C2H5
  wdot[16] -= q; // C2H4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[16];
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[84] += dqdci; // dwdot[C2H5]/d[H]
    J[86] -= dqdci; // dwdot[C2H4]/d[H]
    // d()/d[C2H5]
    dqdci = -k_r;
    J[492] -= dqdci; // dwdot[H]/d[C2H5]
    J[504] += dqdci; // dwdot[C2H5]/d[C2H5]
    J[506] -= dqdci; // dwdot[C2H4]/d[C2H5]
    // d()/d[C2H4]
    dqdci = +k_f * sc[2];
    J[562] -= dqdci; // dwdot[H]/d[C2H4]
    J[574] += dqdci; // dwdot[C2H5]/d[C2H4]
    J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac + k_f * sc[16];
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac - k_r;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac + k_f * sc[2];
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 14] += dqdc[k];
      J[35 * k + 16] -= dqdc[k];
    }
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT

  // reaction 103: C2H4 (+M) => C2H2 + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[16];
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  dlnkfdT = (38244.4666011587) * invT2;
  // pressure-fall-off
  k_0 = 1.5e+15 * exp(-(27898.3369843803) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (27898.3369843803) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[4] += q;  // H2
  wdot[16] -= q; // C2H4
  wdot[22] += q; // C2H2
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = +k_f;
    J[564] += dqdci; // dwdot[H2]/d[C2H4]
    J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
    J[582] += dqdci; // dwdot[C2H2]/d[C2H4]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac + k_f;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 4] += dqdc[k];
      J[35 * k + 16] -= dqdc[k];
      J[35 * k + 22] += dqdc[k];
    }
  }
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT

  // reaction 0: H + O + M => OH + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 4720000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * sc[2];
    J[36] -= dqdci; // dwdot[O]/d[O]
    J[37] -= dqdci; // dwdot[H]/d[O]
    J[38] += dqdci; // dwdot[OH]/d[O]
    // d()/d[H]
    dqdci = +k_f * sc[1];
    J[71] -= dqdci; // dwdot[O]/d[H]
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[73] += dqdci; // dwdot[OH]/d[H]
    // d()/d[H2]
    dqdci = (2.5 - 1) * q_nocor;
    J[141] -= dqdci; // dwdot[O]/d[H2]
    J[142] -= dqdci; // dwdot[H]/d[H2]
    J[143] += dqdci; // dwdot[OH]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[211] -= dqdci; // dwdot[O]/d[H2O]
    J[212] -= dqdci; // dwdot[H]/d[H2O]
    J[213] += dqdci; // dwdot[OH]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * q_nocor;
    J[421] -= dqdci; // dwdot[O]/d[CO]
    J[422] -= dqdci; // dwdot[H]/d[CO]
    J[423] += dqdci; // dwdot[OH]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * q_nocor;
    J[631] -= dqdci; // dwdot[O]/d[CO2]
    J[632] -= dqdci; // dwdot[H]/d[CO2]
    J[633] += dqdci; // dwdot[OH]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * sc[2];
    dqdc[2] = q_nocor + k_f * sc[1];
    dqdc[3] = q_nocor;
    dqdc[4] = 2.5 * q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 12 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = 1.9 * q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = 3.8 * q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 1] -= dqdc[k];
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 3] += dqdc[k];
    }
  }
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT

  // reaction 3: 2 O + M => O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = (sc[1] * sc[1]);
  k_f = 6170 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= 2 * q; // O
  wdot[5] += q;     // O2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * 2.000000 * sc[1];
    J[36] += -2 * dqdci; // dwdot[O]/d[O]
    J[40] += dqdci;      // dwdot[O2]/d[O]
    // d()/d[H2]
    dqdci = (2.5 - 1) * q_nocor;
    J[141] += -2 * dqdci; // dwdot[O]/d[H2]
    J[145] += dqdci;      // dwdot[O2]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[211] += -2 * dqdci; // dwdot[O]/d[H2O]
    J[215] += dqdci;      // dwdot[O2]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * q_nocor;
    J[421] += -2 * dqdci; // dwdot[O]/d[CO]
    J[425] += dqdci;      // dwdot[O2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * q_nocor;
    J[631] += -2 * dqdci; // dwdot[O]/d[CO2]
    J[635] += dqdci;      // dwdot[O2]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * 2.000000 * sc[1];
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = 2.5 * q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 12 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = 1.9 * q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = 3.8 * q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 1] += -2 * dqdc[k];
      J[35 * k + 5] += dqdc[k];
    }
  }
  J[1191] += -2 * dqdT; // dwdot[O]/dT
  J[1195] += dqdT;      // dwdot[O2]/dT

  // reaction 7: H + OH + M => H2O + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (12 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 22500000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[3];
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[73] -= dqdci; // dwdot[OH]/d[H]
    J[76] += dqdci; // dwdot[H2O]/d[H]
    // d()/d[OH]
    dqdci = +k_f * sc[2];
    J[107] -= dqdci; // dwdot[H]/d[OH]
    J[108] -= dqdci; // dwdot[OH]/d[OH]
    J[111] += dqdci; // dwdot[H2O]/d[OH]
    // d()/d[H2]
    dqdci = (2.5 - 1) * q_nocor;
    J[142] -= dqdci; // dwdot[H]/d[H2]
    J[143] -= dqdci; // dwdot[OH]/d[H2]
    J[146] += dqdci; // dwdot[H2O]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[212] -= dqdci; // dwdot[H]/d[H2O]
    J[213] -= dqdci; // dwdot[OH]/d[H2O]
    J[216] += dqdci; // dwdot[H2O]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * q_nocor;
    J[422] -= dqdci; // dwdot[H]/d[CO]
    J[423] -= dqdci; // dwdot[OH]/d[CO]
    J[426] += dqdci; // dwdot[H2O]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * q_nocor;
    J[632] -= dqdci; // dwdot[H]/d[CO2]
    J[633] -= dqdci; // dwdot[OH]/d[CO2]
    J[636] += dqdci; // dwdot[H2O]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor + k_f * sc[3];
    dqdc[3] = q_nocor + k_f * sc[2];
    dqdc[4] = 2.5 * q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 12 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = 1.9 * q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = 3.8 * q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 3] -= dqdc[k];
      J[35 * k + 6] += dqdc[k];
    }
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT

  // reaction 66: HCO + M => CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (6 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[19];
  k_f = 186000000000 * exp(-1 * tc[0] - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2.5 - 1) * q_nocor;
    J[142] += dqdci; // dwdot[H]/d[H2]
    J[152] += dqdci; // dwdot[CO]/d[H2]
    J[159] -= dqdci; // dwdot[HCO]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * q_nocor;
    J[212] += dqdci; // dwdot[H]/d[H2O]
    J[222] += dqdci; // dwdot[CO]/d[H2O]
    J[229] -= dqdci; // dwdot[HCO]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * q_nocor;
    J[422] += dqdci; // dwdot[H]/d[CO]
    J[432] += dqdci; // dwdot[CO]/d[CO]
    J[439] -= dqdci; // dwdot[HCO]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * q_nocor;
    J[632] += dqdci; // dwdot[H]/d[CO2]
    J[642] += dqdci; // dwdot[CO]/d[CO2]
    J[649] -= dqdci; // dwdot[HCO]/d[CO2]
    // d()/d[HCO]
    dqdci = +k_f;
    J[667] += dqdci; // dwdot[H]/d[HCO]
    J[677] += dqdci; // dwdot[CO]/d[HCO]
    J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = 2.5 * q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 6 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = 1.9 * q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = 3.8 * q_nocor;
    dqdc[19] = q_nocor + k_f;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] += dqdc[k];
      J[35 * k + 12] += dqdc[k];
      J[35 * k + 19] -= dqdc[k];
    }
  }
  J[1192] += dqdT; // dwdot[H]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 67: CO + H + M => HCO + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[4] + (6 - 1) * sc[6] + (1.9 - 1) * sc[12] +
          (3.8 - 1) * sc[18];
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 64.67 * exp(-(-222.381508952422) * invT);
  dlnkfdT = (-222.381508952422) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[12] -= q; // CO
  wdot[19] += q; // HCO
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[H]
    dqdci = +k_f * sc[12];
    J[72] -= dqdci; // dwdot[H]/d[H]
    J[82] -= dqdci; // dwdot[CO]/d[H]
    J[89] += dqdci; // dwdot[HCO]/d[H]
    // d()/d[H2]
    dqdci = (2.5 - 1) * q_nocor;
    J[142] -= dqdci; // dwdot[H]/d[H2]
    J[152] -= dqdci; // dwdot[CO]/d[H2]
    J[159] += dqdci; // dwdot[HCO]/d[H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * q_nocor;
    J[212] -= dqdci; // dwdot[H]/d[H2O]
    J[222] -= dqdci; // dwdot[CO]/d[H2O]
    J[229] += dqdci; // dwdot[HCO]/d[H2O]
    // d()/d[CO]
    dqdci = (1.9 - 1) * q_nocor + k_f * sc[2];
    J[422] -= dqdci; // dwdot[H]/d[CO]
    J[432] -= dqdci; // dwdot[CO]/d[CO]
    J[439] += dqdci; // dwdot[HCO]/d[CO]
    // d()/d[CO2]
    dqdci = (3.8 - 1) * q_nocor;
    J[632] -= dqdci; // dwdot[H]/d[CO2]
    J[642] -= dqdci; // dwdot[CO]/d[CO2]
    J[649] += dqdci; // dwdot[HCO]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor + k_f * sc[12];
    dqdc[3] = q_nocor;
    dqdc[4] = 2.5 * q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 6 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = 1.9 * q_nocor + k_f * sc[2];
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = 3.8 * q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 2] -= dqdc[k];
      J[35 * k + 12] -= dqdc[k];
      J[35 * k + 19] += dqdc[k];
    }
  }
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 82: CH3O2 + M => CH3 + O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[20];
  k_f = 4.343e+21 * exp(-3.42 * tc[0] - (15332.9564532366) * invT);
  dlnkfdT = -3.42 * invT + (15332.9564532366) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[11] += q; // CH3
  wdot[20] -= q; // CH3O2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[CH3O2]
    dqdci = +k_f;
    J[705] += dqdci; // dwdot[O2]/d[CH3O2]
    J[711] += dqdci; // dwdot[CH3]/d[CH3O2]
    J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor + k_f;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 5] += dqdc[k];
      J[35 * k + 11] += dqdc[k];
      J[35 * k + 20] -= dqdc[k];
    }
  }
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT

  // reaction 83: CH3 + O2 + M => CH3O2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 54400000000000 * exp(-3.3 * tc[0]);
  dlnkfdT = -3.3 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[20] += q; // CH3O2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[O2]
    dqdci = +k_f * sc[11];
    J[180] -= dqdci; // dwdot[O2]/d[O2]
    J[186] -= dqdci; // dwdot[CH3]/d[O2]
    J[195] += dqdci; // dwdot[CH3O2]/d[O2]
    // d()/d[CH3]
    dqdci = +k_f * sc[5];
    J[390] -= dqdci; // dwdot[O2]/d[CH3]
    J[396] -= dqdci; // dwdot[CH3]/d[CH3]
    J[405] += dqdci; // dwdot[CH3O2]/d[CH3]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor + k_f * sc[11];
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor + k_f * sc[5];
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    for (int k = 0; k < 34; k++) {
      J[35 * k + 5] -= dqdc[k];
      J[35 * k + 11] -= dqdc[k];
      J[35 * k + 20] += dqdc[k];
    }
  }
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1210] += dqdT; // dwdot[CH3O2]/dT

  // reaction 1: H2 + O => H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 0.0508 * exp(2.67 * tc[0] - (3166.2744864099) * invT);
  dlnkfdT = 2.67 * invT + (3166.2744864099) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] += q; // H
  wdot[3] += q; // OH
  wdot[4] -= q; // H2
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[39] -= dqdci; // dwdot[H2]/d[O]
  // d()/d[H2]
  dqdci = +k_f * sc[1];
  J[141] -= dqdci; // dwdot[O]/d[H2]
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[143] += dqdci; // dwdot[OH]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT

  // reaction 2: H + OH => H2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 0.02231 * exp(2.67 * tc[0] - (2111.97015338246) * invT);
  dlnkfdT = 2.67 * invT + (2111.97015338246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[2] -= q; // H
  wdot[3] -= q; // OH
  wdot[4] += q; // H2
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[71] += dqdci; // dwdot[O]/d[H]
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] -= dqdci; // dwdot[OH]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[107] -= dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] += dqdci; // dwdot[H2]/d[OH]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT

  // reaction 4: H2 + OH => H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 216 * exp(1.51 * tc[0] - (1726.01806721021) * invT);
  dlnkfdT = 1.51 * invT + (1726.01806721021) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // H
  wdot[3] -= q; // OH
  wdot[4] -= q; // H2
  wdot[6] += q; // H2O
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] -= dqdci; // dwdot[H2]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[143] -= dqdci; // dwdot[OH]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[146] += dqdci; // dwdot[H2O]/d[H2]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT

  // reaction 5: H + H2O => H2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 935.2 * exp(1.51 * tc[0] - (9349.8008758183) * invT);
  dlnkfdT = 1.51 * invT + (9349.8008758183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[4] += q; // H2
  wdot[6] -= q; // H2O
  // d()/d[H]
  dqdci = +k_f * sc[6];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[76] -= dqdci; // dwdot[H2O]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[2];
  J[212] -= dqdci; // dwdot[H]/d[H2O]
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[214] += dqdci; // dwdot[H2]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT

  // reaction 8: H2O + O => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 2.97 * exp(2.02 * tc[0] - (6743.15364344982) * invT);
  dlnkfdT = 2.02 * invT + (6743.15364344982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // O
  wdot[3] += 2 * q; // OH
  wdot[6] -= q;     // H2O
  // d()/d[O]
  dqdci = +k_f * sc[6];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[38] += 2 * dqdci; // dwdot[OH]/d[O]
  J[41] -= dqdci;     // dwdot[H2O]/d[O]
  // d()/d[H2O]
  dqdci = +k_f * sc[1];
  J[211] -= dqdci;     // dwdot[O]/d[H2O]
  J[213] += 2 * dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci;     // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1193] += 2 * dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT;     // dwdot[H2O]/dT

  // reaction 9: 2 OH => H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[3] * sc[3]);
  k_f = 0.3013 * exp(2.02 * tc[0] - (-1937.33384168159) * invT);
  dlnkfdT = 2.02 * invT + (-1937.33384168159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;     // O
  wdot[3] -= 2 * q; // OH
  wdot[6] += q;     // H2O
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[3];
  J[106] += dqdci;      // dwdot[O]/d[OH]
  J[108] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/dT
  J[1191] += dqdT;      // dwdot[O]/dT
  J[1193] += -2 * dqdT; // dwdot[OH]/dT
  J[1196] += dqdT;      // dwdot[H2O]/dT

  // reaction 10: H + O2 => O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 197000000 * exp(-(8323.15836291014) * invT);
  dlnkfdT = (8323.15836291014) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[5] -= q; // O2
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[71] += dqdci; // dwdot[O]/d[H]
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[75] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[177] -= dqdci; // dwdot[H]/d[O2]
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT

  // reaction 11: O + OH => H + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 15550000 * exp(-(213.841922133716) * invT);
  dlnkfdT = (213.841922133716) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[2] += q; // H
  wdot[3] -= q; // OH
  wdot[5] += q; // O2
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[38] -= dqdci; // dwdot[OH]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  // d()/d[OH]
  dqdci = +k_f * sc[1];
  J[106] -= dqdci; // dwdot[O]/d[OH]
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] += dqdci; // dwdot[O2]/d[OH]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT

  // reaction 13: H + HO2 => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 70800000 * exp(-(150.939838908126) * invT);
  dlnkfdT = (150.939838908126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // H
  wdot[3] += 2 * q; // OH
  wdot[8] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[72] -= dqdci;     // dwdot[H]/d[H]
  J[73] += 2 * dqdci; // dwdot[OH]/d[H]
  J[78] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[282] -= dqdci;     // dwdot[H]/d[HO2]
  J[283] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] -= dqdT;     // dwdot[H]/dT
  J[1193] += 2 * dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT;     // dwdot[HO2]/dT

  // reaction 14: 2 HO2 => H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[8] * sc[8]);
  k_f = 420000000 * exp(-(6028.49539900728) * invT);
  dlnkfdT = (6028.49539900728) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;     // O2
  wdot[7] += q;     // H2O2
  wdot[8] -= 2 * q; // HO2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[8];
  J[285] += dqdci;      // dwdot[O2]/d[HO2]
  J[287] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[288] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT
  J[1198] += -2 * dqdT; // dwdot[HO2]/dT

  // reaction 15: H + HO2 => H2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 16600000 * exp(-(412.652762459844) * invT);
  dlnkfdT = (412.652762459844) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[4] += q; // H2
  wdot[5] += q; // O2
  wdot[8] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[75] += dqdci; // dwdot[O2]/d[H]
  J[78] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[2];
  J[282] -= dqdci; // dwdot[H]/d[HO2]
  J[284] += dqdci; // dwdot[H2]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 16: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[8];
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  dlnkfdT = (-251.60833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[5] += q; // O2
  wdot[6] += q; // H2O
  wdot[8] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] += dqdci; // dwdot[O2]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[113] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[283] -= dqdci; // dwdot[OH]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[286] += dqdci; // dwdot[H2O]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 17: H2O + O2 => HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 6888000000 * exp(-0.33 * tc[0] - (36302.0804641524) * invT);
  dlnkfdT = -0.33 * invT + (36302.0804641524) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // OH
  wdot[5] -= q; // O2
  wdot[6] -= q; // H2O
  wdot[8] += q; // HO2
  // d()/d[O2]
  dqdci = +k_f * sc[6];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[181] -= dqdci; // dwdot[H2O]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  // d()/d[H2O]
  dqdci = +k_f * sc[5];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[215] -= dqdci; // dwdot[O2]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[218] += dqdci; // dwdot[HO2]/d[H2O]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 18: 2 HO2 => H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[8] * sc[8]);
  k_f = 130000 * exp(-(-819.770141595837) * invT);
  dlnkfdT = (-819.770141595837) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;     // O2
  wdot[7] += q;     // H2O2
  wdot[8] -= 2 * q; // HO2
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[8];
  J[285] += dqdci;      // dwdot[O2]/d[HO2]
  J[287] += dqdci;      // dwdot[H2O2]/d[HO2]
  J[288] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1197] += dqdT;      // dwdot[H2O2]/dT
  J[1198] += -2 * dqdT; // dwdot[HO2]/dT

  // reaction 19: HO2 + O => O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 32500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[3] += q; // OH
  wdot[5] += q; // O2
  wdot[8] -= q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[8];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[43] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[1];
  J[281] -= dqdci; // dwdot[O]/d[HO2]
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 20: O2 + OH => HO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 785700000 * exp(-0.33 * tc[0] - (27873.2013119234) * invT);
  dlnkfdT = -0.33 * invT + (27873.2013119234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q; // O
  wdot[3] -= q; // OH
  wdot[5] -= q; // O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[5];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[110] -= dqdci; // dwdot[O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[3];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[178] -= dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 21: H2O2 + OH => H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[112] -= dqdci; // dwdot[H2O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[248] -= dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 22: H + H2O2 => H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 24100000 * exp(-(1997.7148094115) * invT);
  dlnkfdT = (1997.7148094115) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[3] += q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[76] += dqdci; // dwdot[H2O]/d[H]
  J[77] -= dqdci; // dwdot[H2O2]/d[H]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[247] -= dqdci; // dwdot[H]/d[H2O2]
  J[248] += dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT

  // reaction 23: H2O2 + OH => H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 580000000 * exp(-(4810.74629292646) * invT);
  dlnkfdT = (4810.74629292646) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // OH
  wdot[6] += q; // H2O
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[112] -= dqdci; // dwdot[H2O2]/d[OH]
  J[113] += dqdci; // dwdot[HO2]/d[OH]
  // d()/d[H2O2]
  dqdci = +k_f * sc[3];
  J[248] -= dqdci; // dwdot[OH]/d[H2O2]
  J[251] += dqdci; // dwdot[H2O]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 24: H2O + HO2 => H2O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[8];
  k_f = 97710000 * exp(0.33 * tc[0] - (20641.9878886429) * invT);
  dlnkfdT = 0.33 * invT + (20641.9878886429) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // OH
  wdot[6] -= q; // H2O
  wdot[7] += q; // H2O2
  wdot[8] -= q; // HO2
  // d()/d[H2O]
  dqdci = +k_f * sc[8];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[217] += dqdci; // dwdot[H2O2]/d[H2O]
  J[218] -= dqdci; // dwdot[HO2]/d[H2O]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[286] -= dqdci; // dwdot[H2O]/d[HO2]
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 25: H2O2 + O => HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 9.55 * exp(2 * tc[0] - (1997.7148094115) * invT);
  dlnkfdT = 2 * invT + (1997.7148094115) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q; // O
  wdot[3] += q; // OH
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[42] -= dqdci; // dwdot[H2O2]/d[O]
  J[43] += dqdci; // dwdot[HO2]/d[O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[1];
  J[246] -= dqdci; // dwdot[O]/d[H2O2]
  J[248] += dqdci; // dwdot[OH]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 26: H + H2O2 => H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 48200000 * exp(-(4000.59765398081) * invT);
  dlnkfdT = (4000.59765398081) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // H
  wdot[4] += q; // H2
  wdot[7] -= q; // H2O2
  wdot[8] += q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[77] -= dqdci; // dwdot[H2O2]/d[H]
  J[78] += dqdci; // dwdot[HO2]/d[H]
  // d()/d[H2O2]
  dqdci = +k_f * sc[2];
  J[247] -= dqdci; // dwdot[H]/d[H2O2]
  J[249] += dqdci; // dwdot[H2]/d[H2O2]
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT

  // reaction 27: H2 + HO2 => H + H2O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[8];
  k_f = 1875000 * exp(0.33 * tc[0] - (12208.0564410891) * invT);
  dlnkfdT = 0.33 * invT + (12208.0564410891) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // H
  wdot[4] -= q; // H2
  wdot[7] += q; // H2O2
  wdot[8] -= q; // HO2
  // d()/d[H2]
  dqdci = +k_f * sc[8];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[147] += dqdci; // dwdot[H2O2]/d[H2]
  J[148] -= dqdci; // dwdot[HO2]/d[H2]
  // d()/d[HO2]
  dqdci = +k_f * sc[4];
  J[282] += dqdci; // dwdot[H]/d[HO2]
  J[284] -= dqdci; // dwdot[H2]/d[HO2]
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT

  // reaction 28: CH2GSG + OH => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] -= q;  // OH
  wdot[9] -= q;  // CH2GSG
  wdot[10] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[114] -= dqdci; // dwdot[CH2GSG]/d[OH]
  J[115] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[3];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[318] -= dqdci; // dwdot[OH]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[325] += dqdci; // dwdot[CH2O]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT

  // reaction 29: CH2GSG + H2 => CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  // d()/d[H2]
  dqdci = +k_f * sc[9];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[149] -= dqdci; // dwdot[CH2GSG]/d[H2]
  J[151] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[4];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[319] -= dqdci; // dwdot[H2]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT

  // reaction 30: CH3 + H => CH2GSG + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 248200000000 * exp(-0.89 * tc[0] - (8116.89488376345) * invT);
  dlnkfdT = -0.89 * invT + (8116.89488376345) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[9] += q;  // CH2GSG
  wdot[11] -= q; // CH3
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[79] += dqdci; // dwdot[CH2GSG]/d[H]
  J[81] -= dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[387] -= dqdci; // dwdot[H]/d[CH3]
  J[389] += dqdci; // dwdot[H2]/d[CH3]
  J[394] += dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 31: CH2GSG + O2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[9] -= q;  // CH2GSG
  wdot[12] += q; // CO
  // d()/d[O2]
  dqdci = +k_f * sc[9];
  J[177] += dqdci; // dwdot[H]/d[O2]
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[184] -= dqdci; // dwdot[CH2GSG]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[5];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[318] += dqdci; // dwdot[OH]/d[CH2GSG]
  J[320] -= dqdci; // dwdot[O2]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[327] += dqdci; // dwdot[CO]/d[CH2GSG]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1202] += dqdT; // dwdot[CO]/dT

  // reaction 32: CH2GSG + O => CO + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // O
  wdot[2] += 2 * q; // H
  wdot[9] -= q;     // CH2GSG
  wdot[12] += q;    // CO
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[37] += 2 * dqdci; // dwdot[H]/d[O]
  J[44] -= dqdci;     // dwdot[CH2GSG]/d[O]
  J[47] += dqdci;     // dwdot[CO]/d[O]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[1];
  J[316] -= dqdci;     // dwdot[O]/d[CH2GSG]
  J[317] += 2 * dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci;     // dwdot[CH2GSG]/d[CH2GSG]
  J[327] += dqdci;     // dwdot[CO]/d[CH2GSG]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1192] += 2 * dqdT; // dwdot[H]/dT
  J[1199] -= dqdT;     // dwdot[CH2GSG]/dT
  J[1202] += dqdT;     // dwdot[CO]/dT

  // reaction 33: CH3 + HO2 => CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[13] += q; // CH3O
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[291] -= dqdci; // dwdot[CH3]/d[HO2]
  J[293] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[393] -= dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[398] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT

  // reaction 34: CH3 + O2 => CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  dlnkfdT = (7170.83748771726) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[186] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[5];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[390] -= dqdci; // dwdot[O2]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 35: CH3 + O2 => CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 1995000000000 * exp(-1.57 * tc[0] - (14699.0040976558) * invT);
  dlnkfdT = -1.57 * invT + (14699.0040976558) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[11] -= q; // CH3
  wdot[13] += q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[186] -= dqdci; // dwdot[CH3]/d[O2]
  J[188] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[5];
  J[386] += dqdci; // dwdot[O]/d[CH3]
  J[390] -= dqdci; // dwdot[O2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[398] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT

  // reaction 36: CH3O + O => CH3 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 3585000000000 * exp(-1.59 * tc[0] - (-820.736317594182) * invT);
  dlnkfdT = -1.59 * invT + (-820.736317594182) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[5] += q;  // O2
  wdot[11] += q; // CH3
  wdot[13] -= q; // CH3O
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[48] -= dqdci; // dwdot[CH3O]/d[O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[1];
  J[456] -= dqdci; // dwdot[O]/d[CH3O]
  J[460] += dqdci; // dwdot[O2]/d[CH3O]
  J[466] += dqdci; // dwdot[CH3]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 37: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 6840000 * exp(0.1 * tc[0] - (5334.04633586345) * invT);
  dlnkfdT = 0.1 * invT + (5334.04633586345) * invT2;
  // reverse
  phi_r = sc[2] * sc[14];
  Kc = exp(-g_RT[2] + 2.000000 * g_RT[11] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[11]) + (h_RT[2] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;      // H
  wdot[11] -= 2 * q; // CH3
  wdot[14] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[72] += dqdci;      // dwdot[H]/d[H]
  J[81] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[84] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[387] += dqdci;      // dwdot[H]/d[CH3]
  J[396] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[399] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[2];
  J[492] += dqdci;      // dwdot[H]/d[C2H5]
  J[501] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[504] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1192] += dqdT;      // dwdot[H]/dT
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT;      // dwdot[C2H5]/dT

  // reaction 38: CH3 + HO2 => CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[11];
  k_f = 3600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[291] -= dqdci; // dwdot[CH3]/d[HO2]
  J[295] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[390] += dqdci; // dwdot[O2]/d[CH3]
  J[393] -= dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 39: CH3 + O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[11];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[45] += dqdci; // dwdot[CH2O]/d[O]
  J[46] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[1];
  J[386] -= dqdci; // dwdot[O]/d[CH3]
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 40: CH3 + OH => CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 22500000 * exp(-(2163.806502127) * invT);
  dlnkfdT = (2163.806502127) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[4] += q;  // H2
  wdot[10] += q; // CH2O
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[109] += dqdci; // dwdot[H2]/d[OH]
  J[115] += dqdci; // dwdot[CH2O]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[389] += dqdci; // dwdot[H2]/d[CH3]
  J[395] += dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 41: CH3 + OH => CH2GSG + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 26500000 * exp(-(1100.00647061583) * invT);
  dlnkfdT = (1100.00647061583) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[9] += q;  // CH2GSG
  wdot[11] -= q; // CH3
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[114] += dqdci; // dwdot[CH2GSG]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[391] += dqdci; // dwdot[H2O]/d[CH3]
  J[394] += dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT

  // reaction 42: CH2GSG + H2O => CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 32360 * exp(0.89 * tc[0] - (609.415510956148) * invT);
  dlnkfdT = 0.89 * invT + (609.415510956148) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  // d()/d[H2O]
  dqdci = +k_f * sc[9];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[219] -= dqdci; // dwdot[CH2GSG]/d[H2O]
  J[221] += dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[6];
  J[318] += dqdci; // dwdot[OH]/d[CH2GSG]
  J[321] -= dqdci; // dwdot[H2O]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT

  // reaction 43: CH3 + H2O2 => CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 336500 * exp(-0.33 * tc[0] - (1259.00280834349) * invT);
  dlnkfdT = -0.33 * invT + (1259.00280834349) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // H2O2
  wdot[8] += q;  // HO2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2O2]
  dqdci = +k_f * sc[11];
  J[252] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[253] += dqdci; // dwdot[HO2]/d[H2O2]
  J[256] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[260] += dqdci; // dwdot[CH4]/d[H2O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[392] -= dqdci; // dwdot[H2O2]/d[CH3]
  J[393] += dqdci; // dwdot[HO2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1197] -= dqdT; // dwdot[H2O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 44: CH2GSG + CH3 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[9] -= q;  // CH2GSG
  wdot[11] -= q; // CH3
  wdot[16] += q; // C2H4
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[11];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] -= dqdci; // dwdot[CH3]/d[CH2GSG]
  J[331] += dqdci; // dwdot[C2H4]/d[CH2GSG]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[394] -= dqdci; // dwdot[CH2GSG]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 47: CH2GSG + CH4 => 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;      // CH2GSG
  wdot[11] += 2 * q; // CH3
  wdot[15] -= q;     // CH4
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[15];
  J[324] -= dqdci;     // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += 2 * dqdci; // dwdot[CH3]/d[CH2GSG]
  J[330] -= dqdci;     // dwdot[CH4]/d[CH2GSG]
  // d()/d[CH4]
  dqdci = +k_f * sc[9];
  J[534] -= dqdci;     // dwdot[CH2GSG]/d[CH4]
  J[536] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1199] -= dqdT;     // dwdot[CH2GSG]/dT
  J[1201] += 2 * dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT;     // dwdot[CH4]/dT

  // reaction 48: 2 CH3 => CH2GSG + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 5429000000 * exp(-0.89 * tc[0] - (7875.39114151044) * invT);
  dlnkfdT = -0.89 * invT + (7875.39114151044) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // CH2GSG
  wdot[11] -= 2 * q; // CH3
  wdot[15] += q;     // CH4
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[11];
  J[394] += dqdci;      // dwdot[CH2GSG]/d[CH3]
  J[396] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci;      // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1199] += dqdT;      // dwdot[CH2GSG]/dT
  J[1201] += -2 * dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT;      // dwdot[CH4]/dT

  // reaction 49: CH4 + O => CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 3150000 * exp(0.5 * tc[0] - (5178.05420163064) * invT);
  dlnkfdT = 0.5 * invT + (5178.05420163064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[15];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[50] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[CH4]
  dqdci = +k_f * sc[1];
  J[526] -= dqdci; // dwdot[O]/d[CH4]
  J[528] += dqdci; // dwdot[OH]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 50: CH3 + OH => CH4 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 52960 * exp(0.5 * tc[0] - (3882.37193051665) * invT);
  dlnkfdT = 0.5 * invT + (3882.37193051665) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[3] -= q;  // OH
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[106] += dqdci; // dwdot[O]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[116] -= dqdci; // dwdot[CH3]/d[OH]
  J[120] += dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[386] += dqdci; // dwdot[O]/d[CH3]
  J[388] -= dqdci; // dwdot[OH]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 51: CH4 + H => CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 0.01727 * exp(3 * tc[0] - (4138.42869874472) * invT);
  dlnkfdT = 3 * invT + (4138.42869874472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[H]
  dqdci = +k_f * sc[15];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[81] += dqdci; // dwdot[CH3]/d[H]
  J[85] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[527] -= dqdci; // dwdot[H]/d[CH4]
  J[529] += dqdci; // dwdot[H2]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 52: CH3 + H2 => CH4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 0.000661 * exp(3 * tc[0] - (3896.91992432507) * invT);
  dlnkfdT = 3 * invT + (3896.91992432507) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2]
  dqdci = +k_f * sc[11];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[151] -= dqdci; // dwdot[CH3]/d[H2]
  J[155] += dqdci; // dwdot[CH4]/d[H2]
  // d()/d[CH3]
  dqdci = +k_f * sc[4];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[389] -= dqdci; // dwdot[H2]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 53: CH4 + OH => CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 0.193 * exp(2.4 * tc[0] - (1059.83468418464) * invT);
  dlnkfdT = 2.4 * invT + (1059.83468418464) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[15];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[116] += dqdci; // dwdot[CH3]/d[OH]
  J[120] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[528] -= dqdci; // dwdot[OH]/d[CH4]
  J[531] += dqdci; // dwdot[H2O]/d[CH4]
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT

  // reaction 54: CH3 + H2O => CH4 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 0.03199 * exp(2.4 * tc[0] - (8444.03100603644) * invT);
  dlnkfdT = 2.4 * invT + (8444.03100603644) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  // d()/d[H2O]
  dqdci = +k_f * sc[11];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[221] -= dqdci; // dwdot[CH3]/d[H2O]
  J[225] += dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[388] += dqdci; // dwdot[OH]/d[CH3]
  J[391] -= dqdci; // dwdot[H2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT

  // reaction 55: CO + HO2 => CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[12];
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  dlnkfdT = (11573.9833135086) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[292] -= dqdci; // dwdot[CO]/d[HO2]
  J[298] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[8];
  J[423] += dqdci; // dwdot[OH]/d[CO]
  J[428] -= dqdci; // dwdot[HO2]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 56: CO + O2 => CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[12];
  k_f = 16200000 * exp(-(24003.4601197184) * invT);
  dlnkfdT = (24003.4601197184) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[187] -= dqdci; // dwdot[CO]/d[O2]
  J[193] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[CO]
  dqdci = +k_f * sc[5];
  J[421] += dqdci; // dwdot[O]/d[CO]
  J[425] -= dqdci; // dwdot[O2]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 57: CO2 + O => CO + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[18];
  k_f = 143300000 * exp(-(27133.4073950239) * invT);
  dlnkfdT = (27133.4073950239) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[5] += q;  // O2
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[40] += dqdci; // dwdot[O2]/d[O]
  J[47] += dqdci; // dwdot[CO]/d[O]
  J[53] -= dqdci; // dwdot[CO2]/d[O]
  // d()/d[CO2]
  dqdci = +k_f * sc[1];
  J[631] -= dqdci; // dwdot[O]/d[CO2]
  J[635] += dqdci; // dwdot[O2]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 58: CO + OH => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 0.14 * exp(1.95 * tc[0] - (-677.852977505589) * invT);
  dlnkfdT = 1.95 * invT + (-677.852977505589) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[3] -= q;  // OH
  wdot[12] -= q; // CO
  wdot[18] += q; // CO2
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[107] += dqdci; // dwdot[H]/d[OH]
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[117] -= dqdci; // dwdot[CO]/d[OH]
  J[123] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[3];
  J[422] += dqdci; // dwdot[H]/d[CO]
  J[423] -= dqdci; // dwdot[OH]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[438] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT

  // reaction 59: CO2 + H => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 15.68 * exp(1.95 * tc[0] - (10562.4976865744) * invT);
  dlnkfdT = 1.95 * invT + (10562.4976865744) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[3] += q;  // OH
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[73] += dqdci; // dwdot[OH]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[88] -= dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = +k_f * sc[2];
  J[632] -= dqdci; // dwdot[H]/d[CO2]
  J[633] += dqdci; // dwdot[OH]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 61: CH3 + HCO => CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 121000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[12] += q; // CO
  wdot[15] += q; // CH4
  wdot[19] -= q; // HCO
  // d()/d[CH3]
  dqdci = +k_f * sc[19];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[397] += dqdci; // dwdot[CO]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[404] -= dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[HCO]
  dqdci = +k_f * sc[11];
  J[676] -= dqdci; // dwdot[CH3]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[680] += dqdci; // dwdot[CH4]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 62: H + HCO => CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 73400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[19];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[89] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[2];
  J[667] -= dqdci; // dwdot[H]/d[HCO]
  J[669] += dqdci; // dwdot[H2]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 63: HCO + O2 => CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 7580000 * exp(-(206.263479146697) * invT);
  dlnkfdT = (206.263479146697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  J[194] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[5];
  J[670] -= dqdci; // dwdot[O2]/d[HCO]
  J[673] += dqdci; // dwdot[HO2]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 64: HCO + O => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[47] += dqdci; // dwdot[CO]/d[O]
  J[54] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[666] -= dqdci; // dwdot[O]/d[HCO]
  J[668] += dqdci; // dwdot[OH]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 65: HCO + O => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[18] += q; // CO2
  wdot[19] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[53] += dqdci; // dwdot[CO2]/d[O]
  J[54] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[666] -= dqdci; // dwdot[O]/d[HCO]
  J[667] += dqdci; // dwdot[H]/d[HCO]
  J[683] += dqdci; // dwdot[CO2]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 68: HCO + OH => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 102000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[12] += q; // CO
  wdot[19] -= q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[19];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[117] += dqdci; // dwdot[CO]/d[OH]
  J[124] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[668] -= dqdci; // dwdot[OH]/d[HCO]
  J[671] += dqdci; // dwdot[H2O]/d[HCO]
  J[677] += dqdci; // dwdot[CO]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT

  // reaction 69: CH2O + H => H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 933.4 * exp(1.5 * tc[0] - (1497.62311910143) * invT);
  dlnkfdT = 1.5 * invT + (1497.62311910143) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[10];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[80] -= dqdci; // dwdot[CH2O]/d[H]
  J[89] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[CH2O]
  dqdci = +k_f * sc[2];
  J[352] -= dqdci; // dwdot[H]/d[CH2O]
  J[354] += dqdci; // dwdot[H2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 70: CH2O + O2 => HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[10];
  k_f = 20500000 * exp(-(19600.3142939271) * invT);
  dlnkfdT = (19600.3142939271) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[185] -= dqdci; // dwdot[CH2O]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH2O]
  dqdci = +k_f * sc[5];
  J[355] -= dqdci; // dwdot[O2]/d[CH2O]
  J[358] += dqdci; // dwdot[HO2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 71: CH2O + OH => H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.907656614761) * invT);
  dlnkfdT = 1.18 * invT + (-224.907656614761) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[115] -= dqdci; // dwdot[CH2O]/d[OH]
  J[124] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[353] -= dqdci; // dwdot[OH]/d[CH2O]
  J[356] += dqdci; // dwdot[H2O]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 72: CH2O + HO2 => H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 5.82e-09 * exp(4.53 * tc[0] - (3299.53129168165) * invT);
  dlnkfdT = 4.53 * invT + (3299.53129168165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[HO2]
  dqdci = +k_f * sc[10];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[290] -= dqdci; // dwdot[CH2O]/d[HO2]
  J[299] += dqdci; // dwdot[HCO]/d[HO2]
  // d()/d[CH2O]
  dqdci = +k_f * sc[8];
  J[357] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[358] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 73: CH2O + O => HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[10];
  k_f = 416000 * exp(0.57 * tc[0] - (1389.85927011935) * invT);
  dlnkfdT = 0.57 * invT + (1389.85927011935) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[45] -= dqdci; // dwdot[CH2O]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[CH2O]
  dqdci = +k_f * sc[1];
  J[351] -= dqdci; // dwdot[O]/d[CH2O]
  J[353] += dqdci; // dwdot[OH]/d[CH2O]
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 74: CH2O + CH3 => CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 3.636e-12 * exp(5.42 * tc[0] - (502.255521973033) * invT);
  dlnkfdT = 5.42 * invT + (502.255521973033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[19] += q; // HCO
  // d()/d[CH2O]
  dqdci = +k_f * sc[11];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[361] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[365] += dqdci; // dwdot[CH4]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[395] -= dqdci; // dwdot[CH2O]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[404] += dqdci; // dwdot[HCO]/d[CH3]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 76: CH3O + O2 => CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[13];
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  dlnkfdT = (1219.79719791064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[10] += q; // CH2O
  wdot[13] -= q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[13];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[188] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[CH3O]
  dqdci = +k_f * sc[5];
  J[460] -= dqdci; // dwdot[O2]/d[CH3O]
  J[463] += dqdci; // dwdot[HO2]/d[CH3O]
  J[465] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT

  // reaction 77: CH2GSG + CO2 => CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 3000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // CH2GSG
  wdot[10] += q; // CH2O
  wdot[12] += q; // CO
  wdot[18] -= q; // CO2
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[18];
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[325] += dqdci; // dwdot[CH2O]/d[CH2GSG]
  J[327] += dqdci; // dwdot[CO]/d[CH2GSG]
  J[333] -= dqdci; // dwdot[CO2]/d[CH2GSG]
  // d()/d[CO2]
  dqdci = +k_f * sc[9];
  J[639] -= dqdci; // dwdot[CH2GSG]/d[CO2]
  J[640] += dqdci; // dwdot[CH2O]/d[CO2]
  J[642] += dqdci; // dwdot[CO]/d[CO2]
  J[648] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1208] -= dqdT; // dwdot[CO2]/dT

  // reaction 78: CH3 + CH3O2 => 2 CH3O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[20];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q;     // CH3
  wdot[13] += 2 * q; // CH3O
  wdot[20] -= q;     // CH3O2
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[396] -= dqdci;     // dwdot[CH3]/d[CH3]
  J[398] += 2 * dqdci; // dwdot[CH3O]/d[CH3]
  J[405] -= dqdci;     // dwdot[CH3O2]/d[CH3]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[11];
  J[711] -= dqdci;     // dwdot[CH3]/d[CH3O2]
  J[713] += 2 * dqdci; // dwdot[CH3O]/d[CH3O2]
  J[720] -= dqdci;     // dwdot[CH3O2]/d[CH3O2]
  // d()/dT
  J[1201] -= dqdT;     // dwdot[CH3]/dT
  J[1203] += 2 * dqdT; // dwdot[CH3O]/dT
  J[1210] -= dqdT;     // dwdot[CH3O2]/dT

  // reaction 79: CH3O2 + HO2 => CH3O2H + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 17500 * exp(-(-1648.08490217704) * invT);
  dlnkfdT = (-1648.08490217704) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  // d()/d[HO2]
  dqdci = +k_f * sc[20];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[300] -= dqdci; // dwdot[CH3O2]/d[HO2]
  J[301] += dqdci; // dwdot[CH3O2H]/d[HO2]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[8];
  J[705] += dqdci; // dwdot[O2]/d[CH3O2]
  J[708] -= dqdci; // dwdot[HO2]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 80: 2 CH3O2 => 2 CH3O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[20] * sc[20]);
  k_f = 14000000000 * exp(-1.61 * tc[0] - (935.95280539683) * invT);
  dlnkfdT = -1.61 * invT + (935.95280539683) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;      // O2
  wdot[13] += 2 * q; // CH3O
  wdot[20] -= 2 * q; // CH3O2
  // d()/d[CH3O2]
  dqdci = +k_f * 2.000000 * sc[20];
  J[705] += dqdci;      // dwdot[O2]/d[CH3O2]
  J[713] += 2 * dqdci;  // dwdot[CH3O]/d[CH3O2]
  J[720] += -2 * dqdci; // dwdot[CH3O2]/d[CH3O2]
  // d()/dT
  J[1195] += dqdT;      // dwdot[O2]/dT
  J[1203] += 2 * dqdT;  // dwdot[CH3O]/dT
  J[1210] += -2 * dqdT; // dwdot[CH3O2]/dT

  // reaction 81: CH2O + CH3O2 => CH3O2H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 1990000 * exp(-(5867.45096944979) * invT);
  dlnkfdT = (5867.45096944979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  // d()/d[CH2O]
  dqdci = +k_f * sc[20];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  J[370] -= dqdci; // dwdot[CH3O2]/d[CH2O]
  J[371] += dqdci; // dwdot[CH3O2H]/d[CH2O]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[10];
  J[710] -= dqdci; // dwdot[CH2O]/d[CH3O2]
  J[719] += dqdci; // dwdot[HCO]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 84: CH3O2H => CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21];
  k_f = 631000000000000 * exp(-(21286.0398027063) * invT);
  dlnkfdT = (21286.0398027063) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[13] += q; // CH3O
  wdot[21] -= q; // CH3O2H
  // d()/d[CH3O2H]
  dqdci = +k_f;
  J[738] += dqdci; // dwdot[OH]/d[CH3O2H]
  J[748] += dqdci; // dwdot[CH3O]/d[CH3O2H]
  J[756] -= dqdci; // dwdot[CH3O2H]/d[CH3O2H]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT
  J[1211] -= dqdT; // dwdot[CH3O2H]/dT

  // reaction 85: CH3O + OH => CH3O2H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 116600 * exp(0.6 * tc[0] - (-891.211811640133) * invT);
  dlnkfdT = 0.6 * invT + (-891.211811640133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[13] -= q; // CH3O
  wdot[21] += q; // CH3O2H
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[118] -= dqdci; // dwdot[CH3O]/d[OH]
  J[126] += dqdci; // dwdot[CH3O2H]/d[OH]
  // d()/d[CH3O]
  dqdci = +k_f * sc[3];
  J[458] -= dqdci; // dwdot[OH]/d[CH3O]
  J[468] -= dqdci; // dwdot[CH3O]/d[CH3O]
  J[476] += dqdci; // dwdot[CH3O2H]/d[CH3O]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1203] -= dqdT; // dwdot[CH3O]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT

  // reaction 86: C2H2 + O2 => HCCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 200 * exp(1.5 * tc[0] - (15146.7713190555) * invT);
  dlnkfdT = 1.5 * invT + (15146.7713190555) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[22] -= q; // C2H2
  wdot[23] += q; // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[22];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[197] -= dqdci; // dwdot[C2H2]/d[O2]
  J[198] += dqdci; // dwdot[HCCO]/d[O2]
  // d()/d[C2H2]
  dqdci = +k_f * sc[5];
  J[773] += dqdci; // dwdot[OH]/d[C2H2]
  J[775] -= dqdci; // dwdot[O2]/d[C2H2]
  J[792] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[793] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1212] -= dqdT; // dwdot[C2H2]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 87: C2H2 + O => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 14.3 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[23] += q; // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[57] -= dqdci; // dwdot[C2H2]/d[O]
  J[58] += dqdci; // dwdot[HCCO]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[1];
  J[771] -= dqdci; // dwdot[O]/d[C2H2]
  J[772] += dqdci; // dwdot[H]/d[C2H2]
  J[792] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[793] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1212] -= dqdT; // dwdot[C2H2]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 88: C2H3 + O2 => CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 350000000 * exp(-0.61 * tc[0] - (2646.93979079946) * invT);
  dlnkfdT = -0.61 * invT + (2646.93979079946) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // O
  wdot[5] -= q;  // O2
  wdot[24] -= q; // C2H3
  wdot[25] += q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[176] += dqdci; // dwdot[O]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  J[200] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[841] += dqdci; // dwdot[O]/d[C2H3]
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[865] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/dT
  J[1191] += dqdT; // dwdot[O]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 89: C2H3 + H => C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[92] += dqdci; // dwdot[C2H2]/d[H]
  J[94] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[2];
  J[842] -= dqdci; // dwdot[H]/d[C2H3]
  J[844] += dqdci; // dwdot[H2]/d[C2H3]
  J[862] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 90: C2H3 + O2 => CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 1.7e+23 * exp(-5.31 * tc[0] - (3270.90832773068) * invT);
  dlnkfdT = -5.31 * invT + (3270.90832773068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[19] += q; // HCO
  wdot[24] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[850] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[859] += dqdci; // dwdot[HCO]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 91: C2H3 + O2 => C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 2.12e-12 * exp(6 * tc[0] - (4772.5018263253) * invT);
  dlnkfdT = 6 * invT + (4772.5018263253) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[22] += q; // C2H2
  wdot[24] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[197] += dqdci; // dwdot[C2H2]/d[O2]
  J[199] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[845] -= dqdci; // dwdot[O2]/d[C2H3]
  J[848] += dqdci; // dwdot[HO2]/d[C2H3]
  J[862] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 93: C2H4 + O => CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 10.2 * exp(1.88 * tc[0] - (90.0858475123609) * invT);
  dlnkfdT = 1.88 * invT + (90.0858475123609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[11] += q; // CH3
  wdot[16] -= q; // C2H4
  wdot[19] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[46] += dqdci; // dwdot[CH3]/d[O]
  J[51] -= dqdci; // dwdot[C2H4]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[561] -= dqdci; // dwdot[O]/d[C2H4]
  J[571] += dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[579] += dqdci; // dwdot[HCO]/d[C2H4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT

  // reaction 95: C2H4 + OH => C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 20500000 * exp(-(2994.16432237137) * invT);
  dlnkfdT = (2994.16432237137) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[121] -= dqdci; // dwdot[C2H4]/d[OH]
  J[129] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[563] -= dqdci; // dwdot[OH]/d[C2H4]
  J[566] += dqdci; // dwdot[H2O]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 96: C2H3 + H2O => C2H4 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[24];
  k_f = 6033000000 * exp(-0.83 * tc[0] - (10950.0147765773) * invT);
  dlnkfdT = -0.83 * invT + (10950.0147765773) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[6] -= q;  // H2O
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[H2O]
  dqdci = +k_f * sc[24];
  J[213] += dqdci; // dwdot[OH]/d[H2O]
  J[216] -= dqdci; // dwdot[H2O]/d[H2O]
  J[226] += dqdci; // dwdot[C2H4]/d[H2O]
  J[234] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[6];
  J[843] += dqdci; // dwdot[OH]/d[C2H3]
  J[846] -= dqdci; // dwdot[H2O]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1196] -= dqdT; // dwdot[H2O]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 97: C2H4 + H => C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 8.42e-09 * exp(4.62 * tc[0] - (1299.77342260698) * invT);
  dlnkfdT = 4.62 * invT + (1299.77342260698) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[86] -= dqdci; // dwdot[C2H4]/d[H]
  J[94] += dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[2];
  J[562] -= dqdci; // dwdot[H]/d[C2H4]
  J[564] += dqdci; // dwdot[H2]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 98: C2H3 + H2 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 5.723e-07 * exp(3.79 * tc[0] - (1626.91457704663) * invT);
  dlnkfdT = 3.79 * invT + (1626.91457704663) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[H2]
  dqdci = +k_f * sc[24];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[156] += dqdci; // dwdot[C2H4]/d[H2]
  J[164] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[4];
  J[842] += dqdci; // dwdot[H]/d[C2H3]
  J[844] -= dqdci; // dwdot[H2]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 99: C2H4 + CH3O2 => C2H3 + CH3O2H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[20];
  k_f = 2230000 * exp(-(8650.29951734979) * invT);
  dlnkfdT = (8650.29951734979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // C2H4
  wdot[20] -= q; // CH3O2
  wdot[21] += q; // CH3O2H
  wdot[24] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[20];
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[580] -= dqdci; // dwdot[CH3O2]/d[C2H4]
  J[581] += dqdci; // dwdot[CH3O2H]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[CH3O2]
  dqdci = +k_f * sc[16];
  J[716] -= dqdci; // dwdot[C2H4]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[721] += dqdci; // dwdot[CH3O2H]/d[CH3O2]
  J[724] += dqdci; // dwdot[C2H3]/d[CH3O2]
  // d()/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1211] += dqdT; // dwdot[CH3O2H]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 6.62e-06 * exp(3.7 * tc[0] - (4780.55832514484) * invT);
  dlnkfdT = 3.7 * invT + (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[16] -= q; // C2H4
  wdot[24] += q; // C2H3
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[409] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[575] += dqdci; // dwdot[CH4]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[584] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT

  // reaction 101: C2H3 + CH4 => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[24];
  k_f = 1.44e-06 * exp(4.02 * tc[0] - (2753.62172395006) * invT);
  dlnkfdT = 4.02 * invT + (2753.62172395006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[15] -= q; // CH4
  wdot[16] += q; // C2H4
  wdot[24] -= q; // C2H3
  // d()/d[CH4]
  dqdci = +k_f * sc[24];
  J[536] += dqdci; // dwdot[CH3]/d[CH4]
  J[540] -= dqdci; // dwdot[CH4]/d[CH4]
  J[541] += dqdci; // dwdot[C2H4]/d[CH4]
  J[549] -= dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[C2H3]
  dqdci = +k_f * sc[15];
  J[851] += dqdci; // dwdot[CH3]/d[C2H3]
  J[855] -= dqdci; // dwdot[CH4]/d[C2H3]
  J[856] += dqdci; // dwdot[C2H4]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1205] -= dqdT; // dwdot[CH4]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT

  // reaction 102: C2H4 + O => CH2CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 3.39 * exp(1.88 * tc[0] - (90.0858475123609) * invT);
  dlnkfdT = 1.88 * invT + (90.0858475123609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[2] += q;  // H
  wdot[16] -= q; // C2H4
  wdot[25] += q; // CH2CHO
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[37] += dqdci; // dwdot[H]/d[O]
  J[51] -= dqdci; // dwdot[C2H4]/d[O]
  J[60] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[1];
  J[561] -= dqdci; // dwdot[O]/d[C2H4]
  J[562] += dqdci; // dwdot[H]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[585] += dqdci; // dwdot[CH2CHO]/d[C2H4]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 104: C2H5 + CH3 => C2H4 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[14];
  k_f = 19500000 * exp(-0.5 * tc[0]);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[14] -= q; // C2H5
  wdot[15] += q; // CH4
  wdot[16] += q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[399] -= dqdci; // dwdot[C2H5]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[401] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H5]
  dqdci = +k_f * sc[11];
  J[501] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[505] += dqdci; // dwdot[CH4]/d[C2H5]
  J[506] += dqdci; // dwdot[C2H4]/d[C2H5]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 105: C2H5 + O2 => C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[14];
  k_f = 1.22e+24 * exp(-5.76 * tc[0] - (5082.43800296109) * invT);
  dlnkfdT = -5.76 * invT + (5082.43800296109) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[14] -= q; // C2H5
  wdot[16] += q; // C2H4
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[189] -= dqdci; // dwdot[C2H5]/d[O2]
  J[191] += dqdci; // dwdot[C2H4]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[5];
  J[495] -= dqdci; // dwdot[O2]/d[C2H5]
  J[498] += dqdci; // dwdot[HO2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[506] += dqdci; // dwdot[C2H4]/d[C2H5]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT

  // reaction 106: C2H4 + HO2 => C2H5 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 1.259e+24 * exp(-5.63 * tc[0] - (11221.706486612) * invT);
  dlnkfdT = -5.63 * invT + (11221.706486612) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[14] += q; // C2H5
  wdot[16] -= q; // C2H4
  // d()/d[HO2]
  dqdci = +k_f * sc[16];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[294] += dqdci; // dwdot[C2H5]/d[HO2]
  J[296] -= dqdci; // dwdot[C2H4]/d[HO2]
  // d()/d[C2H4]
  dqdci = +k_f * sc[8];
  J[565] += dqdci; // dwdot[O2]/d[C2H4]
  J[568] -= dqdci; // dwdot[HO2]/d[C2H4]
  J[574] += dqdci; // dwdot[C2H5]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT

  // reaction 107: C2H5 + HO2 => C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 267.9 * exp(0.89 * tc[0] - (-967.222689009936) * invT);
  dlnkfdT = 0.89 * invT + (-967.222689009936) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[294] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[297] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[495] += dqdci; // dwdot[O2]/d[C2H5]
  J[498] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 108: C2H5 + H => C2H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 583100 * exp(0.599 * tc[0] - (-1465.87014748915) * invT);
  dlnkfdT = 0.599 * invT + (-1465.87014748915) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[14];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[84] -= dqdci; // dwdot[C2H5]/d[H]
  J[87] += dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H5]
  dqdci = +k_f * sc[2];
  J[492] -= dqdci; // dwdot[H]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 109: C2H6 + H => C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[17];
  k_f = 0.000554 * exp(3.5 * tc[0] - (2600.15573737959) * invT);
  dlnkfdT = 3.5 * invT + (2600.15573737959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[17];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[84] += dqdci; // dwdot[C2H5]/d[H]
  J[87] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H6]
  dqdci = +k_f * sc[2];
  J[597] -= dqdci; // dwdot[H]/d[C2H6]
  J[599] += dqdci; // dwdot[H2]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 110: C2H5 + H2 => C2H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 1.355e-07 * exp(4.06 * tc[0] - (4457.02523419901) * invT);
  dlnkfdT = 4.06 * invT + (4457.02523419901) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[14] -= q; // C2H5
  wdot[17] += q; // C2H6
  // d()/d[H2]
  dqdci = +k_f * sc[14];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[154] -= dqdci; // dwdot[C2H5]/d[H2]
  J[157] += dqdci; // dwdot[C2H6]/d[H2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[4];
  J[492] += dqdci; // dwdot[H]/d[C2H5]
  J[494] -= dqdci; // dwdot[H2]/d[C2H5]
  J[504] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[507] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1204] -= dqdT; // dwdot[C2H5]/dT
  J[1207] += dqdT; // dwdot[C2H6]/dT

  // reaction 111: C2H6 + OH => C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 58 * exp(1.73 * tc[0] - (583.675978500236) * invT);
  dlnkfdT = 1.73 * invT + (583.675978500236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[17];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[119] += dqdci; // dwdot[C2H5]/d[OH]
  J[122] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[598] -= dqdci; // dwdot[OH]/d[C2H6]
  J[601] += dqdci; // dwdot[H2O]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 112: C2H6 + CH2GSG => C2H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // CH2GSG
  wdot[11] += q; // CH3
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[17];
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[326] += dqdci; // dwdot[CH3]/d[CH2GSG]
  J[329] += dqdci; // dwdot[C2H5]/d[CH2GSG]
  J[332] -= dqdci; // dwdot[C2H6]/d[CH2GSG]
  // d()/d[C2H6]
  dqdci = +k_f * sc[9];
  J[604] -= dqdci; // dwdot[CH2GSG]/d[C2H6]
  J[606] += dqdci; // dwdot[CH3]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 113: C2H6 + O => C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[17];
  k_f = 13 * exp(2.13 * tc[0] - (2611.69952769315) * invT);
  dlnkfdT = 2.13 * invT + (2611.69952769315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[14] += q; // C2H5
  wdot[17] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[17];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[49] += dqdci; // dwdot[C2H5]/d[O]
  J[52] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[C2H6]
  dqdci = +k_f * sc[1];
  J[596] -= dqdci; // dwdot[O]/d[C2H6]
  J[598] += dqdci; // dwdot[OH]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 114: C2H6 + CH3 => C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 1.51e-13 * exp(6 * tc[0] - (3042.9914354544) * invT);
  dlnkfdT = 6 * invT + (3042.9914354544) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[14] += q; // C2H5
  wdot[15] += q; // CH4
  wdot[17] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[399] += dqdci; // dwdot[C2H5]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[402] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H6]
  dqdci = +k_f * sc[11];
  J[606] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[609] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[610] += dqdci; // dwdot[CH4]/d[C2H6]
  J[612] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1207] -= dqdT; // dwdot[C2H6]/dT

  // reaction 115: HCCO + O => 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[23];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;      // O
  wdot[2] += q;      // H
  wdot[12] += 2 * q; // CO
  wdot[23] -= q;     // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[36] -= dqdci;     // dwdot[O]/d[O]
  J[37] += dqdci;     // dwdot[H]/d[O]
  J[47] += 2 * dqdci; // dwdot[CO]/d[O]
  J[58] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[HCCO]
  dqdci = +k_f * sc[1];
  J[806] -= dqdci;     // dwdot[O]/d[HCCO]
  J[807] += dqdci;     // dwdot[H]/d[HCCO]
  J[817] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[828] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1191] -= dqdT;     // dwdot[O]/dT
  J[1192] += dqdT;     // dwdot[H]/dT
  J[1202] += 2 * dqdT; // dwdot[CO]/dT
  J[1213] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 116: HCCO + O2 => CO2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 240000 * exp(-(-429.731936097256) * invT);
  dlnkfdT = (-429.731936097256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[18] += q; // CO2
  wdot[19] += q; // HCO
  wdot[23] -= q; // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[193] += dqdci; // dwdot[CO2]/d[O2]
  J[194] += dqdci; // dwdot[HCO]/d[O2]
  J[198] -= dqdci; // dwdot[HCCO]/d[O2]
  // d()/d[HCCO]
  dqdci = +k_f * sc[5];
  J[810] -= dqdci; // dwdot[O2]/d[HCCO]
  J[823] += dqdci; // dwdot[CO2]/d[HCCO]
  J[824] += dqdci; // dwdot[HCO]/d[HCCO]
  J[828] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1208] += dqdT; // dwdot[CO2]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1213] -= dqdT; // dwdot[HCCO]/dT

  // reaction 117: HCCO + OH => 2 HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // OH
  wdot[19] += 2 * q; // HCO
  wdot[23] -= q;     // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[108] -= dqdci;     // dwdot[OH]/d[OH]
  J[124] += 2 * dqdci; // dwdot[HCO]/d[OH]
  J[128] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[3];
  J[808] -= dqdci;     // dwdot[OH]/d[HCCO]
  J[824] += 2 * dqdci; // dwdot[HCO]/d[HCCO]
  J[828] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1193] -= dqdT;     // dwdot[OH]/dT
  J[1209] += 2 * dqdT; // dwdot[HCO]/dT
  J[1213] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 118: H + HCCO => CH2GSG + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[23];
  k_f = 110000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[9] += q;  // CH2GSG
  wdot[12] += q; // CO
  wdot[23] -= q; // HCCO
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[79] += dqdci; // dwdot[CH2GSG]/d[H]
  J[82] += dqdci; // dwdot[CO]/d[H]
  J[93] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[2];
  J[807] -= dqdci; // dwdot[H]/d[HCCO]
  J[814] += dqdci; // dwdot[CH2GSG]/d[HCCO]
  J[817] += dqdci; // dwdot[CO]/d[HCCO]
  J[828] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1199] += dqdT; // dwdot[CH2GSG]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1213] -= dqdT; // dwdot[HCCO]/dT

  // reaction 119: CH2GSG + CO => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 2046000 * exp(0.89 * tc[0] - (14004.555034512) * invT);
  dlnkfdT = 0.89 * invT + (14004.555034512) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[9] -= q;  // CH2GSG
  wdot[12] -= q; // CO
  wdot[23] += q; // HCCO
  // d()/d[CH2GSG]
  dqdci = +k_f * sc[12];
  J[317] += dqdci; // dwdot[H]/d[CH2GSG]
  J[324] -= dqdci; // dwdot[CH2GSG]/d[CH2GSG]
  J[327] -= dqdci; // dwdot[CO]/d[CH2GSG]
  J[338] += dqdci; // dwdot[HCCO]/d[CH2GSG]
  // d()/d[CO]
  dqdci = +k_f * sc[9];
  J[422] += dqdci; // dwdot[H]/d[CO]
  J[429] -= dqdci; // dwdot[CH2GSG]/d[CO]
  J[432] -= dqdci; // dwdot[CO]/d[CO]
  J[443] += dqdci; // dwdot[HCCO]/d[CO]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1199] -= dqdT; // dwdot[CH2GSG]/dT
  J[1202] -= dqdT; // dwdot[CO]/dT
  J[1213] += dqdT; // dwdot[HCCO]/dT

  // reaction 120: CH2CHO + O2 => CH2O + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[25];
  k_f = 20000000 * exp(-(2113.53515721311) * invT);
  dlnkfdT = (2113.53515721311) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[12] += q; // CO
  wdot[25] -= q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[25];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[187] += dqdci; // dwdot[CO]/d[O2]
  J[200] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[5];
  J[878] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[880] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[885] += dqdci; // dwdot[CH2O]/d[CH2CHO]
  J[887] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[900] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1202] += dqdT; // dwdot[CO]/dT
  J[1215] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 121: C3H5XA + CH2O => C3H6 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[26];
  k_f = 630 * exp(1.9 * tc[0] - (9153.51618315451) * invT);
  dlnkfdT = 1.9 * invT + (9153.51618315451) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH2O
  wdot[19] += q; // HCO
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[CH2O]
  dqdci = +k_f * sc[26];
  J[360] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[369] += dqdci; // dwdot[HCO]/d[CH2O]
  J[376] -= dqdci; // dwdot[C3H5XA]/d[CH2O]
  J[377] += dqdci; // dwdot[C3H6]/d[CH2O]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[10];
  J[920] -= dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[929] += dqdci; // dwdot[HCO]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1200] -= dqdT; // dwdot[CH2O]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 122: C3H6 + HCO => C3H5XA + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[27];
  k_f = 109.7 * exp(1.89 * tc[0] - (7971.00734018) * invT);
  dlnkfdT = 1.89 * invT + (7971.00734018) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] += q; // CH2O
  wdot[19] -= q; // HCO
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[HCO]
  dqdci = +k_f * sc[27];
  J[675] += dqdci; // dwdot[CH2O]/d[HCO]
  J[684] -= dqdci; // dwdot[HCO]/d[HCO]
  J[691] += dqdci; // dwdot[C3H5XA]/d[HCO]
  J[692] -= dqdci; // dwdot[C3H6]/d[HCO]
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[955] += dqdci; // dwdot[CH2O]/d[C3H6]
  J[964] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1209] -= dqdT; // dwdot[HCO]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 123: C3H5XA + HO2 => C3H5O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[8] -= q;  // HO2
  wdot[26] -= q; // C3H5XA
  wdot[28] += q; // C3H5O
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[283] += dqdci; // dwdot[OH]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[306] -= dqdci; // dwdot[C3H5XA]/d[HO2]
  J[308] += dqdci; // dwdot[C3H5O]/d[HO2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[8];
  J[913] += dqdci; // dwdot[OH]/d[C3H5XA]
  J[918] -= dqdci; // dwdot[HO2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[938] += dqdci; // dwdot[C3H5O]/d[C3H5XA]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1218] += dqdT; // dwdot[C3H5O]/dT

  // reaction 124: C3H5XA + CH3O2 => C3H5O + CH3O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[26];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] += q; // CH3O
  wdot[20] -= q; // CH3O2
  wdot[26] -= q; // C3H5XA
  wdot[28] += q; // C3H5O
  // d()/d[CH3O2]
  dqdci = +k_f * sc[26];
  J[713] += dqdci; // dwdot[CH3O]/d[CH3O2]
  J[720] -= dqdci; // dwdot[CH3O2]/d[CH3O2]
  J[726] -= dqdci; // dwdot[C3H5XA]/d[CH3O2]
  J[728] += dqdci; // dwdot[C3H5O]/d[CH3O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[20];
  J[923] += dqdci; // dwdot[CH3O]/d[C3H5XA]
  J[930] -= dqdci; // dwdot[CH3O2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[938] += dqdci; // dwdot[C3H5O]/d[C3H5XA]
  // d()/dT
  J[1203] += dqdT; // dwdot[CH3O]/dT
  J[1210] -= dqdT; // dwdot[CH3O2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1218] += dqdT; // dwdot[C3H5O]/dT

  // reaction 125: C3H5XA + HO2 => C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[26];
  k_f = 33320 * exp(0.34 * tc[0] - (-279.753241020818) * invT);
  dlnkfdT = 0.34 * invT + (-279.753241020818) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[HO2]
  dqdci = +k_f * sc[26];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[306] -= dqdci; // dwdot[C3H5XA]/d[HO2]
  J[307] += dqdci; // dwdot[C3H6]/d[HO2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[8];
  J[915] += dqdci; // dwdot[O2]/d[C3H5XA]
  J[918] -= dqdci; // dwdot[HO2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 126: C3H5XA + O2 => CH2CHO + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 7140000000 * exp(-1.21 * tc[0] - (10592.6856543561) * invT);
  dlnkfdT = -1.21 * invT + (10592.6856543561) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[25] += q; // CH2CHO
  wdot[26] -= q; // C3H5XA
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[200] += dqdci; // dwdot[CH2CHO]/d[O2]
  J[201] -= dqdci; // dwdot[C3H5XA]/d[O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[5];
  J[915] -= dqdci; // dwdot[O2]/d[C3H5XA]
  J[920] += dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[935] += dqdci; // dwdot[CH2CHO]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1215] += dqdT; // dwdot[CH2CHO]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 127: C3H5XA + O2 => C2H2 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 9.72e+23 * exp(-5.71 * tc[0] - (10794.0226423445) * invT);
  dlnkfdT = -5.71 * invT + (10794.0226423445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // OH
  wdot[5] -= q;  // O2
  wdot[10] += q; // CH2O
  wdot[22] += q; // C2H2
  wdot[26] -= q; // C3H5XA
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[178] += dqdci; // dwdot[OH]/d[O2]
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[185] += dqdci; // dwdot[CH2O]/d[O2]
  J[197] += dqdci; // dwdot[C2H2]/d[O2]
  J[201] -= dqdci; // dwdot[C3H5XA]/d[O2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[5];
  J[913] += dqdci; // dwdot[OH]/d[C3H5XA]
  J[915] -= dqdci; // dwdot[O2]/d[C3H5XA]
  J[920] += dqdci; // dwdot[CH2O]/d[C3H5XA]
  J[932] += dqdci; // dwdot[C2H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 128: C3H5XA + H => C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 4.887e+50 * exp(-12.25 * tc[0] - (14130.3592009631) * invT);
  dlnkfdT = -12.25 * invT + (14130.3592009631) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[96] -= dqdci; // dwdot[C3H5XA]/d[H]
  J[97] += dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[2];
  J[912] -= dqdci; // dwdot[H]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 129: C3H5XA => C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.397e+48 * exp(-9.9 * tc[0] - (41304.059154418) * invT);
  dlnkfdT = -9.9 * invT + (41304.059154418) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[26] -= q; // C3H5XA
  // d()/d[C3H5XA]
  dqdci = +k_f;
  J[921] += dqdci; // dwdot[CH3]/d[C3H5XA]
  J[932] += dqdci; // dwdot[C2H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1212] += dqdT; // dwdot[C2H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT

  // reaction 130: C3H6 => C2H3 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27];
  k_f = 2.73e+62 * exp(-13.28 * tc[0] - (61996.3183879748) * invT);
  dlnkfdT = -13.28 * invT + (61996.3183879748) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[24] += q; // C2H3
  wdot[27] -= q; // C3H6
  // d()/d[C3H6]
  dqdci = +k_f;
  J[956] += dqdci; // dwdot[CH3]/d[C3H6]
  J[969] += dqdci; // dwdot[C2H3]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 131: C2H3 + CH3 => C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 4.712e+53 * exp(-13.19 * tc[0] - (14864.9750183715) * invT);
  dlnkfdT = -13.19 * invT + (14864.9750183715) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[24] -= q; // C2H3
  wdot[27] += q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[24];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[409] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[412] += dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[11];
  J[851] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[864] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[867] += dqdci; // dwdot[C3H6]/d[C2H3]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1214] -= dqdT; // dwdot[C2H3]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 132: C3H6 + O => C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 15.8 * exp(1.76 * tc[0] - (-611.941658618487) * invT);
  dlnkfdT = 1.76 * invT + (-611.941658618487) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[14] += q; // C2H5
  wdot[19] += q; // HCO
  wdot[27] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[49] += dqdci; // dwdot[C2H5]/d[O]
  J[54] += dqdci; // dwdot[HCO]/d[O]
  J[62] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[946] -= dqdci; // dwdot[O]/d[C3H6]
  J[959] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[964] += dqdci; // dwdot[HCO]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1204] += dqdT; // dwdot[C2H5]/dT
  J[1209] += dqdT; // dwdot[HCO]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 133: C3H6 + H => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 4.83e+27 * exp(-5.81 * tc[0] - (9309.50831738731) * invT);
  dlnkfdT = -5.81 * invT + (9309.50831738731) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[11] += q; // CH3
  wdot[16] += q; // C2H4
  wdot[27] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[81] += dqdci; // dwdot[CH3]/d[H]
  J[86] += dqdci; // dwdot[C2H4]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[956] += dqdci; // dwdot[CH3]/d[C3H6]
  J[961] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 134: C2H4 + CH3 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 2.313e+27 * exp(-5.9 * tc[0] - (15911.7009084119) * invT);
  dlnkfdT = -5.9 * invT + (15911.7009084119) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[11] -= q; // CH3
  wdot[16] -= q; // C2H4
  wdot[27] += q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[387] += dqdci; // dwdot[H]/d[CH3]
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[412] += dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[562] += dqdci; // dwdot[H]/d[C2H4]
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[587] += dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 135: C3H6 + H => C3H5XA + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 0.173 * exp(2.5 * tc[0] - (1254.0712850186) * invT);
  dlnkfdT = 2.5 * invT + (1254.0712850186) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[74] += dqdci; // dwdot[H2]/d[H]
  J[96] += dqdci; // dwdot[C3H5XA]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[949] += dqdci; // dwdot[H2]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 136: C3H5XA + H2 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 0.07933 * exp(2.51 * tc[0] - (9822.82957384139) * invT);
  dlnkfdT = 2.51 * invT + (9822.82957384139) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[26] -= q; // C3H5XA
  wdot[27] += q; // C3H6
  // d()/d[H2]
  dqdci = +k_f * sc[26];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[166] -= dqdci; // dwdot[C3H5XA]/d[H2]
  J[167] += dqdci; // dwdot[C3H6]/d[H2]
  // d()/d[C3H5XA]
  dqdci = +k_f * sc[4];
  J[912] += dqdci; // dwdot[H]/d[C3H5XA]
  J[914] -= dqdci; // dwdot[H2]/d[C3H5XA]
  J[936] -= dqdci; // dwdot[C3H5XA]/d[C3H5XA]
  J[937] += dqdci; // dwdot[C3H6]/d[C3H5XA]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1216] -= dqdT; // dwdot[C3H5XA]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT

  // reaction 137: C3H6 + OH => C3H5XA + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 3.12 * exp(2 * tc[0] - (-149.978695076439) * invT);
  dlnkfdT = 2 * invT + (-149.978695076439) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[131] += dqdci; // dwdot[C3H5XA]/d[OH]
  J[132] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[948] -= dqdci; // dwdot[OH]/d[C3H6]
  J[951] += dqdci; // dwdot[H2O]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 138: C3H6 + O => C3H5XA + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 524000 * exp(0.7 * tc[0] - (2960.96711892823) * invT);
  dlnkfdT = 0.7 * invT + (2960.96711892823) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[61] += dqdci; // dwdot[C3H5XA]/d[O]
  J[62] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[1];
  J[946] -= dqdci; // dwdot[O]/d[C3H6]
  J[948] += dqdci; // dwdot[OH]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 139: C3H6 + CH3 => C3H5XA + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[27];
  k_f = 2.21e-06 * exp(3.5 * tc[0] - (2855.72941760849) * invT);
  dlnkfdT = 3.5 * invT + (2855.72941760849) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[26] += q; // C3H5XA
  wdot[27] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[27];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[411] += dqdci; // dwdot[C3H5XA]/d[CH3]
  J[412] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C3H6]
  dqdci = +k_f * sc[11];
  J[956] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[960] += dqdci; // dwdot[CH4]/d[C3H6]
  J[971] += dqdci; // dwdot[C3H5XA]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1216] += dqdT; // dwdot[C3H5XA]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT

  // reaction 140: IXC3H7 + O2 => C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 450000 * exp(-(2526.18791967296) * invT);
  dlnkfdT = (2526.18791967296) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[27] += q; // C3H6
  wdot[29] -= q; // IXC3H7
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[202] += dqdci; // dwdot[C3H6]/d[O2]
  J[204] -= dqdci; // dwdot[IXC3H7]/d[O2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[5];
  J[1020] -= dqdci; // dwdot[O2]/d[IXC3H7]
  J[1023] += dqdci; // dwdot[HO2]/d[IXC3H7]
  J[1042] += dqdci; // dwdot[C3H6]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT

  // reaction 141: IXC3H7 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 8.569e+18 * exp(-1.57 * tc[0] - (20299.8156523956) * invT);
  dlnkfdT = -1.57 * invT + (20299.8156523956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[27] += q; // C3H6
  wdot[29] -= q; // IXC3H7
  // d()/d[IXC3H7]
  dqdci = +k_f;
  J[1017] += dqdci; // dwdot[H]/d[IXC3H7]
  J[1042] += dqdci; // dwdot[C3H6]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT

  // reaction 142: C3H6 + H => IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 13000000 * exp(-(785.012966488705) * invT);
  dlnkfdT = (785.012966488705) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[27] -= q; // C3H6
  wdot[29] += q; // IXC3H7
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci; // dwdot[H]/d[H]
  J[97] -= dqdci; // dwdot[C3H6]/d[H]
  J[99] += dqdci; // dwdot[IXC3H7]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[974] += dqdci; // dwdot[IXC3H7]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT

  // reaction 143: NXC3H7 => C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 228400000000000 * exp(-0.55 * tc[0] - (14291.4036305206) * invT);
  dlnkfdT = -0.55 * invT + (14291.4036305206) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CH3
  wdot[16] += q; // C2H4
  wdot[30] -= q; // NXC3H7
  // d()/d[NXC3H7]
  dqdci = +k_f;
  J[1061] += dqdci; // dwdot[CH3]/d[NXC3H7]
  J[1066] += dqdci; // dwdot[C2H4]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1201] += dqdT; // dwdot[CH3]/dT
  J[1206] += dqdT; // dwdot[C2H4]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 144: C2H4 + CH3 => NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 410000 * exp(-(3625.22821429044) * invT);
  dlnkfdT = (3625.22821429044) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[16] -= q; // C2H4
  wdot[30] += q; // NXC3H7
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[401] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[415] += dqdci; // dwdot[NXC3H7]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[11];
  J[571] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[576] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[590] += dqdci; // dwdot[NXC3H7]/d[C2H4]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1206] -= dqdT; // dwdot[C2H4]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT

  // reaction 145: HO2 + NXC3H7 => C3H8 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 2080000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[30] -= q; // NXC3H7
  wdot[31] += q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[310] -= dqdci; // dwdot[NXC3H7]/d[HO2]
  J[311] += dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[8];
  J[1055] += dqdci; // dwdot[O2]/d[NXC3H7]
  J[1058] -= dqdci; // dwdot[HO2]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1081] += dqdci; // dwdot[C3H8]/d[NXC3H7]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 146: NXC3H7 + O2 => C3H6 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[30];
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[27] += q; // C3H6
  wdot[30] -= q; // NXC3H7
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[202] += dqdci; // dwdot[C3H6]/d[O2]
  J[205] -= dqdci; // dwdot[NXC3H7]/d[O2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[5];
  J[1055] -= dqdci; // dwdot[O2]/d[NXC3H7]
  J[1058] += dqdci; // dwdot[HO2]/d[NXC3H7]
  J[1077] += dqdci; // dwdot[C3H6]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 147: NXC3H7 => C3H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 2.667e+15 * exp(-0.64 * tc[0] - (18528.4527314297) * invT);
  dlnkfdT = -0.64 * invT + (18528.4527314297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[27] += q; // C3H6
  wdot[30] -= q; // NXC3H7
  // d()/d[NXC3H7]
  dqdci = +k_f;
  J[1052] += dqdci; // dwdot[H]/d[NXC3H7]
  J[1077] += dqdci; // dwdot[C3H6]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1217] += dqdT; // dwdot[C3H6]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT

  // reaction 148: C3H6 + H => NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[27] -= q; // C3H6
  wdot[30] += q; // NXC3H7
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[97] -= dqdci;  // dwdot[C3H6]/d[H]
  J[100] += dqdci; // dwdot[NXC3H7]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[2];
  J[947] -= dqdci; // dwdot[H]/d[C3H6]
  J[972] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[975] += dqdci; // dwdot[NXC3H7]/d[C3H6]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1217] -= dqdT; // dwdot[C3H6]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT

  // reaction 149: C3H8 + OH => H2O + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 10540 * exp(0.97 * tc[0] - (798.121760632917) * invT);
  dlnkfdT = 0.97 * invT + (798.121760632917) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[135] += dqdci; // dwdot[NXC3H7]/d[OH]
  J[136] -= dqdci; // dwdot[C3H8]/d[OH]
  // d()/d[C3H8]
  dqdci = +k_f * sc[3];
  J[1088] -= dqdci; // dwdot[OH]/d[C3H8]
  J[1091] += dqdci; // dwdot[H2O]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 150: C3H8 + HO2 => H2O2 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[31];
  k_f = 16800000 * exp(-(10280.7013858905) * invT);
  dlnkfdT = (10280.7013858905) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[310] += dqdci; // dwdot[NXC3H7]/d[HO2]
  J[311] -= dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[8];
  J[1092] += dqdci; // dwdot[H2O2]/d[C3H8]
  J[1093] -= dqdci; // dwdot[HO2]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 151: C3H8 + H <=> H2 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[31];
  k_f = 3.972 * exp(2.75 * tc[0] - (3400.07901367609) * invT);
  dlnkfdT = 2.75 * invT + (3400.07901367609) * invT2;
  // reverse
  phi_r = sc[4] * sc[30];
  Kc = exp(g_RT[2] - g_RT[4] - g_RT[30] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[31]) + (h_RT[4] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[H]
  dqdci = +k_f * sc[31];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[74] += dqdci;  // dwdot[H2]/d[H]
  J[100] += dqdci; // dwdot[NXC3H7]/d[H]
  J[101] -= dqdci; // dwdot[C3H8]/d[H]
  // d()/d[H2]
  dqdci = -k_r * sc[30];
  J[142] -= dqdci; // dwdot[H]/d[H2]
  J[144] += dqdci; // dwdot[H2]/d[H2]
  J[170] += dqdci; // dwdot[NXC3H7]/d[H2]
  J[171] -= dqdci; // dwdot[C3H8]/d[H2]
  // d()/d[NXC3H7]
  dqdci = -k_r * sc[4];
  J[1052] -= dqdci; // dwdot[H]/d[NXC3H7]
  J[1054] += dqdci; // dwdot[H2]/d[NXC3H7]
  J[1080] += dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1081] -= dqdci; // dwdot[C3H8]/d[NXC3H7]
  // d()/d[C3H8]
  dqdci = +k_f * sc[2];
  J[1087] -= dqdci; // dwdot[H]/d[C3H8]
  J[1089] += dqdci; // dwdot[H2]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 152: C3H8 + OH => H2O + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 46.7 * exp(1.61 * tc[0] - (-17.5572294699267) * invT);
  dlnkfdT = 1.61 * invT + (-17.5572294699267) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // OH
  wdot[6] += q;  // H2O
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[108] -= dqdci; // dwdot[OH]/d[OH]
  J[111] += dqdci; // dwdot[H2O]/d[OH]
  J[134] += dqdci; // dwdot[IXC3H7]/d[OH]
  J[136] -= dqdci; // dwdot[C3H8]/d[OH]
  // d()/d[C3H8]
  dqdci = +k_f * sc[3];
  J[1088] -= dqdci; // dwdot[OH]/d[C3H8]
  J[1091] += dqdci; // dwdot[H2O]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1193] -= dqdT; // dwdot[OH]/dT
  J[1196] += dqdT; // dwdot[H2O]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 153: C3H8 + CH3 => CH4 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[31];
  k_f = 398000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[CH3]
  dqdci = +k_f * sc[31];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[414] += dqdci; // dwdot[IXC3H7]/d[CH3]
  J[416] -= dqdci; // dwdot[C3H8]/d[CH3]
  // d()/d[C3H8]
  dqdci = +k_f * sc[11];
  J[1096] -= dqdci; // dwdot[CH3]/d[C3H8]
  J[1100] += dqdci; // dwdot[CH4]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 154: C3H8 + CH3 => CH4 + NXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[31];
  k_f = 1290000 * exp(-(5837.26300166817) * invT);
  dlnkfdT = (5837.26300166817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // CH3
  wdot[15] += q; // CH4
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[CH3]
  dqdci = +k_f * sc[31];
  J[396] -= dqdci; // dwdot[CH3]/d[CH3]
  J[400] += dqdci; // dwdot[CH4]/d[CH3]
  J[415] += dqdci; // dwdot[NXC3H7]/d[CH3]
  J[416] -= dqdci; // dwdot[C3H8]/d[CH3]
  // d()/d[C3H8]
  dqdci = +k_f * sc[11];
  J[1096] -= dqdci; // dwdot[CH3]/d[C3H8]
  J[1100] += dqdci; // dwdot[CH4]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1201] -= dqdT; // dwdot[CH3]/dT
  J[1205] += dqdT; // dwdot[CH4]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 155: C3H8 + O => IXC3H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[31];
  k_f = 28100000 * exp(-(2616.75182301783) * invT);
  dlnkfdT = (2616.75182301783) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[64] += dqdci; // dwdot[IXC3H7]/d[O]
  J[66] -= dqdci; // dwdot[C3H8]/d[O]
  // d()/d[C3H8]
  dqdci = +k_f * sc[1];
  J[1086] -= dqdci; // dwdot[O]/d[C3H8]
  J[1088] += dqdci; // dwdot[OH]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 156: C3H8 + HO2 => H2O2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[31];
  k_f = 5600000 * exp(-(8906.96014557683) * invT);
  dlnkfdT = (8906.96014557683) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // H2O2
  wdot[8] -= q;  // HO2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[287] += dqdci; // dwdot[H2O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[309] += dqdci; // dwdot[IXC3H7]/d[HO2]
  J[311] -= dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[8];
  J[1092] += dqdci; // dwdot[H2O2]/d[C3H8]
  J[1093] -= dqdci; // dwdot[HO2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1197] += dqdT; // dwdot[H2O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 157: C3H8 + O => NXC3H7 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[31];
  k_f = 113000000 * exp(-(3950.20050490047) * invT);
  dlnkfdT = (3950.20050490047) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // O
  wdot[3] += q;  // OH
  wdot[30] += q; // NXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[36] -= dqdci; // dwdot[O]/d[O]
  J[38] += dqdci; // dwdot[OH]/d[O]
  J[65] += dqdci; // dwdot[NXC3H7]/d[O]
  J[66] -= dqdci; // dwdot[C3H8]/d[O]
  // d()/d[C3H8]
  dqdci = +k_f * sc[1];
  J[1086] -= dqdci; // dwdot[O]/d[C3H8]
  J[1088] += dqdci; // dwdot[OH]/d[C3H8]
  J[1115] += dqdci; // dwdot[NXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1191] -= dqdT; // dwdot[O]/dT
  J[1193] += dqdT; // dwdot[OH]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 158: C3H8 + O2 => HO2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[31];
  k_f = 40000000 * exp(-(23902.7916257242) * invT);
  dlnkfdT = (23902.7916257242) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[8] += q;  // HO2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[O2]
  dqdci = +k_f * sc[31];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[183] += dqdci; // dwdot[HO2]/d[O2]
  J[204] += dqdci; // dwdot[IXC3H7]/d[O2]
  J[206] -= dqdci; // dwdot[C3H8]/d[O2]
  // d()/d[C3H8]
  dqdci = +k_f * sc[5];
  J[1090] -= dqdci; // dwdot[O2]/d[C3H8]
  J[1093] += dqdci; // dwdot[HO2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1198] += dqdT; // dwdot[HO2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 159: HO2 + IXC3H7 => C3H8 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[29];
  k_f = 2080000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[8] -= q;  // HO2
  wdot[29] -= q; // IXC3H7
  wdot[31] += q; // C3H8
  // d()/d[HO2]
  dqdci = +k_f * sc[29];
  J[285] += dqdci; // dwdot[O2]/d[HO2]
  J[288] -= dqdci; // dwdot[HO2]/d[HO2]
  J[309] -= dqdci; // dwdot[IXC3H7]/d[HO2]
  J[311] += dqdci; // dwdot[C3H8]/d[HO2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[8];
  J[1020] += dqdci; // dwdot[O2]/d[IXC3H7]
  J[1023] -= dqdci; // dwdot[HO2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1046] += dqdci; // dwdot[C3H8]/d[IXC3H7]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1198] -= dqdT; // dwdot[HO2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 160: C3H8 + H => H2 + IXC3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[31];
  k_f = 1.3 * exp(2.4 * tc[0] - (2249.92197014617) * invT);
  dlnkfdT = 2.4 * invT + (2249.92197014617) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // H
  wdot[4] += q;  // H2
  wdot[29] += q; // IXC3H7
  wdot[31] -= q; // C3H8
  // d()/d[H]
  dqdci = +k_f * sc[31];
  J[72] -= dqdci;  // dwdot[H]/d[H]
  J[74] += dqdci;  // dwdot[H2]/d[H]
  J[99] += dqdci;  // dwdot[IXC3H7]/d[H]
  J[101] -= dqdci; // dwdot[C3H8]/d[H]
  // d()/d[C3H8]
  dqdci = +k_f * sc[2];
  J[1087] -= dqdci; // dwdot[H]/d[C3H8]
  J[1089] += dqdci; // dwdot[H2]/d[C3H8]
  J[1114] += dqdci; // dwdot[IXC3H7]/d[C3H8]
  J[1116] -= dqdci; // dwdot[C3H8]/d[C3H8]
  // d()/dT
  J[1192] -= dqdT; // dwdot[H]/dT
  J[1194] += dqdT; // dwdot[H2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1221] -= dqdT; // dwdot[C3H8]/dT

  // reaction 161: H2 + IXC3H7 => C3H8 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[29];
  k_f = 0.4709 * exp(2.15 * tc[0] - (6129.16389300151) * invT);
  dlnkfdT = 2.15 * invT + (6129.16389300151) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // H
  wdot[4] -= q;  // H2
  wdot[29] -= q; // IXC3H7
  wdot[31] += q; // C3H8
  // d()/d[H2]
  dqdci = +k_f * sc[29];
  J[142] += dqdci; // dwdot[H]/d[H2]
  J[144] -= dqdci; // dwdot[H2]/d[H2]
  J[169] -= dqdci; // dwdot[IXC3H7]/d[H2]
  J[171] += dqdci; // dwdot[C3H8]/d[H2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[4];
  J[1017] += dqdci; // dwdot[H]/d[IXC3H7]
  J[1019] -= dqdci; // dwdot[H2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1046] += dqdci; // dwdot[C3H8]/d[IXC3H7]
  // d()/dT
  J[1192] += dqdT; // dwdot[H]/dT
  J[1194] -= dqdT; // dwdot[H2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1221] += dqdT; // dwdot[C3H8]/dT

  // reaction 162: C3H5O => C2H3 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 2028000000000 * exp(0.09 * tc[0] - (11855.7796141925) * invT);
  dlnkfdT = 0.09 * invT + (11855.7796141925) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] += q; // CH2O
  wdot[24] += q; // C2H3
  wdot[28] -= q; // C3H5O
  // d()/d[C3H5O]
  dqdci = +k_f;
  J[990] += dqdci;  // dwdot[CH2O]/d[C3H5O]
  J[1004] += dqdci; // dwdot[C2H3]/d[C3H5O]
  J[1008] -= dqdci; // dwdot[C3H5O]/d[C3H5O]
  // d()/dT
  J[1200] += dqdT; // dwdot[CH2O]/dT
  J[1214] += dqdT; // dwdot[C2H3]/dT
  J[1218] -= dqdT; // dwdot[C3H5O]/dT

  // reaction 163: IXC3H7O2 => IXC3H7 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 2.803e+17 * exp(-0.62 * tc[0] - (18135.8833461022) * invT);
  dlnkfdT = -0.62 * invT + (18135.8833461022) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[29] += q; // IXC3H7
  wdot[32] -= q; // IXC3H7O2
  // d()/d[IXC3H7O2]
  dqdci = +k_f;
  J[1125] += dqdci; // dwdot[O2]/d[IXC3H7O2]
  J[1149] += dqdci; // dwdot[IXC3H7]/d[IXC3H7O2]
  J[1152] -= dqdci; // dwdot[IXC3H7O2]/d[IXC3H7O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1219] += dqdT; // dwdot[IXC3H7]/dT
  J[1222] -= dqdT; // dwdot[IXC3H7O2]/dT

  // reaction 164: IXC3H7 + O2 => IXC3H7O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[29] -= q; // IXC3H7
  wdot[32] += q; // IXC3H7O2
  // d()/d[O2]
  dqdci = +k_f * sc[29];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[204] -= dqdci; // dwdot[IXC3H7]/d[O2]
  J[207] += dqdci; // dwdot[IXC3H7O2]/d[O2]
  // d()/d[IXC3H7]
  dqdci = +k_f * sc[5];
  J[1020] -= dqdci; // dwdot[O2]/d[IXC3H7]
  J[1044] -= dqdci; // dwdot[IXC3H7]/d[IXC3H7]
  J[1047] += dqdci; // dwdot[IXC3H7O2]/d[IXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1219] -= dqdT; // dwdot[IXC3H7]/dT
  J[1222] += dqdT; // dwdot[IXC3H7O2]/dT

  // reaction 165: NXC3H7O2 => NXC3H7 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 3.364e+19 * exp(-1.32 * tc[0] - (17995.0480978434) * invT);
  dlnkfdT = -1.32 * invT + (17995.0480978434) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // O2
  wdot[30] += q; // NXC3H7
  wdot[33] -= q; // NXC3H7O2
  // d()/d[NXC3H7O2]
  dqdci = +k_f;
  J[1160] += dqdci; // dwdot[O2]/d[NXC3H7O2]
  J[1185] += dqdci; // dwdot[NXC3H7]/d[NXC3H7O2]
  J[1188] -= dqdci; // dwdot[NXC3H7O2]/d[NXC3H7O2]
  // d()/dT
  J[1195] += dqdT; // dwdot[O2]/dT
  J[1220] += dqdT; // dwdot[NXC3H7]/dT
  J[1223] -= dqdT; // dwdot[NXC3H7O2]/dT

  // reaction 166: NXC3H7 + O2 => NXC3H7O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[30];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // O2
  wdot[30] -= q; // NXC3H7
  wdot[33] += q; // NXC3H7O2
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[O2]/d[O2]
  J[205] -= dqdci; // dwdot[NXC3H7]/d[O2]
  J[208] += dqdci; // dwdot[NXC3H7O2]/d[O2]
  // d()/d[NXC3H7]
  dqdci = +k_f * sc[5];
  J[1055] -= dqdci; // dwdot[O2]/d[NXC3H7]
  J[1080] -= dqdci; // dwdot[NXC3H7]/d[NXC3H7]
  J[1083] += dqdci; // dwdot[NXC3H7O2]/d[NXC3H7]
  // d()/dT
  J[1195] -= dqdT; // dwdot[O2]/dT
  J[1220] -= dqdT; // dwdot[NXC3H7]/dT
  J[1223] += dqdT; // dwdot[NXC3H7O2]/dT

  amrex::Real c_R[34], dcRdT[34], e_RT[34];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 34; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1190 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 34; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 34; ++m) {
      dehmixdc += eh_RT[m] * J[k * 35 + m];
    }
    J[k * 35 + 34] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1224] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[34];

  for (int k = 0; k < 34; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 34; k++) {
    J[1190 + k] *= 1.e-6;
    J[k * 35 + 34] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 138;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 23154;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 34;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.80140000E+01;
  WT[1] = 1.59990000E+01;
  WT[2] = 1.00800000E+00;
  WT[3] = 1.70070000E+01;
  WT[4] = 2.01600000E+00;
  WT[5] = 3.19980000E+01;
  WT[6] = 1.80150000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 3.30060000E+01;
  WT[9] = 1.40270000E+01;
  WT[10] = 3.00260000E+01;
  WT[11] = 1.50350000E+01;
  WT[12] = 2.80100000E+01;
  WT[13] = 3.10340000E+01;
  WT[14] = 2.90620000E+01;
  WT[15] = 1.60430000E+01;
  WT[16] = 2.80540000E+01;
  WT[17] = 3.00700000E+01;
  WT[18] = 4.40090000E+01;
  WT[19] = 2.90180000E+01;
  WT[20] = 4.70330000E+01;
  WT[21] = 4.80410000E+01;
  WT[22] = 2.60380000E+01;
  WT[23] = 4.10290000E+01;
  WT[24] = 2.70460000E+01;
  WT[25] = 4.30450000E+01;
  WT[26] = 4.10730000E+01;
  WT[27] = 4.20810000E+01;
  WT[28] = 5.70720000E+01;
  WT[29] = 4.30890000E+01;
  WT[30] = 4.30890000E+01;
  WT[31] = 4.40970000E+01;
  WT[32] = 7.50870000E+01;
  WT[33] = 7.50870000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 9.75300000E+01;
  EPS[1] = 8.00000000E+01;
  EPS[2] = 1.45000000E+02;
  EPS[3] = 8.00000000E+01;
  EPS[4] = 3.80000000E+01;
  EPS[5] = 1.07400000E+02;
  EPS[6] = 5.72400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.07400000E+02;
  EPS[9] = 1.44000000E+02;
  EPS[10] = 4.98000000E+02;
  EPS[11] = 1.44000000E+02;
  EPS[12] = 9.81000000E+01;
  EPS[13] = 4.17000000E+02;
  EPS[14] = 2.47500000E+02;
  EPS[15] = 1.41400000E+02;
  EPS[16] = 2.38400000E+02;
  EPS[17] = 2.47500000E+02;
  EPS[18] = 2.44000000E+02;
  EPS[19] = 4.98000000E+02;
  EPS[20] = 4.81800000E+02;
  EPS[21] = 4.81800000E+02;
  EPS[22] = 2.65300000E+02;
  EPS[23] = 1.50000000E+02;
  EPS[24] = 2.65300000E+02;
  EPS[25] = 4.36000000E+02;
  EPS[26] = 3.16000000E+02;
  EPS[27] = 3.07800000E+02;
  EPS[28] = 4.11000000E+02;
  EPS[29] = 3.03400000E+02;
  EPS[30] = 3.03400000E+02;
  EPS[31] = 3.03400000E+02;
  EPS[32] = 4.59500000E+02;
  EPS[33] = 4.81500000E+02;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 3.62100000E+00;
  SIG[1] = 2.75000000E+00;
  SIG[2] = 2.05000000E+00;
  SIG[3] = 2.75000000E+00;
  SIG[4] = 2.92000000E+00;
  SIG[5] = 3.45800000E+00;
  SIG[6] = 2.60500000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.45800000E+00;
  SIG[9] = 3.80000000E+00;
  SIG[10] = 3.59000000E+00;
  SIG[11] = 3.80000000E+00;
  SIG[12] = 3.65000000E+00;
  SIG[13] = 3.69000000E+00;
  SIG[14] = 4.35000000E+00;
  SIG[15] = 3.74600000E+00;
  SIG[16] = 3.49600000E+00;
  SIG[17] = 4.35000000E+00;
  SIG[18] = 3.76300000E+00;
  SIG[19] = 3.59000000E+00;
  SIG[20] = 3.62600000E+00;
  SIG[21] = 3.62600000E+00;
  SIG[22] = 3.72100000E+00;
  SIG[23] = 2.50000000E+00;
  SIG[24] = 3.72100000E+00;
  SIG[25] = 3.97000000E+00;
  SIG[26] = 4.22000000E+00;
  SIG[27] = 4.14000000E+00;
  SIG[28] = 4.82000000E+00;
  SIG[29] = 4.81000000E+00;
  SIG[30] = 4.81000000E+00;
  SIG[31] = 4.81000000E+00;
  SIG[32] = 5.03600000E+00;
  SIG[33] = 4.99700000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 1.84400000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 1.70000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 1.70000000E+00;
  DIP[33] = 1.70000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 1.76000000E+00;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 7.90000000E-01;
  POL[5] = 1.60000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 0.00000000E+00;
  POL[10] = 0.00000000E+00;
  POL[11] = 0.00000000E+00;
  POL[12] = 1.95000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 2.60000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 2.65000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 4.00000000E+00;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 0.00000000E+00;
  ZROT[4] = 2.80000000E+02;
  ZROT[5] = 3.80000000E+00;
  ZROT[6] = 4.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 1.00000000E+00;
  ZROT[9] = 0.00000000E+00;
  ZROT[10] = 2.00000000E+00;
  ZROT[11] = 0.00000000E+00;
  ZROT[12] = 1.80000000E+00;
  ZROT[13] = 2.00000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.30000000E+01;
  ZROT[16] = 1.50000000E+00;
  ZROT[17] = 1.50000000E+00;
  ZROT[18] = 2.10000000E+00;
  ZROT[19] = 0.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 1.00000000E+00;
  ZROT[22] = 2.50000000E+00;
  ZROT[23] = 1.00000000E+00;
  ZROT[24] = 1.00000000E+00;
  ZROT[25] = 2.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 1;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 2;
  NLIN[9] = 1;
  NLIN[10] = 2;
  NLIN[11] = 1;
  NLIN[12] = 1;
  NLIN[13] = 2;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 1;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 2;
  NLIN[22] = 1;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.65695492E+01;
  COFETA[1] = 2.39056562E+00;
  COFETA[2] = -2.34558144E-01;
  COFETA[3] = 1.05024037E-02;
  COFETA[4] = -1.50926370E+01;
  COFETA[5] = 1.92606504E+00;
  COFETA[6] = -1.73487476E-01;
  COFETA[7] = 7.82572931E-03;
  COFETA[8] = -2.04078253E+01;
  COFETA[9] = 3.65436395E+00;
  COFETA[10] = -3.98339635E-01;
  COFETA[11] = 1.75883009E-02;
  COFETA[12] = -1.50620876E+01;
  COFETA[13] = 1.92606504E+00;
  COFETA[14] = -1.73487476E-01;
  COFETA[15] = 7.82572931E-03;
  COFETA[16] = -1.38347555E+01;
  COFETA[17] = 1.00106621E+00;
  COFETA[18] = -4.98105694E-02;
  COFETA[19] = 2.31450475E-03;
  COFETA[20] = -1.71618439E+01;
  COFETA[21] = 2.68036374E+00;
  COFETA[22] = -2.72570227E-01;
  COFETA[23] = 1.21650964E-02;
  COFETA[24] = -1.05420930E+01;
  COFETA[25] = -1.37777266E+00;
  COFETA[26] = 4.20502561E-01;
  COFETA[27] = -2.40627344E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -1.71463359E+01;
  COFETA[33] = 2.68036374E+00;
  COFETA[34] = -2.72570227E-01;
  COFETA[35] = 1.21650964E-02;
  COFETA[36] = -2.02663506E+01;
  COFETA[37] = 3.63241793E+00;
  COFETA[38] = -3.95581049E-01;
  COFETA[39] = 1.74725495E-02;
  COFETA[40] = -1.98330663E+01;
  COFETA[41] = 2.69480162E+00;
  COFETA[42] = -1.65880845E-01;
  COFETA[43] = 3.14504769E-03;
  COFETA[44] = -2.02316522E+01;
  COFETA[45] = 3.63241793E+00;
  COFETA[46] = -3.95581049E-01;
  COFETA[47] = 1.74725495E-02;
  COFETA[48] = -1.66188439E+01;
  COFETA[49] = 2.40307799E+00;
  COFETA[50] = -2.36167638E-01;
  COFETA[51] = 1.05714061E-02;
  COFETA[52] = -1.99945964E+01;
  COFETA[53] = 2.86923161E+00;
  COFETA[54] = -2.03325438E-01;
  COFETA[55] = 5.39055928E-03;
  COFETA[56] = -2.45602668E+01;
  COFETA[57] = 5.15878990E+00;
  COFETA[58] = -5.75274341E-01;
  COFETA[59] = 2.44975136E-02;
  COFETA[60] = -2.00094678E+01;
  COFETA[61] = 3.57220167E+00;
  COFETA[62] = -3.87936446E-01;
  COFETA[63] = 1.71483254E-02;
  COFETA[64] = -2.39690509E+01;
  COFETA[65] = 5.11436059E+00;
  COFETA[66] = -5.71999954E-01;
  COFETA[67] = 2.44581334E-02;
  COFETA[68] = -2.45432185E+01;
  COFETA[69] = 5.15878990E+00;
  COFETA[70] = -5.75274341E-01;
  COFETA[71] = 2.44975136E-02;
  COFETA[72] = -2.40015087E+01;
  COFETA[73] = 5.14359547E+00;
  COFETA[74] = -5.74269731E-01;
  COFETA[75] = 2.44937679E-02;
  COFETA[76] = -1.98501400E+01;
  COFETA[77] = 2.69480162E+00;
  COFETA[78] = -1.65880845E-01;
  COFETA[79] = 3.14504769E-03;
  COFETA[80] = -2.03725587E+01;
  COFETA[81] = 3.03946431E+00;
  COFETA[82] = -2.16994867E-01;
  COFETA[83] = 5.61394012E-03;
  COFETA[84] = -2.03619561E+01;
  COFETA[85] = 3.03946431E+00;
  COFETA[86] = -2.16994867E-01;
  COFETA[87] = 5.61394012E-03;
  COFETA[88] = -2.47697907E+01;
  COFETA[89] = 5.30039568E+00;
  COFETA[90] = -5.89273639E-01;
  COFETA[91] = 2.49261407E-02;
  COFETA[92] = -1.92183918E+01;
  COFETA[93] = 3.75164499E+00;
  COFETA[94] = -4.10390993E-01;
  COFETA[95] = 1.80861665E-02;
  COFETA[96] = -2.47507996E+01;
  COFETA[97] = 5.30039568E+00;
  COFETA[98] = -5.89273639E-01;
  COFETA[99] = 2.49261407E-02;
  COFETA[100] = -2.23277248E+01;
  COFETA[101] = 3.86433912E+00;
  COFETA[102] = -3.41553983E-01;
  COFETA[103] = 1.17083447E-02;
  COFETA[104] = -2.50402273E+01;
  COFETA[105] = 5.25451220E+00;
  COFETA[106] = -5.67228955E-01;
  COFETA[107] = 2.33156489E-02;
  COFETA[108] = -2.49727930E+01;
  COFETA[109] = 5.27067543E+00;
  COFETA[110] = -5.71909526E-01;
  COFETA[111] = 2.36230940E-02;
  COFETA[112] = -2.34114274E+01;
  COFETA[113] = 4.27461263E+00;
  COFETA[114] = -4.04617202E-01;
  COFETA[115] = 1.48351999E-02;
  COFETA[116] = -2.52463026E+01;
  COFETA[117] = 5.27749097E+00;
  COFETA[118] = -5.74219215E-01;
  COFETA[119] = 2.37811608E-02;
  COFETA[120] = -2.52463026E+01;
  COFETA[121] = 5.27749097E+00;
  COFETA[122] = -5.74219215E-01;
  COFETA[123] = 2.37811608E-02;
  COFETA[124] = -2.52347406E+01;
  COFETA[125] = 5.27749097E+00;
  COFETA[126] = -5.74219215E-01;
  COFETA[127] = 2.37811608E-02;
  COFETA[128] = -2.09096861E+01;
  COFETA[129] = 3.13792953E+00;
  COFETA[130] = -2.36145285E-01;
  COFETA[131] = 6.70687777E-03;
  COFETA[132] = -2.00330779E+01;
  COFETA[133] = 2.73318322E+00;
  COFETA[134] = -1.75653515E-01;
  COFETA[135] = 3.77126384E-03;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 1.29306421E+01;
  COFLAM[1] = -3.52818996E+00;
  COFLAM[2] = 6.45501344E-01;
  COFLAM[3] = -3.19376399E-02;
  COFLAM[4] = 1.69268564E+00;
  COFLAM[5] = 1.92606504E+00;
  COFLAM[6] = -1.73487476E-01;
  COFLAM[7] = 7.82572931E-03;
  COFLAM[8] = -8.57944636E-01;
  COFLAM[9] = 3.65436395E+00;
  COFLAM[10] = -3.98339635E-01;
  COFLAM[11] = 1.75883009E-02;
  COFLAM[12] = 1.00131059E+01;
  COFLAM[13] = -1.54006455E+00;
  COFLAM[14] = 3.02750609E-01;
  COFLAM[15] = -1.29859531E-02;
  COFLAM[16] = 9.13732503E+00;
  COFLAM[17] = -4.36831992E-01;
  COFLAM[18] = 1.12981590E-01;
  COFLAM[19] = -2.54609743E-03;
  COFLAM[20] = -1.93886978E+00;
  COFLAM[21] = 2.89244194E+00;
  COFLAM[22] = -2.71258620E-01;
  COFLAM[23] = 1.15340575E-02;
  COFLAM[24] = 2.35086359E+01;
  COFLAM[25] = -9.05997075E+00;
  COFLAM[26] = 1.54815990E+00;
  COFLAM[27] = -7.71639219E-02;
  COFLAM[28] = 8.99264201E-01;
  COFLAM[29] = 1.32506502E+00;
  COFLAM[30] = 1.81955309E-02;
  COFLAM[31] = -4.46690903E-03;
  COFLAM[32] = 4.76620244E+00;
  COFLAM[33] = -4.27753998E-01;
  COFLAM[34] = 2.68283104E-01;
  COFLAM[35] = -1.65411133E-02;
  COFLAM[36] = 1.83932405E+01;
  COFLAM[37] = -6.25754732E+00;
  COFLAM[38] = 1.09378559E+00;
  COFLAM[39] = -5.49435713E-02;
  COFLAM[40] = 4.84793677E+00;
  COFLAM[41] = -2.13603074E+00;
  COFLAM[42] = 6.99833706E-01;
  COFLAM[43] = -4.38222874E-02;
  COFLAM[44] = 1.36305852E+01;
  COFLAM[45] = -4.45086631E+00;
  COFLAM[46] = 8.75862532E-01;
  COFLAM[47] = -4.60275190E-02;
  COFLAM[48] = 1.15794139E+01;
  COFLAM[49] = -3.02088258E+00;
  COFLAM[50] = 5.82091458E-01;
  COFLAM[51] = -2.93406451E-02;
  COFLAM[52] = -6.14586258E+00;
  COFLAM[53] = 2.47428311E+00;
  COFLAM[54] = 6.44007658E-02;
  COFLAM[55] = -1.45368723E-02;
  COFLAM[56] = -1.32867393E+01;
  COFLAM[57] = 5.82552894E+00;
  COFLAM[58] = -4.38733313E-01;
  COFLAM[59] = 1.02209706E-02;
  COFLAM[60] = 1.29622495E+01;
  COFLAM[61] = -4.85747192E+00;
  COFLAM[62] = 1.02918176E+00;
  COFLAM[63] = -5.69931905E-02;
  COFLAM[64] = -1.34447095E+01;
  COFLAM[65] = 6.12380016E+00;
  COFLAM[66] = -4.86657206E-01;
  COFLAM[67] = 1.24614433E-02;
  COFLAM[68] = -1.44773233E+01;
  COFLAM[69] = 6.20799538E+00;
  COFLAM[70] = -4.66685962E-01;
  COFLAM[71] = 1.03036988E-02;
  COFLAM[72] = -1.15551899E+01;
  COFLAM[73] = 5.97444335E+00;
  COFLAM[74] = -5.83493929E-01;
  COFLAM[75] = 2.11390994E-02;
  COFLAM[76] = 5.62029879E+00;
  COFLAM[77] = -1.91574737E+00;
  COFLAM[78] = 5.90225030E-01;
  COFLAM[79] = -3.57616012E-02;
  COFLAM[80] = 5.28057238E+00;
  COFLAM[81] = -1.92758623E+00;
  COFLAM[82] = 6.29141050E-01;
  COFLAM[83] = -3.87203246E-02;
  COFLAM[84] = -5.85802646E+00;
  COFLAM[85] = 2.80606022E+00;
  COFLAM[86] = -2.49414854E-02;
  COFLAM[87] = -8.88253185E-03;
  COFLAM[88] = -9.20686918E+00;
  COFLAM[89] = 5.13028592E+00;
  COFLAM[90] = -4.67868864E-01;
  COFLAM[91] = 1.64674391E-02;
  COFLAM[92] = -5.31221736E-01;
  COFLAM[93] = 2.21998709E+00;
  COFLAM[94] = -1.07502114E-01;
  COFLAM[95] = 1.06755325E-03;
  COFLAM[96] = -1.36861284E+01;
  COFLAM[97] = 6.35261765E+00;
  COFLAM[98] = -5.53497079E-01;
  COFLAM[99] = 1.70958084E-02;
  COFLAM[100] = -6.27418168E+00;
  COFLAM[101] = 2.90468332E+00;
  COFLAM[102] = -4.35101898E-02;
  COFLAM[103] = -7.77942779E-03;
  COFLAM[104] = -2.08328607E+01;
  COFLAM[105] = 9.07593046E+00;
  COFLAM[106] = -8.93990666E-01;
  COFLAM[107] = 3.11142874E-02;
  COFLAM[108] = -1.54410715E+01;
  COFLAM[109] = 6.67114637E+00;
  COFLAM[110] = -5.37137469E-01;
  COFLAM[111] = 1.38051642E-02;
  COFLAM[112] = -1.68188828E+01;
  COFLAM[113] = 7.10377007E+00;
  COFLAM[114] = -6.04738409E-01;
  COFLAM[115] = 1.71995338E-02;
  COFLAM[116] = -1.69714018E+01;
  COFLAM[117] = 7.44003318E+00;
  COFLAM[118] = -6.71735652E-01;
  COFLAM[119] = 2.12052908E-02;
  COFLAM[120] = -1.59315237E+01;
  COFLAM[121] = 7.00975711E+00;
  COFLAM[122] = -6.12922914E-01;
  COFLAM[123] = 1.85439121E-02;
  COFLAM[124] = -1.96210357E+01;
  COFLAM[125] = 8.33592288E+00;
  COFLAM[126] = -7.66926666E-01;
  COFLAM[127] = 2.44576805E-02;
  COFLAM[128] = -1.19772775E+01;
  COFLAM[129] = 5.01880242E+00;
  COFLAM[130] = -3.06683888E-01;
  COFLAM[131] = 3.14889543E-03;
  COFLAM[132] = -9.04440882E+00;
  COFLAM[133] = 3.66855878E+00;
  COFLAM[134] = -1.04994796E-01;
  COFLAM[135] = -6.68408609E-03;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.49828551E+01;
  COFD[1] = 3.25781069E+00;
  COFD[2] = -2.12199367E-01;
  COFD[3] = 9.36657283E-03;
  COFD[4] = -1.40756909E+01;
  COFD[5] = 3.07549274E+00;
  COFD[6] = -1.88889344E-01;
  COFD[7] = 8.37152866E-03;
  COFD[8] = -1.42894603E+01;
  COFD[9] = 3.67490723E+00;
  COFD[10] = -2.65114792E-01;
  COFD[11] = 1.16092671E-02;
  COFD[12] = -1.40949183E+01;
  COFD[13] = 3.07549274E+00;
  COFD[14] = -1.88889344E-01;
  COFD[15] = 8.37152866E-03;
  COFD[16] = -1.16906458E+01;
  COFD[17] = 2.47469981E+00;
  COFD[18] = -1.10436257E-01;
  COFD[19] = 4.95273813E-03;
  COFD[20] = -1.52414498E+01;
  COFD[21] = 3.35922578E+00;
  COFD[22] = -2.25181399E-01;
  COFD[23] = 9.92132878E-03;
  COFD[24] = -2.10643264E+01;
  COFD[25] = 5.53614864E+00;
  COFD[26] = -4.86046753E-01;
  COFD[27] = 2.03659193E-02;
  COFD[28] = -1.52554785E+01;
  COFD[29] = 3.35922578E+00;
  COFD[30] = -2.25181399E-01;
  COFD[31] = 9.92132878E-03;
  COFD[32] = -1.52486292E+01;
  COFD[33] = 3.35922578E+00;
  COFD[34] = -2.25181399E-01;
  COFD[35] = 9.92132878E-03;
  COFD[36] = -1.59404910E+01;
  COFD[37] = 3.66853818E+00;
  COFD[38] = -2.64346221E-01;
  COFD[39] = 1.15784613E-02;
  COFD[40] = -2.04833743E+01;
  COFD[41] = 5.23112374E+00;
  COFD[42] = -4.54967682E-01;
  COFD[43] = 1.93570423E-02;
  COFD[44] = -1.59633426E+01;
  COFD[45] = 3.66853818E+00;
  COFD[46] = -2.64346221E-01;
  COFD[47] = 1.15784613E-02;
  COFD[48] = -1.50031706E+01;
  COFD[49] = 3.26223357E+00;
  COFD[50] = -2.12746642E-01;
  COFD[51] = 9.38912883E-03;
  COFD[52] = -2.02268939E+01;
  COFD[53] = 5.13632099E+00;
  COFD[54] = -4.44839130E-01;
  COFD[55] = 1.90058356E-02;
  COFD[56] = -1.82590880E+01;
  COFD[57] = 4.39538102E+00;
  COFD[58] = -3.56367230E-01;
  COFD[59] = 1.54788461E-02;
  COFD[60] = -1.59327344E+01;
  COFD[61] = 3.65620899E+00;
  COFD[62] = -2.62933804E-01;
  COFD[63] = 1.15253223E-02;
  COFD[64] = -1.78815941E+01;
  COFD[65] = 4.34347890E+00;
  COFD[66] = -3.49890003E-01;
  COFD[67] = 1.52083459E-02;
  COFD[68] = -1.82673830E+01;
  COFD[69] = 4.39538102E+00;
  COFD[70] = -3.56367230E-01;
  COFD[71] = 1.54788461E-02;
  COFD[72] = -1.81432499E+01;
  COFD[73] = 4.37565431E+00;
  COFD[74] = -3.53906025E-01;
  COFD[75] = 1.53760786E-02;
  COFD[76] = -2.04750606E+01;
  COFD[77] = 5.23112374E+00;
  COFD[78] = -4.54967682E-01;
  COFD[79] = 1.93570423E-02;
  COFD[80] = -2.04649116E+01;
  COFD[81] = 5.18856872E+00;
  COFD[82] = -4.50001829E-01;
  COFD[83] = 1.91636142E-02;
  COFD[84] = -2.04688432E+01;
  COFD[85] = 5.18856872E+00;
  COFD[86] = -4.50001829E-01;
  COFD[87] = 1.91636142E-02;
  COFD[88] = -1.83039660E+01;
  COFD[89] = 4.47952077E+00;
  COFD[90] = -3.66569471E-01;
  COFD[91] = 1.58916129E-02;
  COFD[92] = -1.59884349E+01;
  COFD[93] = 3.72220402E+00;
  COFD[94] = -2.71150591E-01;
  COFD[95] = 1.18665265E-02;
  COFD[96] = -1.83137186E+01;
  COFD[97] = 4.47952077E+00;
  COFD[98] = -3.66569471E-01;
  COFD[99] = 1.58916129E-02;
  COFD[100] = -2.02693704E+01;
  COFD[101] = 5.10426133E+00;
  COFD[102] = -4.41256919E-01;
  COFD[103] = 1.88737290E-02;
  COFD[104] = -1.91796726E+01;
  COFD[105] = 4.70714822E+00;
  COFD[106] = -3.94261134E-01;
  COFD[107] = 1.70175169E-02;
  COFD[108] = -1.90859348E+01;
  COFD[109] = 4.68079396E+00;
  COFD[110] = -3.91231550E-01;
  COFD[111] = 1.69021170E-02;
  COFD[112] = -2.03249633E+01;
  COFD[113] = 5.03292431E+00;
  COFD[114] = -4.32887308E-01;
  COFD[115] = 1.85458102E-02;
  COFD[116] = -1.92062965E+01;
  COFD[117] = 4.66318669E+00;
  COFD[118] = -3.89108667E-01;
  COFD[119] = 1.68165377E-02;
  COFD[120] = -1.92062965E+01;
  COFD[121] = 4.66318669E+00;
  COFD[122] = -3.89108667E-01;
  COFD[123] = 1.68165377E-02;
  COFD[124] = -1.92108200E+01;
  COFD[125] = 4.66318669E+00;
  COFD[126] = -3.89108667E-01;
  COFD[127] = 1.68165377E-02;
  COFD[128] = -2.08314127E+01;
  COFD[129] = 5.16623525E+00;
  COFD[130] = -4.47455297E-01;
  COFD[131] = 1.90672495E-02;
  COFD[132] = -2.09943556E+01;
  COFD[133] = 5.22468470E+00;
  COFD[134] = -4.54220132E-01;
  COFD[135] = 1.93281044E-02;
  COFD[136] = -1.40756909E+01;
  COFD[137] = 3.07549274E+00;
  COFD[138] = -1.88889344E-01;
  COFD[139] = 8.37152866E-03;
  COFD[140] = -1.32093517E+01;
  COFD[141] = 2.90778936E+00;
  COFD[142] = -1.67388544E-01;
  COFD[143] = 7.45220609E-03;
  COFD[144] = -1.34230419E+01;
  COFD[145] = 3.48624238E+00;
  COFD[146] = -2.41554467E-01;
  COFD[147] = 1.06263545E-02;
  COFD[148] = -1.32243932E+01;
  COFD[149] = 2.90778936E+00;
  COFD[150] = -1.67388544E-01;
  COFD[151] = 7.45220609E-03;
  COFD[152] = -1.09595844E+01;
  COFD[153] = 2.30836460E+00;
  COFD[154] = -8.76339315E-02;
  COFD[155] = 3.90878445E-03;
  COFD[156] = -1.43139120E+01;
  COFD[157] = 3.17651319E+00;
  COFD[158] = -2.02028974E-01;
  COFD[159] = 8.94232502E-03;
  COFD[160] = -1.94093476E+01;
  COFD[161] = 5.16013126E+00;
  COFD[162] = -4.46824543E-01;
  COFD[163] = 1.90464887E-02;
  COFD[164] = -1.43238892E+01;
  COFD[165] = 3.17651319E+00;
  COFD[166] = -2.02028974E-01;
  COFD[167] = 8.94232502E-03;
  COFD[168] = -1.43190281E+01;
  COFD[169] = 3.17651319E+00;
  COFD[170] = -2.02028974E-01;
  COFD[171] = 8.94232502E-03;
  COFD[172] = -1.50584188E+01;
  COFD[173] = 3.47945612E+00;
  COFD[174] = -2.40703722E-01;
  COFD[175] = 1.05907441E-02;
  COFD[176] = -1.94373032E+01;
  COFD[177] = 5.02567894E+00;
  COFD[178] = -4.32045169E-01;
  COFD[179] = 1.85132214E-02;
  COFD[180] = -1.50766073E+01;
  COFD[181] = 3.47945612E+00;
  COFD[182] = -2.40703722E-01;
  COFD[183] = 1.05907441E-02;
  COFD[184] = -1.40998907E+01;
  COFD[185] = 3.08120012E+00;
  COFD[186] = -1.89629903E-01;
  COFD[187] = 8.40361952E-03;
  COFD[188] = -1.88179325E+01;
  COFD[189] = 4.79683898E+00;
  COFD[190] = -4.04829719E-01;
  COFD[191] = 1.74325475E-02;
  COFD[192] = -1.72053030E+01;
  COFD[193] = 4.15807461E+00;
  COFD[194] = -3.27178539E-01;
  COFD[195] = 1.42784349E-02;
  COFD[196] = -1.50270285E+01;
  COFD[197] = 3.46140064E+00;
  COFD[198] = -2.38440092E-01;
  COFD[199] = 1.04960087E-02;
  COFD[200] = -1.68343316E+01;
  COFD[201] = 4.11954900E+00;
  COFD[202] = -3.22470391E-01;
  COFD[203] = 1.40859564E-02;
  COFD[204] = -1.72112897E+01;
  COFD[205] = 4.15807461E+00;
  COFD[206] = -3.27178539E-01;
  COFD[207] = 1.42784349E-02;
  COFD[208] = -1.70534750E+01;
  COFD[209] = 4.14240922E+00;
  COFD[210] = -3.25239774E-01;
  COFD[211] = 1.41980687E-02;
  COFD[212] = -1.94313018E+01;
  COFD[213] = 5.02567894E+00;
  COFD[214] = -4.32045169E-01;
  COFD[215] = 1.85132214E-02;
  COFD[216] = -1.93925565E+01;
  COFD[217] = 4.98286777E+00;
  COFD[218] = -4.26970814E-01;
  COFD[219] = 1.83122917E-02;
  COFD[220] = -1.93952265E+01;
  COFD[221] = 4.98286777E+00;
  COFD[222] = -4.26970814E-01;
  COFD[223] = 1.83122917E-02;
  COFD[224] = -1.72285926E+01;
  COFD[225] = 4.24084025E+00;
  COFD[226] = -3.37428619E-01;
  COFD[227] = 1.47032793E-02;
  COFD[228] = -1.49500258E+01;
  COFD[229] = 3.52327209E+00;
  COFD[230] = -2.46286208E-01;
  COFD[231] = 1.08285963E-02;
  COFD[232] = -1.72357357E+01;
  COFD[233] = 4.24084025E+00;
  COFD[234] = -3.37428619E-01;
  COFD[235] = 1.47032793E-02;
  COFD[236] = -1.90915553E+01;
  COFD[237] = 4.84384483E+00;
  COFD[238] = -4.10265575E-01;
  COFD[239] = 1.76414287E-02;
  COFD[240] = -1.80480872E+01;
  COFD[241] = 4.45434023E+00;
  COFD[242] = -3.63584633E-01;
  COFD[243] = 1.57739270E-02;
  COFD[244] = -1.79361074E+01;
  COFD[245] = 4.42139452E+00;
  COFD[246] = -3.59567329E-01;
  COFD[247] = 1.56103969E-02;
  COFD[248] = -1.91805320E+01;
  COFD[249] = 4.78152337E+00;
  COFD[250] = -4.03052726E-01;
  COFD[251] = 1.73639773E-02;
  COFD[252] = -1.80724704E+01;
  COFD[253] = 4.40247898E+00;
  COFD[254] = -3.57238362E-01;
  COFD[255] = 1.55145651E-02;
  COFD[256] = -1.80724704E+01;
  COFD[257] = 4.40247898E+00;
  COFD[258] = -3.57238362E-01;
  COFD[259] = 1.55145651E-02;
  COFD[260] = -1.80755747E+01;
  COFD[261] = 4.40247898E+00;
  COFD[262] = -3.57238362E-01;
  COFD[263] = 1.55145651E-02;
  COFD[264] = -1.96652628E+01;
  COFD[265] = 4.92149009E+00;
  COFD[266] = -4.19702348E-01;
  COFD[267] = 1.80250370E-02;
  COFD[268] = -1.98296142E+01;
  COFD[269] = 4.98207523E+00;
  COFD[270] = -4.26877291E-01;
  COFD[271] = 1.83086094E-02;
  COFD[272] = -1.42894603E+01;
  COFD[273] = 3.67490723E+00;
  COFD[274] = -2.65114792E-01;
  COFD[275] = 1.16092671E-02;
  COFD[276] = -1.34230419E+01;
  COFD[277] = 3.48624238E+00;
  COFD[278] = -2.41554467E-01;
  COFD[279] = 1.06263545E-02;
  COFD[280] = -1.47968875E+01;
  COFD[281] = 4.23027636E+00;
  COFD[282] = -3.36139991E-01;
  COFD[283] = 1.46507621E-02;
  COFD[284] = -1.34248014E+01;
  COFD[285] = 3.48624238E+00;
  COFD[286] = -2.41554467E-01;
  COFD[287] = 1.06263545E-02;
  COFD[288] = -1.14366544E+01;
  COFD[289] = 2.78323501E+00;
  COFD[290] = -1.51214064E-01;
  COFD[291] = 6.75150012E-03;
  COFD[292] = -1.46550238E+01;
  COFD[293] = 3.83606243E+00;
  COFD[294] = -2.86076532E-01;
  COFD[295] = 1.25205829E-02;
  COFD[296] = -1.95739720E+01;
  COFD[297] = 5.61113230E+00;
  COFD[298] = -4.90190187E-01;
  COFD[299] = 2.03260675E-02;
  COFD[300] = -1.46559297E+01;
  COFD[301] = 3.83606243E+00;
  COFD[302] = -2.86076532E-01;
  COFD[303] = 1.25205829E-02;
  COFD[304] = -1.46554904E+01;
  COFD[305] = 3.83606243E+00;
  COFD[306] = -2.86076532E-01;
  COFD[307] = 1.25205829E-02;
  COFD[308] = -1.57972520E+01;
  COFD[309] = 4.22225052E+00;
  COFD[310] = -3.35156428E-01;
  COFD[311] = 1.46104855E-02;
  COFD[312] = -1.97550243E+01;
  COFD[313] = 5.56931926E+00;
  COFD[314] = -4.89105511E-01;
  COFD[315] = 2.04493129E-02;
  COFD[316] = -1.57995045E+01;
  COFD[317] = 4.22225052E+00;
  COFD[318] = -3.35156428E-01;
  COFD[319] = 1.46104855E-02;
  COFD[320] = -1.43151328E+01;
  COFD[321] = 3.68038508E+00;
  COFD[322] = -2.65779346E-01;
  COFD[323] = 1.16360771E-02;
  COFD[324] = -1.92718738E+01;
  COFD[325] = 5.41172124E+00;
  COFD[326] = -4.73213887E-01;
  COFD[327] = 1.99405473E-02;
  COFD[328] = -1.78631714E+01;
  COFD[329] = 4.88268692E+00;
  COFD[330] = -4.14917638E-01;
  COFD[331] = 1.78274298E-02;
  COFD[332] = -1.57199190E+01;
  COFD[333] = 4.19936335E+00;
  COFD[334] = -3.32311009E-01;
  COFD[335] = 1.44921003E-02;
  COFD[336] = -1.74408120E+01;
  COFD[337] = 4.83580036E+00;
  COFD[338] = -4.09383573E-01;
  COFD[339] = 1.76098175E-02;
  COFD[340] = -1.78637336E+01;
  COFD[341] = 4.88268692E+00;
  COFD[342] = -4.14917638E-01;
  COFD[343] = 1.78274298E-02;
  COFD[344] = -1.76147183E+01;
  COFD[345] = 4.86049500E+00;
  COFD[346] = -4.12200578E-01;
  COFD[347] = 1.77160971E-02;
  COFD[348] = -1.97544605E+01;
  COFD[349] = 5.56931926E+00;
  COFD[350] = -4.89105511E-01;
  COFD[351] = 2.04493129E-02;
  COFD[352] = -1.96915102E+01;
  COFD[353] = 5.54637286E+00;
  COFD[354] = -4.87070324E-01;
  COFD[355] = 2.03983467E-02;
  COFD[356] = -1.96917304E+01;
  COFD[357] = 5.54637286E+00;
  COFD[358] = -4.87070324E-01;
  COFD[359] = 2.03983467E-02;
  COFD[360] = -1.79310920E+01;
  COFD[361] = 4.98037650E+00;
  COFD[362] = -4.26676911E-01;
  COFD[363] = 1.83007231E-02;
  COFD[364] = -1.54460977E+01;
  COFD[365] = 4.26819983E+00;
  COFD[366] = -3.40766379E-01;
  COFD[367] = 1.48393361E-02;
  COFD[368] = -1.79317871E+01;
  COFD[369] = 4.98037650E+00;
  COFD[370] = -4.26676911E-01;
  COFD[371] = 1.83007231E-02;
  COFD[372] = -1.94691588E+01;
  COFD[373] = 5.43830787E+00;
  COFD[374] = -4.75472880E-01;
  COFD[375] = 1.99909996E-02;
  COFD[376] = -1.86493270E+01;
  COFD[377] = 5.16040659E+00;
  COFD[378] = -4.46843492E-01;
  COFD[379] = 1.90466181E-02;
  COFD[380] = -1.85748704E+01;
  COFD[381] = 5.14789919E+00;
  COFD[382] = -4.45930850E-01;
  COFD[383] = 1.90363341E-02;
  COFD[384] = -1.96115390E+01;
  COFD[385] = 5.40502814E+00;
  COFD[386] = -4.72746583E-01;
  COFD[387] = 1.99363615E-02;
  COFD[388] = -1.87481939E+01;
  COFD[389] = 5.13858656E+00;
  COFD[390] = -4.45075387E-01;
  COFD[391] = 1.90137309E-02;
  COFD[392] = -1.87481939E+01;
  COFD[393] = 5.13858656E+00;
  COFD[394] = -4.45075387E-01;
  COFD[395] = 1.90137309E-02;
  COFD[396] = -1.87484553E+01;
  COFD[397] = 5.13858656E+00;
  COFD[398] = -4.45075387E-01;
  COFD[399] = 1.90137309E-02;
  COFD[400] = -1.99920054E+01;
  COFD[401] = 5.50111590E+00;
  COFD[402] = -4.82434754E-01;
  COFD[403] = 2.02461869E-02;
  COFD[404] = -2.01263081E+01;
  COFD[405] = 5.54581286E+00;
  COFD[406] = -4.87014004E-01;
  COFD[407] = 2.03965482E-02;
  COFD[408] = -1.40949183E+01;
  COFD[409] = 3.07549274E+00;
  COFD[410] = -1.88889344E-01;
  COFD[411] = 8.37152866E-03;
  COFD[412] = -1.32243932E+01;
  COFD[413] = 2.90778936E+00;
  COFD[414] = -1.67388544E-01;
  COFD[415] = 7.45220609E-03;
  COFD[416] = -1.34248014E+01;
  COFD[417] = 3.48624238E+00;
  COFD[418] = -2.41554467E-01;
  COFD[419] = 1.06263545E-02;
  COFD[420] = -1.32399011E+01;
  COFD[421] = 2.90778936E+00;
  COFD[422] = -1.67388544E-01;
  COFD[423] = 7.45220609E-03;
  COFD[424] = -1.09629118E+01;
  COFD[425] = 2.30836460E+00;
  COFD[426] = -8.76339315E-02;
  COFD[427] = 3.90878445E-03;
  COFD[428] = -1.43340695E+01;
  COFD[429] = 3.17651319E+00;
  COFD[430] = -2.02028974E-01;
  COFD[431] = 8.94232502E-03;
  COFD[432] = -1.94252948E+01;
  COFD[433] = 5.16013126E+00;
  COFD[434] = -4.46824543E-01;
  COFD[435] = 1.90464887E-02;
  COFD[436] = -1.43444614E+01;
  COFD[437] = 3.17651319E+00;
  COFD[438] = -2.02028974E-01;
  COFD[439] = 8.94232502E-03;
  COFD[440] = -1.43393972E+01;
  COFD[441] = 3.17651319E+00;
  COFD[442] = -2.02028974E-01;
  COFD[443] = 8.94232502E-03;
  COFD[444] = -1.50724583E+01;
  COFD[445] = 3.47945612E+00;
  COFD[446] = -2.40703722E-01;
  COFD[447] = 1.05907441E-02;
  COFD[448] = -1.94570202E+01;
  COFD[449] = 5.02567894E+00;
  COFD[450] = -4.32045169E-01;
  COFD[451] = 1.85132214E-02;
  COFD[452] = -1.50911746E+01;
  COFD[453] = 3.47945612E+00;
  COFD[454] = -2.40703722E-01;
  COFD[455] = 1.05907441E-02;
  COFD[456] = -1.41191170E+01;
  COFD[457] = 3.08120012E+00;
  COFD[458] = -1.89629903E-01;
  COFD[459] = 8.40361952E-03;
  COFD[460] = -1.88378792E+01;
  COFD[461] = 4.79683898E+00;
  COFD[462] = -4.04829719E-01;
  COFD[463] = 1.74325475E-02;
  COFD[464] = -1.72247908E+01;
  COFD[465] = 4.15807461E+00;
  COFD[466] = -3.27178539E-01;
  COFD[467] = 1.42784349E-02;
  COFD[468] = -1.50420909E+01;
  COFD[469] = 3.46140064E+00;
  COFD[470] = -2.38440092E-01;
  COFD[471] = 1.04960087E-02;
  COFD[472] = -1.68535691E+01;
  COFD[473] = 4.11954900E+00;
  COFD[474] = -3.22470391E-01;
  COFD[475] = 1.40859564E-02;
  COFD[476] = -1.72310169E+01;
  COFD[477] = 4.15807461E+00;
  COFD[478] = -3.27178539E-01;
  COFD[479] = 1.42784349E-02;
  COFD[480] = -1.70756953E+01;
  COFD[481] = 4.14240922E+00;
  COFD[482] = -3.25239774E-01;
  COFD[483] = 1.41980687E-02;
  COFD[484] = -1.94507789E+01;
  COFD[485] = 5.02567894E+00;
  COFD[486] = -4.32045169E-01;
  COFD[487] = 1.85132214E-02;
  COFD[488] = -1.94151732E+01;
  COFD[489] = 4.98286777E+00;
  COFD[490] = -4.26970814E-01;
  COFD[491] = 1.83122917E-02;
  COFD[492] = -1.94179671E+01;
  COFD[493] = 4.98286777E+00;
  COFD[494] = -4.26970814E-01;
  COFD[495] = 1.83122917E-02;
  COFD[496] = -1.72472941E+01;
  COFD[497] = 4.24084025E+00;
  COFD[498] = -3.37428619E-01;
  COFD[499] = 1.47032793E-02;
  COFD[500] = -1.49718147E+01;
  COFD[501] = 3.52327209E+00;
  COFD[502] = -2.46286208E-01;
  COFD[503] = 1.08285963E-02;
  COFD[504] = -1.72547115E+01;
  COFD[505] = 4.24084025E+00;
  COFD[506] = -3.37428619E-01;
  COFD[507] = 1.47032793E-02;
  COFD[508] = -1.91136407E+01;
  COFD[509] = 4.84384483E+00;
  COFD[510] = -4.10265575E-01;
  COFD[511] = 1.76414287E-02;
  COFD[512] = -1.80698827E+01;
  COFD[513] = 4.45434023E+00;
  COFD[514] = -3.63584633E-01;
  COFD[515] = 1.57739270E-02;
  COFD[516] = -1.79580536E+01;
  COFD[517] = 4.42139452E+00;
  COFD[518] = -3.59567329E-01;
  COFD[519] = 1.56103969E-02;
  COFD[520] = -1.92042311E+01;
  COFD[521] = 4.78152337E+00;
  COFD[522] = -4.03052726E-01;
  COFD[523] = 1.73639773E-02;
  COFD[524] = -1.80945621E+01;
  COFD[525] = 4.40247898E+00;
  COFD[526] = -3.57238362E-01;
  COFD[527] = 1.55145651E-02;
  COFD[528] = -1.80945621E+01;
  COFD[529] = 4.40247898E+00;
  COFD[530] = -3.57238362E-01;
  COFD[531] = 1.55145651E-02;
  COFD[532] = -1.80978071E+01;
  COFD[533] = 4.40247898E+00;
  COFD[534] = -3.57238362E-01;
  COFD[535] = 1.55145651E-02;
  COFD[536] = -1.96903093E+01;
  COFD[537] = 4.92149009E+00;
  COFD[538] = -4.19702348E-01;
  COFD[539] = 1.80250370E-02;
  COFD[540] = -1.98546608E+01;
  COFD[541] = 4.98207523E+00;
  COFD[542] = -4.26877291E-01;
  COFD[543] = 1.83086094E-02;
  COFD[544] = -1.16906458E+01;
  COFD[545] = 2.47469981E+00;
  COFD[546] = -1.10436257E-01;
  COFD[547] = 4.95273813E-03;
  COFD[548] = -1.09595844E+01;
  COFD[549] = 2.30836460E+00;
  COFD[550] = -8.76339315E-02;
  COFD[551] = 3.90878445E-03;
  COFD[552] = -1.14366544E+01;
  COFD[553] = 2.78323501E+00;
  COFD[554] = -1.51214064E-01;
  COFD[555] = 6.75150012E-03;
  COFD[556] = -1.09629118E+01;
  COFD[557] = 2.30836460E+00;
  COFD[558] = -8.76339315E-02;
  COFD[559] = 3.90878445E-03;
  COFD[560] = -1.03270769E+01;
  COFD[561] = 2.19285409E+00;
  COFD[562] = -7.54492786E-02;
  COFD[563] = 3.51398213E-03;
  COFD[564] = -1.18989101E+01;
  COFD[565] = 2.57507000E+00;
  COFD[566] = -1.24033737E-01;
  COFD[567] = 5.56694959E-03;
  COFD[568] = -1.71983144E+01;
  COFD[569] = 4.63881440E+00;
  COFD[570] = -3.86139677E-01;
  COFD[571] = 1.66955099E-02;
  COFD[572] = -1.19006697E+01;
  COFD[573] = 2.57507000E+00;
  COFD[574] = -1.24033737E-01;
  COFD[575] = 5.56694959E-03;
  COFD[576] = -1.18998160E+01;
  COFD[577] = 2.57507000E+00;
  COFD[578] = -1.24033737E-01;
  COFD[579] = 5.56694959E-03;
  COFD[580] = -1.25099100E+01;
  COFD[581] = 2.77873601E+00;
  COFD[582] = -1.50637360E-01;
  COFD[583] = 6.72684281E-03;
  COFD[584] = -1.60528433E+01;
  COFD[585] = 4.11188603E+00;
  COFD[586] = -3.21540884E-01;
  COFD[587] = 1.40482564E-02;
  COFD[588] = -1.25141403E+01;
  COFD[589] = 2.77873601E+00;
  COFD[590] = -1.50637360E-01;
  COFD[591] = 6.72684281E-03;
  COFD[592] = -1.17159884E+01;
  COFD[593] = 2.48123210E+00;
  COFD[594] = -1.11322604E-01;
  COFD[595] = 4.99282389E-03;
  COFD[596] = -1.58456453E+01;
  COFD[597] = 4.02074796E+00;
  COFD[598] = -3.10018539E-01;
  COFD[599] = 1.35599559E-02;
  COFD[600] = -1.39648264E+01;
  COFD[601] = 3.24966086E+00;
  COFD[602] = -2.11199992E-01;
  COFD[603] = 9.32580661E-03;
  COFD[604] = -1.24693714E+01;
  COFD[605] = 2.76686648E+00;
  COFD[606] = -1.49120141E-01;
  COFD[607] = 6.66220432E-03;
  COFD[608] = -1.36336524E+01;
  COFD[609] = 3.22088176E+00;
  COFD[610] = -2.07623790E-01;
  COFD[611] = 9.17771542E-03;
  COFD[612] = -1.39659148E+01;
  COFD[613] = 3.24966086E+00;
  COFD[614] = -2.11199992E-01;
  COFD[615] = 9.32580661E-03;
  COFD[616] = -1.37794466E+01;
  COFD[617] = 3.23973858E+00;
  COFD[618] = -2.09989036E-01;
  COFD[619] = 9.27667906E-03;
  COFD[620] = -1.60517517E+01;
  COFD[621] = 4.11188603E+00;
  COFD[622] = -3.21540884E-01;
  COFD[623] = 1.40482564E-02;
  COFD[624] = -1.59632633E+01;
  COFD[625] = 4.07051484E+00;
  COFD[626] = -3.16303109E-01;
  COFD[627] = 1.38259377E-02;
  COFD[628] = -1.59636946E+01;
  COFD[629] = 4.07051484E+00;
  COFD[630] = -3.16303109E-01;
  COFD[631] = 1.38259377E-02;
  COFD[632] = -1.39315415E+01;
  COFD[633] = 3.30394764E+00;
  COFD[634] = -2.17920112E-01;
  COFD[635] = 9.60284243E-03;
  COFD[636] = -1.22004476E+01;
  COFD[637] = 2.80725489E+00;
  COFD[638] = -1.54291406E-01;
  COFD[639] = 6.88290911E-03;
  COFD[640] = -1.39328824E+01;
  COFD[641] = 3.30394764E+00;
  COFD[642] = -2.17920112E-01;
  COFD[643] = 9.60284243E-03;
  COFD[644] = -1.57040365E+01;
  COFD[645] = 3.93614244E+00;
  COFD[646] = -2.99111497E-01;
  COFD[647] = 1.30888229E-02;
  COFD[648] = -1.46719351E+01;
  COFD[649] = 3.52400594E+00;
  COFD[650] = -2.46379985E-01;
  COFD[651] = 1.08326032E-02;
  COFD[652] = -1.45715952E+01;
  COFD[653] = 3.49477850E+00;
  COFD[654] = -2.42635772E-01;
  COFD[655] = 1.06721490E-02;
  COFD[656] = -1.56932959E+01;
  COFD[657] = 3.84112355E+00;
  COFD[658] = -2.86739743E-01;
  COFD[659] = 1.25496520E-02;
  COFD[660] = -1.47138094E+01;
  COFD[661] = 3.48023191E+00;
  COFD[662] = -2.40800798E-01;
  COFD[663] = 1.05947990E-02;
  COFD[664] = -1.47138094E+01;
  COFD[665] = 3.48023191E+00;
  COFD[666] = -2.40800798E-01;
  COFD[667] = 1.05947990E-02;
  COFD[668] = -1.47143206E+01;
  COFD[669] = 3.48023191E+00;
  COFD[670] = -2.40800798E-01;
  COFD[671] = 1.05947990E-02;
  COFD[672] = -1.63371456E+01;
  COFD[673] = 4.06047389E+00;
  COFD[674] = -3.15033724E-01;
  COFD[675] = 1.37721357E-02;
  COFD[676] = -1.64819341E+01;
  COFD[677] = 4.11726218E+00;
  COFD[678] = -3.22193019E-01;
  COFD[679] = 1.40747076E-02;
  COFD[680] = -1.52414498E+01;
  COFD[681] = 3.35922578E+00;
  COFD[682] = -2.25181399E-01;
  COFD[683] = 9.92132878E-03;
  COFD[684] = -1.43139120E+01;
  COFD[685] = 3.17651319E+00;
  COFD[686] = -2.02028974E-01;
  COFD[687] = 8.94232502E-03;
  COFD[688] = -1.46550238E+01;
  COFD[689] = 3.83606243E+00;
  COFD[690] = -2.86076532E-01;
  COFD[691] = 1.25205829E-02;
  COFD[692] = -1.43340695E+01;
  COFD[693] = 3.17651319E+00;
  COFD[694] = -2.02028974E-01;
  COFD[695] = 8.94232502E-03;
  COFD[696] = -1.18989101E+01;
  COFD[697] = 2.57507000E+00;
  COFD[698] = -1.24033737E-01;
  COFD[699] = 5.56694959E-03;
  COFD[700] = -1.55511233E+01;
  COFD[701] = 3.48070094E+00;
  COFD[702] = -2.40859499E-01;
  COFD[703] = 1.05972514E-02;
  COFD[704] = -2.12652444E+01;
  COFD[705] = 5.59961822E+00;
  COFD[706] = -4.91624856E-01;
  COFD[707] = 2.05035546E-02;
  COFD[708] = -1.55661647E+01;
  COFD[709] = 3.48070094E+00;
  COFD[710] = -2.40859499E-01;
  COFD[711] = 1.05972514E-02;
  COFD[712] = -1.55588172E+01;
  COFD[713] = 3.48070094E+00;
  COFD[714] = -2.40859499E-01;
  COFD[715] = 1.05972514E-02;
  COFD[716] = -1.63254645E+01;
  COFD[717] = 3.82388595E+00;
  COFD[718] = -2.84480724E-01;
  COFD[719] = 1.24506311E-02;
  COFD[720] = -2.08293167E+01;
  COFD[721] = 5.35267674E+00;
  COFD[722] = -4.69010505E-01;
  COFD[723] = 1.98979152E-02;
  COFD[724] = -1.63493305E+01;
  COFD[725] = 3.82388595E+00;
  COFD[726] = -2.84480724E-01;
  COFD[727] = 1.24506311E-02;
  COFD[728] = -1.52721010E+01;
  COFD[729] = 3.36790500E+00;
  COFD[730] = -2.26321740E-01;
  COFD[731] = 9.97135055E-03;
  COFD[732] = -2.04928875E+01;
  COFD[733] = 5.22397941E+00;
  COFD[734] = -4.54138181E-01;
  COFD[735] = 1.93249289E-02;
  COFD[736] = -1.85756017E+01;
  COFD[737] = 4.51052425E+00;
  COFD[738] = -3.70301627E-01;
  COFD[739] = 1.60416153E-02;
  COFD[740] = -1.62724429E+01;
  COFD[741] = 3.79163564E+00;
  COFD[742] = -2.80257365E-01;
  COFD[743] = 1.22656902E-02;
  COFD[744] = -1.82145292E+01;
  COFD[745] = 4.46848269E+00;
  COFD[746] = -3.65269718E-01;
  COFD[747] = 1.58407652E-02;
  COFD[748] = -1.85844631E+01;
  COFD[749] = 4.51052425E+00;
  COFD[750] = -3.70301627E-01;
  COFD[751] = 1.60416153E-02;
  COFD[752] = -1.84688303E+01;
  COFD[753] = 4.49330851E+00;
  COFD[754] = -3.68208715E-01;
  COFD[755] = 1.59565402E-02;
  COFD[756] = -2.08204356E+01;
  COFD[757] = 5.35267674E+00;
  COFD[758] = -4.69010505E-01;
  COFD[759] = 1.98979152E-02;
  COFD[760] = -2.08463112E+01;
  COFD[761] = 5.32244593E+00;
  COFD[762] = -4.65829403E-01;
  COFD[763] = 1.97895274E-02;
  COFD[764] = -2.08505769E+01;
  COFD[765] = 5.32244593E+00;
  COFD[766] = -4.65829403E-01;
  COFD[767] = 1.97895274E-02;
  COFD[768] = -1.86507146E+01;
  COFD[769] = 4.60874797E+00;
  COFD[770] = -3.82368716E-01;
  COFD[771] = 1.65370164E-02;
  COFD[772] = -1.64169341E+01;
  COFD[773] = 3.89309916E+00;
  COFD[774] = -2.93528188E-01;
  COFD[775] = 1.28463177E-02;
  COFD[776] = -1.86610959E+01;
  COFD[777] = 4.60874797E+00;
  COFD[778] = -3.82368716E-01;
  COFD[779] = 1.65370164E-02;
  COFD[780] = -2.05235643E+01;
  COFD[781] = 5.18417470E+00;
  COFD[782] = -4.49491573E-01;
  COFD[783] = 1.91438508E-02;
  COFD[784] = -1.94912078E+01;
  COFD[785] = 4.81575071E+00;
  COFD[786] = -4.07042139E-01;
  COFD[787] = 1.75187504E-02;
  COFD[788] = -1.93917227E+01;
  COFD[789] = 4.78708023E+00;
  COFD[790] = -4.03693144E-01;
  COFD[791] = 1.73884817E-02;
  COFD[792] = -2.06513233E+01;
  COFD[793] = 5.14159226E+00;
  COFD[794] = -4.45395793E-01;
  COFD[795] = 1.90248052E-02;
  COFD[796] = -1.95201761E+01;
  COFD[797] = 4.77151544E+00;
  COFD[798] = -4.01882811E-01;
  COFD[799] = 1.73184814E-02;
  COFD[800] = -1.95201761E+01;
  COFD[801] = 4.77151544E+00;
  COFD[802] = -4.01882811E-01;
  COFD[803] = 1.73184814E-02;
  COFD[804] = -1.95250705E+01;
  COFD[805] = 4.77151544E+00;
  COFD[806] = -4.01882811E-01;
  COFD[807] = 1.73184814E-02;
  COFD[808] = -2.12147498E+01;
  COFD[809] = 5.29477849E+00;
  COFD[810] = -4.62516361E-01;
  COFD[811] = 1.96564010E-02;
  COFD[812] = -2.13698628E+01;
  COFD[813] = 5.34971867E+00;
  COFD[814] = -4.68771124E-01;
  COFD[815] = 1.98933811E-02;
  COFD[816] = -2.10643264E+01;
  COFD[817] = 5.53614864E+00;
  COFD[818] = -4.86046753E-01;
  COFD[819] = 2.03659193E-02;
  COFD[820] = -1.94093476E+01;
  COFD[821] = 5.16013126E+00;
  COFD[822] = -4.46824543E-01;
  COFD[823] = 1.90464887E-02;
  COFD[824] = -1.95739720E+01;
  COFD[825] = 5.61113230E+00;
  COFD[826] = -4.90190187E-01;
  COFD[827] = 2.03260675E-02;
  COFD[828] = -1.94252948E+01;
  COFD[829] = 5.16013126E+00;
  COFD[830] = -4.46824543E-01;
  COFD[831] = 1.90464887E-02;
  COFD[832] = -1.71983144E+01;
  COFD[833] = 4.63881440E+00;
  COFD[834] = -3.86139677E-01;
  COFD[835] = 1.66955099E-02;
  COFD[836] = -2.12652444E+01;
  COFD[837] = 5.59961822E+00;
  COFD[838] = -4.91624856E-01;
  COFD[839] = 2.05035546E-02;
  COFD[840] = -1.19157788E+01;
  COFD[841] = 9.28952533E-01;
  COFD[842] = 2.42107483E-01;
  COFD[843] = -1.59824150E-02;
  COFD[844] = -2.06516251E+01;
  COFD[845] = 5.41688482E+00;
  COFD[846] = -4.73387188E-01;
  COFD[847] = 1.99280175E-02;
  COFD[848] = -2.06463656E+01;
  COFD[849] = 5.41688482E+00;
  COFD[850] = -4.73387188E-01;
  COFD[851] = 1.99280175E-02;
  COFD[852] = -2.12639169E+01;
  COFD[853] = 5.61184117E+00;
  COFD[854] = -4.90532156E-01;
  COFD[855] = 2.03507922E-02;
  COFD[856] = -1.77563175E+01;
  COFD[857] = 3.57475686E+00;
  COFD[858] = -1.56396297E-01;
  COFD[859] = 3.12157721E-03;
  COFD[860] = -2.12831283E+01;
  COFD[861] = 5.61184117E+00;
  COFD[862] = -4.90532156E-01;
  COFD[863] = 2.03507922E-02;
  COFD[864] = -2.11388255E+01;
  COFD[865] = 5.55529689E+00;
  COFD[866] = -4.87942530E-01;
  COFD[867] = 2.04249057E-02;
  COFD[868] = -1.65295191E+01;
  COFD[869] = 2.97569077E+00;
  COFD[870] = -6.75650795E-02;
  COFD[871] = -1.08649440E-03;
  COFD[872] = -2.13084280E+01;
  COFD[873] = 5.27210469E+00;
  COFD[874] = -4.21419216E-01;
  COFD[875] = 1.63567178E-02;
  COFD[876] = -2.14087360E+01;
  COFD[877] = 5.57281993E+00;
  COFD[878] = -4.76690860E-01;
  COFD[879] = 1.94000702E-02;
  COFD[880] = -2.11309141E+01;
  COFD[881] = 5.32644193E+00;
  COFD[882] = -4.30581064E-01;
  COFD[883] = 1.68379725E-02;
  COFD[884] = -2.13148834E+01;
  COFD[885] = 5.27210469E+00;
  COFD[886] = -4.21419216E-01;
  COFD[887] = 1.63567178E-02;
  COFD[888] = -2.07653629E+01;
  COFD[889] = 5.01091988E+00;
  COFD[890] = -3.77985581E-01;
  COFD[891] = 1.40968617E-02;
  COFD[892] = -1.77498465E+01;
  COFD[893] = 3.57475686E+00;
  COFD[894] = -1.56396297E-01;
  COFD[895] = 3.12157721E-03;
  COFD[896] = -1.80862788E+01;
  COFD[897] = 3.69199168E+00;
  COFD[898] = -1.74005516E-01;
  COFD[899] = 3.97694372E-03;
  COFD[900] = -1.80891927E+01;
  COFD[901] = 3.69199168E+00;
  COFD[902] = -1.74005516E-01;
  COFD[903] = 3.97694372E-03;
  COFD[904] = -2.09565855E+01;
  COFD[905] = 5.18380539E+00;
  COFD[906] = -4.06234719E-01;
  COFD[907] = 1.55515345E-02;
  COFD[908] = -2.10440599E+01;
  COFD[909] = 5.59806282E+00;
  COFD[910] = -4.87109535E-01;
  COFD[911] = 2.01370226E-02;
  COFD[912] = -2.09642647E+01;
  COFD[913] = 5.18380539E+00;
  COFD[914] = -4.06234719E-01;
  COFD[915] = 1.55515345E-02;
  COFD[916] = -1.87419126E+01;
  COFD[917] = 3.96926341E+00;
  COFD[918] = -2.16412264E-01;
  COFD[919] = 6.06012078E-03;
  COFD[920] = -2.05372348E+01;
  COFD[921] = 4.83379373E+00;
  COFD[922] = -3.50008083E-01;
  COFD[923] = 1.26863426E-02;
  COFD[924] = -2.06310242E+01;
  COFD[925] = 4.89289496E+00;
  COFD[926] = -3.59346263E-01;
  COFD[927] = 1.31570901E-02;
  COFD[928] = -1.94509960E+01;
  COFD[929] = 4.17438087E+00;
  COFD[930] = -2.47331309E-01;
  COFD[931] = 7.56793055E-03;
  COFD[932] = -2.08879106E+01;
  COFD[933] = 4.92602269E+00;
  COFD[934] = -3.64572914E-01;
  COFD[935] = 1.34203681E-02;
  COFD[936] = -2.08879106E+01;
  COFD[937] = 4.92602269E+00;
  COFD[938] = -3.64572914E-01;
  COFD[939] = 1.34203681E-02;
  COFD[940] = -2.08912917E+01;
  COFD[941] = 4.92602269E+00;
  COFD[942] = -3.64572914E-01;
  COFD[943] = 1.34203681E-02;
  COFD[944] = -1.76259770E+01;
  COFD[945] = 3.29707252E+00;
  COFD[946] = -1.19066656E-01;
  COFD[947] = 1.47805346E-03;
  COFD[948] = -1.73636810E+01;
  COFD[949] = 3.17377062E+00;
  COFD[950] = -1.00394281E-01;
  COFD[951] = 5.69079042E-04;
  COFD[952] = -1.52554785E+01;
  COFD[953] = 3.35922578E+00;
  COFD[954] = -2.25181399E-01;
  COFD[955] = 9.92132878E-03;
  COFD[956] = -1.43238892E+01;
  COFD[957] = 3.17651319E+00;
  COFD[958] = -2.02028974E-01;
  COFD[959] = 8.94232502E-03;
  COFD[960] = -1.46559297E+01;
  COFD[961] = 3.83606243E+00;
  COFD[962] = -2.86076532E-01;
  COFD[963] = 1.25205829E-02;
  COFD[964] = -1.43444614E+01;
  COFD[965] = 3.17651319E+00;
  COFD[966] = -2.02028974E-01;
  COFD[967] = 8.94232502E-03;
  COFD[968] = -1.19006697E+01;
  COFD[969] = 2.57507000E+00;
  COFD[970] = -1.24033737E-01;
  COFD[971] = 5.56694959E-03;
  COFD[972] = -1.55661647E+01;
  COFD[973] = 3.48070094E+00;
  COFD[974] = -2.40859499E-01;
  COFD[975] = 1.05972514E-02;
  COFD[976] = -2.06516251E+01;
  COFD[977] = 5.41688482E+00;
  COFD[978] = -4.73387188E-01;
  COFD[979] = 1.99280175E-02;
  COFD[980] = -1.55816727E+01;
  COFD[981] = 3.48070094E+00;
  COFD[982] = -2.40859499E-01;
  COFD[983] = 1.05972514E-02;
  COFD[984] = -1.55740954E+01;
  COFD[985] = 3.48070094E+00;
  COFD[986] = -2.40859499E-01;
  COFD[987] = 1.05972514E-02;
  COFD[988] = -1.63345789E+01;
  COFD[989] = 3.82388595E+00;
  COFD[990] = -2.84480724E-01;
  COFD[991] = 1.24506311E-02;
  COFD[992] = -2.08438728E+01;
  COFD[993] = 5.35267674E+00;
  COFD[994] = -4.69010505E-01;
  COFD[995] = 1.98979152E-02;
  COFD[996] = -1.63588948E+01;
  COFD[997] = 3.82388595E+00;
  COFD[998] = -2.84480724E-01;
  COFD[999] = 1.24506311E-02;
  COFD[1000] = -1.52861287E+01;
  COFD[1001] = 3.36790500E+00;
  COFD[1002] = -2.26321740E-01;
  COFD[1003] = 9.97135055E-03;
  COFD[1004] = -2.02710239E+01;
  COFD[1005] = 5.14984081E+00;
  COFD[1006] = -4.46093018E-01;
  COFD[1007] = 1.90396647E-02;
  COFD[1008] = -1.85899094E+01;
  COFD[1009] = 4.51052425E+00;
  COFD[1010] = -3.70301627E-01;
  COFD[1011] = 1.60416153E-02;
  COFD[1012] = -1.62824385E+01;
  COFD[1013] = 3.79163564E+00;
  COFD[1014] = -2.80257365E-01;
  COFD[1015] = 1.22656902E-02;
  COFD[1016] = -1.82285687E+01;
  COFD[1017] = 4.46848269E+00;
  COFD[1018] = -3.65269718E-01;
  COFD[1019] = 1.58407652E-02;
  COFD[1020] = -1.85990305E+01;
  COFD[1021] = 4.51052425E+00;
  COFD[1022] = -3.70301627E-01;
  COFD[1023] = 1.60416153E-02;
  COFD[1024] = -1.84862906E+01;
  COFD[1025] = 4.49330851E+00;
  COFD[1026] = -3.68208715E-01;
  COFD[1027] = 1.59565402E-02;
  COFD[1028] = -2.08347318E+01;
  COFD[1029] = 5.35267674E+00;
  COFD[1030] = -4.69010505E-01;
  COFD[1031] = 1.98979152E-02;
  COFD[1032] = -2.08642660E+01;
  COFD[1033] = 5.32244593E+00;
  COFD[1034] = -4.65829403E-01;
  COFD[1035] = 1.97895274E-02;
  COFD[1036] = -2.08686884E+01;
  COFD[1037] = 5.32244593E+00;
  COFD[1038] = -4.65829403E-01;
  COFD[1039] = 1.97895274E-02;
  COFD[1040] = -1.86641903E+01;
  COFD[1041] = 4.60874797E+00;
  COFD[1042] = -3.82368716E-01;
  COFD[1043] = 1.65370164E-02;
  COFD[1044] = -1.64338675E+01;
  COFD[1045] = 3.89309916E+00;
  COFD[1046] = -2.93528188E-01;
  COFD[1047] = 1.28463177E-02;
  COFD[1048] = -1.86748583E+01;
  COFD[1049] = 4.60874797E+00;
  COFD[1050] = -3.82368716E-01;
  COFD[1051] = 1.65370164E-02;
  COFD[1052] = -2.05408587E+01;
  COFD[1053] = 5.18417470E+00;
  COFD[1054] = -4.49491573E-01;
  COFD[1055] = 1.91438508E-02;
  COFD[1056] = -1.95081493E+01;
  COFD[1057] = 4.81575071E+00;
  COFD[1058] = -4.07042139E-01;
  COFD[1059] = 1.75187504E-02;
  COFD[1060] = -1.94088469E+01;
  COFD[1061] = 4.78708023E+00;
  COFD[1062] = -4.03693144E-01;
  COFD[1063] = 1.73884817E-02;
  COFD[1064] = -2.06706819E+01;
  COFD[1065] = 5.14159226E+00;
  COFD[1066] = -4.45395793E-01;
  COFD[1067] = 1.90248052E-02;
  COFD[1068] = -1.95374781E+01;
  COFD[1069] = 4.77151544E+00;
  COFD[1070] = -4.01882811E-01;
  COFD[1071] = 1.73184814E-02;
  COFD[1072] = -1.95374781E+01;
  COFD[1073] = 4.77151544E+00;
  COFD[1074] = -4.01882811E-01;
  COFD[1075] = 1.73184814E-02;
  COFD[1076] = -1.95425458E+01;
  COFD[1077] = 4.77151544E+00;
  COFD[1078] = -4.01882811E-01;
  COFD[1079] = 1.73184814E-02;
  COFD[1080] = -2.11103883E+01;
  COFD[1081] = 5.25151362E+00;
  COFD[1082] = -4.57337706E-01;
  COFD[1083] = 1.94489055E-02;
  COFD[1084] = -2.13011075E+01;
  COFD[1085] = 5.32167660E+00;
  COFD[1086] = -4.65740624E-01;
  COFD[1087] = 1.97861081E-02;
  COFD[1088] = -1.52486292E+01;
  COFD[1089] = 3.35922578E+00;
  COFD[1090] = -2.25181399E-01;
  COFD[1091] = 9.92132878E-03;
  COFD[1092] = -1.43190281E+01;
  COFD[1093] = 3.17651319E+00;
  COFD[1094] = -2.02028974E-01;
  COFD[1095] = 8.94232502E-03;
  COFD[1096] = -1.46554904E+01;
  COFD[1097] = 3.83606243E+00;
  COFD[1098] = -2.86076532E-01;
  COFD[1099] = 1.25205829E-02;
  COFD[1100] = -1.43393972E+01;
  COFD[1101] = 3.17651319E+00;
  COFD[1102] = -2.02028974E-01;
  COFD[1103] = 8.94232502E-03;
  COFD[1104] = -1.18998160E+01;
  COFD[1105] = 2.57507000E+00;
  COFD[1106] = -1.24033737E-01;
  COFD[1107] = 5.56694959E-03;
  COFD[1108] = -1.55588172E+01;
  COFD[1109] = 3.48070094E+00;
  COFD[1110] = -2.40859499E-01;
  COFD[1111] = 1.05972514E-02;
  COFD[1112] = -2.06463656E+01;
  COFD[1113] = 5.41688482E+00;
  COFD[1114] = -4.73387188E-01;
  COFD[1115] = 1.99280175E-02;
  COFD[1116] = -1.55740954E+01;
  COFD[1117] = 3.48070094E+00;
  COFD[1118] = -2.40859499E-01;
  COFD[1119] = 1.05972514E-02;
  COFD[1120] = -1.55666313E+01;
  COFD[1121] = 3.48070094E+00;
  COFD[1122] = -2.40859499E-01;
  COFD[1123] = 1.05972514E-02;
  COFD[1124] = -1.63301401E+01;
  COFD[1125] = 3.82388595E+00;
  COFD[1126] = -2.84480724E-01;
  COFD[1127] = 1.24506311E-02;
  COFD[1128] = -2.08367641E+01;
  COFD[1129] = 5.35267674E+00;
  COFD[1130] = -4.69010505E-01;
  COFD[1131] = 1.98979152E-02;
  COFD[1132] = -1.63542358E+01;
  COFD[1133] = 3.82388595E+00;
  COFD[1134] = -2.84480724E-01;
  COFD[1135] = 1.24506311E-02;
  COFD[1136] = -1.52792799E+01;
  COFD[1137] = 3.36790500E+00;
  COFD[1138] = -2.26321740E-01;
  COFD[1139] = 9.97135055E-03;
  COFD[1140] = -2.02637913E+01;
  COFD[1141] = 5.14984081E+00;
  COFD[1142] = -4.46093018E-01;
  COFD[1143] = 1.90396647E-02;
  COFD[1144] = -1.85829229E+01;
  COFD[1145] = 4.51052425E+00;
  COFD[1146] = -3.70301627E-01;
  COFD[1147] = 1.60416153E-02;
  COFD[1148] = -1.62775683E+01;
  COFD[1149] = 3.79163564E+00;
  COFD[1150] = -2.80257365E-01;
  COFD[1151] = 1.22656902E-02;
  COFD[1152] = -1.82217141E+01;
  COFD[1153] = 4.46848269E+00;
  COFD[1154] = -3.65269718E-01;
  COFD[1155] = 1.58407652E-02;
  COFD[1156] = -1.85919162E+01;
  COFD[1157] = 4.51052425E+00;
  COFD[1158] = -3.70301627E-01;
  COFD[1159] = 1.60416153E-02;
  COFD[1160] = -1.84777509E+01;
  COFD[1161] = 4.49330851E+00;
  COFD[1162] = -3.68208715E-01;
  COFD[1163] = 1.59565402E-02;
  COFD[1164] = -2.08277510E+01;
  COFD[1165] = 5.35267674E+00;
  COFD[1166] = -4.69010505E-01;
  COFD[1167] = 1.98979152E-02;
  COFD[1168] = -2.08554822E+01;
  COFD[1169] = 5.32244593E+00;
  COFD[1170] = -4.65829403E-01;
  COFD[1171] = 1.97895274E-02;
  COFD[1172] = -2.08598273E+01;
  COFD[1173] = 5.32244593E+00;
  COFD[1174] = -4.65829403E-01;
  COFD[1175] = 1.97895274E-02;
  COFD[1176] = -1.86576128E+01;
  COFD[1177] = 4.60874797E+00;
  COFD[1178] = -3.82368716E-01;
  COFD[1179] = 1.65370164E-02;
  COFD[1180] = -1.64255877E+01;
  COFD[1181] = 3.89309916E+00;
  COFD[1182] = -2.93528188E-01;
  COFD[1183] = 1.28463177E-02;
  COFD[1184] = -1.86681399E+01;
  COFD[1185] = 4.60874797E+00;
  COFD[1186] = -3.82368716E-01;
  COFD[1187] = 1.65370164E-02;
  COFD[1188] = -2.05324009E+01;
  COFD[1189] = 5.18417470E+00;
  COFD[1190] = -4.49491573E-01;
  COFD[1191] = 1.91438508E-02;
  COFD[1192] = -1.94998656E+01;
  COFD[1193] = 4.81575071E+00;
  COFD[1194] = -4.07042139E-01;
  COFD[1195] = 1.75187504E-02;
  COFD[1196] = -1.94004730E+01;
  COFD[1197] = 4.78708023E+00;
  COFD[1198] = -4.03693144E-01;
  COFD[1199] = 1.73884817E-02;
  COFD[1200] = -2.06612046E+01;
  COFD[1201] = 5.14159226E+00;
  COFD[1202] = -4.45395793E-01;
  COFD[1203] = 1.90248052E-02;
  COFD[1204] = -1.95290165E+01;
  COFD[1205] = 4.77151544E+00;
  COFD[1206] = -4.01882811E-01;
  COFD[1207] = 1.73184814E-02;
  COFD[1208] = -1.95290165E+01;
  COFD[1209] = 4.77151544E+00;
  COFD[1210] = -4.01882811E-01;
  COFD[1211] = 1.73184814E-02;
  COFD[1212] = -1.95339987E+01;
  COFD[1213] = 4.77151544E+00;
  COFD[1214] = -4.01882811E-01;
  COFD[1215] = 1.73184814E-02;
  COFD[1216] = -2.10999880E+01;
  COFD[1217] = 5.25151362E+00;
  COFD[1218] = -4.57337706E-01;
  COFD[1219] = 1.94489055E-02;
  COFD[1220] = -2.12907071E+01;
  COFD[1221] = 5.32167660E+00;
  COFD[1222] = -4.65740624E-01;
  COFD[1223] = 1.97861081E-02;
  COFD[1224] = -1.59404910E+01;
  COFD[1225] = 3.66853818E+00;
  COFD[1226] = -2.64346221E-01;
  COFD[1227] = 1.15784613E-02;
  COFD[1228] = -1.50584188E+01;
  COFD[1229] = 3.47945612E+00;
  COFD[1230] = -2.40703722E-01;
  COFD[1231] = 1.05907441E-02;
  COFD[1232] = -1.57972520E+01;
  COFD[1233] = 4.22225052E+00;
  COFD[1234] = -3.35156428E-01;
  COFD[1235] = 1.46104855E-02;
  COFD[1236] = -1.50724583E+01;
  COFD[1237] = 3.47945612E+00;
  COFD[1238] = -2.40703722E-01;
  COFD[1239] = 1.05907441E-02;
  COFD[1240] = -1.25099100E+01;
  COFD[1241] = 2.77873601E+00;
  COFD[1242] = -1.50637360E-01;
  COFD[1243] = 6.72684281E-03;
  COFD[1244] = -1.63254645E+01;
  COFD[1245] = 3.82388595E+00;
  COFD[1246] = -2.84480724E-01;
  COFD[1247] = 1.24506311E-02;
  COFD[1248] = -2.12639169E+01;
  COFD[1249] = 5.61184117E+00;
  COFD[1250] = -4.90532156E-01;
  COFD[1251] = 2.03507922E-02;
  COFD[1252] = -1.63345789E+01;
  COFD[1253] = 3.82388595E+00;
  COFD[1254] = -2.84480724E-01;
  COFD[1255] = 1.24506311E-02;
  COFD[1256] = -1.63301401E+01;
  COFD[1257] = 3.82388595E+00;
  COFD[1258] = -2.84480724E-01;
  COFD[1259] = 1.24506311E-02;
  COFD[1260] = -1.73027539E+01;
  COFD[1261] = 4.21416723E+00;
  COFD[1262] = -3.34163932E-01;
  COFD[1263] = 1.45697432E-02;
  COFD[1264] = -2.14215667E+01;
  COFD[1265] = 5.56531152E+00;
  COFD[1266] = -4.88789821E-01;
  COFD[1267] = 2.04437116E-02;
  COFD[1268] = -1.73198022E+01;
  COFD[1269] = 4.21416723E+00;
  COFD[1270] = -3.34163932E-01;
  COFD[1271] = 1.45697432E-02;
  COFD[1272] = -1.59634493E+01;
  COFD[1273] = 3.67388294E+00;
  COFD[1274] = -2.64990709E-01;
  COFD[1275] = 1.16042706E-02;
  COFD[1276] = -2.09376165E+01;
  COFD[1277] = 5.40870099E+00;
  COFD[1278] = -4.73017610E-01;
  COFD[1279] = 1.99399066E-02;
  COFD[1280] = -1.94530234E+01;
  COFD[1281] = 4.87180830E+00;
  COFD[1282] = -4.13582958E-01;
  COFD[1283] = 1.77726094E-02;
  COFD[1284] = -1.72556722E+01;
  COFD[1285] = 4.19029808E+00;
  COFD[1286] = -3.31177076E-01;
  COFD[1287] = 1.44446234E-02;
  COFD[1288] = -1.90996777E+01;
  COFD[1289] = 4.82869066E+00;
  COFD[1290] = -4.08564514E-01;
  COFD[1291] = 1.75784675E-02;
  COFD[1292] = -1.94585097E+01;
  COFD[1293] = 4.87180830E+00;
  COFD[1294] = -4.13582958E-01;
  COFD[1295] = 1.77726094E-02;
  COFD[1296] = -1.93015519E+01;
  COFD[1297] = 4.85015581E+00;
  COFD[1298] = -4.10945109E-01;
  COFD[1299] = 1.76651398E-02;
  COFD[1300] = -2.14160667E+01;
  COFD[1301] = 5.56531152E+00;
  COFD[1302] = -4.88789821E-01;
  COFD[1303] = 2.04437116E-02;
  COFD[1304] = -2.14048951E+01;
  COFD[1305] = 5.54007827E+00;
  COFD[1306] = -4.86434511E-01;
  COFD[1307] = 2.03779006E-02;
  COFD[1308] = -2.14073109E+01;
  COFD[1309] = 5.54007827E+00;
  COFD[1310] = -4.86434511E-01;
  COFD[1311] = 2.03779006E-02;
  COFD[1312] = -1.95548207E+01;
  COFD[1313] = 4.97133070E+00;
  COFD[1314] = -4.25604177E-01;
  COFD[1315] = 1.82582594E-02;
  COFD[1316] = -1.72572011E+01;
  COFD[1317] = 4.26063341E+00;
  COFD[1318] = -3.39848064E-01;
  COFD[1319] = 1.48021313E-02;
  COFD[1320] = -1.95613879E+01;
  COFD[1321] = 4.97133070E+00;
  COFD[1322] = -4.25604177E-01;
  COFD[1323] = 1.82582594E-02;
  COFD[1324] = -2.11378438E+01;
  COFD[1325] = 5.42846112E+00;
  COFD[1326] = -4.74321870E-01;
  COFD[1327] = 1.99459749E-02;
  COFD[1328] = -2.03111211E+01;
  COFD[1329] = 5.15740122E+00;
  COFD[1330] = -4.46644818E-01;
  COFD[1331] = 1.90459001E-02;
  COFD[1332] = -2.02434420E+01;
  COFD[1333] = 5.14418672E+00;
  COFD[1334] = -4.45631004E-01;
  COFD[1335] = 1.90308403E-02;
  COFD[1336] = -2.12684290E+01;
  COFD[1337] = 5.40206122E+00;
  COFD[1338] = -4.72555229E-01;
  COFD[1339] = 1.99358199E-02;
  COFD[1340] = -2.03711770E+01;
  COFD[1341] = 5.13279789E+00;
  COFD[1342] = -4.44474174E-01;
  COFD[1343] = 1.89937678E-02;
  COFD[1344] = -2.03711770E+01;
  COFD[1345] = 5.13279789E+00;
  COFD[1346] = -4.44474174E-01;
  COFD[1347] = 1.89937678E-02;
  COFD[1348] = -2.03739918E+01;
  COFD[1349] = 5.13279789E+00;
  COFD[1350] = -4.44474174E-01;
  COFD[1351] = 1.89937678E-02;
  COFD[1352] = -2.16464705E+01;
  COFD[1353] = 5.49325617E+00;
  COFD[1354] = -4.81586493E-01;
  COFD[1355] = 2.02162204E-02;
  COFD[1356] = -2.17867290E+01;
  COFD[1357] = 5.53950393E+00;
  COFD[1358] = -4.86376204E-01;
  COFD[1359] = 2.03760106E-02;
  COFD[1360] = -2.04833743E+01;
  COFD[1361] = 5.23112374E+00;
  COFD[1362] = -4.54967682E-01;
  COFD[1363] = 1.93570423E-02;
  COFD[1364] = -1.94373032E+01;
  COFD[1365] = 5.02567894E+00;
  COFD[1366] = -4.32045169E-01;
  COFD[1367] = 1.85132214E-02;
  COFD[1368] = -1.97550243E+01;
  COFD[1369] = 5.56931926E+00;
  COFD[1370] = -4.89105511E-01;
  COFD[1371] = 2.04493129E-02;
  COFD[1372] = -1.94570202E+01;
  COFD[1373] = 5.02567894E+00;
  COFD[1374] = -4.32045169E-01;
  COFD[1375] = 1.85132214E-02;
  COFD[1376] = -1.60528433E+01;
  COFD[1377] = 4.11188603E+00;
  COFD[1378] = -3.21540884E-01;
  COFD[1379] = 1.40482564E-02;
  COFD[1380] = -2.08293167E+01;
  COFD[1381] = 5.35267674E+00;
  COFD[1382] = -4.69010505E-01;
  COFD[1383] = 1.98979152E-02;
  COFD[1384] = -1.77563175E+01;
  COFD[1385] = 3.57475686E+00;
  COFD[1386] = -1.56396297E-01;
  COFD[1387] = 3.12157721E-03;
  COFD[1388] = -2.08438728E+01;
  COFD[1389] = 5.35267674E+00;
  COFD[1390] = -4.69010505E-01;
  COFD[1391] = 1.98979152E-02;
  COFD[1392] = -2.08367641E+01;
  COFD[1393] = 5.35267674E+00;
  COFD[1394] = -4.69010505E-01;
  COFD[1395] = 1.98979152E-02;
  COFD[1396] = -2.14215667E+01;
  COFD[1397] = 5.56531152E+00;
  COFD[1398] = -4.88789821E-01;
  COFD[1399] = 2.04437116E-02;
  COFD[1400] = -1.90499374E+01;
  COFD[1401] = 3.99221757E+00;
  COFD[1402] = -2.19854880E-01;
  COFD[1403] = 6.22736279E-03;
  COFD[1404] = -2.14449532E+01;
  COFD[1405] = 5.56531152E+00;
  COFD[1406] = -4.88789821E-01;
  COFD[1407] = 2.04437116E-02;
  COFD[1408] = -2.05128629E+01;
  COFD[1409] = 5.23843909E+00;
  COFD[1410] = -4.55815614E-01;
  COFD[1411] = 1.93898040E-02;
  COFD[1412] = -2.01889105E+01;
  COFD[1413] = 4.53183330E+00;
  COFD[1414] = -3.02186760E-01;
  COFD[1415] = 1.02756490E-02;
  COFD[1416] = -2.19700230E+01;
  COFD[1417] = 5.43750833E+00;
  COFD[1418] = -4.50273329E-01;
  COFD[1419] = 1.79013718E-02;
  COFD[1420] = -2.14082433E+01;
  COFD[1421] = 5.55346617E+00;
  COFD[1422] = -4.87783156E-01;
  COFD[1423] = 2.04210886E-02;
  COFD[1424] = -2.17855106E+01;
  COFD[1425] = 5.47519298E+00;
  COFD[1426] = -4.57113040E-01;
  COFD[1427] = 1.82758312E-02;
  COFD[1428] = -2.19786136E+01;
  COFD[1429] = 5.43750833E+00;
  COFD[1430] = -4.50273329E-01;
  COFD[1431] = 1.79013718E-02;
  COFD[1432] = -2.19317665E+01;
  COFD[1433] = 5.45216133E+00;
  COFD[1434] = -4.52916925E-01;
  COFD[1435] = 1.80456400E-02;
  COFD[1436] = -1.90413276E+01;
  COFD[1437] = 3.99221757E+00;
  COFD[1438] = -2.19854880E-01;
  COFD[1439] = 6.22736279E-03;
  COFD[1440] = -1.94051772E+01;
  COFD[1441] = 4.10954793E+00;
  COFD[1442] = -2.37523329E-01;
  COFD[1443] = 7.08858141E-03;
  COFD[1444] = -1.94092818E+01;
  COFD[1445] = 4.10954793E+00;
  COFD[1446] = -2.37523329E-01;
  COFD[1447] = 7.08858141E-03;
  COFD[1448] = -2.16798216E+01;
  COFD[1449] = 5.36811769E+00;
  COFD[1450] = -4.37727086E-01;
  COFD[1451] = 1.72167686E-02;
  COFD[1452] = -2.14303411E+01;
  COFD[1453] = 5.59268435E+00;
  COFD[1454] = -4.91232974E-01;
  COFD[1455] = 2.05064746E-02;
  COFD[1456] = -2.16899028E+01;
  COFD[1457] = 5.36811769E+00;
  COFD[1458] = -4.37727086E-01;
  COFD[1459] = 1.72167686E-02;
  COFD[1460] = -2.01064300E+01;
  COFD[1461] = 4.41511629E+00;
  COFD[1462] = -2.84086963E-01;
  COFD[1463] = 9.37586971E-03;
  COFD[1464] = -2.15258520E+01;
  COFD[1465] = 5.12799307E+00;
  COFD[1466] = -3.96938732E-01;
  COFD[1467] = 1.50673195E-02;
  COFD[1468] = -2.15802742E+01;
  COFD[1469] = 5.16868516E+00;
  COFD[1470] = -4.03721581E-01;
  COFD[1471] = 1.54206640E-02;
  COFD[1472] = -2.06752970E+01;
  COFD[1473] = 4.56779427E+00;
  COFD[1474] = -3.07785839E-01;
  COFD[1475] = 1.05545767E-02;
  COFD[1476] = -2.17926818E+01;
  COFD[1477] = 5.19232842E+00;
  COFD[1478] = -4.07643284E-01;
  COFD[1479] = 1.56246434E-02;
  COFD[1480] = -2.17926818E+01;
  COFD[1481] = 5.19232842E+00;
  COFD[1482] = -4.07643284E-01;
  COFD[1483] = 1.56246434E-02;
  COFD[1484] = -2.17973977E+01;
  COFD[1485] = 5.19232842E+00;
  COFD[1486] = -4.07643284E-01;
  COFD[1487] = 1.56246434E-02;
  COFD[1488] = -2.01633600E+01;
  COFD[1489] = 4.26535185E+00;
  COFD[1490] = -2.61127236E-01;
  COFD[1491] = 8.24369619E-03;
  COFD[1492] = -1.98359696E+01;
  COFD[1493] = 4.11158627E+00;
  COFD[1494] = -2.37831519E-01;
  COFD[1495] = 7.10363413E-03;
  COFD[1496] = -1.59633426E+01;
  COFD[1497] = 3.66853818E+00;
  COFD[1498] = -2.64346221E-01;
  COFD[1499] = 1.15784613E-02;
  COFD[1500] = -1.50766073E+01;
  COFD[1501] = 3.47945612E+00;
  COFD[1502] = -2.40703722E-01;
  COFD[1503] = 1.05907441E-02;
  COFD[1504] = -1.57995045E+01;
  COFD[1505] = 4.22225052E+00;
  COFD[1506] = -3.35156428E-01;
  COFD[1507] = 1.46104855E-02;
  COFD[1508] = -1.50911746E+01;
  COFD[1509] = 3.47945612E+00;
  COFD[1510] = -2.40703722E-01;
  COFD[1511] = 1.05907441E-02;
  COFD[1512] = -1.25141403E+01;
  COFD[1513] = 2.77873601E+00;
  COFD[1514] = -1.50637360E-01;
  COFD[1515] = 6.72684281E-03;
  COFD[1516] = -1.63493305E+01;
  COFD[1517] = 3.82388595E+00;
  COFD[1518] = -2.84480724E-01;
  COFD[1519] = 1.24506311E-02;
  COFD[1520] = -2.12831283E+01;
  COFD[1521] = 5.61184117E+00;
  COFD[1522] = -4.90532156E-01;
  COFD[1523] = 2.03507922E-02;
  COFD[1524] = -1.63588948E+01;
  COFD[1525] = 3.82388595E+00;
  COFD[1526] = -2.84480724E-01;
  COFD[1527] = 1.24506311E-02;
  COFD[1528] = -1.63542358E+01;
  COFD[1529] = 3.82388595E+00;
  COFD[1530] = -2.84480724E-01;
  COFD[1531] = 1.24506311E-02;
  COFD[1532] = -1.73198022E+01;
  COFD[1533] = 4.21416723E+00;
  COFD[1534] = -3.34163932E-01;
  COFD[1535] = 1.45697432E-02;
  COFD[1536] = -2.14449532E+01;
  COFD[1537] = 5.56531152E+00;
  COFD[1538] = -4.88789821E-01;
  COFD[1539] = 2.04437116E-02;
  COFD[1540] = -1.73374523E+01;
  COFD[1541] = 4.21416723E+00;
  COFD[1542] = -3.34163932E-01;
  COFD[1543] = 1.45697432E-02;
  COFD[1544] = -1.59862997E+01;
  COFD[1545] = 3.67388294E+00;
  COFD[1546] = -2.64990709E-01;
  COFD[1547] = 1.16042706E-02;
  COFD[1548] = -2.09612533E+01;
  COFD[1549] = 5.40870099E+00;
  COFD[1550] = -4.73017610E-01;
  COFD[1551] = 1.99399066E-02;
  COFD[1552] = -1.94761598E+01;
  COFD[1553] = 4.87180830E+00;
  COFD[1554] = -4.13582958E-01;
  COFD[1555] = 1.77726094E-02;
  COFD[1556] = -1.72738845E+01;
  COFD[1557] = 4.19029808E+00;
  COFD[1558] = -3.31177076E-01;
  COFD[1559] = 1.44446234E-02;
  COFD[1560] = -1.91225404E+01;
  COFD[1561] = 4.82869066E+00;
  COFD[1562] = -4.08564514E-01;
  COFD[1563] = 1.75784675E-02;
  COFD[1564] = -1.94819074E+01;
  COFD[1565] = 4.87180830E+00;
  COFD[1566] = -4.13582958E-01;
  COFD[1567] = 1.77726094E-02;
  COFD[1568] = -1.93276406E+01;
  COFD[1569] = 4.85015581E+00;
  COFD[1570] = -4.10945109E-01;
  COFD[1571] = 1.76651398E-02;
  COFD[1572] = -2.14391914E+01;
  COFD[1573] = 5.56531152E+00;
  COFD[1574] = -4.88789821E-01;
  COFD[1575] = 2.04437116E-02;
  COFD[1576] = -2.14314067E+01;
  COFD[1577] = 5.54007827E+00;
  COFD[1578] = -4.86434511E-01;
  COFD[1579] = 2.03779006E-02;
  COFD[1580] = -2.14339544E+01;
  COFD[1581] = 5.54007827E+00;
  COFD[1582] = -4.86434511E-01;
  COFD[1583] = 2.03779006E-02;
  COFD[1584] = -1.95770952E+01;
  COFD[1585] = 4.97133070E+00;
  COFD[1586] = -4.25604177E-01;
  COFD[1587] = 1.82582594E-02;
  COFD[1588] = -1.72828280E+01;
  COFD[1589] = 4.26063341E+00;
  COFD[1590] = -3.39848064E-01;
  COFD[1591] = 1.48021313E-02;
  COFD[1592] = -1.95839636E+01;
  COFD[1593] = 4.97133070E+00;
  COFD[1594] = -4.25604177E-01;
  COFD[1595] = 1.82582594E-02;
  COFD[1596] = -2.11637883E+01;
  COFD[1597] = 5.42846112E+00;
  COFD[1598] = -4.74321870E-01;
  COFD[1599] = 1.99459749E-02;
  COFD[1600] = -2.03367551E+01;
  COFD[1601] = 5.15740122E+00;
  COFD[1602] = -4.46644818E-01;
  COFD[1603] = 1.90459001E-02;
  COFD[1604] = -2.02692375E+01;
  COFD[1605] = 5.14418672E+00;
  COFD[1606] = -4.45631004E-01;
  COFD[1607] = 1.90308403E-02;
  COFD[1608] = -2.12960885E+01;
  COFD[1609] = 5.40206122E+00;
  COFD[1610] = -4.72555229E-01;
  COFD[1611] = 1.99358199E-02;
  COFD[1612] = -2.03971282E+01;
  COFD[1613] = 5.13279789E+00;
  COFD[1614] = -4.44474174E-01;
  COFD[1615] = 1.89937678E-02;
  COFD[1616] = -2.03971282E+01;
  COFD[1617] = 5.13279789E+00;
  COFD[1618] = -4.44474174E-01;
  COFD[1619] = 1.89937678E-02;
  COFD[1620] = -2.04000934E+01;
  COFD[1621] = 5.13279789E+00;
  COFD[1622] = -4.44474174E-01;
  COFD[1623] = 1.89937678E-02;
  COFD[1624] = -2.16755450E+01;
  COFD[1625] = 5.49325617E+00;
  COFD[1626] = -4.81586493E-01;
  COFD[1627] = 2.02162204E-02;
  COFD[1628] = -2.18158035E+01;
  COFD[1629] = 5.53950393E+00;
  COFD[1630] = -4.86376204E-01;
  COFD[1631] = 2.03760106E-02;
  COFD[1632] = -1.50031706E+01;
  COFD[1633] = 3.26223357E+00;
  COFD[1634] = -2.12746642E-01;
  COFD[1635] = 9.38912883E-03;
  COFD[1636] = -1.40998907E+01;
  COFD[1637] = 3.08120012E+00;
  COFD[1638] = -1.89629903E-01;
  COFD[1639] = 8.40361952E-03;
  COFD[1640] = -1.43151328E+01;
  COFD[1641] = 3.68038508E+00;
  COFD[1642] = -2.65779346E-01;
  COFD[1643] = 1.16360771E-02;
  COFD[1644] = -1.41191170E+01;
  COFD[1645] = 3.08120012E+00;
  COFD[1646] = -1.89629903E-01;
  COFD[1647] = 8.40361952E-03;
  COFD[1648] = -1.17159884E+01;
  COFD[1649] = 2.48123210E+00;
  COFD[1650] = -1.11322604E-01;
  COFD[1651] = 4.99282389E-03;
  COFD[1652] = -1.52721010E+01;
  COFD[1653] = 3.36790500E+00;
  COFD[1654] = -2.26321740E-01;
  COFD[1655] = 9.97135055E-03;
  COFD[1656] = -2.11388255E+01;
  COFD[1657] = 5.55529689E+00;
  COFD[1658] = -4.87942530E-01;
  COFD[1659] = 2.04249057E-02;
  COFD[1660] = -1.52861287E+01;
  COFD[1661] = 3.36790500E+00;
  COFD[1662] = -2.26321740E-01;
  COFD[1663] = 9.97135055E-03;
  COFD[1664] = -1.52792799E+01;
  COFD[1665] = 3.36790500E+00;
  COFD[1666] = -2.26321740E-01;
  COFD[1667] = 9.97135055E-03;
  COFD[1668] = -1.59634493E+01;
  COFD[1669] = 3.67388294E+00;
  COFD[1670] = -2.64990709E-01;
  COFD[1671] = 1.16042706E-02;
  COFD[1672] = -2.05128629E+01;
  COFD[1673] = 5.23843909E+00;
  COFD[1674] = -4.55815614E-01;
  COFD[1675] = 1.93898040E-02;
  COFD[1676] = -1.59862997E+01;
  COFD[1677] = 3.67388294E+00;
  COFD[1678] = -2.64990709E-01;
  COFD[1679] = 1.16042706E-02;
  COFD[1680] = -1.50233391E+01;
  COFD[1681] = 3.26660767E+00;
  COFD[1682] = -2.13287177E-01;
  COFD[1683] = 9.41137857E-03;
  COFD[1684] = -2.02642156E+01;
  COFD[1685] = 5.14499744E+00;
  COFD[1686] = -4.45694433E-01;
  COFD[1687] = 1.90318647E-02;
  COFD[1688] = -1.82872262E+01;
  COFD[1689] = 4.40289649E+00;
  COFD[1690] = -3.57289765E-01;
  COFD[1691] = 1.55166804E-02;
  COFD[1692] = -1.59525075E+01;
  COFD[1693] = 3.66023858E+00;
  COFD[1694] = -2.63401043E-01;
  COFD[1695] = 1.15432000E-02;
  COFD[1696] = -1.79116480E+01;
  COFD[1697] = 4.35148286E+00;
  COFD[1698] = -3.50886647E-01;
  COFD[1699] = 1.52498573E-02;
  COFD[1700] = -1.82955206E+01;
  COFD[1701] = 4.40289649E+00;
  COFD[1702] = -3.57289765E-01;
  COFD[1703] = 1.55166804E-02;
  COFD[1704] = -1.81735675E+01;
  COFD[1705] = 4.38391495E+00;
  COFD[1706] = -3.54941287E-01;
  COFD[1707] = 1.54195107E-02;
  COFD[1708] = -2.05045498E+01;
  COFD[1709] = 5.23843909E+00;
  COFD[1710] = -4.55815614E-01;
  COFD[1711] = 1.93898040E-02;
  COFD[1712] = -2.04949292E+01;
  COFD[1713] = 5.19614628E+00;
  COFD[1714] = -4.50889164E-01;
  COFD[1715] = 1.91983328E-02;
  COFD[1716] = -2.04988604E+01;
  COFD[1717] = 5.19614628E+00;
  COFD[1718] = -4.50889164E-01;
  COFD[1719] = 1.91983328E-02;
  COFD[1720] = -1.83296908E+01;
  COFD[1721] = 4.48570999E+00;
  COFD[1722] = -3.67301524E-01;
  COFD[1723] = 1.59204254E-02;
  COFD[1724] = -1.60261598E+01;
  COFD[1725] = 3.73312045E+00;
  COFD[1726] = -2.72579779E-01;
  COFD[1727] = 1.19290272E-02;
  COFD[1728] = -1.83394427E+01;
  COFD[1729] = 4.48570999E+00;
  COFD[1730] = -3.67301524E-01;
  COFD[1731] = 1.59204254E-02;
  COFD[1732] = -2.02969667E+01;
  COFD[1733] = 5.11106992E+00;
  COFD[1734] = -4.42047129E-01;
  COFD[1735] = 1.89042990E-02;
  COFD[1736] = -1.92044433E+01;
  COFD[1737] = 4.71304783E+00;
  COFD[1738] = -3.94942083E-01;
  COFD[1739] = 1.70435959E-02;
  COFD[1740] = -1.91118387E+01;
  COFD[1741] = 4.68715685E+00;
  COFD[1742] = -3.91979493E-01;
  COFD[1743] = 1.69314004E-02;
  COFD[1744] = -2.03524955E+01;
  COFD[1745] = 5.04005588E+00;
  COFD[1746] = -4.33725091E-01;
  COFD[1747] = 1.85786663E-02;
  COFD[1748] = -1.92333972E+01;
  COFD[1749] = 4.67033934E+00;
  COFD[1750] = -3.89971551E-01;
  COFD[1751] = 1.68513441E-02;
  COFD[1752] = -1.92333972E+01;
  COFD[1753] = 4.67033934E+00;
  COFD[1754] = -3.89971551E-01;
  COFD[1755] = 1.68513441E-02;
  COFD[1756] = -1.92379203E+01;
  COFD[1757] = 4.67033934E+00;
  COFD[1758] = -3.89971551E-01;
  COFD[1759] = 1.68513441E-02;
  COFD[1760] = -2.08660712E+01;
  COFD[1761] = 5.17548475E+00;
  COFD[1762] = -4.48496901E-01;
  COFD[1763] = 1.91060174E-02;
  COFD[1764] = -2.10310667E+01;
  COFD[1765] = 5.23485509E+00;
  COFD[1766] = -4.55400366E-01;
  COFD[1767] = 1.93737681E-02;
  COFD[1768] = -2.02268939E+01;
  COFD[1769] = 5.13632099E+00;
  COFD[1770] = -4.44839130E-01;
  COFD[1771] = 1.90058356E-02;
  COFD[1772] = -1.88179325E+01;
  COFD[1773] = 4.79683898E+00;
  COFD[1774] = -4.04829719E-01;
  COFD[1775] = 1.74325475E-02;
  COFD[1776] = -1.92718738E+01;
  COFD[1777] = 5.41172124E+00;
  COFD[1778] = -4.73213887E-01;
  COFD[1779] = 1.99405473E-02;
  COFD[1780] = -1.88378792E+01;
  COFD[1781] = 4.79683898E+00;
  COFD[1782] = -4.04829719E-01;
  COFD[1783] = 1.74325475E-02;
  COFD[1784] = -1.58456453E+01;
  COFD[1785] = 4.02074796E+00;
  COFD[1786] = -3.10018539E-01;
  COFD[1787] = 1.35599559E-02;
  COFD[1788] = -2.04928875E+01;
  COFD[1789] = 5.22397941E+00;
  COFD[1790] = -4.54138181E-01;
  COFD[1791] = 1.93249289E-02;
  COFD[1792] = -1.65295191E+01;
  COFD[1793] = 2.97569077E+00;
  COFD[1794] = -6.75650795E-02;
  COFD[1795] = -1.08649440E-03;
  COFD[1796] = -2.02710239E+01;
  COFD[1797] = 5.14984081E+00;
  COFD[1798] = -4.46093018E-01;
  COFD[1799] = 1.90396647E-02;
  COFD[1800] = -2.02637913E+01;
  COFD[1801] = 5.14984081E+00;
  COFD[1802] = -4.46093018E-01;
  COFD[1803] = 1.90396647E-02;
  COFD[1804] = -2.09376165E+01;
  COFD[1805] = 5.40870099E+00;
  COFD[1806] = -4.73017610E-01;
  COFD[1807] = 1.99399066E-02;
  COFD[1808] = -2.01889105E+01;
  COFD[1809] = 4.53183330E+00;
  COFD[1810] = -3.02186760E-01;
  COFD[1811] = 1.02756490E-02;
  COFD[1812] = -2.09612533E+01;
  COFD[1813] = 5.40870099E+00;
  COFD[1814] = -4.73017610E-01;
  COFD[1815] = 1.99399066E-02;
  COFD[1816] = -2.02642156E+01;
  COFD[1817] = 5.14499744E+00;
  COFD[1818] = -4.45694433E-01;
  COFD[1819] = 1.90318647E-02;
  COFD[1820] = -1.95876943E+01;
  COFD[1821] = 4.27642977E+00;
  COFD[1822] = -2.68040785E-01;
  COFD[1823] = 8.77649540E-03;
  COFD[1824] = -2.21384769E+01;
  COFD[1825] = 5.56656297E+00;
  COFD[1826] = -4.75500048E-01;
  COFD[1827] = 1.93332291E-02;
  COFD[1828] = -2.11381493E+01;
  COFD[1829] = 5.45574448E+00;
  COFD[1830] = -4.77436163E-01;
  COFD[1831] = 2.00644599E-02;
  COFD[1832] = -2.19136804E+01;
  COFD[1833] = 5.58503445E+00;
  COFD[1834] = -4.79552117E-01;
  COFD[1835] = 1.95750393E-02;
  COFD[1836] = -2.21472082E+01;
  COFD[1837] = 5.56656297E+00;
  COFD[1838] = -4.75500048E-01;
  COFD[1839] = 1.93332291E-02;
  COFD[1840] = -2.20420967E+01;
  COFD[1841] = 5.52708328E+00;
  COFD[1842] = -4.68000799E-01;
  COFD[1843] = 1.89131903E-02;
  COFD[1844] = -2.01801599E+01;
  COFD[1845] = 4.53183330E+00;
  COFD[1846] = -3.02186760E-01;
  COFD[1847] = 1.02756490E-02;
  COFD[1848] = -2.04451868E+01;
  COFD[1849] = 4.60682543E+00;
  COFD[1850] = -3.13971634E-01;
  COFD[1851] = 1.08661011E-02;
  COFD[1852] = -2.04493748E+01;
  COFD[1853] = 4.60682543E+00;
  COFD[1854] = -3.13971634E-01;
  COFD[1855] = 1.08661011E-02;
  COFD[1856] = -2.18848092E+01;
  COFD[1857] = 5.51302074E+00;
  COFD[1858] = -4.65263979E-01;
  COFD[1859] = 1.87580679E-02;
  COFD[1860] = -2.09241584E+01;
  COFD[1861] = 5.42316225E+00;
  COFD[1862] = -4.73702801E-01;
  COFD[1863] = 1.99217718E-02;
  COFD[1864] = -2.18950463E+01;
  COFD[1865] = 5.51302074E+00;
  COFD[1866] = -4.65263979E-01;
  COFD[1867] = 1.87580679E-02;
  COFD[1868] = -2.09272370E+01;
  COFD[1869] = 4.82184721E+00;
  COFD[1870] = -3.48128875E-01;
  COFD[1871] = 1.25918978E-02;
  COFD[1872] = -2.19617933E+01;
  COFD[1873] = 5.37170913E+00;
  COFD[1874] = -4.38338667E-01;
  COFD[1875] = 1.72490835E-02;
  COFD[1876] = -2.19873490E+01;
  COFD[1877] = 5.39977369E+00;
  COFD[1878] = -4.43340854E-01;
  COFD[1879] = 1.75199613E-02;
  COFD[1880] = -2.14535680E+01;
  COFD[1881] = 4.95733546E+00;
  COFD[1882] = -3.69505821E-01;
  COFD[1883] = 1.36687047E-02;
  COFD[1884] = -2.21713895E+01;
  COFD[1885] = 5.41196486E+00;
  COFD[1886] = -4.45632422E-01;
  COFD[1887] = 1.76474237E-02;
  COFD[1888] = -2.21713895E+01;
  COFD[1889] = 5.41196486E+00;
  COFD[1890] = -4.45632422E-01;
  COFD[1891] = 1.76474237E-02;
  COFD[1892] = -2.21761978E+01;
  COFD[1893] = 5.41196486E+00;
  COFD[1894] = -4.45632422E-01;
  COFD[1895] = 1.76474237E-02;
  COFD[1896] = -2.03466930E+01;
  COFD[1897] = 4.38969478E+00;
  COFD[1898] = -2.84615292E-01;
  COFD[1899] = 9.55641499E-03;
  COFD[1900] = -2.01613345E+01;
  COFD[1901] = 4.29679581E+00;
  COFD[1902] = -2.69915991E-01;
  COFD[1903] = 8.81736698E-03;
  COFD[1904] = -1.82590880E+01;
  COFD[1905] = 4.39538102E+00;
  COFD[1906] = -3.56367230E-01;
  COFD[1907] = 1.54788461E-02;
  COFD[1908] = -1.72053030E+01;
  COFD[1909] = 4.15807461E+00;
  COFD[1910] = -3.27178539E-01;
  COFD[1911] = 1.42784349E-02;
  COFD[1912] = -1.78631714E+01;
  COFD[1913] = 4.88268692E+00;
  COFD[1914] = -4.14917638E-01;
  COFD[1915] = 1.78274298E-02;
  COFD[1916] = -1.72247908E+01;
  COFD[1917] = 4.15807461E+00;
  COFD[1918] = -3.27178539E-01;
  COFD[1919] = 1.42784349E-02;
  COFD[1920] = -1.39648264E+01;
  COFD[1921] = 3.24966086E+00;
  COFD[1922] = -2.11199992E-01;
  COFD[1923] = 9.32580661E-03;
  COFD[1924] = -1.85756017E+01;
  COFD[1925] = 4.51052425E+00;
  COFD[1926] = -3.70301627E-01;
  COFD[1927] = 1.60416153E-02;
  COFD[1928] = -2.13084280E+01;
  COFD[1929] = 5.27210469E+00;
  COFD[1930] = -4.21419216E-01;
  COFD[1931] = 1.63567178E-02;
  COFD[1932] = -1.85899094E+01;
  COFD[1933] = 4.51052425E+00;
  COFD[1934] = -3.70301627E-01;
  COFD[1935] = 1.60416153E-02;
  COFD[1936] = -1.85829229E+01;
  COFD[1937] = 4.51052425E+00;
  COFD[1938] = -3.70301627E-01;
  COFD[1939] = 1.60416153E-02;
  COFD[1940] = -1.94530234E+01;
  COFD[1941] = 4.87180830E+00;
  COFD[1942] = -4.13582958E-01;
  COFD[1943] = 1.77726094E-02;
  COFD[1944] = -2.19700230E+01;
  COFD[1945] = 5.43750833E+00;
  COFD[1946] = -4.50273329E-01;
  COFD[1947] = 1.79013718E-02;
  COFD[1948] = -1.94761598E+01;
  COFD[1949] = 4.87180830E+00;
  COFD[1950] = -4.13582958E-01;
  COFD[1951] = 1.77726094E-02;
  COFD[1952] = -1.82872262E+01;
  COFD[1953] = 4.40289649E+00;
  COFD[1954] = -3.57289765E-01;
  COFD[1955] = 1.55166804E-02;
  COFD[1956] = -2.21384769E+01;
  COFD[1957] = 5.56656297E+00;
  COFD[1958] = -4.75500048E-01;
  COFD[1959] = 1.93332291E-02;
  COFD[1960] = -2.14737294E+01;
  COFD[1961] = 5.41585806E+00;
  COFD[1962] = -4.73359323E-01;
  COFD[1963] = 1.99310239E-02;
  COFD[1964] = -1.94126574E+01;
  COFD[1965] = 4.84669430E+00;
  COFD[1966] = -4.10571455E-01;
  COFD[1967] = 1.76520543E-02;
  COFD[1968] = -2.11931163E+01;
  COFD[1969] = 5.40060531E+00;
  COFD[1970] = -4.72449699E-01;
  COFD[1971] = 1.99345817E-02;
  COFD[1972] = -2.14821808E+01;
  COFD[1973] = 5.41585806E+00;
  COFD[1974] = -4.73359323E-01;
  COFD[1975] = 1.99310239E-02;
  COFD[1976] = -2.14049498E+01;
  COFD[1977] = 5.41122754E+00;
  COFD[1978] = -4.73185889E-01;
  COFD[1979] = 1.99407905E-02;
  COFD[1980] = -2.19615526E+01;
  COFD[1981] = 5.43750833E+00;
  COFD[1982] = -4.50273329E-01;
  COFD[1983] = 1.79013718E-02;
  COFD[1984] = -2.21229104E+01;
  COFD[1985] = 5.47072190E+00;
  COFD[1986] = -4.56301261E-01;
  COFD[1987] = 1.82313566E-02;
  COFD[1988] = -2.21269333E+01;
  COFD[1989] = 5.47072190E+00;
  COFD[1990] = -4.56301261E-01;
  COFD[1991] = 1.82313566E-02;
  COFD[1992] = -2.15126287E+01;
  COFD[1993] = 5.48426911E+00;
  COFD[1994] = -4.80606512E-01;
  COFD[1995] = 2.01811046E-02;
  COFD[1996] = -1.95737273E+01;
  COFD[1997] = 4.93449043E+00;
  COFD[1998] = -4.21243802E-01;
  COFD[1999] = 1.80859966E-02;
  COFD[2000] = -2.15225554E+01;
  COFD[2001] = 5.48426911E+00;
  COFD[2002] = -4.80606512E-01;
  COFD[2003] = 2.01811046E-02;
  COFD[2004] = -2.22377782E+01;
  COFD[2005] = 5.53139819E+00;
  COFD[2006] = -4.68828555E-01;
  COFD[2007] = 1.89597887E-02;
  COFD[2008] = -2.21694180E+01;
  COFD[2009] = 5.60403905E+00;
  COFD[2010] = -4.91221691E-01;
  COFD[2011] = 2.04473483E-02;
  COFD[2012] = -2.21242875E+01;
  COFD[2013] = 5.60010742E+00;
  COFD[2014] = -4.91597429E-01;
  COFD[2015] = 2.04987718E-02;
  COFD[2016] = -2.25375408E+01;
  COFD[2017] = 5.57713269E+00;
  COFD[2018] = -4.77555529E-01;
  COFD[2019] = 1.94497781E-02;
  COFD[2020] = -2.22600832E+01;
  COFD[2021] = 5.59632316E+00;
  COFD[2022] = -4.91568011E-01;
  COFD[2023] = 2.05156966E-02;
  COFD[2024] = -2.22600832E+01;
  COFD[2025] = 5.59632316E+00;
  COFD[2026] = -4.91568011E-01;
  COFD[2027] = 2.05156966E-02;
  COFD[2028] = -2.22647082E+01;
  COFD[2029] = 5.59632316E+00;
  COFD[2030] = -4.91568011E-01;
  COFD[2031] = 2.05156966E-02;
  COFD[2032] = -2.25524850E+01;
  COFD[2033] = 5.50138987E+00;
  COFD[2034] = -4.62503139E-01;
  COFD[2035] = 1.85883715E-02;
  COFD[2036] = -2.25180169E+01;
  COFD[2037] = 5.47136127E+00;
  COFD[2038] = -4.56417141E-01;
  COFD[2039] = 1.82376994E-02;
  COFD[2040] = -1.59327344E+01;
  COFD[2041] = 3.65620899E+00;
  COFD[2042] = -2.62933804E-01;
  COFD[2043] = 1.15253223E-02;
  COFD[2044] = -1.50270285E+01;
  COFD[2045] = 3.46140064E+00;
  COFD[2046] = -2.38440092E-01;
  COFD[2047] = 1.04960087E-02;
  COFD[2048] = -1.57199190E+01;
  COFD[2049] = 4.19936335E+00;
  COFD[2050] = -3.32311009E-01;
  COFD[2051] = 1.44921003E-02;
  COFD[2052] = -1.50420909E+01;
  COFD[2053] = 3.46140064E+00;
  COFD[2054] = -2.38440092E-01;
  COFD[2055] = 1.04960087E-02;
  COFD[2056] = -1.24693714E+01;
  COFD[2057] = 2.76686648E+00;
  COFD[2058] = -1.49120141E-01;
  COFD[2059] = 6.66220432E-03;
  COFD[2060] = -1.62724429E+01;
  COFD[2061] = 3.79163564E+00;
  COFD[2062] = -2.80257365E-01;
  COFD[2063] = 1.22656902E-02;
  COFD[2064] = -2.14087360E+01;
  COFD[2065] = 5.57281993E+00;
  COFD[2066] = -4.76690860E-01;
  COFD[2067] = 1.94000702E-02;
  COFD[2068] = -1.62824385E+01;
  COFD[2069] = 3.79163564E+00;
  COFD[2070] = -2.80257365E-01;
  COFD[2071] = 1.22656902E-02;
  COFD[2072] = -1.62775683E+01;
  COFD[2073] = 3.79163564E+00;
  COFD[2074] = -2.80257365E-01;
  COFD[2075] = 1.22656902E-02;
  COFD[2076] = -1.72556722E+01;
  COFD[2077] = 4.19029808E+00;
  COFD[2078] = -3.31177076E-01;
  COFD[2079] = 1.44446234E-02;
  COFD[2080] = -2.14082433E+01;
  COFD[2081] = 5.55346617E+00;
  COFD[2082] = -4.87783156E-01;
  COFD[2083] = 2.04210886E-02;
  COFD[2084] = -1.72738845E+01;
  COFD[2085] = 4.19029808E+00;
  COFD[2086] = -3.31177076E-01;
  COFD[2087] = 1.44446234E-02;
  COFD[2088] = -1.59525075E+01;
  COFD[2089] = 3.66023858E+00;
  COFD[2090] = -2.63401043E-01;
  COFD[2091] = 1.15432000E-02;
  COFD[2092] = -2.11381493E+01;
  COFD[2093] = 5.45574448E+00;
  COFD[2094] = -4.77436163E-01;
  COFD[2095] = 2.00644599E-02;
  COFD[2096] = -1.94126574E+01;
  COFD[2097] = 4.84669430E+00;
  COFD[2098] = -4.10571455E-01;
  COFD[2099] = 1.76520543E-02;
  COFD[2100] = -1.72167712E+01;
  COFD[2101] = 4.16886779E+00;
  COFD[2102] = -3.28518156E-01;
  COFD[2103] = 1.43341626E-02;
  COFD[2104] = -1.90692591E+01;
  COFD[2105] = 4.80830699E+00;
  COFD[2106] = -4.06171933E-01;
  COFD[2107] = 1.74848791E-02;
  COFD[2108] = -1.94186548E+01;
  COFD[2109] = 4.84669430E+00;
  COFD[2110] = -4.10571455E-01;
  COFD[2111] = 1.76520543E-02;
  COFD[2112] = -1.92867532E+01;
  COFD[2113] = 4.83375900E+00;
  COFD[2114] = -4.09146560E-01;
  COFD[2115] = 1.76006599E-02;
  COFD[2116] = -2.14022312E+01;
  COFD[2117] = 5.55346617E+00;
  COFD[2118] = -4.87783156E-01;
  COFD[2119] = 2.04210886E-02;
  COFD[2120] = -2.13881929E+01;
  COFD[2121] = 5.52422470E+00;
  COFD[2122] = -4.84872944E-01;
  COFD[2123] = 2.03298213E-02;
  COFD[2124] = -2.13908684E+01;
  COFD[2125] = 5.52422470E+00;
  COFD[2126] = -4.84872944E-01;
  COFD[2127] = 2.03298213E-02;
  COFD[2128] = -1.95154070E+01;
  COFD[2129] = 4.94787350E+00;
  COFD[2130] = -4.22829292E-01;
  COFD[2131] = 1.81487163E-02;
  COFD[2132] = -1.72316133E+01;
  COFD[2133] = 4.24011069E+00;
  COFD[2134] = -3.37339810E-01;
  COFD[2135] = 1.46996679E-02;
  COFD[2136] = -1.95225623E+01;
  COFD[2137] = 4.94787350E+00;
  COFD[2138] = -4.22829292E-01;
  COFD[2139] = 1.81487163E-02;
  COFD[2140] = -2.11341641E+01;
  COFD[2141] = 5.41773516E+00;
  COFD[2142] = -4.73414338E-01;
  COFD[2143] = 1.99258685E-02;
  COFD[2144] = -2.03123537E+01;
  COFD[2145] = 5.14854169E+00;
  COFD[2146] = -4.45984343E-01;
  COFD[2147] = 1.90374217E-02;
  COFD[2148] = -2.02318656E+01;
  COFD[2149] = 5.12963391E+00;
  COFD[2150] = -4.44146826E-01;
  COFD[2151] = 1.89829640E-02;
  COFD[2152] = -2.12758585E+01;
  COFD[2153] = 5.39400772E+00;
  COFD[2154] = -4.72026046E-01;
  COFD[2155] = 1.99336599E-02;
  COFD[2156] = -2.03526104E+01;
  COFD[2157] = 5.11453301E+00;
  COFD[2158] = -4.42447016E-01;
  COFD[2159] = 1.89196698E-02;
  COFD[2160] = -2.03526104E+01;
  COFD[2161] = 5.11453301E+00;
  COFD[2162] = -4.42447016E-01;
  COFD[2163] = 1.89196698E-02;
  COFD[2164] = -2.03557209E+01;
  COFD[2165] = 5.11453301E+00;
  COFD[2166] = -4.42447016E-01;
  COFD[2167] = 1.89196698E-02;
  COFD[2168] = -2.17407702E+01;
  COFD[2169] = 5.50870831E+00;
  COFD[2170] = -4.83264913E-01;
  COFD[2171] = 2.02760942E-02;
  COFD[2172] = -2.18731915E+01;
  COFD[2173] = 5.55171663E+00;
  COFD[2174] = -4.87609507E-01;
  COFD[2175] = 2.04156591E-02;
  COFD[2176] = -1.78815941E+01;
  COFD[2177] = 4.34347890E+00;
  COFD[2178] = -3.49890003E-01;
  COFD[2179] = 1.52083459E-02;
  COFD[2180] = -1.68343316E+01;
  COFD[2181] = 4.11954900E+00;
  COFD[2182] = -3.22470391E-01;
  COFD[2183] = 1.40859564E-02;
  COFD[2184] = -1.74408120E+01;
  COFD[2185] = 4.83580036E+00;
  COFD[2186] = -4.09383573E-01;
  COFD[2187] = 1.76098175E-02;
  COFD[2188] = -1.68535691E+01;
  COFD[2189] = 4.11954900E+00;
  COFD[2190] = -3.22470391E-01;
  COFD[2191] = 1.40859564E-02;
  COFD[2192] = -1.36336524E+01;
  COFD[2193] = 3.22088176E+00;
  COFD[2194] = -2.07623790E-01;
  COFD[2195] = 9.17771542E-03;
  COFD[2196] = -1.82145292E+01;
  COFD[2197] = 4.46848269E+00;
  COFD[2198] = -3.65269718E-01;
  COFD[2199] = 1.58407652E-02;
  COFD[2200] = -2.11309141E+01;
  COFD[2201] = 5.32644193E+00;
  COFD[2202] = -4.30581064E-01;
  COFD[2203] = 1.68379725E-02;
  COFD[2204] = -1.82285687E+01;
  COFD[2205] = 4.46848269E+00;
  COFD[2206] = -3.65269718E-01;
  COFD[2207] = 1.58407652E-02;
  COFD[2208] = -1.82217141E+01;
  COFD[2209] = 4.46848269E+00;
  COFD[2210] = -3.65269718E-01;
  COFD[2211] = 1.58407652E-02;
  COFD[2212] = -1.90996777E+01;
  COFD[2213] = 4.82869066E+00;
  COFD[2214] = -4.08564514E-01;
  COFD[2215] = 1.75784675E-02;
  COFD[2216] = -2.17855106E+01;
  COFD[2217] = 5.47519298E+00;
  COFD[2218] = -4.57113040E-01;
  COFD[2219] = 1.82758312E-02;
  COFD[2220] = -1.91225404E+01;
  COFD[2221] = 4.82869066E+00;
  COFD[2222] = -4.08564514E-01;
  COFD[2223] = 1.75784675E-02;
  COFD[2224] = -1.79116480E+01;
  COFD[2225] = 4.35148286E+00;
  COFD[2226] = -3.50886647E-01;
  COFD[2227] = 1.52498573E-02;
  COFD[2228] = -2.19136804E+01;
  COFD[2229] = 5.58503445E+00;
  COFD[2230] = -4.79552117E-01;
  COFD[2231] = 1.95750393E-02;
  COFD[2232] = -2.11931163E+01;
  COFD[2233] = 5.40060531E+00;
  COFD[2234] = -4.72449699E-01;
  COFD[2235] = 1.99345817E-02;
  COFD[2236] = -1.90692591E+01;
  COFD[2237] = 4.80830699E+00;
  COFD[2238] = -4.06171933E-01;
  COFD[2239] = 1.74848791E-02;
  COFD[2240] = -2.08820879E+01;
  COFD[2241] = 5.38250415E+00;
  COFD[2242] = -4.71144140E-01;
  COFD[2243] = 1.99199779E-02;
  COFD[2244] = -2.12014174E+01;
  COFD[2245] = 5.40060531E+00;
  COFD[2246] = -4.72449699E-01;
  COFD[2247] = 1.99345817E-02;
  COFD[2248] = -2.11031095E+01;
  COFD[2249] = 5.39439999E+00;
  COFD[2250] = -4.72050184E-01;
  COFD[2251] = 1.99336257E-02;
  COFD[2252] = -2.17771908E+01;
  COFD[2253] = 5.47519298E+00;
  COFD[2254] = -4.57113040E-01;
  COFD[2255] = 1.82758312E-02;
  COFD[2256] = -2.19162320E+01;
  COFD[2257] = 5.49906960E+00;
  COFD[2258] = -4.61793001E-01;
  COFD[2259] = 1.85415189E-02;
  COFD[2260] = -2.19201671E+01;
  COFD[2261] = 5.49906960E+00;
  COFD[2262] = -4.61793001E-01;
  COFD[2263] = 1.85415189E-02;
  COFD[2264] = -2.11427719E+01;
  COFD[2265] = 5.43893233E+00;
  COFD[2266] = -4.75546039E-01;
  COFD[2267] = 1.99938690E-02;
  COFD[2268] = -1.91366985E+01;
  COFD[2269] = 4.87703209E+00;
  COFD[2270] = -4.14222202E-01;
  COFD[2271] = 1.77987878E-02;
  COFD[2272] = -2.11525312E+01;
  COFD[2273] = 5.43893233E+00;
  COFD[2274] = -4.75546039E-01;
  COFD[2275] = 1.99938690E-02;
  COFD[2276] = -2.20445378E+01;
  COFD[2277] = 5.56049839E+00;
  COFD[2278] = -4.74367872E-01;
  COFD[2279] = 1.92702787E-02;
  COFD[2280] = -2.19032541E+01;
  COFD[2281] = 5.59794138E+00;
  COFD[2282] = -4.91684532E-01;
  COFD[2283] = 2.05170953E-02;
  COFD[2284] = -2.18222678E+01;
  COFD[2285] = 5.57940140E+00;
  COFD[2286] = -4.89964112E-01;
  COFD[2287] = 2.04689539E-02;
  COFD[2288] = -2.23144023E+01;
  COFD[2289] = 5.58484440E+00;
  COFD[2290] = -4.80068319E-01;
  COFD[2291] = 1.96187346E-02;
  COFD[2292] = -2.19617242E+01;
  COFD[2293] = 5.57026255E+00;
  COFD[2294] = -4.89178491E-01;
  COFD[2295] = 2.04505218E-02;
  COFD[2296] = -2.19617242E+01;
  COFD[2297] = 5.57026255E+00;
  COFD[2298] = -4.89178491E-01;
  COFD[2299] = 2.04505218E-02;
  COFD[2300] = -2.19662516E+01;
  COFD[2301] = 5.57026255E+00;
  COFD[2302] = -4.89178491E-01;
  COFD[2303] = 2.04505218E-02;
  COFD[2304] = -2.23572754E+01;
  COFD[2305] = 5.52017185E+00;
  COFD[2306] = -4.66659932E-01;
  COFD[2307] = 1.88373100E-02;
  COFD[2308] = -2.23434209E+01;
  COFD[2309] = 5.49927389E+00;
  COFD[2310] = -4.61845436E-01;
  COFD[2311] = 1.85448066E-02;
  COFD[2312] = -1.82673830E+01;
  COFD[2313] = 4.39538102E+00;
  COFD[2314] = -3.56367230E-01;
  COFD[2315] = 1.54788461E-02;
  COFD[2316] = -1.72112897E+01;
  COFD[2317] = 4.15807461E+00;
  COFD[2318] = -3.27178539E-01;
  COFD[2319] = 1.42784349E-02;
  COFD[2320] = -1.78637336E+01;
  COFD[2321] = 4.88268692E+00;
  COFD[2322] = -4.14917638E-01;
  COFD[2323] = 1.78274298E-02;
  COFD[2324] = -1.72310169E+01;
  COFD[2325] = 4.15807461E+00;
  COFD[2326] = -3.27178539E-01;
  COFD[2327] = 1.42784349E-02;
  COFD[2328] = -1.39659148E+01;
  COFD[2329] = 3.24966086E+00;
  COFD[2330] = -2.11199992E-01;
  COFD[2331] = 9.32580661E-03;
  COFD[2332] = -1.85844631E+01;
  COFD[2333] = 4.51052425E+00;
  COFD[2334] = -3.70301627E-01;
  COFD[2335] = 1.60416153E-02;
  COFD[2336] = -2.13148834E+01;
  COFD[2337] = 5.27210469E+00;
  COFD[2338] = -4.21419216E-01;
  COFD[2339] = 1.63567178E-02;
  COFD[2340] = -1.85990305E+01;
  COFD[2341] = 4.51052425E+00;
  COFD[2342] = -3.70301627E-01;
  COFD[2343] = 1.60416153E-02;
  COFD[2344] = -1.85919162E+01;
  COFD[2345] = 4.51052425E+00;
  COFD[2346] = -3.70301627E-01;
  COFD[2347] = 1.60416153E-02;
  COFD[2348] = -1.94585097E+01;
  COFD[2349] = 4.87180830E+00;
  COFD[2350] = -4.13582958E-01;
  COFD[2351] = 1.77726094E-02;
  COFD[2352] = -2.19786136E+01;
  COFD[2353] = 5.43750833E+00;
  COFD[2354] = -4.50273329E-01;
  COFD[2355] = 1.79013718E-02;
  COFD[2356] = -1.94819074E+01;
  COFD[2357] = 4.87180830E+00;
  COFD[2358] = -4.13582958E-01;
  COFD[2359] = 1.77726094E-02;
  COFD[2360] = -1.82955206E+01;
  COFD[2361] = 4.40289649E+00;
  COFD[2362] = -3.57289765E-01;
  COFD[2363] = 1.55166804E-02;
  COFD[2364] = -2.21472082E+01;
  COFD[2365] = 5.56656297E+00;
  COFD[2366] = -4.75500048E-01;
  COFD[2367] = 1.93332291E-02;
  COFD[2368] = -2.14821808E+01;
  COFD[2369] = 5.41585806E+00;
  COFD[2370] = -4.73359323E-01;
  COFD[2371] = 1.99310239E-02;
  COFD[2372] = -1.94186548E+01;
  COFD[2373] = 4.84669430E+00;
  COFD[2374] = -4.10571455E-01;
  COFD[2375] = 1.76520543E-02;
  COFD[2376] = -2.12014174E+01;
  COFD[2377] = 5.40060531E+00;
  COFD[2378] = -4.72449699E-01;
  COFD[2379] = 1.99345817E-02;
  COFD[2380] = -2.14907776E+01;
  COFD[2381] = 5.41585806E+00;
  COFD[2382] = -4.73359323E-01;
  COFD[2383] = 1.99310239E-02;
  COFD[2384] = -2.14151478E+01;
  COFD[2385] = 5.41122754E+00;
  COFD[2386] = -4.73185889E-01;
  COFD[2387] = 1.99407905E-02;
  COFD[2388] = -2.19699976E+01;
  COFD[2389] = 5.43750833E+00;
  COFD[2390] = -4.50273329E-01;
  COFD[2391] = 1.79013718E-02;
  COFD[2392] = -2.21333788E+01;
  COFD[2393] = 5.47072190E+00;
  COFD[2394] = -4.56301261E-01;
  COFD[2395] = 1.82313566E-02;
  COFD[2396] = -2.21374872E+01;
  COFD[2397] = 5.47072190E+00;
  COFD[2398] = -4.56301261E-01;
  COFD[2399] = 1.82313566E-02;
  COFD[2400] = -2.15206127E+01;
  COFD[2401] = 5.48426911E+00;
  COFD[2402] = -4.80606512E-01;
  COFD[2403] = 2.01811046E-02;
  COFD[2404] = -1.95836362E+01;
  COFD[2405] = 4.93449043E+00;
  COFD[2406] = -4.21243802E-01;
  COFD[2407] = 1.80859966E-02;
  COFD[2408] = -2.15307008E+01;
  COFD[2409] = 5.48426911E+00;
  COFD[2410] = -4.80606512E-01;
  COFD[2411] = 2.01811046E-02;
  COFD[2412] = -2.22478853E+01;
  COFD[2413] = 5.53139819E+00;
  COFD[2414] = -4.68828555E-01;
  COFD[2415] = 1.89597887E-02;
  COFD[2416] = -2.21793313E+01;
  COFD[2417] = 5.60403905E+00;
  COFD[2418] = -4.91221691E-01;
  COFD[2419] = 2.04473483E-02;
  COFD[2420] = -2.21343012E+01;
  COFD[2421] = 5.60010742E+00;
  COFD[2422] = -4.91597429E-01;
  COFD[2423] = 2.04987718E-02;
  COFD[2424] = -2.25487717E+01;
  COFD[2425] = 5.57713269E+00;
  COFD[2426] = -4.77555529E-01;
  COFD[2427] = 1.94497781E-02;
  COFD[2428] = -2.22701944E+01;
  COFD[2429] = 5.59632316E+00;
  COFD[2430] = -4.91568011E-01;
  COFD[2431] = 2.05156966E-02;
  COFD[2432] = -2.22701944E+01;
  COFD[2433] = 5.59632316E+00;
  COFD[2434] = -4.91568011E-01;
  COFD[2435] = 2.05156966E-02;
  COFD[2436] = -2.22749144E+01;
  COFD[2437] = 5.59632316E+00;
  COFD[2438] = -4.91568011E-01;
  COFD[2439] = 2.05156966E-02;
  COFD[2440] = -2.25647173E+01;
  COFD[2441] = 5.50138987E+00;
  COFD[2442] = -4.62503139E-01;
  COFD[2443] = 1.85883715E-02;
  COFD[2444] = -2.25302492E+01;
  COFD[2445] = 5.47136127E+00;
  COFD[2446] = -4.56417141E-01;
  COFD[2447] = 1.82376994E-02;
  COFD[2448] = -1.81432499E+01;
  COFD[2449] = 4.37565431E+00;
  COFD[2450] = -3.53906025E-01;
  COFD[2451] = 1.53760786E-02;
  COFD[2452] = -1.70534750E+01;
  COFD[2453] = 4.14240922E+00;
  COFD[2454] = -3.25239774E-01;
  COFD[2455] = 1.41980687E-02;
  COFD[2456] = -1.76147183E+01;
  COFD[2457] = 4.86049500E+00;
  COFD[2458] = -4.12200578E-01;
  COFD[2459] = 1.77160971E-02;
  COFD[2460] = -1.70756953E+01;
  COFD[2461] = 4.14240922E+00;
  COFD[2462] = -3.25239774E-01;
  COFD[2463] = 1.41980687E-02;
  COFD[2464] = -1.37794466E+01;
  COFD[2465] = 3.23973858E+00;
  COFD[2466] = -2.09989036E-01;
  COFD[2467] = 9.27667906E-03;
  COFD[2468] = -1.84688303E+01;
  COFD[2469] = 4.49330851E+00;
  COFD[2470] = -3.68208715E-01;
  COFD[2471] = 1.59565402E-02;
  COFD[2472] = -2.07653629E+01;
  COFD[2473] = 5.01091988E+00;
  COFD[2474] = -3.77985581E-01;
  COFD[2475] = 1.40968617E-02;
  COFD[2476] = -1.84862906E+01;
  COFD[2477] = 4.49330851E+00;
  COFD[2478] = -3.68208715E-01;
  COFD[2479] = 1.59565402E-02;
  COFD[2480] = -1.84777509E+01;
  COFD[2481] = 4.49330851E+00;
  COFD[2482] = -3.68208715E-01;
  COFD[2483] = 1.59565402E-02;
  COFD[2484] = -1.93015519E+01;
  COFD[2485] = 4.85015581E+00;
  COFD[2486] = -4.10945109E-01;
  COFD[2487] = 1.76651398E-02;
  COFD[2488] = -2.19317665E+01;
  COFD[2489] = 5.45216133E+00;
  COFD[2490] = -4.52916925E-01;
  COFD[2491] = 1.80456400E-02;
  COFD[2492] = -1.93276406E+01;
  COFD[2493] = 4.85015581E+00;
  COFD[2494] = -4.10945109E-01;
  COFD[2495] = 1.76651398E-02;
  COFD[2496] = -1.81735675E+01;
  COFD[2497] = 4.38391495E+00;
  COFD[2498] = -3.54941287E-01;
  COFD[2499] = 1.54195107E-02;
  COFD[2500] = -2.20420967E+01;
  COFD[2501] = 5.52708328E+00;
  COFD[2502] = -4.68000799E-01;
  COFD[2503] = 1.89131903E-02;
  COFD[2504] = -2.14049498E+01;
  COFD[2505] = 5.41122754E+00;
  COFD[2506] = -4.73185889E-01;
  COFD[2507] = 1.99407905E-02;
  COFD[2508] = -1.92867532E+01;
  COFD[2509] = 4.83375900E+00;
  COFD[2510] = -4.09146560E-01;
  COFD[2511] = 1.76006599E-02;
  COFD[2512] = -2.11031095E+01;
  COFD[2513] = 5.39439999E+00;
  COFD[2514] = -4.72050184E-01;
  COFD[2515] = 1.99336257E-02;
  COFD[2516] = -2.14151478E+01;
  COFD[2517] = 5.41122754E+00;
  COFD[2518] = -4.73185889E-01;
  COFD[2519] = 1.99407905E-02;
  COFD[2520] = -2.13425604E+01;
  COFD[2521] = 5.40460130E+00;
  COFD[2522] = -4.72718910E-01;
  COFD[2523] = 1.99362717E-02;
  COFD[2524] = -2.19215472E+01;
  COFD[2525] = 5.45216133E+00;
  COFD[2526] = -4.52916925E-01;
  COFD[2527] = 1.80456400E-02;
  COFD[2528] = -2.21082949E+01;
  COFD[2529] = 5.48540187E+00;
  COFD[2530] = -4.58962148E-01;
  COFD[2531] = 1.83770355E-02;
  COFD[2532] = -2.21133921E+01;
  COFD[2533] = 5.48540187E+00;
  COFD[2534] = -4.58962148E-01;
  COFD[2535] = 1.83770355E-02;
  COFD[2536] = -2.13961359E+01;
  COFD[2537] = 5.46685775E+00;
  COFD[2538] = -4.78665416E-01;
  COFD[2539] = 2.01093915E-02;
  COFD[2540] = -1.94485902E+01;
  COFD[2541] = 4.91446566E+00;
  COFD[2542] = -4.18837152E-01;
  COFD[2543] = 1.79893537E-02;
  COFD[2544] = -2.14079831E+01;
  COFD[2545] = 5.46685775E+00;
  COFD[2546] = -4.78665416E-01;
  COFD[2547] = 2.01093915E-02;
  COFD[2548] = -2.22176875E+01;
  COFD[2549] = 5.54251230E+00;
  COFD[2550] = -4.70946314E-01;
  COFD[2551] = 1.90785869E-02;
  COFD[2552] = -2.21216771E+01;
  COFD[2553] = 5.60203389E+00;
  COFD[2554] = -4.91444416E-01;
  COFD[2555] = 2.04761886E-02;
  COFD[2556] = -2.20725828E+01;
  COFD[2557] = 5.59642965E+00;
  COFD[2558] = -4.91577716E-01;
  COFD[2559] = 2.05159582E-02;
  COFD[2560] = -2.25320678E+01;
  COFD[2561] = 5.58240011E+00;
  COFD[2562] = -4.78844918E-01;
  COFD[2563] = 1.95298191E-02;
  COFD[2564] = -2.22051951E+01;
  COFD[2565] = 5.58604166E+00;
  COFD[2566] = -4.90602184E-01;
  COFD[2567] = 2.04880352E-02;
  COFD[2568] = -2.22051951E+01;
  COFD[2569] = 5.58604166E+00;
  COFD[2570] = -4.90602184E-01;
  COFD[2571] = 2.04880352E-02;
  COFD[2572] = -2.22110038E+01;
  COFD[2573] = 5.58604166E+00;
  COFD[2574] = -4.90602184E-01;
  COFD[2575] = 2.04880352E-02;
  COFD[2576] = -2.25695566E+01;
  COFD[2577] = 5.49903770E+00;
  COFD[2578] = -4.61784832E-01;
  COFD[2579] = 1.85410071E-02;
  COFD[2580] = -2.25168001E+01;
  COFD[2581] = 5.46125556E+00;
  COFD[2582] = -4.54580945E-01;
  COFD[2583] = 1.81370926E-02;
  COFD[2584] = -2.04750606E+01;
  COFD[2585] = 5.23112374E+00;
  COFD[2586] = -4.54967682E-01;
  COFD[2587] = 1.93570423E-02;
  COFD[2588] = -1.94313018E+01;
  COFD[2589] = 5.02567894E+00;
  COFD[2590] = -4.32045169E-01;
  COFD[2591] = 1.85132214E-02;
  COFD[2592] = -1.97544605E+01;
  COFD[2593] = 5.56931926E+00;
  COFD[2594] = -4.89105511E-01;
  COFD[2595] = 2.04493129E-02;
  COFD[2596] = -1.94507789E+01;
  COFD[2597] = 5.02567894E+00;
  COFD[2598] = -4.32045169E-01;
  COFD[2599] = 1.85132214E-02;
  COFD[2600] = -1.60517517E+01;
  COFD[2601] = 4.11188603E+00;
  COFD[2602] = -3.21540884E-01;
  COFD[2603] = 1.40482564E-02;
  COFD[2604] = -2.08204356E+01;
  COFD[2605] = 5.35267674E+00;
  COFD[2606] = -4.69010505E-01;
  COFD[2607] = 1.98979152E-02;
  COFD[2608] = -1.77498465E+01;
  COFD[2609] = 3.57475686E+00;
  COFD[2610] = -1.56396297E-01;
  COFD[2611] = 3.12157721E-03;
  COFD[2612] = -2.08347318E+01;
  COFD[2613] = 5.35267674E+00;
  COFD[2614] = -4.69010505E-01;
  COFD[2615] = 1.98979152E-02;
  COFD[2616] = -2.08277510E+01;
  COFD[2617] = 5.35267674E+00;
  COFD[2618] = -4.69010505E-01;
  COFD[2619] = 1.98979152E-02;
  COFD[2620] = -2.14160667E+01;
  COFD[2621] = 5.56531152E+00;
  COFD[2622] = -4.88789821E-01;
  COFD[2623] = 2.04437116E-02;
  COFD[2624] = -1.90413276E+01;
  COFD[2625] = 3.99221757E+00;
  COFD[2626] = -2.19854880E-01;
  COFD[2627] = 6.22736279E-03;
  COFD[2628] = -2.14391914E+01;
  COFD[2629] = 5.56531152E+00;
  COFD[2630] = -4.88789821E-01;
  COFD[2631] = 2.04437116E-02;
  COFD[2632] = -2.05045498E+01;
  COFD[2633] = 5.23843909E+00;
  COFD[2634] = -4.55815614E-01;
  COFD[2635] = 1.93898040E-02;
  COFD[2636] = -2.01801599E+01;
  COFD[2637] = 4.53183330E+00;
  COFD[2638] = -3.02186760E-01;
  COFD[2639] = 1.02756490E-02;
  COFD[2640] = -2.19615526E+01;
  COFD[2641] = 5.43750833E+00;
  COFD[2642] = -4.50273329E-01;
  COFD[2643] = 1.79013718E-02;
  COFD[2644] = -2.14022312E+01;
  COFD[2645] = 5.55346617E+00;
  COFD[2646] = -4.87783156E-01;
  COFD[2647] = 2.04210886E-02;
  COFD[2648] = -2.17771908E+01;
  COFD[2649] = 5.47519298E+00;
  COFD[2650] = -4.57113040E-01;
  COFD[2651] = 1.82758312E-02;
  COFD[2652] = -2.19699976E+01;
  COFD[2653] = 5.43750833E+00;
  COFD[2654] = -4.50273329E-01;
  COFD[2655] = 1.79013718E-02;
  COFD[2656] = -2.19215472E+01;
  COFD[2657] = 5.45216133E+00;
  COFD[2658] = -4.52916925E-01;
  COFD[2659] = 1.80456400E-02;
  COFD[2660] = -1.90328637E+01;
  COFD[2661] = 3.99221757E+00;
  COFD[2662] = -2.19854880E-01;
  COFD[2663] = 6.22736279E-03;
  COFD[2664] = -1.93946871E+01;
  COFD[2665] = 4.10954793E+00;
  COFD[2666] = -2.37523329E-01;
  COFD[2667] = 7.08858141E-03;
  COFD[2668] = -1.93987062E+01;
  COFD[2669] = 4.10954793E+00;
  COFD[2670] = -2.37523329E-01;
  COFD[2671] = 7.08858141E-03;
  COFD[2672] = -2.16718195E+01;
  COFD[2673] = 5.36811769E+00;
  COFD[2674] = -4.37727086E-01;
  COFD[2675] = 1.72167686E-02;
  COFD[2676] = -2.14204113E+01;
  COFD[2677] = 5.59268435E+00;
  COFD[2678] = -4.91232974E-01;
  COFD[2679] = 2.05064746E-02;
  COFD[2680] = -2.16817390E+01;
  COFD[2681] = 5.36811769E+00;
  COFD[2682] = -4.37727086E-01;
  COFD[2683] = 1.72167686E-02;
  COFD[2684] = -2.00963017E+01;
  COFD[2685] = 4.41511629E+00;
  COFD[2686] = -2.84086963E-01;
  COFD[2687] = 9.37586971E-03;
  COFD[2688] = -2.15159177E+01;
  COFD[2689] = 5.12799307E+00;
  COFD[2690] = -3.96938732E-01;
  COFD[2691] = 1.50673195E-02;
  COFD[2692] = -2.15702394E+01;
  COFD[2693] = 5.16868516E+00;
  COFD[2694] = -4.03721581E-01;
  COFD[2695] = 1.54206640E-02;
  COFD[2696] = -2.06640437E+01;
  COFD[2697] = 4.56779427E+00;
  COFD[2698] = -3.07785839E-01;
  COFD[2699] = 1.05545767E-02;
  COFD[2700] = -2.17825494E+01;
  COFD[2701] = 5.19232842E+00;
  COFD[2702] = -4.07643284E-01;
  COFD[2703] = 1.56246434E-02;
  COFD[2704] = -2.17825494E+01;
  COFD[2705] = 5.19232842E+00;
  COFD[2706] = -4.07643284E-01;
  COFD[2707] = 1.56246434E-02;
  COFD[2708] = -2.17871702E+01;
  COFD[2709] = 5.19232842E+00;
  COFD[2710] = -4.07643284E-01;
  COFD[2711] = 1.56246434E-02;
  COFD[2712] = -2.01511043E+01;
  COFD[2713] = 4.26535185E+00;
  COFD[2714] = -2.61127236E-01;
  COFD[2715] = 8.24369619E-03;
  COFD[2716] = -1.98237139E+01;
  COFD[2717] = 4.11158627E+00;
  COFD[2718] = -2.37831519E-01;
  COFD[2719] = 7.10363413E-03;
  COFD[2720] = -2.04649116E+01;
  COFD[2721] = 5.18856872E+00;
  COFD[2722] = -4.50001829E-01;
  COFD[2723] = 1.91636142E-02;
  COFD[2724] = -1.93925565E+01;
  COFD[2725] = 4.98286777E+00;
  COFD[2726] = -4.26970814E-01;
  COFD[2727] = 1.83122917E-02;
  COFD[2728] = -1.96915102E+01;
  COFD[2729] = 5.54637286E+00;
  COFD[2730] = -4.87070324E-01;
  COFD[2731] = 2.03983467E-02;
  COFD[2732] = -1.94151732E+01;
  COFD[2733] = 4.98286777E+00;
  COFD[2734] = -4.26970814E-01;
  COFD[2735] = 1.83122917E-02;
  COFD[2736] = -1.59632633E+01;
  COFD[2737] = 4.07051484E+00;
  COFD[2738] = -3.16303109E-01;
  COFD[2739] = 1.38259377E-02;
  COFD[2740] = -2.08463112E+01;
  COFD[2741] = 5.32244593E+00;
  COFD[2742] = -4.65829403E-01;
  COFD[2743] = 1.97895274E-02;
  COFD[2744] = -1.80862788E+01;
  COFD[2745] = 3.69199168E+00;
  COFD[2746] = -1.74005516E-01;
  COFD[2747] = 3.97694372E-03;
  COFD[2748] = -2.08642660E+01;
  COFD[2749] = 5.32244593E+00;
  COFD[2750] = -4.65829403E-01;
  COFD[2751] = 1.97895274E-02;
  COFD[2752] = -2.08554822E+01;
  COFD[2753] = 5.32244593E+00;
  COFD[2754] = -4.65829403E-01;
  COFD[2755] = 1.97895274E-02;
  COFD[2756] = -2.14048951E+01;
  COFD[2757] = 5.54007827E+00;
  COFD[2758] = -4.86434511E-01;
  COFD[2759] = 2.03779006E-02;
  COFD[2760] = -1.94051772E+01;
  COFD[2761] = 4.10954793E+00;
  COFD[2762] = -2.37523329E-01;
  COFD[2763] = 7.08858141E-03;
  COFD[2764] = -2.14314067E+01;
  COFD[2765] = 5.54007827E+00;
  COFD[2766] = -4.86434511E-01;
  COFD[2767] = 2.03779006E-02;
  COFD[2768] = -2.04949292E+01;
  COFD[2769] = 5.19614628E+00;
  COFD[2770] = -4.50889164E-01;
  COFD[2771] = 1.91983328E-02;
  COFD[2772] = -2.04451868E+01;
  COFD[2773] = 4.60682543E+00;
  COFD[2774] = -3.13971634E-01;
  COFD[2775] = 1.08661011E-02;
  COFD[2776] = -2.21229104E+01;
  COFD[2777] = 5.47072190E+00;
  COFD[2778] = -4.56301261E-01;
  COFD[2779] = 1.82313566E-02;
  COFD[2780] = -2.13881929E+01;
  COFD[2781] = 5.52422470E+00;
  COFD[2782] = -4.84872944E-01;
  COFD[2783] = 2.03298213E-02;
  COFD[2784] = -2.19162320E+01;
  COFD[2785] = 5.49906960E+00;
  COFD[2786] = -4.61793001E-01;
  COFD[2787] = 1.85415189E-02;
  COFD[2788] = -2.21333788E+01;
  COFD[2789] = 5.47072190E+00;
  COFD[2790] = -4.56301261E-01;
  COFD[2791] = 1.82313566E-02;
  COFD[2792] = -2.21082949E+01;
  COFD[2793] = 5.48540187E+00;
  COFD[2794] = -4.58962148E-01;
  COFD[2795] = 1.83770355E-02;
  COFD[2796] = -1.93946871E+01;
  COFD[2797] = 4.10954793E+00;
  COFD[2798] = -2.37523329E-01;
  COFD[2799] = 7.08858141E-03;
  COFD[2800] = -1.97704101E+01;
  COFD[2801] = 4.22062499E+00;
  COFD[2802] = -2.54326872E-01;
  COFD[2803] = 7.91017784E-03;
  COFD[2804] = -1.97756833E+01;
  COFD[2805] = 4.22062499E+00;
  COFD[2806] = -2.54326872E-01;
  COFD[2807] = 7.91017784E-03;
  COFD[2808] = -2.18318230E+01;
  COFD[2809] = 5.40298848E+00;
  COFD[2810] = -4.43954594E-01;
  COFD[2811] = 1.75542998E-02;
  COFD[2812] = -2.14782205E+01;
  COFD[2813] = 5.56978987E+00;
  COFD[2814] = -4.89141980E-01;
  COFD[2815] = 2.04499210E-02;
  COFD[2816] = -2.18439638E+01;
  COFD[2817] = 5.40298848E+00;
  COFD[2818] = -4.43954594E-01;
  COFD[2819] = 1.75542998E-02;
  COFD[2820] = -2.04096115E+01;
  COFD[2821] = 4.50250781E+00;
  COFD[2822] = -2.97622106E-01;
  COFD[2823] = 1.00481473E-02;
  COFD[2824] = -2.17407371E+01;
  COFD[2825] = 5.17945041E+00;
  COFD[2826] = -4.05514689E-01;
  COFD[2827] = 1.55141412E-02;
  COFD[2828] = -2.17934534E+01;
  COFD[2829] = 5.21869603E+00;
  COFD[2830] = -4.12084772E-01;
  COFD[2831] = 1.58573035E-02;
  COFD[2832] = -2.09501952E+01;
  COFD[2833] = 4.63716925E+00;
  COFD[2834] = -3.18815070E-01;
  COFD[2835] = 1.11115446E-02;
  COFD[2836] = -2.19919420E+01;
  COFD[2837] = 5.23595129E+00;
  COFD[2838] = -4.15079064E-01;
  COFD[2839] = 1.60168286E-02;
  COFD[2840] = -2.19919420E+01;
  COFD[2841] = 5.23595129E+00;
  COFD[2842] = -4.15079064E-01;
  COFD[2843] = 1.60168286E-02;
  COFD[2844] = -2.19979426E+01;
  COFD[2845] = 5.23595129E+00;
  COFD[2846] = -4.15079064E-01;
  COFD[2847] = 1.60168286E-02;
  COFD[2848] = -2.05127936E+01;
  COFD[2849] = 4.35981364E+00;
  COFD[2850] = -2.75585363E-01;
  COFD[2851] = 8.95565009E-03;
  COFD[2852] = -2.02246048E+01;
  COFD[2853] = 4.22278378E+00;
  COFD[2854] = -2.54653500E-01;
  COFD[2855] = 7.92616085E-03;
  COFD[2856] = -2.04688432E+01;
  COFD[2857] = 5.18856872E+00;
  COFD[2858] = -4.50001829E-01;
  COFD[2859] = 1.91636142E-02;
  COFD[2860] = -1.93952265E+01;
  COFD[2861] = 4.98286777E+00;
  COFD[2862] = -4.26970814E-01;
  COFD[2863] = 1.83122917E-02;
  COFD[2864] = -1.96917304E+01;
  COFD[2865] = 5.54637286E+00;
  COFD[2866] = -4.87070324E-01;
  COFD[2867] = 2.03983467E-02;
  COFD[2868] = -1.94179671E+01;
  COFD[2869] = 4.98286777E+00;
  COFD[2870] = -4.26970814E-01;
  COFD[2871] = 1.83122917E-02;
  COFD[2872] = -1.59636946E+01;
  COFD[2873] = 4.07051484E+00;
  COFD[2874] = -3.16303109E-01;
  COFD[2875] = 1.38259377E-02;
  COFD[2876] = -2.08505769E+01;
  COFD[2877] = 5.32244593E+00;
  COFD[2878] = -4.65829403E-01;
  COFD[2879] = 1.97895274E-02;
  COFD[2880] = -1.80891927E+01;
  COFD[2881] = 3.69199168E+00;
  COFD[2882] = -1.74005516E-01;
  COFD[2883] = 3.97694372E-03;
  COFD[2884] = -2.08686884E+01;
  COFD[2885] = 5.32244593E+00;
  COFD[2886] = -4.65829403E-01;
  COFD[2887] = 1.97895274E-02;
  COFD[2888] = -2.08598273E+01;
  COFD[2889] = 5.32244593E+00;
  COFD[2890] = -4.65829403E-01;
  COFD[2891] = 1.97895274E-02;
  COFD[2892] = -2.14073109E+01;
  COFD[2893] = 5.54007827E+00;
  COFD[2894] = -4.86434511E-01;
  COFD[2895] = 2.03779006E-02;
  COFD[2896] = -1.94092818E+01;
  COFD[2897] = 4.10954793E+00;
  COFD[2898] = -2.37523329E-01;
  COFD[2899] = 7.08858141E-03;
  COFD[2900] = -2.14339544E+01;
  COFD[2901] = 5.54007827E+00;
  COFD[2902] = -4.86434511E-01;
  COFD[2903] = 2.03779006E-02;
  COFD[2904] = -2.04988604E+01;
  COFD[2905] = 5.19614628E+00;
  COFD[2906] = -4.50889164E-01;
  COFD[2907] = 1.91983328E-02;
  COFD[2908] = -2.04493748E+01;
  COFD[2909] = 4.60682543E+00;
  COFD[2910] = -3.13971634E-01;
  COFD[2911] = 1.08661011E-02;
  COFD[2912] = -2.21269333E+01;
  COFD[2913] = 5.47072190E+00;
  COFD[2914] = -4.56301261E-01;
  COFD[2915] = 1.82313566E-02;
  COFD[2916] = -2.13908684E+01;
  COFD[2917] = 5.52422470E+00;
  COFD[2918] = -4.84872944E-01;
  COFD[2919] = 2.03298213E-02;
  COFD[2920] = -2.19201671E+01;
  COFD[2921] = 5.49906960E+00;
  COFD[2922] = -4.61793001E-01;
  COFD[2923] = 1.85415189E-02;
  COFD[2924] = -2.21374872E+01;
  COFD[2925] = 5.47072190E+00;
  COFD[2926] = -4.56301261E-01;
  COFD[2927] = 1.82313566E-02;
  COFD[2928] = -2.21133921E+01;
  COFD[2929] = 5.48540187E+00;
  COFD[2930] = -4.58962148E-01;
  COFD[2931] = 1.83770355E-02;
  COFD[2932] = -1.93987062E+01;
  COFD[2933] = 4.10954793E+00;
  COFD[2934] = -2.37523329E-01;
  COFD[2935] = 7.08858141E-03;
  COFD[2936] = -1.97756833E+01;
  COFD[2937] = 4.22062499E+00;
  COFD[2938] = -2.54326872E-01;
  COFD[2939] = 7.91017784E-03;
  COFD[2940] = -1.97810128E+01;
  COFD[2941] = 4.22062499E+00;
  COFD[2942] = -2.54326872E-01;
  COFD[2943] = 7.91017784E-03;
  COFD[2944] = -2.18355754E+01;
  COFD[2945] = 5.40298848E+00;
  COFD[2946] = -4.43954594E-01;
  COFD[2947] = 1.75542998E-02;
  COFD[2948] = -2.14831325E+01;
  COFD[2949] = 5.56978987E+00;
  COFD[2950] = -4.89141980E-01;
  COFD[2951] = 2.04499210E-02;
  COFD[2952] = -2.18478087E+01;
  COFD[2953] = 5.40298848E+00;
  COFD[2954] = -4.43954594E-01;
  COFD[2955] = 1.75542998E-02;
  COFD[2956] = -2.04146501E+01;
  COFD[2957] = 4.50250781E+00;
  COFD[2958] = -2.97622106E-01;
  COFD[2959] = 1.00481473E-02;
  COFD[2960] = -2.17456518E+01;
  COFD[2961] = 5.17945041E+00;
  COFD[2962] = -4.05514689E-01;
  COFD[2963] = 1.55141412E-02;
  COFD[2964] = -2.17984322E+01;
  COFD[2965] = 5.21869603E+00;
  COFD[2966] = -4.12084772E-01;
  COFD[2967] = 1.58573035E-02;
  COFD[2968] = -2.09559798E+01;
  COFD[2969] = 4.63716925E+00;
  COFD[2970] = -3.18815070E-01;
  COFD[2971] = 1.11115446E-02;
  COFD[2972] = -2.19969833E+01;
  COFD[2973] = 5.23595129E+00;
  COFD[2974] = -4.15079064E-01;
  COFD[2975] = 1.60168286E-02;
  COFD[2976] = -2.19969833E+01;
  COFD[2977] = 5.23595129E+00;
  COFD[2978] = -4.15079064E-01;
  COFD[2979] = 1.60168286E-02;
  COFD[2980] = -2.20030451E+01;
  COFD[2981] = 5.23595129E+00;
  COFD[2982] = -4.15079064E-01;
  COFD[2983] = 1.60168286E-02;
  COFD[2984] = -2.05192861E+01;
  COFD[2985] = 4.35981364E+00;
  COFD[2986] = -2.75585363E-01;
  COFD[2987] = 8.95565009E-03;
  COFD[2988] = -2.02310973E+01;
  COFD[2989] = 4.22278378E+00;
  COFD[2990] = -2.54653500E-01;
  COFD[2991] = 7.92616085E-03;
  COFD[2992] = -1.83039660E+01;
  COFD[2993] = 4.47952077E+00;
  COFD[2994] = -3.66569471E-01;
  COFD[2995] = 1.58916129E-02;
  COFD[2996] = -1.72285926E+01;
  COFD[2997] = 4.24084025E+00;
  COFD[2998] = -3.37428619E-01;
  COFD[2999] = 1.47032793E-02;
  COFD[3000] = -1.79310920E+01;
  COFD[3001] = 4.98037650E+00;
  COFD[3002] = -4.26676911E-01;
  COFD[3003] = 1.83007231E-02;
  COFD[3004] = -1.72472941E+01;
  COFD[3005] = 4.24084025E+00;
  COFD[3006] = -3.37428619E-01;
  COFD[3007] = 1.47032793E-02;
  COFD[3008] = -1.39315415E+01;
  COFD[3009] = 3.30394764E+00;
  COFD[3010] = -2.17920112E-01;
  COFD[3011] = 9.60284243E-03;
  COFD[3012] = -1.86507146E+01;
  COFD[3013] = 4.60874797E+00;
  COFD[3014] = -3.82368716E-01;
  COFD[3015] = 1.65370164E-02;
  COFD[3016] = -2.09565855E+01;
  COFD[3017] = 5.18380539E+00;
  COFD[3018] = -4.06234719E-01;
  COFD[3019] = 1.55515345E-02;
  COFD[3020] = -1.86641903E+01;
  COFD[3021] = 4.60874797E+00;
  COFD[3022] = -3.82368716E-01;
  COFD[3023] = 1.65370164E-02;
  COFD[3024] = -1.86576128E+01;
  COFD[3025] = 4.60874797E+00;
  COFD[3026] = -3.82368716E-01;
  COFD[3027] = 1.65370164E-02;
  COFD[3028] = -1.95548207E+01;
  COFD[3029] = 4.97133070E+00;
  COFD[3030] = -4.25604177E-01;
  COFD[3031] = 1.82582594E-02;
  COFD[3032] = -2.16798216E+01;
  COFD[3033] = 5.36811769E+00;
  COFD[3034] = -4.37727086E-01;
  COFD[3035] = 1.72167686E-02;
  COFD[3036] = -1.95770952E+01;
  COFD[3037] = 4.97133070E+00;
  COFD[3038] = -4.25604177E-01;
  COFD[3039] = 1.82582594E-02;
  COFD[3040] = -1.83296908E+01;
  COFD[3041] = 4.48570999E+00;
  COFD[3042] = -3.67301524E-01;
  COFD[3043] = 1.59204254E-02;
  COFD[3044] = -2.18848092E+01;
  COFD[3045] = 5.51302074E+00;
  COFD[3046] = -4.65263979E-01;
  COFD[3047] = 1.87580679E-02;
  COFD[3048] = -2.15126287E+01;
  COFD[3049] = 5.48426911E+00;
  COFD[3050] = -4.80606512E-01;
  COFD[3051] = 2.01811046E-02;
  COFD[3052] = -1.95154070E+01;
  COFD[3053] = 4.94787350E+00;
  COFD[3054] = -4.22829292E-01;
  COFD[3055] = 1.81487163E-02;
  COFD[3056] = -2.11427719E+01;
  COFD[3057] = 5.43893233E+00;
  COFD[3058] = -4.75546039E-01;
  COFD[3059] = 1.99938690E-02;
  COFD[3060] = -2.15206127E+01;
  COFD[3061] = 5.48426911E+00;
  COFD[3062] = -4.80606512E-01;
  COFD[3063] = 2.01811046E-02;
  COFD[3064] = -2.13961359E+01;
  COFD[3065] = 5.46685775E+00;
  COFD[3066] = -4.78665416E-01;
  COFD[3067] = 2.01093915E-02;
  COFD[3068] = -2.16718195E+01;
  COFD[3069] = 5.36811769E+00;
  COFD[3070] = -4.37727086E-01;
  COFD[3071] = 1.72167686E-02;
  COFD[3072] = -2.18318230E+01;
  COFD[3073] = 5.40298848E+00;
  COFD[3074] = -4.43954594E-01;
  COFD[3075] = 1.75542998E-02;
  COFD[3076] = -2.18355754E+01;
  COFD[3077] = 5.40298848E+00;
  COFD[3078] = -4.43954594E-01;
  COFD[3079] = 1.75542998E-02;
  COFD[3080] = -2.15453644E+01;
  COFD[3081] = 5.55313619E+00;
  COFD[3082] = -4.87753729E-01;
  COFD[3083] = 2.04203421E-02;
  COFD[3084] = -1.96068540E+01;
  COFD[3085] = 5.02434088E+00;
  COFD[3086] = -4.31889635E-01;
  COFD[3087] = 1.85072024E-02;
  COFD[3088] = -2.15547698E+01;
  COFD[3089] = 5.55313619E+00;
  COFD[3090] = -4.87753729E-01;
  COFD[3091] = 2.04203421E-02;
  COFD[3092] = -2.20307736E+01;
  COFD[3093] = 5.49663315E+00;
  COFD[3094] = -4.61182837E-01;
  COFD[3095] = 1.85035558E-02;
  COFD[3096] = -2.20511242E+01;
  COFD[3097] = 5.60809037E+00;
  COFD[3098] = -4.89400803E-01;
  COFD[3099] = 2.02760802E-02;
  COFD[3100] = -2.20228316E+01;
  COFD[3101] = 5.61211028E+00;
  COFD[3102] = -4.90893171E-01;
  COFD[3103] = 2.03793118E-02;
  COFD[3104] = -2.22964837E+01;
  COFD[3105] = 5.52353335E+00;
  COFD[3106] = -4.67314589E-01;
  COFD[3107] = 1.88744228E-02;
  COFD[3108] = -2.21795337E+01;
  COFD[3109] = 5.61233637E+00;
  COFD[3110] = -4.91419253E-01;
  COFD[3111] = 2.04216738E-02;
  COFD[3112] = -2.21795337E+01;
  COFD[3113] = 5.61233637E+00;
  COFD[3114] = -4.91419253E-01;
  COFD[3115] = 2.04216738E-02;
  COFD[3116] = -2.21838574E+01;
  COFD[3117] = 5.61233637E+00;
  COFD[3118] = -4.91419253E-01;
  COFD[3119] = 2.04216738E-02;
  COFD[3120] = -2.23166808E+01;
  COFD[3121] = 5.44889462E+00;
  COFD[3122] = -4.52325002E-01;
  COFD[3123] = 1.80132629E-02;
  COFD[3124] = -2.22462092E+01;
  COFD[3125] = 5.40356304E+00;
  COFD[3126] = -4.44060256E-01;
  COFD[3127] = 1.75601121E-02;
  COFD[3128] = -1.59884349E+01;
  COFD[3129] = 3.72220402E+00;
  COFD[3130] = -2.71150591E-01;
  COFD[3131] = 1.18665265E-02;
  COFD[3132] = -1.49500258E+01;
  COFD[3133] = 3.52327209E+00;
  COFD[3134] = -2.46286208E-01;
  COFD[3135] = 1.08285963E-02;
  COFD[3136] = -1.54460977E+01;
  COFD[3137] = 4.26819983E+00;
  COFD[3138] = -3.40766379E-01;
  COFD[3139] = 1.48393361E-02;
  COFD[3140] = -1.49718147E+01;
  COFD[3141] = 3.52327209E+00;
  COFD[3142] = -2.46286208E-01;
  COFD[3143] = 1.08285963E-02;
  COFD[3144] = -1.22004476E+01;
  COFD[3145] = 2.80725489E+00;
  COFD[3146] = -1.54291406E-01;
  COFD[3147] = 6.88290911E-03;
  COFD[3148] = -1.64169341E+01;
  COFD[3149] = 3.89309916E+00;
  COFD[3150] = -2.93528188E-01;
  COFD[3151] = 1.28463177E-02;
  COFD[3152] = -2.10440599E+01;
  COFD[3153] = 5.59806282E+00;
  COFD[3154] = -4.87109535E-01;
  COFD[3155] = 2.01370226E-02;
  COFD[3156] = -1.64338675E+01;
  COFD[3157] = 3.89309916E+00;
  COFD[3158] = -2.93528188E-01;
  COFD[3159] = 1.28463177E-02;
  COFD[3160] = -1.64255877E+01;
  COFD[3161] = 3.89309916E+00;
  COFD[3162] = -2.93528188E-01;
  COFD[3163] = 1.28463177E-02;
  COFD[3164] = -1.72572011E+01;
  COFD[3165] = 4.26063341E+00;
  COFD[3166] = -3.39848064E-01;
  COFD[3167] = 1.48021313E-02;
  COFD[3168] = -2.14303411E+01;
  COFD[3169] = 5.59268435E+00;
  COFD[3170] = -4.91232974E-01;
  COFD[3171] = 2.05064746E-02;
  COFD[3172] = -1.72828280E+01;
  COFD[3173] = 4.26063341E+00;
  COFD[3174] = -3.39848064E-01;
  COFD[3175] = 1.48021313E-02;
  COFD[3176] = -1.60261598E+01;
  COFD[3177] = 3.73312045E+00;
  COFD[3178] = -2.72579779E-01;
  COFD[3179] = 1.19290272E-02;
  COFD[3180] = -2.09241584E+01;
  COFD[3181] = 5.42316225E+00;
  COFD[3182] = -4.73702801E-01;
  COFD[3183] = 1.99217718E-02;
  COFD[3184] = -1.95737273E+01;
  COFD[3185] = 4.93449043E+00;
  COFD[3186] = -4.21243802E-01;
  COFD[3187] = 1.80859966E-02;
  COFD[3188] = -1.72316133E+01;
  COFD[3189] = 4.24011069E+00;
  COFD[3190] = -3.37339810E-01;
  COFD[3191] = 1.46996679E-02;
  COFD[3192] = -1.91366985E+01;
  COFD[3193] = 4.87703209E+00;
  COFD[3194] = -4.14222202E-01;
  COFD[3195] = 1.77987878E-02;
  COFD[3196] = -1.95836362E+01;
  COFD[3197] = 4.93449043E+00;
  COFD[3198] = -4.21243802E-01;
  COFD[3199] = 1.80859966E-02;
  COFD[3200] = -1.94485902E+01;
  COFD[3201] = 4.91446566E+00;
  COFD[3202] = -4.18837152E-01;
  COFD[3203] = 1.79893537E-02;
  COFD[3204] = -2.14204113E+01;
  COFD[3205] = 5.59268435E+00;
  COFD[3206] = -4.91232974E-01;
  COFD[3207] = 2.05064746E-02;
  COFD[3208] = -2.14782205E+01;
  COFD[3209] = 5.56978987E+00;
  COFD[3210] = -4.89141980E-01;
  COFD[3211] = 2.04499210E-02;
  COFD[3212] = -2.14831325E+01;
  COFD[3213] = 5.56978987E+00;
  COFD[3214] = -4.89141980E-01;
  COFD[3215] = 2.04499210E-02;
  COFD[3216] = -1.96068540E+01;
  COFD[3217] = 5.02434088E+00;
  COFD[3218] = -4.31889635E-01;
  COFD[3219] = 1.85072024E-02;
  COFD[3220] = -1.72414795E+01;
  COFD[3221] = 4.29808578E+00;
  COFD[3222] = -3.44235570E-01;
  COFD[3223] = 1.49727727E-02;
  COFD[3224] = -1.96183861E+01;
  COFD[3225] = 5.02434088E+00;
  COFD[3226] = -4.31889635E-01;
  COFD[3227] = 1.85072024E-02;
  COFD[3228] = -2.12680019E+01;
  COFD[3229] = 5.47935225E+00;
  COFD[3230] = -4.80056796E-01;
  COFD[3231] = 2.01607180E-02;
  COFD[3232] = -2.04250978E+01;
  COFD[3233] = 5.19993608E+00;
  COFD[3234] = -4.51334924E-01;
  COFD[3235] = 1.92158646E-02;
  COFD[3236] = -2.03116223E+01;
  COFD[3237] = 5.16758304E+00;
  COFD[3238] = -4.47606321E-01;
  COFD[3239] = 1.90728318E-02;
  COFD[3240] = -2.13858351E+01;
  COFD[3241] = 5.41773320E+00;
  COFD[3242] = -4.73414274E-01;
  COFD[3243] = 1.99258733E-02;
  COFD[3244] = -2.04750296E+01;
  COFD[3245] = 5.15745622E+00;
  COFD[3246] = -4.46648283E-01;
  COFD[3247] = 1.90458987E-02;
  COFD[3248] = -2.04750296E+01;
  COFD[3249] = 5.15745622E+00;
  COFD[3250] = -4.46648283E-01;
  COFD[3251] = 1.90458987E-02;
  COFD[3252] = -2.04806356E+01;
  COFD[3253] = 5.15745622E+00;
  COFD[3254] = -4.46648283E-01;
  COFD[3255] = 1.90458987E-02;
  COFD[3256] = -2.18644448E+01;
  COFD[3257] = 5.53438558E+00;
  COFD[3258] = -4.85873757E-01;
  COFD[3259] = 2.03606278E-02;
  COFD[3260] = -2.19764095E+01;
  COFD[3261] = 5.56943713E+00;
  COFD[3262] = -4.89114655E-01;
  COFD[3263] = 2.04494661E-02;
  COFD[3264] = -1.83137186E+01;
  COFD[3265] = 4.47952077E+00;
  COFD[3266] = -3.66569471E-01;
  COFD[3267] = 1.58916129E-02;
  COFD[3268] = -1.72357357E+01;
  COFD[3269] = 4.24084025E+00;
  COFD[3270] = -3.37428619E-01;
  COFD[3271] = 1.47032793E-02;
  COFD[3272] = -1.79317871E+01;
  COFD[3273] = 4.98037650E+00;
  COFD[3274] = -4.26676911E-01;
  COFD[3275] = 1.83007231E-02;
  COFD[3276] = -1.72547115E+01;
  COFD[3277] = 4.24084025E+00;
  COFD[3278] = -3.37428619E-01;
  COFD[3279] = 1.47032793E-02;
  COFD[3280] = -1.39328824E+01;
  COFD[3281] = 3.30394764E+00;
  COFD[3282] = -2.17920112E-01;
  COFD[3283] = 9.60284243E-03;
  COFD[3284] = -1.86610959E+01;
  COFD[3285] = 4.60874797E+00;
  COFD[3286] = -3.82368716E-01;
  COFD[3287] = 1.65370164E-02;
  COFD[3288] = -2.09642647E+01;
  COFD[3289] = 5.18380539E+00;
  COFD[3290] = -4.06234719E-01;
  COFD[3291] = 1.55515345E-02;
  COFD[3292] = -1.86748583E+01;
  COFD[3293] = 4.60874797E+00;
  COFD[3294] = -3.82368716E-01;
  COFD[3295] = 1.65370164E-02;
  COFD[3296] = -1.86681399E+01;
  COFD[3297] = 4.60874797E+00;
  COFD[3298] = -3.82368716E-01;
  COFD[3299] = 1.65370164E-02;
  COFD[3300] = -1.95613879E+01;
  COFD[3301] = 4.97133070E+00;
  COFD[3302] = -4.25604177E-01;
  COFD[3303] = 1.82582594E-02;
  COFD[3304] = -2.16899028E+01;
  COFD[3305] = 5.36811769E+00;
  COFD[3306] = -4.37727086E-01;
  COFD[3307] = 1.72167686E-02;
  COFD[3308] = -1.95839636E+01;
  COFD[3309] = 4.97133070E+00;
  COFD[3310] = -4.25604177E-01;
  COFD[3311] = 1.82582594E-02;
  COFD[3312] = -1.83394427E+01;
  COFD[3313] = 4.48570999E+00;
  COFD[3314] = -3.67301524E-01;
  COFD[3315] = 1.59204254E-02;
  COFD[3316] = -2.18950463E+01;
  COFD[3317] = 5.51302074E+00;
  COFD[3318] = -4.65263979E-01;
  COFD[3319] = 1.87580679E-02;
  COFD[3320] = -2.15225554E+01;
  COFD[3321] = 5.48426911E+00;
  COFD[3322] = -4.80606512E-01;
  COFD[3323] = 2.01811046E-02;
  COFD[3324] = -1.95225623E+01;
  COFD[3325] = 4.94787350E+00;
  COFD[3326] = -4.22829292E-01;
  COFD[3327] = 1.81487163E-02;
  COFD[3328] = -2.11525312E+01;
  COFD[3329] = 5.43893233E+00;
  COFD[3330] = -4.75546039E-01;
  COFD[3331] = 1.99938690E-02;
  COFD[3332] = -2.15307008E+01;
  COFD[3333] = 5.48426911E+00;
  COFD[3334] = -4.80606512E-01;
  COFD[3335] = 2.01811046E-02;
  COFD[3336] = -2.14079831E+01;
  COFD[3337] = 5.46685775E+00;
  COFD[3338] = -4.78665416E-01;
  COFD[3339] = 2.01093915E-02;
  COFD[3340] = -2.16817390E+01;
  COFD[3341] = 5.36811769E+00;
  COFD[3342] = -4.37727086E-01;
  COFD[3343] = 1.72167686E-02;
  COFD[3344] = -2.18439638E+01;
  COFD[3345] = 5.40298848E+00;
  COFD[3346] = -4.43954594E-01;
  COFD[3347] = 1.75542998E-02;
  COFD[3348] = -2.18478087E+01;
  COFD[3349] = 5.40298848E+00;
  COFD[3350] = -4.43954594E-01;
  COFD[3351] = 1.75542998E-02;
  COFD[3352] = -2.15547698E+01;
  COFD[3353] = 5.55313619E+00;
  COFD[3354] = -4.87753729E-01;
  COFD[3355] = 2.04203421E-02;
  COFD[3356] = -1.96183861E+01;
  COFD[3357] = 5.02434088E+00;
  COFD[3358] = -4.31889635E-01;
  COFD[3359] = 1.85072024E-02;
  COFD[3360] = -2.15643555E+01;
  COFD[3361] = 5.55313619E+00;
  COFD[3362] = -4.87753729E-01;
  COFD[3363] = 2.04203421E-02;
  COFD[3364] = -2.20425218E+01;
  COFD[3365] = 5.49663315E+00;
  COFD[3366] = -4.61182837E-01;
  COFD[3367] = 1.85035558E-02;
  COFD[3368] = -2.20626612E+01;
  COFD[3369] = 5.60809037E+00;
  COFD[3370] = -4.89400803E-01;
  COFD[3371] = 2.02760802E-02;
  COFD[3372] = -2.20344781E+01;
  COFD[3373] = 5.61211028E+00;
  COFD[3374] = -4.90893171E-01;
  COFD[3375] = 2.03793118E-02;
  COFD[3376] = -2.23094470E+01;
  COFD[3377] = 5.52353335E+00;
  COFD[3378] = -4.67314589E-01;
  COFD[3379] = 1.88744228E-02;
  COFD[3380] = -2.21912865E+01;
  COFD[3381] = 5.61233637E+00;
  COFD[3382] = -4.91419253E-01;
  COFD[3383] = 2.04216738E-02;
  COFD[3384] = -2.21912865E+01;
  COFD[3385] = 5.61233637E+00;
  COFD[3386] = -4.91419253E-01;
  COFD[3387] = 2.04216738E-02;
  COFD[3388] = -2.21957135E+01;
  COFD[3389] = 5.61233637E+00;
  COFD[3390] = -4.91419253E-01;
  COFD[3391] = 2.04216738E-02;
  COFD[3392] = -2.23307126E+01;
  COFD[3393] = 5.44889462E+00;
  COFD[3394] = -4.52325002E-01;
  COFD[3395] = 1.80132629E-02;
  COFD[3396] = -2.22602410E+01;
  COFD[3397] = 5.40356304E+00;
  COFD[3398] = -4.44060256E-01;
  COFD[3399] = 1.75601121E-02;
  COFD[3400] = -2.02693704E+01;
  COFD[3401] = 5.10426133E+00;
  COFD[3402] = -4.41256919E-01;
  COFD[3403] = 1.88737290E-02;
  COFD[3404] = -1.90915553E+01;
  COFD[3405] = 4.84384483E+00;
  COFD[3406] = -4.10265575E-01;
  COFD[3407] = 1.76414287E-02;
  COFD[3408] = -1.94691588E+01;
  COFD[3409] = 5.43830787E+00;
  COFD[3410] = -4.75472880E-01;
  COFD[3411] = 1.99909996E-02;
  COFD[3412] = -1.91136407E+01;
  COFD[3413] = 4.84384483E+00;
  COFD[3414] = -4.10265575E-01;
  COFD[3415] = 1.76414287E-02;
  COFD[3416] = -1.57040365E+01;
  COFD[3417] = 3.93614244E+00;
  COFD[3418] = -2.99111497E-01;
  COFD[3419] = 1.30888229E-02;
  COFD[3420] = -2.05235643E+01;
  COFD[3421] = 5.18417470E+00;
  COFD[3422] = -4.49491573E-01;
  COFD[3423] = 1.91438508E-02;
  COFD[3424] = -1.87419126E+01;
  COFD[3425] = 3.96926341E+00;
  COFD[3426] = -2.16412264E-01;
  COFD[3427] = 6.06012078E-03;
  COFD[3428] = -2.05408587E+01;
  COFD[3429] = 5.18417470E+00;
  COFD[3430] = -4.49491573E-01;
  COFD[3431] = 1.91438508E-02;
  COFD[3432] = -2.05324009E+01;
  COFD[3433] = 5.18417470E+00;
  COFD[3434] = -4.49491573E-01;
  COFD[3435] = 1.91438508E-02;
  COFD[3436] = -2.11378438E+01;
  COFD[3437] = 5.42846112E+00;
  COFD[3438] = -4.74321870E-01;
  COFD[3439] = 1.99459749E-02;
  COFD[3440] = -2.01064300E+01;
  COFD[3441] = 4.41511629E+00;
  COFD[3442] = -2.84086963E-01;
  COFD[3443] = 9.37586971E-03;
  COFD[3444] = -2.11637883E+01;
  COFD[3445] = 5.42846112E+00;
  COFD[3446] = -4.74321870E-01;
  COFD[3447] = 1.99459749E-02;
  COFD[3448] = -2.02969667E+01;
  COFD[3449] = 5.11106992E+00;
  COFD[3450] = -4.42047129E-01;
  COFD[3451] = 1.89042990E-02;
  COFD[3452] = -2.09272370E+01;
  COFD[3453] = 4.82184721E+00;
  COFD[3454] = -3.48128875E-01;
  COFD[3455] = 1.25918978E-02;
  COFD[3456] = -2.22377782E+01;
  COFD[3457] = 5.53139819E+00;
  COFD[3458] = -4.68828555E-01;
  COFD[3459] = 1.89597887E-02;
  COFD[3460] = -2.11341641E+01;
  COFD[3461] = 5.41773516E+00;
  COFD[3462] = -4.73414338E-01;
  COFD[3463] = 1.99258685E-02;
  COFD[3464] = -2.20445378E+01;
  COFD[3465] = 5.56049839E+00;
  COFD[3466] = -4.74367872E-01;
  COFD[3467] = 1.92702787E-02;
  COFD[3468] = -2.22478853E+01;
  COFD[3469] = 5.53139819E+00;
  COFD[3470] = -4.68828555E-01;
  COFD[3471] = 1.89597887E-02;
  COFD[3472] = -2.22176875E+01;
  COFD[3473] = 5.54251230E+00;
  COFD[3474] = -4.70946314E-01;
  COFD[3475] = 1.90785869E-02;
  COFD[3476] = -2.00963017E+01;
  COFD[3477] = 4.41511629E+00;
  COFD[3478] = -2.84086963E-01;
  COFD[3479] = 9.37586971E-03;
  COFD[3480] = -2.04096115E+01;
  COFD[3481] = 4.50250781E+00;
  COFD[3482] = -2.97622106E-01;
  COFD[3483] = 1.00481473E-02;
  COFD[3484] = -2.04146501E+01;
  COFD[3485] = 4.50250781E+00;
  COFD[3486] = -2.97622106E-01;
  COFD[3487] = 1.00481473E-02;
  COFD[3488] = -2.20307736E+01;
  COFD[3489] = 5.49663315E+00;
  COFD[3490] = -4.61182837E-01;
  COFD[3491] = 1.85035558E-02;
  COFD[3492] = -2.12680019E+01;
  COFD[3493] = 5.47935225E+00;
  COFD[3494] = -4.80056796E-01;
  COFD[3495] = 2.01607180E-02;
  COFD[3496] = -2.20425218E+01;
  COFD[3497] = 5.49663315E+00;
  COFD[3498] = -4.61182837E-01;
  COFD[3499] = 1.85035558E-02;
  COFD[3500] = -2.09121160E+01;
  COFD[3501] = 4.72895031E+00;
  COFD[3502] = -3.33332771E-01;
  COFD[3503] = 1.18431478E-02;
  COFD[3504] = -2.20250512E+01;
  COFD[3505] = 5.31412694E+00;
  COFD[3506] = -4.28473898E-01;
  COFD[3507] = 1.67264841E-02;
  COFD[3508] = -2.20656185E+01;
  COFD[3509] = 5.34774760E+00;
  COFD[3510] = -4.34239753E-01;
  COFD[3511] = 1.70320676E-02;
  COFD[3512] = -2.14189826E+01;
  COFD[3513] = 4.85433278E+00;
  COFD[3514] = -3.53258974E-01;
  COFD[3515] = 1.28503760E-02;
  COFD[3516] = -2.22604939E+01;
  COFD[3517] = 5.36643605E+00;
  COFD[3518] = -4.37440735E-01;
  COFD[3519] = 1.72016388E-02;
  COFD[3520] = -2.22604939E+01;
  COFD[3521] = 5.36643605E+00;
  COFD[3522] = -4.37440735E-01;
  COFD[3523] = 1.72016388E-02;
  COFD[3524] = -2.22662385E+01;
  COFD[3525] = 5.36643605E+00;
  COFD[3526] = -4.37440735E-01;
  COFD[3527] = 1.72016388E-02;
  COFD[3528] = -2.10617011E+01;
  COFD[3529] = 4.61245983E+00;
  COFD[3530] = -3.14873896E-01;
  COFD[3531] = 1.09118770E-02;
  COFD[3532] = -2.08429266E+01;
  COFD[3533] = 4.50409026E+00;
  COFD[3534] = -2.97868419E-01;
  COFD[3535] = 1.00604224E-02;
  COFD[3536] = -1.91796726E+01;
  COFD[3537] = 4.70714822E+00;
  COFD[3538] = -3.94261134E-01;
  COFD[3539] = 1.70175169E-02;
  COFD[3540] = -1.80480872E+01;
  COFD[3541] = 4.45434023E+00;
  COFD[3542] = -3.63584633E-01;
  COFD[3543] = 1.57739270E-02;
  COFD[3544] = -1.86493270E+01;
  COFD[3545] = 5.16040659E+00;
  COFD[3546] = -4.46843492E-01;
  COFD[3547] = 1.90466181E-02;
  COFD[3548] = -1.80698827E+01;
  COFD[3549] = 4.45434023E+00;
  COFD[3550] = -3.63584633E-01;
  COFD[3551] = 1.57739270E-02;
  COFD[3552] = -1.46719351E+01;
  COFD[3553] = 3.52400594E+00;
  COFD[3554] = -2.46379985E-01;
  COFD[3555] = 1.08326032E-02;
  COFD[3556] = -1.94912078E+01;
  COFD[3557] = 4.81575071E+00;
  COFD[3558] = -4.07042139E-01;
  COFD[3559] = 1.75187504E-02;
  COFD[3560] = -2.05372348E+01;
  COFD[3561] = 4.83379373E+00;
  COFD[3562] = -3.50008083E-01;
  COFD[3563] = 1.26863426E-02;
  COFD[3564] = -1.95081493E+01;
  COFD[3565] = 4.81575071E+00;
  COFD[3566] = -4.07042139E-01;
  COFD[3567] = 1.75187504E-02;
  COFD[3568] = -1.94998656E+01;
  COFD[3569] = 4.81575071E+00;
  COFD[3570] = -4.07042139E-01;
  COFD[3571] = 1.75187504E-02;
  COFD[3572] = -2.03111211E+01;
  COFD[3573] = 5.15740122E+00;
  COFD[3574] = -4.46644818E-01;
  COFD[3575] = 1.90459001E-02;
  COFD[3576] = -2.15258520E+01;
  COFD[3577] = 5.12799307E+00;
  COFD[3578] = -3.96938732E-01;
  COFD[3579] = 1.50673195E-02;
  COFD[3580] = -2.03367551E+01;
  COFD[3581] = 5.15740122E+00;
  COFD[3582] = -4.46644818E-01;
  COFD[3583] = 1.90459001E-02;
  COFD[3584] = -1.92044433E+01;
  COFD[3585] = 4.71304783E+00;
  COFD[3586] = -3.94942083E-01;
  COFD[3587] = 1.70435959E-02;
  COFD[3588] = -2.19617933E+01;
  COFD[3589] = 5.37170913E+00;
  COFD[3590] = -4.38338667E-01;
  COFD[3591] = 1.72490835E-02;
  COFD[3592] = -2.21694180E+01;
  COFD[3593] = 5.60403905E+00;
  COFD[3594] = -4.91221691E-01;
  COFD[3595] = 2.04473483E-02;
  COFD[3596] = -2.03123537E+01;
  COFD[3597] = 5.14854169E+00;
  COFD[3598] = -4.45984343E-01;
  COFD[3599] = 1.90374217E-02;
  COFD[3600] = -2.19032541E+01;
  COFD[3601] = 5.59794138E+00;
  COFD[3602] = -4.91684532E-01;
  COFD[3603] = 2.05170953E-02;
  COFD[3604] = -2.21793313E+01;
  COFD[3605] = 5.60403905E+00;
  COFD[3606] = -4.91221691E-01;
  COFD[3607] = 2.04473483E-02;
  COFD[3608] = -2.21216771E+01;
  COFD[3609] = 5.60203389E+00;
  COFD[3610] = -4.91444416E-01;
  COFD[3611] = 2.04761886E-02;
  COFD[3612] = -2.15159177E+01;
  COFD[3613] = 5.12799307E+00;
  COFD[3614] = -3.96938732E-01;
  COFD[3615] = 1.50673195E-02;
  COFD[3616] = -2.17407371E+01;
  COFD[3617] = 5.17945041E+00;
  COFD[3618] = -4.05514689E-01;
  COFD[3619] = 1.55141412E-02;
  COFD[3620] = -2.17456518E+01;
  COFD[3621] = 5.17945041E+00;
  COFD[3622] = -4.05514689E-01;
  COFD[3623] = 1.55141412E-02;
  COFD[3624] = -2.20511242E+01;
  COFD[3625] = 5.60809037E+00;
  COFD[3626] = -4.89400803E-01;
  COFD[3627] = 2.02760802E-02;
  COFD[3628] = -2.04250978E+01;
  COFD[3629] = 5.19993608E+00;
  COFD[3630] = -4.51334924E-01;
  COFD[3631] = 1.92158646E-02;
  COFD[3632] = -2.20626612E+01;
  COFD[3633] = 5.60809037E+00;
  COFD[3634] = -4.89400803E-01;
  COFD[3635] = 2.02760802E-02;
  COFD[3636] = -2.20250512E+01;
  COFD[3637] = 5.31412694E+00;
  COFD[3638] = -4.28473898E-01;
  COFD[3639] = 1.67264841E-02;
  COFD[3640] = -2.24021863E+01;
  COFD[3641] = 5.58364149E+00;
  COFD[3642] = -4.79184111E-01;
  COFD[3643] = 1.95516164E-02;
  COFD[3644] = -2.23689607E+01;
  COFD[3645] = 5.58513878E+00;
  COFD[3646] = -4.80389524E-01;
  COFD[3647] = 1.96438689E-02;
  COFD[3648] = -2.24063484E+01;
  COFD[3649] = 5.38918452E+00;
  COFD[3650] = -4.41385864E-01;
  COFD[3651] = 1.74122637E-02;
  COFD[3652] = -2.25161193E+01;
  COFD[3653] = 5.58521783E+00;
  COFD[3654] = -4.80947522E-01;
  COFD[3655] = 1.96897222E-02;
  COFD[3656] = -2.25161193E+01;
  COFD[3657] = 5.58521783E+00;
  COFD[3658] = -4.80947522E-01;
  COFD[3659] = 1.96897222E-02;
  COFD[3660] = -2.25217284E+01;
  COFD[3661] = 5.58521783E+00;
  COFD[3662] = -4.80947522E-01;
  COFD[3663] = 1.96897222E-02;
  COFD[3664] = -2.22719227E+01;
  COFD[3665] = 5.24354480E+00;
  COFD[3666] = -4.16412182E-01;
  COFD[3667] = 1.60883090E-02;
  COFD[3668] = -2.21603612E+01;
  COFD[3669] = 5.18050127E+00;
  COFD[3670] = -4.05688517E-01;
  COFD[3671] = 1.55231713E-02;
  COFD[3672] = -1.90859348E+01;
  COFD[3673] = 4.68079396E+00;
  COFD[3674] = -3.91231550E-01;
  COFD[3675] = 1.69021170E-02;
  COFD[3676] = -1.79361074E+01;
  COFD[3677] = 4.42139452E+00;
  COFD[3678] = -3.59567329E-01;
  COFD[3679] = 1.56103969E-02;
  COFD[3680] = -1.85748704E+01;
  COFD[3681] = 5.14789919E+00;
  COFD[3682] = -4.45930850E-01;
  COFD[3683] = 1.90363341E-02;
  COFD[3684] = -1.79580536E+01;
  COFD[3685] = 4.42139452E+00;
  COFD[3686] = -3.59567329E-01;
  COFD[3687] = 1.56103969E-02;
  COFD[3688] = -1.45715952E+01;
  COFD[3689] = 3.49477850E+00;
  COFD[3690] = -2.42635772E-01;
  COFD[3691] = 1.06721490E-02;
  COFD[3692] = -1.93917227E+01;
  COFD[3693] = 4.78708023E+00;
  COFD[3694] = -4.03693144E-01;
  COFD[3695] = 1.73884817E-02;
  COFD[3696] = -2.06310242E+01;
  COFD[3697] = 4.89289496E+00;
  COFD[3698] = -3.59346263E-01;
  COFD[3699] = 1.31570901E-02;
  COFD[3700] = -1.94088469E+01;
  COFD[3701] = 4.78708023E+00;
  COFD[3702] = -4.03693144E-01;
  COFD[3703] = 1.73884817E-02;
  COFD[3704] = -1.94004730E+01;
  COFD[3705] = 4.78708023E+00;
  COFD[3706] = -4.03693144E-01;
  COFD[3707] = 1.73884817E-02;
  COFD[3708] = -2.02434420E+01;
  COFD[3709] = 5.14418672E+00;
  COFD[3710] = -4.45631004E-01;
  COFD[3711] = 1.90308403E-02;
  COFD[3712] = -2.15802742E+01;
  COFD[3713] = 5.16868516E+00;
  COFD[3714] = -4.03721581E-01;
  COFD[3715] = 1.54206640E-02;
  COFD[3716] = -2.02692375E+01;
  COFD[3717] = 5.14418672E+00;
  COFD[3718] = -4.45631004E-01;
  COFD[3719] = 1.90308403E-02;
  COFD[3720] = -1.91118387E+01;
  COFD[3721] = 4.68715685E+00;
  COFD[3722] = -3.91979493E-01;
  COFD[3723] = 1.69314004E-02;
  COFD[3724] = -2.19873490E+01;
  COFD[3725] = 5.39977369E+00;
  COFD[3726] = -4.43340854E-01;
  COFD[3727] = 1.75199613E-02;
  COFD[3728] = -2.21242875E+01;
  COFD[3729] = 5.60010742E+00;
  COFD[3730] = -4.91597429E-01;
  COFD[3731] = 2.04987718E-02;
  COFD[3732] = -2.02318656E+01;
  COFD[3733] = 5.12963391E+00;
  COFD[3734] = -4.44146826E-01;
  COFD[3735] = 1.89829640E-02;
  COFD[3736] = -2.18222678E+01;
  COFD[3737] = 5.57940140E+00;
  COFD[3738] = -4.89964112E-01;
  COFD[3739] = 2.04689539E-02;
  COFD[3740] = -2.21343012E+01;
  COFD[3741] = 5.60010742E+00;
  COFD[3742] = -4.91597429E-01;
  COFD[3743] = 2.04987718E-02;
  COFD[3744] = -2.20725828E+01;
  COFD[3745] = 5.59642965E+00;
  COFD[3746] = -4.91577716E-01;
  COFD[3747] = 2.05159582E-02;
  COFD[3748] = -2.15702394E+01;
  COFD[3749] = 5.16868516E+00;
  COFD[3750] = -4.03721581E-01;
  COFD[3751] = 1.54206640E-02;
  COFD[3752] = -2.17934534E+01;
  COFD[3753] = 5.21869603E+00;
  COFD[3754] = -4.12084772E-01;
  COFD[3755] = 1.58573035E-02;
  COFD[3756] = -2.17984322E+01;
  COFD[3757] = 5.21869603E+00;
  COFD[3758] = -4.12084772E-01;
  COFD[3759] = 1.58573035E-02;
  COFD[3760] = -2.20228316E+01;
  COFD[3761] = 5.61211028E+00;
  COFD[3762] = -4.90893171E-01;
  COFD[3763] = 2.03793118E-02;
  COFD[3764] = -2.03116223E+01;
  COFD[3765] = 5.16758304E+00;
  COFD[3766] = -4.47606321E-01;
  COFD[3767] = 1.90728318E-02;
  COFD[3768] = -2.20344781E+01;
  COFD[3769] = 5.61211028E+00;
  COFD[3770] = -4.90893171E-01;
  COFD[3771] = 2.03793118E-02;
  COFD[3772] = -2.20656185E+01;
  COFD[3773] = 5.34774760E+00;
  COFD[3774] = -4.34239753E-01;
  COFD[3775] = 1.70320676E-02;
  COFD[3776] = -2.23689607E+01;
  COFD[3777] = 5.58513878E+00;
  COFD[3778] = -4.80389524E-01;
  COFD[3779] = 1.96438689E-02;
  COFD[3780] = -2.23318332E+01;
  COFD[3781] = 5.58508387E+00;
  COFD[3782] = -4.81385216E-01;
  COFD[3783] = 1.97267369E-02;
  COFD[3784] = -2.24242060E+01;
  COFD[3785] = 5.41204570E+00;
  COFD[3786] = -4.45647651E-01;
  COFD[3787] = 1.76482725E-02;
  COFD[3788] = -2.24797356E+01;
  COFD[3789] = 5.58492389E+00;
  COFD[3790] = -4.81921515E-01;
  COFD[3791] = 1.97721229E-02;
  COFD[3792] = -2.24797356E+01;
  COFD[3793] = 5.58492389E+00;
  COFD[3794] = -4.81921515E-01;
  COFD[3795] = 1.97721229E-02;
  COFD[3796] = -2.24854147E+01;
  COFD[3797] = 5.58492389E+00;
  COFD[3798] = -4.81921515E-01;
  COFD[3799] = 1.97721229E-02;
  COFD[3800] = -2.23086331E+01;
  COFD[3801] = 5.27409919E+00;
  COFD[3802] = -4.21767988E-01;
  COFD[3803] = 1.63754073E-02;
  COFD[3804] = -2.22169851E+01;
  COFD[3805] = 5.21950983E+00;
  COFD[3806] = -4.12223195E-01;
  COFD[3807] = 1.58645894E-02;
  COFD[3808] = -2.03249633E+01;
  COFD[3809] = 5.03292431E+00;
  COFD[3810] = -4.32887308E-01;
  COFD[3811] = 1.85458102E-02;
  COFD[3812] = -1.91805320E+01;
  COFD[3813] = 4.78152337E+00;
  COFD[3814] = -4.03052726E-01;
  COFD[3815] = 1.73639773E-02;
  COFD[3816] = -1.96115390E+01;
  COFD[3817] = 5.40502814E+00;
  COFD[3818] = -4.72746583E-01;
  COFD[3819] = 1.99363615E-02;
  COFD[3820] = -1.92042311E+01;
  COFD[3821] = 4.78152337E+00;
  COFD[3822] = -4.03052726E-01;
  COFD[3823] = 1.73639773E-02;
  COFD[3824] = -1.56932959E+01;
  COFD[3825] = 3.84112355E+00;
  COFD[3826] = -2.86739743E-01;
  COFD[3827] = 1.25496520E-02;
  COFD[3828] = -2.06513233E+01;
  COFD[3829] = 5.14159226E+00;
  COFD[3830] = -4.45395793E-01;
  COFD[3831] = 1.90248052E-02;
  COFD[3832] = -1.94509960E+01;
  COFD[3833] = 4.17438087E+00;
  COFD[3834] = -2.47331309E-01;
  COFD[3835] = 7.56793055E-03;
  COFD[3836] = -2.06706819E+01;
  COFD[3837] = 5.14159226E+00;
  COFD[3838] = -4.45395793E-01;
  COFD[3839] = 1.90248052E-02;
  COFD[3840] = -2.06612046E+01;
  COFD[3841] = 5.14159226E+00;
  COFD[3842] = -4.45395793E-01;
  COFD[3843] = 1.90248052E-02;
  COFD[3844] = -2.12684290E+01;
  COFD[3845] = 5.40206122E+00;
  COFD[3846] = -4.72555229E-01;
  COFD[3847] = 1.99358199E-02;
  COFD[3848] = -2.06752970E+01;
  COFD[3849] = 4.56779427E+00;
  COFD[3850] = -3.07785839E-01;
  COFD[3851] = 1.05545767E-02;
  COFD[3852] = -2.12960885E+01;
  COFD[3853] = 5.40206122E+00;
  COFD[3854] = -4.72555229E-01;
  COFD[3855] = 1.99358199E-02;
  COFD[3856] = -2.03524955E+01;
  COFD[3857] = 5.04005588E+00;
  COFD[3858] = -4.33725091E-01;
  COFD[3859] = 1.85786663E-02;
  COFD[3860] = -2.14535680E+01;
  COFD[3861] = 4.95733546E+00;
  COFD[3862] = -3.69505821E-01;
  COFD[3863] = 1.36687047E-02;
  COFD[3864] = -2.25375408E+01;
  COFD[3865] = 5.57713269E+00;
  COFD[3866] = -4.77555529E-01;
  COFD[3867] = 1.94497781E-02;
  COFD[3868] = -2.12758585E+01;
  COFD[3869] = 5.39400772E+00;
  COFD[3870] = -4.72026046E-01;
  COFD[3871] = 1.99336599E-02;
  COFD[3872] = -2.23144023E+01;
  COFD[3873] = 5.58484440E+00;
  COFD[3874] = -4.80068319E-01;
  COFD[3875] = 1.96187346E-02;
  COFD[3876] = -2.25487717E+01;
  COFD[3877] = 5.57713269E+00;
  COFD[3878] = -4.77555529E-01;
  COFD[3879] = 1.94497781E-02;
  COFD[3880] = -2.25320678E+01;
  COFD[3881] = 5.58240011E+00;
  COFD[3882] = -4.78844918E-01;
  COFD[3883] = 1.95298191E-02;
  COFD[3884] = -2.06640437E+01;
  COFD[3885] = 4.56779427E+00;
  COFD[3886] = -3.07785839E-01;
  COFD[3887] = 1.05545767E-02;
  COFD[3888] = -2.09501952E+01;
  COFD[3889] = 4.63716925E+00;
  COFD[3890] = -3.18815070E-01;
  COFD[3891] = 1.11115446E-02;
  COFD[3892] = -2.09559798E+01;
  COFD[3893] = 4.63716925E+00;
  COFD[3894] = -3.18815070E-01;
  COFD[3895] = 1.11115446E-02;
  COFD[3896] = -2.22964837E+01;
  COFD[3897] = 5.52353335E+00;
  COFD[3898] = -4.67314589E-01;
  COFD[3899] = 1.88744228E-02;
  COFD[3900] = -2.13858351E+01;
  COFD[3901] = 5.41773320E+00;
  COFD[3902] = -4.73414274E-01;
  COFD[3903] = 1.99258733E-02;
  COFD[3904] = -2.23094470E+01;
  COFD[3905] = 5.52353335E+00;
  COFD[3906] = -4.67314589E-01;
  COFD[3907] = 1.88744228E-02;
  COFD[3908] = -2.14189826E+01;
  COFD[3909] = 4.85433278E+00;
  COFD[3910] = -3.53258974E-01;
  COFD[3911] = 1.28503760E-02;
  COFD[3912] = -2.24063484E+01;
  COFD[3913] = 5.38918452E+00;
  COFD[3914] = -4.41385864E-01;
  COFD[3915] = 1.74122637E-02;
  COFD[3916] = -2.24242060E+01;
  COFD[3917] = 5.41204570E+00;
  COFD[3918] = -4.45647651E-01;
  COFD[3919] = 1.76482725E-02;
  COFD[3920] = -2.19461414E+01;
  COFD[3921] = 4.99238651E+00;
  COFD[3922] = -3.75026436E-01;
  COFD[3923] = 1.39466941E-02;
  COFD[3924] = -2.25933772E+01;
  COFD[3925] = 5.42562555E+00;
  COFD[3926] = -4.48132861E-01;
  COFD[3927] = 1.77847329E-02;
  COFD[3928] = -2.25933772E+01;
  COFD[3929] = 5.42562555E+00;
  COFD[3930] = -4.48132861E-01;
  COFD[3931] = 1.77847329E-02;
  COFD[3932] = -2.25999325E+01;
  COFD[3933] = 5.42562555E+00;
  COFD[3934] = -4.48132861E-01;
  COFD[3935] = 1.77847329E-02;
  COFD[3936] = -2.15763414E+01;
  COFD[3937] = 4.74313639E+00;
  COFD[3938] = -3.35584534E-01;
  COFD[3939] = 1.19568362E-02;
  COFD[3940] = -2.13682088E+01;
  COFD[3941] = 4.63852747E+00;
  COFD[3942] = -3.19031243E-01;
  COFD[3943] = 1.11224841E-02;
  COFD[3944] = -1.92062965E+01;
  COFD[3945] = 4.66318669E+00;
  COFD[3946] = -3.89108667E-01;
  COFD[3947] = 1.68165377E-02;
  COFD[3948] = -1.80724704E+01;
  COFD[3949] = 4.40247898E+00;
  COFD[3950] = -3.57238362E-01;
  COFD[3951] = 1.55145651E-02;
  COFD[3952] = -1.87481939E+01;
  COFD[3953] = 5.13858656E+00;
  COFD[3954] = -4.45075387E-01;
  COFD[3955] = 1.90137309E-02;
  COFD[3956] = -1.80945621E+01;
  COFD[3957] = 4.40247898E+00;
  COFD[3958] = -3.57238362E-01;
  COFD[3959] = 1.55145651E-02;
  COFD[3960] = -1.47138094E+01;
  COFD[3961] = 3.48023191E+00;
  COFD[3962] = -2.40800798E-01;
  COFD[3963] = 1.05947990E-02;
  COFD[3964] = -1.95201761E+01;
  COFD[3965] = 4.77151544E+00;
  COFD[3966] = -4.01882811E-01;
  COFD[3967] = 1.73184814E-02;
  COFD[3968] = -2.08879106E+01;
  COFD[3969] = 4.92602269E+00;
  COFD[3970] = -3.64572914E-01;
  COFD[3971] = 1.34203681E-02;
  COFD[3972] = -1.95374781E+01;
  COFD[3973] = 4.77151544E+00;
  COFD[3974] = -4.01882811E-01;
  COFD[3975] = 1.73184814E-02;
  COFD[3976] = -1.95290165E+01;
  COFD[3977] = 4.77151544E+00;
  COFD[3978] = -4.01882811E-01;
  COFD[3979] = 1.73184814E-02;
  COFD[3980] = -2.03711770E+01;
  COFD[3981] = 5.13279789E+00;
  COFD[3982] = -4.44474174E-01;
  COFD[3983] = 1.89937678E-02;
  COFD[3984] = -2.17926818E+01;
  COFD[3985] = 5.19232842E+00;
  COFD[3986] = -4.07643284E-01;
  COFD[3987] = 1.56246434E-02;
  COFD[3988] = -2.03971282E+01;
  COFD[3989] = 5.13279789E+00;
  COFD[3990] = -4.44474174E-01;
  COFD[3991] = 1.89937678E-02;
  COFD[3992] = -1.92333972E+01;
  COFD[3993] = 4.67033934E+00;
  COFD[3994] = -3.89971551E-01;
  COFD[3995] = 1.68513441E-02;
  COFD[3996] = -2.21713895E+01;
  COFD[3997] = 5.41196486E+00;
  COFD[3998] = -4.45632422E-01;
  COFD[3999] = 1.76474237E-02;
  COFD[4000] = -2.22600832E+01;
  COFD[4001] = 5.59632316E+00;
  COFD[4002] = -4.91568011E-01;
  COFD[4003] = 2.05156966E-02;
  COFD[4004] = -2.03526104E+01;
  COFD[4005] = 5.11453301E+00;
  COFD[4006] = -4.42447016E-01;
  COFD[4007] = 1.89196698E-02;
  COFD[4008] = -2.19617242E+01;
  COFD[4009] = 5.57026255E+00;
  COFD[4010] = -4.89178491E-01;
  COFD[4011] = 2.04505218E-02;
  COFD[4012] = -2.22701944E+01;
  COFD[4013] = 5.59632316E+00;
  COFD[4014] = -4.91568011E-01;
  COFD[4015] = 2.05156966E-02;
  COFD[4016] = -2.22051951E+01;
  COFD[4017] = 5.58604166E+00;
  COFD[4018] = -4.90602184E-01;
  COFD[4019] = 2.04880352E-02;
  COFD[4020] = -2.17825494E+01;
  COFD[4021] = 5.19232842E+00;
  COFD[4022] = -4.07643284E-01;
  COFD[4023] = 1.56246434E-02;
  COFD[4024] = -2.19919420E+01;
  COFD[4025] = 5.23595129E+00;
  COFD[4026] = -4.15079064E-01;
  COFD[4027] = 1.60168286E-02;
  COFD[4028] = -2.19969833E+01;
  COFD[4029] = 5.23595129E+00;
  COFD[4030] = -4.15079064E-01;
  COFD[4031] = 1.60168286E-02;
  COFD[4032] = -2.21795337E+01;
  COFD[4033] = 5.61233637E+00;
  COFD[4034] = -4.91419253E-01;
  COFD[4035] = 2.04216738E-02;
  COFD[4036] = -2.04750296E+01;
  COFD[4037] = 5.15745622E+00;
  COFD[4038] = -4.46648283E-01;
  COFD[4039] = 1.90458987E-02;
  COFD[4040] = -2.21912865E+01;
  COFD[4041] = 5.61233637E+00;
  COFD[4042] = -4.91419253E-01;
  COFD[4043] = 2.04216738E-02;
  COFD[4044] = -2.22604939E+01;
  COFD[4045] = 5.36643605E+00;
  COFD[4046] = -4.37440735E-01;
  COFD[4047] = 1.72016388E-02;
  COFD[4048] = -2.25161193E+01;
  COFD[4049] = 5.58521783E+00;
  COFD[4050] = -4.80947522E-01;
  COFD[4051] = 1.96897222E-02;
  COFD[4052] = -2.24797356E+01;
  COFD[4053] = 5.58492389E+00;
  COFD[4054] = -4.81921515E-01;
  COFD[4055] = 1.97721229E-02;
  COFD[4056] = -2.25933772E+01;
  COFD[4057] = 5.42562555E+00;
  COFD[4058] = -4.48132861E-01;
  COFD[4059] = 1.77847329E-02;
  COFD[4060] = -2.26149331E+01;
  COFD[4061] = 5.58414475E+00;
  COFD[4062] = -4.82375215E-01;
  COFD[4063] = 1.98138565E-02;
  COFD[4064] = -2.26149331E+01;
  COFD[4065] = 5.58414475E+00;
  COFD[4066] = -4.82375215E-01;
  COFD[4067] = 1.98138565E-02;
  COFD[4068] = -2.26206807E+01;
  COFD[4069] = 5.58414475E+00;
  COFD[4070] = -4.82375215E-01;
  COFD[4071] = 1.98138565E-02;
  COFD[4072] = -2.24927381E+01;
  COFD[4073] = 5.29529316E+00;
  COFD[4074] = -4.25345414E-01;
  COFD[4075] = 1.65635428E-02;
  COFD[4076] = -2.23925953E+01;
  COFD[4077] = 5.23666690E+00;
  COFD[4078] = -4.15204403E-01;
  COFD[4079] = 1.60235416E-02;
  COFD[4080] = -1.92062965E+01;
  COFD[4081] = 4.66318669E+00;
  COFD[4082] = -3.89108667E-01;
  COFD[4083] = 1.68165377E-02;
  COFD[4084] = -1.80724704E+01;
  COFD[4085] = 4.40247898E+00;
  COFD[4086] = -3.57238362E-01;
  COFD[4087] = 1.55145651E-02;
  COFD[4088] = -1.87481939E+01;
  COFD[4089] = 5.13858656E+00;
  COFD[4090] = -4.45075387E-01;
  COFD[4091] = 1.90137309E-02;
  COFD[4092] = -1.80945621E+01;
  COFD[4093] = 4.40247898E+00;
  COFD[4094] = -3.57238362E-01;
  COFD[4095] = 1.55145651E-02;
  COFD[4096] = -1.47138094E+01;
  COFD[4097] = 3.48023191E+00;
  COFD[4098] = -2.40800798E-01;
  COFD[4099] = 1.05947990E-02;
  COFD[4100] = -1.95201761E+01;
  COFD[4101] = 4.77151544E+00;
  COFD[4102] = -4.01882811E-01;
  COFD[4103] = 1.73184814E-02;
  COFD[4104] = -2.08879106E+01;
  COFD[4105] = 4.92602269E+00;
  COFD[4106] = -3.64572914E-01;
  COFD[4107] = 1.34203681E-02;
  COFD[4108] = -1.95374781E+01;
  COFD[4109] = 4.77151544E+00;
  COFD[4110] = -4.01882811E-01;
  COFD[4111] = 1.73184814E-02;
  COFD[4112] = -1.95290165E+01;
  COFD[4113] = 4.77151544E+00;
  COFD[4114] = -4.01882811E-01;
  COFD[4115] = 1.73184814E-02;
  COFD[4116] = -2.03711770E+01;
  COFD[4117] = 5.13279789E+00;
  COFD[4118] = -4.44474174E-01;
  COFD[4119] = 1.89937678E-02;
  COFD[4120] = -2.17926818E+01;
  COFD[4121] = 5.19232842E+00;
  COFD[4122] = -4.07643284E-01;
  COFD[4123] = 1.56246434E-02;
  COFD[4124] = -2.03971282E+01;
  COFD[4125] = 5.13279789E+00;
  COFD[4126] = -4.44474174E-01;
  COFD[4127] = 1.89937678E-02;
  COFD[4128] = -1.92333972E+01;
  COFD[4129] = 4.67033934E+00;
  COFD[4130] = -3.89971551E-01;
  COFD[4131] = 1.68513441E-02;
  COFD[4132] = -2.21713895E+01;
  COFD[4133] = 5.41196486E+00;
  COFD[4134] = -4.45632422E-01;
  COFD[4135] = 1.76474237E-02;
  COFD[4136] = -2.22600832E+01;
  COFD[4137] = 5.59632316E+00;
  COFD[4138] = -4.91568011E-01;
  COFD[4139] = 2.05156966E-02;
  COFD[4140] = -2.03526104E+01;
  COFD[4141] = 5.11453301E+00;
  COFD[4142] = -4.42447016E-01;
  COFD[4143] = 1.89196698E-02;
  COFD[4144] = -2.19617242E+01;
  COFD[4145] = 5.57026255E+00;
  COFD[4146] = -4.89178491E-01;
  COFD[4147] = 2.04505218E-02;
  COFD[4148] = -2.22701944E+01;
  COFD[4149] = 5.59632316E+00;
  COFD[4150] = -4.91568011E-01;
  COFD[4151] = 2.05156966E-02;
  COFD[4152] = -2.22051951E+01;
  COFD[4153] = 5.58604166E+00;
  COFD[4154] = -4.90602184E-01;
  COFD[4155] = 2.04880352E-02;
  COFD[4156] = -2.17825494E+01;
  COFD[4157] = 5.19232842E+00;
  COFD[4158] = -4.07643284E-01;
  COFD[4159] = 1.56246434E-02;
  COFD[4160] = -2.19919420E+01;
  COFD[4161] = 5.23595129E+00;
  COFD[4162] = -4.15079064E-01;
  COFD[4163] = 1.60168286E-02;
  COFD[4164] = -2.19969833E+01;
  COFD[4165] = 5.23595129E+00;
  COFD[4166] = -4.15079064E-01;
  COFD[4167] = 1.60168286E-02;
  COFD[4168] = -2.21795337E+01;
  COFD[4169] = 5.61233637E+00;
  COFD[4170] = -4.91419253E-01;
  COFD[4171] = 2.04216738E-02;
  COFD[4172] = -2.04750296E+01;
  COFD[4173] = 5.15745622E+00;
  COFD[4174] = -4.46648283E-01;
  COFD[4175] = 1.90458987E-02;
  COFD[4176] = -2.21912865E+01;
  COFD[4177] = 5.61233637E+00;
  COFD[4178] = -4.91419253E-01;
  COFD[4179] = 2.04216738E-02;
  COFD[4180] = -2.22604939E+01;
  COFD[4181] = 5.36643605E+00;
  COFD[4182] = -4.37440735E-01;
  COFD[4183] = 1.72016388E-02;
  COFD[4184] = -2.25161193E+01;
  COFD[4185] = 5.58521783E+00;
  COFD[4186] = -4.80947522E-01;
  COFD[4187] = 1.96897222E-02;
  COFD[4188] = -2.24797356E+01;
  COFD[4189] = 5.58492389E+00;
  COFD[4190] = -4.81921515E-01;
  COFD[4191] = 1.97721229E-02;
  COFD[4192] = -2.25933772E+01;
  COFD[4193] = 5.42562555E+00;
  COFD[4194] = -4.48132861E-01;
  COFD[4195] = 1.77847329E-02;
  COFD[4196] = -2.26149331E+01;
  COFD[4197] = 5.58414475E+00;
  COFD[4198] = -4.82375215E-01;
  COFD[4199] = 1.98138565E-02;
  COFD[4200] = -2.26149331E+01;
  COFD[4201] = 5.58414475E+00;
  COFD[4202] = -4.82375215E-01;
  COFD[4203] = 1.98138565E-02;
  COFD[4204] = -2.26206807E+01;
  COFD[4205] = 5.58414475E+00;
  COFD[4206] = -4.82375215E-01;
  COFD[4207] = 1.98138565E-02;
  COFD[4208] = -2.24927381E+01;
  COFD[4209] = 5.29529316E+00;
  COFD[4210] = -4.25345414E-01;
  COFD[4211] = 1.65635428E-02;
  COFD[4212] = -2.23925953E+01;
  COFD[4213] = 5.23666690E+00;
  COFD[4214] = -4.15204403E-01;
  COFD[4215] = 1.60235416E-02;
  COFD[4216] = -1.92108200E+01;
  COFD[4217] = 4.66318669E+00;
  COFD[4218] = -3.89108667E-01;
  COFD[4219] = 1.68165377E-02;
  COFD[4220] = -1.80755747E+01;
  COFD[4221] = 4.40247898E+00;
  COFD[4222] = -3.57238362E-01;
  COFD[4223] = 1.55145651E-02;
  COFD[4224] = -1.87484553E+01;
  COFD[4225] = 5.13858656E+00;
  COFD[4226] = -4.45075387E-01;
  COFD[4227] = 1.90137309E-02;
  COFD[4228] = -1.80978071E+01;
  COFD[4229] = 4.40247898E+00;
  COFD[4230] = -3.57238362E-01;
  COFD[4231] = 1.55145651E-02;
  COFD[4232] = -1.47143206E+01;
  COFD[4233] = 3.48023191E+00;
  COFD[4234] = -2.40800798E-01;
  COFD[4235] = 1.05947990E-02;
  COFD[4236] = -1.95250705E+01;
  COFD[4237] = 4.77151544E+00;
  COFD[4238] = -4.01882811E-01;
  COFD[4239] = 1.73184814E-02;
  COFD[4240] = -2.08912917E+01;
  COFD[4241] = 4.92602269E+00;
  COFD[4242] = -3.64572914E-01;
  COFD[4243] = 1.34203681E-02;
  COFD[4244] = -1.95425458E+01;
  COFD[4245] = 4.77151544E+00;
  COFD[4246] = -4.01882811E-01;
  COFD[4247] = 1.73184814E-02;
  COFD[4248] = -1.95339987E+01;
  COFD[4249] = 4.77151544E+00;
  COFD[4250] = -4.01882811E-01;
  COFD[4251] = 1.73184814E-02;
  COFD[4252] = -2.03739918E+01;
  COFD[4253] = 5.13279789E+00;
  COFD[4254] = -4.44474174E-01;
  COFD[4255] = 1.89937678E-02;
  COFD[4256] = -2.17973977E+01;
  COFD[4257] = 5.19232842E+00;
  COFD[4258] = -4.07643284E-01;
  COFD[4259] = 1.56246434E-02;
  COFD[4260] = -2.04000934E+01;
  COFD[4261] = 5.13279789E+00;
  COFD[4262] = -4.44474174E-01;
  COFD[4263] = 1.89937678E-02;
  COFD[4264] = -1.92379203E+01;
  COFD[4265] = 4.67033934E+00;
  COFD[4266] = -3.89971551E-01;
  COFD[4267] = 1.68513441E-02;
  COFD[4268] = -2.21761978E+01;
  COFD[4269] = 5.41196486E+00;
  COFD[4270] = -4.45632422E-01;
  COFD[4271] = 1.76474237E-02;
  COFD[4272] = -2.22647082E+01;
  COFD[4273] = 5.59632316E+00;
  COFD[4274] = -4.91568011E-01;
  COFD[4275] = 2.05156966E-02;
  COFD[4276] = -2.03557209E+01;
  COFD[4277] = 5.11453301E+00;
  COFD[4278] = -4.42447016E-01;
  COFD[4279] = 1.89196698E-02;
  COFD[4280] = -2.19662516E+01;
  COFD[4281] = 5.57026255E+00;
  COFD[4282] = -4.89178491E-01;
  COFD[4283] = 2.04505218E-02;
  COFD[4284] = -2.22749144E+01;
  COFD[4285] = 5.59632316E+00;
  COFD[4286] = -4.91568011E-01;
  COFD[4287] = 2.05156966E-02;
  COFD[4288] = -2.22110038E+01;
  COFD[4289] = 5.58604166E+00;
  COFD[4290] = -4.90602184E-01;
  COFD[4291] = 2.04880352E-02;
  COFD[4292] = -2.17871702E+01;
  COFD[4293] = 5.19232842E+00;
  COFD[4294] = -4.07643284E-01;
  COFD[4295] = 1.56246434E-02;
  COFD[4296] = -2.19979426E+01;
  COFD[4297] = 5.23595129E+00;
  COFD[4298] = -4.15079064E-01;
  COFD[4299] = 1.60168286E-02;
  COFD[4300] = -2.20030451E+01;
  COFD[4301] = 5.23595129E+00;
  COFD[4302] = -4.15079064E-01;
  COFD[4303] = 1.60168286E-02;
  COFD[4304] = -2.21838574E+01;
  COFD[4305] = 5.61233637E+00;
  COFD[4306] = -4.91419253E-01;
  COFD[4307] = 2.04216738E-02;
  COFD[4308] = -2.04806356E+01;
  COFD[4309] = 5.15745622E+00;
  COFD[4310] = -4.46648283E-01;
  COFD[4311] = 1.90458987E-02;
  COFD[4312] = -2.21957135E+01;
  COFD[4313] = 5.61233637E+00;
  COFD[4314] = -4.91419253E-01;
  COFD[4315] = 2.04216738E-02;
  COFD[4316] = -2.22662385E+01;
  COFD[4317] = 5.36643605E+00;
  COFD[4318] = -4.37440735E-01;
  COFD[4319] = 1.72016388E-02;
  COFD[4320] = -2.25217284E+01;
  COFD[4321] = 5.58521783E+00;
  COFD[4322] = -4.80947522E-01;
  COFD[4323] = 1.96897222E-02;
  COFD[4324] = -2.24854147E+01;
  COFD[4325] = 5.58492389E+00;
  COFD[4326] = -4.81921515E-01;
  COFD[4327] = 1.97721229E-02;
  COFD[4328] = -2.25999325E+01;
  COFD[4329] = 5.42562555E+00;
  COFD[4330] = -4.48132861E-01;
  COFD[4331] = 1.77847329E-02;
  COFD[4332] = -2.26206807E+01;
  COFD[4333] = 5.58414475E+00;
  COFD[4334] = -4.82375215E-01;
  COFD[4335] = 1.98138565E-02;
  COFD[4336] = -2.26206807E+01;
  COFD[4337] = 5.58414475E+00;
  COFD[4338] = -4.82375215E-01;
  COFD[4339] = 1.98138565E-02;
  COFD[4340] = -2.26264951E+01;
  COFD[4341] = 5.58414475E+00;
  COFD[4342] = -4.82375215E-01;
  COFD[4343] = 1.98138565E-02;
  COFD[4344] = -2.25000533E+01;
  COFD[4345] = 5.29529316E+00;
  COFD[4346] = -4.25345414E-01;
  COFD[4347] = 1.65635428E-02;
  COFD[4348] = -2.23999105E+01;
  COFD[4349] = 5.23666690E+00;
  COFD[4350] = -4.15204403E-01;
  COFD[4351] = 1.60235416E-02;
  COFD[4352] = -2.08314127E+01;
  COFD[4353] = 5.16623525E+00;
  COFD[4354] = -4.47455297E-01;
  COFD[4355] = 1.90672495E-02;
  COFD[4356] = -1.96652628E+01;
  COFD[4357] = 4.92149009E+00;
  COFD[4358] = -4.19702348E-01;
  COFD[4359] = 1.80250370E-02;
  COFD[4360] = -1.99920054E+01;
  COFD[4361] = 5.50111590E+00;
  COFD[4362] = -4.82434754E-01;
  COFD[4363] = 2.02461869E-02;
  COFD[4364] = -1.96903093E+01;
  COFD[4365] = 4.92149009E+00;
  COFD[4366] = -4.19702348E-01;
  COFD[4367] = 1.80250370E-02;
  COFD[4368] = -1.63371456E+01;
  COFD[4369] = 4.06047389E+00;
  COFD[4370] = -3.15033724E-01;
  COFD[4371] = 1.37721357E-02;
  COFD[4372] = -2.12147498E+01;
  COFD[4373] = 5.29477849E+00;
  COFD[4374] = -4.62516361E-01;
  COFD[4375] = 1.96564010E-02;
  COFD[4376] = -1.76259770E+01;
  COFD[4377] = 3.29707252E+00;
  COFD[4378] = -1.19066656E-01;
  COFD[4379] = 1.47805346E-03;
  COFD[4380] = -2.11103883E+01;
  COFD[4381] = 5.25151362E+00;
  COFD[4382] = -4.57337706E-01;
  COFD[4383] = 1.94489055E-02;
  COFD[4384] = -2.10999880E+01;
  COFD[4385] = 5.25151362E+00;
  COFD[4386] = -4.57337706E-01;
  COFD[4387] = 1.94489055E-02;
  COFD[4388] = -2.16464705E+01;
  COFD[4389] = 5.49325617E+00;
  COFD[4390] = -4.81586493E-01;
  COFD[4391] = 2.02162204E-02;
  COFD[4392] = -2.01633600E+01;
  COFD[4393] = 4.26535185E+00;
  COFD[4394] = -2.61127236E-01;
  COFD[4395] = 8.24369619E-03;
  COFD[4396] = -2.16755450E+01;
  COFD[4397] = 5.49325617E+00;
  COFD[4398] = -4.81586493E-01;
  COFD[4399] = 2.02162204E-02;
  COFD[4400] = -2.08660712E+01;
  COFD[4401] = 5.17548475E+00;
  COFD[4402] = -4.48496901E-01;
  COFD[4403] = 1.91060174E-02;
  COFD[4404] = -2.03466930E+01;
  COFD[4405] = 4.38969478E+00;
  COFD[4406] = -2.84615292E-01;
  COFD[4407] = 9.55641499E-03;
  COFD[4408] = -2.25524850E+01;
  COFD[4409] = 5.50138987E+00;
  COFD[4410] = -4.62503139E-01;
  COFD[4411] = 1.85883715E-02;
  COFD[4412] = -2.17407702E+01;
  COFD[4413] = 5.50870831E+00;
  COFD[4414] = -4.83264913E-01;
  COFD[4415] = 2.02760942E-02;
  COFD[4416] = -2.23572754E+01;
  COFD[4417] = 5.52017185E+00;
  COFD[4418] = -4.66659932E-01;
  COFD[4419] = 1.88373100E-02;
  COFD[4420] = -2.25647173E+01;
  COFD[4421] = 5.50138987E+00;
  COFD[4422] = -4.62503139E-01;
  COFD[4423] = 1.85883715E-02;
  COFD[4424] = -2.25695566E+01;
  COFD[4425] = 5.49903770E+00;
  COFD[4426] = -4.61784832E-01;
  COFD[4427] = 1.85410071E-02;
  COFD[4428] = -2.01511043E+01;
  COFD[4429] = 4.26535185E+00;
  COFD[4430] = -2.61127236E-01;
  COFD[4431] = 8.24369619E-03;
  COFD[4432] = -2.05127936E+01;
  COFD[4433] = 4.35981364E+00;
  COFD[4434] = -2.75585363E-01;
  COFD[4435] = 8.95565009E-03;
  COFD[4436] = -2.05192861E+01;
  COFD[4437] = 4.35981364E+00;
  COFD[4438] = -2.75585363E-01;
  COFD[4439] = 8.95565009E-03;
  COFD[4440] = -2.23166808E+01;
  COFD[4441] = 5.44889462E+00;
  COFD[4442] = -4.52325002E-01;
  COFD[4443] = 1.80132629E-02;
  COFD[4444] = -2.18644448E+01;
  COFD[4445] = 5.53438558E+00;
  COFD[4446] = -4.85873757E-01;
  COFD[4447] = 2.03606278E-02;
  COFD[4448] = -2.23307126E+01;
  COFD[4449] = 5.44889462E+00;
  COFD[4450] = -4.52325002E-01;
  COFD[4451] = 1.80132629E-02;
  COFD[4452] = -2.10617011E+01;
  COFD[4453] = 4.61245983E+00;
  COFD[4454] = -3.14873896E-01;
  COFD[4455] = 1.09118770E-02;
  COFD[4456] = -2.22719227E+01;
  COFD[4457] = 5.24354480E+00;
  COFD[4458] = -4.16412182E-01;
  COFD[4459] = 1.60883090E-02;
  COFD[4460] = -2.23086331E+01;
  COFD[4461] = 5.27409919E+00;
  COFD[4462] = -4.21767988E-01;
  COFD[4463] = 1.63754073E-02;
  COFD[4464] = -2.15763414E+01;
  COFD[4465] = 4.74313639E+00;
  COFD[4466] = -3.35584534E-01;
  COFD[4467] = 1.19568362E-02;
  COFD[4468] = -2.24927381E+01;
  COFD[4469] = 5.29529316E+00;
  COFD[4470] = -4.25345414E-01;
  COFD[4471] = 1.65635428E-02;
  COFD[4472] = -2.24927381E+01;
  COFD[4473] = 5.29529316E+00;
  COFD[4474] = -4.25345414E-01;
  COFD[4475] = 1.65635428E-02;
  COFD[4476] = -2.25000533E+01;
  COFD[4477] = 5.29529316E+00;
  COFD[4478] = -4.25345414E-01;
  COFD[4479] = 1.65635428E-02;
  COFD[4480] = -2.08265486E+01;
  COFD[4481] = 4.32912632E+00;
  COFD[4482] = -2.73390458E-01;
  COFD[4483] = 8.93695666E-03;
  COFD[4484] = -2.05649836E+01;
  COFD[4485] = 4.20297189E+00;
  COFD[4486] = -2.53989226E-01;
  COFD[4487] = 7.97846637E-03;
  COFD[4488] = -2.09943556E+01;
  COFD[4489] = 5.22468470E+00;
  COFD[4490] = -4.54220132E-01;
  COFD[4491] = 1.93281044E-02;
  COFD[4492] = -1.98296142E+01;
  COFD[4493] = 4.98207523E+00;
  COFD[4494] = -4.26877291E-01;
  COFD[4495] = 1.83086094E-02;
  COFD[4496] = -2.01263081E+01;
  COFD[4497] = 5.54581286E+00;
  COFD[4498] = -4.87014004E-01;
  COFD[4499] = 2.03965482E-02;
  COFD[4500] = -1.98546608E+01;
  COFD[4501] = 4.98207523E+00;
  COFD[4502] = -4.26877291E-01;
  COFD[4503] = 1.83086094E-02;
  COFD[4504] = -1.64819341E+01;
  COFD[4505] = 4.11726218E+00;
  COFD[4506] = -3.22193019E-01;
  COFD[4507] = 1.40747076E-02;
  COFD[4508] = -2.13698628E+01;
  COFD[4509] = 5.34971867E+00;
  COFD[4510] = -4.68771124E-01;
  COFD[4511] = 1.98933811E-02;
  COFD[4512] = -1.73636810E+01;
  COFD[4513] = 3.17377062E+00;
  COFD[4514] = -1.00394281E-01;
  COFD[4515] = 5.69079042E-04;
  COFD[4516] = -2.13011075E+01;
  COFD[4517] = 5.32167660E+00;
  COFD[4518] = -4.65740624E-01;
  COFD[4519] = 1.97861081E-02;
  COFD[4520] = -2.12907071E+01;
  COFD[4521] = 5.32167660E+00;
  COFD[4522] = -4.65740624E-01;
  COFD[4523] = 1.97861081E-02;
  COFD[4524] = -2.17867290E+01;
  COFD[4525] = 5.53950393E+00;
  COFD[4526] = -4.86376204E-01;
  COFD[4527] = 2.03760106E-02;
  COFD[4528] = -1.98359696E+01;
  COFD[4529] = 4.11158627E+00;
  COFD[4530] = -2.37831519E-01;
  COFD[4531] = 7.10363413E-03;
  COFD[4532] = -2.18158035E+01;
  COFD[4533] = 5.53950393E+00;
  COFD[4534] = -4.86376204E-01;
  COFD[4535] = 2.03760106E-02;
  COFD[4536] = -2.10310667E+01;
  COFD[4537] = 5.23485509E+00;
  COFD[4538] = -4.55400366E-01;
  COFD[4539] = 1.93737681E-02;
  COFD[4540] = -2.01613345E+01;
  COFD[4541] = 4.29679581E+00;
  COFD[4542] = -2.69915991E-01;
  COFD[4543] = 8.81736698E-03;
  COFD[4544] = -2.25180169E+01;
  COFD[4545] = 5.47136127E+00;
  COFD[4546] = -4.56417141E-01;
  COFD[4547] = 1.82376994E-02;
  COFD[4548] = -2.18731915E+01;
  COFD[4549] = 5.55171663E+00;
  COFD[4550] = -4.87609507E-01;
  COFD[4551] = 2.04156591E-02;
  COFD[4552] = -2.23434209E+01;
  COFD[4553] = 5.49927389E+00;
  COFD[4554] = -4.61845436E-01;
  COFD[4555] = 1.85448066E-02;
  COFD[4556] = -2.25302492E+01;
  COFD[4557] = 5.47136127E+00;
  COFD[4558] = -4.56417141E-01;
  COFD[4559] = 1.82376994E-02;
  COFD[4560] = -2.25168001E+01;
  COFD[4561] = 5.46125556E+00;
  COFD[4562] = -4.54580945E-01;
  COFD[4563] = 1.81370926E-02;
  COFD[4564] = -1.98237139E+01;
  COFD[4565] = 4.11158627E+00;
  COFD[4566] = -2.37831519E-01;
  COFD[4567] = 7.10363413E-03;
  COFD[4568] = -2.02246048E+01;
  COFD[4569] = 4.22278378E+00;
  COFD[4570] = -2.54653500E-01;
  COFD[4571] = 7.92616085E-03;
  COFD[4572] = -2.02310973E+01;
  COFD[4573] = 4.22278378E+00;
  COFD[4574] = -2.54653500E-01;
  COFD[4575] = 7.92616085E-03;
  COFD[4576] = -2.22462092E+01;
  COFD[4577] = 5.40356304E+00;
  COFD[4578] = -4.44060256E-01;
  COFD[4579] = 1.75601121E-02;
  COFD[4580] = -2.19764095E+01;
  COFD[4581] = 5.56943713E+00;
  COFD[4582] = -4.89114655E-01;
  COFD[4583] = 2.04494661E-02;
  COFD[4584] = -2.22602410E+01;
  COFD[4585] = 5.40356304E+00;
  COFD[4586] = -4.44060256E-01;
  COFD[4587] = 1.75601121E-02;
  COFD[4588] = -2.08429266E+01;
  COFD[4589] = 4.50409026E+00;
  COFD[4590] = -2.97868419E-01;
  COFD[4591] = 1.00604224E-02;
  COFD[4592] = -2.21603612E+01;
  COFD[4593] = 5.18050127E+00;
  COFD[4594] = -4.05688517E-01;
  COFD[4595] = 1.55231713E-02;
  COFD[4596] = -2.22169851E+01;
  COFD[4597] = 5.21950983E+00;
  COFD[4598] = -4.12223195E-01;
  COFD[4599] = 1.58645894E-02;
  COFD[4600] = -2.13682088E+01;
  COFD[4601] = 4.63852747E+00;
  COFD[4602] = -3.19031243E-01;
  COFD[4603] = 1.11224841E-02;
  COFD[4604] = -2.23925953E+01;
  COFD[4605] = 5.23666690E+00;
  COFD[4606] = -4.15204403E-01;
  COFD[4607] = 1.60235416E-02;
  COFD[4608] = -2.23925953E+01;
  COFD[4609] = 5.23666690E+00;
  COFD[4610] = -4.15204403E-01;
  COFD[4611] = 1.60235416E-02;
  COFD[4612] = -2.23999105E+01;
  COFD[4613] = 5.23666690E+00;
  COFD[4614] = -4.15204403E-01;
  COFD[4615] = 1.60235416E-02;
  COFD[4616] = -2.05649836E+01;
  COFD[4617] = 4.20297189E+00;
  COFD[4618] = -2.53989226E-01;
  COFD[4619] = 7.97846637E-03;
  COFD[4620] = -2.02827997E+01;
  COFD[4621] = 4.06866041E+00;
  COFD[4622] = -2.33527074E-01;
  COFD[4623] = 6.97454094E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 2;
  KTDIF[1] = 4;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 2.01521521E-01;
  COFTD[1] = 5.62743751E-04;
  COFTD[2] = -3.08519054E-07;
  COFTD[3] = 5.22805672E-11;
  COFTD[4] = 2.35281489E-01;
  COFTD[5] = 4.65667373E-04;
  COFTD[6] = -2.60938016E-07;
  COFTD[7] = 4.49268709E-11;
  COFTD[8] = 0.00000000E+00;
  COFTD[9] = 0.00000000E+00;
  COFTD[10] = 0.00000000E+00;
  COFTD[11] = 0.00000000E+00;
  COFTD[12] = 2.37051899E-01;
  COFTD[13] = 4.69171356E-04;
  COFTD[14] = -2.62901483E-07;
  COFTD[15] = 4.52649298E-11;
  COFTD[16] = 1.44152190E-01;
  COFTD[17] = 7.99993584E-05;
  COFTD[18] = -4.89707442E-08;
  COFTD[19] = 9.14277269E-12;
  COFTD[20] = 1.79839678E-01;
  COFTD[21] = 6.01720824E-04;
  COFTD[22] = -3.26432767E-07;
  COFTD[23] = 5.49110406E-11;
  COFTD[24] = -1.74351746E-01;
  COFTD[25] = 8.62242165E-04;
  COFTD[26] = -3.79543417E-07;
  COFTD[27] = 5.60259034E-11;
  COFTD[28] = 1.80513126E-01;
  COFTD[29] = 6.03974096E-04;
  COFTD[30] = -3.27655164E-07;
  COFTD[31] = 5.51166667E-11;
  COFTD[32] = 1.80186380E-01;
  COFTD[33] = 6.02880848E-04;
  COFTD[34] = -3.27062078E-07;
  COFTD[35] = 5.50169005E-11;
  COFTD[36] = 9.90747140E-02;
  COFTD[37] = 6.44198017E-04;
  COFTD[38] = -3.38484184E-07;
  COFTD[39] = 5.57353833E-11;
  COFTD[40] = -1.61357064E-01;
  COFTD[41] = 9.05917454E-04;
  COFTD[42] = -4.07877889E-07;
  COFTD[43] = 6.10624399E-11;
  COFTD[44] = 1.00038655E-01;
  COFTD[45] = 6.50465703E-04;
  COFTD[46] = -3.41777446E-07;
  COFTD[47] = 5.62776574E-11;
  COFTD[48] = 2.00119185E-01;
  COFTD[49] = 5.64791694E-04;
  COFTD[50] = -3.09444383E-07;
  COFTD[51] = 5.24137469E-11;
  COFTD[52] = -1.31244138E-01;
  COFTD[53] = 9.03898764E-04;
  COFTD[54] = -4.17830295E-07;
  COFTD[55] = 6.35723824E-11;
  COFTD[56] = -2.28105391E-02;
  COFTD[57] = 8.33468381E-04;
  COFTD[58] = -4.11968113E-07;
  COFTD[59] = 6.52857788E-11;
  COFTD[60] = 1.05123703E-01;
  COFTD[61] = 6.50663360E-04;
  COFTD[62] = -3.42563171E-07;
  COFTD[63] = 5.64801866E-11;
  COFTD[64] = -1.42100027E-02;
  COFTD[65] = 8.23809958E-04;
  COFTD[66] = -4.08994451E-07;
  COFTD[67] = 6.49897618E-11;
  COFTD[68] = -2.28637057E-02;
  COFTD[69] = 8.35411021E-04;
  COFTD[70] = -4.12928324E-07;
  COFTD[71] = 6.54379462E-11;
  COFTD[72] = -2.00308977E-02;
  COFTD[73] = 8.50438113E-04;
  COFTD[74] = -4.21063477E-07;
  COFTD[75] = 6.67958138E-11;
  COFTD[76] = -1.60980730E-01;
  COFTD[77] = 9.03804574E-04;
  COFTD[78] = -4.06926592E-07;
  COFTD[79] = 6.09200234E-11;
  COFTD[80] = -1.59826602E-01;
  COFTD[81] = 9.28229412E-04;
  COFTD[82] = -4.20058885E-07;
  COFTD[83] = 6.30842846E-11;
  COFTD[84] = -1.59970474E-01;
  COFTD[85] = 9.29064981E-04;
  COFTD[86] = -4.20437012E-07;
  COFTD[87] = 6.31410716E-11;
  COFTD[88] = -3.81469612E-02;
  COFTD[89] = 8.39830951E-04;
  COFTD[90] = -4.11687670E-07;
  COFTD[91] = 6.49122990E-11;
  COFTD[92] = 9.86932164E-02;
  COFTD[93] = 7.20973229E-04;
  COFTD[94] = -3.77134366E-07;
  COFTD[95] = 6.19201176E-11;
  COFTD[96] = -3.82573577E-02;
  COFTD[97] = 8.42261405E-04;
  COFTD[98] = -4.12879086E-07;
  COFTD[99] = 6.51001539E-11;
  COFTD[100] = -1.41799447E-01;
  COFTD[101] = 9.22438273E-04;
  COFTD[102] = -4.23685013E-07;
  COFTD[103] = 6.42120066E-11;
  COFTD[104] = -7.78656037E-02;
  COFTD[105] = 8.92099391E-04;
  COFTD[106] = -4.27968476E-07;
  COFTD[107] = 6.65999291E-11;
  COFTD[108] = -7.23037740E-02;
  COFTD[109] = 8.89464555E-04;
  COFTD[110] = -4.28124076E-07;
  COFTD[111] = 6.67585086E-11;
  COFTD[112] = -1.32461220E-01;
  COFTD[113] = 9.30311726E-04;
  COFTD[114] = -4.30921793E-07;
  COFTD[115] = 6.56462456E-11;
  COFTD[116] = -6.92601006E-02;
  COFTD[117] = 8.88358702E-04;
  COFTD[118] = -4.28365056E-07;
  COFTD[119] = 6.68693500E-11;
  COFTD[120] = -6.92601006E-02;
  COFTD[121] = 8.88358702E-04;
  COFTD[122] = -4.28365056E-07;
  COFTD[123] = 6.68693500E-11;
  COFTD[124] = -6.93342526E-02;
  COFTD[125] = 8.89309808E-04;
  COFTD[126] = -4.28823678E-07;
  COFTD[127] = 6.69409425E-11;
  COFTD[128] = -1.54148171E-01;
  COFTD[129] = 9.42615915E-04;
  COFTD[130] = -4.29627597E-07;
  COFTD[131] = 6.48056062E-11;
  COFTD[132] = -1.62300938E-01;
  COFTD[133] = 9.43216050E-04;
  COFTD[134] = -4.26881494E-07;
  COFTD[135] = 6.41126607E-11;
  COFTD[136] = 4.31330748E-01;
  COFTD[137] = 9.20535689E-05;
  COFTD[138] = -5.94508898E-08;
  COFTD[139] = 1.21437846E-11;
  COFTD[140] = 4.06676789E-01;
  COFTD[141] = 3.84699853E-05;
  COFTD[142] = -2.54843294E-08;
  COFTD[143] = 5.86294132E-12;
  COFTD[144] = -1.44152190E-01;
  COFTD[145] = -7.99993584E-05;
  COFTD[146] = 4.89707442E-08;
  COFTD[147] = -9.14277269E-12;
  COFTD[148] = 4.12890501E-01;
  COFTD[149] = 3.90577773E-05;
  COFTD[150] = -2.58737105E-08;
  COFTD[151] = 5.95252260E-12;
  COFTD[152] = 0.00000000E+00;
  COFTD[153] = 0.00000000E+00;
  COFTD[154] = 0.00000000E+00;
  COFTD[155] = 0.00000000E+00;
  COFTD[156] = 4.26576987E-01;
  COFTD[157] = 1.20406440E-04;
  COFTD[158] = -7.67293441E-08;
  COFTD[159] = 1.52089282E-11;
  COFTD[160] = 2.27466103E-02;
  COFTD[161] = 6.73071543E-04;
  COFTD[162] = -3.40932103E-07;
  COFTD[163] = 5.48493184E-11;
  COFTD[164] = 4.29786829E-01;
  COFTD[165] = 1.21312456E-04;
  COFTD[166] = -7.73067054E-08;
  COFTD[167] = 1.53233700E-11;
  COFTD[168] = 4.28228101E-01;
  COFTD[169] = 1.20872486E-04;
  COFTD[170] = -7.70263335E-08;
  COFTD[171] = 1.52677960E-11;
  COFTD[172] = 3.24743582E-01;
  COFTD[173] = 1.77796660E-04;
  COFTD[174] = -1.08933575E-07;
  COFTD[175] = 2.03593720E-11;
  COFTD[176] = 1.22692619E-01;
  COFTD[177] = 6.21274281E-04;
  COFTD[178] = -3.29963157E-07;
  COFTD[179] = 5.47158146E-11;
  COFTD[180] = 3.31188133E-01;
  COFTD[181] = 1.81325042E-04;
  COFTD[182] = -1.11095367E-07;
  COFTD[183] = 2.07634046E-11;
  COFTD[184] = 4.30602469E-01;
  COFTD[185] = 9.35955212E-05;
  COFTD[186] = -6.03979306E-08;
  COFTD[187] = 1.23114290E-11;
  COFTD[188] = 1.40313353E-01;
  COFTD[189] = 6.01262661E-04;
  COFTD[190] = -3.21913277E-07;
  COFTD[191] = 5.36675963E-11;
  COFTD[192] = 2.76724616E-01;
  COFTD[193] = 3.87790930E-04;
  COFTD[194] = -2.22503498E-07;
  COFTD[195] = 3.90249243E-11;
  COFTD[196] = 3.39554500E-01;
  COFTD[197] = 1.79333587E-04;
  COFTD[198] = -1.10134815E-07;
  COFTD[199] = 2.06425572E-11;
  COFTD[200] = 2.82972913E-01;
  COFTD[201] = 3.73030999E-04;
  COFTD[202] = -2.14958038E-07;
  COFTD[203] = 3.78353177E-11;
  COFTD[204] = 2.78020632E-01;
  COFTD[205] = 3.89607115E-04;
  COFTD[206] = -2.23545573E-07;
  COFTD[207] = 3.92076941E-11;
  COFTD[208] = 2.93190141E-01;
  COFTD[209] = 4.01428114E-04;
  COFTD[210] = -2.30704675E-07;
  COFTD[211] = 4.05174676E-11;
  COFTD[212] = 1.22118967E-01;
  COFTD[213] = 6.18369499E-04;
  COFTD[214] = -3.28420406E-07;
  COFTD[215] = 5.44599896E-11;
  COFTD[216] = 1.36817150E-01;
  COFTD[217] = 6.41724825E-04;
  COFTD[218] = -3.42054551E-07;
  COFTD[219] = 5.68565302E-11;
  COFTD[220] = 1.37063913E-01;
  COFTD[221] = 6.42882239E-04;
  COFTD[222] = -3.42671480E-07;
  COFTD[223] = 5.69590765E-11;
  COFTD[224] = 2.58065265E-01;
  COFTD[225] = 4.05070133E-04;
  COFTD[226] = -2.30586043E-07;
  COFTD[227] = 4.01861401E-11;
  COFTD[228] = 3.86105710E-01;
  COFTD[229] = 2.28759408E-04;
  COFTD[230] = -1.39424407E-07;
  COFTD[231] = 2.58988578E-11;
  COFTD[232] = 2.59567632E-01;
  COFTD[233] = 4.07428311E-04;
  COFTD[234] = -2.31928435E-07;
  COFTD[235] = 4.04200899E-11;
  COFTD[236] = 1.59647280E-01;
  COFTD[237] = 6.04189783E-04;
  COFTD[238] = -3.25568248E-07;
  COFTD[239] = 5.45132450E-11;
  COFTD[240] = 2.34097908E-01;
  COFTD[241] = 4.91097390E-04;
  COFTD[242] = -2.74132967E-07;
  COFTD[243] = 4.70634986E-11;
  COFTD[244] = 2.40638170E-01;
  COFTD[245] = 4.82928433E-04;
  COFTD[246] = -2.70361250E-07;
  COFTD[247] = 4.65171649E-11;
  COFTD[248] = 1.77767146E-01;
  COFTD[249] = 5.98127967E-04;
  COFTD[250] = -3.24381599E-07;
  COFTD[251] = 5.45541710E-11;
  COFTD[252] = 2.44452116E-01;
  COFTD[253] = 4.78883138E-04;
  COFTD[254] = -2.68526489E-07;
  COFTD[255] = 4.62571230E-11;
  COFTD[256] = 2.44452116E-01;
  COFTD[257] = 4.78883138E-04;
  COFTD[258] = -2.68526489E-07;
  COFTD[259] = 4.62571230E-11;
  COFTD[260] = 2.44976676E-01;
  COFTD[261] = 4.79910753E-04;
  COFTD[262] = -2.69102709E-07;
  COFTD[263] = 4.63563843E-11;
  COFTD[264] = 1.43330064E-01;
  COFTD[265] = 6.59902890E-04;
  COFTD[266] = -3.52059133E-07;
  COFTD[267] = 5.85544189E-11;
  COFTD[268] = 1.31648327E-01;
  COFTD[269] = 6.75328255E-04;
  COFTD[270] = -3.58457998E-07;
  COFTD[271] = 5.94175517E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[34];
  amrex::Real SIG[34];
  amrex::Real wt[34];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: N2
  // Imported from NIST
  Tci[0] = 126.192000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (28.013400 * 28.013400 * 33.958000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (28.013400 * 33.958000);
  acentric_i[0] = 0.037200;

  // species 1: O
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: H
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: OH
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: H2
  // Imported from NIST
  Tci[4] = 33.145000;
  ai[4] = 1e6 * 0.42748 * Rcst * Rcst * Tci[4] * Tci[4] /
          (2.015880 * 2.015880 * 12.964000);
  bi[4] = 0.08664 * Rcst * Tci[4] / (2.015880 * 12.964000);
  acentric_i[4] = -0.219000;

  // species 5: O2
  // Imported from NIST
  Tci[5] = 154.581000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (31.998800 * 31.998800 * 50.430466);
  bi[5] = 0.08664 * Rcst * Tci[5] / (31.998800 * 50.430466);
  acentric_i[5] = 0.022200;

  // species 6: H2O
  // Imported from NIST
  Tci[6] = 647.096000;
  ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] /
          (18.015340 * 18.015340 * 220.640000);
  bi[6] = 0.08664 * Rcst * Tci[6] / (18.015340 * 220.640000);
  acentric_i[6] = 0.344300;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: HO2
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: CH2GSG
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: CH2O
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: CH3
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: CO
  // Imported from NIST
  Tci[12] = 132.850000;
  ai[12] = 1e6 * 0.42748 * Rcst * Rcst * Tci[12] * Tci[12] /
           (28.010000 * 28.010000 * 34.940000);
  bi[12] = 0.08664 * Rcst * Tci[12] / (28.010000 * 34.940000);
  acentric_i[12] = 0.045000;

  // species 13: CH3O
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: C2H5
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: CH4
  // Imported from NIST
  Tci[15] = 190.560000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (16.043030 * 16.043030 * 45.990000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (16.043030 * 45.990000);
  acentric_i[15] = 0.011000;

  // species 16: C2H4
  // Imported from NIST
  Tci[16] = 282.340000;
  ai[16] = 1e6 * 0.42748 * Rcst * Rcst * Tci[16] * Tci[16] /
           (28.054000 * 28.054000 * 50.410000);
  bi[16] = 0.08664 * Rcst * Tci[16] / (28.054000 * 50.410000);
  acentric_i[16] = 0.087000;

  // species 17: C2H6
  // Imported from NIST
  Tci[17] = 305.320000;
  ai[17] = 1e6 * 0.42748 * Rcst * Rcst * Tci[17] * Tci[17] /
           (30.070120 * 30.070120 * 48.720000);
  bi[17] = 0.08664 * Rcst * Tci[17] / (30.070120 * 48.720000);
  acentric_i[17] = 0.099000;

  // species 18: CO2
  // Imported from NIST
  Tci[18] = 304.120000;
  ai[18] = 1e6 * 0.42748 * Rcst * Rcst * Tci[18] * Tci[18] /
           (44.009950 * 44.009950 * 73.740000);
  bi[18] = 0.08664 * Rcst * Tci[18] / (44.009950 * 73.740000);
  acentric_i[18] = 0.225000;

  // species 19: HCO
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: CH3O2
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: CH3O2H
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: C2H2
  // Imported from NIST
  Tci[22] = 308.300000;
  ai[22] = 1e6 * 0.42748 * Rcst * Rcst * Tci[22] * Tci[22] /
           (26.038000 * 26.038000 * 61.140000);
  bi[22] = 0.08664 * Rcst * Tci[22] / (26.038000 * 61.140000);
  acentric_i[22] = 0.189000;

  // species 23: HCCO
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: C2H3
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: CH2CHO
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: C3H5XA
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: C3H6
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: C3H5O
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: IXC3H7
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: NXC3H7
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C3H8
  // Imported from NIST
  Tci[31] = 369.830000;
  ai[31] = 1e6 * 0.42748 * Rcst * Rcst * Tci[31] * Tci[31] /
           (44.097210 * 44.097210 * 42.480000);
  bi[31] = 0.08664 * Rcst * Tci[31] / (44.097210 * 42.480000);
  acentric_i[31] = 0.152000;

  // species 32: IXC3H7O2
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: NXC3H7O2
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: N2
  // Imported from NIST
  sqrtOneOverTc[0] = 8.9019282240563e-02;
  sqrtAsti[0] = 4.2022983929562e+04;
  Bi[0] = 9.5560052221563e-01;
  Fomega[0] = 5.4259343186608e-01;

  // species 1: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 9.7460146948181e-02;
  sqrtAsti[1] = 4.2500156012386e+04;
  Bi[1] = 6.6930234851885e-01;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 7.2391579785311e-02;
  sqrtAsti[2] = 5.8451221185793e+05;
  Bi[2] = 4.4006634563410e+00;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 9.7460146948181e-02;
  sqrtAsti[3] = 3.9981183985545e+04;
  Bi[3] = 6.2963299076575e-01;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: H2
  // Imported from NIST
  sqrtOneOverTc[4] = 1.7369646834812e-01;
  sqrtAsti[4] = 2.4824229305911e+05;
  Bi[4] = 9.1362254169923e+00;
  Fomega[4] = 1.3798618890700e-01;

  // species 5: O2
  // Imported from NIST
  sqrtOneOverTc[5] = 8.0430717653241e-02;
  sqrtAsti[5] = 3.6980081924740e+04;
  Bi[5] = 6.9005216444999e-01;
  Fomega[5] = 5.1945301904908e-01;

  // species 6: H2O
  // Imported from NIST
  sqrtOneOverTc[6] = 3.9311140369715e-02;
  sqrtAsti[6] = 1.3145468419592e+05;
  Bi[6] = 1.1727204136223e+00;
  Fomega[6] = 1.0013577274636e+00;

  // species 7: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[7] = 8.4114315417892e-02;
  sqrtAsti[7] = 3.2660380884830e+04;
  Bi[7] = 6.2594239211036e-01;
  Fomega[7] = 4.8508000000000e-01;

  // species 8: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[8] = 8.4114315417892e-02;
  sqrtAsti[8] = 3.3657825710980e+04;
  Bi[8] = 6.4505861132042e-01;
  Fomega[8] = 4.8508000000000e-01;

  // species 9: CH2GSG
  // Computed from Lennard-Jones
  sqrtOneOverTc[9] = 7.2642504557751e-02;
  sqrtAsti[9] = 1.0564067619908e+05;
  Bi[9] = 2.0142023516102e+00;
  Fomega[9] = 4.8508000000000e-01;

  // species 10: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[10] = 3.9062261583604e-02;
  sqrtAsti[10] = 8.4274889632487e+04;
  Bi[10] = 7.9341968505345e-01;
  Fomega[10] = 4.8508000000000e-01;

  // species 11: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[11] = 7.2642504557751e-02;
  sqrtAsti[11] = 9.8558148656101e+04;
  Bi[11] = 1.8791630452967e+00;
  Fomega[11] = 4.8508000000000e-01;

  // species 12: CO
  // Imported from NIST
  sqrtOneOverTc[12] = 8.6759935530451e-02;
  sqrtAsti[12] = 4.3619324712923e+04;
  Bi[12] = 9.7786303823350e-01;
  Fomega[12] = 5.5459948367500e-01;

  // species 13: CH3O
  // Computed from Lennard-Jones
  sqrtOneOverTc[13] = 4.2687825036676e-02;
  sqrtAsti[13] = 7.7751566794340e+04;
  Bi[13] = 8.3360142526260e-01;
  Fomega[13] = 4.8508000000000e-01;

  // species 14: C2H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 5.5409528387934e-02;
  sqrtAsti[14] = 8.1871984438529e+04;
  Bi[14] = 1.4583419820767e+00;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: CH4
  // Imported from NIST
  sqrtOneOverTc[15] = 7.2440948474968e-02;
  sqrtAsti[15] = 9.5215046085708e+04;
  Bi[15] = 1.8605203320660e+00;
  Fomega[15] = 5.0213035482700e-01;

  // species 16: C2H4
  // Imported from NIST
  sqrtOneOverTc[16] = 5.9513267432530e-02;
  sqrtAsti[16] = 7.7056842134487e+04;
  Bi[16] = 1.4381805192666e+00;
  Fomega[16] = 6.1893034120300e-01;

  // species 17: C2H6
  // Imported from NIST
  sqrtOneOverTc[17] = 5.7229819101749e-02;
  sqrtAsti[17] = 7.9078494187583e+04;
  Bi[17] = 1.5012924285481e+00;
  Fomega[17] = 6.3721234098700e-01;

  // species 18: CO2
  // Imported from NIST
  sqrtOneOverTc[18] = 5.7342616962522e-02;
  sqrtAsti[18] = 4.3745610142919e+04;
  Bi[18] = 6.7506167841745e-01;
  Fomega[18] = 8.2653709187500e-01;

  // species 19: HCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 3.9062261583604e-02;
  sqrtAsti[19] = 8.7202351509582e+04;
  Bi[19] = 8.2098075206475e-01;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: CH3O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 3.9713545161155e-02;
  sqrtAsti[20] = 5.3716999347795e+04;
  Bi[20] = 5.2191265081356e-01;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: CH3O2H
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 3.9713545161155e-02;
  sqrtAsti[21] = 5.2589905087838e+04;
  Bi[21] = 5.1096183896493e-01;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: C2H2
  // Imported from NIST
  sqrtOneOverTc[22] = 5.6952558345025e-02;
  sqrtAsti[22] = 8.2318059295808e+04;
  Bi[22] = 1.3950602011188e+00;
  Fomega[22] = 7.7293553202700e-01;

  // species 23: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 7.1174827921716e-02;
  sqrtAsti[23] = 1.9669985462832e+04;
  Bi[23] = 1.9608582502049e-01;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: C2H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 5.3518438102537e-02;
  sqrtAsti[24] = 7.2060026048447e+04;
  Bi[24] = 9.8082848983884e-01;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: CH2CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[25] = 4.1747340173827e-02;
  sqrtAsti[25] = 6.3965473795593e+04;
  Bi[25] = 7.4845537905146e-01;
  Fomega[25] = 4.8508000000000e-01;

  // species 26: C3H5XA
  // Computed from Lennard-Jones
  sqrtOneOverTc[26] = 4.9037521782533e-02;
  sqrtAsti[26] = 6.2545363519735e+04;
  Bi[26] = 9.4210223375852e-01;
  Fomega[26] = 4.8508000000000e-01;

  // species 27: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 4.9686424745000e-02;
  sqrtAsti[27] = 5.8544768922587e+04;
  Bi[27] = 8.6822458126929e-01;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: C3H5O
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 4.2998286036482e-02;
  sqrtAsti[28] = 6.2662498143370e+04;
  Bi[28] = 1.0102645839551e+00;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: IXC3H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 5.0045411792091e-02;
  sqrtAsti[29] = 7.1088330670696e+04;
  Bi[29] = 1.3297987480424e+00;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: NXC3H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 5.0045411792091e-02;
  sqrtAsti[30] = 7.1088330670696e+04;
  Bi[30] = 1.3297987480424e+00;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: C3H8
  // Imported from NIST
  sqrtOneOverTc[31] = 5.1999471688051e-02;
  sqrtAsti[31] = 6.9950481594105e+04;
  Bi[31] = 1.4221945108313e+00;
  Fomega[31] = 7.1743553324800e-01;

  // species 32: IXC3H7O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 4.0665797855695e-02;
  sqrtAsti[32] = 5.3783110472885e+04;
  Bi[32] = 8.7580922852178e-01;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: NXC3H7O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[33] = 3.9725915055603e-02;
  sqrtAsti[33] = 5.4417269370113e+04;
  Bi[33] = 8.5561896278003e-01;
  Fomega[33] = 4.8508000000000e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

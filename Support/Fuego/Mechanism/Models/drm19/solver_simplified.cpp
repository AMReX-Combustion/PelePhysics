#include "chemistry_file.H"

AMREX_GPU_HOST_DEVICE void sgjsolve_simplified(double* A, double* x, double* b) {
    double scratch_0 = 1.0/A[0];
    double scratch_1 = b[0]*scratch_0;
    double scratch_2 = A[19]*scratch_0;
    double scratch_3 = A[2]*scratch_0;
    double scratch_4 = A[1]*scratch_0;
    double scratch_5 = 1.0/(-A[22]*scratch_4 + A[23]);
    double scratch_6 = scratch_5*(-A[22]*scratch_3 + A[24]);
    double scratch_7 = scratch_3 - scratch_4*scratch_6;
    double scratch_8 = -A[44]*scratch_4 + A[45];
    double scratch_9 = 1.0/(-A[44]*scratch_3 + A[46] - scratch_6*scratch_8);
    double scratch_10 = scratch_5*(-A[22]*scratch_2 + A[41]);
    double scratch_11 = scratch_9*(-A[44]*scratch_2 + A[63] - scratch_10*scratch_8);
    double scratch_12 = A[3]*scratch_0;
    double scratch_13 = scratch_5*(-A[22]*scratch_12 + A[25]);
    double scratch_14 = scratch_9*(-A[44]*scratch_12 + A[47] - scratch_13*scratch_8);
    double scratch_15 = scratch_12 - scratch_13*scratch_4 - scratch_14*scratch_7;
    double scratch_16 = -A[66]*scratch_4 + A[67];
    double scratch_17 = -A[66]*scratch_3 + A[68] - scratch_16*scratch_6;
    double scratch_18 = 1.0/(-A[66]*scratch_12 + A[69] - scratch_13*scratch_16 - scratch_14*scratch_17);
    double scratch_19 = scratch_18*(-A[66]*scratch_2 + A[85] - scratch_10*scratch_16 - scratch_11*scratch_17);
    double scratch_20 = A[4]*scratch_0;
    double scratch_21 = scratch_5*(-A[22]*scratch_20 + A[26]);
    double scratch_22 = scratch_9*(-A[44]*scratch_20 + A[48] - scratch_21*scratch_8);
    double scratch_23 = scratch_18*(-A[66]*scratch_20 + A[70] - scratch_16*scratch_21 - scratch_17*scratch_22);
    double scratch_24 = -scratch_15*scratch_23 + scratch_20 - scratch_21*scratch_4 - scratch_22*scratch_7;
    double scratch_25 = -A[88]*scratch_4 + A[89];
    double scratch_26 = -A[88]*scratch_3 + A[90] - scratch_25*scratch_6;
    double scratch_27 = -A[88]*scratch_12 + A[91] - scratch_13*scratch_25 - scratch_14*scratch_26;
    double scratch_28 = 1.0/(-A[88]*scratch_20 + A[92] - scratch_21*scratch_25 - scratch_22*scratch_26 - scratch_23*scratch_27);
    double scratch_29 = scratch_28*(A[107] - A[88]*scratch_2 - scratch_10*scratch_25 - scratch_11*scratch_26 - scratch_19*scratch_27);
    double scratch_30 = A[5]*scratch_0;
    double scratch_31 = scratch_5*(-A[22]*scratch_30 + A[27]);
    double scratch_32 = scratch_9*(-A[44]*scratch_30 + A[49] - scratch_31*scratch_8);
    double scratch_33 = scratch_18*(-A[66]*scratch_30 + A[71] - scratch_16*scratch_31 - scratch_17*scratch_32);
    double scratch_34 = scratch_28*(-A[88]*scratch_30 + A[93] - scratch_25*scratch_31 - scratch_26*scratch_32 - scratch_27*scratch_33);
    double scratch_35 = -scratch_15*scratch_33 - scratch_24*scratch_34 + scratch_30 - scratch_31*scratch_4 - scratch_32*scratch_7;
    double scratch_36 = -A[110]*scratch_4 + A[111];
    double scratch_37 = -A[110]*scratch_3 + A[112] - scratch_36*scratch_6;
    double scratch_38 = -A[110]*scratch_12 + A[113] - scratch_13*scratch_36 - scratch_14*scratch_37;
    double scratch_39 = -A[110]*scratch_20 + A[114] - scratch_21*scratch_36 - scratch_22*scratch_37 - scratch_23*scratch_38;
    double scratch_40 = 1.0/(-A[110]*scratch_30 + A[115] - scratch_31*scratch_36 - scratch_32*scratch_37 - scratch_33*scratch_38 - scratch_34*scratch_39);
    double scratch_41 = scratch_40*(-A[110]*scratch_2 + A[129] - scratch_10*scratch_36 - scratch_11*scratch_37 - scratch_19*scratch_38 - scratch_29*scratch_39);
    double scratch_42 = A[6]*scratch_0;
    double scratch_43 = scratch_5*(-A[22]*scratch_42 + A[28]);
    double scratch_44 = scratch_9*(-A[44]*scratch_42 + A[50] - scratch_43*scratch_8);
    double scratch_45 = scratch_18*(-A[66]*scratch_42 + A[72] - scratch_16*scratch_43 - scratch_17*scratch_44);
    double scratch_46 = scratch_28*(-A[88]*scratch_42 + A[94] - scratch_25*scratch_43 - scratch_26*scratch_44 - scratch_27*scratch_45);
    double scratch_47 = scratch_40*(-A[110]*scratch_42 + A[116] - scratch_36*scratch_43 - scratch_37*scratch_44 - scratch_38*scratch_45 - scratch_39*scratch_46);
    double scratch_48 = -scratch_15*scratch_45 - scratch_24*scratch_46 - scratch_35*scratch_47 - scratch_4*scratch_43 + scratch_42 - scratch_44*scratch_7;
    double scratch_49 = -A[132]*scratch_4 + A[133];
    double scratch_50 = -A[132]*scratch_3 + A[134] - scratch_49*scratch_6;
    double scratch_51 = -A[132]*scratch_12 + A[135] - scratch_13*scratch_49 - scratch_14*scratch_50;
    double scratch_52 = -A[132]*scratch_20 + A[136] - scratch_21*scratch_49 - scratch_22*scratch_50 - scratch_23*scratch_51;
    double scratch_53 = -A[132]*scratch_30 + A[137] - scratch_31*scratch_49 - scratch_32*scratch_50 - scratch_33*scratch_51 - scratch_34*scratch_52;
    double scratch_54 = 1.0/(-A[132]*scratch_42 + A[138] - scratch_43*scratch_49 - scratch_44*scratch_50 - scratch_45*scratch_51 - scratch_46*scratch_52 - scratch_47*scratch_53);
    double scratch_55 = scratch_54*(-A[132]*scratch_2 + A[151] - scratch_10*scratch_49 - scratch_11*scratch_50 - scratch_19*scratch_51 - scratch_29*scratch_52 - scratch_41*scratch_53);
    double scratch_56 = A[7]*scratch_0;
    double scratch_57 = scratch_5*(-A[22]*scratch_56 + A[29]);
    double scratch_58 = scratch_9*(-A[44]*scratch_56 + A[51] - scratch_57*scratch_8);
    double scratch_59 = scratch_18*(-A[66]*scratch_56 + A[73] - scratch_16*scratch_57 - scratch_17*scratch_58);
    double scratch_60 = scratch_28*(-A[88]*scratch_56 + A[95] - scratch_25*scratch_57 - scratch_26*scratch_58 - scratch_27*scratch_59);
    double scratch_61 = scratch_40*(-A[110]*scratch_56 + A[117] - scratch_36*scratch_57 - scratch_37*scratch_58 - scratch_38*scratch_59 - scratch_39*scratch_60);
    double scratch_62 = scratch_54*(-A[132]*scratch_56 + A[139] - scratch_49*scratch_57 - scratch_50*scratch_58 - scratch_51*scratch_59 - scratch_52*scratch_60 - scratch_53*scratch_61);
    double scratch_63 = -scratch_15*scratch_59 - scratch_24*scratch_60 - scratch_35*scratch_61 - scratch_4*scratch_57 - scratch_48*scratch_62 + scratch_56 - scratch_58*scratch_7;
    double scratch_64 = -A[154]*scratch_4 + A[155];
    double scratch_65 = -A[154]*scratch_3 + A[156] - scratch_6*scratch_64;
    double scratch_66 = -A[154]*scratch_12 + A[157] - scratch_13*scratch_64 - scratch_14*scratch_65;
    double scratch_67 = -A[154]*scratch_20 + A[158] - scratch_21*scratch_64 - scratch_22*scratch_65 - scratch_23*scratch_66;
    double scratch_68 = -A[154]*scratch_30 + A[159] - scratch_31*scratch_64 - scratch_32*scratch_65 - scratch_33*scratch_66 - scratch_34*scratch_67;
    double scratch_69 = -A[154]*scratch_42 + A[160] - scratch_43*scratch_64 - scratch_44*scratch_65 - scratch_45*scratch_66 - scratch_46*scratch_67 - scratch_47*scratch_68;
    double scratch_70 = 1.0/(-A[154]*scratch_56 + A[161] - scratch_57*scratch_64 - scratch_58*scratch_65 - scratch_59*scratch_66 - scratch_60*scratch_67 - scratch_61*scratch_68 - scratch_62*scratch_69);
    double scratch_71 = scratch_70*(-A[154]*scratch_2 + A[170] - scratch_10*scratch_64 - scratch_11*scratch_65 - scratch_19*scratch_66 - scratch_29*scratch_67 - scratch_41*scratch_68 - scratch_55*scratch_69);
    double scratch_72 = A[8]*scratch_0;
    double scratch_73 = scratch_5*(-A[22]*scratch_72 + A[30]);
    double scratch_74 = scratch_9*(-A[44]*scratch_72 + A[52] - scratch_73*scratch_8);
    double scratch_75 = scratch_18*(-A[66]*scratch_72 + A[74] - scratch_16*scratch_73 - scratch_17*scratch_74);
    double scratch_76 = scratch_28*(-A[88]*scratch_72 + A[96] - scratch_25*scratch_73 - scratch_26*scratch_74 - scratch_27*scratch_75);
    double scratch_77 = scratch_40*(-A[110]*scratch_72 + A[118] - scratch_36*scratch_73 - scratch_37*scratch_74 - scratch_38*scratch_75 - scratch_39*scratch_76);
    double scratch_78 = scratch_54*(-A[132]*scratch_72 + A[140] - scratch_49*scratch_73 - scratch_50*scratch_74 - scratch_51*scratch_75 - scratch_52*scratch_76 - scratch_53*scratch_77);
    double scratch_79 = scratch_70*(-A[154]*scratch_72 + A[162] - scratch_64*scratch_73 - scratch_65*scratch_74 - scratch_66*scratch_75 - scratch_67*scratch_76 - scratch_68*scratch_77 - scratch_69*scratch_78);
    double scratch_80 = -scratch_15*scratch_75 - scratch_24*scratch_76 - scratch_35*scratch_77 - scratch_4*scratch_73 - scratch_48*scratch_78 - scratch_63*scratch_79 - scratch_7*scratch_74 + scratch_72;
    double scratch_81 = -A[173]*scratch_4 + A[174];
    double scratch_82 = -A[173]*scratch_3 + A[175] - scratch_6*scratch_81;
    double scratch_83 = -A[173]*scratch_12 + A[176] - scratch_13*scratch_81 - scratch_14*scratch_82;
    double scratch_84 = -A[173]*scratch_20 + A[177] - scratch_21*scratch_81 - scratch_22*scratch_82 - scratch_23*scratch_83;
    double scratch_85 = -A[173]*scratch_30 + A[178] - scratch_31*scratch_81 - scratch_32*scratch_82 - scratch_33*scratch_83 - scratch_34*scratch_84;
    double scratch_86 = -A[173]*scratch_42 - scratch_43*scratch_81 - scratch_44*scratch_82 - scratch_45*scratch_83 - scratch_46*scratch_84 - scratch_47*scratch_85;
    double scratch_87 = -A[173]*scratch_56 + A[179] - scratch_57*scratch_81 - scratch_58*scratch_82 - scratch_59*scratch_83 - scratch_60*scratch_84 - scratch_61*scratch_85 - scratch_62*scratch_86;
    double scratch_88 = 1.0/(-A[173]*scratch_72 + A[180] - scratch_73*scratch_81 - scratch_74*scratch_82 - scratch_75*scratch_83 - scratch_76*scratch_84 - scratch_77*scratch_85 - scratch_78*scratch_86 - scratch_79*scratch_87);
    double scratch_89 = scratch_88*(-A[173]*scratch_2 + A[188] - scratch_10*scratch_81 - scratch_11*scratch_82 - scratch_19*scratch_83 - scratch_29*scratch_84 - scratch_41*scratch_85 - scratch_55*scratch_86 - scratch_71*scratch_87);
    double scratch_90 = A[9]*scratch_0;
    double scratch_91 = scratch_5*(-A[22]*scratch_90 + A[31]);
    double scratch_92 = scratch_9*(-A[44]*scratch_90 + A[53] - scratch_8*scratch_91);
    double scratch_93 = scratch_18*(-A[66]*scratch_90 + A[75] - scratch_16*scratch_91 - scratch_17*scratch_92);
    double scratch_94 = scratch_28*(-A[88]*scratch_90 + A[97] - scratch_25*scratch_91 - scratch_26*scratch_92 - scratch_27*scratch_93);
    double scratch_95 = scratch_40*(-A[110]*scratch_90 + A[119] - scratch_36*scratch_91 - scratch_37*scratch_92 - scratch_38*scratch_93 - scratch_39*scratch_94);
    double scratch_96 = scratch_54*(-A[132]*scratch_90 + A[141] - scratch_49*scratch_91 - scratch_50*scratch_92 - scratch_51*scratch_93 - scratch_52*scratch_94 - scratch_53*scratch_95);
    double scratch_97 = scratch_70*(-A[154]*scratch_90 + A[163] - scratch_64*scratch_91 - scratch_65*scratch_92 - scratch_66*scratch_93 - scratch_67*scratch_94 - scratch_68*scratch_95 - scratch_69*scratch_96);
    double scratch_98 = scratch_88*(-A[173]*scratch_90 + A[181] - scratch_81*scratch_91 - scratch_82*scratch_92 - scratch_83*scratch_93 - scratch_84*scratch_94 - scratch_85*scratch_95 - scratch_86*scratch_96 - scratch_87*scratch_97);
    double scratch_99 = -scratch_15*scratch_93 - scratch_24*scratch_94 - scratch_35*scratch_95 - scratch_4*scratch_91 - scratch_48*scratch_96 - scratch_63*scratch_97 - scratch_7*scratch_92 - scratch_80*scratch_98 + scratch_90;
    double scratch_100 = -A[191]*scratch_4 + A[192];
    double scratch_101 = -A[191]*scratch_3 + A[193] - scratch_100*scratch_6;
    double scratch_102 = -A[191]*scratch_12 + A[194] - scratch_100*scratch_13 - scratch_101*scratch_14;
    double scratch_103 = -A[191]*scratch_20 + A[195] - scratch_100*scratch_21 - scratch_101*scratch_22 - scratch_102*scratch_23;
    double scratch_104 = -A[191]*scratch_30 + A[196] - scratch_100*scratch_31 - scratch_101*scratch_32 - scratch_102*scratch_33 - scratch_103*scratch_34;
    double scratch_105 = -A[191]*scratch_42 + A[197] - scratch_100*scratch_43 - scratch_101*scratch_44 - scratch_102*scratch_45 - scratch_103*scratch_46 - scratch_104*scratch_47;
    double scratch_106 = -A[191]*scratch_56 + A[198] - scratch_100*scratch_57 - scratch_101*scratch_58 - scratch_102*scratch_59 - scratch_103*scratch_60 - scratch_104*scratch_61 - scratch_105*scratch_62;
    double scratch_107 = -A[191]*scratch_72 + A[199] - scratch_100*scratch_73 - scratch_101*scratch_74 - scratch_102*scratch_75 - scratch_103*scratch_76 - scratch_104*scratch_77 - scratch_105*scratch_78 - scratch_106*scratch_79;
    double scratch_108 = 1.0/(-A[191]*scratch_90 + A[200] - scratch_100*scratch_91 - scratch_101*scratch_92 - scratch_102*scratch_93 - scratch_103*scratch_94 - scratch_104*scratch_95 - scratch_105*scratch_96 - scratch_106*scratch_97 - scratch_107*scratch_98);
    double scratch_109 = scratch_108*(-A[191]*scratch_2 - scratch_10*scratch_100 - scratch_101*scratch_11 - scratch_102*scratch_19 - scratch_103*scratch_29 - scratch_104*scratch_41 - scratch_105*scratch_55 - scratch_106*scratch_71 - scratch_107*scratch_89);
    double scratch_110 = A[10]*scratch_0;
    double scratch_111 = scratch_5*(-A[22]*scratch_110 + A[32]);
    double scratch_112 = scratch_9*(-A[44]*scratch_110 + A[54] - scratch_111*scratch_8);
    double scratch_113 = scratch_18*(-A[66]*scratch_110 + A[76] - scratch_111*scratch_16 - scratch_112*scratch_17);
    double scratch_114 = scratch_28*(-A[88]*scratch_110 + A[98] - scratch_111*scratch_25 - scratch_112*scratch_26 - scratch_113*scratch_27);
    double scratch_115 = scratch_40*(-A[110]*scratch_110 + A[120] - scratch_111*scratch_36 - scratch_112*scratch_37 - scratch_113*scratch_38 - scratch_114*scratch_39);
    double scratch_116 = scratch_54*(-A[132]*scratch_110 + A[142] - scratch_111*scratch_49 - scratch_112*scratch_50 - scratch_113*scratch_51 - scratch_114*scratch_52 - scratch_115*scratch_53);
    double scratch_117 = scratch_70*(-A[154]*scratch_110 + A[164] - scratch_111*scratch_64 - scratch_112*scratch_65 - scratch_113*scratch_66 - scratch_114*scratch_67 - scratch_115*scratch_68 - scratch_116*scratch_69);
    double scratch_118 = scratch_88*(-A[173]*scratch_110 + A[182] - scratch_111*scratch_81 - scratch_112*scratch_82 - scratch_113*scratch_83 - scratch_114*scratch_84 - scratch_115*scratch_85 - scratch_116*scratch_86 - scratch_117*scratch_87);
    double scratch_119 = scratch_108*(-A[191]*scratch_110 + A[201] - scratch_100*scratch_111 - scratch_101*scratch_112 - scratch_102*scratch_113 - scratch_103*scratch_114 - scratch_104*scratch_115 - scratch_105*scratch_116 - scratch_106*scratch_117 - scratch_107*scratch_118);
    double scratch_120 = scratch_110 - scratch_111*scratch_4 - scratch_112*scratch_7 - scratch_113*scratch_15 - scratch_114*scratch_24 - scratch_115*scratch_35 - scratch_116*scratch_48 - scratch_117*scratch_63 - scratch_118*scratch_80 - scratch_119*scratch_99;
    double scratch_121 = -A[210]*scratch_4 + A[211];
    double scratch_122 = -A[210]*scratch_3 + A[212] - scratch_121*scratch_6;
    double scratch_123 = -A[210]*scratch_12 + A[213] - scratch_121*scratch_13 - scratch_122*scratch_14;
    double scratch_124 = -A[210]*scratch_20 + A[214] - scratch_121*scratch_21 - scratch_122*scratch_22 - scratch_123*scratch_23;
    double scratch_125 = -A[210]*scratch_30 + A[215] - scratch_121*scratch_31 - scratch_122*scratch_32 - scratch_123*scratch_33 - scratch_124*scratch_34;
    double scratch_126 = -A[210]*scratch_42 + A[216] - scratch_121*scratch_43 - scratch_122*scratch_44 - scratch_123*scratch_45 - scratch_124*scratch_46 - scratch_125*scratch_47;
    double scratch_127 = -A[210]*scratch_56 + A[217] - scratch_121*scratch_57 - scratch_122*scratch_58 - scratch_123*scratch_59 - scratch_124*scratch_60 - scratch_125*scratch_61 - scratch_126*scratch_62;
    double scratch_128 = -A[210]*scratch_72 + A[218] - scratch_121*scratch_73 - scratch_122*scratch_74 - scratch_123*scratch_75 - scratch_124*scratch_76 - scratch_125*scratch_77 - scratch_126*scratch_78 - scratch_127*scratch_79;
    double scratch_129 = -A[210]*scratch_90 + A[219] - scratch_121*scratch_91 - scratch_122*scratch_92 - scratch_123*scratch_93 - scratch_124*scratch_94 - scratch_125*scratch_95 - scratch_126*scratch_96 - scratch_127*scratch_97 - scratch_128*scratch_98;
    double scratch_130 = 1.0/(-A[210]*scratch_110 + A[220] - scratch_111*scratch_121 - scratch_112*scratch_122 - scratch_113*scratch_123 - scratch_114*scratch_124 - scratch_115*scratch_125 - scratch_116*scratch_126 - scratch_117*scratch_127 - scratch_118*scratch_128 - scratch_119*scratch_129);
    double scratch_131 = scratch_130*(-A[210]*scratch_2 - scratch_10*scratch_121 - scratch_109*scratch_129 - scratch_11*scratch_122 - scratch_123*scratch_19 - scratch_124*scratch_29 - scratch_125*scratch_41 - scratch_126*scratch_55 - scratch_127*scratch_71 - scratch_128*scratch_89);
    double scratch_132 = A[11]*scratch_0;
    double scratch_133 = scratch_5*(-A[22]*scratch_132 + A[33]);
    double scratch_134 = scratch_9*(-A[44]*scratch_132 + A[55] - scratch_133*scratch_8);
    double scratch_135 = scratch_18*(-A[66]*scratch_132 + A[77] - scratch_133*scratch_16 - scratch_134*scratch_17);
    double scratch_136 = scratch_28*(A[99] - A[88]*scratch_132 - scratch_133*scratch_25 - scratch_134*scratch_26 - scratch_135*scratch_27);
    double scratch_137 = scratch_40*(-A[110]*scratch_132 + A[121] - scratch_133*scratch_36 - scratch_134*scratch_37 - scratch_135*scratch_38 - scratch_136*scratch_39);
    double scratch_138 = scratch_54*(-A[132]*scratch_132 + A[143] - scratch_133*scratch_49 - scratch_134*scratch_50 - scratch_135*scratch_51 - scratch_136*scratch_52 - scratch_137*scratch_53);
    double scratch_139 = scratch_70*(-A[154]*scratch_132 + A[165] - scratch_133*scratch_64 - scratch_134*scratch_65 - scratch_135*scratch_66 - scratch_136*scratch_67 - scratch_137*scratch_68 - scratch_138*scratch_69);
    double scratch_140 = scratch_88*(-A[173]*scratch_132 + A[183] - scratch_133*scratch_81 - scratch_134*scratch_82 - scratch_135*scratch_83 - scratch_136*scratch_84 - scratch_137*scratch_85 - scratch_138*scratch_86 - scratch_139*scratch_87);
    double scratch_141 = scratch_108*(-A[191]*scratch_132 + A[202] - scratch_100*scratch_133 - scratch_101*scratch_134 - scratch_102*scratch_135 - scratch_103*scratch_136 - scratch_104*scratch_137 - scratch_105*scratch_138 - scratch_106*scratch_139 - scratch_107*scratch_140);
    double scratch_142 = scratch_130*(-A[210]*scratch_132 + A[221] - scratch_121*scratch_133 - scratch_122*scratch_134 - scratch_123*scratch_135 - scratch_124*scratch_136 - scratch_125*scratch_137 - scratch_126*scratch_138 - scratch_127*scratch_139 - scratch_128*scratch_140 - scratch_129*scratch_141);
    double scratch_143 = -scratch_120*scratch_142 + scratch_132 - scratch_133*scratch_4 - scratch_134*scratch_7 - scratch_135*scratch_15 - scratch_136*scratch_24 - scratch_137*scratch_35 - scratch_138*scratch_48 - scratch_139*scratch_63 - scratch_140*scratch_80 - scratch_141*scratch_99;
    double scratch_144 = -A[227]*scratch_4 + A[228];
    double scratch_145 = -A[227]*scratch_3 + A[229] - scratch_144*scratch_6;
    double scratch_146 = -A[227]*scratch_12 + A[230] - scratch_13*scratch_144 - scratch_14*scratch_145;
    double scratch_147 = -A[227]*scratch_20 + A[231] - scratch_144*scratch_21 - scratch_145*scratch_22 - scratch_146*scratch_23;
    double scratch_148 = -A[227]*scratch_30 + A[232] - scratch_144*scratch_31 - scratch_145*scratch_32 - scratch_146*scratch_33 - scratch_147*scratch_34;
    double scratch_149 = -A[227]*scratch_42 + A[233] - scratch_144*scratch_43 - scratch_145*scratch_44 - scratch_146*scratch_45 - scratch_147*scratch_46 - scratch_148*scratch_47;
    double scratch_150 = -A[227]*scratch_56 + A[234] - scratch_144*scratch_57 - scratch_145*scratch_58 - scratch_146*scratch_59 - scratch_147*scratch_60 - scratch_148*scratch_61 - scratch_149*scratch_62;
    double scratch_151 = -A[227]*scratch_72 + A[235] - scratch_144*scratch_73 - scratch_145*scratch_74 - scratch_146*scratch_75 - scratch_147*scratch_76 - scratch_148*scratch_77 - scratch_149*scratch_78 - scratch_150*scratch_79;
    double scratch_152 = -A[227]*scratch_90 + A[236] - scratch_144*scratch_91 - scratch_145*scratch_92 - scratch_146*scratch_93 - scratch_147*scratch_94 - scratch_148*scratch_95 - scratch_149*scratch_96 - scratch_150*scratch_97 - scratch_151*scratch_98;
    double scratch_153 = -A[227]*scratch_110 + A[237] - scratch_111*scratch_144 - scratch_112*scratch_145 - scratch_113*scratch_146 - scratch_114*scratch_147 - scratch_115*scratch_148 - scratch_116*scratch_149 - scratch_117*scratch_150 - scratch_118*scratch_151 - scratch_119*scratch_152;
    double scratch_154 = 1.0/(-A[227]*scratch_132 + A[238] - scratch_133*scratch_144 - scratch_134*scratch_145 - scratch_135*scratch_146 - scratch_136*scratch_147 - scratch_137*scratch_148 - scratch_138*scratch_149 - scratch_139*scratch_150 - scratch_140*scratch_151 - scratch_141*scratch_152 - scratch_142*scratch_153);
    double scratch_155 = scratch_154*(-A[227]*scratch_2 + A[246] - scratch_10*scratch_144 - scratch_109*scratch_152 - scratch_11*scratch_145 - scratch_131*scratch_153 - scratch_146*scratch_19 - scratch_147*scratch_29 - scratch_148*scratch_41 - scratch_149*scratch_55 - scratch_150*scratch_71 - scratch_151*scratch_89);
    double scratch_156 = A[12]*scratch_0;
    double scratch_157 = scratch_5*(-A[22]*scratch_156 + A[34]);
    double scratch_158 = scratch_9*(-A[44]*scratch_156 + A[56] - scratch_157*scratch_8);
    double scratch_159 = scratch_18*(-A[66]*scratch_156 + A[78] - scratch_157*scratch_16 - scratch_158*scratch_17);
    double scratch_160 = scratch_28*(A[100] - A[88]*scratch_156 - scratch_157*scratch_25 - scratch_158*scratch_26 - scratch_159*scratch_27);
    double scratch_161 = scratch_40*(-A[110]*scratch_156 + A[122] - scratch_157*scratch_36 - scratch_158*scratch_37 - scratch_159*scratch_38 - scratch_160*scratch_39);
    double scratch_162 = scratch_54*(-A[132]*scratch_156 + A[144] - scratch_157*scratch_49 - scratch_158*scratch_50 - scratch_159*scratch_51 - scratch_160*scratch_52 - scratch_161*scratch_53);
    double scratch_163 = scratch_70*(-A[154]*scratch_156 + A[166] - scratch_157*scratch_64 - scratch_158*scratch_65 - scratch_159*scratch_66 - scratch_160*scratch_67 - scratch_161*scratch_68 - scratch_162*scratch_69);
    double scratch_164 = scratch_88*(-A[173]*scratch_156 + A[184] - scratch_157*scratch_81 - scratch_158*scratch_82 - scratch_159*scratch_83 - scratch_160*scratch_84 - scratch_161*scratch_85 - scratch_162*scratch_86 - scratch_163*scratch_87);
    double scratch_165 = scratch_108*(-A[191]*scratch_156 - scratch_100*scratch_157 - scratch_101*scratch_158 - scratch_102*scratch_159 - scratch_103*scratch_160 - scratch_104*scratch_161 - scratch_105*scratch_162 - scratch_106*scratch_163 - scratch_107*scratch_164);
    double scratch_166 = scratch_130*(-A[210]*scratch_156 - scratch_121*scratch_157 - scratch_122*scratch_158 - scratch_123*scratch_159 - scratch_124*scratch_160 - scratch_125*scratch_161 - scratch_126*scratch_162 - scratch_127*scratch_163 - scratch_128*scratch_164 - scratch_129*scratch_165);
    double scratch_167 = scratch_154*(-A[227]*scratch_156 + A[239] - scratch_144*scratch_157 - scratch_145*scratch_158 - scratch_146*scratch_159 - scratch_147*scratch_160 - scratch_148*scratch_161 - scratch_149*scratch_162 - scratch_150*scratch_163 - scratch_151*scratch_164 - scratch_152*scratch_165 - scratch_153*scratch_166);
    double scratch_168 = -scratch_120*scratch_166 - scratch_143*scratch_167 - scratch_15*scratch_159 + scratch_156 - scratch_157*scratch_4 - scratch_158*scratch_7 - scratch_160*scratch_24 - scratch_161*scratch_35 - scratch_162*scratch_48 - scratch_163*scratch_63 - scratch_164*scratch_80 - scratch_165*scratch_99;
    double scratch_169 = -A[249]*scratch_4 + A[250];
    double scratch_170 = -A[249]*scratch_3 + A[251] - scratch_169*scratch_6;
    double scratch_171 = -A[249]*scratch_12 + A[252] - scratch_13*scratch_169 - scratch_14*scratch_170;
    double scratch_172 = -A[249]*scratch_20 + A[253] - scratch_169*scratch_21 - scratch_170*scratch_22 - scratch_171*scratch_23;
    double scratch_173 = -A[249]*scratch_30 + A[254] - scratch_169*scratch_31 - scratch_170*scratch_32 - scratch_171*scratch_33 - scratch_172*scratch_34;
    double scratch_174 = -A[249]*scratch_42 + A[255] - scratch_169*scratch_43 - scratch_170*scratch_44 - scratch_171*scratch_45 - scratch_172*scratch_46 - scratch_173*scratch_47;
    double scratch_175 = -A[249]*scratch_56 + A[256] - scratch_169*scratch_57 - scratch_170*scratch_58 - scratch_171*scratch_59 - scratch_172*scratch_60 - scratch_173*scratch_61 - scratch_174*scratch_62;
    double scratch_176 = -A[249]*scratch_72 + A[257] - scratch_169*scratch_73 - scratch_170*scratch_74 - scratch_171*scratch_75 - scratch_172*scratch_76 - scratch_173*scratch_77 - scratch_174*scratch_78 - scratch_175*scratch_79;
    double scratch_177 = -A[249]*scratch_90 + A[258] - scratch_169*scratch_91 - scratch_170*scratch_92 - scratch_171*scratch_93 - scratch_172*scratch_94 - scratch_173*scratch_95 - scratch_174*scratch_96 - scratch_175*scratch_97 - scratch_176*scratch_98;
    double scratch_178 = -A[249]*scratch_110 + A[259] - scratch_111*scratch_169 - scratch_112*scratch_170 - scratch_113*scratch_171 - scratch_114*scratch_172 - scratch_115*scratch_173 - scratch_116*scratch_174 - scratch_117*scratch_175 - scratch_118*scratch_176 - scratch_119*scratch_177;
    double scratch_179 = -A[249]*scratch_132 + A[260] - scratch_133*scratch_169 - scratch_134*scratch_170 - scratch_135*scratch_171 - scratch_136*scratch_172 - scratch_137*scratch_173 - scratch_138*scratch_174 - scratch_139*scratch_175 - scratch_140*scratch_176 - scratch_141*scratch_177 - scratch_142*scratch_178;
    double scratch_180 = 1.0/(-A[249]*scratch_156 + A[261] - scratch_157*scratch_169 - scratch_158*scratch_170 - scratch_159*scratch_171 - scratch_160*scratch_172 - scratch_161*scratch_173 - scratch_162*scratch_174 - scratch_163*scratch_175 - scratch_164*scratch_176 - scratch_165*scratch_177 - scratch_166*scratch_178 - scratch_167*scratch_179);
    double scratch_181 = scratch_180*(-A[249]*scratch_2 + A[268] - scratch_10*scratch_169 - scratch_109*scratch_177 - scratch_11*scratch_170 - scratch_131*scratch_178 - scratch_155*scratch_179 - scratch_171*scratch_19 - scratch_172*scratch_29 - scratch_173*scratch_41 - scratch_174*scratch_55 - scratch_175*scratch_71 - scratch_176*scratch_89);
    double scratch_182 = A[13]*scratch_0;
    double scratch_183 = scratch_5*(-A[22]*scratch_182 + A[35]);
    double scratch_184 = scratch_9*(-A[44]*scratch_182 + A[57] - scratch_183*scratch_8);
    double scratch_185 = scratch_18*(-A[66]*scratch_182 + A[79] - scratch_16*scratch_183 - scratch_17*scratch_184);
    double scratch_186 = scratch_28*(A[101] - A[88]*scratch_182 - scratch_183*scratch_25 - scratch_184*scratch_26 - scratch_185*scratch_27);
    double scratch_187 = scratch_40*(-A[110]*scratch_182 + A[123] - scratch_183*scratch_36 - scratch_184*scratch_37 - scratch_185*scratch_38 - scratch_186*scratch_39);
    double scratch_188 = scratch_54*(-A[132]*scratch_182 + A[145] - scratch_183*scratch_49 - scratch_184*scratch_50 - scratch_185*scratch_51 - scratch_186*scratch_52 - scratch_187*scratch_53);
    double scratch_189 = scratch_70*(-A[154]*scratch_182 + A[167] - scratch_183*scratch_64 - scratch_184*scratch_65 - scratch_185*scratch_66 - scratch_186*scratch_67 - scratch_187*scratch_68 - scratch_188*scratch_69);
    double scratch_190 = scratch_88*(-A[173]*scratch_182 + A[185] - scratch_183*scratch_81 - scratch_184*scratch_82 - scratch_185*scratch_83 - scratch_186*scratch_84 - scratch_187*scratch_85 - scratch_188*scratch_86 - scratch_189*scratch_87);
    double scratch_191 = scratch_108*(-A[191]*scratch_182 + A[203] - scratch_100*scratch_183 - scratch_101*scratch_184 - scratch_102*scratch_185 - scratch_103*scratch_186 - scratch_104*scratch_187 - scratch_105*scratch_188 - scratch_106*scratch_189 - scratch_107*scratch_190);
    double scratch_192 = scratch_130*(-A[210]*scratch_182 + A[222] - scratch_121*scratch_183 - scratch_122*scratch_184 - scratch_123*scratch_185 - scratch_124*scratch_186 - scratch_125*scratch_187 - scratch_126*scratch_188 - scratch_127*scratch_189 - scratch_128*scratch_190 - scratch_129*scratch_191);
    double scratch_193 = scratch_154*(-A[227]*scratch_182 + A[240] - scratch_144*scratch_183 - scratch_145*scratch_184 - scratch_146*scratch_185 - scratch_147*scratch_186 - scratch_148*scratch_187 - scratch_149*scratch_188 - scratch_150*scratch_189 - scratch_151*scratch_190 - scratch_152*scratch_191 - scratch_153*scratch_192);
    double scratch_194 = scratch_180*(-A[249]*scratch_182 + A[262] - scratch_169*scratch_183 - scratch_170*scratch_184 - scratch_171*scratch_185 - scratch_172*scratch_186 - scratch_173*scratch_187 - scratch_174*scratch_188 - scratch_175*scratch_189 - scratch_176*scratch_190 - scratch_177*scratch_191 - scratch_178*scratch_192 - scratch_179*scratch_193);
    double scratch_195 = -scratch_120*scratch_192 - scratch_143*scratch_193 - scratch_15*scratch_185 - scratch_168*scratch_194 + scratch_182 - scratch_183*scratch_4 - scratch_184*scratch_7 - scratch_186*scratch_24 - scratch_187*scratch_35 - scratch_188*scratch_48 - scratch_189*scratch_63 - scratch_190*scratch_80 - scratch_191*scratch_99;
    double scratch_196 = -A[271]*scratch_4 + A[272];
    double scratch_197 = -A[271]*scratch_3 + A[273] - scratch_196*scratch_6;
    double scratch_198 = -A[271]*scratch_12 + A[274] - scratch_13*scratch_196 - scratch_14*scratch_197;
    double scratch_199 = -A[271]*scratch_20 + A[275] - scratch_196*scratch_21 - scratch_197*scratch_22 - scratch_198*scratch_23;
    double scratch_200 = -A[271]*scratch_30 + A[276] - scratch_196*scratch_31 - scratch_197*scratch_32 - scratch_198*scratch_33 - scratch_199*scratch_34;
    double scratch_201 = -A[271]*scratch_42 + A[277] - scratch_196*scratch_43 - scratch_197*scratch_44 - scratch_198*scratch_45 - scratch_199*scratch_46 - scratch_200*scratch_47;
    double scratch_202 = -A[271]*scratch_56 + A[278] - scratch_196*scratch_57 - scratch_197*scratch_58 - scratch_198*scratch_59 - scratch_199*scratch_60 - scratch_200*scratch_61 - scratch_201*scratch_62;
    double scratch_203 = -A[271]*scratch_72 + A[279] - scratch_196*scratch_73 - scratch_197*scratch_74 - scratch_198*scratch_75 - scratch_199*scratch_76 - scratch_200*scratch_77 - scratch_201*scratch_78 - scratch_202*scratch_79;
    double scratch_204 = -A[271]*scratch_90 + A[280] - scratch_196*scratch_91 - scratch_197*scratch_92 - scratch_198*scratch_93 - scratch_199*scratch_94 - scratch_200*scratch_95 - scratch_201*scratch_96 - scratch_202*scratch_97 - scratch_203*scratch_98;
    double scratch_205 = -A[271]*scratch_110 + A[281] - scratch_111*scratch_196 - scratch_112*scratch_197 - scratch_113*scratch_198 - scratch_114*scratch_199 - scratch_115*scratch_200 - scratch_116*scratch_201 - scratch_117*scratch_202 - scratch_118*scratch_203 - scratch_119*scratch_204;
    double scratch_206 = -A[271]*scratch_132 + A[282] - scratch_133*scratch_196 - scratch_134*scratch_197 - scratch_135*scratch_198 - scratch_136*scratch_199 - scratch_137*scratch_200 - scratch_138*scratch_201 - scratch_139*scratch_202 - scratch_140*scratch_203 - scratch_141*scratch_204 - scratch_142*scratch_205;
    double scratch_207 = -A[271]*scratch_156 + A[283] - scratch_157*scratch_196 - scratch_158*scratch_197 - scratch_159*scratch_198 - scratch_160*scratch_199 - scratch_161*scratch_200 - scratch_162*scratch_201 - scratch_163*scratch_202 - scratch_164*scratch_203 - scratch_165*scratch_204 - scratch_166*scratch_205 - scratch_167*scratch_206;
    double scratch_208 = 1.0/(-A[271]*scratch_182 + A[284] - scratch_183*scratch_196 - scratch_184*scratch_197 - scratch_185*scratch_198 - scratch_186*scratch_199 - scratch_187*scratch_200 - scratch_188*scratch_201 - scratch_189*scratch_202 - scratch_190*scratch_203 - scratch_191*scratch_204 - scratch_192*scratch_205 - scratch_193*scratch_206 - scratch_194*scratch_207);
    double scratch_209 = scratch_208*(-A[271]*scratch_2 + A[290] - scratch_10*scratch_196 - scratch_109*scratch_204 - scratch_11*scratch_197 - scratch_131*scratch_205 - scratch_155*scratch_206 - scratch_181*scratch_207 - scratch_19*scratch_198 - scratch_199*scratch_29 - scratch_200*scratch_41 - scratch_201*scratch_55 - scratch_202*scratch_71 - scratch_203*scratch_89);
    double scratch_210 = A[14]*scratch_0;
    double scratch_211 = scratch_5*(-A[22]*scratch_210 + A[36]);
    double scratch_212 = scratch_9*(-A[44]*scratch_210 + A[58] - scratch_211*scratch_8);
    double scratch_213 = scratch_18*(-A[66]*scratch_210 + A[80] - scratch_16*scratch_211 - scratch_17*scratch_212);
    double scratch_214 = scratch_28*(A[102] - A[88]*scratch_210 - scratch_211*scratch_25 - scratch_212*scratch_26 - scratch_213*scratch_27);
    double scratch_215 = scratch_40*(-A[110]*scratch_210 + A[124] - scratch_211*scratch_36 - scratch_212*scratch_37 - scratch_213*scratch_38 - scratch_214*scratch_39);
    double scratch_216 = scratch_54*(-A[132]*scratch_210 + A[146] - scratch_211*scratch_49 - scratch_212*scratch_50 - scratch_213*scratch_51 - scratch_214*scratch_52 - scratch_215*scratch_53);
    double scratch_217 = scratch_70*(-A[154]*scratch_210 + A[168] - scratch_211*scratch_64 - scratch_212*scratch_65 - scratch_213*scratch_66 - scratch_214*scratch_67 - scratch_215*scratch_68 - scratch_216*scratch_69);
    double scratch_218 = scratch_88*(-A[173]*scratch_210 + A[186] - scratch_211*scratch_81 - scratch_212*scratch_82 - scratch_213*scratch_83 - scratch_214*scratch_84 - scratch_215*scratch_85 - scratch_216*scratch_86 - scratch_217*scratch_87);
    double scratch_219 = scratch_108*(-A[191]*scratch_210 + A[204] - scratch_100*scratch_211 - scratch_101*scratch_212 - scratch_102*scratch_213 - scratch_103*scratch_214 - scratch_104*scratch_215 - scratch_105*scratch_216 - scratch_106*scratch_217 - scratch_107*scratch_218);
    double scratch_220 = scratch_130*(-A[210]*scratch_210 + A[223] - scratch_121*scratch_211 - scratch_122*scratch_212 - scratch_123*scratch_213 - scratch_124*scratch_214 - scratch_125*scratch_215 - scratch_126*scratch_216 - scratch_127*scratch_217 - scratch_128*scratch_218 - scratch_129*scratch_219);
    double scratch_221 = scratch_154*(-A[227]*scratch_210 + A[241] - scratch_144*scratch_211 - scratch_145*scratch_212 - scratch_146*scratch_213 - scratch_147*scratch_214 - scratch_148*scratch_215 - scratch_149*scratch_216 - scratch_150*scratch_217 - scratch_151*scratch_218 - scratch_152*scratch_219 - scratch_153*scratch_220);
    double scratch_222 = scratch_180*(-A[249]*scratch_210 + A[263] - scratch_169*scratch_211 - scratch_170*scratch_212 - scratch_171*scratch_213 - scratch_172*scratch_214 - scratch_173*scratch_215 - scratch_174*scratch_216 - scratch_175*scratch_217 - scratch_176*scratch_218 - scratch_177*scratch_219 - scratch_178*scratch_220 - scratch_179*scratch_221);
    double scratch_223 = scratch_208*(-A[271]*scratch_210 + A[285] - scratch_196*scratch_211 - scratch_197*scratch_212 - scratch_198*scratch_213 - scratch_199*scratch_214 - scratch_200*scratch_215 - scratch_201*scratch_216 - scratch_202*scratch_217 - scratch_203*scratch_218 - scratch_204*scratch_219 - scratch_205*scratch_220 - scratch_206*scratch_221 - scratch_207*scratch_222);
    double scratch_224 = -scratch_120*scratch_220 - scratch_143*scratch_221 - scratch_15*scratch_213 - scratch_168*scratch_222 - scratch_195*scratch_223 + scratch_210 - scratch_211*scratch_4 - scratch_212*scratch_7 - scratch_214*scratch_24 - scratch_215*scratch_35 - scratch_216*scratch_48 - scratch_217*scratch_63 - scratch_218*scratch_80 - scratch_219*scratch_99;
    double scratch_225 = -A[293]*scratch_4 + A[294];
    double scratch_226 = -A[293]*scratch_3 + A[295] - scratch_225*scratch_6;
    double scratch_227 = -A[293]*scratch_12 + A[296] - scratch_13*scratch_225 - scratch_14*scratch_226;
    double scratch_228 = -A[293]*scratch_20 + A[297] - scratch_21*scratch_225 - scratch_22*scratch_226 - scratch_227*scratch_23;
    double scratch_229 = -A[293]*scratch_30 + A[298] - scratch_225*scratch_31 - scratch_226*scratch_32 - scratch_227*scratch_33 - scratch_228*scratch_34;
    double scratch_230 = -A[293]*scratch_42 + A[299] - scratch_225*scratch_43 - scratch_226*scratch_44 - scratch_227*scratch_45 - scratch_228*scratch_46 - scratch_229*scratch_47;
    double scratch_231 = -A[293]*scratch_56 + A[300] - scratch_225*scratch_57 - scratch_226*scratch_58 - scratch_227*scratch_59 - scratch_228*scratch_60 - scratch_229*scratch_61 - scratch_230*scratch_62;
    double scratch_232 = -A[293]*scratch_72 + A[301] - scratch_225*scratch_73 - scratch_226*scratch_74 - scratch_227*scratch_75 - scratch_228*scratch_76 - scratch_229*scratch_77 - scratch_230*scratch_78 - scratch_231*scratch_79;
    double scratch_233 = -A[293]*scratch_90 + A[302] - scratch_225*scratch_91 - scratch_226*scratch_92 - scratch_227*scratch_93 - scratch_228*scratch_94 - scratch_229*scratch_95 - scratch_230*scratch_96 - scratch_231*scratch_97 - scratch_232*scratch_98;
    double scratch_234 = -A[293]*scratch_110 + A[303] - scratch_111*scratch_225 - scratch_112*scratch_226 - scratch_113*scratch_227 - scratch_114*scratch_228 - scratch_115*scratch_229 - scratch_116*scratch_230 - scratch_117*scratch_231 - scratch_118*scratch_232 - scratch_119*scratch_233;
    double scratch_235 = -A[293]*scratch_132 + A[304] - scratch_133*scratch_225 - scratch_134*scratch_226 - scratch_135*scratch_227 - scratch_136*scratch_228 - scratch_137*scratch_229 - scratch_138*scratch_230 - scratch_139*scratch_231 - scratch_140*scratch_232 - scratch_141*scratch_233 - scratch_142*scratch_234;
    double scratch_236 = -A[293]*scratch_156 + A[305] - scratch_157*scratch_225 - scratch_158*scratch_226 - scratch_159*scratch_227 - scratch_160*scratch_228 - scratch_161*scratch_229 - scratch_162*scratch_230 - scratch_163*scratch_231 - scratch_164*scratch_232 - scratch_165*scratch_233 - scratch_166*scratch_234 - scratch_167*scratch_235;
    double scratch_237 = -A[293]*scratch_182 + A[306] - scratch_183*scratch_225 - scratch_184*scratch_226 - scratch_185*scratch_227 - scratch_186*scratch_228 - scratch_187*scratch_229 - scratch_188*scratch_230 - scratch_189*scratch_231 - scratch_190*scratch_232 - scratch_191*scratch_233 - scratch_192*scratch_234 - scratch_193*scratch_235 - scratch_194*scratch_236;
    double scratch_238 = 1.0/(-A[293]*scratch_210 + A[307] - scratch_211*scratch_225 - scratch_212*scratch_226 - scratch_213*scratch_227 - scratch_214*scratch_228 - scratch_215*scratch_229 - scratch_216*scratch_230 - scratch_217*scratch_231 - scratch_218*scratch_232 - scratch_219*scratch_233 - scratch_220*scratch_234 - scratch_221*scratch_235 - scratch_222*scratch_236 - scratch_223*scratch_237);
    double scratch_239 = scratch_238*(-A[293]*scratch_2 - scratch_10*scratch_225 - scratch_109*scratch_233 - scratch_11*scratch_226 - scratch_131*scratch_234 - scratch_155*scratch_235 - scratch_181*scratch_236 - scratch_19*scratch_227 - scratch_209*scratch_237 - scratch_228*scratch_29 - scratch_229*scratch_41 - scratch_230*scratch_55 - scratch_231*scratch_71 - scratch_232*scratch_89);
    double scratch_240 = A[15]*scratch_0;
    double scratch_241 = scratch_5*(-A[22]*scratch_240 + A[37]);
    double scratch_242 = scratch_9*(-A[44]*scratch_240 + A[59] - scratch_241*scratch_8);
    double scratch_243 = scratch_18*(-A[66]*scratch_240 + A[81] - scratch_16*scratch_241 - scratch_17*scratch_242);
    double scratch_244 = scratch_28*(A[103] - A[88]*scratch_240 - scratch_241*scratch_25 - scratch_242*scratch_26 - scratch_243*scratch_27);
    double scratch_245 = scratch_40*(-A[110]*scratch_240 + A[125] - scratch_241*scratch_36 - scratch_242*scratch_37 - scratch_243*scratch_38 - scratch_244*scratch_39);
    double scratch_246 = scratch_54*(-A[132]*scratch_240 + A[147] - scratch_241*scratch_49 - scratch_242*scratch_50 - scratch_243*scratch_51 - scratch_244*scratch_52 - scratch_245*scratch_53);
    double scratch_247 = scratch_70*(-A[154]*scratch_240 - scratch_241*scratch_64 - scratch_242*scratch_65 - scratch_243*scratch_66 - scratch_244*scratch_67 - scratch_245*scratch_68 - scratch_246*scratch_69);
    double scratch_248 = scratch_88*(-A[173]*scratch_240 - scratch_241*scratch_81 - scratch_242*scratch_82 - scratch_243*scratch_83 - scratch_244*scratch_84 - scratch_245*scratch_85 - scratch_246*scratch_86 - scratch_247*scratch_87);
    double scratch_249 = scratch_108*(-A[191]*scratch_240 + A[205] - scratch_100*scratch_241 - scratch_101*scratch_242 - scratch_102*scratch_243 - scratch_103*scratch_244 - scratch_104*scratch_245 - scratch_105*scratch_246 - scratch_106*scratch_247 - scratch_107*scratch_248);
    double scratch_250 = scratch_130*(-A[210]*scratch_240 - scratch_121*scratch_241 - scratch_122*scratch_242 - scratch_123*scratch_243 - scratch_124*scratch_244 - scratch_125*scratch_245 - scratch_126*scratch_246 - scratch_127*scratch_247 - scratch_128*scratch_248 - scratch_129*scratch_249);
    double scratch_251 = scratch_154*(-A[227]*scratch_240 + A[242] - scratch_144*scratch_241 - scratch_145*scratch_242 - scratch_146*scratch_243 - scratch_147*scratch_244 - scratch_148*scratch_245 - scratch_149*scratch_246 - scratch_150*scratch_247 - scratch_151*scratch_248 - scratch_152*scratch_249 - scratch_153*scratch_250);
    double scratch_252 = scratch_180*(-A[249]*scratch_240 + A[264] - scratch_169*scratch_241 - scratch_170*scratch_242 - scratch_171*scratch_243 - scratch_172*scratch_244 - scratch_173*scratch_245 - scratch_174*scratch_246 - scratch_175*scratch_247 - scratch_176*scratch_248 - scratch_177*scratch_249 - scratch_178*scratch_250 - scratch_179*scratch_251);
    double scratch_253 = scratch_208*(-A[271]*scratch_240 + A[286] - scratch_196*scratch_241 - scratch_197*scratch_242 - scratch_198*scratch_243 - scratch_199*scratch_244 - scratch_200*scratch_245 - scratch_201*scratch_246 - scratch_202*scratch_247 - scratch_203*scratch_248 - scratch_204*scratch_249 - scratch_205*scratch_250 - scratch_206*scratch_251 - scratch_207*scratch_252);
    double scratch_254 = scratch_238*(-A[293]*scratch_240 + A[308] - scratch_225*scratch_241 - scratch_226*scratch_242 - scratch_227*scratch_243 - scratch_228*scratch_244 - scratch_229*scratch_245 - scratch_230*scratch_246 - scratch_231*scratch_247 - scratch_232*scratch_248 - scratch_233*scratch_249 - scratch_234*scratch_250 - scratch_235*scratch_251 - scratch_236*scratch_252 - scratch_237*scratch_253);
    double scratch_255 = -scratch_120*scratch_250 - scratch_143*scratch_251 - scratch_15*scratch_243 - scratch_168*scratch_252 - scratch_195*scratch_253 - scratch_224*scratch_254 - scratch_24*scratch_244 + scratch_240 - scratch_241*scratch_4 - scratch_242*scratch_7 - scratch_245*scratch_35 - scratch_246*scratch_48 - scratch_247*scratch_63 - scratch_248*scratch_80 - scratch_249*scratch_99;
    double scratch_256 = -A[311]*scratch_6 + A[312];
    double scratch_257 = -A[311]*scratch_13 + A[313] - scratch_14*scratch_256;
    double scratch_258 = -A[311]*scratch_21 + A[314] - scratch_22*scratch_256 - scratch_23*scratch_257;
    double scratch_259 = -A[311]*scratch_31 - scratch_256*scratch_32 - scratch_257*scratch_33 - scratch_258*scratch_34;
    double scratch_260 = -A[311]*scratch_43 + A[315] - scratch_256*scratch_44 - scratch_257*scratch_45 - scratch_258*scratch_46 - scratch_259*scratch_47;
    double scratch_261 = -A[311]*scratch_57 - scratch_256*scratch_58 - scratch_257*scratch_59 - scratch_258*scratch_60 - scratch_259*scratch_61 - scratch_260*scratch_62;
    double scratch_262 = -A[311]*scratch_73 - scratch_256*scratch_74 - scratch_257*scratch_75 - scratch_258*scratch_76 - scratch_259*scratch_77 - scratch_260*scratch_78 - scratch_261*scratch_79;
    double scratch_263 = -A[311]*scratch_91 + A[316] - scratch_256*scratch_92 - scratch_257*scratch_93 - scratch_258*scratch_94 - scratch_259*scratch_95 - scratch_260*scratch_96 - scratch_261*scratch_97 - scratch_262*scratch_98;
    double scratch_264 = -A[311]*scratch_111 - scratch_112*scratch_256 - scratch_113*scratch_257 - scratch_114*scratch_258 - scratch_115*scratch_259 - scratch_116*scratch_260 - scratch_117*scratch_261 - scratch_118*scratch_262 - scratch_119*scratch_263;
    double scratch_265 = -A[311]*scratch_133 - scratch_134*scratch_256 - scratch_135*scratch_257 - scratch_136*scratch_258 - scratch_137*scratch_259 - scratch_138*scratch_260 - scratch_139*scratch_261 - scratch_140*scratch_262 - scratch_141*scratch_263 - scratch_142*scratch_264;
    double scratch_266 = -A[311]*scratch_157 - scratch_158*scratch_256 - scratch_159*scratch_257 - scratch_160*scratch_258 - scratch_161*scratch_259 - scratch_162*scratch_260 - scratch_163*scratch_261 - scratch_164*scratch_262 - scratch_165*scratch_263 - scratch_166*scratch_264 - scratch_167*scratch_265;
    double scratch_267 = -A[311]*scratch_183 - scratch_184*scratch_256 - scratch_185*scratch_257 - scratch_186*scratch_258 - scratch_187*scratch_259 - scratch_188*scratch_260 - scratch_189*scratch_261 - scratch_190*scratch_262 - scratch_191*scratch_263 - scratch_192*scratch_264 - scratch_193*scratch_265 - scratch_194*scratch_266;
    double scratch_268 = -A[311]*scratch_211 + A[317] - scratch_212*scratch_256 - scratch_213*scratch_257 - scratch_214*scratch_258 - scratch_215*scratch_259 - scratch_216*scratch_260 - scratch_217*scratch_261 - scratch_218*scratch_262 - scratch_219*scratch_263 - scratch_220*scratch_264 - scratch_221*scratch_265 - scratch_222*scratch_266 - scratch_223*scratch_267;
    double scratch_269 = 1.0/(-A[311]*scratch_241 + A[318] - scratch_242*scratch_256 - scratch_243*scratch_257 - scratch_244*scratch_258 - scratch_245*scratch_259 - scratch_246*scratch_260 - scratch_247*scratch_261 - scratch_248*scratch_262 - scratch_249*scratch_263 - scratch_250*scratch_264 - scratch_251*scratch_265 - scratch_252*scratch_266 - scratch_253*scratch_267 - scratch_254*scratch_268);
    double scratch_270 = scratch_269*(-A[311]*scratch_10 - scratch_109*scratch_263 - scratch_11*scratch_256 - scratch_131*scratch_264 - scratch_155*scratch_265 - scratch_181*scratch_266 - scratch_19*scratch_257 - scratch_209*scratch_267 - scratch_239*scratch_268 - scratch_258*scratch_29 - scratch_259*scratch_41 - scratch_260*scratch_55 - scratch_261*scratch_71 - scratch_262*scratch_89);
    double scratch_271 = A[16]*scratch_0;
    double scratch_272 = scratch_5*(-A[22]*scratch_271 + A[38]);
    double scratch_273 = scratch_9*(-A[44]*scratch_271 + A[60] - scratch_272*scratch_8);
    double scratch_274 = scratch_18*(-A[66]*scratch_271 + A[82] - scratch_16*scratch_272 - scratch_17*scratch_273);
    double scratch_275 = scratch_28*(A[104] - A[88]*scratch_271 - scratch_25*scratch_272 - scratch_26*scratch_273 - scratch_27*scratch_274);
    double scratch_276 = scratch_40*(-A[110]*scratch_271 + A[126] - scratch_272*scratch_36 - scratch_273*scratch_37 - scratch_274*scratch_38 - scratch_275*scratch_39);
    double scratch_277 = scratch_54*(-A[132]*scratch_271 + A[148] - scratch_272*scratch_49 - scratch_273*scratch_50 - scratch_274*scratch_51 - scratch_275*scratch_52 - scratch_276*scratch_53);
    double scratch_278 = scratch_70*(-A[154]*scratch_271 + A[169] - scratch_272*scratch_64 - scratch_273*scratch_65 - scratch_274*scratch_66 - scratch_275*scratch_67 - scratch_276*scratch_68 - scratch_277*scratch_69);
    double scratch_279 = scratch_88*(-A[173]*scratch_271 + A[187] - scratch_272*scratch_81 - scratch_273*scratch_82 - scratch_274*scratch_83 - scratch_275*scratch_84 - scratch_276*scratch_85 - scratch_277*scratch_86 - scratch_278*scratch_87);
    double scratch_280 = scratch_108*(-A[191]*scratch_271 + A[206] - scratch_100*scratch_272 - scratch_101*scratch_273 - scratch_102*scratch_274 - scratch_103*scratch_275 - scratch_104*scratch_276 - scratch_105*scratch_277 - scratch_106*scratch_278 - scratch_107*scratch_279);
    double scratch_281 = scratch_130*(-A[210]*scratch_271 - scratch_121*scratch_272 - scratch_122*scratch_273 - scratch_123*scratch_274 - scratch_124*scratch_275 - scratch_125*scratch_276 - scratch_126*scratch_277 - scratch_127*scratch_278 - scratch_128*scratch_279 - scratch_129*scratch_280);
    double scratch_282 = scratch_154*(-A[227]*scratch_271 + A[243] - scratch_144*scratch_272 - scratch_145*scratch_273 - scratch_146*scratch_274 - scratch_147*scratch_275 - scratch_148*scratch_276 - scratch_149*scratch_277 - scratch_150*scratch_278 - scratch_151*scratch_279 - scratch_152*scratch_280 - scratch_153*scratch_281);
    double scratch_283 = scratch_180*(-A[249]*scratch_271 + A[265] - scratch_169*scratch_272 - scratch_170*scratch_273 - scratch_171*scratch_274 - scratch_172*scratch_275 - scratch_173*scratch_276 - scratch_174*scratch_277 - scratch_175*scratch_278 - scratch_176*scratch_279 - scratch_177*scratch_280 - scratch_178*scratch_281 - scratch_179*scratch_282);
    double scratch_284 = scratch_208*(-A[271]*scratch_271 + A[287] - scratch_196*scratch_272 - scratch_197*scratch_273 - scratch_198*scratch_274 - scratch_199*scratch_275 - scratch_200*scratch_276 - scratch_201*scratch_277 - scratch_202*scratch_278 - scratch_203*scratch_279 - scratch_204*scratch_280 - scratch_205*scratch_281 - scratch_206*scratch_282 - scratch_207*scratch_283);
    double scratch_285 = scratch_238*(-A[293]*scratch_271 - scratch_225*scratch_272 - scratch_226*scratch_273 - scratch_227*scratch_274 - scratch_228*scratch_275 - scratch_229*scratch_276 - scratch_230*scratch_277 - scratch_231*scratch_278 - scratch_232*scratch_279 - scratch_233*scratch_280 - scratch_234*scratch_281 - scratch_235*scratch_282 - scratch_236*scratch_283 - scratch_237*scratch_284);
    double scratch_286 = scratch_269*(-A[311]*scratch_272 - scratch_256*scratch_273 - scratch_257*scratch_274 - scratch_258*scratch_275 - scratch_259*scratch_276 - scratch_260*scratch_277 - scratch_261*scratch_278 - scratch_262*scratch_279 - scratch_263*scratch_280 - scratch_264*scratch_281 - scratch_265*scratch_282 - scratch_266*scratch_283 - scratch_267*scratch_284 - scratch_268*scratch_285);
    double scratch_287 = -scratch_120*scratch_281 - scratch_143*scratch_282 - scratch_15*scratch_274 - scratch_168*scratch_283 - scratch_195*scratch_284 - scratch_224*scratch_285 - scratch_24*scratch_275 - scratch_255*scratch_286 + scratch_271 - scratch_272*scratch_4 - scratch_273*scratch_7 - scratch_276*scratch_35 - scratch_277*scratch_48 - scratch_278*scratch_63 - scratch_279*scratch_80 - scratch_280*scratch_99;
    double scratch_288 = -A[320]*scratch_6 + A[321];
    double scratch_289 = -A[320]*scratch_13 + A[322] - scratch_14*scratch_288;
    double scratch_290 = -A[320]*scratch_21 - scratch_22*scratch_288 - scratch_23*scratch_289;
    double scratch_291 = -A[320]*scratch_31 - scratch_288*scratch_32 - scratch_289*scratch_33 - scratch_290*scratch_34;
    double scratch_292 = -A[320]*scratch_43 + A[323] - scratch_288*scratch_44 - scratch_289*scratch_45 - scratch_290*scratch_46 - scratch_291*scratch_47;
    double scratch_293 = -A[320]*scratch_57 + A[324] - scratch_288*scratch_58 - scratch_289*scratch_59 - scratch_290*scratch_60 - scratch_291*scratch_61 - scratch_292*scratch_62;
    double scratch_294 = -A[320]*scratch_73 + A[325] - scratch_288*scratch_74 - scratch_289*scratch_75 - scratch_290*scratch_76 - scratch_291*scratch_77 - scratch_292*scratch_78 - scratch_293*scratch_79;
    double scratch_295 = -A[320]*scratch_91 + A[326] - scratch_288*scratch_92 - scratch_289*scratch_93 - scratch_290*scratch_94 - scratch_291*scratch_95 - scratch_292*scratch_96 - scratch_293*scratch_97 - scratch_294*scratch_98;
    double scratch_296 = -A[320]*scratch_111 - scratch_112*scratch_288 - scratch_113*scratch_289 - scratch_114*scratch_290 - scratch_115*scratch_291 - scratch_116*scratch_292 - scratch_117*scratch_293 - scratch_118*scratch_294 - scratch_119*scratch_295;
    double scratch_297 = -A[320]*scratch_133 - scratch_134*scratch_288 - scratch_135*scratch_289 - scratch_136*scratch_290 - scratch_137*scratch_291 - scratch_138*scratch_292 - scratch_139*scratch_293 - scratch_140*scratch_294 - scratch_141*scratch_295 - scratch_142*scratch_296;
    double scratch_298 = -A[320]*scratch_157 - scratch_158*scratch_288 - scratch_159*scratch_289 - scratch_160*scratch_290 - scratch_161*scratch_291 - scratch_162*scratch_292 - scratch_163*scratch_293 - scratch_164*scratch_294 - scratch_165*scratch_295 - scratch_166*scratch_296 - scratch_167*scratch_297;
    double scratch_299 = -A[320]*scratch_183 + A[327] - scratch_184*scratch_288 - scratch_185*scratch_289 - scratch_186*scratch_290 - scratch_187*scratch_291 - scratch_188*scratch_292 - scratch_189*scratch_293 - scratch_190*scratch_294 - scratch_191*scratch_295 - scratch_192*scratch_296 - scratch_193*scratch_297 - scratch_194*scratch_298;
    double scratch_300 = -A[320]*scratch_211 - scratch_212*scratch_288 - scratch_213*scratch_289 - scratch_214*scratch_290 - scratch_215*scratch_291 - scratch_216*scratch_292 - scratch_217*scratch_293 - scratch_218*scratch_294 - scratch_219*scratch_295 - scratch_220*scratch_296 - scratch_221*scratch_297 - scratch_222*scratch_298 - scratch_223*scratch_299;
    double scratch_301 = -A[320]*scratch_241 - scratch_242*scratch_288 - scratch_243*scratch_289 - scratch_244*scratch_290 - scratch_245*scratch_291 - scratch_246*scratch_292 - scratch_247*scratch_293 - scratch_248*scratch_294 - scratch_249*scratch_295 - scratch_250*scratch_296 - scratch_251*scratch_297 - scratch_252*scratch_298 - scratch_253*scratch_299 - scratch_254*scratch_300;
    double scratch_302 = 1.0/(-A[320]*scratch_272 + A[328] - scratch_273*scratch_288 - scratch_274*scratch_289 - scratch_275*scratch_290 - scratch_276*scratch_291 - scratch_277*scratch_292 - scratch_278*scratch_293 - scratch_279*scratch_294 - scratch_280*scratch_295 - scratch_281*scratch_296 - scratch_282*scratch_297 - scratch_283*scratch_298 - scratch_284*scratch_299 - scratch_285*scratch_300 - scratch_286*scratch_301);
    double scratch_303 = scratch_302*(-A[320]*scratch_10 - scratch_109*scratch_295 - scratch_11*scratch_288 - scratch_131*scratch_296 - scratch_155*scratch_297 - scratch_181*scratch_298 - scratch_19*scratch_289 - scratch_209*scratch_299 - scratch_239*scratch_300 - scratch_270*scratch_301 - scratch_29*scratch_290 - scratch_291*scratch_41 - scratch_292*scratch_55 - scratch_293*scratch_71 - scratch_294*scratch_89);
    double scratch_304 = A[17]*scratch_0;
    double scratch_305 = scratch_5*(-A[22]*scratch_304 + A[39]);
    double scratch_306 = scratch_9*(-A[44]*scratch_304 + A[61] - scratch_305*scratch_8);
    double scratch_307 = scratch_18*(-A[66]*scratch_304 + A[83] - scratch_16*scratch_305 - scratch_17*scratch_306);
    double scratch_308 = scratch_28*(A[105] - A[88]*scratch_304 - scratch_25*scratch_305 - scratch_26*scratch_306 - scratch_27*scratch_307);
    double scratch_309 = scratch_40*(-A[110]*scratch_304 + A[127] - scratch_305*scratch_36 - scratch_306*scratch_37 - scratch_307*scratch_38 - scratch_308*scratch_39);
    double scratch_310 = scratch_54*(-A[132]*scratch_304 + A[149] - scratch_305*scratch_49 - scratch_306*scratch_50 - scratch_307*scratch_51 - scratch_308*scratch_52 - scratch_309*scratch_53);
    double scratch_311 = scratch_70*(-A[154]*scratch_304 - scratch_305*scratch_64 - scratch_306*scratch_65 - scratch_307*scratch_66 - scratch_308*scratch_67 - scratch_309*scratch_68 - scratch_310*scratch_69);
    double scratch_312 = scratch_88*(-A[173]*scratch_304 - scratch_305*scratch_81 - scratch_306*scratch_82 - scratch_307*scratch_83 - scratch_308*scratch_84 - scratch_309*scratch_85 - scratch_310*scratch_86 - scratch_311*scratch_87);
    double scratch_313 = scratch_108*(-A[191]*scratch_304 + A[207] - scratch_100*scratch_305 - scratch_101*scratch_306 - scratch_102*scratch_307 - scratch_103*scratch_308 - scratch_104*scratch_309 - scratch_105*scratch_310 - scratch_106*scratch_311 - scratch_107*scratch_312);
    double scratch_314 = scratch_130*(-A[210]*scratch_304 + A[224] - scratch_121*scratch_305 - scratch_122*scratch_306 - scratch_123*scratch_307 - scratch_124*scratch_308 - scratch_125*scratch_309 - scratch_126*scratch_310 - scratch_127*scratch_311 - scratch_128*scratch_312 - scratch_129*scratch_313);
    double scratch_315 = scratch_154*(-A[227]*scratch_304 + A[244] - scratch_144*scratch_305 - scratch_145*scratch_306 - scratch_146*scratch_307 - scratch_147*scratch_308 - scratch_148*scratch_309 - scratch_149*scratch_310 - scratch_150*scratch_311 - scratch_151*scratch_312 - scratch_152*scratch_313 - scratch_153*scratch_314);
    double scratch_316 = scratch_180*(-A[249]*scratch_304 + A[266] - scratch_169*scratch_305 - scratch_170*scratch_306 - scratch_171*scratch_307 - scratch_172*scratch_308 - scratch_173*scratch_309 - scratch_174*scratch_310 - scratch_175*scratch_311 - scratch_176*scratch_312 - scratch_177*scratch_313 - scratch_178*scratch_314 - scratch_179*scratch_315);
    double scratch_317 = scratch_208*(-A[271]*scratch_304 + A[288] - scratch_196*scratch_305 - scratch_197*scratch_306 - scratch_198*scratch_307 - scratch_199*scratch_308 - scratch_200*scratch_309 - scratch_201*scratch_310 - scratch_202*scratch_311 - scratch_203*scratch_312 - scratch_204*scratch_313 - scratch_205*scratch_314 - scratch_206*scratch_315 - scratch_207*scratch_316);
    double scratch_318 = scratch_238*(-A[293]*scratch_304 + A[309] - scratch_225*scratch_305 - scratch_226*scratch_306 - scratch_227*scratch_307 - scratch_228*scratch_308 - scratch_229*scratch_309 - scratch_230*scratch_310 - scratch_231*scratch_311 - scratch_232*scratch_312 - scratch_233*scratch_313 - scratch_234*scratch_314 - scratch_235*scratch_315 - scratch_236*scratch_316 - scratch_237*scratch_317);
    double scratch_319 = scratch_269*(-A[311]*scratch_305 - scratch_256*scratch_306 - scratch_257*scratch_307 - scratch_258*scratch_308 - scratch_259*scratch_309 - scratch_260*scratch_310 - scratch_261*scratch_311 - scratch_262*scratch_312 - scratch_263*scratch_313 - scratch_264*scratch_314 - scratch_265*scratch_315 - scratch_266*scratch_316 - scratch_267*scratch_317 - scratch_268*scratch_318);
    double scratch_320 = scratch_302*(-A[320]*scratch_305 + A[329] - scratch_288*scratch_306 - scratch_289*scratch_307 - scratch_290*scratch_308 - scratch_291*scratch_309 - scratch_292*scratch_310 - scratch_293*scratch_311 - scratch_294*scratch_312 - scratch_295*scratch_313 - scratch_296*scratch_314 - scratch_297*scratch_315 - scratch_298*scratch_316 - scratch_299*scratch_317 - scratch_300*scratch_318 - scratch_301*scratch_319);
    double scratch_321 = -scratch_120*scratch_314 - scratch_143*scratch_315 - scratch_15*scratch_307 - scratch_168*scratch_316 - scratch_195*scratch_317 - scratch_224*scratch_318 - scratch_24*scratch_308 - scratch_255*scratch_319 - scratch_287*scratch_320 + scratch_304 - scratch_305*scratch_4 - scratch_306*scratch_7 - scratch_309*scratch_35 - scratch_310*scratch_48 - scratch_311*scratch_63 - scratch_312*scratch_80 - scratch_313*scratch_99;
    double scratch_322 = -A[331]*scratch_4 + A[332];
    double scratch_323 = -A[331]*scratch_3 + A[333] - scratch_322*scratch_6;
    double scratch_324 = -A[331]*scratch_12 + A[334] - scratch_13*scratch_322 - scratch_14*scratch_323;
    double scratch_325 = -A[331]*scratch_20 + A[335] - scratch_21*scratch_322 - scratch_22*scratch_323 - scratch_23*scratch_324;
    double scratch_326 = -A[331]*scratch_30 + A[336] - scratch_31*scratch_322 - scratch_32*scratch_323 - scratch_324*scratch_33 - scratch_325*scratch_34;
    double scratch_327 = -A[331]*scratch_42 + A[337] - scratch_322*scratch_43 - scratch_323*scratch_44 - scratch_324*scratch_45 - scratch_325*scratch_46 - scratch_326*scratch_47;
    double scratch_328 = -A[331]*scratch_56 - scratch_322*scratch_57 - scratch_323*scratch_58 - scratch_324*scratch_59 - scratch_325*scratch_60 - scratch_326*scratch_61 - scratch_327*scratch_62;
    double scratch_329 = -A[331]*scratch_72 - scratch_322*scratch_73 - scratch_323*scratch_74 - scratch_324*scratch_75 - scratch_325*scratch_76 - scratch_326*scratch_77 - scratch_327*scratch_78 - scratch_328*scratch_79;
    double scratch_330 = -A[331]*scratch_90 + A[338] - scratch_322*scratch_91 - scratch_323*scratch_92 - scratch_324*scratch_93 - scratch_325*scratch_94 - scratch_326*scratch_95 - scratch_327*scratch_96 - scratch_328*scratch_97 - scratch_329*scratch_98;
    double scratch_331 = -A[331]*scratch_110 + A[339] - scratch_111*scratch_322 - scratch_112*scratch_323 - scratch_113*scratch_324 - scratch_114*scratch_325 - scratch_115*scratch_326 - scratch_116*scratch_327 - scratch_117*scratch_328 - scratch_118*scratch_329 - scratch_119*scratch_330;
    double scratch_332 = -A[331]*scratch_132 - scratch_133*scratch_322 - scratch_134*scratch_323 - scratch_135*scratch_324 - scratch_136*scratch_325 - scratch_137*scratch_326 - scratch_138*scratch_327 - scratch_139*scratch_328 - scratch_140*scratch_329 - scratch_141*scratch_330 - scratch_142*scratch_331;
    double scratch_333 = -A[331]*scratch_156 - scratch_157*scratch_322 - scratch_158*scratch_323 - scratch_159*scratch_324 - scratch_160*scratch_325 - scratch_161*scratch_326 - scratch_162*scratch_327 - scratch_163*scratch_328 - scratch_164*scratch_329 - scratch_165*scratch_330 - scratch_166*scratch_331 - scratch_167*scratch_332;
    double scratch_334 = -A[331]*scratch_182 - scratch_183*scratch_322 - scratch_184*scratch_323 - scratch_185*scratch_324 - scratch_186*scratch_325 - scratch_187*scratch_326 - scratch_188*scratch_327 - scratch_189*scratch_328 - scratch_190*scratch_329 - scratch_191*scratch_330 - scratch_192*scratch_331 - scratch_193*scratch_332 - scratch_194*scratch_333;
    double scratch_335 = -A[331]*scratch_210 + A[340] - scratch_211*scratch_322 - scratch_212*scratch_323 - scratch_213*scratch_324 - scratch_214*scratch_325 - scratch_215*scratch_326 - scratch_216*scratch_327 - scratch_217*scratch_328 - scratch_218*scratch_329 - scratch_219*scratch_330 - scratch_220*scratch_331 - scratch_221*scratch_332 - scratch_222*scratch_333 - scratch_223*scratch_334;
    double scratch_336 = -A[331]*scratch_240 - scratch_241*scratch_322 - scratch_242*scratch_323 - scratch_243*scratch_324 - scratch_244*scratch_325 - scratch_245*scratch_326 - scratch_246*scratch_327 - scratch_247*scratch_328 - scratch_248*scratch_329 - scratch_249*scratch_330 - scratch_250*scratch_331 - scratch_251*scratch_332 - scratch_252*scratch_333 - scratch_253*scratch_334 - scratch_254*scratch_335;
    double scratch_337 = -A[331]*scratch_271 + A[341] - scratch_272*scratch_322 - scratch_273*scratch_323 - scratch_274*scratch_324 - scratch_275*scratch_325 - scratch_276*scratch_326 - scratch_277*scratch_327 - scratch_278*scratch_328 - scratch_279*scratch_329 - scratch_280*scratch_330 - scratch_281*scratch_331 - scratch_282*scratch_332 - scratch_283*scratch_333 - scratch_284*scratch_334 - scratch_285*scratch_335 - scratch_286*scratch_336;
    double scratch_338 = 1.0/(-A[331]*scratch_304 + A[342] - scratch_305*scratch_322 - scratch_306*scratch_323 - scratch_307*scratch_324 - scratch_308*scratch_325 - scratch_309*scratch_326 - scratch_310*scratch_327 - scratch_311*scratch_328 - scratch_312*scratch_329 - scratch_313*scratch_330 - scratch_314*scratch_331 - scratch_315*scratch_332 - scratch_316*scratch_333 - scratch_317*scratch_334 - scratch_318*scratch_335 - scratch_319*scratch_336 - scratch_320*scratch_337);
    double scratch_339 = scratch_338*(-A[331]*scratch_2 - scratch_10*scratch_322 - scratch_109*scratch_330 - scratch_11*scratch_323 - scratch_131*scratch_331 - scratch_155*scratch_332 - scratch_181*scratch_333 - scratch_19*scratch_324 - scratch_209*scratch_334 - scratch_239*scratch_335 - scratch_270*scratch_336 - scratch_29*scratch_325 - scratch_303*scratch_337 - scratch_326*scratch_41 - scratch_327*scratch_55 - scratch_328*scratch_71 - scratch_329*scratch_89);
    double scratch_340 = -A[345]*scratch_4 + A[346];
    double scratch_341 = -A[345]*scratch_3 + A[347] - scratch_340*scratch_6;
    double scratch_342 = -A[345]*scratch_12 - scratch_13*scratch_340 - scratch_14*scratch_341;
    double scratch_343 = -A[345]*scratch_20 + A[348] - scratch_21*scratch_340 - scratch_22*scratch_341 - scratch_23*scratch_342;
    double scratch_344 = -A[345]*scratch_30 + A[349] - scratch_31*scratch_340 - scratch_32*scratch_341 - scratch_33*scratch_342 - scratch_34*scratch_343;
    double scratch_345 = -A[345]*scratch_42 - scratch_340*scratch_43 - scratch_341*scratch_44 - scratch_342*scratch_45 - scratch_343*scratch_46 - scratch_344*scratch_47;
    double scratch_346 = -A[345]*scratch_56 - scratch_340*scratch_57 - scratch_341*scratch_58 - scratch_342*scratch_59 - scratch_343*scratch_60 - scratch_344*scratch_61 - scratch_345*scratch_62;
    double scratch_347 = -A[345]*scratch_72 - scratch_340*scratch_73 - scratch_341*scratch_74 - scratch_342*scratch_75 - scratch_343*scratch_76 - scratch_344*scratch_77 - scratch_345*scratch_78 - scratch_346*scratch_79;
    double scratch_348 = -A[345]*scratch_90 + A[350] - scratch_340*scratch_91 - scratch_341*scratch_92 - scratch_342*scratch_93 - scratch_343*scratch_94 - scratch_344*scratch_95 - scratch_345*scratch_96 - scratch_346*scratch_97 - scratch_347*scratch_98;
    double scratch_349 = -A[345]*scratch_110 + A[351] - scratch_111*scratch_340 - scratch_112*scratch_341 - scratch_113*scratch_342 - scratch_114*scratch_343 - scratch_115*scratch_344 - scratch_116*scratch_345 - scratch_117*scratch_346 - scratch_118*scratch_347 - scratch_119*scratch_348;
    double scratch_350 = -A[345]*scratch_132 - scratch_133*scratch_340 - scratch_134*scratch_341 - scratch_135*scratch_342 - scratch_136*scratch_343 - scratch_137*scratch_344 - scratch_138*scratch_345 - scratch_139*scratch_346 - scratch_140*scratch_347 - scratch_141*scratch_348 - scratch_142*scratch_349;
    double scratch_351 = -A[345]*scratch_156 - scratch_157*scratch_340 - scratch_158*scratch_341 - scratch_159*scratch_342 - scratch_160*scratch_343 - scratch_161*scratch_344 - scratch_162*scratch_345 - scratch_163*scratch_346 - scratch_164*scratch_347 - scratch_165*scratch_348 - scratch_166*scratch_349 - scratch_167*scratch_350;
    double scratch_352 = -A[345]*scratch_182 - scratch_183*scratch_340 - scratch_184*scratch_341 - scratch_185*scratch_342 - scratch_186*scratch_343 - scratch_187*scratch_344 - scratch_188*scratch_345 - scratch_189*scratch_346 - scratch_190*scratch_347 - scratch_191*scratch_348 - scratch_192*scratch_349 - scratch_193*scratch_350 - scratch_194*scratch_351;
    double scratch_353 = -A[345]*scratch_210 - scratch_211*scratch_340 - scratch_212*scratch_341 - scratch_213*scratch_342 - scratch_214*scratch_343 - scratch_215*scratch_344 - scratch_216*scratch_345 - scratch_217*scratch_346 - scratch_218*scratch_347 - scratch_219*scratch_348 - scratch_220*scratch_349 - scratch_221*scratch_350 - scratch_222*scratch_351 - scratch_223*scratch_352;
    double scratch_354 = -A[345]*scratch_240 - scratch_241*scratch_340 - scratch_242*scratch_341 - scratch_243*scratch_342 - scratch_244*scratch_343 - scratch_245*scratch_344 - scratch_246*scratch_345 - scratch_247*scratch_346 - scratch_248*scratch_347 - scratch_249*scratch_348 - scratch_250*scratch_349 - scratch_251*scratch_350 - scratch_252*scratch_351 - scratch_253*scratch_352 - scratch_254*scratch_353;
    double scratch_355 = -A[345]*scratch_271 - scratch_272*scratch_340 - scratch_273*scratch_341 - scratch_274*scratch_342 - scratch_275*scratch_343 - scratch_276*scratch_344 - scratch_277*scratch_345 - scratch_278*scratch_346 - scratch_279*scratch_347 - scratch_280*scratch_348 - scratch_281*scratch_349 - scratch_282*scratch_350 - scratch_283*scratch_351 - scratch_284*scratch_352 - scratch_285*scratch_353 - scratch_286*scratch_354;
    double scratch_356 = -A[345]*scratch_304 + A[352] - scratch_305*scratch_340 - scratch_306*scratch_341 - scratch_307*scratch_342 - scratch_308*scratch_343 - scratch_309*scratch_344 - scratch_310*scratch_345 - scratch_311*scratch_346 - scratch_312*scratch_347 - scratch_313*scratch_348 - scratch_314*scratch_349 - scratch_315*scratch_350 - scratch_316*scratch_351 - scratch_317*scratch_352 - scratch_318*scratch_353 - scratch_319*scratch_354 - scratch_320*scratch_355;
    double scratch_357 = -A[345]*scratch_2 - scratch_10*scratch_340 - scratch_109*scratch_348 - scratch_11*scratch_341 - scratch_131*scratch_349 - scratch_155*scratch_350 - scratch_181*scratch_351 - scratch_19*scratch_342 - scratch_209*scratch_352 - scratch_239*scratch_353 - scratch_270*scratch_354 - scratch_29*scratch_343 - scratch_303*scratch_355 - scratch_339*scratch_356 - scratch_344*scratch_41 - scratch_345*scratch_55 - scratch_346*scratch_71 - scratch_347*scratch_89;
    double scratch_358 = A[18]*scratch_0;
    double scratch_359 = scratch_5*(-A[22]*scratch_358 + A[40]);
    double scratch_360 = scratch_9*(-A[44]*scratch_358 + A[62] - scratch_359*scratch_8);
    double scratch_361 = scratch_18*(-A[66]*scratch_358 + A[84] - scratch_16*scratch_359 - scratch_17*scratch_360);
    double scratch_362 = scratch_28*(A[106] - A[88]*scratch_358 - scratch_25*scratch_359 - scratch_26*scratch_360 - scratch_27*scratch_361);
    double scratch_363 = scratch_40*(-A[110]*scratch_358 + A[128] - scratch_359*scratch_36 - scratch_360*scratch_37 - scratch_361*scratch_38 - scratch_362*scratch_39);
    double scratch_364 = scratch_54*(-A[132]*scratch_358 + A[150] - scratch_359*scratch_49 - scratch_360*scratch_50 - scratch_361*scratch_51 - scratch_362*scratch_52 - scratch_363*scratch_53);
    double scratch_365 = scratch_70*(-A[154]*scratch_358 - scratch_359*scratch_64 - scratch_360*scratch_65 - scratch_361*scratch_66 - scratch_362*scratch_67 - scratch_363*scratch_68 - scratch_364*scratch_69);
    double scratch_366 = scratch_88*(-A[173]*scratch_358 - scratch_359*scratch_81 - scratch_360*scratch_82 - scratch_361*scratch_83 - scratch_362*scratch_84 - scratch_363*scratch_85 - scratch_364*scratch_86 - scratch_365*scratch_87);
    double scratch_367 = scratch_108*(-A[191]*scratch_358 + A[208] - scratch_100*scratch_359 - scratch_101*scratch_360 - scratch_102*scratch_361 - scratch_103*scratch_362 - scratch_104*scratch_363 - scratch_105*scratch_364 - scratch_106*scratch_365 - scratch_107*scratch_366);
    double scratch_368 = scratch_130*(-A[210]*scratch_358 + A[225] - scratch_121*scratch_359 - scratch_122*scratch_360 - scratch_123*scratch_361 - scratch_124*scratch_362 - scratch_125*scratch_363 - scratch_126*scratch_364 - scratch_127*scratch_365 - scratch_128*scratch_366 - scratch_129*scratch_367);
    double scratch_369 = scratch_154*(-A[227]*scratch_358 + A[245] - scratch_144*scratch_359 - scratch_145*scratch_360 - scratch_146*scratch_361 - scratch_147*scratch_362 - scratch_148*scratch_363 - scratch_149*scratch_364 - scratch_150*scratch_365 - scratch_151*scratch_366 - scratch_152*scratch_367 - scratch_153*scratch_368);
    double scratch_370 = scratch_180*(-A[249]*scratch_358 + A[267] - scratch_169*scratch_359 - scratch_170*scratch_360 - scratch_171*scratch_361 - scratch_172*scratch_362 - scratch_173*scratch_363 - scratch_174*scratch_364 - scratch_175*scratch_365 - scratch_176*scratch_366 - scratch_177*scratch_367 - scratch_178*scratch_368 - scratch_179*scratch_369);
    double scratch_371 = scratch_208*(-A[271]*scratch_358 + A[289] - scratch_196*scratch_359 - scratch_197*scratch_360 - scratch_198*scratch_361 - scratch_199*scratch_362 - scratch_200*scratch_363 - scratch_201*scratch_364 - scratch_202*scratch_365 - scratch_203*scratch_366 - scratch_204*scratch_367 - scratch_205*scratch_368 - scratch_206*scratch_369 - scratch_207*scratch_370);
    double scratch_372 = scratch_238*(-A[293]*scratch_358 - scratch_225*scratch_359 - scratch_226*scratch_360 - scratch_227*scratch_361 - scratch_228*scratch_362 - scratch_229*scratch_363 - scratch_230*scratch_364 - scratch_231*scratch_365 - scratch_232*scratch_366 - scratch_233*scratch_367 - scratch_234*scratch_368 - scratch_235*scratch_369 - scratch_236*scratch_370 - scratch_237*scratch_371);
    double scratch_373 = scratch_269*(-A[311]*scratch_359 - scratch_256*scratch_360 - scratch_257*scratch_361 - scratch_258*scratch_362 - scratch_259*scratch_363 - scratch_260*scratch_364 - scratch_261*scratch_365 - scratch_262*scratch_366 - scratch_263*scratch_367 - scratch_264*scratch_368 - scratch_265*scratch_369 - scratch_266*scratch_370 - scratch_267*scratch_371 - scratch_268*scratch_372);
    double scratch_374 = scratch_302*(-A[320]*scratch_359 - scratch_288*scratch_360 - scratch_289*scratch_361 - scratch_290*scratch_362 - scratch_291*scratch_363 - scratch_292*scratch_364 - scratch_293*scratch_365 - scratch_294*scratch_366 - scratch_295*scratch_367 - scratch_296*scratch_368 - scratch_297*scratch_369 - scratch_298*scratch_370 - scratch_299*scratch_371 - scratch_300*scratch_372 - scratch_301*scratch_373);
    double scratch_375 = scratch_338*(-A[331]*scratch_358 + A[343] - scratch_322*scratch_359 - scratch_323*scratch_360 - scratch_324*scratch_361 - scratch_325*scratch_362 - scratch_326*scratch_363 - scratch_327*scratch_364 - scratch_328*scratch_365 - scratch_329*scratch_366 - scratch_330*scratch_367 - scratch_331*scratch_368 - scratch_332*scratch_369 - scratch_333*scratch_370 - scratch_334*scratch_371 - scratch_335*scratch_372 - scratch_336*scratch_373 - scratch_337*scratch_374);
    double scratch_376 = 1.0/(-A[345]*scratch_358 + A[353] - scratch_340*scratch_359 - scratch_341*scratch_360 - scratch_342*scratch_361 - scratch_343*scratch_362 - scratch_344*scratch_363 - scratch_345*scratch_364 - scratch_346*scratch_365 - scratch_347*scratch_366 - scratch_348*scratch_367 - scratch_349*scratch_368 - scratch_350*scratch_369 - scratch_351*scratch_370 - scratch_352*scratch_371 - scratch_353*scratch_372 - scratch_354*scratch_373 - scratch_355*scratch_374 - scratch_356*scratch_375);
    double scratch_377 = -scratch_120*scratch_368 - scratch_143*scratch_369 - scratch_15*scratch_361 - scratch_168*scratch_370 - scratch_195*scratch_371 - scratch_224*scratch_372 - scratch_24*scratch_362 - scratch_255*scratch_373 - scratch_287*scratch_374 - scratch_321*scratch_375 - scratch_35*scratch_363 + scratch_358 - scratch_359*scratch_4 - scratch_360*scratch_7 - scratch_364*scratch_48 - scratch_365*scratch_63 - scratch_366*scratch_80 - scratch_367*scratch_99;
    double scratch_378 = scratch_376*scratch_377;
    double scratch_379 = b[19]/A[355];
    double scratch_380 = A[20]*scratch_0;
    double scratch_381 = scratch_5*(-A[22]*scratch_380 + A[42]);
    double scratch_382 = scratch_9*(-A[44]*scratch_380 + A[64] - scratch_381*scratch_8);
    double scratch_383 = scratch_18*(-A[66]*scratch_380 + A[86] - scratch_16*scratch_381 - scratch_17*scratch_382);
    double scratch_384 = scratch_28*(A[108] - A[88]*scratch_380 - scratch_25*scratch_381 - scratch_26*scratch_382 - scratch_27*scratch_383);
    double scratch_385 = scratch_40*(-A[110]*scratch_380 + A[130] - scratch_36*scratch_381 - scratch_37*scratch_382 - scratch_38*scratch_383 - scratch_384*scratch_39);
    double scratch_386 = scratch_54*(-A[132]*scratch_380 + A[152] - scratch_381*scratch_49 - scratch_382*scratch_50 - scratch_383*scratch_51 - scratch_384*scratch_52 - scratch_385*scratch_53);
    double scratch_387 = scratch_70*(-A[154]*scratch_380 + A[171] - scratch_381*scratch_64 - scratch_382*scratch_65 - scratch_383*scratch_66 - scratch_384*scratch_67 - scratch_385*scratch_68 - scratch_386*scratch_69);
    double scratch_388 = scratch_88*(-A[173]*scratch_380 + A[189] - scratch_381*scratch_81 - scratch_382*scratch_82 - scratch_383*scratch_83 - scratch_384*scratch_84 - scratch_385*scratch_85 - scratch_386*scratch_86 - scratch_387*scratch_87);
    double scratch_389 = scratch_108*(-A[191]*scratch_380 - scratch_100*scratch_381 - scratch_101*scratch_382 - scratch_102*scratch_383 - scratch_103*scratch_384 - scratch_104*scratch_385 - scratch_105*scratch_386 - scratch_106*scratch_387 - scratch_107*scratch_388);
    double scratch_390 = scratch_130*(-A[210]*scratch_380 - scratch_121*scratch_381 - scratch_122*scratch_382 - scratch_123*scratch_383 - scratch_124*scratch_384 - scratch_125*scratch_385 - scratch_126*scratch_386 - scratch_127*scratch_387 - scratch_128*scratch_388 - scratch_129*scratch_389);
    double scratch_391 = scratch_154*(-A[227]*scratch_380 + A[247] - scratch_144*scratch_381 - scratch_145*scratch_382 - scratch_146*scratch_383 - scratch_147*scratch_384 - scratch_148*scratch_385 - scratch_149*scratch_386 - scratch_150*scratch_387 - scratch_151*scratch_388 - scratch_152*scratch_389 - scratch_153*scratch_390);
    double scratch_392 = scratch_180*(-A[249]*scratch_380 + A[269] - scratch_169*scratch_381 - scratch_170*scratch_382 - scratch_171*scratch_383 - scratch_172*scratch_384 - scratch_173*scratch_385 - scratch_174*scratch_386 - scratch_175*scratch_387 - scratch_176*scratch_388 - scratch_177*scratch_389 - scratch_178*scratch_390 - scratch_179*scratch_391);
    double scratch_393 = scratch_208*(-A[271]*scratch_380 + A[291] - scratch_196*scratch_381 - scratch_197*scratch_382 - scratch_198*scratch_383 - scratch_199*scratch_384 - scratch_200*scratch_385 - scratch_201*scratch_386 - scratch_202*scratch_387 - scratch_203*scratch_388 - scratch_204*scratch_389 - scratch_205*scratch_390 - scratch_206*scratch_391 - scratch_207*scratch_392);
    double scratch_394 = scratch_238*(-A[293]*scratch_380 - scratch_225*scratch_381 - scratch_226*scratch_382 - scratch_227*scratch_383 - scratch_228*scratch_384 - scratch_229*scratch_385 - scratch_230*scratch_386 - scratch_231*scratch_387 - scratch_232*scratch_388 - scratch_233*scratch_389 - scratch_234*scratch_390 - scratch_235*scratch_391 - scratch_236*scratch_392 - scratch_237*scratch_393);
    double scratch_395 = scratch_269*(-A[311]*scratch_381 - scratch_256*scratch_382 - scratch_257*scratch_383 - scratch_258*scratch_384 - scratch_259*scratch_385 - scratch_260*scratch_386 - scratch_261*scratch_387 - scratch_262*scratch_388 - scratch_263*scratch_389 - scratch_264*scratch_390 - scratch_265*scratch_391 - scratch_266*scratch_392 - scratch_267*scratch_393 - scratch_268*scratch_394);
    double scratch_396 = scratch_302*(-A[320]*scratch_381 - scratch_288*scratch_382 - scratch_289*scratch_383 - scratch_290*scratch_384 - scratch_291*scratch_385 - scratch_292*scratch_386 - scratch_293*scratch_387 - scratch_294*scratch_388 - scratch_295*scratch_389 - scratch_296*scratch_390 - scratch_297*scratch_391 - scratch_298*scratch_392 - scratch_299*scratch_393 - scratch_300*scratch_394 - scratch_301*scratch_395);
    double scratch_397 = scratch_338*(-A[331]*scratch_380 - scratch_322*scratch_381 - scratch_323*scratch_382 - scratch_324*scratch_383 - scratch_325*scratch_384 - scratch_326*scratch_385 - scratch_327*scratch_386 - scratch_328*scratch_387 - scratch_329*scratch_388 - scratch_330*scratch_389 - scratch_331*scratch_390 - scratch_332*scratch_391 - scratch_333*scratch_392 - scratch_334*scratch_393 - scratch_335*scratch_394 - scratch_336*scratch_395 - scratch_337*scratch_396);
    double scratch_398 = -A[345]*scratch_380 - scratch_340*scratch_381 - scratch_341*scratch_382 - scratch_342*scratch_383 - scratch_343*scratch_384 - scratch_344*scratch_385 - scratch_345*scratch_386 - scratch_346*scratch_387 - scratch_347*scratch_388 - scratch_348*scratch_389 - scratch_349*scratch_390 - scratch_350*scratch_391 - scratch_351*scratch_392 - scratch_352*scratch_393 - scratch_353*scratch_394 - scratch_354*scratch_395 - scratch_355*scratch_396 - scratch_356*scratch_397;
    double scratch_399 = b[20]/A[356];
    double scratch_400 = scratch_5*(-A[22]*scratch_1 + b[1]);
    double scratch_401 = scratch_9*(-A[44]*scratch_1 + b[2] - scratch_400*scratch_8);
    double scratch_402 = scratch_18*(-A[66]*scratch_1 + b[3] - scratch_16*scratch_400 - scratch_17*scratch_401);
    double scratch_403 = scratch_28*(-A[88]*scratch_1 + b[4] - scratch_25*scratch_400 - scratch_26*scratch_401 - scratch_27*scratch_402);
    double scratch_404 = scratch_40*(-A[110]*scratch_1 + b[5] - scratch_36*scratch_400 - scratch_37*scratch_401 - scratch_38*scratch_402 - scratch_39*scratch_403);
    double scratch_405 = scratch_54*(-A[132]*scratch_1 + b[6] - scratch_400*scratch_49 - scratch_401*scratch_50 - scratch_402*scratch_51 - scratch_403*scratch_52 - scratch_404*scratch_53);
    double scratch_406 = scratch_70*(-A[154]*scratch_1 + b[7] - scratch_400*scratch_64 - scratch_401*scratch_65 - scratch_402*scratch_66 - scratch_403*scratch_67 - scratch_404*scratch_68 - scratch_405*scratch_69);
    double scratch_407 = scratch_88*(-A[173]*scratch_1 + b[8] - scratch_400*scratch_81 - scratch_401*scratch_82 - scratch_402*scratch_83 - scratch_403*scratch_84 - scratch_404*scratch_85 - scratch_405*scratch_86 - scratch_406*scratch_87);
    double scratch_408 = scratch_108*(-A[191]*scratch_1 + b[9] - scratch_100*scratch_400 - scratch_101*scratch_401 - scratch_102*scratch_402 - scratch_103*scratch_403 - scratch_104*scratch_404 - scratch_105*scratch_405 - scratch_106*scratch_406 - scratch_107*scratch_407);
    double scratch_409 = scratch_130*(-A[210]*scratch_1 + b[10] - scratch_121*scratch_400 - scratch_122*scratch_401 - scratch_123*scratch_402 - scratch_124*scratch_403 - scratch_125*scratch_404 - scratch_126*scratch_405 - scratch_127*scratch_406 - scratch_128*scratch_407 - scratch_129*scratch_408);
    double scratch_410 = scratch_154*(-A[227]*scratch_1 + b[11] - scratch_144*scratch_400 - scratch_145*scratch_401 - scratch_146*scratch_402 - scratch_147*scratch_403 - scratch_148*scratch_404 - scratch_149*scratch_405 - scratch_150*scratch_406 - scratch_151*scratch_407 - scratch_152*scratch_408 - scratch_153*scratch_409);
    double scratch_411 = scratch_180*(-A[249]*scratch_1 + b[12] - scratch_169*scratch_400 - scratch_170*scratch_401 - scratch_171*scratch_402 - scratch_172*scratch_403 - scratch_173*scratch_404 - scratch_174*scratch_405 - scratch_175*scratch_406 - scratch_176*scratch_407 - scratch_177*scratch_408 - scratch_178*scratch_409 - scratch_179*scratch_410);
    double scratch_412 = scratch_208*(-A[271]*scratch_1 + b[13] - scratch_196*scratch_400 - scratch_197*scratch_401 - scratch_198*scratch_402 - scratch_199*scratch_403 - scratch_200*scratch_404 - scratch_201*scratch_405 - scratch_202*scratch_406 - scratch_203*scratch_407 - scratch_204*scratch_408 - scratch_205*scratch_409 - scratch_206*scratch_410 - scratch_207*scratch_411);
    double scratch_413 = scratch_238*(-A[293]*scratch_1 + b[14] - scratch_225*scratch_400 - scratch_226*scratch_401 - scratch_227*scratch_402 - scratch_228*scratch_403 - scratch_229*scratch_404 - scratch_230*scratch_405 - scratch_231*scratch_406 - scratch_232*scratch_407 - scratch_233*scratch_408 - scratch_234*scratch_409 - scratch_235*scratch_410 - scratch_236*scratch_411 - scratch_237*scratch_412);
    double scratch_414 = scratch_269*(-A[311]*scratch_400 + b[15] - scratch_256*scratch_401 - scratch_257*scratch_402 - scratch_258*scratch_403 - scratch_259*scratch_404 - scratch_260*scratch_405 - scratch_261*scratch_406 - scratch_262*scratch_407 - scratch_263*scratch_408 - scratch_264*scratch_409 - scratch_265*scratch_410 - scratch_266*scratch_411 - scratch_267*scratch_412 - scratch_268*scratch_413);
    double scratch_415 = scratch_302*(-A[320]*scratch_400 + b[16] - scratch_288*scratch_401 - scratch_289*scratch_402 - scratch_290*scratch_403 - scratch_291*scratch_404 - scratch_292*scratch_405 - scratch_293*scratch_406 - scratch_294*scratch_407 - scratch_295*scratch_408 - scratch_296*scratch_409 - scratch_297*scratch_410 - scratch_298*scratch_411 - scratch_299*scratch_412 - scratch_300*scratch_413 - scratch_301*scratch_414);
    double scratch_416 = scratch_338*(-A[331]*scratch_1 + b[17] - scratch_322*scratch_400 - scratch_323*scratch_401 - scratch_324*scratch_402 - scratch_325*scratch_403 - scratch_326*scratch_404 - scratch_327*scratch_405 - scratch_328*scratch_406 - scratch_329*scratch_407 - scratch_330*scratch_408 - scratch_331*scratch_409 - scratch_332*scratch_410 - scratch_333*scratch_411 - scratch_334*scratch_412 - scratch_335*scratch_413 - scratch_336*scratch_414 - scratch_337*scratch_415);
    double scratch_417 = scratch_376*(-A[345]*scratch_1 + b[18] - scratch_340*scratch_400 - scratch_341*scratch_401 - scratch_342*scratch_402 - scratch_343*scratch_403 - scratch_344*scratch_404 - scratch_345*scratch_405 - scratch_346*scratch_406 - scratch_347*scratch_407 - scratch_348*scratch_408 - scratch_349*scratch_409 - scratch_350*scratch_410 - scratch_351*scratch_411 - scratch_352*scratch_412 - scratch_353*scratch_413 - scratch_354*scratch_414 - scratch_355*scratch_415 - scratch_356*scratch_416);
    double scratch_418 = A[21]*scratch_0;
    double scratch_419 = scratch_5*(-A[22]*scratch_418 + A[43]);
    double scratch_420 = scratch_9*(-A[44]*scratch_418 + A[65] - scratch_419*scratch_8);
    double scratch_421 = scratch_18*(-A[66]*scratch_418 + A[87] - scratch_16*scratch_419 - scratch_17*scratch_420);
    double scratch_422 = scratch_28*(A[109] - A[88]*scratch_418 - scratch_25*scratch_419 - scratch_26*scratch_420 - scratch_27*scratch_421);
    double scratch_423 = scratch_40*(-A[110]*scratch_418 + A[131] - scratch_36*scratch_419 - scratch_37*scratch_420 - scratch_38*scratch_421 - scratch_39*scratch_422);
    double scratch_424 = scratch_54*(-A[132]*scratch_418 + A[153] - scratch_419*scratch_49 - scratch_420*scratch_50 - scratch_421*scratch_51 - scratch_422*scratch_52 - scratch_423*scratch_53);
    double scratch_425 = scratch_70*(-A[154]*scratch_418 + A[172] - scratch_419*scratch_64 - scratch_420*scratch_65 - scratch_421*scratch_66 - scratch_422*scratch_67 - scratch_423*scratch_68 - scratch_424*scratch_69);
    double scratch_426 = scratch_88*(-A[173]*scratch_418 + A[190] - scratch_419*scratch_81 - scratch_420*scratch_82 - scratch_421*scratch_83 - scratch_422*scratch_84 - scratch_423*scratch_85 - scratch_424*scratch_86 - scratch_425*scratch_87);
    double scratch_427 = scratch_108*(-A[191]*scratch_418 + A[209] - scratch_100*scratch_419 - scratch_101*scratch_420 - scratch_102*scratch_421 - scratch_103*scratch_422 - scratch_104*scratch_423 - scratch_105*scratch_424 - scratch_106*scratch_425 - scratch_107*scratch_426);
    double scratch_428 = scratch_130*(-A[210]*scratch_418 + A[226] - scratch_121*scratch_419 - scratch_122*scratch_420 - scratch_123*scratch_421 - scratch_124*scratch_422 - scratch_125*scratch_423 - scratch_126*scratch_424 - scratch_127*scratch_425 - scratch_128*scratch_426 - scratch_129*scratch_427);
    double scratch_429 = scratch_154*(-A[227]*scratch_418 + A[248] - scratch_144*scratch_419 - scratch_145*scratch_420 - scratch_146*scratch_421 - scratch_147*scratch_422 - scratch_148*scratch_423 - scratch_149*scratch_424 - scratch_150*scratch_425 - scratch_151*scratch_426 - scratch_152*scratch_427 - scratch_153*scratch_428);
    double scratch_430 = scratch_180*(-A[249]*scratch_418 + A[270] - scratch_169*scratch_419 - scratch_170*scratch_420 - scratch_171*scratch_421 - scratch_172*scratch_422 - scratch_173*scratch_423 - scratch_174*scratch_424 - scratch_175*scratch_425 - scratch_176*scratch_426 - scratch_177*scratch_427 - scratch_178*scratch_428 - scratch_179*scratch_429);
    double scratch_431 = scratch_208*(-A[271]*scratch_418 + A[292] - scratch_196*scratch_419 - scratch_197*scratch_420 - scratch_198*scratch_421 - scratch_199*scratch_422 - scratch_200*scratch_423 - scratch_201*scratch_424 - scratch_202*scratch_425 - scratch_203*scratch_426 - scratch_204*scratch_427 - scratch_205*scratch_428 - scratch_206*scratch_429 - scratch_207*scratch_430);
    double scratch_432 = scratch_238*(-A[293]*scratch_418 + A[310] - scratch_225*scratch_419 - scratch_226*scratch_420 - scratch_227*scratch_421 - scratch_228*scratch_422 - scratch_229*scratch_423 - scratch_230*scratch_424 - scratch_231*scratch_425 - scratch_232*scratch_426 - scratch_233*scratch_427 - scratch_234*scratch_428 - scratch_235*scratch_429 - scratch_236*scratch_430 - scratch_237*scratch_431);
    double scratch_433 = scratch_269*(-A[311]*scratch_419 + A[319] - scratch_256*scratch_420 - scratch_257*scratch_421 - scratch_258*scratch_422 - scratch_259*scratch_423 - scratch_260*scratch_424 - scratch_261*scratch_425 - scratch_262*scratch_426 - scratch_263*scratch_427 - scratch_264*scratch_428 - scratch_265*scratch_429 - scratch_266*scratch_430 - scratch_267*scratch_431 - scratch_268*scratch_432);
    double scratch_434 = scratch_302*(-A[320]*scratch_419 + A[330] - scratch_288*scratch_420 - scratch_289*scratch_421 - scratch_290*scratch_422 - scratch_291*scratch_423 - scratch_292*scratch_424 - scratch_293*scratch_425 - scratch_294*scratch_426 - scratch_295*scratch_427 - scratch_296*scratch_428 - scratch_297*scratch_429 - scratch_298*scratch_430 - scratch_299*scratch_431 - scratch_300*scratch_432 - scratch_301*scratch_433);
    double scratch_435 = scratch_338*(-A[331]*scratch_418 + A[344] - scratch_322*scratch_419 - scratch_323*scratch_420 - scratch_324*scratch_421 - scratch_325*scratch_422 - scratch_326*scratch_423 - scratch_327*scratch_424 - scratch_328*scratch_425 - scratch_329*scratch_426 - scratch_330*scratch_427 - scratch_331*scratch_428 - scratch_332*scratch_429 - scratch_333*scratch_430 - scratch_334*scratch_431 - scratch_335*scratch_432 - scratch_336*scratch_433 - scratch_337*scratch_434);
    double scratch_436 = -A[345]*scratch_418 + A[354] - scratch_340*scratch_419 - scratch_341*scratch_420 - scratch_342*scratch_421 - scratch_343*scratch_422 - scratch_344*scratch_423 - scratch_345*scratch_424 - scratch_346*scratch_425 - scratch_347*scratch_426 - scratch_348*scratch_427 - scratch_349*scratch_428 - scratch_350*scratch_429 - scratch_351*scratch_430 - scratch_352*scratch_431 - scratch_353*scratch_432 - scratch_354*scratch_433 - scratch_355*scratch_434 - scratch_356*scratch_435;
    double scratch_437 = -A[357]*scratch_4 + A[358];
    double scratch_438 = -A[357]*scratch_3 + A[359] - scratch_437*scratch_6;
    double scratch_439 = -A[357]*scratch_12 + A[360] - scratch_13*scratch_437 - scratch_14*scratch_438;
    double scratch_440 = -A[357]*scratch_20 + A[361] - scratch_21*scratch_437 - scratch_22*scratch_438 - scratch_23*scratch_439;
    double scratch_441 = -A[357]*scratch_30 + A[362] - scratch_31*scratch_437 - scratch_32*scratch_438 - scratch_33*scratch_439 - scratch_34*scratch_440;
    double scratch_442 = -A[357]*scratch_42 + A[363] - scratch_43*scratch_437 - scratch_438*scratch_44 - scratch_439*scratch_45 - scratch_440*scratch_46 - scratch_441*scratch_47;
    double scratch_443 = -A[357]*scratch_56 + A[364] - scratch_437*scratch_57 - scratch_438*scratch_58 - scratch_439*scratch_59 - scratch_440*scratch_60 - scratch_441*scratch_61 - scratch_442*scratch_62;
    double scratch_444 = -A[357]*scratch_72 + A[365] - scratch_437*scratch_73 - scratch_438*scratch_74 - scratch_439*scratch_75 - scratch_440*scratch_76 - scratch_441*scratch_77 - scratch_442*scratch_78 - scratch_443*scratch_79;
    double scratch_445 = -A[357]*scratch_90 + A[366] - scratch_437*scratch_91 - scratch_438*scratch_92 - scratch_439*scratch_93 - scratch_440*scratch_94 - scratch_441*scratch_95 - scratch_442*scratch_96 - scratch_443*scratch_97 - scratch_444*scratch_98;
    double scratch_446 = -A[357]*scratch_110 + A[367] - scratch_111*scratch_437 - scratch_112*scratch_438 - scratch_113*scratch_439 - scratch_114*scratch_440 - scratch_115*scratch_441 - scratch_116*scratch_442 - scratch_117*scratch_443 - scratch_118*scratch_444 - scratch_119*scratch_445;
    double scratch_447 = -A[357]*scratch_132 + A[368] - scratch_133*scratch_437 - scratch_134*scratch_438 - scratch_135*scratch_439 - scratch_136*scratch_440 - scratch_137*scratch_441 - scratch_138*scratch_442 - scratch_139*scratch_443 - scratch_140*scratch_444 - scratch_141*scratch_445 - scratch_142*scratch_446;
    double scratch_448 = -A[357]*scratch_156 + A[369] - scratch_157*scratch_437 - scratch_158*scratch_438 - scratch_159*scratch_439 - scratch_160*scratch_440 - scratch_161*scratch_441 - scratch_162*scratch_442 - scratch_163*scratch_443 - scratch_164*scratch_444 - scratch_165*scratch_445 - scratch_166*scratch_446 - scratch_167*scratch_447;
    double scratch_449 = -A[357]*scratch_182 + A[370] - scratch_183*scratch_437 - scratch_184*scratch_438 - scratch_185*scratch_439 - scratch_186*scratch_440 - scratch_187*scratch_441 - scratch_188*scratch_442 - scratch_189*scratch_443 - scratch_190*scratch_444 - scratch_191*scratch_445 - scratch_192*scratch_446 - scratch_193*scratch_447 - scratch_194*scratch_448;
    double scratch_450 = -A[357]*scratch_210 + A[371] - scratch_211*scratch_437 - scratch_212*scratch_438 - scratch_213*scratch_439 - scratch_214*scratch_440 - scratch_215*scratch_441 - scratch_216*scratch_442 - scratch_217*scratch_443 - scratch_218*scratch_444 - scratch_219*scratch_445 - scratch_220*scratch_446 - scratch_221*scratch_447 - scratch_222*scratch_448 - scratch_223*scratch_449;
    double scratch_451 = -A[357]*scratch_240 + A[372] - scratch_241*scratch_437 - scratch_242*scratch_438 - scratch_243*scratch_439 - scratch_244*scratch_440 - scratch_245*scratch_441 - scratch_246*scratch_442 - scratch_247*scratch_443 - scratch_248*scratch_444 - scratch_249*scratch_445 - scratch_250*scratch_446 - scratch_251*scratch_447 - scratch_252*scratch_448 - scratch_253*scratch_449 - scratch_254*scratch_450;
    double scratch_452 = -A[357]*scratch_271 + A[373] - scratch_272*scratch_437 - scratch_273*scratch_438 - scratch_274*scratch_439 - scratch_275*scratch_440 - scratch_276*scratch_441 - scratch_277*scratch_442 - scratch_278*scratch_443 - scratch_279*scratch_444 - scratch_280*scratch_445 - scratch_281*scratch_446 - scratch_282*scratch_447 - scratch_283*scratch_448 - scratch_284*scratch_449 - scratch_285*scratch_450 - scratch_286*scratch_451;
    double scratch_453 = -A[357]*scratch_304 + A[374] - scratch_305*scratch_437 - scratch_306*scratch_438 - scratch_307*scratch_439 - scratch_308*scratch_440 - scratch_309*scratch_441 - scratch_310*scratch_442 - scratch_311*scratch_443 - scratch_312*scratch_444 - scratch_313*scratch_445 - scratch_314*scratch_446 - scratch_315*scratch_447 - scratch_316*scratch_448 - scratch_317*scratch_449 - scratch_318*scratch_450 - scratch_319*scratch_451 - scratch_320*scratch_452;
    double scratch_454 = -A[357]*scratch_358 + A[375] - scratch_359*scratch_437 - scratch_360*scratch_438 - scratch_361*scratch_439 - scratch_362*scratch_440 - scratch_363*scratch_441 - scratch_364*scratch_442 - scratch_365*scratch_443 - scratch_366*scratch_444 - scratch_367*scratch_445 - scratch_368*scratch_446 - scratch_369*scratch_447 - scratch_370*scratch_448 - scratch_371*scratch_449 - scratch_372*scratch_450 - scratch_373*scratch_451 - scratch_374*scratch_452 - scratch_375*scratch_453;
    double scratch_455 = scratch_376*scratch_454;
    double scratch_456 = (-A[357]*scratch_1 + b[21] - scratch_379*(-A[357]*scratch_2 + A[376] - scratch_10*scratch_437 - scratch_109*scratch_445 - scratch_11*scratch_438 - scratch_131*scratch_446 - scratch_155*scratch_447 - scratch_181*scratch_448 - scratch_19*scratch_439 - scratch_209*scratch_449 - scratch_239*scratch_450 - scratch_270*scratch_451 - scratch_29*scratch_440 - scratch_303*scratch_452 - scratch_339*scratch_453 - scratch_357*scratch_455 - scratch_41*scratch_441 - scratch_442*scratch_55 - scratch_443*scratch_71 - scratch_444*scratch_89) - scratch_399*(-A[357]*scratch_380 + A[377] - scratch_381*scratch_437 - scratch_382*scratch_438 - scratch_383*scratch_439 - scratch_384*scratch_440 - scratch_385*scratch_441 - scratch_386*scratch_442 - scratch_387*scratch_443 - scratch_388*scratch_444 - scratch_389*scratch_445 - scratch_390*scratch_446 - scratch_391*scratch_447 - scratch_392*scratch_448 - scratch_393*scratch_449 - scratch_394*scratch_450 - scratch_395*scratch_451 - scratch_396*scratch_452 - scratch_397*scratch_453 - scratch_398*scratch_455) - scratch_400*scratch_437 - scratch_401*scratch_438 - scratch_402*scratch_439 - scratch_403*scratch_440 - scratch_404*scratch_441 - scratch_405*scratch_442 - scratch_406*scratch_443 - scratch_407*scratch_444 - scratch_408*scratch_445 - scratch_409*scratch_446 - scratch_410*scratch_447 - scratch_411*scratch_448 - scratch_412*scratch_449 - scratch_413*scratch_450 - scratch_414*scratch_451 - scratch_415*scratch_452 - scratch_416*scratch_453 - scratch_417*scratch_454)/(-A[357]*scratch_418 + A[378] - scratch_419*scratch_437 - scratch_420*scratch_438 - scratch_421*scratch_439 - scratch_422*scratch_440 - scratch_423*scratch_441 - scratch_424*scratch_442 - scratch_425*scratch_443 - scratch_426*scratch_444 - scratch_427*scratch_445 - scratch_428*scratch_446 - scratch_429*scratch_447 - scratch_430*scratch_448 - scratch_431*scratch_449 - scratch_432*scratch_450 - scratch_433*scratch_451 - scratch_434*scratch_452 - scratch_435*scratch_453 - scratch_436*scratch_455);
    double scratch_457 = scratch_13 - scratch_14*scratch_6;
    double scratch_458 = scratch_21 - scratch_22*scratch_6 - scratch_23*scratch_457;
    double scratch_459 = scratch_31 - scratch_32*scratch_6 - scratch_33*scratch_457 - scratch_34*scratch_458;
    double scratch_460 = scratch_43 - scratch_44*scratch_6 - scratch_45*scratch_457 - scratch_458*scratch_46 - scratch_459*scratch_47;
    double scratch_461 = -scratch_457*scratch_59 - scratch_458*scratch_60 - scratch_459*scratch_61 - scratch_460*scratch_62 + scratch_57 - scratch_58*scratch_6;
    double scratch_462 = -scratch_457*scratch_75 - scratch_458*scratch_76 - scratch_459*scratch_77 - scratch_460*scratch_78 - scratch_461*scratch_79 - scratch_6*scratch_74 + scratch_73;
    double scratch_463 = -scratch_457*scratch_93 - scratch_458*scratch_94 - scratch_459*scratch_95 - scratch_460*scratch_96 - scratch_461*scratch_97 - scratch_462*scratch_98 - scratch_6*scratch_92 + scratch_91;
    double scratch_464 = scratch_111 - scratch_112*scratch_6 - scratch_113*scratch_457 - scratch_114*scratch_458 - scratch_115*scratch_459 - scratch_116*scratch_460 - scratch_117*scratch_461 - scratch_118*scratch_462 - scratch_119*scratch_463;
    double scratch_465 = scratch_133 - scratch_134*scratch_6 - scratch_135*scratch_457 - scratch_136*scratch_458 - scratch_137*scratch_459 - scratch_138*scratch_460 - scratch_139*scratch_461 - scratch_140*scratch_462 - scratch_141*scratch_463 - scratch_142*scratch_464;
    double scratch_466 = scratch_157 - scratch_158*scratch_6 - scratch_159*scratch_457 - scratch_160*scratch_458 - scratch_161*scratch_459 - scratch_162*scratch_460 - scratch_163*scratch_461 - scratch_164*scratch_462 - scratch_165*scratch_463 - scratch_166*scratch_464 - scratch_167*scratch_465;
    double scratch_467 = scratch_183 - scratch_184*scratch_6 - scratch_185*scratch_457 - scratch_186*scratch_458 - scratch_187*scratch_459 - scratch_188*scratch_460 - scratch_189*scratch_461 - scratch_190*scratch_462 - scratch_191*scratch_463 - scratch_192*scratch_464 - scratch_193*scratch_465 - scratch_194*scratch_466;
    double scratch_468 = scratch_211 - scratch_212*scratch_6 - scratch_213*scratch_457 - scratch_214*scratch_458 - scratch_215*scratch_459 - scratch_216*scratch_460 - scratch_217*scratch_461 - scratch_218*scratch_462 - scratch_219*scratch_463 - scratch_220*scratch_464 - scratch_221*scratch_465 - scratch_222*scratch_466 - scratch_223*scratch_467;
    double scratch_469 = scratch_241 - scratch_242*scratch_6 - scratch_243*scratch_457 - scratch_244*scratch_458 - scratch_245*scratch_459 - scratch_246*scratch_460 - scratch_247*scratch_461 - scratch_248*scratch_462 - scratch_249*scratch_463 - scratch_250*scratch_464 - scratch_251*scratch_465 - scratch_252*scratch_466 - scratch_253*scratch_467 - scratch_254*scratch_468;
    double scratch_470 = scratch_272 - scratch_273*scratch_6 - scratch_274*scratch_457 - scratch_275*scratch_458 - scratch_276*scratch_459 - scratch_277*scratch_460 - scratch_278*scratch_461 - scratch_279*scratch_462 - scratch_280*scratch_463 - scratch_281*scratch_464 - scratch_282*scratch_465 - scratch_283*scratch_466 - scratch_284*scratch_467 - scratch_285*scratch_468 - scratch_286*scratch_469;
    double scratch_471 = scratch_305 - scratch_306*scratch_6 - scratch_307*scratch_457 - scratch_308*scratch_458 - scratch_309*scratch_459 - scratch_310*scratch_460 - scratch_311*scratch_461 - scratch_312*scratch_462 - scratch_313*scratch_463 - scratch_314*scratch_464 - scratch_315*scratch_465 - scratch_316*scratch_466 - scratch_317*scratch_467 - scratch_318*scratch_468 - scratch_319*scratch_469 - scratch_320*scratch_470;
    double scratch_472 = scratch_359 - scratch_360*scratch_6 - scratch_361*scratch_457 - scratch_362*scratch_458 - scratch_363*scratch_459 - scratch_364*scratch_460 - scratch_365*scratch_461 - scratch_366*scratch_462 - scratch_367*scratch_463 - scratch_368*scratch_464 - scratch_369*scratch_465 - scratch_370*scratch_466 - scratch_371*scratch_467 - scratch_372*scratch_468 - scratch_373*scratch_469 - scratch_374*scratch_470 - scratch_375*scratch_471;
    double scratch_473 = scratch_376*scratch_472;
    double scratch_474 = -scratch_14*scratch_23 + scratch_22;
    double scratch_475 = -scratch_14*scratch_33 + scratch_32 - scratch_34*scratch_474;
    double scratch_476 = -scratch_14*scratch_45 + scratch_44 - scratch_46*scratch_474 - scratch_47*scratch_475;
    double scratch_477 = -scratch_14*scratch_59 - scratch_474*scratch_60 - scratch_475*scratch_61 - scratch_476*scratch_62 + scratch_58;
    double scratch_478 = -scratch_14*scratch_75 - scratch_474*scratch_76 - scratch_475*scratch_77 - scratch_476*scratch_78 - scratch_477*scratch_79 + scratch_74;
    double scratch_479 = -scratch_14*scratch_93 - scratch_474*scratch_94 - scratch_475*scratch_95 - scratch_476*scratch_96 - scratch_477*scratch_97 - scratch_478*scratch_98 + scratch_92;
    double scratch_480 = scratch_112 - scratch_113*scratch_14 - scratch_114*scratch_474 - scratch_115*scratch_475 - scratch_116*scratch_476 - scratch_117*scratch_477 - scratch_118*scratch_478 - scratch_119*scratch_479;
    double scratch_481 = scratch_134 - scratch_135*scratch_14 - scratch_136*scratch_474 - scratch_137*scratch_475 - scratch_138*scratch_476 - scratch_139*scratch_477 - scratch_140*scratch_478 - scratch_141*scratch_479 - scratch_142*scratch_480;
    double scratch_482 = -scratch_14*scratch_159 + scratch_158 - scratch_160*scratch_474 - scratch_161*scratch_475 - scratch_162*scratch_476 - scratch_163*scratch_477 - scratch_164*scratch_478 - scratch_165*scratch_479 - scratch_166*scratch_480 - scratch_167*scratch_481;
    double scratch_483 = -scratch_14*scratch_185 + scratch_184 - scratch_186*scratch_474 - scratch_187*scratch_475 - scratch_188*scratch_476 - scratch_189*scratch_477 - scratch_190*scratch_478 - scratch_191*scratch_479 - scratch_192*scratch_480 - scratch_193*scratch_481 - scratch_194*scratch_482;
    double scratch_484 = -scratch_14*scratch_213 + scratch_212 - scratch_214*scratch_474 - scratch_215*scratch_475 - scratch_216*scratch_476 - scratch_217*scratch_477 - scratch_218*scratch_478 - scratch_219*scratch_479 - scratch_220*scratch_480 - scratch_221*scratch_481 - scratch_222*scratch_482 - scratch_223*scratch_483;
    double scratch_485 = -scratch_14*scratch_243 + scratch_242 - scratch_244*scratch_474 - scratch_245*scratch_475 - scratch_246*scratch_476 - scratch_247*scratch_477 - scratch_248*scratch_478 - scratch_249*scratch_479 - scratch_250*scratch_480 - scratch_251*scratch_481 - scratch_252*scratch_482 - scratch_253*scratch_483 - scratch_254*scratch_484;
    double scratch_486 = -scratch_14*scratch_274 + scratch_273 - scratch_275*scratch_474 - scratch_276*scratch_475 - scratch_277*scratch_476 - scratch_278*scratch_477 - scratch_279*scratch_478 - scratch_280*scratch_479 - scratch_281*scratch_480 - scratch_282*scratch_481 - scratch_283*scratch_482 - scratch_284*scratch_483 - scratch_285*scratch_484 - scratch_286*scratch_485;
    double scratch_487 = -scratch_14*scratch_307 + scratch_306 - scratch_308*scratch_474 - scratch_309*scratch_475 - scratch_310*scratch_476 - scratch_311*scratch_477 - scratch_312*scratch_478 - scratch_313*scratch_479 - scratch_314*scratch_480 - scratch_315*scratch_481 - scratch_316*scratch_482 - scratch_317*scratch_483 - scratch_318*scratch_484 - scratch_319*scratch_485 - scratch_320*scratch_486;
    double scratch_488 = -scratch_14*scratch_361 + scratch_360 - scratch_362*scratch_474 - scratch_363*scratch_475 - scratch_364*scratch_476 - scratch_365*scratch_477 - scratch_366*scratch_478 - scratch_367*scratch_479 - scratch_368*scratch_480 - scratch_369*scratch_481 - scratch_370*scratch_482 - scratch_371*scratch_483 - scratch_372*scratch_484 - scratch_373*scratch_485 - scratch_374*scratch_486 - scratch_375*scratch_487;
    double scratch_489 = scratch_376*scratch_488;
    double scratch_490 = -scratch_23*scratch_34 + scratch_33;
    double scratch_491 = -scratch_23*scratch_46 + scratch_45 - scratch_47*scratch_490;
    double scratch_492 = -scratch_23*scratch_60 - scratch_490*scratch_61 - scratch_491*scratch_62 + scratch_59;
    double scratch_493 = -scratch_23*scratch_76 - scratch_490*scratch_77 - scratch_491*scratch_78 - scratch_492*scratch_79 + scratch_75;
    double scratch_494 = -scratch_23*scratch_94 - scratch_490*scratch_95 - scratch_491*scratch_96 - scratch_492*scratch_97 - scratch_493*scratch_98 + scratch_93;
    double scratch_495 = scratch_113 - scratch_114*scratch_23 - scratch_115*scratch_490 - scratch_116*scratch_491 - scratch_117*scratch_492 - scratch_118*scratch_493 - scratch_119*scratch_494;
    double scratch_496 = scratch_135 - scratch_136*scratch_23 - scratch_137*scratch_490 - scratch_138*scratch_491 - scratch_139*scratch_492 - scratch_140*scratch_493 - scratch_141*scratch_494 - scratch_142*scratch_495;
    double scratch_497 = scratch_159 - scratch_160*scratch_23 - scratch_161*scratch_490 - scratch_162*scratch_491 - scratch_163*scratch_492 - scratch_164*scratch_493 - scratch_165*scratch_494 - scratch_166*scratch_495 - scratch_167*scratch_496;
    double scratch_498 = scratch_185 - scratch_186*scratch_23 - scratch_187*scratch_490 - scratch_188*scratch_491 - scratch_189*scratch_492 - scratch_190*scratch_493 - scratch_191*scratch_494 - scratch_192*scratch_495 - scratch_193*scratch_496 - scratch_194*scratch_497;
    double scratch_499 = scratch_213 - scratch_214*scratch_23 - scratch_215*scratch_490 - scratch_216*scratch_491 - scratch_217*scratch_492 - scratch_218*scratch_493 - scratch_219*scratch_494 - scratch_220*scratch_495 - scratch_221*scratch_496 - scratch_222*scratch_497 - scratch_223*scratch_498;
    double scratch_500 = -scratch_23*scratch_244 + scratch_243 - scratch_245*scratch_490 - scratch_246*scratch_491 - scratch_247*scratch_492 - scratch_248*scratch_493 - scratch_249*scratch_494 - scratch_250*scratch_495 - scratch_251*scratch_496 - scratch_252*scratch_497 - scratch_253*scratch_498 - scratch_254*scratch_499;
    double scratch_501 = -scratch_23*scratch_275 + scratch_274 - scratch_276*scratch_490 - scratch_277*scratch_491 - scratch_278*scratch_492 - scratch_279*scratch_493 - scratch_280*scratch_494 - scratch_281*scratch_495 - scratch_282*scratch_496 - scratch_283*scratch_497 - scratch_284*scratch_498 - scratch_285*scratch_499 - scratch_286*scratch_500;
    double scratch_502 = -scratch_23*scratch_308 + scratch_307 - scratch_309*scratch_490 - scratch_310*scratch_491 - scratch_311*scratch_492 - scratch_312*scratch_493 - scratch_313*scratch_494 - scratch_314*scratch_495 - scratch_315*scratch_496 - scratch_316*scratch_497 - scratch_317*scratch_498 - scratch_318*scratch_499 - scratch_319*scratch_500 - scratch_320*scratch_501;
    double scratch_503 = -scratch_23*scratch_362 + scratch_361 - scratch_363*scratch_490 - scratch_364*scratch_491 - scratch_365*scratch_492 - scratch_366*scratch_493 - scratch_367*scratch_494 - scratch_368*scratch_495 - scratch_369*scratch_496 - scratch_370*scratch_497 - scratch_371*scratch_498 - scratch_372*scratch_499 - scratch_373*scratch_500 - scratch_374*scratch_501 - scratch_375*scratch_502;
    double scratch_504 = scratch_376*scratch_503;
    double scratch_505 = -scratch_34*scratch_47 + scratch_46;
    double scratch_506 = -scratch_34*scratch_61 - scratch_505*scratch_62 + scratch_60;
    double scratch_507 = -scratch_34*scratch_77 - scratch_505*scratch_78 - scratch_506*scratch_79 + scratch_76;
    double scratch_508 = -scratch_34*scratch_95 - scratch_505*scratch_96 - scratch_506*scratch_97 - scratch_507*scratch_98 + scratch_94;
    double scratch_509 = scratch_114 - scratch_115*scratch_34 - scratch_116*scratch_505 - scratch_117*scratch_506 - scratch_118*scratch_507 - scratch_119*scratch_508;
    double scratch_510 = scratch_136 - scratch_137*scratch_34 - scratch_138*scratch_505 - scratch_139*scratch_506 - scratch_140*scratch_507 - scratch_141*scratch_508 - scratch_142*scratch_509;
    double scratch_511 = scratch_160 - scratch_161*scratch_34 - scratch_162*scratch_505 - scratch_163*scratch_506 - scratch_164*scratch_507 - scratch_165*scratch_508 - scratch_166*scratch_509 - scratch_167*scratch_510;
    double scratch_512 = scratch_186 - scratch_187*scratch_34 - scratch_188*scratch_505 - scratch_189*scratch_506 - scratch_190*scratch_507 - scratch_191*scratch_508 - scratch_192*scratch_509 - scratch_193*scratch_510 - scratch_194*scratch_511;
    double scratch_513 = scratch_214 - scratch_215*scratch_34 - scratch_216*scratch_505 - scratch_217*scratch_506 - scratch_218*scratch_507 - scratch_219*scratch_508 - scratch_220*scratch_509 - scratch_221*scratch_510 - scratch_222*scratch_511 - scratch_223*scratch_512;
    double scratch_514 = scratch_244 - scratch_245*scratch_34 - scratch_246*scratch_505 - scratch_247*scratch_506 - scratch_248*scratch_507 - scratch_249*scratch_508 - scratch_250*scratch_509 - scratch_251*scratch_510 - scratch_252*scratch_511 - scratch_253*scratch_512 - scratch_254*scratch_513;
    double scratch_515 = scratch_275 - scratch_276*scratch_34 - scratch_277*scratch_505 - scratch_278*scratch_506 - scratch_279*scratch_507 - scratch_280*scratch_508 - scratch_281*scratch_509 - scratch_282*scratch_510 - scratch_283*scratch_511 - scratch_284*scratch_512 - scratch_285*scratch_513 - scratch_286*scratch_514;
    double scratch_516 = scratch_308 - scratch_309*scratch_34 - scratch_310*scratch_505 - scratch_311*scratch_506 - scratch_312*scratch_507 - scratch_313*scratch_508 - scratch_314*scratch_509 - scratch_315*scratch_510 - scratch_316*scratch_511 - scratch_317*scratch_512 - scratch_318*scratch_513 - scratch_319*scratch_514 - scratch_320*scratch_515;
    double scratch_517 = -scratch_34*scratch_363 + scratch_362 - scratch_364*scratch_505 - scratch_365*scratch_506 - scratch_366*scratch_507 - scratch_367*scratch_508 - scratch_368*scratch_509 - scratch_369*scratch_510 - scratch_370*scratch_511 - scratch_371*scratch_512 - scratch_372*scratch_513 - scratch_373*scratch_514 - scratch_374*scratch_515 - scratch_375*scratch_516;
    double scratch_518 = scratch_376*scratch_517;
    double scratch_519 = -scratch_47*scratch_62 + scratch_61;
    double scratch_520 = -scratch_47*scratch_78 - scratch_519*scratch_79 + scratch_77;
    double scratch_521 = -scratch_47*scratch_96 - scratch_519*scratch_97 - scratch_520*scratch_98 + scratch_95;
    double scratch_522 = scratch_115 - scratch_116*scratch_47 - scratch_117*scratch_519 - scratch_118*scratch_520 - scratch_119*scratch_521;
    double scratch_523 = scratch_137 - scratch_138*scratch_47 - scratch_139*scratch_519 - scratch_140*scratch_520 - scratch_141*scratch_521 - scratch_142*scratch_522;
    double scratch_524 = scratch_161 - scratch_162*scratch_47 - scratch_163*scratch_519 - scratch_164*scratch_520 - scratch_165*scratch_521 - scratch_166*scratch_522 - scratch_167*scratch_523;
    double scratch_525 = scratch_187 - scratch_188*scratch_47 - scratch_189*scratch_519 - scratch_190*scratch_520 - scratch_191*scratch_521 - scratch_192*scratch_522 - scratch_193*scratch_523 - scratch_194*scratch_524;
    double scratch_526 = scratch_215 - scratch_216*scratch_47 - scratch_217*scratch_519 - scratch_218*scratch_520 - scratch_219*scratch_521 - scratch_220*scratch_522 - scratch_221*scratch_523 - scratch_222*scratch_524 - scratch_223*scratch_525;
    double scratch_527 = scratch_245 - scratch_246*scratch_47 - scratch_247*scratch_519 - scratch_248*scratch_520 - scratch_249*scratch_521 - scratch_250*scratch_522 - scratch_251*scratch_523 - scratch_252*scratch_524 - scratch_253*scratch_525 - scratch_254*scratch_526;
    double scratch_528 = scratch_276 - scratch_277*scratch_47 - scratch_278*scratch_519 - scratch_279*scratch_520 - scratch_280*scratch_521 - scratch_281*scratch_522 - scratch_282*scratch_523 - scratch_283*scratch_524 - scratch_284*scratch_525 - scratch_285*scratch_526 - scratch_286*scratch_527;
    double scratch_529 = scratch_309 - scratch_310*scratch_47 - scratch_311*scratch_519 - scratch_312*scratch_520 - scratch_313*scratch_521 - scratch_314*scratch_522 - scratch_315*scratch_523 - scratch_316*scratch_524 - scratch_317*scratch_525 - scratch_318*scratch_526 - scratch_319*scratch_527 - scratch_320*scratch_528;
    double scratch_530 = scratch_363 - scratch_364*scratch_47 - scratch_365*scratch_519 - scratch_366*scratch_520 - scratch_367*scratch_521 - scratch_368*scratch_522 - scratch_369*scratch_523 - scratch_370*scratch_524 - scratch_371*scratch_525 - scratch_372*scratch_526 - scratch_373*scratch_527 - scratch_374*scratch_528 - scratch_375*scratch_529;
    double scratch_531 = scratch_376*scratch_530;
    double scratch_532 = -scratch_62*scratch_79 + scratch_78;
    double scratch_533 = -scratch_532*scratch_98 - scratch_62*scratch_97 + scratch_96;
    double scratch_534 = scratch_116 - scratch_117*scratch_62 - scratch_118*scratch_532 - scratch_119*scratch_533;
    double scratch_535 = scratch_138 - scratch_139*scratch_62 - scratch_140*scratch_532 - scratch_141*scratch_533 - scratch_142*scratch_534;
    double scratch_536 = scratch_162 - scratch_163*scratch_62 - scratch_164*scratch_532 - scratch_165*scratch_533 - scratch_166*scratch_534 - scratch_167*scratch_535;
    double scratch_537 = scratch_188 - scratch_189*scratch_62 - scratch_190*scratch_532 - scratch_191*scratch_533 - scratch_192*scratch_534 - scratch_193*scratch_535 - scratch_194*scratch_536;
    double scratch_538 = scratch_216 - scratch_217*scratch_62 - scratch_218*scratch_532 - scratch_219*scratch_533 - scratch_220*scratch_534 - scratch_221*scratch_535 - scratch_222*scratch_536 - scratch_223*scratch_537;
    double scratch_539 = scratch_246 - scratch_247*scratch_62 - scratch_248*scratch_532 - scratch_249*scratch_533 - scratch_250*scratch_534 - scratch_251*scratch_535 - scratch_252*scratch_536 - scratch_253*scratch_537 - scratch_254*scratch_538;
    double scratch_540 = scratch_277 - scratch_278*scratch_62 - scratch_279*scratch_532 - scratch_280*scratch_533 - scratch_281*scratch_534 - scratch_282*scratch_535 - scratch_283*scratch_536 - scratch_284*scratch_537 - scratch_285*scratch_538 - scratch_286*scratch_539;
    double scratch_541 = scratch_310 - scratch_311*scratch_62 - scratch_312*scratch_532 - scratch_313*scratch_533 - scratch_314*scratch_534 - scratch_315*scratch_535 - scratch_316*scratch_536 - scratch_317*scratch_537 - scratch_318*scratch_538 - scratch_319*scratch_539 - scratch_320*scratch_540;
    double scratch_542 = scratch_364 - scratch_365*scratch_62 - scratch_366*scratch_532 - scratch_367*scratch_533 - scratch_368*scratch_534 - scratch_369*scratch_535 - scratch_370*scratch_536 - scratch_371*scratch_537 - scratch_372*scratch_538 - scratch_373*scratch_539 - scratch_374*scratch_540 - scratch_375*scratch_541;
    double scratch_543 = scratch_376*scratch_542;
    double scratch_544 = -scratch_79*scratch_98 + scratch_97;
    double scratch_545 = scratch_117 - scratch_118*scratch_79 - scratch_119*scratch_544;
    double scratch_546 = scratch_139 - scratch_140*scratch_79 - scratch_141*scratch_544 - scratch_142*scratch_545;
    double scratch_547 = scratch_163 - scratch_164*scratch_79 - scratch_165*scratch_544 - scratch_166*scratch_545 - scratch_167*scratch_546;
    double scratch_548 = scratch_189 - scratch_190*scratch_79 - scratch_191*scratch_544 - scratch_192*scratch_545 - scratch_193*scratch_546 - scratch_194*scratch_547;
    double scratch_549 = scratch_217 - scratch_218*scratch_79 - scratch_219*scratch_544 - scratch_220*scratch_545 - scratch_221*scratch_546 - scratch_222*scratch_547 - scratch_223*scratch_548;
    double scratch_550 = scratch_247 - scratch_248*scratch_79 - scratch_249*scratch_544 - scratch_250*scratch_545 - scratch_251*scratch_546 - scratch_252*scratch_547 - scratch_253*scratch_548 - scratch_254*scratch_549;
    double scratch_551 = scratch_278 - scratch_279*scratch_79 - scratch_280*scratch_544 - scratch_281*scratch_545 - scratch_282*scratch_546 - scratch_283*scratch_547 - scratch_284*scratch_548 - scratch_285*scratch_549 - scratch_286*scratch_550;
    double scratch_552 = scratch_311 - scratch_312*scratch_79 - scratch_313*scratch_544 - scratch_314*scratch_545 - scratch_315*scratch_546 - scratch_316*scratch_547 - scratch_317*scratch_548 - scratch_318*scratch_549 - scratch_319*scratch_550 - scratch_320*scratch_551;
    double scratch_553 = scratch_365 - scratch_366*scratch_79 - scratch_367*scratch_544 - scratch_368*scratch_545 - scratch_369*scratch_546 - scratch_370*scratch_547 - scratch_371*scratch_548 - scratch_372*scratch_549 - scratch_373*scratch_550 - scratch_374*scratch_551 - scratch_375*scratch_552;
    double scratch_554 = scratch_376*scratch_553;
    double scratch_555 = scratch_118 - scratch_119*scratch_98;
    double scratch_556 = scratch_140 - scratch_141*scratch_98 - scratch_142*scratch_555;
    double scratch_557 = scratch_164 - scratch_165*scratch_98 - scratch_166*scratch_555 - scratch_167*scratch_556;
    double scratch_558 = scratch_190 - scratch_191*scratch_98 - scratch_192*scratch_555 - scratch_193*scratch_556 - scratch_194*scratch_557;
    double scratch_559 = scratch_218 - scratch_219*scratch_98 - scratch_220*scratch_555 - scratch_221*scratch_556 - scratch_222*scratch_557 - scratch_223*scratch_558;
    double scratch_560 = scratch_248 - scratch_249*scratch_98 - scratch_250*scratch_555 - scratch_251*scratch_556 - scratch_252*scratch_557 - scratch_253*scratch_558 - scratch_254*scratch_559;
    double scratch_561 = scratch_279 - scratch_280*scratch_98 - scratch_281*scratch_555 - scratch_282*scratch_556 - scratch_283*scratch_557 - scratch_284*scratch_558 - scratch_285*scratch_559 - scratch_286*scratch_560;
    double scratch_562 = scratch_312 - scratch_313*scratch_98 - scratch_314*scratch_555 - scratch_315*scratch_556 - scratch_316*scratch_557 - scratch_317*scratch_558 - scratch_318*scratch_559 - scratch_319*scratch_560 - scratch_320*scratch_561;
    double scratch_563 = scratch_366 - scratch_367*scratch_98 - scratch_368*scratch_555 - scratch_369*scratch_556 - scratch_370*scratch_557 - scratch_371*scratch_558 - scratch_372*scratch_559 - scratch_373*scratch_560 - scratch_374*scratch_561 - scratch_375*scratch_562;
    double scratch_564 = scratch_376*scratch_563;
    double scratch_565 = -scratch_119*scratch_142 + scratch_141;
    double scratch_566 = -scratch_119*scratch_166 + scratch_165 - scratch_167*scratch_565;
    double scratch_567 = -scratch_119*scratch_192 + scratch_191 - scratch_193*scratch_565 - scratch_194*scratch_566;
    double scratch_568 = -scratch_119*scratch_220 + scratch_219 - scratch_221*scratch_565 - scratch_222*scratch_566 - scratch_223*scratch_567;
    double scratch_569 = -scratch_119*scratch_250 + scratch_249 - scratch_251*scratch_565 - scratch_252*scratch_566 - scratch_253*scratch_567 - scratch_254*scratch_568;
    double scratch_570 = -scratch_119*scratch_281 + scratch_280 - scratch_282*scratch_565 - scratch_283*scratch_566 - scratch_284*scratch_567 - scratch_285*scratch_568 - scratch_286*scratch_569;
    double scratch_571 = -scratch_119*scratch_314 + scratch_313 - scratch_315*scratch_565 - scratch_316*scratch_566 - scratch_317*scratch_567 - scratch_318*scratch_568 - scratch_319*scratch_569 - scratch_320*scratch_570;
    double scratch_572 = -scratch_119*scratch_368 + scratch_367 - scratch_369*scratch_565 - scratch_370*scratch_566 - scratch_371*scratch_567 - scratch_372*scratch_568 - scratch_373*scratch_569 - scratch_374*scratch_570 - scratch_375*scratch_571;
    double scratch_573 = scratch_376*scratch_572;
    double scratch_574 = -scratch_142*scratch_167 + scratch_166;
    double scratch_575 = -scratch_142*scratch_193 + scratch_192 - scratch_194*scratch_574;
    double scratch_576 = -scratch_142*scratch_221 + scratch_220 - scratch_222*scratch_574 - scratch_223*scratch_575;
    double scratch_577 = -scratch_142*scratch_251 + scratch_250 - scratch_252*scratch_574 - scratch_253*scratch_575 - scratch_254*scratch_576;
    double scratch_578 = -scratch_142*scratch_282 + scratch_281 - scratch_283*scratch_574 - scratch_284*scratch_575 - scratch_285*scratch_576 - scratch_286*scratch_577;
    double scratch_579 = -scratch_142*scratch_315 + scratch_314 - scratch_316*scratch_574 - scratch_317*scratch_575 - scratch_318*scratch_576 - scratch_319*scratch_577 - scratch_320*scratch_578;
    double scratch_580 = -scratch_142*scratch_369 + scratch_368 - scratch_370*scratch_574 - scratch_371*scratch_575 - scratch_372*scratch_576 - scratch_373*scratch_577 - scratch_374*scratch_578 - scratch_375*scratch_579;
    double scratch_581 = scratch_376*scratch_580;
    double scratch_582 = -scratch_167*scratch_194 + scratch_193;
    double scratch_583 = -scratch_167*scratch_222 + scratch_221 - scratch_223*scratch_582;
    double scratch_584 = -scratch_167*scratch_252 + scratch_251 - scratch_253*scratch_582 - scratch_254*scratch_583;
    double scratch_585 = -scratch_167*scratch_283 + scratch_282 - scratch_284*scratch_582 - scratch_285*scratch_583 - scratch_286*scratch_584;
    double scratch_586 = -scratch_167*scratch_316 + scratch_315 - scratch_317*scratch_582 - scratch_318*scratch_583 - scratch_319*scratch_584 - scratch_320*scratch_585;
    double scratch_587 = -scratch_167*scratch_370 + scratch_369 - scratch_371*scratch_582 - scratch_372*scratch_583 - scratch_373*scratch_584 - scratch_374*scratch_585 - scratch_375*scratch_586;
    double scratch_588 = scratch_376*scratch_587;
    double scratch_589 = -scratch_194*scratch_223 + scratch_222;
    double scratch_590 = -scratch_194*scratch_253 + scratch_252 - scratch_254*scratch_589;
    double scratch_591 = -scratch_194*scratch_284 + scratch_283 - scratch_285*scratch_589 - scratch_286*scratch_590;
    double scratch_592 = -scratch_194*scratch_317 + scratch_316 - scratch_318*scratch_589 - scratch_319*scratch_590 - scratch_320*scratch_591;
    double scratch_593 = -scratch_194*scratch_371 + scratch_370 - scratch_372*scratch_589 - scratch_373*scratch_590 - scratch_374*scratch_591 - scratch_375*scratch_592;
    double scratch_594 = scratch_376*scratch_593;
    double scratch_595 = -scratch_223*scratch_254 + scratch_253;
    double scratch_596 = -scratch_223*scratch_285 + scratch_284 - scratch_286*scratch_595;
    double scratch_597 = -scratch_223*scratch_318 + scratch_317 - scratch_319*scratch_595 - scratch_320*scratch_596;
    double scratch_598 = -scratch_223*scratch_372 + scratch_371 - scratch_373*scratch_595 - scratch_374*scratch_596 - scratch_375*scratch_597;
    double scratch_599 = scratch_376*scratch_598;
    double scratch_600 = -scratch_254*scratch_286 + scratch_285;
    double scratch_601 = -scratch_254*scratch_319 + scratch_318 - scratch_320*scratch_600;
    double scratch_602 = -scratch_254*scratch_373 + scratch_372 - scratch_374*scratch_600 - scratch_375*scratch_601;
    double scratch_603 = scratch_376*scratch_602;
    double scratch_604 = -scratch_286*scratch_320 + scratch_319;
    double scratch_605 = -scratch_286*scratch_374 + scratch_373 - scratch_375*scratch_604;
    double scratch_606 = scratch_376*scratch_605;
    double scratch_607 = -scratch_320*scratch_375 + scratch_374;
    double scratch_608 = scratch_376*scratch_607;
    double scratch_609 = scratch_375*scratch_376;

    x[0] = scratch_1 - scratch_120*scratch_409 - scratch_143*scratch_410 - scratch_15*scratch_402 - scratch_168*scratch_411 - scratch_195*scratch_412 - scratch_224*scratch_413 - scratch_24*scratch_403 - scratch_255*scratch_414 - scratch_287*scratch_415 - scratch_321*scratch_416 - scratch_35*scratch_404 - scratch_377*scratch_417 - scratch_379*(-scratch_10*scratch_4 - scratch_109*scratch_99 - scratch_11*scratch_7 - scratch_120*scratch_131 - scratch_143*scratch_155 - scratch_15*scratch_19 - scratch_168*scratch_181 - scratch_195*scratch_209 + scratch_2 - scratch_224*scratch_239 - scratch_24*scratch_29 - scratch_255*scratch_270 - scratch_287*scratch_303 - scratch_321*scratch_339 - scratch_35*scratch_41 - scratch_357*scratch_378 - scratch_48*scratch_55 - scratch_63*scratch_71 - scratch_80*scratch_89) - scratch_399*(-scratch_120*scratch_390 - scratch_143*scratch_391 - scratch_15*scratch_383 - scratch_168*scratch_392 - scratch_195*scratch_393 - scratch_224*scratch_394 - scratch_24*scratch_384 - scratch_255*scratch_395 - scratch_287*scratch_396 - scratch_321*scratch_397 - scratch_35*scratch_385 - scratch_378*scratch_398 + scratch_380 - scratch_381*scratch_4 - scratch_382*scratch_7 - scratch_386*scratch_48 - scratch_387*scratch_63 - scratch_388*scratch_80 - scratch_389*scratch_99) - scratch_4*scratch_400 - scratch_401*scratch_7 - scratch_405*scratch_48 - scratch_406*scratch_63 - scratch_407*scratch_80 - scratch_408*scratch_99 - scratch_456*(-scratch_120*scratch_428 - scratch_143*scratch_429 - scratch_15*scratch_421 - scratch_168*scratch_430 - scratch_195*scratch_431 - scratch_224*scratch_432 - scratch_24*scratch_422 - scratch_255*scratch_433 - scratch_287*scratch_434 - scratch_321*scratch_435 - scratch_35*scratch_423 - scratch_378*scratch_436 - scratch_4*scratch_419 + scratch_418 - scratch_420*scratch_7 - scratch_424*scratch_48 - scratch_425*scratch_63 - scratch_426*scratch_80 - scratch_427*scratch_99);
    x[1] = -scratch_379*(scratch_10 - scratch_109*scratch_463 - scratch_11*scratch_6 - scratch_131*scratch_464 - scratch_155*scratch_465 - scratch_181*scratch_466 - scratch_19*scratch_457 - scratch_209*scratch_467 - scratch_239*scratch_468 - scratch_270*scratch_469 - scratch_29*scratch_458 - scratch_303*scratch_470 - scratch_339*scratch_471 - scratch_357*scratch_473 - scratch_41*scratch_459 - scratch_460*scratch_55 - scratch_461*scratch_71 - scratch_462*scratch_89) - scratch_399*(scratch_381 - scratch_382*scratch_6 - scratch_383*scratch_457 - scratch_384*scratch_458 - scratch_385*scratch_459 - scratch_386*scratch_460 - scratch_387*scratch_461 - scratch_388*scratch_462 - scratch_389*scratch_463 - scratch_390*scratch_464 - scratch_391*scratch_465 - scratch_392*scratch_466 - scratch_393*scratch_467 - scratch_394*scratch_468 - scratch_395*scratch_469 - scratch_396*scratch_470 - scratch_397*scratch_471 - scratch_398*scratch_473) + scratch_400 - scratch_401*scratch_6 - scratch_402*scratch_457 - scratch_403*scratch_458 - scratch_404*scratch_459 - scratch_405*scratch_460 - scratch_406*scratch_461 - scratch_407*scratch_462 - scratch_408*scratch_463 - scratch_409*scratch_464 - scratch_410*scratch_465 - scratch_411*scratch_466 - scratch_412*scratch_467 - scratch_413*scratch_468 - scratch_414*scratch_469 - scratch_415*scratch_470 - scratch_416*scratch_471 - scratch_417*scratch_472 - scratch_456*(scratch_419 - scratch_420*scratch_6 - scratch_421*scratch_457 - scratch_422*scratch_458 - scratch_423*scratch_459 - scratch_424*scratch_460 - scratch_425*scratch_461 - scratch_426*scratch_462 - scratch_427*scratch_463 - scratch_428*scratch_464 - scratch_429*scratch_465 - scratch_430*scratch_466 - scratch_431*scratch_467 - scratch_432*scratch_468 - scratch_433*scratch_469 - scratch_434*scratch_470 - scratch_435*scratch_471 - scratch_436*scratch_473);
    x[2] = -scratch_14*scratch_402 - scratch_379*(-scratch_109*scratch_479 + scratch_11 - scratch_131*scratch_480 - scratch_14*scratch_19 - scratch_155*scratch_481 - scratch_181*scratch_482 - scratch_209*scratch_483 - scratch_239*scratch_484 - scratch_270*scratch_485 - scratch_29*scratch_474 - scratch_303*scratch_486 - scratch_339*scratch_487 - scratch_357*scratch_489 - scratch_41*scratch_475 - scratch_476*scratch_55 - scratch_477*scratch_71 - scratch_478*scratch_89) - scratch_399*(-scratch_14*scratch_383 + scratch_382 - scratch_384*scratch_474 - scratch_385*scratch_475 - scratch_386*scratch_476 - scratch_387*scratch_477 - scratch_388*scratch_478 - scratch_389*scratch_479 - scratch_390*scratch_480 - scratch_391*scratch_481 - scratch_392*scratch_482 - scratch_393*scratch_483 - scratch_394*scratch_484 - scratch_395*scratch_485 - scratch_396*scratch_486 - scratch_397*scratch_487 - scratch_398*scratch_489) + scratch_401 - scratch_403*scratch_474 - scratch_404*scratch_475 - scratch_405*scratch_476 - scratch_406*scratch_477 - scratch_407*scratch_478 - scratch_408*scratch_479 - scratch_409*scratch_480 - scratch_410*scratch_481 - scratch_411*scratch_482 - scratch_412*scratch_483 - scratch_413*scratch_484 - scratch_414*scratch_485 - scratch_415*scratch_486 - scratch_416*scratch_487 - scratch_417*scratch_488 - scratch_456*(-scratch_14*scratch_421 + scratch_420 - scratch_422*scratch_474 - scratch_423*scratch_475 - scratch_424*scratch_476 - scratch_425*scratch_477 - scratch_426*scratch_478 - scratch_427*scratch_479 - scratch_428*scratch_480 - scratch_429*scratch_481 - scratch_430*scratch_482 - scratch_431*scratch_483 - scratch_432*scratch_484 - scratch_433*scratch_485 - scratch_434*scratch_486 - scratch_435*scratch_487 - scratch_436*scratch_489);
    x[3] = -scratch_23*scratch_403 - scratch_379*(-scratch_109*scratch_494 - scratch_131*scratch_495 - scratch_155*scratch_496 - scratch_181*scratch_497 + scratch_19 - scratch_209*scratch_498 - scratch_23*scratch_29 - scratch_239*scratch_499 - scratch_270*scratch_500 - scratch_303*scratch_501 - scratch_339*scratch_502 - scratch_357*scratch_504 - scratch_41*scratch_490 - scratch_491*scratch_55 - scratch_492*scratch_71 - scratch_493*scratch_89) - scratch_399*(-scratch_23*scratch_384 + scratch_383 - scratch_385*scratch_490 - scratch_386*scratch_491 - scratch_387*scratch_492 - scratch_388*scratch_493 - scratch_389*scratch_494 - scratch_390*scratch_495 - scratch_391*scratch_496 - scratch_392*scratch_497 - scratch_393*scratch_498 - scratch_394*scratch_499 - scratch_395*scratch_500 - scratch_396*scratch_501 - scratch_397*scratch_502 - scratch_398*scratch_504) + scratch_402 - scratch_404*scratch_490 - scratch_405*scratch_491 - scratch_406*scratch_492 - scratch_407*scratch_493 - scratch_408*scratch_494 - scratch_409*scratch_495 - scratch_410*scratch_496 - scratch_411*scratch_497 - scratch_412*scratch_498 - scratch_413*scratch_499 - scratch_414*scratch_500 - scratch_415*scratch_501 - scratch_416*scratch_502 - scratch_417*scratch_503 - scratch_456*(-scratch_23*scratch_422 + scratch_421 - scratch_423*scratch_490 - scratch_424*scratch_491 - scratch_425*scratch_492 - scratch_426*scratch_493 - scratch_427*scratch_494 - scratch_428*scratch_495 - scratch_429*scratch_496 - scratch_430*scratch_497 - scratch_431*scratch_498 - scratch_432*scratch_499 - scratch_433*scratch_500 - scratch_434*scratch_501 - scratch_435*scratch_502 - scratch_436*scratch_504);
    x[4] = -scratch_34*scratch_404 - scratch_379*(-scratch_109*scratch_508 - scratch_131*scratch_509 - scratch_155*scratch_510 - scratch_181*scratch_511 - scratch_209*scratch_512 - scratch_239*scratch_513 - scratch_270*scratch_514 + scratch_29 - scratch_303*scratch_515 - scratch_339*scratch_516 - scratch_34*scratch_41 - scratch_357*scratch_518 - scratch_505*scratch_55 - scratch_506*scratch_71 - scratch_507*scratch_89) - scratch_399*(-scratch_34*scratch_385 + scratch_384 - scratch_386*scratch_505 - scratch_387*scratch_506 - scratch_388*scratch_507 - scratch_389*scratch_508 - scratch_390*scratch_509 - scratch_391*scratch_510 - scratch_392*scratch_511 - scratch_393*scratch_512 - scratch_394*scratch_513 - scratch_395*scratch_514 - scratch_396*scratch_515 - scratch_397*scratch_516 - scratch_398*scratch_518) + scratch_403 - scratch_405*scratch_505 - scratch_406*scratch_506 - scratch_407*scratch_507 - scratch_408*scratch_508 - scratch_409*scratch_509 - scratch_410*scratch_510 - scratch_411*scratch_511 - scratch_412*scratch_512 - scratch_413*scratch_513 - scratch_414*scratch_514 - scratch_415*scratch_515 - scratch_416*scratch_516 - scratch_417*scratch_517 - scratch_456*(-scratch_34*scratch_423 + scratch_422 - scratch_424*scratch_505 - scratch_425*scratch_506 - scratch_426*scratch_507 - scratch_427*scratch_508 - scratch_428*scratch_509 - scratch_429*scratch_510 - scratch_430*scratch_511 - scratch_431*scratch_512 - scratch_432*scratch_513 - scratch_433*scratch_514 - scratch_434*scratch_515 - scratch_435*scratch_516 - scratch_436*scratch_518);
    x[5] = -scratch_379*(-scratch_109*scratch_521 - scratch_131*scratch_522 - scratch_155*scratch_523 - scratch_181*scratch_524 - scratch_209*scratch_525 - scratch_239*scratch_526 - scratch_270*scratch_527 - scratch_303*scratch_528 - scratch_339*scratch_529 - scratch_357*scratch_531 + scratch_41 - scratch_47*scratch_55 - scratch_519*scratch_71 - scratch_520*scratch_89) - scratch_399*(scratch_385 - scratch_386*scratch_47 - scratch_387*scratch_519 - scratch_388*scratch_520 - scratch_389*scratch_521 - scratch_390*scratch_522 - scratch_391*scratch_523 - scratch_392*scratch_524 - scratch_393*scratch_525 - scratch_394*scratch_526 - scratch_395*scratch_527 - scratch_396*scratch_528 - scratch_397*scratch_529 - scratch_398*scratch_531) + scratch_404 - scratch_405*scratch_47 - scratch_406*scratch_519 - scratch_407*scratch_520 - scratch_408*scratch_521 - scratch_409*scratch_522 - scratch_410*scratch_523 - scratch_411*scratch_524 - scratch_412*scratch_525 - scratch_413*scratch_526 - scratch_414*scratch_527 - scratch_415*scratch_528 - scratch_416*scratch_529 - scratch_417*scratch_530 - scratch_456*(scratch_423 - scratch_424*scratch_47 - scratch_425*scratch_519 - scratch_426*scratch_520 - scratch_427*scratch_521 - scratch_428*scratch_522 - scratch_429*scratch_523 - scratch_430*scratch_524 - scratch_431*scratch_525 - scratch_432*scratch_526 - scratch_433*scratch_527 - scratch_434*scratch_528 - scratch_435*scratch_529 - scratch_436*scratch_531);
    x[6] = -scratch_379*(-scratch_109*scratch_533 - scratch_131*scratch_534 - scratch_155*scratch_535 - scratch_181*scratch_536 - scratch_209*scratch_537 - scratch_239*scratch_538 - scratch_270*scratch_539 - scratch_303*scratch_540 - scratch_339*scratch_541 - scratch_357*scratch_543 - scratch_532*scratch_89 + scratch_55 - scratch_62*scratch_71) - scratch_399*(scratch_386 - scratch_387*scratch_62 - scratch_388*scratch_532 - scratch_389*scratch_533 - scratch_390*scratch_534 - scratch_391*scratch_535 - scratch_392*scratch_536 - scratch_393*scratch_537 - scratch_394*scratch_538 - scratch_395*scratch_539 - scratch_396*scratch_540 - scratch_397*scratch_541 - scratch_398*scratch_543) + scratch_405 - scratch_406*scratch_62 - scratch_407*scratch_532 - scratch_408*scratch_533 - scratch_409*scratch_534 - scratch_410*scratch_535 - scratch_411*scratch_536 - scratch_412*scratch_537 - scratch_413*scratch_538 - scratch_414*scratch_539 - scratch_415*scratch_540 - scratch_416*scratch_541 - scratch_417*scratch_542 - scratch_456*(scratch_424 - scratch_425*scratch_62 - scratch_426*scratch_532 - scratch_427*scratch_533 - scratch_428*scratch_534 - scratch_429*scratch_535 - scratch_430*scratch_536 - scratch_431*scratch_537 - scratch_432*scratch_538 - scratch_433*scratch_539 - scratch_434*scratch_540 - scratch_435*scratch_541 - scratch_436*scratch_543);
    x[7] = -scratch_379*(-scratch_109*scratch_544 - scratch_131*scratch_545 - scratch_155*scratch_546 - scratch_181*scratch_547 - scratch_209*scratch_548 - scratch_239*scratch_549 - scratch_270*scratch_550 - scratch_303*scratch_551 - scratch_339*scratch_552 - scratch_357*scratch_554 + scratch_71 - scratch_79*scratch_89) - scratch_399*(scratch_387 - scratch_388*scratch_79 - scratch_389*scratch_544 - scratch_390*scratch_545 - scratch_391*scratch_546 - scratch_392*scratch_547 - scratch_393*scratch_548 - scratch_394*scratch_549 - scratch_395*scratch_550 - scratch_396*scratch_551 - scratch_397*scratch_552 - scratch_398*scratch_554) + scratch_406 - scratch_407*scratch_79 - scratch_408*scratch_544 - scratch_409*scratch_545 - scratch_410*scratch_546 - scratch_411*scratch_547 - scratch_412*scratch_548 - scratch_413*scratch_549 - scratch_414*scratch_550 - scratch_415*scratch_551 - scratch_416*scratch_552 - scratch_417*scratch_553 - scratch_456*(scratch_425 - scratch_426*scratch_79 - scratch_427*scratch_544 - scratch_428*scratch_545 - scratch_429*scratch_546 - scratch_430*scratch_547 - scratch_431*scratch_548 - scratch_432*scratch_549 - scratch_433*scratch_550 - scratch_434*scratch_551 - scratch_435*scratch_552 - scratch_436*scratch_554);
    x[8] = -scratch_379*(-scratch_109*scratch_98 - scratch_131*scratch_555 - scratch_155*scratch_556 - scratch_181*scratch_557 - scratch_209*scratch_558 - scratch_239*scratch_559 - scratch_270*scratch_560 - scratch_303*scratch_561 - scratch_339*scratch_562 - scratch_357*scratch_564 + scratch_89) - scratch_399*(scratch_388 - scratch_389*scratch_98 - scratch_390*scratch_555 - scratch_391*scratch_556 - scratch_392*scratch_557 - scratch_393*scratch_558 - scratch_394*scratch_559 - scratch_395*scratch_560 - scratch_396*scratch_561 - scratch_397*scratch_562 - scratch_398*scratch_564) + scratch_407 - scratch_408*scratch_98 - scratch_409*scratch_555 - scratch_410*scratch_556 - scratch_411*scratch_557 - scratch_412*scratch_558 - scratch_413*scratch_559 - scratch_414*scratch_560 - scratch_415*scratch_561 - scratch_416*scratch_562 - scratch_417*scratch_563 - scratch_456*(scratch_426 - scratch_427*scratch_98 - scratch_428*scratch_555 - scratch_429*scratch_556 - scratch_430*scratch_557 - scratch_431*scratch_558 - scratch_432*scratch_559 - scratch_433*scratch_560 - scratch_434*scratch_561 - scratch_435*scratch_562 - scratch_436*scratch_564);
    x[9] = -scratch_119*scratch_409 - scratch_379*(scratch_109 - scratch_119*scratch_131 - scratch_155*scratch_565 - scratch_181*scratch_566 - scratch_209*scratch_567 - scratch_239*scratch_568 - scratch_270*scratch_569 - scratch_303*scratch_570 - scratch_339*scratch_571 - scratch_357*scratch_573) - scratch_399*(-scratch_119*scratch_390 + scratch_389 - scratch_391*scratch_565 - scratch_392*scratch_566 - scratch_393*scratch_567 - scratch_394*scratch_568 - scratch_395*scratch_569 - scratch_396*scratch_570 - scratch_397*scratch_571 - scratch_398*scratch_573) + scratch_408 - scratch_410*scratch_565 - scratch_411*scratch_566 - scratch_412*scratch_567 - scratch_413*scratch_568 - scratch_414*scratch_569 - scratch_415*scratch_570 - scratch_416*scratch_571 - scratch_417*scratch_572 - scratch_456*(-scratch_119*scratch_428 + scratch_427 - scratch_429*scratch_565 - scratch_430*scratch_566 - scratch_431*scratch_567 - scratch_432*scratch_568 - scratch_433*scratch_569 - scratch_434*scratch_570 - scratch_435*scratch_571 - scratch_436*scratch_573);
    x[10] = -scratch_142*scratch_410 - scratch_379*(scratch_131 - scratch_142*scratch_155 - scratch_181*scratch_574 - scratch_209*scratch_575 - scratch_239*scratch_576 - scratch_270*scratch_577 - scratch_303*scratch_578 - scratch_339*scratch_579 - scratch_357*scratch_581) - scratch_399*(-scratch_142*scratch_391 + scratch_390 - scratch_392*scratch_574 - scratch_393*scratch_575 - scratch_394*scratch_576 - scratch_395*scratch_577 - scratch_396*scratch_578 - scratch_397*scratch_579 - scratch_398*scratch_581) + scratch_409 - scratch_411*scratch_574 - scratch_412*scratch_575 - scratch_413*scratch_576 - scratch_414*scratch_577 - scratch_415*scratch_578 - scratch_416*scratch_579 - scratch_417*scratch_580 - scratch_456*(-scratch_142*scratch_429 + scratch_428 - scratch_430*scratch_574 - scratch_431*scratch_575 - scratch_432*scratch_576 - scratch_433*scratch_577 - scratch_434*scratch_578 - scratch_435*scratch_579 - scratch_436*scratch_581);
    x[11] = -scratch_167*scratch_411 - scratch_379*(scratch_155 - scratch_167*scratch_181 - scratch_209*scratch_582 - scratch_239*scratch_583 - scratch_270*scratch_584 - scratch_303*scratch_585 - scratch_339*scratch_586 - scratch_357*scratch_588) - scratch_399*(-scratch_167*scratch_392 + scratch_391 - scratch_393*scratch_582 - scratch_394*scratch_583 - scratch_395*scratch_584 - scratch_396*scratch_585 - scratch_397*scratch_586 - scratch_398*scratch_588) + scratch_410 - scratch_412*scratch_582 - scratch_413*scratch_583 - scratch_414*scratch_584 - scratch_415*scratch_585 - scratch_416*scratch_586 - scratch_417*scratch_587 - scratch_456*(-scratch_167*scratch_430 + scratch_429 - scratch_431*scratch_582 - scratch_432*scratch_583 - scratch_433*scratch_584 - scratch_434*scratch_585 - scratch_435*scratch_586 - scratch_436*scratch_588);
    x[12] = -scratch_194*scratch_412 - scratch_379*(scratch_181 - scratch_194*scratch_209 - scratch_239*scratch_589 - scratch_270*scratch_590 - scratch_303*scratch_591 - scratch_339*scratch_592 - scratch_357*scratch_594) - scratch_399*(-scratch_194*scratch_393 + scratch_392 - scratch_394*scratch_589 - scratch_395*scratch_590 - scratch_396*scratch_591 - scratch_397*scratch_592 - scratch_398*scratch_594) + scratch_411 - scratch_413*scratch_589 - scratch_414*scratch_590 - scratch_415*scratch_591 - scratch_416*scratch_592 - scratch_417*scratch_593 - scratch_456*(-scratch_194*scratch_431 + scratch_430 - scratch_432*scratch_589 - scratch_433*scratch_590 - scratch_434*scratch_591 - scratch_435*scratch_592 - scratch_436*scratch_594);
    x[13] = -scratch_223*scratch_413 - scratch_379*(scratch_209 - scratch_223*scratch_239 - scratch_270*scratch_595 - scratch_303*scratch_596 - scratch_339*scratch_597 - scratch_357*scratch_599) - scratch_399*(-scratch_223*scratch_394 + scratch_393 - scratch_395*scratch_595 - scratch_396*scratch_596 - scratch_397*scratch_597 - scratch_398*scratch_599) + scratch_412 - scratch_414*scratch_595 - scratch_415*scratch_596 - scratch_416*scratch_597 - scratch_417*scratch_598 - scratch_456*(-scratch_223*scratch_432 + scratch_431 - scratch_433*scratch_595 - scratch_434*scratch_596 - scratch_435*scratch_597 - scratch_436*scratch_599);
    x[14] = -scratch_254*scratch_414 - scratch_379*(scratch_239 - scratch_254*scratch_270 - scratch_303*scratch_600 - scratch_339*scratch_601 - scratch_357*scratch_603) - scratch_399*(-scratch_254*scratch_395 + scratch_394 - scratch_396*scratch_600 - scratch_397*scratch_601 - scratch_398*scratch_603) + scratch_413 - scratch_415*scratch_600 - scratch_416*scratch_601 - scratch_417*scratch_602 - scratch_456*(-scratch_254*scratch_433 + scratch_432 - scratch_434*scratch_600 - scratch_435*scratch_601 - scratch_436*scratch_603);
    x[15] = -scratch_286*scratch_415 - scratch_379*(scratch_270 - scratch_286*scratch_303 - scratch_339*scratch_604 - scratch_357*scratch_606) - scratch_399*(-scratch_286*scratch_396 + scratch_395 - scratch_397*scratch_604 - scratch_398*scratch_606) + scratch_414 - scratch_416*scratch_604 - scratch_417*scratch_605 - scratch_456*(-scratch_286*scratch_434 + scratch_433 - scratch_435*scratch_604 - scratch_436*scratch_606);
    x[16] = -scratch_320*scratch_416 - scratch_379*(scratch_303 - scratch_320*scratch_339 - scratch_357*scratch_608) - scratch_399*(-scratch_320*scratch_397 + scratch_396 - scratch_398*scratch_608) + scratch_415 - scratch_417*scratch_607 - scratch_456*(-scratch_320*scratch_435 + scratch_434 - scratch_436*scratch_608);
    x[17] = -scratch_375*scratch_417 - scratch_379*(scratch_339 - scratch_357*scratch_609) - scratch_399*(scratch_397 - scratch_398*scratch_609) + scratch_416 - scratch_456*(scratch_435 - scratch_436*scratch_609);
    x[18] = -scratch_357*scratch_376*scratch_379 - scratch_376*scratch_398*scratch_399 - scratch_376*scratch_436*scratch_456 + scratch_417;
    x[19] = scratch_379;
    x[20] = scratch_399;
    x[21] = scratch_456;
}

#include "chemistry_file.H"

AMREX_GPU_HOST_DEVICE void sgjsolve(double* A, double* x, double* b) {
    double scratch_0 = 1.0/A[0];
    double scratch_1 = b[0]*scratch_0;
    double scratch_2 = A[2]*scratch_0;
    double scratch_3 = A[1]*scratch_0;
    double scratch_4 = 1.0/(-A[22]*scratch_3 + A[23]);
    double scratch_5 = scratch_4*(-A[22]*scratch_2 + A[24]);
    double scratch_6 = scratch_2 - scratch_3*scratch_5;
    double scratch_7 = -A[44]*scratch_3 + A[45];
    double scratch_8 = 1.0/(-A[44]*scratch_2 + A[46] - scratch_5*scratch_7);
    double scratch_9 = scratch_4*(-A[22]*scratch_1 + b[1]);
    double scratch_10 = scratch_8*(-A[44]*scratch_1 + b[2] - scratch_7*scratch_9);
    double scratch_11 = A[3]*scratch_0;
    double scratch_12 = scratch_4*(-A[22]*scratch_11 + A[25]);
    double scratch_13 = scratch_8*(-A[44]*scratch_11 + A[47] - scratch_12*scratch_7);
    double scratch_14 = scratch_11 - scratch_12*scratch_3 - scratch_13*scratch_6;
    double scratch_15 = -A[66]*scratch_3 + A[67];
    double scratch_16 = -A[66]*scratch_2 + A[68] - scratch_15*scratch_5;
    double scratch_17 = 1.0/(-A[66]*scratch_11 + A[69] - scratch_12*scratch_15 - scratch_13*scratch_16);
    double scratch_18 = scratch_17*(-A[66]*scratch_1 + b[3] - scratch_10*scratch_16 - scratch_15*scratch_9);
    double scratch_19 = A[4]*scratch_0;
    double scratch_20 = scratch_4*(-A[22]*scratch_19 + A[26]);
    double scratch_21 = scratch_8*(-A[44]*scratch_19 + A[48] - scratch_20*scratch_7);
    double scratch_22 = scratch_17*(-A[66]*scratch_19 + A[70] - scratch_15*scratch_20 - scratch_16*scratch_21);
    double scratch_23 = -scratch_14*scratch_22 + scratch_19 - scratch_20*scratch_3 - scratch_21*scratch_6;
    double scratch_24 = -A[88]*scratch_3 + A[89];
    double scratch_25 = -A[88]*scratch_2 + A[90] - scratch_24*scratch_5;
    double scratch_26 = -A[88]*scratch_11 + A[91] - scratch_12*scratch_24 - scratch_13*scratch_25;
    double scratch_27 = 1.0/(-A[88]*scratch_19 + A[92] - scratch_20*scratch_24 - scratch_21*scratch_25 - scratch_22*scratch_26);
    double scratch_28 = scratch_27*(-A[88]*scratch_1 + b[4] - scratch_10*scratch_25 - scratch_18*scratch_26 - scratch_24*scratch_9);
    double scratch_29 = A[5]*scratch_0;
    double scratch_30 = scratch_4*(-A[22]*scratch_29 + A[27]);
    double scratch_31 = scratch_8*(-A[44]*scratch_29 + A[49] - scratch_30*scratch_7);
    double scratch_32 = scratch_17*(-A[66]*scratch_29 + A[71] - scratch_15*scratch_30 - scratch_16*scratch_31);
    double scratch_33 = scratch_27*(-A[88]*scratch_29 + A[93] - scratch_24*scratch_30 - scratch_25*scratch_31 - scratch_26*scratch_32);
    double scratch_34 = -scratch_14*scratch_32 - scratch_23*scratch_33 + scratch_29 - scratch_3*scratch_30 - scratch_31*scratch_6;
    double scratch_35 = -A[110]*scratch_3 + A[111];
    double scratch_36 = -A[110]*scratch_2 + A[112] - scratch_35*scratch_5;
    double scratch_37 = -A[110]*scratch_11 + A[113] - scratch_12*scratch_35 - scratch_13*scratch_36;
    double scratch_38 = -A[110]*scratch_19 + A[114] - scratch_20*scratch_35 - scratch_21*scratch_36 - scratch_22*scratch_37;
    double scratch_39 = 1.0/(-A[110]*scratch_29 + A[115] - scratch_30*scratch_35 - scratch_31*scratch_36 - scratch_32*scratch_37 - scratch_33*scratch_38);
    double scratch_40 = scratch_39*(-A[110]*scratch_1 + b[5] - scratch_10*scratch_36 - scratch_18*scratch_37 - scratch_28*scratch_38 - scratch_35*scratch_9);
    double scratch_41 = A[6]*scratch_0;
    double scratch_42 = scratch_4*(-A[22]*scratch_41 + A[28]);
    double scratch_43 = scratch_8*(-A[44]*scratch_41 + A[50] - scratch_42*scratch_7);
    double scratch_44 = scratch_17*(-A[66]*scratch_41 + A[72] - scratch_15*scratch_42 - scratch_16*scratch_43);
    double scratch_45 = scratch_27*(-A[88]*scratch_41 + A[94] - scratch_24*scratch_42 - scratch_25*scratch_43 - scratch_26*scratch_44);
    double scratch_46 = scratch_39*(-A[110]*scratch_41 + A[116] - scratch_35*scratch_42 - scratch_36*scratch_43 - scratch_37*scratch_44 - scratch_38*scratch_45);
    double scratch_47 = -scratch_14*scratch_44 - scratch_23*scratch_45 - scratch_3*scratch_42 - scratch_34*scratch_46 + scratch_41 - scratch_43*scratch_6;
    double scratch_48 = -A[132]*scratch_3 + A[133];
    double scratch_49 = -A[132]*scratch_2 + A[134] - scratch_48*scratch_5;
    double scratch_50 = -A[132]*scratch_11 + A[135] - scratch_12*scratch_48 - scratch_13*scratch_49;
    double scratch_51 = -A[132]*scratch_19 + A[136] - scratch_20*scratch_48 - scratch_21*scratch_49 - scratch_22*scratch_50;
    double scratch_52 = -A[132]*scratch_29 + A[137] - scratch_30*scratch_48 - scratch_31*scratch_49 - scratch_32*scratch_50 - scratch_33*scratch_51;
    double scratch_53 = 1.0/(-A[132]*scratch_41 + A[138] - scratch_42*scratch_48 - scratch_43*scratch_49 - scratch_44*scratch_50 - scratch_45*scratch_51 - scratch_46*scratch_52);
    double scratch_54 = scratch_53*(-A[132]*scratch_1 + b[6] - scratch_10*scratch_49 - scratch_18*scratch_50 - scratch_28*scratch_51 - scratch_40*scratch_52 - scratch_48*scratch_9);
    double scratch_55 = A[7]*scratch_0;
    double scratch_56 = scratch_4*(-A[22]*scratch_55 + A[29]);
    double scratch_57 = scratch_8*(-A[44]*scratch_55 + A[51] - scratch_56*scratch_7);
    double scratch_58 = scratch_17*(-A[66]*scratch_55 + A[73] - scratch_15*scratch_56 - scratch_16*scratch_57);
    double scratch_59 = scratch_27*(-A[88]*scratch_55 + A[95] - scratch_24*scratch_56 - scratch_25*scratch_57 - scratch_26*scratch_58);
    double scratch_60 = scratch_39*(-A[110]*scratch_55 + A[117] - scratch_35*scratch_56 - scratch_36*scratch_57 - scratch_37*scratch_58 - scratch_38*scratch_59);
    double scratch_61 = scratch_53*(-A[132]*scratch_55 + A[139] - scratch_48*scratch_56 - scratch_49*scratch_57 - scratch_50*scratch_58 - scratch_51*scratch_59 - scratch_52*scratch_60);
    double scratch_62 = -scratch_14*scratch_58 - scratch_23*scratch_59 - scratch_3*scratch_56 - scratch_34*scratch_60 - scratch_47*scratch_61 + scratch_55 - scratch_57*scratch_6;
    double scratch_63 = -A[154]*scratch_3 + A[155];
    double scratch_64 = -A[154]*scratch_2 + A[156] - scratch_5*scratch_63;
    double scratch_65 = -A[154]*scratch_11 + A[157] - scratch_12*scratch_63 - scratch_13*scratch_64;
    double scratch_66 = -A[154]*scratch_19 + A[158] - scratch_20*scratch_63 - scratch_21*scratch_64 - scratch_22*scratch_65;
    double scratch_67 = -A[154]*scratch_29 + A[159] - scratch_30*scratch_63 - scratch_31*scratch_64 - scratch_32*scratch_65 - scratch_33*scratch_66;
    double scratch_68 = -A[154]*scratch_41 + A[160] - scratch_42*scratch_63 - scratch_43*scratch_64 - scratch_44*scratch_65 - scratch_45*scratch_66 - scratch_46*scratch_67;
    double scratch_69 = 1.0/(-A[154]*scratch_55 + A[161] - scratch_56*scratch_63 - scratch_57*scratch_64 - scratch_58*scratch_65 - scratch_59*scratch_66 - scratch_60*scratch_67 - scratch_61*scratch_68);
    double scratch_70 = scratch_69*(-A[154]*scratch_1 + b[7] - scratch_10*scratch_64 - scratch_18*scratch_65 - scratch_28*scratch_66 - scratch_40*scratch_67 - scratch_54*scratch_68 - scratch_63*scratch_9);
    double scratch_71 = A[8]*scratch_0;
    double scratch_72 = scratch_4*(-A[22]*scratch_71 + A[30]);
    double scratch_73 = scratch_8*(-A[44]*scratch_71 + A[52] - scratch_7*scratch_72);
    double scratch_74 = scratch_17*(-A[66]*scratch_71 + A[74] - scratch_15*scratch_72 - scratch_16*scratch_73);
    double scratch_75 = scratch_27*(-A[88]*scratch_71 + A[96] - scratch_24*scratch_72 - scratch_25*scratch_73 - scratch_26*scratch_74);
    double scratch_76 = scratch_39*(-A[110]*scratch_71 + A[118] - scratch_35*scratch_72 - scratch_36*scratch_73 - scratch_37*scratch_74 - scratch_38*scratch_75);
    double scratch_77 = scratch_53*(-A[132]*scratch_71 + A[140] - scratch_48*scratch_72 - scratch_49*scratch_73 - scratch_50*scratch_74 - scratch_51*scratch_75 - scratch_52*scratch_76);
    double scratch_78 = scratch_69*(-A[154]*scratch_71 + A[162] - scratch_63*scratch_72 - scratch_64*scratch_73 - scratch_65*scratch_74 - scratch_66*scratch_75 - scratch_67*scratch_76 - scratch_68*scratch_77);
    double scratch_79 = -scratch_14*scratch_74 - scratch_23*scratch_75 - scratch_3*scratch_72 - scratch_34*scratch_76 - scratch_47*scratch_77 - scratch_6*scratch_73 - scratch_62*scratch_78 + scratch_71;
    double scratch_80 = -A[176]*scratch_3 + A[177];
    double scratch_81 = -A[176]*scratch_2 + A[178] - scratch_5*scratch_80;
    double scratch_82 = -A[176]*scratch_11 + A[179] - scratch_12*scratch_80 - scratch_13*scratch_81;
    double scratch_83 = -A[176]*scratch_19 + A[180] - scratch_20*scratch_80 - scratch_21*scratch_81 - scratch_22*scratch_82;
    double scratch_84 = -A[176]*scratch_29 + A[181] - scratch_30*scratch_80 - scratch_31*scratch_81 - scratch_32*scratch_82 - scratch_33*scratch_83;
    double scratch_85 = -A[176]*scratch_41 + A[182] - scratch_42*scratch_80 - scratch_43*scratch_81 - scratch_44*scratch_82 - scratch_45*scratch_83 - scratch_46*scratch_84;
    double scratch_86 = -A[176]*scratch_55 + A[183] - scratch_56*scratch_80 - scratch_57*scratch_81 - scratch_58*scratch_82 - scratch_59*scratch_83 - scratch_60*scratch_84 - scratch_61*scratch_85;
    double scratch_87 = 1.0/(-A[176]*scratch_71 + A[184] - scratch_72*scratch_80 - scratch_73*scratch_81 - scratch_74*scratch_82 - scratch_75*scratch_83 - scratch_76*scratch_84 - scratch_77*scratch_85 - scratch_78*scratch_86);
    double scratch_88 = scratch_87*(-A[176]*scratch_1 + b[8] - scratch_10*scratch_81 - scratch_18*scratch_82 - scratch_28*scratch_83 - scratch_40*scratch_84 - scratch_54*scratch_85 - scratch_70*scratch_86 - scratch_80*scratch_9);
    double scratch_89 = A[9]*scratch_0;
    double scratch_90 = scratch_4*(-A[22]*scratch_89 + A[31]);
    double scratch_91 = scratch_8*(-A[44]*scratch_89 + A[53] - scratch_7*scratch_90);
    double scratch_92 = scratch_17*(-A[66]*scratch_89 + A[75] - scratch_15*scratch_90 - scratch_16*scratch_91);
    double scratch_93 = scratch_27*(-A[88]*scratch_89 + A[97] - scratch_24*scratch_90 - scratch_25*scratch_91 - scratch_26*scratch_92);
    double scratch_94 = scratch_39*(-A[110]*scratch_89 + A[119] - scratch_35*scratch_90 - scratch_36*scratch_91 - scratch_37*scratch_92 - scratch_38*scratch_93);
    double scratch_95 = scratch_53*(-A[132]*scratch_89 + A[141] - scratch_48*scratch_90 - scratch_49*scratch_91 - scratch_50*scratch_92 - scratch_51*scratch_93 - scratch_52*scratch_94);
    double scratch_96 = scratch_69*(-A[154]*scratch_89 + A[163] - scratch_63*scratch_90 - scratch_64*scratch_91 - scratch_65*scratch_92 - scratch_66*scratch_93 - scratch_67*scratch_94 - scratch_68*scratch_95);
    double scratch_97 = scratch_87*(-A[176]*scratch_89 + A[185] - scratch_80*scratch_90 - scratch_81*scratch_91 - scratch_82*scratch_92 - scratch_83*scratch_93 - scratch_84*scratch_94 - scratch_85*scratch_95 - scratch_86*scratch_96);
    double scratch_98 = -scratch_14*scratch_92 - scratch_23*scratch_93 - scratch_3*scratch_90 - scratch_34*scratch_94 - scratch_47*scratch_95 - scratch_6*scratch_91 - scratch_62*scratch_96 - scratch_79*scratch_97 + scratch_89;
    double scratch_99 = -A[198]*scratch_3 + A[199];
    double scratch_100 = -A[198]*scratch_2 + A[200] - scratch_5*scratch_99;
    double scratch_101 = -A[198]*scratch_11 + A[201] - scratch_100*scratch_13 - scratch_12*scratch_99;
    double scratch_102 = -A[198]*scratch_19 + A[202] - scratch_100*scratch_21 - scratch_101*scratch_22 - scratch_20*scratch_99;
    double scratch_103 = -A[198]*scratch_29 + A[203] - scratch_100*scratch_31 - scratch_101*scratch_32 - scratch_102*scratch_33 - scratch_30*scratch_99;
    double scratch_104 = -A[198]*scratch_41 + A[204] - scratch_100*scratch_43 - scratch_101*scratch_44 - scratch_102*scratch_45 - scratch_103*scratch_46 - scratch_42*scratch_99;
    double scratch_105 = -A[198]*scratch_55 + A[205] - scratch_100*scratch_57 - scratch_101*scratch_58 - scratch_102*scratch_59 - scratch_103*scratch_60 - scratch_104*scratch_61 - scratch_56*scratch_99;
    double scratch_106 = -A[198]*scratch_71 + A[206] - scratch_100*scratch_73 - scratch_101*scratch_74 - scratch_102*scratch_75 - scratch_103*scratch_76 - scratch_104*scratch_77 - scratch_105*scratch_78 - scratch_72*scratch_99;
    double scratch_107 = 1.0/(-A[198]*scratch_89 + A[207] - scratch_100*scratch_91 - scratch_101*scratch_92 - scratch_102*scratch_93 - scratch_103*scratch_94 - scratch_104*scratch_95 - scratch_105*scratch_96 - scratch_106*scratch_97 - scratch_90*scratch_99);
    double scratch_108 = scratch_107*(-A[198]*scratch_1 + b[9] - scratch_10*scratch_100 - scratch_101*scratch_18 - scratch_102*scratch_28 - scratch_103*scratch_40 - scratch_104*scratch_54 - scratch_105*scratch_70 - scratch_106*scratch_88 - scratch_9*scratch_99);
    double scratch_109 = A[10]*scratch_0;
    double scratch_110 = scratch_4*(-A[22]*scratch_109 + A[32]);
    double scratch_111 = scratch_8*(-A[44]*scratch_109 + A[54] - scratch_110*scratch_7);
    double scratch_112 = scratch_17*(-A[66]*scratch_109 + A[76] - scratch_110*scratch_15 - scratch_111*scratch_16);
    double scratch_113 = scratch_27*(-A[88]*scratch_109 + A[98] - scratch_110*scratch_24 - scratch_111*scratch_25 - scratch_112*scratch_26);
    double scratch_114 = scratch_39*(-A[110]*scratch_109 + A[120] - scratch_110*scratch_35 - scratch_111*scratch_36 - scratch_112*scratch_37 - scratch_113*scratch_38);
    double scratch_115 = scratch_53*(-A[132]*scratch_109 + A[142] - scratch_110*scratch_48 - scratch_111*scratch_49 - scratch_112*scratch_50 - scratch_113*scratch_51 - scratch_114*scratch_52);
    double scratch_116 = scratch_69*(-A[154]*scratch_109 + A[164] - scratch_110*scratch_63 - scratch_111*scratch_64 - scratch_112*scratch_65 - scratch_113*scratch_66 - scratch_114*scratch_67 - scratch_115*scratch_68);
    double scratch_117 = scratch_87*(-A[176]*scratch_109 + A[186] - scratch_110*scratch_80 - scratch_111*scratch_81 - scratch_112*scratch_82 - scratch_113*scratch_83 - scratch_114*scratch_84 - scratch_115*scratch_85 - scratch_116*scratch_86);
    double scratch_118 = scratch_107*(-A[198]*scratch_109 + A[208] - scratch_100*scratch_111 - scratch_101*scratch_112 - scratch_102*scratch_113 - scratch_103*scratch_114 - scratch_104*scratch_115 - scratch_105*scratch_116 - scratch_106*scratch_117 - scratch_110*scratch_99);
    double scratch_119 = scratch_109 - scratch_110*scratch_3 - scratch_111*scratch_6 - scratch_112*scratch_14 - scratch_113*scratch_23 - scratch_114*scratch_34 - scratch_115*scratch_47 - scratch_116*scratch_62 - scratch_117*scratch_79 - scratch_118*scratch_98;
    double scratch_120 = -A[220]*scratch_3 + A[221];
    double scratch_121 = -A[220]*scratch_2 + A[222] - scratch_120*scratch_5;
    double scratch_122 = -A[220]*scratch_11 + A[223] - scratch_12*scratch_120 - scratch_121*scratch_13;
    double scratch_123 = -A[220]*scratch_19 + A[224] - scratch_120*scratch_20 - scratch_121*scratch_21 - scratch_122*scratch_22;
    double scratch_124 = -A[220]*scratch_29 + A[225] - scratch_120*scratch_30 - scratch_121*scratch_31 - scratch_122*scratch_32 - scratch_123*scratch_33;
    double scratch_125 = -A[220]*scratch_41 + A[226] - scratch_120*scratch_42 - scratch_121*scratch_43 - scratch_122*scratch_44 - scratch_123*scratch_45 - scratch_124*scratch_46;
    double scratch_126 = -A[220]*scratch_55 + A[227] - scratch_120*scratch_56 - scratch_121*scratch_57 - scratch_122*scratch_58 - scratch_123*scratch_59 - scratch_124*scratch_60 - scratch_125*scratch_61;
    double scratch_127 = -A[220]*scratch_71 + A[228] - scratch_120*scratch_72 - scratch_121*scratch_73 - scratch_122*scratch_74 - scratch_123*scratch_75 - scratch_124*scratch_76 - scratch_125*scratch_77 - scratch_126*scratch_78;
    double scratch_128 = -A[220]*scratch_89 + A[229] - scratch_120*scratch_90 - scratch_121*scratch_91 - scratch_122*scratch_92 - scratch_123*scratch_93 - scratch_124*scratch_94 - scratch_125*scratch_95 - scratch_126*scratch_96 - scratch_127*scratch_97;
    double scratch_129 = 1.0/(-A[220]*scratch_109 + A[230] - scratch_110*scratch_120 - scratch_111*scratch_121 - scratch_112*scratch_122 - scratch_113*scratch_123 - scratch_114*scratch_124 - scratch_115*scratch_125 - scratch_116*scratch_126 - scratch_117*scratch_127 - scratch_118*scratch_128);
    double scratch_130 = scratch_129*(-A[220]*scratch_1 + b[10] - scratch_10*scratch_121 - scratch_108*scratch_128 - scratch_120*scratch_9 - scratch_122*scratch_18 - scratch_123*scratch_28 - scratch_124*scratch_40 - scratch_125*scratch_54 - scratch_126*scratch_70 - scratch_127*scratch_88);
    double scratch_131 = A[11]*scratch_0;
    double scratch_132 = scratch_4*(-A[22]*scratch_131 + A[33]);
    double scratch_133 = scratch_8*(-A[44]*scratch_131 + A[55] - scratch_132*scratch_7);
    double scratch_134 = scratch_17*(-A[66]*scratch_131 + A[77] - scratch_132*scratch_15 - scratch_133*scratch_16);
    double scratch_135 = scratch_27*(A[99] - A[88]*scratch_131 - scratch_132*scratch_24 - scratch_133*scratch_25 - scratch_134*scratch_26);
    double scratch_136 = scratch_39*(-A[110]*scratch_131 + A[121] - scratch_132*scratch_35 - scratch_133*scratch_36 - scratch_134*scratch_37 - scratch_135*scratch_38);
    double scratch_137 = scratch_53*(-A[132]*scratch_131 + A[143] - scratch_132*scratch_48 - scratch_133*scratch_49 - scratch_134*scratch_50 - scratch_135*scratch_51 - scratch_136*scratch_52);
    double scratch_138 = scratch_69*(-A[154]*scratch_131 + A[165] - scratch_132*scratch_63 - scratch_133*scratch_64 - scratch_134*scratch_65 - scratch_135*scratch_66 - scratch_136*scratch_67 - scratch_137*scratch_68);
    double scratch_139 = scratch_87*(-A[176]*scratch_131 + A[187] - scratch_132*scratch_80 - scratch_133*scratch_81 - scratch_134*scratch_82 - scratch_135*scratch_83 - scratch_136*scratch_84 - scratch_137*scratch_85 - scratch_138*scratch_86);
    double scratch_140 = scratch_107*(-A[198]*scratch_131 + A[209] - scratch_100*scratch_133 - scratch_101*scratch_134 - scratch_102*scratch_135 - scratch_103*scratch_136 - scratch_104*scratch_137 - scratch_105*scratch_138 - scratch_106*scratch_139 - scratch_132*scratch_99);
    double scratch_141 = scratch_129*(-A[220]*scratch_131 + A[231] - scratch_120*scratch_132 - scratch_121*scratch_133 - scratch_122*scratch_134 - scratch_123*scratch_135 - scratch_124*scratch_136 - scratch_125*scratch_137 - scratch_126*scratch_138 - scratch_127*scratch_139 - scratch_128*scratch_140);
    double scratch_142 = -scratch_119*scratch_141 + scratch_131 - scratch_132*scratch_3 - scratch_133*scratch_6 - scratch_134*scratch_14 - scratch_135*scratch_23 - scratch_136*scratch_34 - scratch_137*scratch_47 - scratch_138*scratch_62 - scratch_139*scratch_79 - scratch_140*scratch_98;
    double scratch_143 = -A[242]*scratch_3 + A[243];
    double scratch_144 = -A[242]*scratch_2 + A[244] - scratch_143*scratch_5;
    double scratch_145 = -A[242]*scratch_11 + A[245] - scratch_12*scratch_143 - scratch_13*scratch_144;
    double scratch_146 = -A[242]*scratch_19 + A[246] - scratch_143*scratch_20 - scratch_144*scratch_21 - scratch_145*scratch_22;
    double scratch_147 = -A[242]*scratch_29 + A[247] - scratch_143*scratch_30 - scratch_144*scratch_31 - scratch_145*scratch_32 - scratch_146*scratch_33;
    double scratch_148 = -A[242]*scratch_41 + A[248] - scratch_143*scratch_42 - scratch_144*scratch_43 - scratch_145*scratch_44 - scratch_146*scratch_45 - scratch_147*scratch_46;
    double scratch_149 = -A[242]*scratch_55 + A[249] - scratch_143*scratch_56 - scratch_144*scratch_57 - scratch_145*scratch_58 - scratch_146*scratch_59 - scratch_147*scratch_60 - scratch_148*scratch_61;
    double scratch_150 = -A[242]*scratch_71 + A[250] - scratch_143*scratch_72 - scratch_144*scratch_73 - scratch_145*scratch_74 - scratch_146*scratch_75 - scratch_147*scratch_76 - scratch_148*scratch_77 - scratch_149*scratch_78;
    double scratch_151 = -A[242]*scratch_89 + A[251] - scratch_143*scratch_90 - scratch_144*scratch_91 - scratch_145*scratch_92 - scratch_146*scratch_93 - scratch_147*scratch_94 - scratch_148*scratch_95 - scratch_149*scratch_96 - scratch_150*scratch_97;
    double scratch_152 = -A[242]*scratch_109 + A[252] - scratch_110*scratch_143 - scratch_111*scratch_144 - scratch_112*scratch_145 - scratch_113*scratch_146 - scratch_114*scratch_147 - scratch_115*scratch_148 - scratch_116*scratch_149 - scratch_117*scratch_150 - scratch_118*scratch_151;
    double scratch_153 = 1.0/(-A[242]*scratch_131 + A[253] - scratch_132*scratch_143 - scratch_133*scratch_144 - scratch_134*scratch_145 - scratch_135*scratch_146 - scratch_136*scratch_147 - scratch_137*scratch_148 - scratch_138*scratch_149 - scratch_139*scratch_150 - scratch_140*scratch_151 - scratch_141*scratch_152);
    double scratch_154 = scratch_153*(-A[242]*scratch_1 + b[11] - scratch_10*scratch_144 - scratch_108*scratch_151 - scratch_130*scratch_152 - scratch_143*scratch_9 - scratch_145*scratch_18 - scratch_146*scratch_28 - scratch_147*scratch_40 - scratch_148*scratch_54 - scratch_149*scratch_70 - scratch_150*scratch_88);
    double scratch_155 = A[12]*scratch_0;
    double scratch_156 = scratch_4*(-A[22]*scratch_155 + A[34]);
    double scratch_157 = scratch_8*(-A[44]*scratch_155 + A[56] - scratch_156*scratch_7);
    double scratch_158 = scratch_17*(-A[66]*scratch_155 + A[78] - scratch_15*scratch_156 - scratch_157*scratch_16);
    double scratch_159 = scratch_27*(A[100] - A[88]*scratch_155 - scratch_156*scratch_24 - scratch_157*scratch_25 - scratch_158*scratch_26);
    double scratch_160 = scratch_39*(-A[110]*scratch_155 + A[122] - scratch_156*scratch_35 - scratch_157*scratch_36 - scratch_158*scratch_37 - scratch_159*scratch_38);
    double scratch_161 = scratch_53*(-A[132]*scratch_155 + A[144] - scratch_156*scratch_48 - scratch_157*scratch_49 - scratch_158*scratch_50 - scratch_159*scratch_51 - scratch_160*scratch_52);
    double scratch_162 = scratch_69*(-A[154]*scratch_155 + A[166] - scratch_156*scratch_63 - scratch_157*scratch_64 - scratch_158*scratch_65 - scratch_159*scratch_66 - scratch_160*scratch_67 - scratch_161*scratch_68);
    double scratch_163 = scratch_87*(-A[176]*scratch_155 + A[188] - scratch_156*scratch_80 - scratch_157*scratch_81 - scratch_158*scratch_82 - scratch_159*scratch_83 - scratch_160*scratch_84 - scratch_161*scratch_85 - scratch_162*scratch_86);
    double scratch_164 = scratch_107*(-A[198]*scratch_155 + A[210] - scratch_100*scratch_157 - scratch_101*scratch_158 - scratch_102*scratch_159 - scratch_103*scratch_160 - scratch_104*scratch_161 - scratch_105*scratch_162 - scratch_106*scratch_163 - scratch_156*scratch_99);
    double scratch_165 = scratch_129*(-A[220]*scratch_155 + A[232] - scratch_120*scratch_156 - scratch_121*scratch_157 - scratch_122*scratch_158 - scratch_123*scratch_159 - scratch_124*scratch_160 - scratch_125*scratch_161 - scratch_126*scratch_162 - scratch_127*scratch_163 - scratch_128*scratch_164);
    double scratch_166 = scratch_153*(-A[242]*scratch_155 + A[254] - scratch_143*scratch_156 - scratch_144*scratch_157 - scratch_145*scratch_158 - scratch_146*scratch_159 - scratch_147*scratch_160 - scratch_148*scratch_161 - scratch_149*scratch_162 - scratch_150*scratch_163 - scratch_151*scratch_164 - scratch_152*scratch_165);
    double scratch_167 = -scratch_119*scratch_165 - scratch_14*scratch_158 - scratch_142*scratch_166 + scratch_155 - scratch_156*scratch_3 - scratch_157*scratch_6 - scratch_159*scratch_23 - scratch_160*scratch_34 - scratch_161*scratch_47 - scratch_162*scratch_62 - scratch_163*scratch_79 - scratch_164*scratch_98;
    double scratch_168 = -A[264]*scratch_3 + A[265];
    double scratch_169 = -A[264]*scratch_2 + A[266] - scratch_168*scratch_5;
    double scratch_170 = -A[264]*scratch_11 + A[267] - scratch_12*scratch_168 - scratch_13*scratch_169;
    double scratch_171 = -A[264]*scratch_19 + A[268] - scratch_168*scratch_20 - scratch_169*scratch_21 - scratch_170*scratch_22;
    double scratch_172 = -A[264]*scratch_29 + A[269] - scratch_168*scratch_30 - scratch_169*scratch_31 - scratch_170*scratch_32 - scratch_171*scratch_33;
    double scratch_173 = -A[264]*scratch_41 + A[270] - scratch_168*scratch_42 - scratch_169*scratch_43 - scratch_170*scratch_44 - scratch_171*scratch_45 - scratch_172*scratch_46;
    double scratch_174 = -A[264]*scratch_55 + A[271] - scratch_168*scratch_56 - scratch_169*scratch_57 - scratch_170*scratch_58 - scratch_171*scratch_59 - scratch_172*scratch_60 - scratch_173*scratch_61;
    double scratch_175 = -A[264]*scratch_71 + A[272] - scratch_168*scratch_72 - scratch_169*scratch_73 - scratch_170*scratch_74 - scratch_171*scratch_75 - scratch_172*scratch_76 - scratch_173*scratch_77 - scratch_174*scratch_78;
    double scratch_176 = -A[264]*scratch_89 + A[273] - scratch_168*scratch_90 - scratch_169*scratch_91 - scratch_170*scratch_92 - scratch_171*scratch_93 - scratch_172*scratch_94 - scratch_173*scratch_95 - scratch_174*scratch_96 - scratch_175*scratch_97;
    double scratch_177 = -A[264]*scratch_109 + A[274] - scratch_110*scratch_168 - scratch_111*scratch_169 - scratch_112*scratch_170 - scratch_113*scratch_171 - scratch_114*scratch_172 - scratch_115*scratch_173 - scratch_116*scratch_174 - scratch_117*scratch_175 - scratch_118*scratch_176;
    double scratch_178 = -A[264]*scratch_131 + A[275] - scratch_132*scratch_168 - scratch_133*scratch_169 - scratch_134*scratch_170 - scratch_135*scratch_171 - scratch_136*scratch_172 - scratch_137*scratch_173 - scratch_138*scratch_174 - scratch_139*scratch_175 - scratch_140*scratch_176 - scratch_141*scratch_177;
    double scratch_179 = 1.0/(-A[264]*scratch_155 + A[276] - scratch_156*scratch_168 - scratch_157*scratch_169 - scratch_158*scratch_170 - scratch_159*scratch_171 - scratch_160*scratch_172 - scratch_161*scratch_173 - scratch_162*scratch_174 - scratch_163*scratch_175 - scratch_164*scratch_176 - scratch_165*scratch_177 - scratch_166*scratch_178);
    double scratch_180 = scratch_179*(-A[264]*scratch_1 + b[12] - scratch_10*scratch_169 - scratch_108*scratch_176 - scratch_130*scratch_177 - scratch_154*scratch_178 - scratch_168*scratch_9 - scratch_170*scratch_18 - scratch_171*scratch_28 - scratch_172*scratch_40 - scratch_173*scratch_54 - scratch_174*scratch_70 - scratch_175*scratch_88);
    double scratch_181 = A[13]*scratch_0;
    double scratch_182 = scratch_4*(-A[22]*scratch_181 + A[35]);
    double scratch_183 = scratch_8*(-A[44]*scratch_181 + A[57] - scratch_182*scratch_7);
    double scratch_184 = scratch_17*(-A[66]*scratch_181 + A[79] - scratch_15*scratch_182 - scratch_16*scratch_183);
    double scratch_185 = scratch_27*(A[101] - A[88]*scratch_181 - scratch_182*scratch_24 - scratch_183*scratch_25 - scratch_184*scratch_26);
    double scratch_186 = scratch_39*(-A[110]*scratch_181 + A[123] - scratch_182*scratch_35 - scratch_183*scratch_36 - scratch_184*scratch_37 - scratch_185*scratch_38);
    double scratch_187 = scratch_53*(-A[132]*scratch_181 + A[145] - scratch_182*scratch_48 - scratch_183*scratch_49 - scratch_184*scratch_50 - scratch_185*scratch_51 - scratch_186*scratch_52);
    double scratch_188 = scratch_69*(-A[154]*scratch_181 + A[167] - scratch_182*scratch_63 - scratch_183*scratch_64 - scratch_184*scratch_65 - scratch_185*scratch_66 - scratch_186*scratch_67 - scratch_187*scratch_68);
    double scratch_189 = scratch_87*(-A[176]*scratch_181 + A[189] - scratch_182*scratch_80 - scratch_183*scratch_81 - scratch_184*scratch_82 - scratch_185*scratch_83 - scratch_186*scratch_84 - scratch_187*scratch_85 - scratch_188*scratch_86);
    double scratch_190 = scratch_107*(-A[198]*scratch_181 + A[211] - scratch_100*scratch_183 - scratch_101*scratch_184 - scratch_102*scratch_185 - scratch_103*scratch_186 - scratch_104*scratch_187 - scratch_105*scratch_188 - scratch_106*scratch_189 - scratch_182*scratch_99);
    double scratch_191 = scratch_129*(-A[220]*scratch_181 + A[233] - scratch_120*scratch_182 - scratch_121*scratch_183 - scratch_122*scratch_184 - scratch_123*scratch_185 - scratch_124*scratch_186 - scratch_125*scratch_187 - scratch_126*scratch_188 - scratch_127*scratch_189 - scratch_128*scratch_190);
    double scratch_192 = scratch_153*(-A[242]*scratch_181 + A[255] - scratch_143*scratch_182 - scratch_144*scratch_183 - scratch_145*scratch_184 - scratch_146*scratch_185 - scratch_147*scratch_186 - scratch_148*scratch_187 - scratch_149*scratch_188 - scratch_150*scratch_189 - scratch_151*scratch_190 - scratch_152*scratch_191);
    double scratch_193 = scratch_179*(-A[264]*scratch_181 + A[277] - scratch_168*scratch_182 - scratch_169*scratch_183 - scratch_170*scratch_184 - scratch_171*scratch_185 - scratch_172*scratch_186 - scratch_173*scratch_187 - scratch_174*scratch_188 - scratch_175*scratch_189 - scratch_176*scratch_190 - scratch_177*scratch_191 - scratch_178*scratch_192);
    double scratch_194 = -scratch_119*scratch_191 - scratch_14*scratch_184 - scratch_142*scratch_192 - scratch_167*scratch_193 + scratch_181 - scratch_182*scratch_3 - scratch_183*scratch_6 - scratch_185*scratch_23 - scratch_186*scratch_34 - scratch_187*scratch_47 - scratch_188*scratch_62 - scratch_189*scratch_79 - scratch_190*scratch_98;
    double scratch_195 = -A[286]*scratch_3 + A[287];
    double scratch_196 = -A[286]*scratch_2 + A[288] - scratch_195*scratch_5;
    double scratch_197 = -A[286]*scratch_11 + A[289] - scratch_12*scratch_195 - scratch_13*scratch_196;
    double scratch_198 = -A[286]*scratch_19 + A[290] - scratch_195*scratch_20 - scratch_196*scratch_21 - scratch_197*scratch_22;
    double scratch_199 = -A[286]*scratch_29 + A[291] - scratch_195*scratch_30 - scratch_196*scratch_31 - scratch_197*scratch_32 - scratch_198*scratch_33;
    double scratch_200 = -A[286]*scratch_41 + A[292] - scratch_195*scratch_42 - scratch_196*scratch_43 - scratch_197*scratch_44 - scratch_198*scratch_45 - scratch_199*scratch_46;
    double scratch_201 = -A[286]*scratch_55 + A[293] - scratch_195*scratch_56 - scratch_196*scratch_57 - scratch_197*scratch_58 - scratch_198*scratch_59 - scratch_199*scratch_60 - scratch_200*scratch_61;
    double scratch_202 = -A[286]*scratch_71 + A[294] - scratch_195*scratch_72 - scratch_196*scratch_73 - scratch_197*scratch_74 - scratch_198*scratch_75 - scratch_199*scratch_76 - scratch_200*scratch_77 - scratch_201*scratch_78;
    double scratch_203 = -A[286]*scratch_89 + A[295] - scratch_195*scratch_90 - scratch_196*scratch_91 - scratch_197*scratch_92 - scratch_198*scratch_93 - scratch_199*scratch_94 - scratch_200*scratch_95 - scratch_201*scratch_96 - scratch_202*scratch_97;
    double scratch_204 = -A[286]*scratch_109 + A[296] - scratch_110*scratch_195 - scratch_111*scratch_196 - scratch_112*scratch_197 - scratch_113*scratch_198 - scratch_114*scratch_199 - scratch_115*scratch_200 - scratch_116*scratch_201 - scratch_117*scratch_202 - scratch_118*scratch_203;
    double scratch_205 = -A[286]*scratch_131 + A[297] - scratch_132*scratch_195 - scratch_133*scratch_196 - scratch_134*scratch_197 - scratch_135*scratch_198 - scratch_136*scratch_199 - scratch_137*scratch_200 - scratch_138*scratch_201 - scratch_139*scratch_202 - scratch_140*scratch_203 - scratch_141*scratch_204;
    double scratch_206 = -A[286]*scratch_155 + A[298] - scratch_156*scratch_195 - scratch_157*scratch_196 - scratch_158*scratch_197 - scratch_159*scratch_198 - scratch_160*scratch_199 - scratch_161*scratch_200 - scratch_162*scratch_201 - scratch_163*scratch_202 - scratch_164*scratch_203 - scratch_165*scratch_204 - scratch_166*scratch_205;
    double scratch_207 = 1.0/(-A[286]*scratch_181 + A[299] - scratch_182*scratch_195 - scratch_183*scratch_196 - scratch_184*scratch_197 - scratch_185*scratch_198 - scratch_186*scratch_199 - scratch_187*scratch_200 - scratch_188*scratch_201 - scratch_189*scratch_202 - scratch_190*scratch_203 - scratch_191*scratch_204 - scratch_192*scratch_205 - scratch_193*scratch_206);
    double scratch_208 = scratch_207*(-A[286]*scratch_1 + b[13] - scratch_10*scratch_196 - scratch_108*scratch_203 - scratch_130*scratch_204 - scratch_154*scratch_205 - scratch_18*scratch_197 - scratch_180*scratch_206 - scratch_195*scratch_9 - scratch_198*scratch_28 - scratch_199*scratch_40 - scratch_200*scratch_54 - scratch_201*scratch_70 - scratch_202*scratch_88);
    double scratch_209 = A[14]*scratch_0;
    double scratch_210 = scratch_4*(-A[22]*scratch_209 + A[36]);
    double scratch_211 = scratch_8*(-A[44]*scratch_209 + A[58] - scratch_210*scratch_7);
    double scratch_212 = scratch_17*(-A[66]*scratch_209 + A[80] - scratch_15*scratch_210 - scratch_16*scratch_211);
    double scratch_213 = scratch_27*(A[102] - A[88]*scratch_209 - scratch_210*scratch_24 - scratch_211*scratch_25 - scratch_212*scratch_26);
    double scratch_214 = scratch_39*(-A[110]*scratch_209 + A[124] - scratch_210*scratch_35 - scratch_211*scratch_36 - scratch_212*scratch_37 - scratch_213*scratch_38);
    double scratch_215 = scratch_53*(-A[132]*scratch_209 + A[146] - scratch_210*scratch_48 - scratch_211*scratch_49 - scratch_212*scratch_50 - scratch_213*scratch_51 - scratch_214*scratch_52);
    double scratch_216 = scratch_69*(-A[154]*scratch_209 + A[168] - scratch_210*scratch_63 - scratch_211*scratch_64 - scratch_212*scratch_65 - scratch_213*scratch_66 - scratch_214*scratch_67 - scratch_215*scratch_68);
    double scratch_217 = scratch_87*(-A[176]*scratch_209 + A[190] - scratch_210*scratch_80 - scratch_211*scratch_81 - scratch_212*scratch_82 - scratch_213*scratch_83 - scratch_214*scratch_84 - scratch_215*scratch_85 - scratch_216*scratch_86);
    double scratch_218 = scratch_107*(-A[198]*scratch_209 + A[212] - scratch_100*scratch_211 - scratch_101*scratch_212 - scratch_102*scratch_213 - scratch_103*scratch_214 - scratch_104*scratch_215 - scratch_105*scratch_216 - scratch_106*scratch_217 - scratch_210*scratch_99);
    double scratch_219 = scratch_129*(-A[220]*scratch_209 + A[234] - scratch_120*scratch_210 - scratch_121*scratch_211 - scratch_122*scratch_212 - scratch_123*scratch_213 - scratch_124*scratch_214 - scratch_125*scratch_215 - scratch_126*scratch_216 - scratch_127*scratch_217 - scratch_128*scratch_218);
    double scratch_220 = scratch_153*(-A[242]*scratch_209 + A[256] - scratch_143*scratch_210 - scratch_144*scratch_211 - scratch_145*scratch_212 - scratch_146*scratch_213 - scratch_147*scratch_214 - scratch_148*scratch_215 - scratch_149*scratch_216 - scratch_150*scratch_217 - scratch_151*scratch_218 - scratch_152*scratch_219);
    double scratch_221 = scratch_179*(-A[264]*scratch_209 + A[278] - scratch_168*scratch_210 - scratch_169*scratch_211 - scratch_170*scratch_212 - scratch_171*scratch_213 - scratch_172*scratch_214 - scratch_173*scratch_215 - scratch_174*scratch_216 - scratch_175*scratch_217 - scratch_176*scratch_218 - scratch_177*scratch_219 - scratch_178*scratch_220);
    double scratch_222 = scratch_207*(-A[286]*scratch_209 + A[300] - scratch_195*scratch_210 - scratch_196*scratch_211 - scratch_197*scratch_212 - scratch_198*scratch_213 - scratch_199*scratch_214 - scratch_200*scratch_215 - scratch_201*scratch_216 - scratch_202*scratch_217 - scratch_203*scratch_218 - scratch_204*scratch_219 - scratch_205*scratch_220 - scratch_206*scratch_221);
    double scratch_223 = -scratch_119*scratch_219 - scratch_14*scratch_212 - scratch_142*scratch_220 - scratch_167*scratch_221 - scratch_194*scratch_222 + scratch_209 - scratch_210*scratch_3 - scratch_211*scratch_6 - scratch_213*scratch_23 - scratch_214*scratch_34 - scratch_215*scratch_47 - scratch_216*scratch_62 - scratch_217*scratch_79 - scratch_218*scratch_98;
    double scratch_224 = -A[308]*scratch_3 + A[309];
    double scratch_225 = -A[308]*scratch_2 + A[310] - scratch_224*scratch_5;
    double scratch_226 = -A[308]*scratch_11 + A[311] - scratch_12*scratch_224 - scratch_13*scratch_225;
    double scratch_227 = -A[308]*scratch_19 + A[312] - scratch_20*scratch_224 - scratch_21*scratch_225 - scratch_22*scratch_226;
    double scratch_228 = -A[308]*scratch_29 + A[313] - scratch_224*scratch_30 - scratch_225*scratch_31 - scratch_226*scratch_32 - scratch_227*scratch_33;
    double scratch_229 = -A[308]*scratch_41 + A[314] - scratch_224*scratch_42 - scratch_225*scratch_43 - scratch_226*scratch_44 - scratch_227*scratch_45 - scratch_228*scratch_46;
    double scratch_230 = -A[308]*scratch_55 + A[315] - scratch_224*scratch_56 - scratch_225*scratch_57 - scratch_226*scratch_58 - scratch_227*scratch_59 - scratch_228*scratch_60 - scratch_229*scratch_61;
    double scratch_231 = -A[308]*scratch_71 + A[316] - scratch_224*scratch_72 - scratch_225*scratch_73 - scratch_226*scratch_74 - scratch_227*scratch_75 - scratch_228*scratch_76 - scratch_229*scratch_77 - scratch_230*scratch_78;
    double scratch_232 = -A[308]*scratch_89 + A[317] - scratch_224*scratch_90 - scratch_225*scratch_91 - scratch_226*scratch_92 - scratch_227*scratch_93 - scratch_228*scratch_94 - scratch_229*scratch_95 - scratch_230*scratch_96 - scratch_231*scratch_97;
    double scratch_233 = -A[308]*scratch_109 + A[318] - scratch_110*scratch_224 - scratch_111*scratch_225 - scratch_112*scratch_226 - scratch_113*scratch_227 - scratch_114*scratch_228 - scratch_115*scratch_229 - scratch_116*scratch_230 - scratch_117*scratch_231 - scratch_118*scratch_232;
    double scratch_234 = -A[308]*scratch_131 + A[319] - scratch_132*scratch_224 - scratch_133*scratch_225 - scratch_134*scratch_226 - scratch_135*scratch_227 - scratch_136*scratch_228 - scratch_137*scratch_229 - scratch_138*scratch_230 - scratch_139*scratch_231 - scratch_140*scratch_232 - scratch_141*scratch_233;
    double scratch_235 = -A[308]*scratch_155 + A[320] - scratch_156*scratch_224 - scratch_157*scratch_225 - scratch_158*scratch_226 - scratch_159*scratch_227 - scratch_160*scratch_228 - scratch_161*scratch_229 - scratch_162*scratch_230 - scratch_163*scratch_231 - scratch_164*scratch_232 - scratch_165*scratch_233 - scratch_166*scratch_234;
    double scratch_236 = -A[308]*scratch_181 + A[321] - scratch_182*scratch_224 - scratch_183*scratch_225 - scratch_184*scratch_226 - scratch_185*scratch_227 - scratch_186*scratch_228 - scratch_187*scratch_229 - scratch_188*scratch_230 - scratch_189*scratch_231 - scratch_190*scratch_232 - scratch_191*scratch_233 - scratch_192*scratch_234 - scratch_193*scratch_235;
    double scratch_237 = 1.0/(-A[308]*scratch_209 + A[322] - scratch_210*scratch_224 - scratch_211*scratch_225 - scratch_212*scratch_226 - scratch_213*scratch_227 - scratch_214*scratch_228 - scratch_215*scratch_229 - scratch_216*scratch_230 - scratch_217*scratch_231 - scratch_218*scratch_232 - scratch_219*scratch_233 - scratch_220*scratch_234 - scratch_221*scratch_235 - scratch_222*scratch_236);
    double scratch_238 = scratch_237*(-A[308]*scratch_1 + b[14] - scratch_10*scratch_225 - scratch_108*scratch_232 - scratch_130*scratch_233 - scratch_154*scratch_234 - scratch_18*scratch_226 - scratch_180*scratch_235 - scratch_208*scratch_236 - scratch_224*scratch_9 - scratch_227*scratch_28 - scratch_228*scratch_40 - scratch_229*scratch_54 - scratch_230*scratch_70 - scratch_231*scratch_88);
    double scratch_239 = A[15]*scratch_0;
    double scratch_240 = scratch_4*(-A[22]*scratch_239 + A[37]);
    double scratch_241 = scratch_8*(-A[44]*scratch_239 + A[59] - scratch_240*scratch_7);
    double scratch_242 = scratch_17*(-A[66]*scratch_239 + A[81] - scratch_15*scratch_240 - scratch_16*scratch_241);
    double scratch_243 = scratch_27*(A[103] - A[88]*scratch_239 - scratch_24*scratch_240 - scratch_241*scratch_25 - scratch_242*scratch_26);
    double scratch_244 = scratch_39*(-A[110]*scratch_239 + A[125] - scratch_240*scratch_35 - scratch_241*scratch_36 - scratch_242*scratch_37 - scratch_243*scratch_38);
    double scratch_245 = scratch_53*(-A[132]*scratch_239 + A[147] - scratch_240*scratch_48 - scratch_241*scratch_49 - scratch_242*scratch_50 - scratch_243*scratch_51 - scratch_244*scratch_52);
    double scratch_246 = scratch_69*(-A[154]*scratch_239 + A[169] - scratch_240*scratch_63 - scratch_241*scratch_64 - scratch_242*scratch_65 - scratch_243*scratch_66 - scratch_244*scratch_67 - scratch_245*scratch_68);
    double scratch_247 = scratch_87*(-A[176]*scratch_239 + A[191] - scratch_240*scratch_80 - scratch_241*scratch_81 - scratch_242*scratch_82 - scratch_243*scratch_83 - scratch_244*scratch_84 - scratch_245*scratch_85 - scratch_246*scratch_86);
    double scratch_248 = scratch_107*(-A[198]*scratch_239 + A[213] - scratch_100*scratch_241 - scratch_101*scratch_242 - scratch_102*scratch_243 - scratch_103*scratch_244 - scratch_104*scratch_245 - scratch_105*scratch_246 - scratch_106*scratch_247 - scratch_240*scratch_99);
    double scratch_249 = scratch_129*(-A[220]*scratch_239 + A[235] - scratch_120*scratch_240 - scratch_121*scratch_241 - scratch_122*scratch_242 - scratch_123*scratch_243 - scratch_124*scratch_244 - scratch_125*scratch_245 - scratch_126*scratch_246 - scratch_127*scratch_247 - scratch_128*scratch_248);
    double scratch_250 = scratch_153*(-A[242]*scratch_239 + A[257] - scratch_143*scratch_240 - scratch_144*scratch_241 - scratch_145*scratch_242 - scratch_146*scratch_243 - scratch_147*scratch_244 - scratch_148*scratch_245 - scratch_149*scratch_246 - scratch_150*scratch_247 - scratch_151*scratch_248 - scratch_152*scratch_249);
    double scratch_251 = scratch_179*(-A[264]*scratch_239 + A[279] - scratch_168*scratch_240 - scratch_169*scratch_241 - scratch_170*scratch_242 - scratch_171*scratch_243 - scratch_172*scratch_244 - scratch_173*scratch_245 - scratch_174*scratch_246 - scratch_175*scratch_247 - scratch_176*scratch_248 - scratch_177*scratch_249 - scratch_178*scratch_250);
    double scratch_252 = scratch_207*(-A[286]*scratch_239 + A[301] - scratch_195*scratch_240 - scratch_196*scratch_241 - scratch_197*scratch_242 - scratch_198*scratch_243 - scratch_199*scratch_244 - scratch_200*scratch_245 - scratch_201*scratch_246 - scratch_202*scratch_247 - scratch_203*scratch_248 - scratch_204*scratch_249 - scratch_205*scratch_250 - scratch_206*scratch_251);
    double scratch_253 = scratch_237*(-A[308]*scratch_239 + A[323] - scratch_224*scratch_240 - scratch_225*scratch_241 - scratch_226*scratch_242 - scratch_227*scratch_243 - scratch_228*scratch_244 - scratch_229*scratch_245 - scratch_230*scratch_246 - scratch_231*scratch_247 - scratch_232*scratch_248 - scratch_233*scratch_249 - scratch_234*scratch_250 - scratch_235*scratch_251 - scratch_236*scratch_252);
    double scratch_254 = -scratch_119*scratch_249 - scratch_14*scratch_242 - scratch_142*scratch_250 - scratch_167*scratch_251 - scratch_194*scratch_252 - scratch_223*scratch_253 - scratch_23*scratch_243 + scratch_239 - scratch_240*scratch_3 - scratch_241*scratch_6 - scratch_244*scratch_34 - scratch_245*scratch_47 - scratch_246*scratch_62 - scratch_247*scratch_79 - scratch_248*scratch_98;
    double scratch_255 = -A[330]*scratch_3 + A[331];
    double scratch_256 = -A[330]*scratch_2 + A[332] - scratch_255*scratch_5;
    double scratch_257 = -A[330]*scratch_11 + A[333] - scratch_12*scratch_255 - scratch_13*scratch_256;
    double scratch_258 = -A[330]*scratch_19 + A[334] - scratch_20*scratch_255 - scratch_21*scratch_256 - scratch_22*scratch_257;
    double scratch_259 = -A[330]*scratch_29 + A[335] - scratch_255*scratch_30 - scratch_256*scratch_31 - scratch_257*scratch_32 - scratch_258*scratch_33;
    double scratch_260 = -A[330]*scratch_41 + A[336] - scratch_255*scratch_42 - scratch_256*scratch_43 - scratch_257*scratch_44 - scratch_258*scratch_45 - scratch_259*scratch_46;
    double scratch_261 = -A[330]*scratch_55 + A[337] - scratch_255*scratch_56 - scratch_256*scratch_57 - scratch_257*scratch_58 - scratch_258*scratch_59 - scratch_259*scratch_60 - scratch_260*scratch_61;
    double scratch_262 = -A[330]*scratch_71 + A[338] - scratch_255*scratch_72 - scratch_256*scratch_73 - scratch_257*scratch_74 - scratch_258*scratch_75 - scratch_259*scratch_76 - scratch_260*scratch_77 - scratch_261*scratch_78;
    double scratch_263 = -A[330]*scratch_89 + A[339] - scratch_255*scratch_90 - scratch_256*scratch_91 - scratch_257*scratch_92 - scratch_258*scratch_93 - scratch_259*scratch_94 - scratch_260*scratch_95 - scratch_261*scratch_96 - scratch_262*scratch_97;
    double scratch_264 = -A[330]*scratch_109 + A[340] - scratch_110*scratch_255 - scratch_111*scratch_256 - scratch_112*scratch_257 - scratch_113*scratch_258 - scratch_114*scratch_259 - scratch_115*scratch_260 - scratch_116*scratch_261 - scratch_117*scratch_262 - scratch_118*scratch_263;
    double scratch_265 = -A[330]*scratch_131 + A[341] - scratch_132*scratch_255 - scratch_133*scratch_256 - scratch_134*scratch_257 - scratch_135*scratch_258 - scratch_136*scratch_259 - scratch_137*scratch_260 - scratch_138*scratch_261 - scratch_139*scratch_262 - scratch_140*scratch_263 - scratch_141*scratch_264;
    double scratch_266 = -A[330]*scratch_155 + A[342] - scratch_156*scratch_255 - scratch_157*scratch_256 - scratch_158*scratch_257 - scratch_159*scratch_258 - scratch_160*scratch_259 - scratch_161*scratch_260 - scratch_162*scratch_261 - scratch_163*scratch_262 - scratch_164*scratch_263 - scratch_165*scratch_264 - scratch_166*scratch_265;
    double scratch_267 = -A[330]*scratch_181 + A[343] - scratch_182*scratch_255 - scratch_183*scratch_256 - scratch_184*scratch_257 - scratch_185*scratch_258 - scratch_186*scratch_259 - scratch_187*scratch_260 - scratch_188*scratch_261 - scratch_189*scratch_262 - scratch_190*scratch_263 - scratch_191*scratch_264 - scratch_192*scratch_265 - scratch_193*scratch_266;
    double scratch_268 = -A[330]*scratch_209 + A[344] - scratch_210*scratch_255 - scratch_211*scratch_256 - scratch_212*scratch_257 - scratch_213*scratch_258 - scratch_214*scratch_259 - scratch_215*scratch_260 - scratch_216*scratch_261 - scratch_217*scratch_262 - scratch_218*scratch_263 - scratch_219*scratch_264 - scratch_220*scratch_265 - scratch_221*scratch_266 - scratch_222*scratch_267;
    double scratch_269 = 1.0/(-A[330]*scratch_239 + A[345] - scratch_240*scratch_255 - scratch_241*scratch_256 - scratch_242*scratch_257 - scratch_243*scratch_258 - scratch_244*scratch_259 - scratch_245*scratch_260 - scratch_246*scratch_261 - scratch_247*scratch_262 - scratch_248*scratch_263 - scratch_249*scratch_264 - scratch_250*scratch_265 - scratch_251*scratch_266 - scratch_252*scratch_267 - scratch_253*scratch_268);
    double scratch_270 = scratch_269*(-A[330]*scratch_1 + b[15] - scratch_10*scratch_256 - scratch_108*scratch_263 - scratch_130*scratch_264 - scratch_154*scratch_265 - scratch_18*scratch_257 - scratch_180*scratch_266 - scratch_208*scratch_267 - scratch_238*scratch_268 - scratch_255*scratch_9 - scratch_258*scratch_28 - scratch_259*scratch_40 - scratch_260*scratch_54 - scratch_261*scratch_70 - scratch_262*scratch_88);
    double scratch_271 = A[16]*scratch_0;
    double scratch_272 = scratch_4*(-A[22]*scratch_271 + A[38]);
    double scratch_273 = scratch_8*(-A[44]*scratch_271 + A[60] - scratch_272*scratch_7);
    double scratch_274 = scratch_17*(-A[66]*scratch_271 + A[82] - scratch_15*scratch_272 - scratch_16*scratch_273);
    double scratch_275 = scratch_27*(A[104] - A[88]*scratch_271 - scratch_24*scratch_272 - scratch_25*scratch_273 - scratch_26*scratch_274);
    double scratch_276 = scratch_39*(-A[110]*scratch_271 + A[126] - scratch_272*scratch_35 - scratch_273*scratch_36 - scratch_274*scratch_37 - scratch_275*scratch_38);
    double scratch_277 = scratch_53*(-A[132]*scratch_271 + A[148] - scratch_272*scratch_48 - scratch_273*scratch_49 - scratch_274*scratch_50 - scratch_275*scratch_51 - scratch_276*scratch_52);
    double scratch_278 = scratch_69*(-A[154]*scratch_271 + A[170] - scratch_272*scratch_63 - scratch_273*scratch_64 - scratch_274*scratch_65 - scratch_275*scratch_66 - scratch_276*scratch_67 - scratch_277*scratch_68);
    double scratch_279 = scratch_87*(-A[176]*scratch_271 + A[192] - scratch_272*scratch_80 - scratch_273*scratch_81 - scratch_274*scratch_82 - scratch_275*scratch_83 - scratch_276*scratch_84 - scratch_277*scratch_85 - scratch_278*scratch_86);
    double scratch_280 = scratch_107*(-A[198]*scratch_271 + A[214] - scratch_100*scratch_273 - scratch_101*scratch_274 - scratch_102*scratch_275 - scratch_103*scratch_276 - scratch_104*scratch_277 - scratch_105*scratch_278 - scratch_106*scratch_279 - scratch_272*scratch_99);
    double scratch_281 = scratch_129*(-A[220]*scratch_271 + A[236] - scratch_120*scratch_272 - scratch_121*scratch_273 - scratch_122*scratch_274 - scratch_123*scratch_275 - scratch_124*scratch_276 - scratch_125*scratch_277 - scratch_126*scratch_278 - scratch_127*scratch_279 - scratch_128*scratch_280);
    double scratch_282 = scratch_153*(-A[242]*scratch_271 + A[258] - scratch_143*scratch_272 - scratch_144*scratch_273 - scratch_145*scratch_274 - scratch_146*scratch_275 - scratch_147*scratch_276 - scratch_148*scratch_277 - scratch_149*scratch_278 - scratch_150*scratch_279 - scratch_151*scratch_280 - scratch_152*scratch_281);
    double scratch_283 = scratch_179*(-A[264]*scratch_271 + A[280] - scratch_168*scratch_272 - scratch_169*scratch_273 - scratch_170*scratch_274 - scratch_171*scratch_275 - scratch_172*scratch_276 - scratch_173*scratch_277 - scratch_174*scratch_278 - scratch_175*scratch_279 - scratch_176*scratch_280 - scratch_177*scratch_281 - scratch_178*scratch_282);
    double scratch_284 = scratch_207*(-A[286]*scratch_271 + A[302] - scratch_195*scratch_272 - scratch_196*scratch_273 - scratch_197*scratch_274 - scratch_198*scratch_275 - scratch_199*scratch_276 - scratch_200*scratch_277 - scratch_201*scratch_278 - scratch_202*scratch_279 - scratch_203*scratch_280 - scratch_204*scratch_281 - scratch_205*scratch_282 - scratch_206*scratch_283);
    double scratch_285 = scratch_237*(-A[308]*scratch_271 + A[324] - scratch_224*scratch_272 - scratch_225*scratch_273 - scratch_226*scratch_274 - scratch_227*scratch_275 - scratch_228*scratch_276 - scratch_229*scratch_277 - scratch_230*scratch_278 - scratch_231*scratch_279 - scratch_232*scratch_280 - scratch_233*scratch_281 - scratch_234*scratch_282 - scratch_235*scratch_283 - scratch_236*scratch_284);
    double scratch_286 = scratch_269*(-A[330]*scratch_271 + A[346] - scratch_255*scratch_272 - scratch_256*scratch_273 - scratch_257*scratch_274 - scratch_258*scratch_275 - scratch_259*scratch_276 - scratch_260*scratch_277 - scratch_261*scratch_278 - scratch_262*scratch_279 - scratch_263*scratch_280 - scratch_264*scratch_281 - scratch_265*scratch_282 - scratch_266*scratch_283 - scratch_267*scratch_284 - scratch_268*scratch_285);
    double scratch_287 = -scratch_119*scratch_281 - scratch_14*scratch_274 - scratch_142*scratch_282 - scratch_167*scratch_283 - scratch_194*scratch_284 - scratch_223*scratch_285 - scratch_23*scratch_275 - scratch_254*scratch_286 + scratch_271 - scratch_272*scratch_3 - scratch_273*scratch_6 - scratch_276*scratch_34 - scratch_277*scratch_47 - scratch_278*scratch_62 - scratch_279*scratch_79 - scratch_280*scratch_98;
    double scratch_288 = -A[352]*scratch_3 + A[353];
    double scratch_289 = -A[352]*scratch_2 + A[354] - scratch_288*scratch_5;
    double scratch_290 = -A[352]*scratch_11 + A[355] - scratch_12*scratch_288 - scratch_13*scratch_289;
    double scratch_291 = -A[352]*scratch_19 + A[356] - scratch_20*scratch_288 - scratch_21*scratch_289 - scratch_22*scratch_290;
    double scratch_292 = -A[352]*scratch_29 + A[357] - scratch_288*scratch_30 - scratch_289*scratch_31 - scratch_290*scratch_32 - scratch_291*scratch_33;
    double scratch_293 = -A[352]*scratch_41 + A[358] - scratch_288*scratch_42 - scratch_289*scratch_43 - scratch_290*scratch_44 - scratch_291*scratch_45 - scratch_292*scratch_46;
    double scratch_294 = -A[352]*scratch_55 + A[359] - scratch_288*scratch_56 - scratch_289*scratch_57 - scratch_290*scratch_58 - scratch_291*scratch_59 - scratch_292*scratch_60 - scratch_293*scratch_61;
    double scratch_295 = -A[352]*scratch_71 + A[360] - scratch_288*scratch_72 - scratch_289*scratch_73 - scratch_290*scratch_74 - scratch_291*scratch_75 - scratch_292*scratch_76 - scratch_293*scratch_77 - scratch_294*scratch_78;
    double scratch_296 = -A[352]*scratch_89 + A[361] - scratch_288*scratch_90 - scratch_289*scratch_91 - scratch_290*scratch_92 - scratch_291*scratch_93 - scratch_292*scratch_94 - scratch_293*scratch_95 - scratch_294*scratch_96 - scratch_295*scratch_97;
    double scratch_297 = -A[352]*scratch_109 + A[362] - scratch_110*scratch_288 - scratch_111*scratch_289 - scratch_112*scratch_290 - scratch_113*scratch_291 - scratch_114*scratch_292 - scratch_115*scratch_293 - scratch_116*scratch_294 - scratch_117*scratch_295 - scratch_118*scratch_296;
    double scratch_298 = -A[352]*scratch_131 + A[363] - scratch_132*scratch_288 - scratch_133*scratch_289 - scratch_134*scratch_290 - scratch_135*scratch_291 - scratch_136*scratch_292 - scratch_137*scratch_293 - scratch_138*scratch_294 - scratch_139*scratch_295 - scratch_140*scratch_296 - scratch_141*scratch_297;
    double scratch_299 = -A[352]*scratch_155 + A[364] - scratch_156*scratch_288 - scratch_157*scratch_289 - scratch_158*scratch_290 - scratch_159*scratch_291 - scratch_160*scratch_292 - scratch_161*scratch_293 - scratch_162*scratch_294 - scratch_163*scratch_295 - scratch_164*scratch_296 - scratch_165*scratch_297 - scratch_166*scratch_298;
    double scratch_300 = -A[352]*scratch_181 + A[365] - scratch_182*scratch_288 - scratch_183*scratch_289 - scratch_184*scratch_290 - scratch_185*scratch_291 - scratch_186*scratch_292 - scratch_187*scratch_293 - scratch_188*scratch_294 - scratch_189*scratch_295 - scratch_190*scratch_296 - scratch_191*scratch_297 - scratch_192*scratch_298 - scratch_193*scratch_299;
    double scratch_301 = -A[352]*scratch_209 + A[366] - scratch_210*scratch_288 - scratch_211*scratch_289 - scratch_212*scratch_290 - scratch_213*scratch_291 - scratch_214*scratch_292 - scratch_215*scratch_293 - scratch_216*scratch_294 - scratch_217*scratch_295 - scratch_218*scratch_296 - scratch_219*scratch_297 - scratch_220*scratch_298 - scratch_221*scratch_299 - scratch_222*scratch_300;
    double scratch_302 = -A[352]*scratch_239 + A[367] - scratch_240*scratch_288 - scratch_241*scratch_289 - scratch_242*scratch_290 - scratch_243*scratch_291 - scratch_244*scratch_292 - scratch_245*scratch_293 - scratch_246*scratch_294 - scratch_247*scratch_295 - scratch_248*scratch_296 - scratch_249*scratch_297 - scratch_250*scratch_298 - scratch_251*scratch_299 - scratch_252*scratch_300 - scratch_253*scratch_301;
    double scratch_303 = 1.0/(-A[352]*scratch_271 + A[368] - scratch_272*scratch_288 - scratch_273*scratch_289 - scratch_274*scratch_290 - scratch_275*scratch_291 - scratch_276*scratch_292 - scratch_277*scratch_293 - scratch_278*scratch_294 - scratch_279*scratch_295 - scratch_280*scratch_296 - scratch_281*scratch_297 - scratch_282*scratch_298 - scratch_283*scratch_299 - scratch_284*scratch_300 - scratch_285*scratch_301 - scratch_286*scratch_302);
    double scratch_304 = scratch_303*(-A[352]*scratch_1 + b[16] - scratch_10*scratch_289 - scratch_108*scratch_296 - scratch_130*scratch_297 - scratch_154*scratch_298 - scratch_18*scratch_290 - scratch_180*scratch_299 - scratch_208*scratch_300 - scratch_238*scratch_301 - scratch_270*scratch_302 - scratch_28*scratch_291 - scratch_288*scratch_9 - scratch_292*scratch_40 - scratch_293*scratch_54 - scratch_294*scratch_70 - scratch_295*scratch_88);
    double scratch_305 = A[17]*scratch_0;
    double scratch_306 = scratch_4*(-A[22]*scratch_305 + A[39]);
    double scratch_307 = scratch_8*(-A[44]*scratch_305 + A[61] - scratch_306*scratch_7);
    double scratch_308 = scratch_17*(-A[66]*scratch_305 + A[83] - scratch_15*scratch_306 - scratch_16*scratch_307);
    double scratch_309 = scratch_27*(A[105] - A[88]*scratch_305 - scratch_24*scratch_306 - scratch_25*scratch_307 - scratch_26*scratch_308);
    double scratch_310 = scratch_39*(-A[110]*scratch_305 + A[127] - scratch_306*scratch_35 - scratch_307*scratch_36 - scratch_308*scratch_37 - scratch_309*scratch_38);
    double scratch_311 = scratch_53*(-A[132]*scratch_305 + A[149] - scratch_306*scratch_48 - scratch_307*scratch_49 - scratch_308*scratch_50 - scratch_309*scratch_51 - scratch_310*scratch_52);
    double scratch_312 = scratch_69*(-A[154]*scratch_305 + A[171] - scratch_306*scratch_63 - scratch_307*scratch_64 - scratch_308*scratch_65 - scratch_309*scratch_66 - scratch_310*scratch_67 - scratch_311*scratch_68);
    double scratch_313 = scratch_87*(-A[176]*scratch_305 + A[193] - scratch_306*scratch_80 - scratch_307*scratch_81 - scratch_308*scratch_82 - scratch_309*scratch_83 - scratch_310*scratch_84 - scratch_311*scratch_85 - scratch_312*scratch_86);
    double scratch_314 = scratch_107*(-A[198]*scratch_305 + A[215] - scratch_100*scratch_307 - scratch_101*scratch_308 - scratch_102*scratch_309 - scratch_103*scratch_310 - scratch_104*scratch_311 - scratch_105*scratch_312 - scratch_106*scratch_313 - scratch_306*scratch_99);
    double scratch_315 = scratch_129*(-A[220]*scratch_305 + A[237] - scratch_120*scratch_306 - scratch_121*scratch_307 - scratch_122*scratch_308 - scratch_123*scratch_309 - scratch_124*scratch_310 - scratch_125*scratch_311 - scratch_126*scratch_312 - scratch_127*scratch_313 - scratch_128*scratch_314);
    double scratch_316 = scratch_153*(-A[242]*scratch_305 + A[259] - scratch_143*scratch_306 - scratch_144*scratch_307 - scratch_145*scratch_308 - scratch_146*scratch_309 - scratch_147*scratch_310 - scratch_148*scratch_311 - scratch_149*scratch_312 - scratch_150*scratch_313 - scratch_151*scratch_314 - scratch_152*scratch_315);
    double scratch_317 = scratch_179*(-A[264]*scratch_305 + A[281] - scratch_168*scratch_306 - scratch_169*scratch_307 - scratch_170*scratch_308 - scratch_171*scratch_309 - scratch_172*scratch_310 - scratch_173*scratch_311 - scratch_174*scratch_312 - scratch_175*scratch_313 - scratch_176*scratch_314 - scratch_177*scratch_315 - scratch_178*scratch_316);
    double scratch_318 = scratch_207*(-A[286]*scratch_305 + A[303] - scratch_195*scratch_306 - scratch_196*scratch_307 - scratch_197*scratch_308 - scratch_198*scratch_309 - scratch_199*scratch_310 - scratch_200*scratch_311 - scratch_201*scratch_312 - scratch_202*scratch_313 - scratch_203*scratch_314 - scratch_204*scratch_315 - scratch_205*scratch_316 - scratch_206*scratch_317);
    double scratch_319 = scratch_237*(-A[308]*scratch_305 + A[325] - scratch_224*scratch_306 - scratch_225*scratch_307 - scratch_226*scratch_308 - scratch_227*scratch_309 - scratch_228*scratch_310 - scratch_229*scratch_311 - scratch_230*scratch_312 - scratch_231*scratch_313 - scratch_232*scratch_314 - scratch_233*scratch_315 - scratch_234*scratch_316 - scratch_235*scratch_317 - scratch_236*scratch_318);
    double scratch_320 = scratch_269*(-A[330]*scratch_305 + A[347] - scratch_255*scratch_306 - scratch_256*scratch_307 - scratch_257*scratch_308 - scratch_258*scratch_309 - scratch_259*scratch_310 - scratch_260*scratch_311 - scratch_261*scratch_312 - scratch_262*scratch_313 - scratch_263*scratch_314 - scratch_264*scratch_315 - scratch_265*scratch_316 - scratch_266*scratch_317 - scratch_267*scratch_318 - scratch_268*scratch_319);
    double scratch_321 = scratch_303*(-A[352]*scratch_305 + A[369] - scratch_288*scratch_306 - scratch_289*scratch_307 - scratch_290*scratch_308 - scratch_291*scratch_309 - scratch_292*scratch_310 - scratch_293*scratch_311 - scratch_294*scratch_312 - scratch_295*scratch_313 - scratch_296*scratch_314 - scratch_297*scratch_315 - scratch_298*scratch_316 - scratch_299*scratch_317 - scratch_300*scratch_318 - scratch_301*scratch_319 - scratch_302*scratch_320);
    double scratch_322 = -scratch_119*scratch_315 - scratch_14*scratch_308 - scratch_142*scratch_316 - scratch_167*scratch_317 - scratch_194*scratch_318 - scratch_223*scratch_319 - scratch_23*scratch_309 - scratch_254*scratch_320 - scratch_287*scratch_321 - scratch_3*scratch_306 + scratch_305 - scratch_307*scratch_6 - scratch_310*scratch_34 - scratch_311*scratch_47 - scratch_312*scratch_62 - scratch_313*scratch_79 - scratch_314*scratch_98;
    double scratch_323 = -A[374]*scratch_3 + A[375];
    double scratch_324 = -A[374]*scratch_2 + A[376] - scratch_323*scratch_5;
    double scratch_325 = -A[374]*scratch_11 + A[377] - scratch_12*scratch_323 - scratch_13*scratch_324;
    double scratch_326 = -A[374]*scratch_19 + A[378] - scratch_20*scratch_323 - scratch_21*scratch_324 - scratch_22*scratch_325;
    double scratch_327 = -A[374]*scratch_29 + A[379] - scratch_30*scratch_323 - scratch_31*scratch_324 - scratch_32*scratch_325 - scratch_326*scratch_33;
    double scratch_328 = -A[374]*scratch_41 + A[380] - scratch_323*scratch_42 - scratch_324*scratch_43 - scratch_325*scratch_44 - scratch_326*scratch_45 - scratch_327*scratch_46;
    double scratch_329 = -A[374]*scratch_55 + A[381] - scratch_323*scratch_56 - scratch_324*scratch_57 - scratch_325*scratch_58 - scratch_326*scratch_59 - scratch_327*scratch_60 - scratch_328*scratch_61;
    double scratch_330 = -A[374]*scratch_71 + A[382] - scratch_323*scratch_72 - scratch_324*scratch_73 - scratch_325*scratch_74 - scratch_326*scratch_75 - scratch_327*scratch_76 - scratch_328*scratch_77 - scratch_329*scratch_78;
    double scratch_331 = -A[374]*scratch_89 + A[383] - scratch_323*scratch_90 - scratch_324*scratch_91 - scratch_325*scratch_92 - scratch_326*scratch_93 - scratch_327*scratch_94 - scratch_328*scratch_95 - scratch_329*scratch_96 - scratch_330*scratch_97;
    double scratch_332 = -A[374]*scratch_109 + A[384] - scratch_110*scratch_323 - scratch_111*scratch_324 - scratch_112*scratch_325 - scratch_113*scratch_326 - scratch_114*scratch_327 - scratch_115*scratch_328 - scratch_116*scratch_329 - scratch_117*scratch_330 - scratch_118*scratch_331;
    double scratch_333 = -A[374]*scratch_131 + A[385] - scratch_132*scratch_323 - scratch_133*scratch_324 - scratch_134*scratch_325 - scratch_135*scratch_326 - scratch_136*scratch_327 - scratch_137*scratch_328 - scratch_138*scratch_329 - scratch_139*scratch_330 - scratch_140*scratch_331 - scratch_141*scratch_332;
    double scratch_334 = -A[374]*scratch_155 + A[386] - scratch_156*scratch_323 - scratch_157*scratch_324 - scratch_158*scratch_325 - scratch_159*scratch_326 - scratch_160*scratch_327 - scratch_161*scratch_328 - scratch_162*scratch_329 - scratch_163*scratch_330 - scratch_164*scratch_331 - scratch_165*scratch_332 - scratch_166*scratch_333;
    double scratch_335 = -A[374]*scratch_181 + A[387] - scratch_182*scratch_323 - scratch_183*scratch_324 - scratch_184*scratch_325 - scratch_185*scratch_326 - scratch_186*scratch_327 - scratch_187*scratch_328 - scratch_188*scratch_329 - scratch_189*scratch_330 - scratch_190*scratch_331 - scratch_191*scratch_332 - scratch_192*scratch_333 - scratch_193*scratch_334;
    double scratch_336 = -A[374]*scratch_209 + A[388] - scratch_210*scratch_323 - scratch_211*scratch_324 - scratch_212*scratch_325 - scratch_213*scratch_326 - scratch_214*scratch_327 - scratch_215*scratch_328 - scratch_216*scratch_329 - scratch_217*scratch_330 - scratch_218*scratch_331 - scratch_219*scratch_332 - scratch_220*scratch_333 - scratch_221*scratch_334 - scratch_222*scratch_335;
    double scratch_337 = -A[374]*scratch_239 + A[389] - scratch_240*scratch_323 - scratch_241*scratch_324 - scratch_242*scratch_325 - scratch_243*scratch_326 - scratch_244*scratch_327 - scratch_245*scratch_328 - scratch_246*scratch_329 - scratch_247*scratch_330 - scratch_248*scratch_331 - scratch_249*scratch_332 - scratch_250*scratch_333 - scratch_251*scratch_334 - scratch_252*scratch_335 - scratch_253*scratch_336;
    double scratch_338 = -A[374]*scratch_271 + A[390] - scratch_272*scratch_323 - scratch_273*scratch_324 - scratch_274*scratch_325 - scratch_275*scratch_326 - scratch_276*scratch_327 - scratch_277*scratch_328 - scratch_278*scratch_329 - scratch_279*scratch_330 - scratch_280*scratch_331 - scratch_281*scratch_332 - scratch_282*scratch_333 - scratch_283*scratch_334 - scratch_284*scratch_335 - scratch_285*scratch_336 - scratch_286*scratch_337;
    double scratch_339 = 1.0/(-A[374]*scratch_305 + A[391] - scratch_306*scratch_323 - scratch_307*scratch_324 - scratch_308*scratch_325 - scratch_309*scratch_326 - scratch_310*scratch_327 - scratch_311*scratch_328 - scratch_312*scratch_329 - scratch_313*scratch_330 - scratch_314*scratch_331 - scratch_315*scratch_332 - scratch_316*scratch_333 - scratch_317*scratch_334 - scratch_318*scratch_335 - scratch_319*scratch_336 - scratch_320*scratch_337 - scratch_321*scratch_338);
    double scratch_340 = scratch_339*(-A[374]*scratch_1 + b[17] - scratch_10*scratch_324 - scratch_108*scratch_331 - scratch_130*scratch_332 - scratch_154*scratch_333 - scratch_18*scratch_325 - scratch_180*scratch_334 - scratch_208*scratch_335 - scratch_238*scratch_336 - scratch_270*scratch_337 - scratch_28*scratch_326 - scratch_304*scratch_338 - scratch_323*scratch_9 - scratch_327*scratch_40 - scratch_328*scratch_54 - scratch_329*scratch_70 - scratch_330*scratch_88);
    double scratch_341 = A[18]*scratch_0;
    double scratch_342 = scratch_4*(-A[22]*scratch_341 + A[40]);
    double scratch_343 = scratch_8*(-A[44]*scratch_341 + A[62] - scratch_342*scratch_7);
    double scratch_344 = scratch_17*(-A[66]*scratch_341 + A[84] - scratch_15*scratch_342 - scratch_16*scratch_343);
    double scratch_345 = scratch_27*(A[106] - A[88]*scratch_341 - scratch_24*scratch_342 - scratch_25*scratch_343 - scratch_26*scratch_344);
    double scratch_346 = scratch_39*(-A[110]*scratch_341 + A[128] - scratch_342*scratch_35 - scratch_343*scratch_36 - scratch_344*scratch_37 - scratch_345*scratch_38);
    double scratch_347 = scratch_53*(-A[132]*scratch_341 + A[150] - scratch_342*scratch_48 - scratch_343*scratch_49 - scratch_344*scratch_50 - scratch_345*scratch_51 - scratch_346*scratch_52);
    double scratch_348 = scratch_69*(-A[154]*scratch_341 + A[172] - scratch_342*scratch_63 - scratch_343*scratch_64 - scratch_344*scratch_65 - scratch_345*scratch_66 - scratch_346*scratch_67 - scratch_347*scratch_68);
    double scratch_349 = scratch_87*(-A[176]*scratch_341 + A[194] - scratch_342*scratch_80 - scratch_343*scratch_81 - scratch_344*scratch_82 - scratch_345*scratch_83 - scratch_346*scratch_84 - scratch_347*scratch_85 - scratch_348*scratch_86);
    double scratch_350 = scratch_107*(-A[198]*scratch_341 + A[216] - scratch_100*scratch_343 - scratch_101*scratch_344 - scratch_102*scratch_345 - scratch_103*scratch_346 - scratch_104*scratch_347 - scratch_105*scratch_348 - scratch_106*scratch_349 - scratch_342*scratch_99);
    double scratch_351 = scratch_129*(-A[220]*scratch_341 + A[238] - scratch_120*scratch_342 - scratch_121*scratch_343 - scratch_122*scratch_344 - scratch_123*scratch_345 - scratch_124*scratch_346 - scratch_125*scratch_347 - scratch_126*scratch_348 - scratch_127*scratch_349 - scratch_128*scratch_350);
    double scratch_352 = scratch_153*(-A[242]*scratch_341 + A[260] - scratch_143*scratch_342 - scratch_144*scratch_343 - scratch_145*scratch_344 - scratch_146*scratch_345 - scratch_147*scratch_346 - scratch_148*scratch_347 - scratch_149*scratch_348 - scratch_150*scratch_349 - scratch_151*scratch_350 - scratch_152*scratch_351);
    double scratch_353 = scratch_179*(-A[264]*scratch_341 + A[282] - scratch_168*scratch_342 - scratch_169*scratch_343 - scratch_170*scratch_344 - scratch_171*scratch_345 - scratch_172*scratch_346 - scratch_173*scratch_347 - scratch_174*scratch_348 - scratch_175*scratch_349 - scratch_176*scratch_350 - scratch_177*scratch_351 - scratch_178*scratch_352);
    double scratch_354 = scratch_207*(-A[286]*scratch_341 + A[304] - scratch_195*scratch_342 - scratch_196*scratch_343 - scratch_197*scratch_344 - scratch_198*scratch_345 - scratch_199*scratch_346 - scratch_200*scratch_347 - scratch_201*scratch_348 - scratch_202*scratch_349 - scratch_203*scratch_350 - scratch_204*scratch_351 - scratch_205*scratch_352 - scratch_206*scratch_353);
    double scratch_355 = scratch_237*(-A[308]*scratch_341 + A[326] - scratch_224*scratch_342 - scratch_225*scratch_343 - scratch_226*scratch_344 - scratch_227*scratch_345 - scratch_228*scratch_346 - scratch_229*scratch_347 - scratch_230*scratch_348 - scratch_231*scratch_349 - scratch_232*scratch_350 - scratch_233*scratch_351 - scratch_234*scratch_352 - scratch_235*scratch_353 - scratch_236*scratch_354);
    double scratch_356 = scratch_269*(-A[330]*scratch_341 + A[348] - scratch_255*scratch_342 - scratch_256*scratch_343 - scratch_257*scratch_344 - scratch_258*scratch_345 - scratch_259*scratch_346 - scratch_260*scratch_347 - scratch_261*scratch_348 - scratch_262*scratch_349 - scratch_263*scratch_350 - scratch_264*scratch_351 - scratch_265*scratch_352 - scratch_266*scratch_353 - scratch_267*scratch_354 - scratch_268*scratch_355);
    double scratch_357 = scratch_303*(-A[352]*scratch_341 + A[370] - scratch_288*scratch_342 - scratch_289*scratch_343 - scratch_290*scratch_344 - scratch_291*scratch_345 - scratch_292*scratch_346 - scratch_293*scratch_347 - scratch_294*scratch_348 - scratch_295*scratch_349 - scratch_296*scratch_350 - scratch_297*scratch_351 - scratch_298*scratch_352 - scratch_299*scratch_353 - scratch_300*scratch_354 - scratch_301*scratch_355 - scratch_302*scratch_356);
    double scratch_358 = scratch_339*(-A[374]*scratch_341 + A[392] - scratch_323*scratch_342 - scratch_324*scratch_343 - scratch_325*scratch_344 - scratch_326*scratch_345 - scratch_327*scratch_346 - scratch_328*scratch_347 - scratch_329*scratch_348 - scratch_330*scratch_349 - scratch_331*scratch_350 - scratch_332*scratch_351 - scratch_333*scratch_352 - scratch_334*scratch_353 - scratch_335*scratch_354 - scratch_336*scratch_355 - scratch_337*scratch_356 - scratch_338*scratch_357);
    double scratch_359 = -scratch_119*scratch_351 - scratch_14*scratch_344 - scratch_142*scratch_352 - scratch_167*scratch_353 - scratch_194*scratch_354 - scratch_223*scratch_355 - scratch_23*scratch_345 - scratch_254*scratch_356 - scratch_287*scratch_357 - scratch_3*scratch_342 - scratch_322*scratch_358 - scratch_34*scratch_346 + scratch_341 - scratch_343*scratch_6 - scratch_347*scratch_47 - scratch_348*scratch_62 - scratch_349*scratch_79 - scratch_350*scratch_98;
    double scratch_360 = -A[396]*scratch_3 + A[397];
    double scratch_361 = -A[396]*scratch_2 + A[398] - scratch_360*scratch_5;
    double scratch_362 = -A[396]*scratch_11 + A[399] - scratch_12*scratch_360 - scratch_13*scratch_361;
    double scratch_363 = -A[396]*scratch_19 + A[400] - scratch_20*scratch_360 - scratch_21*scratch_361 - scratch_22*scratch_362;
    double scratch_364 = -A[396]*scratch_29 + A[401] - scratch_30*scratch_360 - scratch_31*scratch_361 - scratch_32*scratch_362 - scratch_33*scratch_363;
    double scratch_365 = -A[396]*scratch_41 + A[402] - scratch_360*scratch_42 - scratch_361*scratch_43 - scratch_362*scratch_44 - scratch_363*scratch_45 - scratch_364*scratch_46;
    double scratch_366 = -A[396]*scratch_55 + A[403] - scratch_360*scratch_56 - scratch_361*scratch_57 - scratch_362*scratch_58 - scratch_363*scratch_59 - scratch_364*scratch_60 - scratch_365*scratch_61;
    double scratch_367 = -A[396]*scratch_71 + A[404] - scratch_360*scratch_72 - scratch_361*scratch_73 - scratch_362*scratch_74 - scratch_363*scratch_75 - scratch_364*scratch_76 - scratch_365*scratch_77 - scratch_366*scratch_78;
    double scratch_368 = -A[396]*scratch_89 + A[405] - scratch_360*scratch_90 - scratch_361*scratch_91 - scratch_362*scratch_92 - scratch_363*scratch_93 - scratch_364*scratch_94 - scratch_365*scratch_95 - scratch_366*scratch_96 - scratch_367*scratch_97;
    double scratch_369 = -A[396]*scratch_109 + A[406] - scratch_110*scratch_360 - scratch_111*scratch_361 - scratch_112*scratch_362 - scratch_113*scratch_363 - scratch_114*scratch_364 - scratch_115*scratch_365 - scratch_116*scratch_366 - scratch_117*scratch_367 - scratch_118*scratch_368;
    double scratch_370 = -A[396]*scratch_131 + A[407] - scratch_132*scratch_360 - scratch_133*scratch_361 - scratch_134*scratch_362 - scratch_135*scratch_363 - scratch_136*scratch_364 - scratch_137*scratch_365 - scratch_138*scratch_366 - scratch_139*scratch_367 - scratch_140*scratch_368 - scratch_141*scratch_369;
    double scratch_371 = -A[396]*scratch_155 + A[408] - scratch_156*scratch_360 - scratch_157*scratch_361 - scratch_158*scratch_362 - scratch_159*scratch_363 - scratch_160*scratch_364 - scratch_161*scratch_365 - scratch_162*scratch_366 - scratch_163*scratch_367 - scratch_164*scratch_368 - scratch_165*scratch_369 - scratch_166*scratch_370;
    double scratch_372 = -A[396]*scratch_181 + A[409] - scratch_182*scratch_360 - scratch_183*scratch_361 - scratch_184*scratch_362 - scratch_185*scratch_363 - scratch_186*scratch_364 - scratch_187*scratch_365 - scratch_188*scratch_366 - scratch_189*scratch_367 - scratch_190*scratch_368 - scratch_191*scratch_369 - scratch_192*scratch_370 - scratch_193*scratch_371;
    double scratch_373 = -A[396]*scratch_209 + A[410] - scratch_210*scratch_360 - scratch_211*scratch_361 - scratch_212*scratch_362 - scratch_213*scratch_363 - scratch_214*scratch_364 - scratch_215*scratch_365 - scratch_216*scratch_366 - scratch_217*scratch_367 - scratch_218*scratch_368 - scratch_219*scratch_369 - scratch_220*scratch_370 - scratch_221*scratch_371 - scratch_222*scratch_372;
    double scratch_374 = -A[396]*scratch_239 + A[411] - scratch_240*scratch_360 - scratch_241*scratch_361 - scratch_242*scratch_362 - scratch_243*scratch_363 - scratch_244*scratch_364 - scratch_245*scratch_365 - scratch_246*scratch_366 - scratch_247*scratch_367 - scratch_248*scratch_368 - scratch_249*scratch_369 - scratch_250*scratch_370 - scratch_251*scratch_371 - scratch_252*scratch_372 - scratch_253*scratch_373;
    double scratch_375 = -A[396]*scratch_271 + A[412] - scratch_272*scratch_360 - scratch_273*scratch_361 - scratch_274*scratch_362 - scratch_275*scratch_363 - scratch_276*scratch_364 - scratch_277*scratch_365 - scratch_278*scratch_366 - scratch_279*scratch_367 - scratch_280*scratch_368 - scratch_281*scratch_369 - scratch_282*scratch_370 - scratch_283*scratch_371 - scratch_284*scratch_372 - scratch_285*scratch_373 - scratch_286*scratch_374;
    double scratch_376 = -A[396]*scratch_305 + A[413] - scratch_306*scratch_360 - scratch_307*scratch_361 - scratch_308*scratch_362 - scratch_309*scratch_363 - scratch_310*scratch_364 - scratch_311*scratch_365 - scratch_312*scratch_366 - scratch_313*scratch_367 - scratch_314*scratch_368 - scratch_315*scratch_369 - scratch_316*scratch_370 - scratch_317*scratch_371 - scratch_318*scratch_372 - scratch_319*scratch_373 - scratch_320*scratch_374 - scratch_321*scratch_375;
    double scratch_377 = 1.0/(-A[396]*scratch_341 + A[414] - scratch_342*scratch_360 - scratch_343*scratch_361 - scratch_344*scratch_362 - scratch_345*scratch_363 - scratch_346*scratch_364 - scratch_347*scratch_365 - scratch_348*scratch_366 - scratch_349*scratch_367 - scratch_350*scratch_368 - scratch_351*scratch_369 - scratch_352*scratch_370 - scratch_353*scratch_371 - scratch_354*scratch_372 - scratch_355*scratch_373 - scratch_356*scratch_374 - scratch_357*scratch_375 - scratch_358*scratch_376);
    double scratch_378 = scratch_377*(-A[396]*scratch_1 + b[18] - scratch_10*scratch_361 - scratch_108*scratch_368 - scratch_130*scratch_369 - scratch_154*scratch_370 - scratch_18*scratch_362 - scratch_180*scratch_371 - scratch_208*scratch_372 - scratch_238*scratch_373 - scratch_270*scratch_374 - scratch_28*scratch_363 - scratch_304*scratch_375 - scratch_340*scratch_376 - scratch_360*scratch_9 - scratch_364*scratch_40 - scratch_365*scratch_54 - scratch_366*scratch_70 - scratch_367*scratch_88);
    double scratch_379 = A[19]*scratch_0;
    double scratch_380 = scratch_4*(-A[22]*scratch_379 + A[41]);
    double scratch_381 = scratch_8*(-A[44]*scratch_379 + A[63] - scratch_380*scratch_7);
    double scratch_382 = scratch_17*(-A[66]*scratch_379 + A[85] - scratch_15*scratch_380 - scratch_16*scratch_381);
    double scratch_383 = scratch_27*(A[107] - A[88]*scratch_379 - scratch_24*scratch_380 - scratch_25*scratch_381 - scratch_26*scratch_382);
    double scratch_384 = scratch_39*(-A[110]*scratch_379 + A[129] - scratch_35*scratch_380 - scratch_36*scratch_381 - scratch_37*scratch_382 - scratch_38*scratch_383);
    double scratch_385 = scratch_53*(-A[132]*scratch_379 + A[151] - scratch_380*scratch_48 - scratch_381*scratch_49 - scratch_382*scratch_50 - scratch_383*scratch_51 - scratch_384*scratch_52);
    double scratch_386 = scratch_69*(-A[154]*scratch_379 + A[173] - scratch_380*scratch_63 - scratch_381*scratch_64 - scratch_382*scratch_65 - scratch_383*scratch_66 - scratch_384*scratch_67 - scratch_385*scratch_68);
    double scratch_387 = scratch_87*(-A[176]*scratch_379 + A[195] - scratch_380*scratch_80 - scratch_381*scratch_81 - scratch_382*scratch_82 - scratch_383*scratch_83 - scratch_384*scratch_84 - scratch_385*scratch_85 - scratch_386*scratch_86);
    double scratch_388 = scratch_107*(-A[198]*scratch_379 + A[217] - scratch_100*scratch_381 - scratch_101*scratch_382 - scratch_102*scratch_383 - scratch_103*scratch_384 - scratch_104*scratch_385 - scratch_105*scratch_386 - scratch_106*scratch_387 - scratch_380*scratch_99);
    double scratch_389 = scratch_129*(-A[220]*scratch_379 + A[239] - scratch_120*scratch_380 - scratch_121*scratch_381 - scratch_122*scratch_382 - scratch_123*scratch_383 - scratch_124*scratch_384 - scratch_125*scratch_385 - scratch_126*scratch_386 - scratch_127*scratch_387 - scratch_128*scratch_388);
    double scratch_390 = scratch_153*(-A[242]*scratch_379 + A[261] - scratch_143*scratch_380 - scratch_144*scratch_381 - scratch_145*scratch_382 - scratch_146*scratch_383 - scratch_147*scratch_384 - scratch_148*scratch_385 - scratch_149*scratch_386 - scratch_150*scratch_387 - scratch_151*scratch_388 - scratch_152*scratch_389);
    double scratch_391 = scratch_179*(-A[264]*scratch_379 + A[283] - scratch_168*scratch_380 - scratch_169*scratch_381 - scratch_170*scratch_382 - scratch_171*scratch_383 - scratch_172*scratch_384 - scratch_173*scratch_385 - scratch_174*scratch_386 - scratch_175*scratch_387 - scratch_176*scratch_388 - scratch_177*scratch_389 - scratch_178*scratch_390);
    double scratch_392 = scratch_207*(-A[286]*scratch_379 + A[305] - scratch_195*scratch_380 - scratch_196*scratch_381 - scratch_197*scratch_382 - scratch_198*scratch_383 - scratch_199*scratch_384 - scratch_200*scratch_385 - scratch_201*scratch_386 - scratch_202*scratch_387 - scratch_203*scratch_388 - scratch_204*scratch_389 - scratch_205*scratch_390 - scratch_206*scratch_391);
    double scratch_393 = scratch_237*(-A[308]*scratch_379 + A[327] - scratch_224*scratch_380 - scratch_225*scratch_381 - scratch_226*scratch_382 - scratch_227*scratch_383 - scratch_228*scratch_384 - scratch_229*scratch_385 - scratch_230*scratch_386 - scratch_231*scratch_387 - scratch_232*scratch_388 - scratch_233*scratch_389 - scratch_234*scratch_390 - scratch_235*scratch_391 - scratch_236*scratch_392);
    double scratch_394 = scratch_269*(-A[330]*scratch_379 + A[349] - scratch_255*scratch_380 - scratch_256*scratch_381 - scratch_257*scratch_382 - scratch_258*scratch_383 - scratch_259*scratch_384 - scratch_260*scratch_385 - scratch_261*scratch_386 - scratch_262*scratch_387 - scratch_263*scratch_388 - scratch_264*scratch_389 - scratch_265*scratch_390 - scratch_266*scratch_391 - scratch_267*scratch_392 - scratch_268*scratch_393);
    double scratch_395 = scratch_303*(-A[352]*scratch_379 + A[371] - scratch_288*scratch_380 - scratch_289*scratch_381 - scratch_290*scratch_382 - scratch_291*scratch_383 - scratch_292*scratch_384 - scratch_293*scratch_385 - scratch_294*scratch_386 - scratch_295*scratch_387 - scratch_296*scratch_388 - scratch_297*scratch_389 - scratch_298*scratch_390 - scratch_299*scratch_391 - scratch_300*scratch_392 - scratch_301*scratch_393 - scratch_302*scratch_394);
    double scratch_396 = scratch_339*(-A[374]*scratch_379 + A[393] - scratch_323*scratch_380 - scratch_324*scratch_381 - scratch_325*scratch_382 - scratch_326*scratch_383 - scratch_327*scratch_384 - scratch_328*scratch_385 - scratch_329*scratch_386 - scratch_330*scratch_387 - scratch_331*scratch_388 - scratch_332*scratch_389 - scratch_333*scratch_390 - scratch_334*scratch_391 - scratch_335*scratch_392 - scratch_336*scratch_393 - scratch_337*scratch_394 - scratch_338*scratch_395);
    double scratch_397 = scratch_377*(-A[396]*scratch_379 + A[415] - scratch_360*scratch_380 - scratch_361*scratch_381 - scratch_362*scratch_382 - scratch_363*scratch_383 - scratch_364*scratch_384 - scratch_365*scratch_385 - scratch_366*scratch_386 - scratch_367*scratch_387 - scratch_368*scratch_388 - scratch_369*scratch_389 - scratch_370*scratch_390 - scratch_371*scratch_391 - scratch_372*scratch_392 - scratch_373*scratch_393 - scratch_374*scratch_394 - scratch_375*scratch_395 - scratch_376*scratch_396);
    double scratch_398 = -scratch_119*scratch_389 - scratch_14*scratch_382 - scratch_142*scratch_390 - scratch_167*scratch_391 - scratch_194*scratch_392 - scratch_223*scratch_393 - scratch_23*scratch_383 - scratch_254*scratch_394 - scratch_287*scratch_395 - scratch_3*scratch_380 - scratch_322*scratch_396 - scratch_34*scratch_384 - scratch_359*scratch_397 + scratch_379 - scratch_381*scratch_6 - scratch_385*scratch_47 - scratch_386*scratch_62 - scratch_387*scratch_79 - scratch_388*scratch_98;
    double scratch_399 = -A[418]*scratch_3 + A[419];
    double scratch_400 = -A[418]*scratch_2 + A[420] - scratch_399*scratch_5;
    double scratch_401 = -A[418]*scratch_11 + A[421] - scratch_12*scratch_399 - scratch_13*scratch_400;
    double scratch_402 = -A[418]*scratch_19 + A[422] - scratch_20*scratch_399 - scratch_21*scratch_400 - scratch_22*scratch_401;
    double scratch_403 = -A[418]*scratch_29 + A[423] - scratch_30*scratch_399 - scratch_31*scratch_400 - scratch_32*scratch_401 - scratch_33*scratch_402;
    double scratch_404 = -A[418]*scratch_41 + A[424] - scratch_399*scratch_42 - scratch_400*scratch_43 - scratch_401*scratch_44 - scratch_402*scratch_45 - scratch_403*scratch_46;
    double scratch_405 = -A[418]*scratch_55 + A[425] - scratch_399*scratch_56 - scratch_400*scratch_57 - scratch_401*scratch_58 - scratch_402*scratch_59 - scratch_403*scratch_60 - scratch_404*scratch_61;
    double scratch_406 = -A[418]*scratch_71 + A[426] - scratch_399*scratch_72 - scratch_400*scratch_73 - scratch_401*scratch_74 - scratch_402*scratch_75 - scratch_403*scratch_76 - scratch_404*scratch_77 - scratch_405*scratch_78;
    double scratch_407 = -A[418]*scratch_89 + A[427] - scratch_399*scratch_90 - scratch_400*scratch_91 - scratch_401*scratch_92 - scratch_402*scratch_93 - scratch_403*scratch_94 - scratch_404*scratch_95 - scratch_405*scratch_96 - scratch_406*scratch_97;
    double scratch_408 = -A[418]*scratch_109 + A[428] - scratch_110*scratch_399 - scratch_111*scratch_400 - scratch_112*scratch_401 - scratch_113*scratch_402 - scratch_114*scratch_403 - scratch_115*scratch_404 - scratch_116*scratch_405 - scratch_117*scratch_406 - scratch_118*scratch_407;
    double scratch_409 = -A[418]*scratch_131 + A[429] - scratch_132*scratch_399 - scratch_133*scratch_400 - scratch_134*scratch_401 - scratch_135*scratch_402 - scratch_136*scratch_403 - scratch_137*scratch_404 - scratch_138*scratch_405 - scratch_139*scratch_406 - scratch_140*scratch_407 - scratch_141*scratch_408;
    double scratch_410 = -A[418]*scratch_155 + A[430] - scratch_156*scratch_399 - scratch_157*scratch_400 - scratch_158*scratch_401 - scratch_159*scratch_402 - scratch_160*scratch_403 - scratch_161*scratch_404 - scratch_162*scratch_405 - scratch_163*scratch_406 - scratch_164*scratch_407 - scratch_165*scratch_408 - scratch_166*scratch_409;
    double scratch_411 = -A[418]*scratch_181 + A[431] - scratch_182*scratch_399 - scratch_183*scratch_400 - scratch_184*scratch_401 - scratch_185*scratch_402 - scratch_186*scratch_403 - scratch_187*scratch_404 - scratch_188*scratch_405 - scratch_189*scratch_406 - scratch_190*scratch_407 - scratch_191*scratch_408 - scratch_192*scratch_409 - scratch_193*scratch_410;
    double scratch_412 = -A[418]*scratch_209 + A[432] - scratch_210*scratch_399 - scratch_211*scratch_400 - scratch_212*scratch_401 - scratch_213*scratch_402 - scratch_214*scratch_403 - scratch_215*scratch_404 - scratch_216*scratch_405 - scratch_217*scratch_406 - scratch_218*scratch_407 - scratch_219*scratch_408 - scratch_220*scratch_409 - scratch_221*scratch_410 - scratch_222*scratch_411;
    double scratch_413 = -A[418]*scratch_239 + A[433] - scratch_240*scratch_399 - scratch_241*scratch_400 - scratch_242*scratch_401 - scratch_243*scratch_402 - scratch_244*scratch_403 - scratch_245*scratch_404 - scratch_246*scratch_405 - scratch_247*scratch_406 - scratch_248*scratch_407 - scratch_249*scratch_408 - scratch_250*scratch_409 - scratch_251*scratch_410 - scratch_252*scratch_411 - scratch_253*scratch_412;
    double scratch_414 = -A[418]*scratch_271 + A[434] - scratch_272*scratch_399 - scratch_273*scratch_400 - scratch_274*scratch_401 - scratch_275*scratch_402 - scratch_276*scratch_403 - scratch_277*scratch_404 - scratch_278*scratch_405 - scratch_279*scratch_406 - scratch_280*scratch_407 - scratch_281*scratch_408 - scratch_282*scratch_409 - scratch_283*scratch_410 - scratch_284*scratch_411 - scratch_285*scratch_412 - scratch_286*scratch_413;
    double scratch_415 = -A[418]*scratch_305 + A[435] - scratch_306*scratch_399 - scratch_307*scratch_400 - scratch_308*scratch_401 - scratch_309*scratch_402 - scratch_310*scratch_403 - scratch_311*scratch_404 - scratch_312*scratch_405 - scratch_313*scratch_406 - scratch_314*scratch_407 - scratch_315*scratch_408 - scratch_316*scratch_409 - scratch_317*scratch_410 - scratch_318*scratch_411 - scratch_319*scratch_412 - scratch_320*scratch_413 - scratch_321*scratch_414;
    double scratch_416 = -A[418]*scratch_341 + A[436] - scratch_342*scratch_399 - scratch_343*scratch_400 - scratch_344*scratch_401 - scratch_345*scratch_402 - scratch_346*scratch_403 - scratch_347*scratch_404 - scratch_348*scratch_405 - scratch_349*scratch_406 - scratch_350*scratch_407 - scratch_351*scratch_408 - scratch_352*scratch_409 - scratch_353*scratch_410 - scratch_354*scratch_411 - scratch_355*scratch_412 - scratch_356*scratch_413 - scratch_357*scratch_414 - scratch_358*scratch_415;
    double scratch_417 = 1.0/(-A[418]*scratch_379 + A[437] - scratch_380*scratch_399 - scratch_381*scratch_400 - scratch_382*scratch_401 - scratch_383*scratch_402 - scratch_384*scratch_403 - scratch_385*scratch_404 - scratch_386*scratch_405 - scratch_387*scratch_406 - scratch_388*scratch_407 - scratch_389*scratch_408 - scratch_390*scratch_409 - scratch_391*scratch_410 - scratch_392*scratch_411 - scratch_393*scratch_412 - scratch_394*scratch_413 - scratch_395*scratch_414 - scratch_396*scratch_415 - scratch_397*scratch_416);
    double scratch_418 = scratch_417*(-A[418]*scratch_1 + b[19] - scratch_10*scratch_400 - scratch_108*scratch_407 - scratch_130*scratch_408 - scratch_154*scratch_409 - scratch_18*scratch_401 - scratch_180*scratch_410 - scratch_208*scratch_411 - scratch_238*scratch_412 - scratch_270*scratch_413 - scratch_28*scratch_402 - scratch_304*scratch_414 - scratch_340*scratch_415 - scratch_378*scratch_416 - scratch_399*scratch_9 - scratch_40*scratch_403 - scratch_404*scratch_54 - scratch_405*scratch_70 - scratch_406*scratch_88);
    double scratch_419 = A[20]*scratch_0;
    double scratch_420 = scratch_4*(-A[22]*scratch_419 + A[42]);
    double scratch_421 = scratch_8*(-A[44]*scratch_419 + A[64] - scratch_420*scratch_7);
    double scratch_422 = scratch_17*(-A[66]*scratch_419 + A[86] - scratch_15*scratch_420 - scratch_16*scratch_421);
    double scratch_423 = scratch_27*(A[108] - A[88]*scratch_419 - scratch_24*scratch_420 - scratch_25*scratch_421 - scratch_26*scratch_422);
    double scratch_424 = scratch_39*(-A[110]*scratch_419 + A[130] - scratch_35*scratch_420 - scratch_36*scratch_421 - scratch_37*scratch_422 - scratch_38*scratch_423);
    double scratch_425 = scratch_53*(-A[132]*scratch_419 + A[152] - scratch_420*scratch_48 - scratch_421*scratch_49 - scratch_422*scratch_50 - scratch_423*scratch_51 - scratch_424*scratch_52);
    double scratch_426 = scratch_69*(-A[154]*scratch_419 + A[174] - scratch_420*scratch_63 - scratch_421*scratch_64 - scratch_422*scratch_65 - scratch_423*scratch_66 - scratch_424*scratch_67 - scratch_425*scratch_68);
    double scratch_427 = scratch_87*(-A[176]*scratch_419 + A[196] - scratch_420*scratch_80 - scratch_421*scratch_81 - scratch_422*scratch_82 - scratch_423*scratch_83 - scratch_424*scratch_84 - scratch_425*scratch_85 - scratch_426*scratch_86);
    double scratch_428 = scratch_107*(-A[198]*scratch_419 + A[218] - scratch_100*scratch_421 - scratch_101*scratch_422 - scratch_102*scratch_423 - scratch_103*scratch_424 - scratch_104*scratch_425 - scratch_105*scratch_426 - scratch_106*scratch_427 - scratch_420*scratch_99);
    double scratch_429 = scratch_129*(-A[220]*scratch_419 + A[240] - scratch_120*scratch_420 - scratch_121*scratch_421 - scratch_122*scratch_422 - scratch_123*scratch_423 - scratch_124*scratch_424 - scratch_125*scratch_425 - scratch_126*scratch_426 - scratch_127*scratch_427 - scratch_128*scratch_428);
    double scratch_430 = scratch_153*(-A[242]*scratch_419 + A[262] - scratch_143*scratch_420 - scratch_144*scratch_421 - scratch_145*scratch_422 - scratch_146*scratch_423 - scratch_147*scratch_424 - scratch_148*scratch_425 - scratch_149*scratch_426 - scratch_150*scratch_427 - scratch_151*scratch_428 - scratch_152*scratch_429);
    double scratch_431 = scratch_179*(-A[264]*scratch_419 + A[284] - scratch_168*scratch_420 - scratch_169*scratch_421 - scratch_170*scratch_422 - scratch_171*scratch_423 - scratch_172*scratch_424 - scratch_173*scratch_425 - scratch_174*scratch_426 - scratch_175*scratch_427 - scratch_176*scratch_428 - scratch_177*scratch_429 - scratch_178*scratch_430);
    double scratch_432 = scratch_207*(-A[286]*scratch_419 + A[306] - scratch_195*scratch_420 - scratch_196*scratch_421 - scratch_197*scratch_422 - scratch_198*scratch_423 - scratch_199*scratch_424 - scratch_200*scratch_425 - scratch_201*scratch_426 - scratch_202*scratch_427 - scratch_203*scratch_428 - scratch_204*scratch_429 - scratch_205*scratch_430 - scratch_206*scratch_431);
    double scratch_433 = scratch_237*(-A[308]*scratch_419 + A[328] - scratch_224*scratch_420 - scratch_225*scratch_421 - scratch_226*scratch_422 - scratch_227*scratch_423 - scratch_228*scratch_424 - scratch_229*scratch_425 - scratch_230*scratch_426 - scratch_231*scratch_427 - scratch_232*scratch_428 - scratch_233*scratch_429 - scratch_234*scratch_430 - scratch_235*scratch_431 - scratch_236*scratch_432);
    double scratch_434 = scratch_269*(-A[330]*scratch_419 + A[350] - scratch_255*scratch_420 - scratch_256*scratch_421 - scratch_257*scratch_422 - scratch_258*scratch_423 - scratch_259*scratch_424 - scratch_260*scratch_425 - scratch_261*scratch_426 - scratch_262*scratch_427 - scratch_263*scratch_428 - scratch_264*scratch_429 - scratch_265*scratch_430 - scratch_266*scratch_431 - scratch_267*scratch_432 - scratch_268*scratch_433);
    double scratch_435 = scratch_303*(-A[352]*scratch_419 + A[372] - scratch_288*scratch_420 - scratch_289*scratch_421 - scratch_290*scratch_422 - scratch_291*scratch_423 - scratch_292*scratch_424 - scratch_293*scratch_425 - scratch_294*scratch_426 - scratch_295*scratch_427 - scratch_296*scratch_428 - scratch_297*scratch_429 - scratch_298*scratch_430 - scratch_299*scratch_431 - scratch_300*scratch_432 - scratch_301*scratch_433 - scratch_302*scratch_434);
    double scratch_436 = scratch_339*(-A[374]*scratch_419 + A[394] - scratch_323*scratch_420 - scratch_324*scratch_421 - scratch_325*scratch_422 - scratch_326*scratch_423 - scratch_327*scratch_424 - scratch_328*scratch_425 - scratch_329*scratch_426 - scratch_330*scratch_427 - scratch_331*scratch_428 - scratch_332*scratch_429 - scratch_333*scratch_430 - scratch_334*scratch_431 - scratch_335*scratch_432 - scratch_336*scratch_433 - scratch_337*scratch_434 - scratch_338*scratch_435);
    double scratch_437 = scratch_377*(-A[396]*scratch_419 + A[416] - scratch_360*scratch_420 - scratch_361*scratch_421 - scratch_362*scratch_422 - scratch_363*scratch_423 - scratch_364*scratch_424 - scratch_365*scratch_425 - scratch_366*scratch_426 - scratch_367*scratch_427 - scratch_368*scratch_428 - scratch_369*scratch_429 - scratch_370*scratch_430 - scratch_371*scratch_431 - scratch_372*scratch_432 - scratch_373*scratch_433 - scratch_374*scratch_434 - scratch_375*scratch_435 - scratch_376*scratch_436);
    double scratch_438 = scratch_417*(-A[418]*scratch_419 + A[438] - scratch_399*scratch_420 - scratch_400*scratch_421 - scratch_401*scratch_422 - scratch_402*scratch_423 - scratch_403*scratch_424 - scratch_404*scratch_425 - scratch_405*scratch_426 - scratch_406*scratch_427 - scratch_407*scratch_428 - scratch_408*scratch_429 - scratch_409*scratch_430 - scratch_410*scratch_431 - scratch_411*scratch_432 - scratch_412*scratch_433 - scratch_413*scratch_434 - scratch_414*scratch_435 - scratch_415*scratch_436 - scratch_416*scratch_437);
    double scratch_439 = -scratch_119*scratch_429 - scratch_14*scratch_422 - scratch_142*scratch_430 - scratch_167*scratch_431 - scratch_194*scratch_432 - scratch_223*scratch_433 - scratch_23*scratch_423 - scratch_254*scratch_434 - scratch_287*scratch_435 - scratch_3*scratch_420 - scratch_322*scratch_436 - scratch_34*scratch_424 - scratch_359*scratch_437 - scratch_398*scratch_438 + scratch_419 - scratch_421*scratch_6 - scratch_425*scratch_47 - scratch_426*scratch_62 - scratch_427*scratch_79 - scratch_428*scratch_98;
    double scratch_440 = -A[440]*scratch_3 + A[441];
    double scratch_441 = -A[440]*scratch_2 + A[442] - scratch_440*scratch_5;
    double scratch_442 = -A[440]*scratch_11 + A[443] - scratch_12*scratch_440 - scratch_13*scratch_441;
    double scratch_443 = -A[440]*scratch_19 + A[444] - scratch_20*scratch_440 - scratch_21*scratch_441 - scratch_22*scratch_442;
    double scratch_444 = -A[440]*scratch_29 + A[445] - scratch_30*scratch_440 - scratch_31*scratch_441 - scratch_32*scratch_442 - scratch_33*scratch_443;
    double scratch_445 = -A[440]*scratch_41 + A[446] - scratch_42*scratch_440 - scratch_43*scratch_441 - scratch_44*scratch_442 - scratch_443*scratch_45 - scratch_444*scratch_46;
    double scratch_446 = -A[440]*scratch_55 + A[447] - scratch_440*scratch_56 - scratch_441*scratch_57 - scratch_442*scratch_58 - scratch_443*scratch_59 - scratch_444*scratch_60 - scratch_445*scratch_61;
    double scratch_447 = -A[440]*scratch_71 + A[448] - scratch_440*scratch_72 - scratch_441*scratch_73 - scratch_442*scratch_74 - scratch_443*scratch_75 - scratch_444*scratch_76 - scratch_445*scratch_77 - scratch_446*scratch_78;
    double scratch_448 = -A[440]*scratch_89 + A[449] - scratch_440*scratch_90 - scratch_441*scratch_91 - scratch_442*scratch_92 - scratch_443*scratch_93 - scratch_444*scratch_94 - scratch_445*scratch_95 - scratch_446*scratch_96 - scratch_447*scratch_97;
    double scratch_449 = -A[440]*scratch_109 + A[450] - scratch_110*scratch_440 - scratch_111*scratch_441 - scratch_112*scratch_442 - scratch_113*scratch_443 - scratch_114*scratch_444 - scratch_115*scratch_445 - scratch_116*scratch_446 - scratch_117*scratch_447 - scratch_118*scratch_448;
    double scratch_450 = -A[440]*scratch_131 + A[451] - scratch_132*scratch_440 - scratch_133*scratch_441 - scratch_134*scratch_442 - scratch_135*scratch_443 - scratch_136*scratch_444 - scratch_137*scratch_445 - scratch_138*scratch_446 - scratch_139*scratch_447 - scratch_140*scratch_448 - scratch_141*scratch_449;
    double scratch_451 = -A[440]*scratch_155 + A[452] - scratch_156*scratch_440 - scratch_157*scratch_441 - scratch_158*scratch_442 - scratch_159*scratch_443 - scratch_160*scratch_444 - scratch_161*scratch_445 - scratch_162*scratch_446 - scratch_163*scratch_447 - scratch_164*scratch_448 - scratch_165*scratch_449 - scratch_166*scratch_450;
    double scratch_452 = -A[440]*scratch_181 + A[453] - scratch_182*scratch_440 - scratch_183*scratch_441 - scratch_184*scratch_442 - scratch_185*scratch_443 - scratch_186*scratch_444 - scratch_187*scratch_445 - scratch_188*scratch_446 - scratch_189*scratch_447 - scratch_190*scratch_448 - scratch_191*scratch_449 - scratch_192*scratch_450 - scratch_193*scratch_451;
    double scratch_453 = -A[440]*scratch_209 + A[454] - scratch_210*scratch_440 - scratch_211*scratch_441 - scratch_212*scratch_442 - scratch_213*scratch_443 - scratch_214*scratch_444 - scratch_215*scratch_445 - scratch_216*scratch_446 - scratch_217*scratch_447 - scratch_218*scratch_448 - scratch_219*scratch_449 - scratch_220*scratch_450 - scratch_221*scratch_451 - scratch_222*scratch_452;
    double scratch_454 = -A[440]*scratch_239 + A[455] - scratch_240*scratch_440 - scratch_241*scratch_441 - scratch_242*scratch_442 - scratch_243*scratch_443 - scratch_244*scratch_444 - scratch_245*scratch_445 - scratch_246*scratch_446 - scratch_247*scratch_447 - scratch_248*scratch_448 - scratch_249*scratch_449 - scratch_250*scratch_450 - scratch_251*scratch_451 - scratch_252*scratch_452 - scratch_253*scratch_453;
    double scratch_455 = -A[440]*scratch_271 + A[456] - scratch_272*scratch_440 - scratch_273*scratch_441 - scratch_274*scratch_442 - scratch_275*scratch_443 - scratch_276*scratch_444 - scratch_277*scratch_445 - scratch_278*scratch_446 - scratch_279*scratch_447 - scratch_280*scratch_448 - scratch_281*scratch_449 - scratch_282*scratch_450 - scratch_283*scratch_451 - scratch_284*scratch_452 - scratch_285*scratch_453 - scratch_286*scratch_454;
    double scratch_456 = -A[440]*scratch_305 + A[457] - scratch_306*scratch_440 - scratch_307*scratch_441 - scratch_308*scratch_442 - scratch_309*scratch_443 - scratch_310*scratch_444 - scratch_311*scratch_445 - scratch_312*scratch_446 - scratch_313*scratch_447 - scratch_314*scratch_448 - scratch_315*scratch_449 - scratch_316*scratch_450 - scratch_317*scratch_451 - scratch_318*scratch_452 - scratch_319*scratch_453 - scratch_320*scratch_454 - scratch_321*scratch_455;
    double scratch_457 = -A[440]*scratch_341 + A[458] - scratch_342*scratch_440 - scratch_343*scratch_441 - scratch_344*scratch_442 - scratch_345*scratch_443 - scratch_346*scratch_444 - scratch_347*scratch_445 - scratch_348*scratch_446 - scratch_349*scratch_447 - scratch_350*scratch_448 - scratch_351*scratch_449 - scratch_352*scratch_450 - scratch_353*scratch_451 - scratch_354*scratch_452 - scratch_355*scratch_453 - scratch_356*scratch_454 - scratch_357*scratch_455 - scratch_358*scratch_456;
    double scratch_458 = -A[440]*scratch_379 + A[459] - scratch_380*scratch_440 - scratch_381*scratch_441 - scratch_382*scratch_442 - scratch_383*scratch_443 - scratch_384*scratch_444 - scratch_385*scratch_445 - scratch_386*scratch_446 - scratch_387*scratch_447 - scratch_388*scratch_448 - scratch_389*scratch_449 - scratch_390*scratch_450 - scratch_391*scratch_451 - scratch_392*scratch_452 - scratch_393*scratch_453 - scratch_394*scratch_454 - scratch_395*scratch_455 - scratch_396*scratch_456 - scratch_397*scratch_457;
    double scratch_459 = 1.0/(-A[440]*scratch_419 + A[460] - scratch_420*scratch_440 - scratch_421*scratch_441 - scratch_422*scratch_442 - scratch_423*scratch_443 - scratch_424*scratch_444 - scratch_425*scratch_445 - scratch_426*scratch_446 - scratch_427*scratch_447 - scratch_428*scratch_448 - scratch_429*scratch_449 - scratch_430*scratch_450 - scratch_431*scratch_451 - scratch_432*scratch_452 - scratch_433*scratch_453 - scratch_434*scratch_454 - scratch_435*scratch_455 - scratch_436*scratch_456 - scratch_437*scratch_457 - scratch_438*scratch_458);
    double scratch_460 = scratch_459*(-A[440]*scratch_1 + b[20] - scratch_10*scratch_441 - scratch_108*scratch_448 - scratch_130*scratch_449 - scratch_154*scratch_450 - scratch_18*scratch_442 - scratch_180*scratch_451 - scratch_208*scratch_452 - scratch_238*scratch_453 - scratch_270*scratch_454 - scratch_28*scratch_443 - scratch_304*scratch_455 - scratch_340*scratch_456 - scratch_378*scratch_457 - scratch_40*scratch_444 - scratch_418*scratch_458 - scratch_440*scratch_9 - scratch_445*scratch_54 - scratch_446*scratch_70 - scratch_447*scratch_88);
    double scratch_461 = A[21]*scratch_0;
    double scratch_462 = scratch_4*(-A[22]*scratch_461 + A[43]);
    double scratch_463 = scratch_8*(-A[44]*scratch_461 + A[65] - scratch_462*scratch_7);
    double scratch_464 = scratch_17*(-A[66]*scratch_461 + A[87] - scratch_15*scratch_462 - scratch_16*scratch_463);
    double scratch_465 = scratch_27*(A[109] - A[88]*scratch_461 - scratch_24*scratch_462 - scratch_25*scratch_463 - scratch_26*scratch_464);
    double scratch_466 = scratch_39*(-A[110]*scratch_461 + A[131] - scratch_35*scratch_462 - scratch_36*scratch_463 - scratch_37*scratch_464 - scratch_38*scratch_465);
    double scratch_467 = scratch_53*(-A[132]*scratch_461 + A[153] - scratch_462*scratch_48 - scratch_463*scratch_49 - scratch_464*scratch_50 - scratch_465*scratch_51 - scratch_466*scratch_52);
    double scratch_468 = scratch_69*(-A[154]*scratch_461 + A[175] - scratch_462*scratch_63 - scratch_463*scratch_64 - scratch_464*scratch_65 - scratch_465*scratch_66 - scratch_466*scratch_67 - scratch_467*scratch_68);
    double scratch_469 = scratch_87*(-A[176]*scratch_461 + A[197] - scratch_462*scratch_80 - scratch_463*scratch_81 - scratch_464*scratch_82 - scratch_465*scratch_83 - scratch_466*scratch_84 - scratch_467*scratch_85 - scratch_468*scratch_86);
    double scratch_470 = scratch_107*(-A[198]*scratch_461 + A[219] - scratch_100*scratch_463 - scratch_101*scratch_464 - scratch_102*scratch_465 - scratch_103*scratch_466 - scratch_104*scratch_467 - scratch_105*scratch_468 - scratch_106*scratch_469 - scratch_462*scratch_99);
    double scratch_471 = scratch_129*(-A[220]*scratch_461 + A[241] - scratch_120*scratch_462 - scratch_121*scratch_463 - scratch_122*scratch_464 - scratch_123*scratch_465 - scratch_124*scratch_466 - scratch_125*scratch_467 - scratch_126*scratch_468 - scratch_127*scratch_469 - scratch_128*scratch_470);
    double scratch_472 = scratch_153*(-A[242]*scratch_461 + A[263] - scratch_143*scratch_462 - scratch_144*scratch_463 - scratch_145*scratch_464 - scratch_146*scratch_465 - scratch_147*scratch_466 - scratch_148*scratch_467 - scratch_149*scratch_468 - scratch_150*scratch_469 - scratch_151*scratch_470 - scratch_152*scratch_471);
    double scratch_473 = scratch_179*(-A[264]*scratch_461 + A[285] - scratch_168*scratch_462 - scratch_169*scratch_463 - scratch_170*scratch_464 - scratch_171*scratch_465 - scratch_172*scratch_466 - scratch_173*scratch_467 - scratch_174*scratch_468 - scratch_175*scratch_469 - scratch_176*scratch_470 - scratch_177*scratch_471 - scratch_178*scratch_472);
    double scratch_474 = scratch_207*(-A[286]*scratch_461 + A[307] - scratch_195*scratch_462 - scratch_196*scratch_463 - scratch_197*scratch_464 - scratch_198*scratch_465 - scratch_199*scratch_466 - scratch_200*scratch_467 - scratch_201*scratch_468 - scratch_202*scratch_469 - scratch_203*scratch_470 - scratch_204*scratch_471 - scratch_205*scratch_472 - scratch_206*scratch_473);
    double scratch_475 = scratch_237*(-A[308]*scratch_461 + A[329] - scratch_224*scratch_462 - scratch_225*scratch_463 - scratch_226*scratch_464 - scratch_227*scratch_465 - scratch_228*scratch_466 - scratch_229*scratch_467 - scratch_230*scratch_468 - scratch_231*scratch_469 - scratch_232*scratch_470 - scratch_233*scratch_471 - scratch_234*scratch_472 - scratch_235*scratch_473 - scratch_236*scratch_474);
    double scratch_476 = scratch_269*(-A[330]*scratch_461 + A[351] - scratch_255*scratch_462 - scratch_256*scratch_463 - scratch_257*scratch_464 - scratch_258*scratch_465 - scratch_259*scratch_466 - scratch_260*scratch_467 - scratch_261*scratch_468 - scratch_262*scratch_469 - scratch_263*scratch_470 - scratch_264*scratch_471 - scratch_265*scratch_472 - scratch_266*scratch_473 - scratch_267*scratch_474 - scratch_268*scratch_475);
    double scratch_477 = scratch_303*(-A[352]*scratch_461 + A[373] - scratch_288*scratch_462 - scratch_289*scratch_463 - scratch_290*scratch_464 - scratch_291*scratch_465 - scratch_292*scratch_466 - scratch_293*scratch_467 - scratch_294*scratch_468 - scratch_295*scratch_469 - scratch_296*scratch_470 - scratch_297*scratch_471 - scratch_298*scratch_472 - scratch_299*scratch_473 - scratch_300*scratch_474 - scratch_301*scratch_475 - scratch_302*scratch_476);
    double scratch_478 = scratch_339*(-A[374]*scratch_461 + A[395] - scratch_323*scratch_462 - scratch_324*scratch_463 - scratch_325*scratch_464 - scratch_326*scratch_465 - scratch_327*scratch_466 - scratch_328*scratch_467 - scratch_329*scratch_468 - scratch_330*scratch_469 - scratch_331*scratch_470 - scratch_332*scratch_471 - scratch_333*scratch_472 - scratch_334*scratch_473 - scratch_335*scratch_474 - scratch_336*scratch_475 - scratch_337*scratch_476 - scratch_338*scratch_477);
    double scratch_479 = scratch_377*(-A[396]*scratch_461 + A[417] - scratch_360*scratch_462 - scratch_361*scratch_463 - scratch_362*scratch_464 - scratch_363*scratch_465 - scratch_364*scratch_466 - scratch_365*scratch_467 - scratch_366*scratch_468 - scratch_367*scratch_469 - scratch_368*scratch_470 - scratch_369*scratch_471 - scratch_370*scratch_472 - scratch_371*scratch_473 - scratch_372*scratch_474 - scratch_373*scratch_475 - scratch_374*scratch_476 - scratch_375*scratch_477 - scratch_376*scratch_478);
    double scratch_480 = scratch_417*(-A[418]*scratch_461 + A[439] - scratch_399*scratch_462 - scratch_400*scratch_463 - scratch_401*scratch_464 - scratch_402*scratch_465 - scratch_403*scratch_466 - scratch_404*scratch_467 - scratch_405*scratch_468 - scratch_406*scratch_469 - scratch_407*scratch_470 - scratch_408*scratch_471 - scratch_409*scratch_472 - scratch_410*scratch_473 - scratch_411*scratch_474 - scratch_412*scratch_475 - scratch_413*scratch_476 - scratch_414*scratch_477 - scratch_415*scratch_478 - scratch_416*scratch_479);
    double scratch_481 = scratch_459*(-A[440]*scratch_461 + A[461] - scratch_440*scratch_462 - scratch_441*scratch_463 - scratch_442*scratch_464 - scratch_443*scratch_465 - scratch_444*scratch_466 - scratch_445*scratch_467 - scratch_446*scratch_468 - scratch_447*scratch_469 - scratch_448*scratch_470 - scratch_449*scratch_471 - scratch_450*scratch_472 - scratch_451*scratch_473 - scratch_452*scratch_474 - scratch_453*scratch_475 - scratch_454*scratch_476 - scratch_455*scratch_477 - scratch_456*scratch_478 - scratch_457*scratch_479 - scratch_458*scratch_480);
    double scratch_482 = -A[462]*scratch_3 + A[463];
    double scratch_483 = -A[462]*scratch_2 + A[464] - scratch_482*scratch_5;
    double scratch_484 = -A[462]*scratch_11 + A[465] - scratch_12*scratch_482 - scratch_13*scratch_483;
    double scratch_485 = -A[462]*scratch_19 + A[466] - scratch_20*scratch_482 - scratch_21*scratch_483 - scratch_22*scratch_484;
    double scratch_486 = -A[462]*scratch_29 + A[467] - scratch_30*scratch_482 - scratch_31*scratch_483 - scratch_32*scratch_484 - scratch_33*scratch_485;
    double scratch_487 = -A[462]*scratch_41 + A[468] - scratch_42*scratch_482 - scratch_43*scratch_483 - scratch_44*scratch_484 - scratch_45*scratch_485 - scratch_46*scratch_486;
    double scratch_488 = -A[462]*scratch_55 + A[469] - scratch_482*scratch_56 - scratch_483*scratch_57 - scratch_484*scratch_58 - scratch_485*scratch_59 - scratch_486*scratch_60 - scratch_487*scratch_61;
    double scratch_489 = -A[462]*scratch_71 + A[470] - scratch_482*scratch_72 - scratch_483*scratch_73 - scratch_484*scratch_74 - scratch_485*scratch_75 - scratch_486*scratch_76 - scratch_487*scratch_77 - scratch_488*scratch_78;
    double scratch_490 = -A[462]*scratch_89 + A[471] - scratch_482*scratch_90 - scratch_483*scratch_91 - scratch_484*scratch_92 - scratch_485*scratch_93 - scratch_486*scratch_94 - scratch_487*scratch_95 - scratch_488*scratch_96 - scratch_489*scratch_97;
    double scratch_491 = -A[462]*scratch_109 + A[472] - scratch_110*scratch_482 - scratch_111*scratch_483 - scratch_112*scratch_484 - scratch_113*scratch_485 - scratch_114*scratch_486 - scratch_115*scratch_487 - scratch_116*scratch_488 - scratch_117*scratch_489 - scratch_118*scratch_490;
    double scratch_492 = -A[462]*scratch_131 + A[473] - scratch_132*scratch_482 - scratch_133*scratch_483 - scratch_134*scratch_484 - scratch_135*scratch_485 - scratch_136*scratch_486 - scratch_137*scratch_487 - scratch_138*scratch_488 - scratch_139*scratch_489 - scratch_140*scratch_490 - scratch_141*scratch_491;
    double scratch_493 = -A[462]*scratch_155 + A[474] - scratch_156*scratch_482 - scratch_157*scratch_483 - scratch_158*scratch_484 - scratch_159*scratch_485 - scratch_160*scratch_486 - scratch_161*scratch_487 - scratch_162*scratch_488 - scratch_163*scratch_489 - scratch_164*scratch_490 - scratch_165*scratch_491 - scratch_166*scratch_492;
    double scratch_494 = -A[462]*scratch_181 + A[475] - scratch_182*scratch_482 - scratch_183*scratch_483 - scratch_184*scratch_484 - scratch_185*scratch_485 - scratch_186*scratch_486 - scratch_187*scratch_487 - scratch_188*scratch_488 - scratch_189*scratch_489 - scratch_190*scratch_490 - scratch_191*scratch_491 - scratch_192*scratch_492 - scratch_193*scratch_493;
    double scratch_495 = -A[462]*scratch_209 + A[476] - scratch_210*scratch_482 - scratch_211*scratch_483 - scratch_212*scratch_484 - scratch_213*scratch_485 - scratch_214*scratch_486 - scratch_215*scratch_487 - scratch_216*scratch_488 - scratch_217*scratch_489 - scratch_218*scratch_490 - scratch_219*scratch_491 - scratch_220*scratch_492 - scratch_221*scratch_493 - scratch_222*scratch_494;
    double scratch_496 = -A[462]*scratch_239 + A[477] - scratch_240*scratch_482 - scratch_241*scratch_483 - scratch_242*scratch_484 - scratch_243*scratch_485 - scratch_244*scratch_486 - scratch_245*scratch_487 - scratch_246*scratch_488 - scratch_247*scratch_489 - scratch_248*scratch_490 - scratch_249*scratch_491 - scratch_250*scratch_492 - scratch_251*scratch_493 - scratch_252*scratch_494 - scratch_253*scratch_495;
    double scratch_497 = -A[462]*scratch_271 + A[478] - scratch_272*scratch_482 - scratch_273*scratch_483 - scratch_274*scratch_484 - scratch_275*scratch_485 - scratch_276*scratch_486 - scratch_277*scratch_487 - scratch_278*scratch_488 - scratch_279*scratch_489 - scratch_280*scratch_490 - scratch_281*scratch_491 - scratch_282*scratch_492 - scratch_283*scratch_493 - scratch_284*scratch_494 - scratch_285*scratch_495 - scratch_286*scratch_496;
    double scratch_498 = -A[462]*scratch_305 + A[479] - scratch_306*scratch_482 - scratch_307*scratch_483 - scratch_308*scratch_484 - scratch_309*scratch_485 - scratch_310*scratch_486 - scratch_311*scratch_487 - scratch_312*scratch_488 - scratch_313*scratch_489 - scratch_314*scratch_490 - scratch_315*scratch_491 - scratch_316*scratch_492 - scratch_317*scratch_493 - scratch_318*scratch_494 - scratch_319*scratch_495 - scratch_320*scratch_496 - scratch_321*scratch_497;
    double scratch_499 = -A[462]*scratch_341 + A[480] - scratch_342*scratch_482 - scratch_343*scratch_483 - scratch_344*scratch_484 - scratch_345*scratch_485 - scratch_346*scratch_486 - scratch_347*scratch_487 - scratch_348*scratch_488 - scratch_349*scratch_489 - scratch_350*scratch_490 - scratch_351*scratch_491 - scratch_352*scratch_492 - scratch_353*scratch_493 - scratch_354*scratch_494 - scratch_355*scratch_495 - scratch_356*scratch_496 - scratch_357*scratch_497 - scratch_358*scratch_498;
    double scratch_500 = -A[462]*scratch_379 + A[481] - scratch_380*scratch_482 - scratch_381*scratch_483 - scratch_382*scratch_484 - scratch_383*scratch_485 - scratch_384*scratch_486 - scratch_385*scratch_487 - scratch_386*scratch_488 - scratch_387*scratch_489 - scratch_388*scratch_490 - scratch_389*scratch_491 - scratch_390*scratch_492 - scratch_391*scratch_493 - scratch_392*scratch_494 - scratch_393*scratch_495 - scratch_394*scratch_496 - scratch_395*scratch_497 - scratch_396*scratch_498 - scratch_397*scratch_499;
    double scratch_501 = -A[462]*scratch_419 + A[482] - scratch_420*scratch_482 - scratch_421*scratch_483 - scratch_422*scratch_484 - scratch_423*scratch_485 - scratch_424*scratch_486 - scratch_425*scratch_487 - scratch_426*scratch_488 - scratch_427*scratch_489 - scratch_428*scratch_490 - scratch_429*scratch_491 - scratch_430*scratch_492 - scratch_431*scratch_493 - scratch_432*scratch_494 - scratch_433*scratch_495 - scratch_434*scratch_496 - scratch_435*scratch_497 - scratch_436*scratch_498 - scratch_437*scratch_499 - scratch_438*scratch_500;
    double scratch_502 = (-A[462]*scratch_1 + b[21] - scratch_10*scratch_483 - scratch_108*scratch_490 - scratch_130*scratch_491 - scratch_154*scratch_492 - scratch_18*scratch_484 - scratch_180*scratch_493 - scratch_208*scratch_494 - scratch_238*scratch_495 - scratch_270*scratch_496 - scratch_28*scratch_485 - scratch_304*scratch_497 - scratch_340*scratch_498 - scratch_378*scratch_499 - scratch_40*scratch_486 - scratch_418*scratch_500 - scratch_460*scratch_501 - scratch_482*scratch_9 - scratch_487*scratch_54 - scratch_488*scratch_70 - scratch_489*scratch_88)/(-A[462]*scratch_461 + A[483] - scratch_462*scratch_482 - scratch_463*scratch_483 - scratch_464*scratch_484 - scratch_465*scratch_485 - scratch_466*scratch_486 - scratch_467*scratch_487 - scratch_468*scratch_488 - scratch_469*scratch_489 - scratch_470*scratch_490 - scratch_471*scratch_491 - scratch_472*scratch_492 - scratch_473*scratch_493 - scratch_474*scratch_494 - scratch_475*scratch_495 - scratch_476*scratch_496 - scratch_477*scratch_497 - scratch_478*scratch_498 - scratch_479*scratch_499 - scratch_480*scratch_500 - scratch_481*scratch_501);
    double scratch_503 = scratch_12 - scratch_13*scratch_5;
    double scratch_504 = scratch_20 - scratch_21*scratch_5 - scratch_22*scratch_503;
    double scratch_505 = scratch_30 - scratch_31*scratch_5 - scratch_32*scratch_503 - scratch_33*scratch_504;
    double scratch_506 = scratch_42 - scratch_43*scratch_5 - scratch_44*scratch_503 - scratch_45*scratch_504 - scratch_46*scratch_505;
    double scratch_507 = -scratch_5*scratch_57 - scratch_503*scratch_58 - scratch_504*scratch_59 - scratch_505*scratch_60 - scratch_506*scratch_61 + scratch_56;
    double scratch_508 = -scratch_5*scratch_73 - scratch_503*scratch_74 - scratch_504*scratch_75 - scratch_505*scratch_76 - scratch_506*scratch_77 - scratch_507*scratch_78 + scratch_72;
    double scratch_509 = -scratch_5*scratch_91 - scratch_503*scratch_92 - scratch_504*scratch_93 - scratch_505*scratch_94 - scratch_506*scratch_95 - scratch_507*scratch_96 - scratch_508*scratch_97 + scratch_90;
    double scratch_510 = scratch_110 - scratch_111*scratch_5 - scratch_112*scratch_503 - scratch_113*scratch_504 - scratch_114*scratch_505 - scratch_115*scratch_506 - scratch_116*scratch_507 - scratch_117*scratch_508 - scratch_118*scratch_509;
    double scratch_511 = scratch_132 - scratch_133*scratch_5 - scratch_134*scratch_503 - scratch_135*scratch_504 - scratch_136*scratch_505 - scratch_137*scratch_506 - scratch_138*scratch_507 - scratch_139*scratch_508 - scratch_140*scratch_509 - scratch_141*scratch_510;
    double scratch_512 = scratch_156 - scratch_157*scratch_5 - scratch_158*scratch_503 - scratch_159*scratch_504 - scratch_160*scratch_505 - scratch_161*scratch_506 - scratch_162*scratch_507 - scratch_163*scratch_508 - scratch_164*scratch_509 - scratch_165*scratch_510 - scratch_166*scratch_511;
    double scratch_513 = scratch_182 - scratch_183*scratch_5 - scratch_184*scratch_503 - scratch_185*scratch_504 - scratch_186*scratch_505 - scratch_187*scratch_506 - scratch_188*scratch_507 - scratch_189*scratch_508 - scratch_190*scratch_509 - scratch_191*scratch_510 - scratch_192*scratch_511 - scratch_193*scratch_512;
    double scratch_514 = scratch_210 - scratch_211*scratch_5 - scratch_212*scratch_503 - scratch_213*scratch_504 - scratch_214*scratch_505 - scratch_215*scratch_506 - scratch_216*scratch_507 - scratch_217*scratch_508 - scratch_218*scratch_509 - scratch_219*scratch_510 - scratch_220*scratch_511 - scratch_221*scratch_512 - scratch_222*scratch_513;
    double scratch_515 = scratch_240 - scratch_241*scratch_5 - scratch_242*scratch_503 - scratch_243*scratch_504 - scratch_244*scratch_505 - scratch_245*scratch_506 - scratch_246*scratch_507 - scratch_247*scratch_508 - scratch_248*scratch_509 - scratch_249*scratch_510 - scratch_250*scratch_511 - scratch_251*scratch_512 - scratch_252*scratch_513 - scratch_253*scratch_514;
    double scratch_516 = scratch_272 - scratch_273*scratch_5 - scratch_274*scratch_503 - scratch_275*scratch_504 - scratch_276*scratch_505 - scratch_277*scratch_506 - scratch_278*scratch_507 - scratch_279*scratch_508 - scratch_280*scratch_509 - scratch_281*scratch_510 - scratch_282*scratch_511 - scratch_283*scratch_512 - scratch_284*scratch_513 - scratch_285*scratch_514 - scratch_286*scratch_515;
    double scratch_517 = scratch_306 - scratch_307*scratch_5 - scratch_308*scratch_503 - scratch_309*scratch_504 - scratch_310*scratch_505 - scratch_311*scratch_506 - scratch_312*scratch_507 - scratch_313*scratch_508 - scratch_314*scratch_509 - scratch_315*scratch_510 - scratch_316*scratch_511 - scratch_317*scratch_512 - scratch_318*scratch_513 - scratch_319*scratch_514 - scratch_320*scratch_515 - scratch_321*scratch_516;
    double scratch_518 = scratch_342 - scratch_343*scratch_5 - scratch_344*scratch_503 - scratch_345*scratch_504 - scratch_346*scratch_505 - scratch_347*scratch_506 - scratch_348*scratch_507 - scratch_349*scratch_508 - scratch_350*scratch_509 - scratch_351*scratch_510 - scratch_352*scratch_511 - scratch_353*scratch_512 - scratch_354*scratch_513 - scratch_355*scratch_514 - scratch_356*scratch_515 - scratch_357*scratch_516 - scratch_358*scratch_517;
    double scratch_519 = scratch_380 - scratch_381*scratch_5 - scratch_382*scratch_503 - scratch_383*scratch_504 - scratch_384*scratch_505 - scratch_385*scratch_506 - scratch_386*scratch_507 - scratch_387*scratch_508 - scratch_388*scratch_509 - scratch_389*scratch_510 - scratch_390*scratch_511 - scratch_391*scratch_512 - scratch_392*scratch_513 - scratch_393*scratch_514 - scratch_394*scratch_515 - scratch_395*scratch_516 - scratch_396*scratch_517 - scratch_397*scratch_518;
    double scratch_520 = scratch_420 - scratch_421*scratch_5 - scratch_422*scratch_503 - scratch_423*scratch_504 - scratch_424*scratch_505 - scratch_425*scratch_506 - scratch_426*scratch_507 - scratch_427*scratch_508 - scratch_428*scratch_509 - scratch_429*scratch_510 - scratch_430*scratch_511 - scratch_431*scratch_512 - scratch_432*scratch_513 - scratch_433*scratch_514 - scratch_434*scratch_515 - scratch_435*scratch_516 - scratch_436*scratch_517 - scratch_437*scratch_518 - scratch_438*scratch_519;
    double scratch_521 = -scratch_13*scratch_22 + scratch_21;
    double scratch_522 = -scratch_13*scratch_32 + scratch_31 - scratch_33*scratch_521;
    double scratch_523 = -scratch_13*scratch_44 + scratch_43 - scratch_45*scratch_521 - scratch_46*scratch_522;
    double scratch_524 = -scratch_13*scratch_58 - scratch_521*scratch_59 - scratch_522*scratch_60 - scratch_523*scratch_61 + scratch_57;
    double scratch_525 = -scratch_13*scratch_74 - scratch_521*scratch_75 - scratch_522*scratch_76 - scratch_523*scratch_77 - scratch_524*scratch_78 + scratch_73;
    double scratch_526 = -scratch_13*scratch_92 - scratch_521*scratch_93 - scratch_522*scratch_94 - scratch_523*scratch_95 - scratch_524*scratch_96 - scratch_525*scratch_97 + scratch_91;
    double scratch_527 = scratch_111 - scratch_112*scratch_13 - scratch_113*scratch_521 - scratch_114*scratch_522 - scratch_115*scratch_523 - scratch_116*scratch_524 - scratch_117*scratch_525 - scratch_118*scratch_526;
    double scratch_528 = -scratch_13*scratch_134 + scratch_133 - scratch_135*scratch_521 - scratch_136*scratch_522 - scratch_137*scratch_523 - scratch_138*scratch_524 - scratch_139*scratch_525 - scratch_140*scratch_526 - scratch_141*scratch_527;
    double scratch_529 = -scratch_13*scratch_158 + scratch_157 - scratch_159*scratch_521 - scratch_160*scratch_522 - scratch_161*scratch_523 - scratch_162*scratch_524 - scratch_163*scratch_525 - scratch_164*scratch_526 - scratch_165*scratch_527 - scratch_166*scratch_528;
    double scratch_530 = -scratch_13*scratch_184 + scratch_183 - scratch_185*scratch_521 - scratch_186*scratch_522 - scratch_187*scratch_523 - scratch_188*scratch_524 - scratch_189*scratch_525 - scratch_190*scratch_526 - scratch_191*scratch_527 - scratch_192*scratch_528 - scratch_193*scratch_529;
    double scratch_531 = -scratch_13*scratch_212 + scratch_211 - scratch_213*scratch_521 - scratch_214*scratch_522 - scratch_215*scratch_523 - scratch_216*scratch_524 - scratch_217*scratch_525 - scratch_218*scratch_526 - scratch_219*scratch_527 - scratch_220*scratch_528 - scratch_221*scratch_529 - scratch_222*scratch_530;
    double scratch_532 = -scratch_13*scratch_242 + scratch_241 - scratch_243*scratch_521 - scratch_244*scratch_522 - scratch_245*scratch_523 - scratch_246*scratch_524 - scratch_247*scratch_525 - scratch_248*scratch_526 - scratch_249*scratch_527 - scratch_250*scratch_528 - scratch_251*scratch_529 - scratch_252*scratch_530 - scratch_253*scratch_531;
    double scratch_533 = -scratch_13*scratch_274 + scratch_273 - scratch_275*scratch_521 - scratch_276*scratch_522 - scratch_277*scratch_523 - scratch_278*scratch_524 - scratch_279*scratch_525 - scratch_280*scratch_526 - scratch_281*scratch_527 - scratch_282*scratch_528 - scratch_283*scratch_529 - scratch_284*scratch_530 - scratch_285*scratch_531 - scratch_286*scratch_532;
    double scratch_534 = -scratch_13*scratch_308 + scratch_307 - scratch_309*scratch_521 - scratch_310*scratch_522 - scratch_311*scratch_523 - scratch_312*scratch_524 - scratch_313*scratch_525 - scratch_314*scratch_526 - scratch_315*scratch_527 - scratch_316*scratch_528 - scratch_317*scratch_529 - scratch_318*scratch_530 - scratch_319*scratch_531 - scratch_320*scratch_532 - scratch_321*scratch_533;
    double scratch_535 = -scratch_13*scratch_344 + scratch_343 - scratch_345*scratch_521 - scratch_346*scratch_522 - scratch_347*scratch_523 - scratch_348*scratch_524 - scratch_349*scratch_525 - scratch_350*scratch_526 - scratch_351*scratch_527 - scratch_352*scratch_528 - scratch_353*scratch_529 - scratch_354*scratch_530 - scratch_355*scratch_531 - scratch_356*scratch_532 - scratch_357*scratch_533 - scratch_358*scratch_534;
    double scratch_536 = -scratch_13*scratch_382 + scratch_381 - scratch_383*scratch_521 - scratch_384*scratch_522 - scratch_385*scratch_523 - scratch_386*scratch_524 - scratch_387*scratch_525 - scratch_388*scratch_526 - scratch_389*scratch_527 - scratch_390*scratch_528 - scratch_391*scratch_529 - scratch_392*scratch_530 - scratch_393*scratch_531 - scratch_394*scratch_532 - scratch_395*scratch_533 - scratch_396*scratch_534 - scratch_397*scratch_535;
    double scratch_537 = -scratch_13*scratch_422 + scratch_421 - scratch_423*scratch_521 - scratch_424*scratch_522 - scratch_425*scratch_523 - scratch_426*scratch_524 - scratch_427*scratch_525 - scratch_428*scratch_526 - scratch_429*scratch_527 - scratch_430*scratch_528 - scratch_431*scratch_529 - scratch_432*scratch_530 - scratch_433*scratch_531 - scratch_434*scratch_532 - scratch_435*scratch_533 - scratch_436*scratch_534 - scratch_437*scratch_535 - scratch_438*scratch_536;
    double scratch_538 = -scratch_22*scratch_33 + scratch_32;
    double scratch_539 = -scratch_22*scratch_45 + scratch_44 - scratch_46*scratch_538;
    double scratch_540 = -scratch_22*scratch_59 - scratch_538*scratch_60 - scratch_539*scratch_61 + scratch_58;
    double scratch_541 = -scratch_22*scratch_75 - scratch_538*scratch_76 - scratch_539*scratch_77 - scratch_540*scratch_78 + scratch_74;
    double scratch_542 = -scratch_22*scratch_93 - scratch_538*scratch_94 - scratch_539*scratch_95 - scratch_540*scratch_96 - scratch_541*scratch_97 + scratch_92;
    double scratch_543 = scratch_112 - scratch_113*scratch_22 - scratch_114*scratch_538 - scratch_115*scratch_539 - scratch_116*scratch_540 - scratch_117*scratch_541 - scratch_118*scratch_542;
    double scratch_544 = scratch_134 - scratch_135*scratch_22 - scratch_136*scratch_538 - scratch_137*scratch_539 - scratch_138*scratch_540 - scratch_139*scratch_541 - scratch_140*scratch_542 - scratch_141*scratch_543;
    double scratch_545 = scratch_158 - scratch_159*scratch_22 - scratch_160*scratch_538 - scratch_161*scratch_539 - scratch_162*scratch_540 - scratch_163*scratch_541 - scratch_164*scratch_542 - scratch_165*scratch_543 - scratch_166*scratch_544;
    double scratch_546 = scratch_184 - scratch_185*scratch_22 - scratch_186*scratch_538 - scratch_187*scratch_539 - scratch_188*scratch_540 - scratch_189*scratch_541 - scratch_190*scratch_542 - scratch_191*scratch_543 - scratch_192*scratch_544 - scratch_193*scratch_545;
    double scratch_547 = scratch_212 - scratch_213*scratch_22 - scratch_214*scratch_538 - scratch_215*scratch_539 - scratch_216*scratch_540 - scratch_217*scratch_541 - scratch_218*scratch_542 - scratch_219*scratch_543 - scratch_220*scratch_544 - scratch_221*scratch_545 - scratch_222*scratch_546;
    double scratch_548 = -scratch_22*scratch_243 + scratch_242 - scratch_244*scratch_538 - scratch_245*scratch_539 - scratch_246*scratch_540 - scratch_247*scratch_541 - scratch_248*scratch_542 - scratch_249*scratch_543 - scratch_250*scratch_544 - scratch_251*scratch_545 - scratch_252*scratch_546 - scratch_253*scratch_547;
    double scratch_549 = -scratch_22*scratch_275 + scratch_274 - scratch_276*scratch_538 - scratch_277*scratch_539 - scratch_278*scratch_540 - scratch_279*scratch_541 - scratch_280*scratch_542 - scratch_281*scratch_543 - scratch_282*scratch_544 - scratch_283*scratch_545 - scratch_284*scratch_546 - scratch_285*scratch_547 - scratch_286*scratch_548;
    double scratch_550 = -scratch_22*scratch_309 + scratch_308 - scratch_310*scratch_538 - scratch_311*scratch_539 - scratch_312*scratch_540 - scratch_313*scratch_541 - scratch_314*scratch_542 - scratch_315*scratch_543 - scratch_316*scratch_544 - scratch_317*scratch_545 - scratch_318*scratch_546 - scratch_319*scratch_547 - scratch_320*scratch_548 - scratch_321*scratch_549;
    double scratch_551 = -scratch_22*scratch_345 + scratch_344 - scratch_346*scratch_538 - scratch_347*scratch_539 - scratch_348*scratch_540 - scratch_349*scratch_541 - scratch_350*scratch_542 - scratch_351*scratch_543 - scratch_352*scratch_544 - scratch_353*scratch_545 - scratch_354*scratch_546 - scratch_355*scratch_547 - scratch_356*scratch_548 - scratch_357*scratch_549 - scratch_358*scratch_550;
    double scratch_552 = -scratch_22*scratch_383 + scratch_382 - scratch_384*scratch_538 - scratch_385*scratch_539 - scratch_386*scratch_540 - scratch_387*scratch_541 - scratch_388*scratch_542 - scratch_389*scratch_543 - scratch_390*scratch_544 - scratch_391*scratch_545 - scratch_392*scratch_546 - scratch_393*scratch_547 - scratch_394*scratch_548 - scratch_395*scratch_549 - scratch_396*scratch_550 - scratch_397*scratch_551;
    double scratch_553 = -scratch_22*scratch_423 + scratch_422 - scratch_424*scratch_538 - scratch_425*scratch_539 - scratch_426*scratch_540 - scratch_427*scratch_541 - scratch_428*scratch_542 - scratch_429*scratch_543 - scratch_430*scratch_544 - scratch_431*scratch_545 - scratch_432*scratch_546 - scratch_433*scratch_547 - scratch_434*scratch_548 - scratch_435*scratch_549 - scratch_436*scratch_550 - scratch_437*scratch_551 - scratch_438*scratch_552;
    double scratch_554 = -scratch_33*scratch_46 + scratch_45;
    double scratch_555 = -scratch_33*scratch_60 - scratch_554*scratch_61 + scratch_59;
    double scratch_556 = -scratch_33*scratch_76 - scratch_554*scratch_77 - scratch_555*scratch_78 + scratch_75;
    double scratch_557 = -scratch_33*scratch_94 - scratch_554*scratch_95 - scratch_555*scratch_96 - scratch_556*scratch_97 + scratch_93;
    double scratch_558 = scratch_113 - scratch_114*scratch_33 - scratch_115*scratch_554 - scratch_116*scratch_555 - scratch_117*scratch_556 - scratch_118*scratch_557;
    double scratch_559 = scratch_135 - scratch_136*scratch_33 - scratch_137*scratch_554 - scratch_138*scratch_555 - scratch_139*scratch_556 - scratch_140*scratch_557 - scratch_141*scratch_558;
    double scratch_560 = scratch_159 - scratch_160*scratch_33 - scratch_161*scratch_554 - scratch_162*scratch_555 - scratch_163*scratch_556 - scratch_164*scratch_557 - scratch_165*scratch_558 - scratch_166*scratch_559;
    double scratch_561 = scratch_185 - scratch_186*scratch_33 - scratch_187*scratch_554 - scratch_188*scratch_555 - scratch_189*scratch_556 - scratch_190*scratch_557 - scratch_191*scratch_558 - scratch_192*scratch_559 - scratch_193*scratch_560;
    double scratch_562 = scratch_213 - scratch_214*scratch_33 - scratch_215*scratch_554 - scratch_216*scratch_555 - scratch_217*scratch_556 - scratch_218*scratch_557 - scratch_219*scratch_558 - scratch_220*scratch_559 - scratch_221*scratch_560 - scratch_222*scratch_561;
    double scratch_563 = scratch_243 - scratch_244*scratch_33 - scratch_245*scratch_554 - scratch_246*scratch_555 - scratch_247*scratch_556 - scratch_248*scratch_557 - scratch_249*scratch_558 - scratch_250*scratch_559 - scratch_251*scratch_560 - scratch_252*scratch_561 - scratch_253*scratch_562;
    double scratch_564 = scratch_275 - scratch_276*scratch_33 - scratch_277*scratch_554 - scratch_278*scratch_555 - scratch_279*scratch_556 - scratch_280*scratch_557 - scratch_281*scratch_558 - scratch_282*scratch_559 - scratch_283*scratch_560 - scratch_284*scratch_561 - scratch_285*scratch_562 - scratch_286*scratch_563;
    double scratch_565 = scratch_309 - scratch_310*scratch_33 - scratch_311*scratch_554 - scratch_312*scratch_555 - scratch_313*scratch_556 - scratch_314*scratch_557 - scratch_315*scratch_558 - scratch_316*scratch_559 - scratch_317*scratch_560 - scratch_318*scratch_561 - scratch_319*scratch_562 - scratch_320*scratch_563 - scratch_321*scratch_564;
    double scratch_566 = -scratch_33*scratch_346 + scratch_345 - scratch_347*scratch_554 - scratch_348*scratch_555 - scratch_349*scratch_556 - scratch_350*scratch_557 - scratch_351*scratch_558 - scratch_352*scratch_559 - scratch_353*scratch_560 - scratch_354*scratch_561 - scratch_355*scratch_562 - scratch_356*scratch_563 - scratch_357*scratch_564 - scratch_358*scratch_565;
    double scratch_567 = -scratch_33*scratch_384 + scratch_383 - scratch_385*scratch_554 - scratch_386*scratch_555 - scratch_387*scratch_556 - scratch_388*scratch_557 - scratch_389*scratch_558 - scratch_390*scratch_559 - scratch_391*scratch_560 - scratch_392*scratch_561 - scratch_393*scratch_562 - scratch_394*scratch_563 - scratch_395*scratch_564 - scratch_396*scratch_565 - scratch_397*scratch_566;
    double scratch_568 = -scratch_33*scratch_424 + scratch_423 - scratch_425*scratch_554 - scratch_426*scratch_555 - scratch_427*scratch_556 - scratch_428*scratch_557 - scratch_429*scratch_558 - scratch_430*scratch_559 - scratch_431*scratch_560 - scratch_432*scratch_561 - scratch_433*scratch_562 - scratch_434*scratch_563 - scratch_435*scratch_564 - scratch_436*scratch_565 - scratch_437*scratch_566 - scratch_438*scratch_567;
    double scratch_569 = -scratch_46*scratch_61 + scratch_60;
    double scratch_570 = -scratch_46*scratch_77 - scratch_569*scratch_78 + scratch_76;
    double scratch_571 = -scratch_46*scratch_95 - scratch_569*scratch_96 - scratch_570*scratch_97 + scratch_94;
    double scratch_572 = scratch_114 - scratch_115*scratch_46 - scratch_116*scratch_569 - scratch_117*scratch_570 - scratch_118*scratch_571;
    double scratch_573 = scratch_136 - scratch_137*scratch_46 - scratch_138*scratch_569 - scratch_139*scratch_570 - scratch_140*scratch_571 - scratch_141*scratch_572;
    double scratch_574 = scratch_160 - scratch_161*scratch_46 - scratch_162*scratch_569 - scratch_163*scratch_570 - scratch_164*scratch_571 - scratch_165*scratch_572 - scratch_166*scratch_573;
    double scratch_575 = scratch_186 - scratch_187*scratch_46 - scratch_188*scratch_569 - scratch_189*scratch_570 - scratch_190*scratch_571 - scratch_191*scratch_572 - scratch_192*scratch_573 - scratch_193*scratch_574;
    double scratch_576 = scratch_214 - scratch_215*scratch_46 - scratch_216*scratch_569 - scratch_217*scratch_570 - scratch_218*scratch_571 - scratch_219*scratch_572 - scratch_220*scratch_573 - scratch_221*scratch_574 - scratch_222*scratch_575;
    double scratch_577 = scratch_244 - scratch_245*scratch_46 - scratch_246*scratch_569 - scratch_247*scratch_570 - scratch_248*scratch_571 - scratch_249*scratch_572 - scratch_250*scratch_573 - scratch_251*scratch_574 - scratch_252*scratch_575 - scratch_253*scratch_576;
    double scratch_578 = scratch_276 - scratch_277*scratch_46 - scratch_278*scratch_569 - scratch_279*scratch_570 - scratch_280*scratch_571 - scratch_281*scratch_572 - scratch_282*scratch_573 - scratch_283*scratch_574 - scratch_284*scratch_575 - scratch_285*scratch_576 - scratch_286*scratch_577;
    double scratch_579 = scratch_310 - scratch_311*scratch_46 - scratch_312*scratch_569 - scratch_313*scratch_570 - scratch_314*scratch_571 - scratch_315*scratch_572 - scratch_316*scratch_573 - scratch_317*scratch_574 - scratch_318*scratch_575 - scratch_319*scratch_576 - scratch_320*scratch_577 - scratch_321*scratch_578;
    double scratch_580 = scratch_346 - scratch_347*scratch_46 - scratch_348*scratch_569 - scratch_349*scratch_570 - scratch_350*scratch_571 - scratch_351*scratch_572 - scratch_352*scratch_573 - scratch_353*scratch_574 - scratch_354*scratch_575 - scratch_355*scratch_576 - scratch_356*scratch_577 - scratch_357*scratch_578 - scratch_358*scratch_579;
    double scratch_581 = scratch_384 - scratch_385*scratch_46 - scratch_386*scratch_569 - scratch_387*scratch_570 - scratch_388*scratch_571 - scratch_389*scratch_572 - scratch_390*scratch_573 - scratch_391*scratch_574 - scratch_392*scratch_575 - scratch_393*scratch_576 - scratch_394*scratch_577 - scratch_395*scratch_578 - scratch_396*scratch_579 - scratch_397*scratch_580;
    double scratch_582 = scratch_424 - scratch_425*scratch_46 - scratch_426*scratch_569 - scratch_427*scratch_570 - scratch_428*scratch_571 - scratch_429*scratch_572 - scratch_430*scratch_573 - scratch_431*scratch_574 - scratch_432*scratch_575 - scratch_433*scratch_576 - scratch_434*scratch_577 - scratch_435*scratch_578 - scratch_436*scratch_579 - scratch_437*scratch_580 - scratch_438*scratch_581;
    double scratch_583 = -scratch_61*scratch_78 + scratch_77;
    double scratch_584 = -scratch_583*scratch_97 - scratch_61*scratch_96 + scratch_95;
    double scratch_585 = scratch_115 - scratch_116*scratch_61 - scratch_117*scratch_583 - scratch_118*scratch_584;
    double scratch_586 = scratch_137 - scratch_138*scratch_61 - scratch_139*scratch_583 - scratch_140*scratch_584 - scratch_141*scratch_585;
    double scratch_587 = scratch_161 - scratch_162*scratch_61 - scratch_163*scratch_583 - scratch_164*scratch_584 - scratch_165*scratch_585 - scratch_166*scratch_586;
    double scratch_588 = scratch_187 - scratch_188*scratch_61 - scratch_189*scratch_583 - scratch_190*scratch_584 - scratch_191*scratch_585 - scratch_192*scratch_586 - scratch_193*scratch_587;
    double scratch_589 = scratch_215 - scratch_216*scratch_61 - scratch_217*scratch_583 - scratch_218*scratch_584 - scratch_219*scratch_585 - scratch_220*scratch_586 - scratch_221*scratch_587 - scratch_222*scratch_588;
    double scratch_590 = scratch_245 - scratch_246*scratch_61 - scratch_247*scratch_583 - scratch_248*scratch_584 - scratch_249*scratch_585 - scratch_250*scratch_586 - scratch_251*scratch_587 - scratch_252*scratch_588 - scratch_253*scratch_589;
    double scratch_591 = scratch_277 - scratch_278*scratch_61 - scratch_279*scratch_583 - scratch_280*scratch_584 - scratch_281*scratch_585 - scratch_282*scratch_586 - scratch_283*scratch_587 - scratch_284*scratch_588 - scratch_285*scratch_589 - scratch_286*scratch_590;
    double scratch_592 = scratch_311 - scratch_312*scratch_61 - scratch_313*scratch_583 - scratch_314*scratch_584 - scratch_315*scratch_585 - scratch_316*scratch_586 - scratch_317*scratch_587 - scratch_318*scratch_588 - scratch_319*scratch_589 - scratch_320*scratch_590 - scratch_321*scratch_591;
    double scratch_593 = scratch_347 - scratch_348*scratch_61 - scratch_349*scratch_583 - scratch_350*scratch_584 - scratch_351*scratch_585 - scratch_352*scratch_586 - scratch_353*scratch_587 - scratch_354*scratch_588 - scratch_355*scratch_589 - scratch_356*scratch_590 - scratch_357*scratch_591 - scratch_358*scratch_592;
    double scratch_594 = scratch_385 - scratch_386*scratch_61 - scratch_387*scratch_583 - scratch_388*scratch_584 - scratch_389*scratch_585 - scratch_390*scratch_586 - scratch_391*scratch_587 - scratch_392*scratch_588 - scratch_393*scratch_589 - scratch_394*scratch_590 - scratch_395*scratch_591 - scratch_396*scratch_592 - scratch_397*scratch_593;
    double scratch_595 = scratch_425 - scratch_426*scratch_61 - scratch_427*scratch_583 - scratch_428*scratch_584 - scratch_429*scratch_585 - scratch_430*scratch_586 - scratch_431*scratch_587 - scratch_432*scratch_588 - scratch_433*scratch_589 - scratch_434*scratch_590 - scratch_435*scratch_591 - scratch_436*scratch_592 - scratch_437*scratch_593 - scratch_438*scratch_594;
    double scratch_596 = -scratch_78*scratch_97 + scratch_96;
    double scratch_597 = scratch_116 - scratch_117*scratch_78 - scratch_118*scratch_596;
    double scratch_598 = scratch_138 - scratch_139*scratch_78 - scratch_140*scratch_596 - scratch_141*scratch_597;
    double scratch_599 = scratch_162 - scratch_163*scratch_78 - scratch_164*scratch_596 - scratch_165*scratch_597 - scratch_166*scratch_598;
    double scratch_600 = scratch_188 - scratch_189*scratch_78 - scratch_190*scratch_596 - scratch_191*scratch_597 - scratch_192*scratch_598 - scratch_193*scratch_599;
    double scratch_601 = scratch_216 - scratch_217*scratch_78 - scratch_218*scratch_596 - scratch_219*scratch_597 - scratch_220*scratch_598 - scratch_221*scratch_599 - scratch_222*scratch_600;
    double scratch_602 = scratch_246 - scratch_247*scratch_78 - scratch_248*scratch_596 - scratch_249*scratch_597 - scratch_250*scratch_598 - scratch_251*scratch_599 - scratch_252*scratch_600 - scratch_253*scratch_601;
    double scratch_603 = scratch_278 - scratch_279*scratch_78 - scratch_280*scratch_596 - scratch_281*scratch_597 - scratch_282*scratch_598 - scratch_283*scratch_599 - scratch_284*scratch_600 - scratch_285*scratch_601 - scratch_286*scratch_602;
    double scratch_604 = scratch_312 - scratch_313*scratch_78 - scratch_314*scratch_596 - scratch_315*scratch_597 - scratch_316*scratch_598 - scratch_317*scratch_599 - scratch_318*scratch_600 - scratch_319*scratch_601 - scratch_320*scratch_602 - scratch_321*scratch_603;
    double scratch_605 = scratch_348 - scratch_349*scratch_78 - scratch_350*scratch_596 - scratch_351*scratch_597 - scratch_352*scratch_598 - scratch_353*scratch_599 - scratch_354*scratch_600 - scratch_355*scratch_601 - scratch_356*scratch_602 - scratch_357*scratch_603 - scratch_358*scratch_604;
    double scratch_606 = scratch_386 - scratch_387*scratch_78 - scratch_388*scratch_596 - scratch_389*scratch_597 - scratch_390*scratch_598 - scratch_391*scratch_599 - scratch_392*scratch_600 - scratch_393*scratch_601 - scratch_394*scratch_602 - scratch_395*scratch_603 - scratch_396*scratch_604 - scratch_397*scratch_605;
    double scratch_607 = scratch_426 - scratch_427*scratch_78 - scratch_428*scratch_596 - scratch_429*scratch_597 - scratch_430*scratch_598 - scratch_431*scratch_599 - scratch_432*scratch_600 - scratch_433*scratch_601 - scratch_434*scratch_602 - scratch_435*scratch_603 - scratch_436*scratch_604 - scratch_437*scratch_605 - scratch_438*scratch_606;
    double scratch_608 = scratch_117 - scratch_118*scratch_97;
    double scratch_609 = scratch_139 - scratch_140*scratch_97 - scratch_141*scratch_608;
    double scratch_610 = scratch_163 - scratch_164*scratch_97 - scratch_165*scratch_608 - scratch_166*scratch_609;
    double scratch_611 = scratch_189 - scratch_190*scratch_97 - scratch_191*scratch_608 - scratch_192*scratch_609 - scratch_193*scratch_610;
    double scratch_612 = scratch_217 - scratch_218*scratch_97 - scratch_219*scratch_608 - scratch_220*scratch_609 - scratch_221*scratch_610 - scratch_222*scratch_611;
    double scratch_613 = scratch_247 - scratch_248*scratch_97 - scratch_249*scratch_608 - scratch_250*scratch_609 - scratch_251*scratch_610 - scratch_252*scratch_611 - scratch_253*scratch_612;
    double scratch_614 = scratch_279 - scratch_280*scratch_97 - scratch_281*scratch_608 - scratch_282*scratch_609 - scratch_283*scratch_610 - scratch_284*scratch_611 - scratch_285*scratch_612 - scratch_286*scratch_613;
    double scratch_615 = scratch_313 - scratch_314*scratch_97 - scratch_315*scratch_608 - scratch_316*scratch_609 - scratch_317*scratch_610 - scratch_318*scratch_611 - scratch_319*scratch_612 - scratch_320*scratch_613 - scratch_321*scratch_614;
    double scratch_616 = scratch_349 - scratch_350*scratch_97 - scratch_351*scratch_608 - scratch_352*scratch_609 - scratch_353*scratch_610 - scratch_354*scratch_611 - scratch_355*scratch_612 - scratch_356*scratch_613 - scratch_357*scratch_614 - scratch_358*scratch_615;
    double scratch_617 = scratch_387 - scratch_388*scratch_97 - scratch_389*scratch_608 - scratch_390*scratch_609 - scratch_391*scratch_610 - scratch_392*scratch_611 - scratch_393*scratch_612 - scratch_394*scratch_613 - scratch_395*scratch_614 - scratch_396*scratch_615 - scratch_397*scratch_616;
    double scratch_618 = scratch_427 - scratch_428*scratch_97 - scratch_429*scratch_608 - scratch_430*scratch_609 - scratch_431*scratch_610 - scratch_432*scratch_611 - scratch_433*scratch_612 - scratch_434*scratch_613 - scratch_435*scratch_614 - scratch_436*scratch_615 - scratch_437*scratch_616 - scratch_438*scratch_617;
    double scratch_619 = -scratch_118*scratch_141 + scratch_140;
    double scratch_620 = -scratch_118*scratch_165 + scratch_164 - scratch_166*scratch_619;
    double scratch_621 = -scratch_118*scratch_191 + scratch_190 - scratch_192*scratch_619 - scratch_193*scratch_620;
    double scratch_622 = -scratch_118*scratch_219 + scratch_218 - scratch_220*scratch_619 - scratch_221*scratch_620 - scratch_222*scratch_621;
    double scratch_623 = -scratch_118*scratch_249 + scratch_248 - scratch_250*scratch_619 - scratch_251*scratch_620 - scratch_252*scratch_621 - scratch_253*scratch_622;
    double scratch_624 = -scratch_118*scratch_281 + scratch_280 - scratch_282*scratch_619 - scratch_283*scratch_620 - scratch_284*scratch_621 - scratch_285*scratch_622 - scratch_286*scratch_623;
    double scratch_625 = -scratch_118*scratch_315 + scratch_314 - scratch_316*scratch_619 - scratch_317*scratch_620 - scratch_318*scratch_621 - scratch_319*scratch_622 - scratch_320*scratch_623 - scratch_321*scratch_624;
    double scratch_626 = -scratch_118*scratch_351 + scratch_350 - scratch_352*scratch_619 - scratch_353*scratch_620 - scratch_354*scratch_621 - scratch_355*scratch_622 - scratch_356*scratch_623 - scratch_357*scratch_624 - scratch_358*scratch_625;
    double scratch_627 = -scratch_118*scratch_389 + scratch_388 - scratch_390*scratch_619 - scratch_391*scratch_620 - scratch_392*scratch_621 - scratch_393*scratch_622 - scratch_394*scratch_623 - scratch_395*scratch_624 - scratch_396*scratch_625 - scratch_397*scratch_626;
    double scratch_628 = -scratch_118*scratch_429 + scratch_428 - scratch_430*scratch_619 - scratch_431*scratch_620 - scratch_432*scratch_621 - scratch_433*scratch_622 - scratch_434*scratch_623 - scratch_435*scratch_624 - scratch_436*scratch_625 - scratch_437*scratch_626 - scratch_438*scratch_627;
    double scratch_629 = -scratch_141*scratch_166 + scratch_165;
    double scratch_630 = -scratch_141*scratch_192 + scratch_191 - scratch_193*scratch_629;
    double scratch_631 = -scratch_141*scratch_220 + scratch_219 - scratch_221*scratch_629 - scratch_222*scratch_630;
    double scratch_632 = -scratch_141*scratch_250 + scratch_249 - scratch_251*scratch_629 - scratch_252*scratch_630 - scratch_253*scratch_631;
    double scratch_633 = -scratch_141*scratch_282 + scratch_281 - scratch_283*scratch_629 - scratch_284*scratch_630 - scratch_285*scratch_631 - scratch_286*scratch_632;
    double scratch_634 = -scratch_141*scratch_316 + scratch_315 - scratch_317*scratch_629 - scratch_318*scratch_630 - scratch_319*scratch_631 - scratch_320*scratch_632 - scratch_321*scratch_633;
    double scratch_635 = -scratch_141*scratch_352 + scratch_351 - scratch_353*scratch_629 - scratch_354*scratch_630 - scratch_355*scratch_631 - scratch_356*scratch_632 - scratch_357*scratch_633 - scratch_358*scratch_634;
    double scratch_636 = -scratch_141*scratch_390 + scratch_389 - scratch_391*scratch_629 - scratch_392*scratch_630 - scratch_393*scratch_631 - scratch_394*scratch_632 - scratch_395*scratch_633 - scratch_396*scratch_634 - scratch_397*scratch_635;
    double scratch_637 = -scratch_141*scratch_430 + scratch_429 - scratch_431*scratch_629 - scratch_432*scratch_630 - scratch_433*scratch_631 - scratch_434*scratch_632 - scratch_435*scratch_633 - scratch_436*scratch_634 - scratch_437*scratch_635 - scratch_438*scratch_636;
    double scratch_638 = -scratch_166*scratch_193 + scratch_192;
    double scratch_639 = -scratch_166*scratch_221 + scratch_220 - scratch_222*scratch_638;
    double scratch_640 = -scratch_166*scratch_251 + scratch_250 - scratch_252*scratch_638 - scratch_253*scratch_639;
    double scratch_641 = -scratch_166*scratch_283 + scratch_282 - scratch_284*scratch_638 - scratch_285*scratch_639 - scratch_286*scratch_640;
    double scratch_642 = -scratch_166*scratch_317 + scratch_316 - scratch_318*scratch_638 - scratch_319*scratch_639 - scratch_320*scratch_640 - scratch_321*scratch_641;
    double scratch_643 = -scratch_166*scratch_353 + scratch_352 - scratch_354*scratch_638 - scratch_355*scratch_639 - scratch_356*scratch_640 - scratch_357*scratch_641 - scratch_358*scratch_642;
    double scratch_644 = -scratch_166*scratch_391 + scratch_390 - scratch_392*scratch_638 - scratch_393*scratch_639 - scratch_394*scratch_640 - scratch_395*scratch_641 - scratch_396*scratch_642 - scratch_397*scratch_643;
    double scratch_645 = -scratch_166*scratch_431 + scratch_430 - scratch_432*scratch_638 - scratch_433*scratch_639 - scratch_434*scratch_640 - scratch_435*scratch_641 - scratch_436*scratch_642 - scratch_437*scratch_643 - scratch_438*scratch_644;
    double scratch_646 = -scratch_193*scratch_222 + scratch_221;
    double scratch_647 = -scratch_193*scratch_252 + scratch_251 - scratch_253*scratch_646;
    double scratch_648 = -scratch_193*scratch_284 + scratch_283 - scratch_285*scratch_646 - scratch_286*scratch_647;
    double scratch_649 = -scratch_193*scratch_318 + scratch_317 - scratch_319*scratch_646 - scratch_320*scratch_647 - scratch_321*scratch_648;
    double scratch_650 = -scratch_193*scratch_354 + scratch_353 - scratch_355*scratch_646 - scratch_356*scratch_647 - scratch_357*scratch_648 - scratch_358*scratch_649;
    double scratch_651 = -scratch_193*scratch_392 + scratch_391 - scratch_393*scratch_646 - scratch_394*scratch_647 - scratch_395*scratch_648 - scratch_396*scratch_649 - scratch_397*scratch_650;
    double scratch_652 = -scratch_193*scratch_432 + scratch_431 - scratch_433*scratch_646 - scratch_434*scratch_647 - scratch_435*scratch_648 - scratch_436*scratch_649 - scratch_437*scratch_650 - scratch_438*scratch_651;
    double scratch_653 = -scratch_222*scratch_253 + scratch_252;
    double scratch_654 = -scratch_222*scratch_285 + scratch_284 - scratch_286*scratch_653;
    double scratch_655 = -scratch_222*scratch_319 + scratch_318 - scratch_320*scratch_653 - scratch_321*scratch_654;
    double scratch_656 = -scratch_222*scratch_355 + scratch_354 - scratch_356*scratch_653 - scratch_357*scratch_654 - scratch_358*scratch_655;
    double scratch_657 = -scratch_222*scratch_393 + scratch_392 - scratch_394*scratch_653 - scratch_395*scratch_654 - scratch_396*scratch_655 - scratch_397*scratch_656;
    double scratch_658 = -scratch_222*scratch_433 + scratch_432 - scratch_434*scratch_653 - scratch_435*scratch_654 - scratch_436*scratch_655 - scratch_437*scratch_656 - scratch_438*scratch_657;
    double scratch_659 = -scratch_253*scratch_286 + scratch_285;
    double scratch_660 = -scratch_253*scratch_320 + scratch_319 - scratch_321*scratch_659;
    double scratch_661 = -scratch_253*scratch_356 + scratch_355 - scratch_357*scratch_659 - scratch_358*scratch_660;
    double scratch_662 = -scratch_253*scratch_394 + scratch_393 - scratch_395*scratch_659 - scratch_396*scratch_660 - scratch_397*scratch_661;
    double scratch_663 = -scratch_253*scratch_434 + scratch_433 - scratch_435*scratch_659 - scratch_436*scratch_660 - scratch_437*scratch_661 - scratch_438*scratch_662;
    double scratch_664 = -scratch_286*scratch_321 + scratch_320;
    double scratch_665 = -scratch_286*scratch_357 + scratch_356 - scratch_358*scratch_664;
    double scratch_666 = -scratch_286*scratch_395 + scratch_394 - scratch_396*scratch_664 - scratch_397*scratch_665;
    double scratch_667 = -scratch_286*scratch_435 + scratch_434 - scratch_436*scratch_664 - scratch_437*scratch_665 - scratch_438*scratch_666;
    double scratch_668 = -scratch_321*scratch_358 + scratch_357;
    double scratch_669 = -scratch_321*scratch_396 + scratch_395 - scratch_397*scratch_668;
    double scratch_670 = -scratch_321*scratch_436 + scratch_435 - scratch_437*scratch_668 - scratch_438*scratch_669;
    double scratch_671 = -scratch_358*scratch_397 + scratch_396;
    double scratch_672 = -scratch_358*scratch_437 + scratch_436 - scratch_438*scratch_671;
    double scratch_673 = -scratch_397*scratch_438 + scratch_437;

    x[0] = scratch_1 - scratch_10*scratch_6 - scratch_108*scratch_98 - scratch_119*scratch_130 - scratch_14*scratch_18 - scratch_142*scratch_154 - scratch_167*scratch_180 - scratch_194*scratch_208 - scratch_223*scratch_238 - scratch_23*scratch_28 - scratch_254*scratch_270 - scratch_287*scratch_304 - scratch_3*scratch_9 - scratch_322*scratch_340 - scratch_34*scratch_40 - scratch_359*scratch_378 - scratch_398*scratch_418 - scratch_439*scratch_460 - scratch_47*scratch_54 - scratch_502*(-scratch_119*scratch_471 - scratch_14*scratch_464 - scratch_142*scratch_472 - scratch_167*scratch_473 - scratch_194*scratch_474 - scratch_223*scratch_475 - scratch_23*scratch_465 - scratch_254*scratch_476 - scratch_287*scratch_477 - scratch_3*scratch_462 - scratch_322*scratch_478 - scratch_34*scratch_466 - scratch_359*scratch_479 - scratch_398*scratch_480 - scratch_439*scratch_481 + scratch_461 - scratch_463*scratch_6 - scratch_467*scratch_47 - scratch_468*scratch_62 - scratch_469*scratch_79 - scratch_470*scratch_98) - scratch_62*scratch_70 - scratch_79*scratch_88;
    x[1] = -scratch_10*scratch_5 - scratch_108*scratch_509 - scratch_130*scratch_510 - scratch_154*scratch_511 - scratch_18*scratch_503 - scratch_180*scratch_512 - scratch_208*scratch_513 - scratch_238*scratch_514 - scratch_270*scratch_515 - scratch_28*scratch_504 - scratch_304*scratch_516 - scratch_340*scratch_517 - scratch_378*scratch_518 - scratch_40*scratch_505 - scratch_418*scratch_519 - scratch_460*scratch_520 - scratch_502*(scratch_462 - scratch_463*scratch_5 - scratch_464*scratch_503 - scratch_465*scratch_504 - scratch_466*scratch_505 - scratch_467*scratch_506 - scratch_468*scratch_507 - scratch_469*scratch_508 - scratch_470*scratch_509 - scratch_471*scratch_510 - scratch_472*scratch_511 - scratch_473*scratch_512 - scratch_474*scratch_513 - scratch_475*scratch_514 - scratch_476*scratch_515 - scratch_477*scratch_516 - scratch_478*scratch_517 - scratch_479*scratch_518 - scratch_480*scratch_519 - scratch_481*scratch_520) - scratch_506*scratch_54 - scratch_507*scratch_70 - scratch_508*scratch_88 + scratch_9;
    x[2] = scratch_10 - scratch_108*scratch_526 - scratch_13*scratch_18 - scratch_130*scratch_527 - scratch_154*scratch_528 - scratch_180*scratch_529 - scratch_208*scratch_530 - scratch_238*scratch_531 - scratch_270*scratch_532 - scratch_28*scratch_521 - scratch_304*scratch_533 - scratch_340*scratch_534 - scratch_378*scratch_535 - scratch_40*scratch_522 - scratch_418*scratch_536 - scratch_460*scratch_537 - scratch_502*(-scratch_13*scratch_464 + scratch_463 - scratch_465*scratch_521 - scratch_466*scratch_522 - scratch_467*scratch_523 - scratch_468*scratch_524 - scratch_469*scratch_525 - scratch_470*scratch_526 - scratch_471*scratch_527 - scratch_472*scratch_528 - scratch_473*scratch_529 - scratch_474*scratch_530 - scratch_475*scratch_531 - scratch_476*scratch_532 - scratch_477*scratch_533 - scratch_478*scratch_534 - scratch_479*scratch_535 - scratch_480*scratch_536 - scratch_481*scratch_537) - scratch_523*scratch_54 - scratch_524*scratch_70 - scratch_525*scratch_88;
    x[3] = -scratch_108*scratch_542 - scratch_130*scratch_543 - scratch_154*scratch_544 + scratch_18 - scratch_180*scratch_545 - scratch_208*scratch_546 - scratch_22*scratch_28 - scratch_238*scratch_547 - scratch_270*scratch_548 - scratch_304*scratch_549 - scratch_340*scratch_550 - scratch_378*scratch_551 - scratch_40*scratch_538 - scratch_418*scratch_552 - scratch_460*scratch_553 - scratch_502*(-scratch_22*scratch_465 + scratch_464 - scratch_466*scratch_538 - scratch_467*scratch_539 - scratch_468*scratch_540 - scratch_469*scratch_541 - scratch_470*scratch_542 - scratch_471*scratch_543 - scratch_472*scratch_544 - scratch_473*scratch_545 - scratch_474*scratch_546 - scratch_475*scratch_547 - scratch_476*scratch_548 - scratch_477*scratch_549 - scratch_478*scratch_550 - scratch_479*scratch_551 - scratch_480*scratch_552 - scratch_481*scratch_553) - scratch_539*scratch_54 - scratch_540*scratch_70 - scratch_541*scratch_88;
    x[4] = -scratch_108*scratch_557 - scratch_130*scratch_558 - scratch_154*scratch_559 - scratch_180*scratch_560 - scratch_208*scratch_561 - scratch_238*scratch_562 - scratch_270*scratch_563 + scratch_28 - scratch_304*scratch_564 - scratch_33*scratch_40 - scratch_340*scratch_565 - scratch_378*scratch_566 - scratch_418*scratch_567 - scratch_460*scratch_568 - scratch_502*(-scratch_33*scratch_466 + scratch_465 - scratch_467*scratch_554 - scratch_468*scratch_555 - scratch_469*scratch_556 - scratch_470*scratch_557 - scratch_471*scratch_558 - scratch_472*scratch_559 - scratch_473*scratch_560 - scratch_474*scratch_561 - scratch_475*scratch_562 - scratch_476*scratch_563 - scratch_477*scratch_564 - scratch_478*scratch_565 - scratch_479*scratch_566 - scratch_480*scratch_567 - scratch_481*scratch_568) - scratch_54*scratch_554 - scratch_555*scratch_70 - scratch_556*scratch_88;
    x[5] = -scratch_108*scratch_571 - scratch_130*scratch_572 - scratch_154*scratch_573 - scratch_180*scratch_574 - scratch_208*scratch_575 - scratch_238*scratch_576 - scratch_270*scratch_577 - scratch_304*scratch_578 - scratch_340*scratch_579 - scratch_378*scratch_580 + scratch_40 - scratch_418*scratch_581 - scratch_46*scratch_54 - scratch_460*scratch_582 - scratch_502*(-scratch_46*scratch_467 + scratch_466 - scratch_468*scratch_569 - scratch_469*scratch_570 - scratch_470*scratch_571 - scratch_471*scratch_572 - scratch_472*scratch_573 - scratch_473*scratch_574 - scratch_474*scratch_575 - scratch_475*scratch_576 - scratch_476*scratch_577 - scratch_477*scratch_578 - scratch_478*scratch_579 - scratch_479*scratch_580 - scratch_480*scratch_581 - scratch_481*scratch_582) - scratch_569*scratch_70 - scratch_570*scratch_88;
    x[6] = -scratch_108*scratch_584 - scratch_130*scratch_585 - scratch_154*scratch_586 - scratch_180*scratch_587 - scratch_208*scratch_588 - scratch_238*scratch_589 - scratch_270*scratch_590 - scratch_304*scratch_591 - scratch_340*scratch_592 - scratch_378*scratch_593 - scratch_418*scratch_594 - scratch_460*scratch_595 - scratch_502*(scratch_467 - scratch_468*scratch_61 - scratch_469*scratch_583 - scratch_470*scratch_584 - scratch_471*scratch_585 - scratch_472*scratch_586 - scratch_473*scratch_587 - scratch_474*scratch_588 - scratch_475*scratch_589 - scratch_476*scratch_590 - scratch_477*scratch_591 - scratch_478*scratch_592 - scratch_479*scratch_593 - scratch_480*scratch_594 - scratch_481*scratch_595) + scratch_54 - scratch_583*scratch_88 - scratch_61*scratch_70;
    x[7] = -scratch_108*scratch_596 - scratch_130*scratch_597 - scratch_154*scratch_598 - scratch_180*scratch_599 - scratch_208*scratch_600 - scratch_238*scratch_601 - scratch_270*scratch_602 - scratch_304*scratch_603 - scratch_340*scratch_604 - scratch_378*scratch_605 - scratch_418*scratch_606 - scratch_460*scratch_607 - scratch_502*(scratch_468 - scratch_469*scratch_78 - scratch_470*scratch_596 - scratch_471*scratch_597 - scratch_472*scratch_598 - scratch_473*scratch_599 - scratch_474*scratch_600 - scratch_475*scratch_601 - scratch_476*scratch_602 - scratch_477*scratch_603 - scratch_478*scratch_604 - scratch_479*scratch_605 - scratch_480*scratch_606 - scratch_481*scratch_607) + scratch_70 - scratch_78*scratch_88;
    x[8] = -scratch_108*scratch_97 - scratch_130*scratch_608 - scratch_154*scratch_609 - scratch_180*scratch_610 - scratch_208*scratch_611 - scratch_238*scratch_612 - scratch_270*scratch_613 - scratch_304*scratch_614 - scratch_340*scratch_615 - scratch_378*scratch_616 - scratch_418*scratch_617 - scratch_460*scratch_618 - scratch_502*(scratch_469 - scratch_470*scratch_97 - scratch_471*scratch_608 - scratch_472*scratch_609 - scratch_473*scratch_610 - scratch_474*scratch_611 - scratch_475*scratch_612 - scratch_476*scratch_613 - scratch_477*scratch_614 - scratch_478*scratch_615 - scratch_479*scratch_616 - scratch_480*scratch_617 - scratch_481*scratch_618) + scratch_88;
    x[9] = scratch_108 - scratch_118*scratch_130 - scratch_154*scratch_619 - scratch_180*scratch_620 - scratch_208*scratch_621 - scratch_238*scratch_622 - scratch_270*scratch_623 - scratch_304*scratch_624 - scratch_340*scratch_625 - scratch_378*scratch_626 - scratch_418*scratch_627 - scratch_460*scratch_628 - scratch_502*(-scratch_118*scratch_471 + scratch_470 - scratch_472*scratch_619 - scratch_473*scratch_620 - scratch_474*scratch_621 - scratch_475*scratch_622 - scratch_476*scratch_623 - scratch_477*scratch_624 - scratch_478*scratch_625 - scratch_479*scratch_626 - scratch_480*scratch_627 - scratch_481*scratch_628);
    x[10] = scratch_130 - scratch_141*scratch_154 - scratch_180*scratch_629 - scratch_208*scratch_630 - scratch_238*scratch_631 - scratch_270*scratch_632 - scratch_304*scratch_633 - scratch_340*scratch_634 - scratch_378*scratch_635 - scratch_418*scratch_636 - scratch_460*scratch_637 - scratch_502*(-scratch_141*scratch_472 + scratch_471 - scratch_473*scratch_629 - scratch_474*scratch_630 - scratch_475*scratch_631 - scratch_476*scratch_632 - scratch_477*scratch_633 - scratch_478*scratch_634 - scratch_479*scratch_635 - scratch_480*scratch_636 - scratch_481*scratch_637);
    x[11] = scratch_154 - scratch_166*scratch_180 - scratch_208*scratch_638 - scratch_238*scratch_639 - scratch_270*scratch_640 - scratch_304*scratch_641 - scratch_340*scratch_642 - scratch_378*scratch_643 - scratch_418*scratch_644 - scratch_460*scratch_645 - scratch_502*(-scratch_166*scratch_473 + scratch_472 - scratch_474*scratch_638 - scratch_475*scratch_639 - scratch_476*scratch_640 - scratch_477*scratch_641 - scratch_478*scratch_642 - scratch_479*scratch_643 - scratch_480*scratch_644 - scratch_481*scratch_645);
    x[12] = scratch_180 - scratch_193*scratch_208 - scratch_238*scratch_646 - scratch_270*scratch_647 - scratch_304*scratch_648 - scratch_340*scratch_649 - scratch_378*scratch_650 - scratch_418*scratch_651 - scratch_460*scratch_652 - scratch_502*(-scratch_193*scratch_474 + scratch_473 - scratch_475*scratch_646 - scratch_476*scratch_647 - scratch_477*scratch_648 - scratch_478*scratch_649 - scratch_479*scratch_650 - scratch_480*scratch_651 - scratch_481*scratch_652);
    x[13] = scratch_208 - scratch_222*scratch_238 - scratch_270*scratch_653 - scratch_304*scratch_654 - scratch_340*scratch_655 - scratch_378*scratch_656 - scratch_418*scratch_657 - scratch_460*scratch_658 - scratch_502*(-scratch_222*scratch_475 + scratch_474 - scratch_476*scratch_653 - scratch_477*scratch_654 - scratch_478*scratch_655 - scratch_479*scratch_656 - scratch_480*scratch_657 - scratch_481*scratch_658);
    x[14] = scratch_238 - scratch_253*scratch_270 - scratch_304*scratch_659 - scratch_340*scratch_660 - scratch_378*scratch_661 - scratch_418*scratch_662 - scratch_460*scratch_663 - scratch_502*(-scratch_253*scratch_476 + scratch_475 - scratch_477*scratch_659 - scratch_478*scratch_660 - scratch_479*scratch_661 - scratch_480*scratch_662 - scratch_481*scratch_663);
    x[15] = scratch_270 - scratch_286*scratch_304 - scratch_340*scratch_664 - scratch_378*scratch_665 - scratch_418*scratch_666 - scratch_460*scratch_667 - scratch_502*(-scratch_286*scratch_477 + scratch_476 - scratch_478*scratch_664 - scratch_479*scratch_665 - scratch_480*scratch_666 - scratch_481*scratch_667);
    x[16] = scratch_304 - scratch_321*scratch_340 - scratch_378*scratch_668 - scratch_418*scratch_669 - scratch_460*scratch_670 - scratch_502*(-scratch_321*scratch_478 + scratch_477 - scratch_479*scratch_668 - scratch_480*scratch_669 - scratch_481*scratch_670);
    x[17] = scratch_340 - scratch_358*scratch_378 - scratch_418*scratch_671 - scratch_460*scratch_672 - scratch_502*(-scratch_358*scratch_479 + scratch_478 - scratch_480*scratch_671 - scratch_481*scratch_672);
    x[18] = scratch_378 - scratch_397*scratch_418 - scratch_460*scratch_673 - scratch_502*(-scratch_397*scratch_480 + scratch_479 - scratch_481*scratch_673);
    x[19] = scratch_418 - scratch_438*scratch_460 - scratch_502*(-scratch_438*scratch_481 + scratch_480);
    x[20] = scratch_460 - scratch_481*scratch_502;
    x[21] = scratch_502;
}

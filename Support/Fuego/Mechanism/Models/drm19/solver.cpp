#include "chemistry_file.H"

AMREX_GPU_HOST_DEVICE void sgjsolve(double* A, double* x, double* b) {
    double scratch_0 = 1.0/A[0];
    double scratch_1 = b[0]*scratch_0;
    double scratch_2 = A[19]*scratch_0;
    double scratch_3 = A[2]*scratch_0;
    double scratch_4 = A[1]*scratch_0;
    double scratch_5 = 1.0/(-A[22]*scratch_4 + A[23]);
    double scratch_6 = scratch_5*(-A[22]*scratch_3 + A[24]);
    double scratch_7 = scratch_3 - scratch_4*scratch_6;
    double scratch_8 = -A[44]*scratch_4 + A[45];
    double scratch_9 = 1.0/(-A[44]*scratch_3 + A[46] - scratch_6*scratch_8);
    double scratch_10 = scratch_5*(-A[22]*scratch_2 + A[41]);
    double scratch_11 = scratch_9*(-A[44]*scratch_2 + A[63] - scratch_10*scratch_8);
    double scratch_12 = A[3]*scratch_0;
    double scratch_13 = scratch_5*(-A[22]*scratch_12 + A[25]);
    double scratch_14 = scratch_9*(-A[44]*scratch_12 + A[47] - scratch_13*scratch_8);
    double scratch_15 = scratch_12 - scratch_13*scratch_4 - scratch_14*scratch_7;
    double scratch_16 = -A[66]*scratch_4 + A[67];
    double scratch_17 = -A[66]*scratch_3 + A[68] - scratch_16*scratch_6;
    double scratch_18 = 1.0/(-A[66]*scratch_12 + A[69] - scratch_13*scratch_16 - scratch_14*scratch_17);
    double scratch_19 = scratch_18*(-A[66]*scratch_2 + A[85] - scratch_10*scratch_16 - scratch_11*scratch_17);
    double scratch_20 = A[4]*scratch_0;
    double scratch_21 = scratch_5*(-A[22]*scratch_20 + A[26]);
    double scratch_22 = scratch_9*(-A[44]*scratch_20 + A[48] - scratch_21*scratch_8);
    double scratch_23 = scratch_18*(-A[66]*scratch_20 + A[70] - scratch_16*scratch_21 - scratch_17*scratch_22);
    double scratch_24 = -scratch_15*scratch_23 + scratch_20 - scratch_21*scratch_4 - scratch_22*scratch_7;
    double scratch_25 = -A[88]*scratch_4 + A[89];
    double scratch_26 = -A[88]*scratch_3 + A[90] - scratch_25*scratch_6;
    double scratch_27 = -A[88]*scratch_12 + A[91] - scratch_13*scratch_25 - scratch_14*scratch_26;
    double scratch_28 = 1.0/(-A[88]*scratch_20 + A[92] - scratch_21*scratch_25 - scratch_22*scratch_26 - scratch_23*scratch_27);
    double scratch_29 = scratch_28*(A[107] - A[88]*scratch_2 - scratch_10*scratch_25 - scratch_11*scratch_26 - scratch_19*scratch_27);
    double scratch_30 = A[5]*scratch_0;
    double scratch_31 = scratch_5*(-A[22]*scratch_30 + A[27]);
    double scratch_32 = scratch_9*(-A[44]*scratch_30 + A[49] - scratch_31*scratch_8);
    double scratch_33 = scratch_18*(-A[66]*scratch_30 + A[71] - scratch_16*scratch_31 - scratch_17*scratch_32);
    double scratch_34 = scratch_28*(-A[88]*scratch_30 + A[93] - scratch_25*scratch_31 - scratch_26*scratch_32 - scratch_27*scratch_33);
    double scratch_35 = -scratch_15*scratch_33 - scratch_24*scratch_34 + scratch_30 - scratch_31*scratch_4 - scratch_32*scratch_7;
    double scratch_36 = -A[110]*scratch_4 + A[111];
    double scratch_37 = -A[110]*scratch_3 + A[112] - scratch_36*scratch_6;
    double scratch_38 = -A[110]*scratch_12 + A[113] - scratch_13*scratch_36 - scratch_14*scratch_37;
    double scratch_39 = -A[110]*scratch_20 + A[114] - scratch_21*scratch_36 - scratch_22*scratch_37 - scratch_23*scratch_38;
    double scratch_40 = 1.0/(-A[110]*scratch_30 + A[115] - scratch_31*scratch_36 - scratch_32*scratch_37 - scratch_33*scratch_38 - scratch_34*scratch_39);
    double scratch_41 = scratch_40*(-A[110]*scratch_2 + A[129] - scratch_10*scratch_36 - scratch_11*scratch_37 - scratch_19*scratch_38 - scratch_29*scratch_39);
    double scratch_42 = A[6]*scratch_0;
    double scratch_43 = scratch_5*(-A[22]*scratch_42 + A[28]);
    double scratch_44 = scratch_9*(-A[44]*scratch_42 + A[50] - scratch_43*scratch_8);
    double scratch_45 = scratch_18*(-A[66]*scratch_42 + A[72] - scratch_16*scratch_43 - scratch_17*scratch_44);
    double scratch_46 = scratch_28*(-A[88]*scratch_42 + A[94] - scratch_25*scratch_43 - scratch_26*scratch_44 - scratch_27*scratch_45);
    double scratch_47 = scratch_40*(-A[110]*scratch_42 + A[116] - scratch_36*scratch_43 - scratch_37*scratch_44 - scratch_38*scratch_45 - scratch_39*scratch_46);
    double scratch_48 = -scratch_15*scratch_45 - scratch_24*scratch_46 - scratch_35*scratch_47 - scratch_4*scratch_43 + scratch_42 - scratch_44*scratch_7;
    double scratch_49 = -A[132]*scratch_4 + A[133];
    double scratch_50 = -A[132]*scratch_3 + A[134] - scratch_49*scratch_6;
    double scratch_51 = -A[132]*scratch_12 + A[135] - scratch_13*scratch_49 - scratch_14*scratch_50;
    double scratch_52 = -A[132]*scratch_20 + A[136] - scratch_21*scratch_49 - scratch_22*scratch_50 - scratch_23*scratch_51;
    double scratch_53 = -A[132]*scratch_30 + A[137] - scratch_31*scratch_49 - scratch_32*scratch_50 - scratch_33*scratch_51 - scratch_34*scratch_52;
    double scratch_54 = 1.0/(-A[132]*scratch_42 + A[138] - scratch_43*scratch_49 - scratch_44*scratch_50 - scratch_45*scratch_51 - scratch_46*scratch_52 - scratch_47*scratch_53);
    double scratch_55 = scratch_54*(-A[132]*scratch_2 + A[151] - scratch_10*scratch_49 - scratch_11*scratch_50 - scratch_19*scratch_51 - scratch_29*scratch_52 - scratch_41*scratch_53);
    double scratch_56 = A[7]*scratch_0;
    double scratch_57 = scratch_5*(-A[22]*scratch_56 + A[29]);
    double scratch_58 = scratch_9*(-A[44]*scratch_56 + A[51] - scratch_57*scratch_8);
    double scratch_59 = scratch_18*(-A[66]*scratch_56 + A[73] - scratch_16*scratch_57 - scratch_17*scratch_58);
    double scratch_60 = scratch_28*(-A[88]*scratch_56 + A[95] - scratch_25*scratch_57 - scratch_26*scratch_58 - scratch_27*scratch_59);
    double scratch_61 = scratch_40*(-A[110]*scratch_56 + A[117] - scratch_36*scratch_57 - scratch_37*scratch_58 - scratch_38*scratch_59 - scratch_39*scratch_60);
    double scratch_62 = scratch_54*(-A[132]*scratch_56 + A[139] - scratch_49*scratch_57 - scratch_50*scratch_58 - scratch_51*scratch_59 - scratch_52*scratch_60 - scratch_53*scratch_61);
    double scratch_63 = -scratch_15*scratch_59 - scratch_24*scratch_60 - scratch_35*scratch_61 - scratch_4*scratch_57 - scratch_48*scratch_62 + scratch_56 - scratch_58*scratch_7;
    double scratch_64 = -A[154]*scratch_4 + A[155];
    double scratch_65 = -A[154]*scratch_3 + A[156] - scratch_6*scratch_64;
    double scratch_66 = -A[154]*scratch_12 + A[157] - scratch_13*scratch_64 - scratch_14*scratch_65;
    double scratch_67 = -A[154]*scratch_20 + A[158] - scratch_21*scratch_64 - scratch_22*scratch_65 - scratch_23*scratch_66;
    double scratch_68 = -A[154]*scratch_30 + A[159] - scratch_31*scratch_64 - scratch_32*scratch_65 - scratch_33*scratch_66 - scratch_34*scratch_67;
    double scratch_69 = -A[154]*scratch_42 + A[160] - scratch_43*scratch_64 - scratch_44*scratch_65 - scratch_45*scratch_66 - scratch_46*scratch_67 - scratch_47*scratch_68;
    double scratch_70 = 1.0/(-A[154]*scratch_56 + A[161] - scratch_57*scratch_64 - scratch_58*scratch_65 - scratch_59*scratch_66 - scratch_60*scratch_67 - scratch_61*scratch_68 - scratch_62*scratch_69);
    double scratch_71 = scratch_70*(-A[154]*scratch_2 + A[173] - scratch_10*scratch_64 - scratch_11*scratch_65 - scratch_19*scratch_66 - scratch_29*scratch_67 - scratch_41*scratch_68 - scratch_55*scratch_69);
    double scratch_72 = A[8]*scratch_0;
    double scratch_73 = scratch_5*(-A[22]*scratch_72 + A[30]);
    double scratch_74 = scratch_9*(-A[44]*scratch_72 + A[52] - scratch_73*scratch_8);
    double scratch_75 = scratch_18*(-A[66]*scratch_72 + A[74] - scratch_16*scratch_73 - scratch_17*scratch_74);
    double scratch_76 = scratch_28*(-A[88]*scratch_72 + A[96] - scratch_25*scratch_73 - scratch_26*scratch_74 - scratch_27*scratch_75);
    double scratch_77 = scratch_40*(-A[110]*scratch_72 + A[118] - scratch_36*scratch_73 - scratch_37*scratch_74 - scratch_38*scratch_75 - scratch_39*scratch_76);
    double scratch_78 = scratch_54*(-A[132]*scratch_72 + A[140] - scratch_49*scratch_73 - scratch_50*scratch_74 - scratch_51*scratch_75 - scratch_52*scratch_76 - scratch_53*scratch_77);
    double scratch_79 = scratch_70*(-A[154]*scratch_72 + A[162] - scratch_64*scratch_73 - scratch_65*scratch_74 - scratch_66*scratch_75 - scratch_67*scratch_76 - scratch_68*scratch_77 - scratch_69*scratch_78);
    double scratch_80 = -scratch_15*scratch_75 - scratch_24*scratch_76 - scratch_35*scratch_77 - scratch_4*scratch_73 - scratch_48*scratch_78 - scratch_63*scratch_79 - scratch_7*scratch_74 + scratch_72;
    double scratch_81 = -A[176]*scratch_4 + A[177];
    double scratch_82 = -A[176]*scratch_3 + A[178] - scratch_6*scratch_81;
    double scratch_83 = -A[176]*scratch_12 + A[179] - scratch_13*scratch_81 - scratch_14*scratch_82;
    double scratch_84 = -A[176]*scratch_20 + A[180] - scratch_21*scratch_81 - scratch_22*scratch_82 - scratch_23*scratch_83;
    double scratch_85 = -A[176]*scratch_30 + A[181] - scratch_31*scratch_81 - scratch_32*scratch_82 - scratch_33*scratch_83 - scratch_34*scratch_84;
    double scratch_86 = -A[176]*scratch_42 - scratch_43*scratch_81 - scratch_44*scratch_82 - scratch_45*scratch_83 - scratch_46*scratch_84 - scratch_47*scratch_85;
    double scratch_87 = -A[176]*scratch_56 + A[182] - scratch_57*scratch_81 - scratch_58*scratch_82 - scratch_59*scratch_83 - scratch_60*scratch_84 - scratch_61*scratch_85 - scratch_62*scratch_86;
    double scratch_88 = 1.0/(-A[176]*scratch_72 + A[183] - scratch_73*scratch_81 - scratch_74*scratch_82 - scratch_75*scratch_83 - scratch_76*scratch_84 - scratch_77*scratch_85 - scratch_78*scratch_86 - scratch_79*scratch_87);
    double scratch_89 = scratch_88*(-A[176]*scratch_2 + A[191] - scratch_10*scratch_81 - scratch_11*scratch_82 - scratch_19*scratch_83 - scratch_29*scratch_84 - scratch_41*scratch_85 - scratch_55*scratch_86 - scratch_71*scratch_87);
    double scratch_90 = A[9]*scratch_0;
    double scratch_91 = scratch_5*(-A[22]*scratch_90 + A[31]);
    double scratch_92 = scratch_9*(-A[44]*scratch_90 + A[53] - scratch_8*scratch_91);
    double scratch_93 = scratch_18*(-A[66]*scratch_90 + A[75] - scratch_16*scratch_91 - scratch_17*scratch_92);
    double scratch_94 = scratch_28*(-A[88]*scratch_90 + A[97] - scratch_25*scratch_91 - scratch_26*scratch_92 - scratch_27*scratch_93);
    double scratch_95 = scratch_40*(-A[110]*scratch_90 + A[119] - scratch_36*scratch_91 - scratch_37*scratch_92 - scratch_38*scratch_93 - scratch_39*scratch_94);
    double scratch_96 = scratch_54*(-A[132]*scratch_90 + A[141] - scratch_49*scratch_91 - scratch_50*scratch_92 - scratch_51*scratch_93 - scratch_52*scratch_94 - scratch_53*scratch_95);
    double scratch_97 = scratch_70*(-A[154]*scratch_90 + A[163] - scratch_64*scratch_91 - scratch_65*scratch_92 - scratch_66*scratch_93 - scratch_67*scratch_94 - scratch_68*scratch_95 - scratch_69*scratch_96);
    double scratch_98 = scratch_88*(-A[176]*scratch_90 + A[184] - scratch_81*scratch_91 - scratch_82*scratch_92 - scratch_83*scratch_93 - scratch_84*scratch_94 - scratch_85*scratch_95 - scratch_86*scratch_96 - scratch_87*scratch_97);
    double scratch_99 = -scratch_15*scratch_93 - scratch_24*scratch_94 - scratch_35*scratch_95 - scratch_4*scratch_91 - scratch_48*scratch_96 - scratch_63*scratch_97 - scratch_7*scratch_92 - scratch_80*scratch_98 + scratch_90;
    double scratch_100 = -A[194]*scratch_4 + A[195];
    double scratch_101 = -A[194]*scratch_3 + A[196] - scratch_100*scratch_6;
    double scratch_102 = -A[194]*scratch_12 + A[197] - scratch_100*scratch_13 - scratch_101*scratch_14;
    double scratch_103 = -A[194]*scratch_20 + A[198] - scratch_100*scratch_21 - scratch_101*scratch_22 - scratch_102*scratch_23;
    double scratch_104 = -A[194]*scratch_30 + A[199] - scratch_100*scratch_31 - scratch_101*scratch_32 - scratch_102*scratch_33 - scratch_103*scratch_34;
    double scratch_105 = -A[194]*scratch_42 + A[200] - scratch_100*scratch_43 - scratch_101*scratch_44 - scratch_102*scratch_45 - scratch_103*scratch_46 - scratch_104*scratch_47;
    double scratch_106 = -A[194]*scratch_56 + A[201] - scratch_100*scratch_57 - scratch_101*scratch_58 - scratch_102*scratch_59 - scratch_103*scratch_60 - scratch_104*scratch_61 - scratch_105*scratch_62;
    double scratch_107 = -A[194]*scratch_72 + A[202] - scratch_100*scratch_73 - scratch_101*scratch_74 - scratch_102*scratch_75 - scratch_103*scratch_76 - scratch_104*scratch_77 - scratch_105*scratch_78 - scratch_106*scratch_79;
    double scratch_108 = 1.0/(-A[194]*scratch_90 + A[203] - scratch_100*scratch_91 - scratch_101*scratch_92 - scratch_102*scratch_93 - scratch_103*scratch_94 - scratch_104*scratch_95 - scratch_105*scratch_96 - scratch_106*scratch_97 - scratch_107*scratch_98);
    double scratch_109 = scratch_108*(-A[194]*scratch_2 + A[213] - scratch_10*scratch_100 - scratch_101*scratch_11 - scratch_102*scratch_19 - scratch_103*scratch_29 - scratch_104*scratch_41 - scratch_105*scratch_55 - scratch_106*scratch_71 - scratch_107*scratch_89);
    double scratch_110 = A[10]*scratch_0;
    double scratch_111 = scratch_5*(-A[22]*scratch_110 + A[32]);
    double scratch_112 = scratch_9*(-A[44]*scratch_110 + A[54] - scratch_111*scratch_8);
    double scratch_113 = scratch_18*(-A[66]*scratch_110 + A[76] - scratch_111*scratch_16 - scratch_112*scratch_17);
    double scratch_114 = scratch_28*(-A[88]*scratch_110 + A[98] - scratch_111*scratch_25 - scratch_112*scratch_26 - scratch_113*scratch_27);
    double scratch_115 = scratch_40*(-A[110]*scratch_110 + A[120] - scratch_111*scratch_36 - scratch_112*scratch_37 - scratch_113*scratch_38 - scratch_114*scratch_39);
    double scratch_116 = scratch_54*(-A[132]*scratch_110 + A[142] - scratch_111*scratch_49 - scratch_112*scratch_50 - scratch_113*scratch_51 - scratch_114*scratch_52 - scratch_115*scratch_53);
    double scratch_117 = scratch_70*(-A[154]*scratch_110 + A[164] - scratch_111*scratch_64 - scratch_112*scratch_65 - scratch_113*scratch_66 - scratch_114*scratch_67 - scratch_115*scratch_68 - scratch_116*scratch_69);
    double scratch_118 = scratch_88*(-A[176]*scratch_110 + A[185] - scratch_111*scratch_81 - scratch_112*scratch_82 - scratch_113*scratch_83 - scratch_114*scratch_84 - scratch_115*scratch_85 - scratch_116*scratch_86 - scratch_117*scratch_87);
    double scratch_119 = scratch_108*(-A[194]*scratch_110 + A[204] - scratch_100*scratch_111 - scratch_101*scratch_112 - scratch_102*scratch_113 - scratch_103*scratch_114 - scratch_104*scratch_115 - scratch_105*scratch_116 - scratch_106*scratch_117 - scratch_107*scratch_118);
    double scratch_120 = scratch_110 - scratch_111*scratch_4 - scratch_112*scratch_7 - scratch_113*scratch_15 - scratch_114*scratch_24 - scratch_115*scratch_35 - scratch_116*scratch_48 - scratch_117*scratch_63 - scratch_118*scratch_80 - scratch_119*scratch_99;
    double scratch_121 = -A[216]*scratch_4 + A[217];
    double scratch_122 = -A[216]*scratch_3 + A[218] - scratch_121*scratch_6;
    double scratch_123 = -A[216]*scratch_12 + A[219] - scratch_121*scratch_13 - scratch_122*scratch_14;
    double scratch_124 = -A[216]*scratch_20 + A[220] - scratch_121*scratch_21 - scratch_122*scratch_22 - scratch_123*scratch_23;
    double scratch_125 = -A[216]*scratch_30 + A[221] - scratch_121*scratch_31 - scratch_122*scratch_32 - scratch_123*scratch_33 - scratch_124*scratch_34;
    double scratch_126 = -A[216]*scratch_42 + A[222] - scratch_121*scratch_43 - scratch_122*scratch_44 - scratch_123*scratch_45 - scratch_124*scratch_46 - scratch_125*scratch_47;
    double scratch_127 = -A[216]*scratch_56 + A[223] - scratch_121*scratch_57 - scratch_122*scratch_58 - scratch_123*scratch_59 - scratch_124*scratch_60 - scratch_125*scratch_61 - scratch_126*scratch_62;
    double scratch_128 = -A[216]*scratch_72 + A[224] - scratch_121*scratch_73 - scratch_122*scratch_74 - scratch_123*scratch_75 - scratch_124*scratch_76 - scratch_125*scratch_77 - scratch_126*scratch_78 - scratch_127*scratch_79;
    double scratch_129 = -A[216]*scratch_90 + A[225] - scratch_121*scratch_91 - scratch_122*scratch_92 - scratch_123*scratch_93 - scratch_124*scratch_94 - scratch_125*scratch_95 - scratch_126*scratch_96 - scratch_127*scratch_97 - scratch_128*scratch_98;
    double scratch_130 = 1.0/(-A[216]*scratch_110 + A[226] - scratch_111*scratch_121 - scratch_112*scratch_122 - scratch_113*scratch_123 - scratch_114*scratch_124 - scratch_115*scratch_125 - scratch_116*scratch_126 - scratch_117*scratch_127 - scratch_118*scratch_128 - scratch_119*scratch_129);
    double scratch_131 = scratch_130*(-A[216]*scratch_2 + A[235] - scratch_10*scratch_121 - scratch_109*scratch_129 - scratch_11*scratch_122 - scratch_123*scratch_19 - scratch_124*scratch_29 - scratch_125*scratch_41 - scratch_126*scratch_55 - scratch_127*scratch_71 - scratch_128*scratch_89);
    double scratch_132 = A[11]*scratch_0;
    double scratch_133 = scratch_5*(-A[22]*scratch_132 + A[33]);
    double scratch_134 = scratch_9*(-A[44]*scratch_132 + A[55] - scratch_133*scratch_8);
    double scratch_135 = scratch_18*(-A[66]*scratch_132 + A[77] - scratch_133*scratch_16 - scratch_134*scratch_17);
    double scratch_136 = scratch_28*(A[99] - A[88]*scratch_132 - scratch_133*scratch_25 - scratch_134*scratch_26 - scratch_135*scratch_27);
    double scratch_137 = scratch_40*(-A[110]*scratch_132 + A[121] - scratch_133*scratch_36 - scratch_134*scratch_37 - scratch_135*scratch_38 - scratch_136*scratch_39);
    double scratch_138 = scratch_54*(-A[132]*scratch_132 + A[143] - scratch_133*scratch_49 - scratch_134*scratch_50 - scratch_135*scratch_51 - scratch_136*scratch_52 - scratch_137*scratch_53);
    double scratch_139 = scratch_70*(-A[154]*scratch_132 + A[165] - scratch_133*scratch_64 - scratch_134*scratch_65 - scratch_135*scratch_66 - scratch_136*scratch_67 - scratch_137*scratch_68 - scratch_138*scratch_69);
    double scratch_140 = scratch_88*(-A[176]*scratch_132 + A[186] - scratch_133*scratch_81 - scratch_134*scratch_82 - scratch_135*scratch_83 - scratch_136*scratch_84 - scratch_137*scratch_85 - scratch_138*scratch_86 - scratch_139*scratch_87);
    double scratch_141 = scratch_108*(-A[194]*scratch_132 + A[205] - scratch_100*scratch_133 - scratch_101*scratch_134 - scratch_102*scratch_135 - scratch_103*scratch_136 - scratch_104*scratch_137 - scratch_105*scratch_138 - scratch_106*scratch_139 - scratch_107*scratch_140);
    double scratch_142 = scratch_130*(-A[216]*scratch_132 + A[227] - scratch_121*scratch_133 - scratch_122*scratch_134 - scratch_123*scratch_135 - scratch_124*scratch_136 - scratch_125*scratch_137 - scratch_126*scratch_138 - scratch_127*scratch_139 - scratch_128*scratch_140 - scratch_129*scratch_141);
    double scratch_143 = -scratch_120*scratch_142 + scratch_132 - scratch_133*scratch_4 - scratch_134*scratch_7 - scratch_135*scratch_15 - scratch_136*scratch_24 - scratch_137*scratch_35 - scratch_138*scratch_48 - scratch_139*scratch_63 - scratch_140*scratch_80 - scratch_141*scratch_99;
    double scratch_144 = -A[238]*scratch_4 + A[239];
    double scratch_145 = -A[238]*scratch_3 + A[240] - scratch_144*scratch_6;
    double scratch_146 = -A[238]*scratch_12 + A[241] - scratch_13*scratch_144 - scratch_14*scratch_145;
    double scratch_147 = -A[238]*scratch_20 + A[242] - scratch_144*scratch_21 - scratch_145*scratch_22 - scratch_146*scratch_23;
    double scratch_148 = -A[238]*scratch_30 + A[243] - scratch_144*scratch_31 - scratch_145*scratch_32 - scratch_146*scratch_33 - scratch_147*scratch_34;
    double scratch_149 = -A[238]*scratch_42 + A[244] - scratch_144*scratch_43 - scratch_145*scratch_44 - scratch_146*scratch_45 - scratch_147*scratch_46 - scratch_148*scratch_47;
    double scratch_150 = -A[238]*scratch_56 + A[245] - scratch_144*scratch_57 - scratch_145*scratch_58 - scratch_146*scratch_59 - scratch_147*scratch_60 - scratch_148*scratch_61 - scratch_149*scratch_62;
    double scratch_151 = -A[238]*scratch_72 + A[246] - scratch_144*scratch_73 - scratch_145*scratch_74 - scratch_146*scratch_75 - scratch_147*scratch_76 - scratch_148*scratch_77 - scratch_149*scratch_78 - scratch_150*scratch_79;
    double scratch_152 = -A[238]*scratch_90 + A[247] - scratch_144*scratch_91 - scratch_145*scratch_92 - scratch_146*scratch_93 - scratch_147*scratch_94 - scratch_148*scratch_95 - scratch_149*scratch_96 - scratch_150*scratch_97 - scratch_151*scratch_98;
    double scratch_153 = -A[238]*scratch_110 + A[248] - scratch_111*scratch_144 - scratch_112*scratch_145 - scratch_113*scratch_146 - scratch_114*scratch_147 - scratch_115*scratch_148 - scratch_116*scratch_149 - scratch_117*scratch_150 - scratch_118*scratch_151 - scratch_119*scratch_152;
    double scratch_154 = 1.0/(-A[238]*scratch_132 + A[249] - scratch_133*scratch_144 - scratch_134*scratch_145 - scratch_135*scratch_146 - scratch_136*scratch_147 - scratch_137*scratch_148 - scratch_138*scratch_149 - scratch_139*scratch_150 - scratch_140*scratch_151 - scratch_141*scratch_152 - scratch_142*scratch_153);
    double scratch_155 = scratch_154*(-A[238]*scratch_2 + A[257] - scratch_10*scratch_144 - scratch_109*scratch_152 - scratch_11*scratch_145 - scratch_131*scratch_153 - scratch_146*scratch_19 - scratch_147*scratch_29 - scratch_148*scratch_41 - scratch_149*scratch_55 - scratch_150*scratch_71 - scratch_151*scratch_89);
    double scratch_156 = A[12]*scratch_0;
    double scratch_157 = scratch_5*(-A[22]*scratch_156 + A[34]);
    double scratch_158 = scratch_9*(-A[44]*scratch_156 + A[56] - scratch_157*scratch_8);
    double scratch_159 = scratch_18*(-A[66]*scratch_156 + A[78] - scratch_157*scratch_16 - scratch_158*scratch_17);
    double scratch_160 = scratch_28*(A[100] - A[88]*scratch_156 - scratch_157*scratch_25 - scratch_158*scratch_26 - scratch_159*scratch_27);
    double scratch_161 = scratch_40*(-A[110]*scratch_156 + A[122] - scratch_157*scratch_36 - scratch_158*scratch_37 - scratch_159*scratch_38 - scratch_160*scratch_39);
    double scratch_162 = scratch_54*(-A[132]*scratch_156 + A[144] - scratch_157*scratch_49 - scratch_158*scratch_50 - scratch_159*scratch_51 - scratch_160*scratch_52 - scratch_161*scratch_53);
    double scratch_163 = scratch_70*(-A[154]*scratch_156 + A[166] - scratch_157*scratch_64 - scratch_158*scratch_65 - scratch_159*scratch_66 - scratch_160*scratch_67 - scratch_161*scratch_68 - scratch_162*scratch_69);
    double scratch_164 = scratch_88*(-A[176]*scratch_156 + A[187] - scratch_157*scratch_81 - scratch_158*scratch_82 - scratch_159*scratch_83 - scratch_160*scratch_84 - scratch_161*scratch_85 - scratch_162*scratch_86 - scratch_163*scratch_87);
    double scratch_165 = scratch_108*(-A[194]*scratch_156 + A[206] - scratch_100*scratch_157 - scratch_101*scratch_158 - scratch_102*scratch_159 - scratch_103*scratch_160 - scratch_104*scratch_161 - scratch_105*scratch_162 - scratch_106*scratch_163 - scratch_107*scratch_164);
    double scratch_166 = scratch_130*(-A[216]*scratch_156 + A[228] - scratch_121*scratch_157 - scratch_122*scratch_158 - scratch_123*scratch_159 - scratch_124*scratch_160 - scratch_125*scratch_161 - scratch_126*scratch_162 - scratch_127*scratch_163 - scratch_128*scratch_164 - scratch_129*scratch_165);
    double scratch_167 = scratch_154*(-A[238]*scratch_156 + A[250] - scratch_144*scratch_157 - scratch_145*scratch_158 - scratch_146*scratch_159 - scratch_147*scratch_160 - scratch_148*scratch_161 - scratch_149*scratch_162 - scratch_150*scratch_163 - scratch_151*scratch_164 - scratch_152*scratch_165 - scratch_153*scratch_166);
    double scratch_168 = -scratch_120*scratch_166 - scratch_143*scratch_167 - scratch_15*scratch_159 + scratch_156 - scratch_157*scratch_4 - scratch_158*scratch_7 - scratch_160*scratch_24 - scratch_161*scratch_35 - scratch_162*scratch_48 - scratch_163*scratch_63 - scratch_164*scratch_80 - scratch_165*scratch_99;
    double scratch_169 = -A[260]*scratch_4 + A[261];
    double scratch_170 = -A[260]*scratch_3 + A[262] - scratch_169*scratch_6;
    double scratch_171 = -A[260]*scratch_12 + A[263] - scratch_13*scratch_169 - scratch_14*scratch_170;
    double scratch_172 = -A[260]*scratch_20 + A[264] - scratch_169*scratch_21 - scratch_170*scratch_22 - scratch_171*scratch_23;
    double scratch_173 = -A[260]*scratch_30 + A[265] - scratch_169*scratch_31 - scratch_170*scratch_32 - scratch_171*scratch_33 - scratch_172*scratch_34;
    double scratch_174 = -A[260]*scratch_42 + A[266] - scratch_169*scratch_43 - scratch_170*scratch_44 - scratch_171*scratch_45 - scratch_172*scratch_46 - scratch_173*scratch_47;
    double scratch_175 = -A[260]*scratch_56 + A[267] - scratch_169*scratch_57 - scratch_170*scratch_58 - scratch_171*scratch_59 - scratch_172*scratch_60 - scratch_173*scratch_61 - scratch_174*scratch_62;
    double scratch_176 = -A[260]*scratch_72 + A[268] - scratch_169*scratch_73 - scratch_170*scratch_74 - scratch_171*scratch_75 - scratch_172*scratch_76 - scratch_173*scratch_77 - scratch_174*scratch_78 - scratch_175*scratch_79;
    double scratch_177 = -A[260]*scratch_90 + A[269] - scratch_169*scratch_91 - scratch_170*scratch_92 - scratch_171*scratch_93 - scratch_172*scratch_94 - scratch_173*scratch_95 - scratch_174*scratch_96 - scratch_175*scratch_97 - scratch_176*scratch_98;
    double scratch_178 = -A[260]*scratch_110 + A[270] - scratch_111*scratch_169 - scratch_112*scratch_170 - scratch_113*scratch_171 - scratch_114*scratch_172 - scratch_115*scratch_173 - scratch_116*scratch_174 - scratch_117*scratch_175 - scratch_118*scratch_176 - scratch_119*scratch_177;
    double scratch_179 = -A[260]*scratch_132 + A[271] - scratch_133*scratch_169 - scratch_134*scratch_170 - scratch_135*scratch_171 - scratch_136*scratch_172 - scratch_137*scratch_173 - scratch_138*scratch_174 - scratch_139*scratch_175 - scratch_140*scratch_176 - scratch_141*scratch_177 - scratch_142*scratch_178;
    double scratch_180 = 1.0/(-A[260]*scratch_156 + A[272] - scratch_157*scratch_169 - scratch_158*scratch_170 - scratch_159*scratch_171 - scratch_160*scratch_172 - scratch_161*scratch_173 - scratch_162*scratch_174 - scratch_163*scratch_175 - scratch_164*scratch_176 - scratch_165*scratch_177 - scratch_166*scratch_178 - scratch_167*scratch_179);
    double scratch_181 = scratch_180*(-A[260]*scratch_2 + A[279] - scratch_10*scratch_169 - scratch_109*scratch_177 - scratch_11*scratch_170 - scratch_131*scratch_178 - scratch_155*scratch_179 - scratch_171*scratch_19 - scratch_172*scratch_29 - scratch_173*scratch_41 - scratch_174*scratch_55 - scratch_175*scratch_71 - scratch_176*scratch_89);
    double scratch_182 = A[13]*scratch_0;
    double scratch_183 = scratch_5*(-A[22]*scratch_182 + A[35]);
    double scratch_184 = scratch_9*(-A[44]*scratch_182 + A[57] - scratch_183*scratch_8);
    double scratch_185 = scratch_18*(-A[66]*scratch_182 + A[79] - scratch_16*scratch_183 - scratch_17*scratch_184);
    double scratch_186 = scratch_28*(A[101] - A[88]*scratch_182 - scratch_183*scratch_25 - scratch_184*scratch_26 - scratch_185*scratch_27);
    double scratch_187 = scratch_40*(-A[110]*scratch_182 + A[123] - scratch_183*scratch_36 - scratch_184*scratch_37 - scratch_185*scratch_38 - scratch_186*scratch_39);
    double scratch_188 = scratch_54*(-A[132]*scratch_182 + A[145] - scratch_183*scratch_49 - scratch_184*scratch_50 - scratch_185*scratch_51 - scratch_186*scratch_52 - scratch_187*scratch_53);
    double scratch_189 = scratch_70*(-A[154]*scratch_182 + A[167] - scratch_183*scratch_64 - scratch_184*scratch_65 - scratch_185*scratch_66 - scratch_186*scratch_67 - scratch_187*scratch_68 - scratch_188*scratch_69);
    double scratch_190 = scratch_88*(-A[176]*scratch_182 + A[188] - scratch_183*scratch_81 - scratch_184*scratch_82 - scratch_185*scratch_83 - scratch_186*scratch_84 - scratch_187*scratch_85 - scratch_188*scratch_86 - scratch_189*scratch_87);
    double scratch_191 = scratch_108*(-A[194]*scratch_182 + A[207] - scratch_100*scratch_183 - scratch_101*scratch_184 - scratch_102*scratch_185 - scratch_103*scratch_186 - scratch_104*scratch_187 - scratch_105*scratch_188 - scratch_106*scratch_189 - scratch_107*scratch_190);
    double scratch_192 = scratch_130*(-A[216]*scratch_182 + A[229] - scratch_121*scratch_183 - scratch_122*scratch_184 - scratch_123*scratch_185 - scratch_124*scratch_186 - scratch_125*scratch_187 - scratch_126*scratch_188 - scratch_127*scratch_189 - scratch_128*scratch_190 - scratch_129*scratch_191);
    double scratch_193 = scratch_154*(-A[238]*scratch_182 + A[251] - scratch_144*scratch_183 - scratch_145*scratch_184 - scratch_146*scratch_185 - scratch_147*scratch_186 - scratch_148*scratch_187 - scratch_149*scratch_188 - scratch_150*scratch_189 - scratch_151*scratch_190 - scratch_152*scratch_191 - scratch_153*scratch_192);
    double scratch_194 = scratch_180*(-A[260]*scratch_182 + A[273] - scratch_169*scratch_183 - scratch_170*scratch_184 - scratch_171*scratch_185 - scratch_172*scratch_186 - scratch_173*scratch_187 - scratch_174*scratch_188 - scratch_175*scratch_189 - scratch_176*scratch_190 - scratch_177*scratch_191 - scratch_178*scratch_192 - scratch_179*scratch_193);
    double scratch_195 = -scratch_120*scratch_192 - scratch_143*scratch_193 - scratch_15*scratch_185 - scratch_168*scratch_194 + scratch_182 - scratch_183*scratch_4 - scratch_184*scratch_7 - scratch_186*scratch_24 - scratch_187*scratch_35 - scratch_188*scratch_48 - scratch_189*scratch_63 - scratch_190*scratch_80 - scratch_191*scratch_99;
    double scratch_196 = -A[282]*scratch_4 + A[283];
    double scratch_197 = -A[282]*scratch_3 + A[284] - scratch_196*scratch_6;
    double scratch_198 = -A[282]*scratch_12 + A[285] - scratch_13*scratch_196 - scratch_14*scratch_197;
    double scratch_199 = -A[282]*scratch_20 + A[286] - scratch_196*scratch_21 - scratch_197*scratch_22 - scratch_198*scratch_23;
    double scratch_200 = -A[282]*scratch_30 + A[287] - scratch_196*scratch_31 - scratch_197*scratch_32 - scratch_198*scratch_33 - scratch_199*scratch_34;
    double scratch_201 = -A[282]*scratch_42 + A[288] - scratch_196*scratch_43 - scratch_197*scratch_44 - scratch_198*scratch_45 - scratch_199*scratch_46 - scratch_200*scratch_47;
    double scratch_202 = -A[282]*scratch_56 + A[289] - scratch_196*scratch_57 - scratch_197*scratch_58 - scratch_198*scratch_59 - scratch_199*scratch_60 - scratch_200*scratch_61 - scratch_201*scratch_62;
    double scratch_203 = -A[282]*scratch_72 + A[290] - scratch_196*scratch_73 - scratch_197*scratch_74 - scratch_198*scratch_75 - scratch_199*scratch_76 - scratch_200*scratch_77 - scratch_201*scratch_78 - scratch_202*scratch_79;
    double scratch_204 = -A[282]*scratch_90 + A[291] - scratch_196*scratch_91 - scratch_197*scratch_92 - scratch_198*scratch_93 - scratch_199*scratch_94 - scratch_200*scratch_95 - scratch_201*scratch_96 - scratch_202*scratch_97 - scratch_203*scratch_98;
    double scratch_205 = -A[282]*scratch_110 + A[292] - scratch_111*scratch_196 - scratch_112*scratch_197 - scratch_113*scratch_198 - scratch_114*scratch_199 - scratch_115*scratch_200 - scratch_116*scratch_201 - scratch_117*scratch_202 - scratch_118*scratch_203 - scratch_119*scratch_204;
    double scratch_206 = -A[282]*scratch_132 + A[293] - scratch_133*scratch_196 - scratch_134*scratch_197 - scratch_135*scratch_198 - scratch_136*scratch_199 - scratch_137*scratch_200 - scratch_138*scratch_201 - scratch_139*scratch_202 - scratch_140*scratch_203 - scratch_141*scratch_204 - scratch_142*scratch_205;
    double scratch_207 = -A[282]*scratch_156 + A[294] - scratch_157*scratch_196 - scratch_158*scratch_197 - scratch_159*scratch_198 - scratch_160*scratch_199 - scratch_161*scratch_200 - scratch_162*scratch_201 - scratch_163*scratch_202 - scratch_164*scratch_203 - scratch_165*scratch_204 - scratch_166*scratch_205 - scratch_167*scratch_206;
    double scratch_208 = 1.0/(-A[282]*scratch_182 + A[295] - scratch_183*scratch_196 - scratch_184*scratch_197 - scratch_185*scratch_198 - scratch_186*scratch_199 - scratch_187*scratch_200 - scratch_188*scratch_201 - scratch_189*scratch_202 - scratch_190*scratch_203 - scratch_191*scratch_204 - scratch_192*scratch_205 - scratch_193*scratch_206 - scratch_194*scratch_207);
    double scratch_209 = scratch_208*(-A[282]*scratch_2 + A[301] - scratch_10*scratch_196 - scratch_109*scratch_204 - scratch_11*scratch_197 - scratch_131*scratch_205 - scratch_155*scratch_206 - scratch_181*scratch_207 - scratch_19*scratch_198 - scratch_199*scratch_29 - scratch_200*scratch_41 - scratch_201*scratch_55 - scratch_202*scratch_71 - scratch_203*scratch_89);
    double scratch_210 = A[14]*scratch_0;
    double scratch_211 = scratch_5*(-A[22]*scratch_210 + A[36]);
    double scratch_212 = scratch_9*(-A[44]*scratch_210 + A[58] - scratch_211*scratch_8);
    double scratch_213 = scratch_18*(-A[66]*scratch_210 + A[80] - scratch_16*scratch_211 - scratch_17*scratch_212);
    double scratch_214 = scratch_28*(A[102] - A[88]*scratch_210 - scratch_211*scratch_25 - scratch_212*scratch_26 - scratch_213*scratch_27);
    double scratch_215 = scratch_40*(-A[110]*scratch_210 + A[124] - scratch_211*scratch_36 - scratch_212*scratch_37 - scratch_213*scratch_38 - scratch_214*scratch_39);
    double scratch_216 = scratch_54*(-A[132]*scratch_210 + A[146] - scratch_211*scratch_49 - scratch_212*scratch_50 - scratch_213*scratch_51 - scratch_214*scratch_52 - scratch_215*scratch_53);
    double scratch_217 = scratch_70*(-A[154]*scratch_210 + A[168] - scratch_211*scratch_64 - scratch_212*scratch_65 - scratch_213*scratch_66 - scratch_214*scratch_67 - scratch_215*scratch_68 - scratch_216*scratch_69);
    double scratch_218 = scratch_88*(-A[176]*scratch_210 + A[189] - scratch_211*scratch_81 - scratch_212*scratch_82 - scratch_213*scratch_83 - scratch_214*scratch_84 - scratch_215*scratch_85 - scratch_216*scratch_86 - scratch_217*scratch_87);
    double scratch_219 = scratch_108*(-A[194]*scratch_210 + A[208] - scratch_100*scratch_211 - scratch_101*scratch_212 - scratch_102*scratch_213 - scratch_103*scratch_214 - scratch_104*scratch_215 - scratch_105*scratch_216 - scratch_106*scratch_217 - scratch_107*scratch_218);
    double scratch_220 = scratch_130*(-A[216]*scratch_210 + A[230] - scratch_121*scratch_211 - scratch_122*scratch_212 - scratch_123*scratch_213 - scratch_124*scratch_214 - scratch_125*scratch_215 - scratch_126*scratch_216 - scratch_127*scratch_217 - scratch_128*scratch_218 - scratch_129*scratch_219);
    double scratch_221 = scratch_154*(-A[238]*scratch_210 + A[252] - scratch_144*scratch_211 - scratch_145*scratch_212 - scratch_146*scratch_213 - scratch_147*scratch_214 - scratch_148*scratch_215 - scratch_149*scratch_216 - scratch_150*scratch_217 - scratch_151*scratch_218 - scratch_152*scratch_219 - scratch_153*scratch_220);
    double scratch_222 = scratch_180*(-A[260]*scratch_210 + A[274] - scratch_169*scratch_211 - scratch_170*scratch_212 - scratch_171*scratch_213 - scratch_172*scratch_214 - scratch_173*scratch_215 - scratch_174*scratch_216 - scratch_175*scratch_217 - scratch_176*scratch_218 - scratch_177*scratch_219 - scratch_178*scratch_220 - scratch_179*scratch_221);
    double scratch_223 = scratch_208*(-A[282]*scratch_210 + A[296] - scratch_196*scratch_211 - scratch_197*scratch_212 - scratch_198*scratch_213 - scratch_199*scratch_214 - scratch_200*scratch_215 - scratch_201*scratch_216 - scratch_202*scratch_217 - scratch_203*scratch_218 - scratch_204*scratch_219 - scratch_205*scratch_220 - scratch_206*scratch_221 - scratch_207*scratch_222);
    double scratch_224 = -scratch_120*scratch_220 - scratch_143*scratch_221 - scratch_15*scratch_213 - scratch_168*scratch_222 - scratch_195*scratch_223 + scratch_210 - scratch_211*scratch_4 - scratch_212*scratch_7 - scratch_214*scratch_24 - scratch_215*scratch_35 - scratch_216*scratch_48 - scratch_217*scratch_63 - scratch_218*scratch_80 - scratch_219*scratch_99;
    double scratch_225 = -A[304]*scratch_4 + A[305];
    double scratch_226 = -A[304]*scratch_3 + A[306] - scratch_225*scratch_6;
    double scratch_227 = -A[304]*scratch_12 + A[307] - scratch_13*scratch_225 - scratch_14*scratch_226;
    double scratch_228 = -A[304]*scratch_20 + A[308] - scratch_21*scratch_225 - scratch_22*scratch_226 - scratch_227*scratch_23;
    double scratch_229 = -A[304]*scratch_30 + A[309] - scratch_225*scratch_31 - scratch_226*scratch_32 - scratch_227*scratch_33 - scratch_228*scratch_34;
    double scratch_230 = -A[304]*scratch_42 + A[310] - scratch_225*scratch_43 - scratch_226*scratch_44 - scratch_227*scratch_45 - scratch_228*scratch_46 - scratch_229*scratch_47;
    double scratch_231 = -A[304]*scratch_56 + A[311] - scratch_225*scratch_57 - scratch_226*scratch_58 - scratch_227*scratch_59 - scratch_228*scratch_60 - scratch_229*scratch_61 - scratch_230*scratch_62;
    double scratch_232 = -A[304]*scratch_72 + A[312] - scratch_225*scratch_73 - scratch_226*scratch_74 - scratch_227*scratch_75 - scratch_228*scratch_76 - scratch_229*scratch_77 - scratch_230*scratch_78 - scratch_231*scratch_79;
    double scratch_233 = -A[304]*scratch_90 + A[313] - scratch_225*scratch_91 - scratch_226*scratch_92 - scratch_227*scratch_93 - scratch_228*scratch_94 - scratch_229*scratch_95 - scratch_230*scratch_96 - scratch_231*scratch_97 - scratch_232*scratch_98;
    double scratch_234 = -A[304]*scratch_110 + A[314] - scratch_111*scratch_225 - scratch_112*scratch_226 - scratch_113*scratch_227 - scratch_114*scratch_228 - scratch_115*scratch_229 - scratch_116*scratch_230 - scratch_117*scratch_231 - scratch_118*scratch_232 - scratch_119*scratch_233;
    double scratch_235 = -A[304]*scratch_132 + A[315] - scratch_133*scratch_225 - scratch_134*scratch_226 - scratch_135*scratch_227 - scratch_136*scratch_228 - scratch_137*scratch_229 - scratch_138*scratch_230 - scratch_139*scratch_231 - scratch_140*scratch_232 - scratch_141*scratch_233 - scratch_142*scratch_234;
    double scratch_236 = -A[304]*scratch_156 + A[316] - scratch_157*scratch_225 - scratch_158*scratch_226 - scratch_159*scratch_227 - scratch_160*scratch_228 - scratch_161*scratch_229 - scratch_162*scratch_230 - scratch_163*scratch_231 - scratch_164*scratch_232 - scratch_165*scratch_233 - scratch_166*scratch_234 - scratch_167*scratch_235;
    double scratch_237 = -A[304]*scratch_182 + A[317] - scratch_183*scratch_225 - scratch_184*scratch_226 - scratch_185*scratch_227 - scratch_186*scratch_228 - scratch_187*scratch_229 - scratch_188*scratch_230 - scratch_189*scratch_231 - scratch_190*scratch_232 - scratch_191*scratch_233 - scratch_192*scratch_234 - scratch_193*scratch_235 - scratch_194*scratch_236;
    double scratch_238 = 1.0/(-A[304]*scratch_210 + A[318] - scratch_211*scratch_225 - scratch_212*scratch_226 - scratch_213*scratch_227 - scratch_214*scratch_228 - scratch_215*scratch_229 - scratch_216*scratch_230 - scratch_217*scratch_231 - scratch_218*scratch_232 - scratch_219*scratch_233 - scratch_220*scratch_234 - scratch_221*scratch_235 - scratch_222*scratch_236 - scratch_223*scratch_237);
    double scratch_239 = scratch_238*(-A[304]*scratch_2 + A[323] - scratch_10*scratch_225 - scratch_109*scratch_233 - scratch_11*scratch_226 - scratch_131*scratch_234 - scratch_155*scratch_235 - scratch_181*scratch_236 - scratch_19*scratch_227 - scratch_209*scratch_237 - scratch_228*scratch_29 - scratch_229*scratch_41 - scratch_230*scratch_55 - scratch_231*scratch_71 - scratch_232*scratch_89);
    double scratch_240 = A[15]*scratch_0;
    double scratch_241 = scratch_5*(-A[22]*scratch_240 + A[37]);
    double scratch_242 = scratch_9*(-A[44]*scratch_240 + A[59] - scratch_241*scratch_8);
    double scratch_243 = scratch_18*(-A[66]*scratch_240 + A[81] - scratch_16*scratch_241 - scratch_17*scratch_242);
    double scratch_244 = scratch_28*(A[103] - A[88]*scratch_240 - scratch_241*scratch_25 - scratch_242*scratch_26 - scratch_243*scratch_27);
    double scratch_245 = scratch_40*(-A[110]*scratch_240 + A[125] - scratch_241*scratch_36 - scratch_242*scratch_37 - scratch_243*scratch_38 - scratch_244*scratch_39);
    double scratch_246 = scratch_54*(-A[132]*scratch_240 + A[147] - scratch_241*scratch_49 - scratch_242*scratch_50 - scratch_243*scratch_51 - scratch_244*scratch_52 - scratch_245*scratch_53);
    double scratch_247 = scratch_70*(-A[154]*scratch_240 + A[169] - scratch_241*scratch_64 - scratch_242*scratch_65 - scratch_243*scratch_66 - scratch_244*scratch_67 - scratch_245*scratch_68 - scratch_246*scratch_69);
    double scratch_248 = scratch_88*(-A[176]*scratch_240 - scratch_241*scratch_81 - scratch_242*scratch_82 - scratch_243*scratch_83 - scratch_244*scratch_84 - scratch_245*scratch_85 - scratch_246*scratch_86 - scratch_247*scratch_87);
    double scratch_249 = scratch_108*(-A[194]*scratch_240 + A[209] - scratch_100*scratch_241 - scratch_101*scratch_242 - scratch_102*scratch_243 - scratch_103*scratch_244 - scratch_104*scratch_245 - scratch_105*scratch_246 - scratch_106*scratch_247 - scratch_107*scratch_248);
    double scratch_250 = scratch_130*(-A[216]*scratch_240 + A[231] - scratch_121*scratch_241 - scratch_122*scratch_242 - scratch_123*scratch_243 - scratch_124*scratch_244 - scratch_125*scratch_245 - scratch_126*scratch_246 - scratch_127*scratch_247 - scratch_128*scratch_248 - scratch_129*scratch_249);
    double scratch_251 = scratch_154*(-A[238]*scratch_240 + A[253] - scratch_144*scratch_241 - scratch_145*scratch_242 - scratch_146*scratch_243 - scratch_147*scratch_244 - scratch_148*scratch_245 - scratch_149*scratch_246 - scratch_150*scratch_247 - scratch_151*scratch_248 - scratch_152*scratch_249 - scratch_153*scratch_250);
    double scratch_252 = scratch_180*(-A[260]*scratch_240 + A[275] - scratch_169*scratch_241 - scratch_170*scratch_242 - scratch_171*scratch_243 - scratch_172*scratch_244 - scratch_173*scratch_245 - scratch_174*scratch_246 - scratch_175*scratch_247 - scratch_176*scratch_248 - scratch_177*scratch_249 - scratch_178*scratch_250 - scratch_179*scratch_251);
    double scratch_253 = scratch_208*(-A[282]*scratch_240 + A[297] - scratch_196*scratch_241 - scratch_197*scratch_242 - scratch_198*scratch_243 - scratch_199*scratch_244 - scratch_200*scratch_245 - scratch_201*scratch_246 - scratch_202*scratch_247 - scratch_203*scratch_248 - scratch_204*scratch_249 - scratch_205*scratch_250 - scratch_206*scratch_251 - scratch_207*scratch_252);
    double scratch_254 = scratch_238*(-A[304]*scratch_240 + A[319] - scratch_225*scratch_241 - scratch_226*scratch_242 - scratch_227*scratch_243 - scratch_228*scratch_244 - scratch_229*scratch_245 - scratch_230*scratch_246 - scratch_231*scratch_247 - scratch_232*scratch_248 - scratch_233*scratch_249 - scratch_234*scratch_250 - scratch_235*scratch_251 - scratch_236*scratch_252 - scratch_237*scratch_253);
    double scratch_255 = -scratch_120*scratch_250 - scratch_143*scratch_251 - scratch_15*scratch_243 - scratch_168*scratch_252 - scratch_195*scratch_253 - scratch_224*scratch_254 - scratch_24*scratch_244 + scratch_240 - scratch_241*scratch_4 - scratch_242*scratch_7 - scratch_245*scratch_35 - scratch_246*scratch_48 - scratch_247*scratch_63 - scratch_248*scratch_80 - scratch_249*scratch_99;
    double scratch_256 = -A[326]*scratch_4 + A[327];
    double scratch_257 = -A[326]*scratch_3 + A[328] - scratch_256*scratch_6;
    double scratch_258 = -A[326]*scratch_12 + A[329] - scratch_13*scratch_256 - scratch_14*scratch_257;
    double scratch_259 = -A[326]*scratch_20 + A[330] - scratch_21*scratch_256 - scratch_22*scratch_257 - scratch_23*scratch_258;
    double scratch_260 = -A[326]*scratch_30 + A[331] - scratch_256*scratch_31 - scratch_257*scratch_32 - scratch_258*scratch_33 - scratch_259*scratch_34;
    double scratch_261 = -A[326]*scratch_42 + A[332] - scratch_256*scratch_43 - scratch_257*scratch_44 - scratch_258*scratch_45 - scratch_259*scratch_46 - scratch_260*scratch_47;
    double scratch_262 = -A[326]*scratch_56 + A[333] - scratch_256*scratch_57 - scratch_257*scratch_58 - scratch_258*scratch_59 - scratch_259*scratch_60 - scratch_260*scratch_61 - scratch_261*scratch_62;
    double scratch_263 = -A[326]*scratch_72 + A[334] - scratch_256*scratch_73 - scratch_257*scratch_74 - scratch_258*scratch_75 - scratch_259*scratch_76 - scratch_260*scratch_77 - scratch_261*scratch_78 - scratch_262*scratch_79;
    double scratch_264 = -A[326]*scratch_90 + A[335] - scratch_256*scratch_91 - scratch_257*scratch_92 - scratch_258*scratch_93 - scratch_259*scratch_94 - scratch_260*scratch_95 - scratch_261*scratch_96 - scratch_262*scratch_97 - scratch_263*scratch_98;
    double scratch_265 = -A[326]*scratch_110 + A[336] - scratch_111*scratch_256 - scratch_112*scratch_257 - scratch_113*scratch_258 - scratch_114*scratch_259 - scratch_115*scratch_260 - scratch_116*scratch_261 - scratch_117*scratch_262 - scratch_118*scratch_263 - scratch_119*scratch_264;
    double scratch_266 = -A[326]*scratch_132 + A[337] - scratch_133*scratch_256 - scratch_134*scratch_257 - scratch_135*scratch_258 - scratch_136*scratch_259 - scratch_137*scratch_260 - scratch_138*scratch_261 - scratch_139*scratch_262 - scratch_140*scratch_263 - scratch_141*scratch_264 - scratch_142*scratch_265;
    double scratch_267 = -A[326]*scratch_156 + A[338] - scratch_157*scratch_256 - scratch_158*scratch_257 - scratch_159*scratch_258 - scratch_160*scratch_259 - scratch_161*scratch_260 - scratch_162*scratch_261 - scratch_163*scratch_262 - scratch_164*scratch_263 - scratch_165*scratch_264 - scratch_166*scratch_265 - scratch_167*scratch_266;
    double scratch_268 = -A[326]*scratch_182 + A[339] - scratch_183*scratch_256 - scratch_184*scratch_257 - scratch_185*scratch_258 - scratch_186*scratch_259 - scratch_187*scratch_260 - scratch_188*scratch_261 - scratch_189*scratch_262 - scratch_190*scratch_263 - scratch_191*scratch_264 - scratch_192*scratch_265 - scratch_193*scratch_266 - scratch_194*scratch_267;
    double scratch_269 = -A[326]*scratch_210 + A[340] - scratch_211*scratch_256 - scratch_212*scratch_257 - scratch_213*scratch_258 - scratch_214*scratch_259 - scratch_215*scratch_260 - scratch_216*scratch_261 - scratch_217*scratch_262 - scratch_218*scratch_263 - scratch_219*scratch_264 - scratch_220*scratch_265 - scratch_221*scratch_266 - scratch_222*scratch_267 - scratch_223*scratch_268;
    double scratch_270 = 1.0/(-A[326]*scratch_240 + A[341] - scratch_241*scratch_256 - scratch_242*scratch_257 - scratch_243*scratch_258 - scratch_244*scratch_259 - scratch_245*scratch_260 - scratch_246*scratch_261 - scratch_247*scratch_262 - scratch_248*scratch_263 - scratch_249*scratch_264 - scratch_250*scratch_265 - scratch_251*scratch_266 - scratch_252*scratch_267 - scratch_253*scratch_268 - scratch_254*scratch_269);
    double scratch_271 = scratch_270*(-A[326]*scratch_2 + A[345] - scratch_10*scratch_256 - scratch_109*scratch_264 - scratch_11*scratch_257 - scratch_131*scratch_265 - scratch_155*scratch_266 - scratch_181*scratch_267 - scratch_19*scratch_258 - scratch_209*scratch_268 - scratch_239*scratch_269 - scratch_259*scratch_29 - scratch_260*scratch_41 - scratch_261*scratch_55 - scratch_262*scratch_71 - scratch_263*scratch_89);
    double scratch_272 = A[16]*scratch_0;
    double scratch_273 = scratch_5*(-A[22]*scratch_272 + A[38]);
    double scratch_274 = scratch_9*(-A[44]*scratch_272 + A[60] - scratch_273*scratch_8);
    double scratch_275 = scratch_18*(-A[66]*scratch_272 + A[82] - scratch_16*scratch_273 - scratch_17*scratch_274);
    double scratch_276 = scratch_28*(A[104] - A[88]*scratch_272 - scratch_25*scratch_273 - scratch_26*scratch_274 - scratch_27*scratch_275);
    double scratch_277 = scratch_40*(-A[110]*scratch_272 + A[126] - scratch_273*scratch_36 - scratch_274*scratch_37 - scratch_275*scratch_38 - scratch_276*scratch_39);
    double scratch_278 = scratch_54*(-A[132]*scratch_272 + A[148] - scratch_273*scratch_49 - scratch_274*scratch_50 - scratch_275*scratch_51 - scratch_276*scratch_52 - scratch_277*scratch_53);
    double scratch_279 = scratch_70*(-A[154]*scratch_272 + A[170] - scratch_273*scratch_64 - scratch_274*scratch_65 - scratch_275*scratch_66 - scratch_276*scratch_67 - scratch_277*scratch_68 - scratch_278*scratch_69);
    double scratch_280 = scratch_88*(-A[176]*scratch_272 + A[190] - scratch_273*scratch_81 - scratch_274*scratch_82 - scratch_275*scratch_83 - scratch_276*scratch_84 - scratch_277*scratch_85 - scratch_278*scratch_86 - scratch_279*scratch_87);
    double scratch_281 = scratch_108*(-A[194]*scratch_272 + A[210] - scratch_100*scratch_273 - scratch_101*scratch_274 - scratch_102*scratch_275 - scratch_103*scratch_276 - scratch_104*scratch_277 - scratch_105*scratch_278 - scratch_106*scratch_279 - scratch_107*scratch_280);
    double scratch_282 = scratch_130*(-A[216]*scratch_272 + A[232] - scratch_121*scratch_273 - scratch_122*scratch_274 - scratch_123*scratch_275 - scratch_124*scratch_276 - scratch_125*scratch_277 - scratch_126*scratch_278 - scratch_127*scratch_279 - scratch_128*scratch_280 - scratch_129*scratch_281);
    double scratch_283 = scratch_154*(-A[238]*scratch_272 + A[254] - scratch_144*scratch_273 - scratch_145*scratch_274 - scratch_146*scratch_275 - scratch_147*scratch_276 - scratch_148*scratch_277 - scratch_149*scratch_278 - scratch_150*scratch_279 - scratch_151*scratch_280 - scratch_152*scratch_281 - scratch_153*scratch_282);
    double scratch_284 = scratch_180*(-A[260]*scratch_272 + A[276] - scratch_169*scratch_273 - scratch_170*scratch_274 - scratch_171*scratch_275 - scratch_172*scratch_276 - scratch_173*scratch_277 - scratch_174*scratch_278 - scratch_175*scratch_279 - scratch_176*scratch_280 - scratch_177*scratch_281 - scratch_178*scratch_282 - scratch_179*scratch_283);
    double scratch_285 = scratch_208*(-A[282]*scratch_272 + A[298] - scratch_196*scratch_273 - scratch_197*scratch_274 - scratch_198*scratch_275 - scratch_199*scratch_276 - scratch_200*scratch_277 - scratch_201*scratch_278 - scratch_202*scratch_279 - scratch_203*scratch_280 - scratch_204*scratch_281 - scratch_205*scratch_282 - scratch_206*scratch_283 - scratch_207*scratch_284);
    double scratch_286 = scratch_238*(-A[304]*scratch_272 + A[320] - scratch_225*scratch_273 - scratch_226*scratch_274 - scratch_227*scratch_275 - scratch_228*scratch_276 - scratch_229*scratch_277 - scratch_230*scratch_278 - scratch_231*scratch_279 - scratch_232*scratch_280 - scratch_233*scratch_281 - scratch_234*scratch_282 - scratch_235*scratch_283 - scratch_236*scratch_284 - scratch_237*scratch_285);
    double scratch_287 = scratch_270*(-A[326]*scratch_272 + A[342] - scratch_256*scratch_273 - scratch_257*scratch_274 - scratch_258*scratch_275 - scratch_259*scratch_276 - scratch_260*scratch_277 - scratch_261*scratch_278 - scratch_262*scratch_279 - scratch_263*scratch_280 - scratch_264*scratch_281 - scratch_265*scratch_282 - scratch_266*scratch_283 - scratch_267*scratch_284 - scratch_268*scratch_285 - scratch_269*scratch_286);
    double scratch_288 = -scratch_120*scratch_282 - scratch_143*scratch_283 - scratch_15*scratch_275 - scratch_168*scratch_284 - scratch_195*scratch_285 - scratch_224*scratch_286 - scratch_24*scratch_276 - scratch_255*scratch_287 + scratch_272 - scratch_273*scratch_4 - scratch_274*scratch_7 - scratch_277*scratch_35 - scratch_278*scratch_48 - scratch_279*scratch_63 - scratch_280*scratch_80 - scratch_281*scratch_99;
    double scratch_289 = -A[348]*scratch_4 + A[349];
    double scratch_290 = -A[348]*scratch_3 + A[350] - scratch_289*scratch_6;
    double scratch_291 = -A[348]*scratch_12 + A[351] - scratch_13*scratch_289 - scratch_14*scratch_290;
    double scratch_292 = -A[348]*scratch_20 + A[352] - scratch_21*scratch_289 - scratch_22*scratch_290 - scratch_23*scratch_291;
    double scratch_293 = -A[348]*scratch_30 + A[353] - scratch_289*scratch_31 - scratch_290*scratch_32 - scratch_291*scratch_33 - scratch_292*scratch_34;
    double scratch_294 = -A[348]*scratch_42 + A[354] - scratch_289*scratch_43 - scratch_290*scratch_44 - scratch_291*scratch_45 - scratch_292*scratch_46 - scratch_293*scratch_47;
    double scratch_295 = -A[348]*scratch_56 + A[355] - scratch_289*scratch_57 - scratch_290*scratch_58 - scratch_291*scratch_59 - scratch_292*scratch_60 - scratch_293*scratch_61 - scratch_294*scratch_62;
    double scratch_296 = -A[348]*scratch_72 + A[356] - scratch_289*scratch_73 - scratch_290*scratch_74 - scratch_291*scratch_75 - scratch_292*scratch_76 - scratch_293*scratch_77 - scratch_294*scratch_78 - scratch_295*scratch_79;
    double scratch_297 = -A[348]*scratch_90 + A[357] - scratch_289*scratch_91 - scratch_290*scratch_92 - scratch_291*scratch_93 - scratch_292*scratch_94 - scratch_293*scratch_95 - scratch_294*scratch_96 - scratch_295*scratch_97 - scratch_296*scratch_98;
    double scratch_298 = -A[348]*scratch_110 + A[358] - scratch_111*scratch_289 - scratch_112*scratch_290 - scratch_113*scratch_291 - scratch_114*scratch_292 - scratch_115*scratch_293 - scratch_116*scratch_294 - scratch_117*scratch_295 - scratch_118*scratch_296 - scratch_119*scratch_297;
    double scratch_299 = -A[348]*scratch_132 + A[359] - scratch_133*scratch_289 - scratch_134*scratch_290 - scratch_135*scratch_291 - scratch_136*scratch_292 - scratch_137*scratch_293 - scratch_138*scratch_294 - scratch_139*scratch_295 - scratch_140*scratch_296 - scratch_141*scratch_297 - scratch_142*scratch_298;
    double scratch_300 = -A[348]*scratch_156 + A[360] - scratch_157*scratch_289 - scratch_158*scratch_290 - scratch_159*scratch_291 - scratch_160*scratch_292 - scratch_161*scratch_293 - scratch_162*scratch_294 - scratch_163*scratch_295 - scratch_164*scratch_296 - scratch_165*scratch_297 - scratch_166*scratch_298 - scratch_167*scratch_299;
    double scratch_301 = -A[348]*scratch_182 + A[361] - scratch_183*scratch_289 - scratch_184*scratch_290 - scratch_185*scratch_291 - scratch_186*scratch_292 - scratch_187*scratch_293 - scratch_188*scratch_294 - scratch_189*scratch_295 - scratch_190*scratch_296 - scratch_191*scratch_297 - scratch_192*scratch_298 - scratch_193*scratch_299 - scratch_194*scratch_300;
    double scratch_302 = -A[348]*scratch_210 + A[362] - scratch_211*scratch_289 - scratch_212*scratch_290 - scratch_213*scratch_291 - scratch_214*scratch_292 - scratch_215*scratch_293 - scratch_216*scratch_294 - scratch_217*scratch_295 - scratch_218*scratch_296 - scratch_219*scratch_297 - scratch_220*scratch_298 - scratch_221*scratch_299 - scratch_222*scratch_300 - scratch_223*scratch_301;
    double scratch_303 = -A[348]*scratch_240 + A[363] - scratch_241*scratch_289 - scratch_242*scratch_290 - scratch_243*scratch_291 - scratch_244*scratch_292 - scratch_245*scratch_293 - scratch_246*scratch_294 - scratch_247*scratch_295 - scratch_248*scratch_296 - scratch_249*scratch_297 - scratch_250*scratch_298 - scratch_251*scratch_299 - scratch_252*scratch_300 - scratch_253*scratch_301 - scratch_254*scratch_302;
    double scratch_304 = 1.0/(-A[348]*scratch_272 + A[364] - scratch_273*scratch_289 - scratch_274*scratch_290 - scratch_275*scratch_291 - scratch_276*scratch_292 - scratch_277*scratch_293 - scratch_278*scratch_294 - scratch_279*scratch_295 - scratch_280*scratch_296 - scratch_281*scratch_297 - scratch_282*scratch_298 - scratch_283*scratch_299 - scratch_284*scratch_300 - scratch_285*scratch_301 - scratch_286*scratch_302 - scratch_287*scratch_303);
    double scratch_305 = scratch_304*(-A[348]*scratch_2 + A[367] - scratch_10*scratch_289 - scratch_109*scratch_297 - scratch_11*scratch_290 - scratch_131*scratch_298 - scratch_155*scratch_299 - scratch_181*scratch_300 - scratch_19*scratch_291 - scratch_209*scratch_301 - scratch_239*scratch_302 - scratch_271*scratch_303 - scratch_29*scratch_292 - scratch_293*scratch_41 - scratch_294*scratch_55 - scratch_295*scratch_71 - scratch_296*scratch_89);
    double scratch_306 = A[17]*scratch_0;
    double scratch_307 = scratch_5*(-A[22]*scratch_306 + A[39]);
    double scratch_308 = scratch_9*(-A[44]*scratch_306 + A[61] - scratch_307*scratch_8);
    double scratch_309 = scratch_18*(-A[66]*scratch_306 + A[83] - scratch_16*scratch_307 - scratch_17*scratch_308);
    double scratch_310 = scratch_28*(A[105] - A[88]*scratch_306 - scratch_25*scratch_307 - scratch_26*scratch_308 - scratch_27*scratch_309);
    double scratch_311 = scratch_40*(-A[110]*scratch_306 + A[127] - scratch_307*scratch_36 - scratch_308*scratch_37 - scratch_309*scratch_38 - scratch_310*scratch_39);
    double scratch_312 = scratch_54*(-A[132]*scratch_306 + A[149] - scratch_307*scratch_49 - scratch_308*scratch_50 - scratch_309*scratch_51 - scratch_310*scratch_52 - scratch_311*scratch_53);
    double scratch_313 = scratch_70*(-A[154]*scratch_306 + A[171] - scratch_307*scratch_64 - scratch_308*scratch_65 - scratch_309*scratch_66 - scratch_310*scratch_67 - scratch_311*scratch_68 - scratch_312*scratch_69);
    double scratch_314 = scratch_88*(-A[176]*scratch_306 - scratch_307*scratch_81 - scratch_308*scratch_82 - scratch_309*scratch_83 - scratch_310*scratch_84 - scratch_311*scratch_85 - scratch_312*scratch_86 - scratch_313*scratch_87);
    double scratch_315 = scratch_108*(-A[194]*scratch_306 + A[211] - scratch_100*scratch_307 - scratch_101*scratch_308 - scratch_102*scratch_309 - scratch_103*scratch_310 - scratch_104*scratch_311 - scratch_105*scratch_312 - scratch_106*scratch_313 - scratch_107*scratch_314);
    double scratch_316 = scratch_130*(-A[216]*scratch_306 + A[233] - scratch_121*scratch_307 - scratch_122*scratch_308 - scratch_123*scratch_309 - scratch_124*scratch_310 - scratch_125*scratch_311 - scratch_126*scratch_312 - scratch_127*scratch_313 - scratch_128*scratch_314 - scratch_129*scratch_315);
    double scratch_317 = scratch_154*(-A[238]*scratch_306 + A[255] - scratch_144*scratch_307 - scratch_145*scratch_308 - scratch_146*scratch_309 - scratch_147*scratch_310 - scratch_148*scratch_311 - scratch_149*scratch_312 - scratch_150*scratch_313 - scratch_151*scratch_314 - scratch_152*scratch_315 - scratch_153*scratch_316);
    double scratch_318 = scratch_180*(-A[260]*scratch_306 + A[277] - scratch_169*scratch_307 - scratch_170*scratch_308 - scratch_171*scratch_309 - scratch_172*scratch_310 - scratch_173*scratch_311 - scratch_174*scratch_312 - scratch_175*scratch_313 - scratch_176*scratch_314 - scratch_177*scratch_315 - scratch_178*scratch_316 - scratch_179*scratch_317);
    double scratch_319 = scratch_208*(-A[282]*scratch_306 + A[299] - scratch_196*scratch_307 - scratch_197*scratch_308 - scratch_198*scratch_309 - scratch_199*scratch_310 - scratch_200*scratch_311 - scratch_201*scratch_312 - scratch_202*scratch_313 - scratch_203*scratch_314 - scratch_204*scratch_315 - scratch_205*scratch_316 - scratch_206*scratch_317 - scratch_207*scratch_318);
    double scratch_320 = scratch_238*(-A[304]*scratch_306 + A[321] - scratch_225*scratch_307 - scratch_226*scratch_308 - scratch_227*scratch_309 - scratch_228*scratch_310 - scratch_229*scratch_311 - scratch_230*scratch_312 - scratch_231*scratch_313 - scratch_232*scratch_314 - scratch_233*scratch_315 - scratch_234*scratch_316 - scratch_235*scratch_317 - scratch_236*scratch_318 - scratch_237*scratch_319);
    double scratch_321 = scratch_270*(-A[326]*scratch_306 + A[343] - scratch_256*scratch_307 - scratch_257*scratch_308 - scratch_258*scratch_309 - scratch_259*scratch_310 - scratch_260*scratch_311 - scratch_261*scratch_312 - scratch_262*scratch_313 - scratch_263*scratch_314 - scratch_264*scratch_315 - scratch_265*scratch_316 - scratch_266*scratch_317 - scratch_267*scratch_318 - scratch_268*scratch_319 - scratch_269*scratch_320);
    double scratch_322 = scratch_304*(-A[348]*scratch_306 + A[365] - scratch_289*scratch_307 - scratch_290*scratch_308 - scratch_291*scratch_309 - scratch_292*scratch_310 - scratch_293*scratch_311 - scratch_294*scratch_312 - scratch_295*scratch_313 - scratch_296*scratch_314 - scratch_297*scratch_315 - scratch_298*scratch_316 - scratch_299*scratch_317 - scratch_300*scratch_318 - scratch_301*scratch_319 - scratch_302*scratch_320 - scratch_303*scratch_321);
    double scratch_323 = -scratch_120*scratch_316 - scratch_143*scratch_317 - scratch_15*scratch_309 - scratch_168*scratch_318 - scratch_195*scratch_319 - scratch_224*scratch_320 - scratch_24*scratch_310 - scratch_255*scratch_321 - scratch_288*scratch_322 + scratch_306 - scratch_307*scratch_4 - scratch_308*scratch_7 - scratch_311*scratch_35 - scratch_312*scratch_48 - scratch_313*scratch_63 - scratch_314*scratch_80 - scratch_315*scratch_99;
    double scratch_324 = -A[370]*scratch_4 + A[371];
    double scratch_325 = -A[370]*scratch_3 + A[372] - scratch_324*scratch_6;
    double scratch_326 = -A[370]*scratch_12 + A[373] - scratch_13*scratch_324 - scratch_14*scratch_325;
    double scratch_327 = -A[370]*scratch_20 + A[374] - scratch_21*scratch_324 - scratch_22*scratch_325 - scratch_23*scratch_326;
    double scratch_328 = -A[370]*scratch_30 + A[375] - scratch_31*scratch_324 - scratch_32*scratch_325 - scratch_326*scratch_33 - scratch_327*scratch_34;
    double scratch_329 = -A[370]*scratch_42 + A[376] - scratch_324*scratch_43 - scratch_325*scratch_44 - scratch_326*scratch_45 - scratch_327*scratch_46 - scratch_328*scratch_47;
    double scratch_330 = -A[370]*scratch_56 + A[377] - scratch_324*scratch_57 - scratch_325*scratch_58 - scratch_326*scratch_59 - scratch_327*scratch_60 - scratch_328*scratch_61 - scratch_329*scratch_62;
    double scratch_331 = -A[370]*scratch_72 + A[378] - scratch_324*scratch_73 - scratch_325*scratch_74 - scratch_326*scratch_75 - scratch_327*scratch_76 - scratch_328*scratch_77 - scratch_329*scratch_78 - scratch_330*scratch_79;
    double scratch_332 = -A[370]*scratch_90 + A[379] - scratch_324*scratch_91 - scratch_325*scratch_92 - scratch_326*scratch_93 - scratch_327*scratch_94 - scratch_328*scratch_95 - scratch_329*scratch_96 - scratch_330*scratch_97 - scratch_331*scratch_98;
    double scratch_333 = -A[370]*scratch_110 + A[380] - scratch_111*scratch_324 - scratch_112*scratch_325 - scratch_113*scratch_326 - scratch_114*scratch_327 - scratch_115*scratch_328 - scratch_116*scratch_329 - scratch_117*scratch_330 - scratch_118*scratch_331 - scratch_119*scratch_332;
    double scratch_334 = -A[370]*scratch_132 + A[381] - scratch_133*scratch_324 - scratch_134*scratch_325 - scratch_135*scratch_326 - scratch_136*scratch_327 - scratch_137*scratch_328 - scratch_138*scratch_329 - scratch_139*scratch_330 - scratch_140*scratch_331 - scratch_141*scratch_332 - scratch_142*scratch_333;
    double scratch_335 = -A[370]*scratch_156 + A[382] - scratch_157*scratch_324 - scratch_158*scratch_325 - scratch_159*scratch_326 - scratch_160*scratch_327 - scratch_161*scratch_328 - scratch_162*scratch_329 - scratch_163*scratch_330 - scratch_164*scratch_331 - scratch_165*scratch_332 - scratch_166*scratch_333 - scratch_167*scratch_334;
    double scratch_336 = -A[370]*scratch_182 + A[383] - scratch_183*scratch_324 - scratch_184*scratch_325 - scratch_185*scratch_326 - scratch_186*scratch_327 - scratch_187*scratch_328 - scratch_188*scratch_329 - scratch_189*scratch_330 - scratch_190*scratch_331 - scratch_191*scratch_332 - scratch_192*scratch_333 - scratch_193*scratch_334 - scratch_194*scratch_335;
    double scratch_337 = -A[370]*scratch_210 + A[384] - scratch_211*scratch_324 - scratch_212*scratch_325 - scratch_213*scratch_326 - scratch_214*scratch_327 - scratch_215*scratch_328 - scratch_216*scratch_329 - scratch_217*scratch_330 - scratch_218*scratch_331 - scratch_219*scratch_332 - scratch_220*scratch_333 - scratch_221*scratch_334 - scratch_222*scratch_335 - scratch_223*scratch_336;
    double scratch_338 = -A[370]*scratch_240 + A[385] - scratch_241*scratch_324 - scratch_242*scratch_325 - scratch_243*scratch_326 - scratch_244*scratch_327 - scratch_245*scratch_328 - scratch_246*scratch_329 - scratch_247*scratch_330 - scratch_248*scratch_331 - scratch_249*scratch_332 - scratch_250*scratch_333 - scratch_251*scratch_334 - scratch_252*scratch_335 - scratch_253*scratch_336 - scratch_254*scratch_337;
    double scratch_339 = -A[370]*scratch_272 + A[386] - scratch_273*scratch_324 - scratch_274*scratch_325 - scratch_275*scratch_326 - scratch_276*scratch_327 - scratch_277*scratch_328 - scratch_278*scratch_329 - scratch_279*scratch_330 - scratch_280*scratch_331 - scratch_281*scratch_332 - scratch_282*scratch_333 - scratch_283*scratch_334 - scratch_284*scratch_335 - scratch_285*scratch_336 - scratch_286*scratch_337 - scratch_287*scratch_338;
    double scratch_340 = 1.0/(-A[370]*scratch_306 + A[387] - scratch_307*scratch_324 - scratch_308*scratch_325 - scratch_309*scratch_326 - scratch_310*scratch_327 - scratch_311*scratch_328 - scratch_312*scratch_329 - scratch_313*scratch_330 - scratch_314*scratch_331 - scratch_315*scratch_332 - scratch_316*scratch_333 - scratch_317*scratch_334 - scratch_318*scratch_335 - scratch_319*scratch_336 - scratch_320*scratch_337 - scratch_321*scratch_338 - scratch_322*scratch_339);
    double scratch_341 = scratch_340*(-A[370]*scratch_2 + A[389] - scratch_10*scratch_324 - scratch_109*scratch_332 - scratch_11*scratch_325 - scratch_131*scratch_333 - scratch_155*scratch_334 - scratch_181*scratch_335 - scratch_19*scratch_326 - scratch_209*scratch_336 - scratch_239*scratch_337 - scratch_271*scratch_338 - scratch_29*scratch_327 - scratch_305*scratch_339 - scratch_328*scratch_41 - scratch_329*scratch_55 - scratch_330*scratch_71 - scratch_331*scratch_89);
    double scratch_342 = -A[392]*scratch_4 + A[393];
    double scratch_343 = -A[392]*scratch_3 + A[394] - scratch_342*scratch_6;
    double scratch_344 = -A[392]*scratch_12 + A[395] - scratch_13*scratch_342 - scratch_14*scratch_343;
    double scratch_345 = -A[392]*scratch_20 + A[396] - scratch_21*scratch_342 - scratch_22*scratch_343 - scratch_23*scratch_344;
    double scratch_346 = -A[392]*scratch_30 + A[397] - scratch_31*scratch_342 - scratch_32*scratch_343 - scratch_33*scratch_344 - scratch_34*scratch_345;
    double scratch_347 = -A[392]*scratch_42 + A[398] - scratch_342*scratch_43 - scratch_343*scratch_44 - scratch_344*scratch_45 - scratch_345*scratch_46 - scratch_346*scratch_47;
    double scratch_348 = -A[392]*scratch_56 + A[399] - scratch_342*scratch_57 - scratch_343*scratch_58 - scratch_344*scratch_59 - scratch_345*scratch_60 - scratch_346*scratch_61 - scratch_347*scratch_62;
    double scratch_349 = -A[392]*scratch_72 + A[400] - scratch_342*scratch_73 - scratch_343*scratch_74 - scratch_344*scratch_75 - scratch_345*scratch_76 - scratch_346*scratch_77 - scratch_347*scratch_78 - scratch_348*scratch_79;
    double scratch_350 = -A[392]*scratch_90 + A[401] - scratch_342*scratch_91 - scratch_343*scratch_92 - scratch_344*scratch_93 - scratch_345*scratch_94 - scratch_346*scratch_95 - scratch_347*scratch_96 - scratch_348*scratch_97 - scratch_349*scratch_98;
    double scratch_351 = -A[392]*scratch_110 + A[402] - scratch_111*scratch_342 - scratch_112*scratch_343 - scratch_113*scratch_344 - scratch_114*scratch_345 - scratch_115*scratch_346 - scratch_116*scratch_347 - scratch_117*scratch_348 - scratch_118*scratch_349 - scratch_119*scratch_350;
    double scratch_352 = -A[392]*scratch_132 + A[403] - scratch_133*scratch_342 - scratch_134*scratch_343 - scratch_135*scratch_344 - scratch_136*scratch_345 - scratch_137*scratch_346 - scratch_138*scratch_347 - scratch_139*scratch_348 - scratch_140*scratch_349 - scratch_141*scratch_350 - scratch_142*scratch_351;
    double scratch_353 = -A[392]*scratch_156 + A[404] - scratch_157*scratch_342 - scratch_158*scratch_343 - scratch_159*scratch_344 - scratch_160*scratch_345 - scratch_161*scratch_346 - scratch_162*scratch_347 - scratch_163*scratch_348 - scratch_164*scratch_349 - scratch_165*scratch_350 - scratch_166*scratch_351 - scratch_167*scratch_352;
    double scratch_354 = -A[392]*scratch_182 + A[405] - scratch_183*scratch_342 - scratch_184*scratch_343 - scratch_185*scratch_344 - scratch_186*scratch_345 - scratch_187*scratch_346 - scratch_188*scratch_347 - scratch_189*scratch_348 - scratch_190*scratch_349 - scratch_191*scratch_350 - scratch_192*scratch_351 - scratch_193*scratch_352 - scratch_194*scratch_353;
    double scratch_355 = -A[392]*scratch_210 + A[406] - scratch_211*scratch_342 - scratch_212*scratch_343 - scratch_213*scratch_344 - scratch_214*scratch_345 - scratch_215*scratch_346 - scratch_216*scratch_347 - scratch_217*scratch_348 - scratch_218*scratch_349 - scratch_219*scratch_350 - scratch_220*scratch_351 - scratch_221*scratch_352 - scratch_222*scratch_353 - scratch_223*scratch_354;
    double scratch_356 = -A[392]*scratch_240 + A[407] - scratch_241*scratch_342 - scratch_242*scratch_343 - scratch_243*scratch_344 - scratch_244*scratch_345 - scratch_245*scratch_346 - scratch_246*scratch_347 - scratch_247*scratch_348 - scratch_248*scratch_349 - scratch_249*scratch_350 - scratch_250*scratch_351 - scratch_251*scratch_352 - scratch_252*scratch_353 - scratch_253*scratch_354 - scratch_254*scratch_355;
    double scratch_357 = -A[392]*scratch_272 + A[408] - scratch_273*scratch_342 - scratch_274*scratch_343 - scratch_275*scratch_344 - scratch_276*scratch_345 - scratch_277*scratch_346 - scratch_278*scratch_347 - scratch_279*scratch_348 - scratch_280*scratch_349 - scratch_281*scratch_350 - scratch_282*scratch_351 - scratch_283*scratch_352 - scratch_284*scratch_353 - scratch_285*scratch_354 - scratch_286*scratch_355 - scratch_287*scratch_356;
    double scratch_358 = -A[392]*scratch_306 + A[409] - scratch_307*scratch_342 - scratch_308*scratch_343 - scratch_309*scratch_344 - scratch_310*scratch_345 - scratch_311*scratch_346 - scratch_312*scratch_347 - scratch_313*scratch_348 - scratch_314*scratch_349 - scratch_315*scratch_350 - scratch_316*scratch_351 - scratch_317*scratch_352 - scratch_318*scratch_353 - scratch_319*scratch_354 - scratch_320*scratch_355 - scratch_321*scratch_356 - scratch_322*scratch_357;
    double scratch_359 = -A[392]*scratch_2 + A[411] - scratch_10*scratch_342 - scratch_109*scratch_350 - scratch_11*scratch_343 - scratch_131*scratch_351 - scratch_155*scratch_352 - scratch_181*scratch_353 - scratch_19*scratch_344 - scratch_209*scratch_354 - scratch_239*scratch_355 - scratch_271*scratch_356 - scratch_29*scratch_345 - scratch_305*scratch_357 - scratch_341*scratch_358 - scratch_346*scratch_41 - scratch_347*scratch_55 - scratch_348*scratch_71 - scratch_349*scratch_89;
    double scratch_360 = A[18]*scratch_0;
    double scratch_361 = scratch_5*(-A[22]*scratch_360 + A[40]);
    double scratch_362 = scratch_9*(-A[44]*scratch_360 + A[62] - scratch_361*scratch_8);
    double scratch_363 = scratch_18*(-A[66]*scratch_360 + A[84] - scratch_16*scratch_361 - scratch_17*scratch_362);
    double scratch_364 = scratch_28*(A[106] - A[88]*scratch_360 - scratch_25*scratch_361 - scratch_26*scratch_362 - scratch_27*scratch_363);
    double scratch_365 = scratch_40*(-A[110]*scratch_360 + A[128] - scratch_36*scratch_361 - scratch_362*scratch_37 - scratch_363*scratch_38 - scratch_364*scratch_39);
    double scratch_366 = scratch_54*(-A[132]*scratch_360 + A[150] - scratch_361*scratch_49 - scratch_362*scratch_50 - scratch_363*scratch_51 - scratch_364*scratch_52 - scratch_365*scratch_53);
    double scratch_367 = scratch_70*(-A[154]*scratch_360 + A[172] - scratch_361*scratch_64 - scratch_362*scratch_65 - scratch_363*scratch_66 - scratch_364*scratch_67 - scratch_365*scratch_68 - scratch_366*scratch_69);
    double scratch_368 = scratch_88*(-A[176]*scratch_360 - scratch_361*scratch_81 - scratch_362*scratch_82 - scratch_363*scratch_83 - scratch_364*scratch_84 - scratch_365*scratch_85 - scratch_366*scratch_86 - scratch_367*scratch_87);
    double scratch_369 = scratch_108*(-A[194]*scratch_360 + A[212] - scratch_100*scratch_361 - scratch_101*scratch_362 - scratch_102*scratch_363 - scratch_103*scratch_364 - scratch_104*scratch_365 - scratch_105*scratch_366 - scratch_106*scratch_367 - scratch_107*scratch_368);
    double scratch_370 = scratch_130*(-A[216]*scratch_360 + A[234] - scratch_121*scratch_361 - scratch_122*scratch_362 - scratch_123*scratch_363 - scratch_124*scratch_364 - scratch_125*scratch_365 - scratch_126*scratch_366 - scratch_127*scratch_367 - scratch_128*scratch_368 - scratch_129*scratch_369);
    double scratch_371 = scratch_154*(-A[238]*scratch_360 + A[256] - scratch_144*scratch_361 - scratch_145*scratch_362 - scratch_146*scratch_363 - scratch_147*scratch_364 - scratch_148*scratch_365 - scratch_149*scratch_366 - scratch_150*scratch_367 - scratch_151*scratch_368 - scratch_152*scratch_369 - scratch_153*scratch_370);
    double scratch_372 = scratch_180*(-A[260]*scratch_360 + A[278] - scratch_169*scratch_361 - scratch_170*scratch_362 - scratch_171*scratch_363 - scratch_172*scratch_364 - scratch_173*scratch_365 - scratch_174*scratch_366 - scratch_175*scratch_367 - scratch_176*scratch_368 - scratch_177*scratch_369 - scratch_178*scratch_370 - scratch_179*scratch_371);
    double scratch_373 = scratch_208*(-A[282]*scratch_360 + A[300] - scratch_196*scratch_361 - scratch_197*scratch_362 - scratch_198*scratch_363 - scratch_199*scratch_364 - scratch_200*scratch_365 - scratch_201*scratch_366 - scratch_202*scratch_367 - scratch_203*scratch_368 - scratch_204*scratch_369 - scratch_205*scratch_370 - scratch_206*scratch_371 - scratch_207*scratch_372);
    double scratch_374 = scratch_238*(-A[304]*scratch_360 + A[322] - scratch_225*scratch_361 - scratch_226*scratch_362 - scratch_227*scratch_363 - scratch_228*scratch_364 - scratch_229*scratch_365 - scratch_230*scratch_366 - scratch_231*scratch_367 - scratch_232*scratch_368 - scratch_233*scratch_369 - scratch_234*scratch_370 - scratch_235*scratch_371 - scratch_236*scratch_372 - scratch_237*scratch_373);
    double scratch_375 = scratch_270*(-A[326]*scratch_360 + A[344] - scratch_256*scratch_361 - scratch_257*scratch_362 - scratch_258*scratch_363 - scratch_259*scratch_364 - scratch_260*scratch_365 - scratch_261*scratch_366 - scratch_262*scratch_367 - scratch_263*scratch_368 - scratch_264*scratch_369 - scratch_265*scratch_370 - scratch_266*scratch_371 - scratch_267*scratch_372 - scratch_268*scratch_373 - scratch_269*scratch_374);
    double scratch_376 = scratch_304*(-A[348]*scratch_360 + A[366] - scratch_289*scratch_361 - scratch_290*scratch_362 - scratch_291*scratch_363 - scratch_292*scratch_364 - scratch_293*scratch_365 - scratch_294*scratch_366 - scratch_295*scratch_367 - scratch_296*scratch_368 - scratch_297*scratch_369 - scratch_298*scratch_370 - scratch_299*scratch_371 - scratch_300*scratch_372 - scratch_301*scratch_373 - scratch_302*scratch_374 - scratch_303*scratch_375);
    double scratch_377 = scratch_340*(-A[370]*scratch_360 + A[388] - scratch_324*scratch_361 - scratch_325*scratch_362 - scratch_326*scratch_363 - scratch_327*scratch_364 - scratch_328*scratch_365 - scratch_329*scratch_366 - scratch_330*scratch_367 - scratch_331*scratch_368 - scratch_332*scratch_369 - scratch_333*scratch_370 - scratch_334*scratch_371 - scratch_335*scratch_372 - scratch_336*scratch_373 - scratch_337*scratch_374 - scratch_338*scratch_375 - scratch_339*scratch_376);
    double scratch_378 = 1.0/(-A[392]*scratch_360 + A[410] - scratch_342*scratch_361 - scratch_343*scratch_362 - scratch_344*scratch_363 - scratch_345*scratch_364 - scratch_346*scratch_365 - scratch_347*scratch_366 - scratch_348*scratch_367 - scratch_349*scratch_368 - scratch_350*scratch_369 - scratch_351*scratch_370 - scratch_352*scratch_371 - scratch_353*scratch_372 - scratch_354*scratch_373 - scratch_355*scratch_374 - scratch_356*scratch_375 - scratch_357*scratch_376 - scratch_358*scratch_377);
    double scratch_379 = -scratch_120*scratch_370 - scratch_143*scratch_371 - scratch_15*scratch_363 - scratch_168*scratch_372 - scratch_195*scratch_373 - scratch_224*scratch_374 - scratch_24*scratch_364 - scratch_255*scratch_375 - scratch_288*scratch_376 - scratch_323*scratch_377 - scratch_35*scratch_365 + scratch_360 - scratch_361*scratch_4 - scratch_362*scratch_7 - scratch_366*scratch_48 - scratch_367*scratch_63 - scratch_368*scratch_80 - scratch_369*scratch_99;
    double scratch_380 = scratch_378*scratch_379;
    double scratch_381 = b[19]/A[414];
    double scratch_382 = A[20]*scratch_0;
    double scratch_383 = scratch_5*(-A[22]*scratch_382 + A[42]);
    double scratch_384 = scratch_9*(-A[44]*scratch_382 + A[64] - scratch_383*scratch_8);
    double scratch_385 = scratch_18*(-A[66]*scratch_382 + A[86] - scratch_16*scratch_383 - scratch_17*scratch_384);
    double scratch_386 = scratch_28*(A[108] - A[88]*scratch_382 - scratch_25*scratch_383 - scratch_26*scratch_384 - scratch_27*scratch_385);
    double scratch_387 = scratch_40*(-A[110]*scratch_382 + A[130] - scratch_36*scratch_383 - scratch_37*scratch_384 - scratch_38*scratch_385 - scratch_386*scratch_39);
    double scratch_388 = scratch_54*(-A[132]*scratch_382 + A[152] - scratch_383*scratch_49 - scratch_384*scratch_50 - scratch_385*scratch_51 - scratch_386*scratch_52 - scratch_387*scratch_53);
    double scratch_389 = scratch_70*(-A[154]*scratch_382 + A[174] - scratch_383*scratch_64 - scratch_384*scratch_65 - scratch_385*scratch_66 - scratch_386*scratch_67 - scratch_387*scratch_68 - scratch_388*scratch_69);
    double scratch_390 = scratch_88*(-A[176]*scratch_382 + A[192] - scratch_383*scratch_81 - scratch_384*scratch_82 - scratch_385*scratch_83 - scratch_386*scratch_84 - scratch_387*scratch_85 - scratch_388*scratch_86 - scratch_389*scratch_87);
    double scratch_391 = scratch_108*(-A[194]*scratch_382 + A[214] - scratch_100*scratch_383 - scratch_101*scratch_384 - scratch_102*scratch_385 - scratch_103*scratch_386 - scratch_104*scratch_387 - scratch_105*scratch_388 - scratch_106*scratch_389 - scratch_107*scratch_390);
    double scratch_392 = scratch_130*(-A[216]*scratch_382 + A[236] - scratch_121*scratch_383 - scratch_122*scratch_384 - scratch_123*scratch_385 - scratch_124*scratch_386 - scratch_125*scratch_387 - scratch_126*scratch_388 - scratch_127*scratch_389 - scratch_128*scratch_390 - scratch_129*scratch_391);
    double scratch_393 = scratch_154*(-A[238]*scratch_382 + A[258] - scratch_144*scratch_383 - scratch_145*scratch_384 - scratch_146*scratch_385 - scratch_147*scratch_386 - scratch_148*scratch_387 - scratch_149*scratch_388 - scratch_150*scratch_389 - scratch_151*scratch_390 - scratch_152*scratch_391 - scratch_153*scratch_392);
    double scratch_394 = scratch_180*(-A[260]*scratch_382 + A[280] - scratch_169*scratch_383 - scratch_170*scratch_384 - scratch_171*scratch_385 - scratch_172*scratch_386 - scratch_173*scratch_387 - scratch_174*scratch_388 - scratch_175*scratch_389 - scratch_176*scratch_390 - scratch_177*scratch_391 - scratch_178*scratch_392 - scratch_179*scratch_393);
    double scratch_395 = scratch_208*(-A[282]*scratch_382 + A[302] - scratch_196*scratch_383 - scratch_197*scratch_384 - scratch_198*scratch_385 - scratch_199*scratch_386 - scratch_200*scratch_387 - scratch_201*scratch_388 - scratch_202*scratch_389 - scratch_203*scratch_390 - scratch_204*scratch_391 - scratch_205*scratch_392 - scratch_206*scratch_393 - scratch_207*scratch_394);
    double scratch_396 = scratch_238*(-A[304]*scratch_382 + A[324] - scratch_225*scratch_383 - scratch_226*scratch_384 - scratch_227*scratch_385 - scratch_228*scratch_386 - scratch_229*scratch_387 - scratch_230*scratch_388 - scratch_231*scratch_389 - scratch_232*scratch_390 - scratch_233*scratch_391 - scratch_234*scratch_392 - scratch_235*scratch_393 - scratch_236*scratch_394 - scratch_237*scratch_395);
    double scratch_397 = scratch_270*(-A[326]*scratch_382 + A[346] - scratch_256*scratch_383 - scratch_257*scratch_384 - scratch_258*scratch_385 - scratch_259*scratch_386 - scratch_260*scratch_387 - scratch_261*scratch_388 - scratch_262*scratch_389 - scratch_263*scratch_390 - scratch_264*scratch_391 - scratch_265*scratch_392 - scratch_266*scratch_393 - scratch_267*scratch_394 - scratch_268*scratch_395 - scratch_269*scratch_396);
    double scratch_398 = scratch_304*(-A[348]*scratch_382 + A[368] - scratch_289*scratch_383 - scratch_290*scratch_384 - scratch_291*scratch_385 - scratch_292*scratch_386 - scratch_293*scratch_387 - scratch_294*scratch_388 - scratch_295*scratch_389 - scratch_296*scratch_390 - scratch_297*scratch_391 - scratch_298*scratch_392 - scratch_299*scratch_393 - scratch_300*scratch_394 - scratch_301*scratch_395 - scratch_302*scratch_396 - scratch_303*scratch_397);
    double scratch_399 = scratch_340*(-A[370]*scratch_382 + A[390] - scratch_324*scratch_383 - scratch_325*scratch_384 - scratch_326*scratch_385 - scratch_327*scratch_386 - scratch_328*scratch_387 - scratch_329*scratch_388 - scratch_330*scratch_389 - scratch_331*scratch_390 - scratch_332*scratch_391 - scratch_333*scratch_392 - scratch_334*scratch_393 - scratch_335*scratch_394 - scratch_336*scratch_395 - scratch_337*scratch_396 - scratch_338*scratch_397 - scratch_339*scratch_398);
    double scratch_400 = -A[392]*scratch_382 + A[412] - scratch_342*scratch_383 - scratch_343*scratch_384 - scratch_344*scratch_385 - scratch_345*scratch_386 - scratch_346*scratch_387 - scratch_347*scratch_388 - scratch_348*scratch_389 - scratch_349*scratch_390 - scratch_350*scratch_391 - scratch_351*scratch_392 - scratch_352*scratch_393 - scratch_353*scratch_394 - scratch_354*scratch_395 - scratch_355*scratch_396 - scratch_356*scratch_397 - scratch_357*scratch_398 - scratch_358*scratch_399;
    double scratch_401 = b[20]/A[415];
    double scratch_402 = scratch_5*(-A[22]*scratch_1 + b[1]);
    double scratch_403 = scratch_9*(-A[44]*scratch_1 + b[2] - scratch_402*scratch_8);
    double scratch_404 = scratch_18*(-A[66]*scratch_1 + b[3] - scratch_16*scratch_402 - scratch_17*scratch_403);
    double scratch_405 = scratch_28*(-A[88]*scratch_1 + b[4] - scratch_25*scratch_402 - scratch_26*scratch_403 - scratch_27*scratch_404);
    double scratch_406 = scratch_40*(-A[110]*scratch_1 + b[5] - scratch_36*scratch_402 - scratch_37*scratch_403 - scratch_38*scratch_404 - scratch_39*scratch_405);
    double scratch_407 = scratch_54*(-A[132]*scratch_1 + b[6] - scratch_402*scratch_49 - scratch_403*scratch_50 - scratch_404*scratch_51 - scratch_405*scratch_52 - scratch_406*scratch_53);
    double scratch_408 = scratch_70*(-A[154]*scratch_1 + b[7] - scratch_402*scratch_64 - scratch_403*scratch_65 - scratch_404*scratch_66 - scratch_405*scratch_67 - scratch_406*scratch_68 - scratch_407*scratch_69);
    double scratch_409 = scratch_88*(-A[176]*scratch_1 + b[8] - scratch_402*scratch_81 - scratch_403*scratch_82 - scratch_404*scratch_83 - scratch_405*scratch_84 - scratch_406*scratch_85 - scratch_407*scratch_86 - scratch_408*scratch_87);
    double scratch_410 = scratch_108*(-A[194]*scratch_1 + b[9] - scratch_100*scratch_402 - scratch_101*scratch_403 - scratch_102*scratch_404 - scratch_103*scratch_405 - scratch_104*scratch_406 - scratch_105*scratch_407 - scratch_106*scratch_408 - scratch_107*scratch_409);
    double scratch_411 = scratch_130*(-A[216]*scratch_1 + b[10] - scratch_121*scratch_402 - scratch_122*scratch_403 - scratch_123*scratch_404 - scratch_124*scratch_405 - scratch_125*scratch_406 - scratch_126*scratch_407 - scratch_127*scratch_408 - scratch_128*scratch_409 - scratch_129*scratch_410);
    double scratch_412 = scratch_154*(-A[238]*scratch_1 + b[11] - scratch_144*scratch_402 - scratch_145*scratch_403 - scratch_146*scratch_404 - scratch_147*scratch_405 - scratch_148*scratch_406 - scratch_149*scratch_407 - scratch_150*scratch_408 - scratch_151*scratch_409 - scratch_152*scratch_410 - scratch_153*scratch_411);
    double scratch_413 = scratch_180*(-A[260]*scratch_1 + b[12] - scratch_169*scratch_402 - scratch_170*scratch_403 - scratch_171*scratch_404 - scratch_172*scratch_405 - scratch_173*scratch_406 - scratch_174*scratch_407 - scratch_175*scratch_408 - scratch_176*scratch_409 - scratch_177*scratch_410 - scratch_178*scratch_411 - scratch_179*scratch_412);
    double scratch_414 = scratch_208*(-A[282]*scratch_1 + b[13] - scratch_196*scratch_402 - scratch_197*scratch_403 - scratch_198*scratch_404 - scratch_199*scratch_405 - scratch_200*scratch_406 - scratch_201*scratch_407 - scratch_202*scratch_408 - scratch_203*scratch_409 - scratch_204*scratch_410 - scratch_205*scratch_411 - scratch_206*scratch_412 - scratch_207*scratch_413);
    double scratch_415 = scratch_238*(-A[304]*scratch_1 + b[14] - scratch_225*scratch_402 - scratch_226*scratch_403 - scratch_227*scratch_404 - scratch_228*scratch_405 - scratch_229*scratch_406 - scratch_230*scratch_407 - scratch_231*scratch_408 - scratch_232*scratch_409 - scratch_233*scratch_410 - scratch_234*scratch_411 - scratch_235*scratch_412 - scratch_236*scratch_413 - scratch_237*scratch_414);
    double scratch_416 = scratch_270*(-A[326]*scratch_1 + b[15] - scratch_256*scratch_402 - scratch_257*scratch_403 - scratch_258*scratch_404 - scratch_259*scratch_405 - scratch_260*scratch_406 - scratch_261*scratch_407 - scratch_262*scratch_408 - scratch_263*scratch_409 - scratch_264*scratch_410 - scratch_265*scratch_411 - scratch_266*scratch_412 - scratch_267*scratch_413 - scratch_268*scratch_414 - scratch_269*scratch_415);
    double scratch_417 = scratch_304*(-A[348]*scratch_1 + b[16] - scratch_289*scratch_402 - scratch_290*scratch_403 - scratch_291*scratch_404 - scratch_292*scratch_405 - scratch_293*scratch_406 - scratch_294*scratch_407 - scratch_295*scratch_408 - scratch_296*scratch_409 - scratch_297*scratch_410 - scratch_298*scratch_411 - scratch_299*scratch_412 - scratch_300*scratch_413 - scratch_301*scratch_414 - scratch_302*scratch_415 - scratch_303*scratch_416);
    double scratch_418 = scratch_340*(-A[370]*scratch_1 + b[17] - scratch_324*scratch_402 - scratch_325*scratch_403 - scratch_326*scratch_404 - scratch_327*scratch_405 - scratch_328*scratch_406 - scratch_329*scratch_407 - scratch_330*scratch_408 - scratch_331*scratch_409 - scratch_332*scratch_410 - scratch_333*scratch_411 - scratch_334*scratch_412 - scratch_335*scratch_413 - scratch_336*scratch_414 - scratch_337*scratch_415 - scratch_338*scratch_416 - scratch_339*scratch_417);
    double scratch_419 = scratch_378*(-A[392]*scratch_1 + b[18] - scratch_342*scratch_402 - scratch_343*scratch_403 - scratch_344*scratch_404 - scratch_345*scratch_405 - scratch_346*scratch_406 - scratch_347*scratch_407 - scratch_348*scratch_408 - scratch_349*scratch_409 - scratch_350*scratch_410 - scratch_351*scratch_411 - scratch_352*scratch_412 - scratch_353*scratch_413 - scratch_354*scratch_414 - scratch_355*scratch_415 - scratch_356*scratch_416 - scratch_357*scratch_417 - scratch_358*scratch_418);
    double scratch_420 = A[21]*scratch_0;
    double scratch_421 = scratch_5*(-A[22]*scratch_420 + A[43]);
    double scratch_422 = scratch_9*(-A[44]*scratch_420 + A[65] - scratch_421*scratch_8);
    double scratch_423 = scratch_18*(-A[66]*scratch_420 + A[87] - scratch_16*scratch_421 - scratch_17*scratch_422);
    double scratch_424 = scratch_28*(A[109] - A[88]*scratch_420 - scratch_25*scratch_421 - scratch_26*scratch_422 - scratch_27*scratch_423);
    double scratch_425 = scratch_40*(-A[110]*scratch_420 + A[131] - scratch_36*scratch_421 - scratch_37*scratch_422 - scratch_38*scratch_423 - scratch_39*scratch_424);
    double scratch_426 = scratch_54*(-A[132]*scratch_420 + A[153] - scratch_421*scratch_49 - scratch_422*scratch_50 - scratch_423*scratch_51 - scratch_424*scratch_52 - scratch_425*scratch_53);
    double scratch_427 = scratch_70*(-A[154]*scratch_420 + A[175] - scratch_421*scratch_64 - scratch_422*scratch_65 - scratch_423*scratch_66 - scratch_424*scratch_67 - scratch_425*scratch_68 - scratch_426*scratch_69);
    double scratch_428 = scratch_88*(-A[176]*scratch_420 + A[193] - scratch_421*scratch_81 - scratch_422*scratch_82 - scratch_423*scratch_83 - scratch_424*scratch_84 - scratch_425*scratch_85 - scratch_426*scratch_86 - scratch_427*scratch_87);
    double scratch_429 = scratch_108*(-A[194]*scratch_420 + A[215] - scratch_100*scratch_421 - scratch_101*scratch_422 - scratch_102*scratch_423 - scratch_103*scratch_424 - scratch_104*scratch_425 - scratch_105*scratch_426 - scratch_106*scratch_427 - scratch_107*scratch_428);
    double scratch_430 = scratch_130*(-A[216]*scratch_420 + A[237] - scratch_121*scratch_421 - scratch_122*scratch_422 - scratch_123*scratch_423 - scratch_124*scratch_424 - scratch_125*scratch_425 - scratch_126*scratch_426 - scratch_127*scratch_427 - scratch_128*scratch_428 - scratch_129*scratch_429);
    double scratch_431 = scratch_154*(-A[238]*scratch_420 + A[259] - scratch_144*scratch_421 - scratch_145*scratch_422 - scratch_146*scratch_423 - scratch_147*scratch_424 - scratch_148*scratch_425 - scratch_149*scratch_426 - scratch_150*scratch_427 - scratch_151*scratch_428 - scratch_152*scratch_429 - scratch_153*scratch_430);
    double scratch_432 = scratch_180*(-A[260]*scratch_420 + A[281] - scratch_169*scratch_421 - scratch_170*scratch_422 - scratch_171*scratch_423 - scratch_172*scratch_424 - scratch_173*scratch_425 - scratch_174*scratch_426 - scratch_175*scratch_427 - scratch_176*scratch_428 - scratch_177*scratch_429 - scratch_178*scratch_430 - scratch_179*scratch_431);
    double scratch_433 = scratch_208*(-A[282]*scratch_420 + A[303] - scratch_196*scratch_421 - scratch_197*scratch_422 - scratch_198*scratch_423 - scratch_199*scratch_424 - scratch_200*scratch_425 - scratch_201*scratch_426 - scratch_202*scratch_427 - scratch_203*scratch_428 - scratch_204*scratch_429 - scratch_205*scratch_430 - scratch_206*scratch_431 - scratch_207*scratch_432);
    double scratch_434 = scratch_238*(-A[304]*scratch_420 + A[325] - scratch_225*scratch_421 - scratch_226*scratch_422 - scratch_227*scratch_423 - scratch_228*scratch_424 - scratch_229*scratch_425 - scratch_230*scratch_426 - scratch_231*scratch_427 - scratch_232*scratch_428 - scratch_233*scratch_429 - scratch_234*scratch_430 - scratch_235*scratch_431 - scratch_236*scratch_432 - scratch_237*scratch_433);
    double scratch_435 = scratch_270*(-A[326]*scratch_420 + A[347] - scratch_256*scratch_421 - scratch_257*scratch_422 - scratch_258*scratch_423 - scratch_259*scratch_424 - scratch_260*scratch_425 - scratch_261*scratch_426 - scratch_262*scratch_427 - scratch_263*scratch_428 - scratch_264*scratch_429 - scratch_265*scratch_430 - scratch_266*scratch_431 - scratch_267*scratch_432 - scratch_268*scratch_433 - scratch_269*scratch_434);
    double scratch_436 = scratch_304*(-A[348]*scratch_420 + A[369] - scratch_289*scratch_421 - scratch_290*scratch_422 - scratch_291*scratch_423 - scratch_292*scratch_424 - scratch_293*scratch_425 - scratch_294*scratch_426 - scratch_295*scratch_427 - scratch_296*scratch_428 - scratch_297*scratch_429 - scratch_298*scratch_430 - scratch_299*scratch_431 - scratch_300*scratch_432 - scratch_301*scratch_433 - scratch_302*scratch_434 - scratch_303*scratch_435);
    double scratch_437 = scratch_340*(-A[370]*scratch_420 + A[391] - scratch_324*scratch_421 - scratch_325*scratch_422 - scratch_326*scratch_423 - scratch_327*scratch_424 - scratch_328*scratch_425 - scratch_329*scratch_426 - scratch_330*scratch_427 - scratch_331*scratch_428 - scratch_332*scratch_429 - scratch_333*scratch_430 - scratch_334*scratch_431 - scratch_335*scratch_432 - scratch_336*scratch_433 - scratch_337*scratch_434 - scratch_338*scratch_435 - scratch_339*scratch_436);
    double scratch_438 = -A[392]*scratch_420 + A[413] - scratch_342*scratch_421 - scratch_343*scratch_422 - scratch_344*scratch_423 - scratch_345*scratch_424 - scratch_346*scratch_425 - scratch_347*scratch_426 - scratch_348*scratch_427 - scratch_349*scratch_428 - scratch_350*scratch_429 - scratch_351*scratch_430 - scratch_352*scratch_431 - scratch_353*scratch_432 - scratch_354*scratch_433 - scratch_355*scratch_434 - scratch_356*scratch_435 - scratch_357*scratch_436 - scratch_358*scratch_437;
    double scratch_439 = -A[416]*scratch_4 + A[417];
    double scratch_440 = -A[416]*scratch_3 + A[418] - scratch_439*scratch_6;
    double scratch_441 = -A[416]*scratch_12 + A[419] - scratch_13*scratch_439 - scratch_14*scratch_440;
    double scratch_442 = -A[416]*scratch_20 + A[420] - scratch_21*scratch_439 - scratch_22*scratch_440 - scratch_23*scratch_441;
    double scratch_443 = -A[416]*scratch_30 + A[421] - scratch_31*scratch_439 - scratch_32*scratch_440 - scratch_33*scratch_441 - scratch_34*scratch_442;
    double scratch_444 = -A[416]*scratch_42 + A[422] - scratch_43*scratch_439 - scratch_44*scratch_440 - scratch_441*scratch_45 - scratch_442*scratch_46 - scratch_443*scratch_47;
    double scratch_445 = -A[416]*scratch_56 + A[423] - scratch_439*scratch_57 - scratch_440*scratch_58 - scratch_441*scratch_59 - scratch_442*scratch_60 - scratch_443*scratch_61 - scratch_444*scratch_62;
    double scratch_446 = -A[416]*scratch_72 + A[424] - scratch_439*scratch_73 - scratch_440*scratch_74 - scratch_441*scratch_75 - scratch_442*scratch_76 - scratch_443*scratch_77 - scratch_444*scratch_78 - scratch_445*scratch_79;
    double scratch_447 = -A[416]*scratch_90 + A[425] - scratch_439*scratch_91 - scratch_440*scratch_92 - scratch_441*scratch_93 - scratch_442*scratch_94 - scratch_443*scratch_95 - scratch_444*scratch_96 - scratch_445*scratch_97 - scratch_446*scratch_98;
    double scratch_448 = -A[416]*scratch_110 + A[426] - scratch_111*scratch_439 - scratch_112*scratch_440 - scratch_113*scratch_441 - scratch_114*scratch_442 - scratch_115*scratch_443 - scratch_116*scratch_444 - scratch_117*scratch_445 - scratch_118*scratch_446 - scratch_119*scratch_447;
    double scratch_449 = -A[416]*scratch_132 + A[427] - scratch_133*scratch_439 - scratch_134*scratch_440 - scratch_135*scratch_441 - scratch_136*scratch_442 - scratch_137*scratch_443 - scratch_138*scratch_444 - scratch_139*scratch_445 - scratch_140*scratch_446 - scratch_141*scratch_447 - scratch_142*scratch_448;
    double scratch_450 = -A[416]*scratch_156 + A[428] - scratch_157*scratch_439 - scratch_158*scratch_440 - scratch_159*scratch_441 - scratch_160*scratch_442 - scratch_161*scratch_443 - scratch_162*scratch_444 - scratch_163*scratch_445 - scratch_164*scratch_446 - scratch_165*scratch_447 - scratch_166*scratch_448 - scratch_167*scratch_449;
    double scratch_451 = -A[416]*scratch_182 + A[429] - scratch_183*scratch_439 - scratch_184*scratch_440 - scratch_185*scratch_441 - scratch_186*scratch_442 - scratch_187*scratch_443 - scratch_188*scratch_444 - scratch_189*scratch_445 - scratch_190*scratch_446 - scratch_191*scratch_447 - scratch_192*scratch_448 - scratch_193*scratch_449 - scratch_194*scratch_450;
    double scratch_452 = -A[416]*scratch_210 + A[430] - scratch_211*scratch_439 - scratch_212*scratch_440 - scratch_213*scratch_441 - scratch_214*scratch_442 - scratch_215*scratch_443 - scratch_216*scratch_444 - scratch_217*scratch_445 - scratch_218*scratch_446 - scratch_219*scratch_447 - scratch_220*scratch_448 - scratch_221*scratch_449 - scratch_222*scratch_450 - scratch_223*scratch_451;
    double scratch_453 = -A[416]*scratch_240 + A[431] - scratch_241*scratch_439 - scratch_242*scratch_440 - scratch_243*scratch_441 - scratch_244*scratch_442 - scratch_245*scratch_443 - scratch_246*scratch_444 - scratch_247*scratch_445 - scratch_248*scratch_446 - scratch_249*scratch_447 - scratch_250*scratch_448 - scratch_251*scratch_449 - scratch_252*scratch_450 - scratch_253*scratch_451 - scratch_254*scratch_452;
    double scratch_454 = -A[416]*scratch_272 + A[432] - scratch_273*scratch_439 - scratch_274*scratch_440 - scratch_275*scratch_441 - scratch_276*scratch_442 - scratch_277*scratch_443 - scratch_278*scratch_444 - scratch_279*scratch_445 - scratch_280*scratch_446 - scratch_281*scratch_447 - scratch_282*scratch_448 - scratch_283*scratch_449 - scratch_284*scratch_450 - scratch_285*scratch_451 - scratch_286*scratch_452 - scratch_287*scratch_453;
    double scratch_455 = -A[416]*scratch_306 + A[433] - scratch_307*scratch_439 - scratch_308*scratch_440 - scratch_309*scratch_441 - scratch_310*scratch_442 - scratch_311*scratch_443 - scratch_312*scratch_444 - scratch_313*scratch_445 - scratch_314*scratch_446 - scratch_315*scratch_447 - scratch_316*scratch_448 - scratch_317*scratch_449 - scratch_318*scratch_450 - scratch_319*scratch_451 - scratch_320*scratch_452 - scratch_321*scratch_453 - scratch_322*scratch_454;
    double scratch_456 = -A[416]*scratch_360 + A[434] - scratch_361*scratch_439 - scratch_362*scratch_440 - scratch_363*scratch_441 - scratch_364*scratch_442 - scratch_365*scratch_443 - scratch_366*scratch_444 - scratch_367*scratch_445 - scratch_368*scratch_446 - scratch_369*scratch_447 - scratch_370*scratch_448 - scratch_371*scratch_449 - scratch_372*scratch_450 - scratch_373*scratch_451 - scratch_374*scratch_452 - scratch_375*scratch_453 - scratch_376*scratch_454 - scratch_377*scratch_455;
    double scratch_457 = scratch_378*scratch_456;
    double scratch_458 = (-A[416]*scratch_1 + b[21] - scratch_381*(-A[416]*scratch_2 + A[435] - scratch_10*scratch_439 - scratch_109*scratch_447 - scratch_11*scratch_440 - scratch_131*scratch_448 - scratch_155*scratch_449 - scratch_181*scratch_450 - scratch_19*scratch_441 - scratch_209*scratch_451 - scratch_239*scratch_452 - scratch_271*scratch_453 - scratch_29*scratch_442 - scratch_305*scratch_454 - scratch_341*scratch_455 - scratch_359*scratch_457 - scratch_41*scratch_443 - scratch_444*scratch_55 - scratch_445*scratch_71 - scratch_446*scratch_89) - scratch_401*(-A[416]*scratch_382 + A[436] - scratch_383*scratch_439 - scratch_384*scratch_440 - scratch_385*scratch_441 - scratch_386*scratch_442 - scratch_387*scratch_443 - scratch_388*scratch_444 - scratch_389*scratch_445 - scratch_390*scratch_446 - scratch_391*scratch_447 - scratch_392*scratch_448 - scratch_393*scratch_449 - scratch_394*scratch_450 - scratch_395*scratch_451 - scratch_396*scratch_452 - scratch_397*scratch_453 - scratch_398*scratch_454 - scratch_399*scratch_455 - scratch_400*scratch_457) - scratch_402*scratch_439 - scratch_403*scratch_440 - scratch_404*scratch_441 - scratch_405*scratch_442 - scratch_406*scratch_443 - scratch_407*scratch_444 - scratch_408*scratch_445 - scratch_409*scratch_446 - scratch_410*scratch_447 - scratch_411*scratch_448 - scratch_412*scratch_449 - scratch_413*scratch_450 - scratch_414*scratch_451 - scratch_415*scratch_452 - scratch_416*scratch_453 - scratch_417*scratch_454 - scratch_418*scratch_455 - scratch_419*scratch_456)/(-A[416]*scratch_420 + A[437] - scratch_421*scratch_439 - scratch_422*scratch_440 - scratch_423*scratch_441 - scratch_424*scratch_442 - scratch_425*scratch_443 - scratch_426*scratch_444 - scratch_427*scratch_445 - scratch_428*scratch_446 - scratch_429*scratch_447 - scratch_430*scratch_448 - scratch_431*scratch_449 - scratch_432*scratch_450 - scratch_433*scratch_451 - scratch_434*scratch_452 - scratch_435*scratch_453 - scratch_436*scratch_454 - scratch_437*scratch_455 - scratch_438*scratch_457);
    double scratch_459 = scratch_13 - scratch_14*scratch_6;
    double scratch_460 = scratch_21 - scratch_22*scratch_6 - scratch_23*scratch_459;
    double scratch_461 = scratch_31 - scratch_32*scratch_6 - scratch_33*scratch_459 - scratch_34*scratch_460;
    double scratch_462 = scratch_43 - scratch_44*scratch_6 - scratch_45*scratch_459 - scratch_46*scratch_460 - scratch_461*scratch_47;
    double scratch_463 = -scratch_459*scratch_59 - scratch_460*scratch_60 - scratch_461*scratch_61 - scratch_462*scratch_62 + scratch_57 - scratch_58*scratch_6;
    double scratch_464 = -scratch_459*scratch_75 - scratch_460*scratch_76 - scratch_461*scratch_77 - scratch_462*scratch_78 - scratch_463*scratch_79 - scratch_6*scratch_74 + scratch_73;
    double scratch_465 = -scratch_459*scratch_93 - scratch_460*scratch_94 - scratch_461*scratch_95 - scratch_462*scratch_96 - scratch_463*scratch_97 - scratch_464*scratch_98 - scratch_6*scratch_92 + scratch_91;
    double scratch_466 = scratch_111 - scratch_112*scratch_6 - scratch_113*scratch_459 - scratch_114*scratch_460 - scratch_115*scratch_461 - scratch_116*scratch_462 - scratch_117*scratch_463 - scratch_118*scratch_464 - scratch_119*scratch_465;
    double scratch_467 = scratch_133 - scratch_134*scratch_6 - scratch_135*scratch_459 - scratch_136*scratch_460 - scratch_137*scratch_461 - scratch_138*scratch_462 - scratch_139*scratch_463 - scratch_140*scratch_464 - scratch_141*scratch_465 - scratch_142*scratch_466;
    double scratch_468 = scratch_157 - scratch_158*scratch_6 - scratch_159*scratch_459 - scratch_160*scratch_460 - scratch_161*scratch_461 - scratch_162*scratch_462 - scratch_163*scratch_463 - scratch_164*scratch_464 - scratch_165*scratch_465 - scratch_166*scratch_466 - scratch_167*scratch_467;
    double scratch_469 = scratch_183 - scratch_184*scratch_6 - scratch_185*scratch_459 - scratch_186*scratch_460 - scratch_187*scratch_461 - scratch_188*scratch_462 - scratch_189*scratch_463 - scratch_190*scratch_464 - scratch_191*scratch_465 - scratch_192*scratch_466 - scratch_193*scratch_467 - scratch_194*scratch_468;
    double scratch_470 = scratch_211 - scratch_212*scratch_6 - scratch_213*scratch_459 - scratch_214*scratch_460 - scratch_215*scratch_461 - scratch_216*scratch_462 - scratch_217*scratch_463 - scratch_218*scratch_464 - scratch_219*scratch_465 - scratch_220*scratch_466 - scratch_221*scratch_467 - scratch_222*scratch_468 - scratch_223*scratch_469;
    double scratch_471 = scratch_241 - scratch_242*scratch_6 - scratch_243*scratch_459 - scratch_244*scratch_460 - scratch_245*scratch_461 - scratch_246*scratch_462 - scratch_247*scratch_463 - scratch_248*scratch_464 - scratch_249*scratch_465 - scratch_250*scratch_466 - scratch_251*scratch_467 - scratch_252*scratch_468 - scratch_253*scratch_469 - scratch_254*scratch_470;
    double scratch_472 = scratch_273 - scratch_274*scratch_6 - scratch_275*scratch_459 - scratch_276*scratch_460 - scratch_277*scratch_461 - scratch_278*scratch_462 - scratch_279*scratch_463 - scratch_280*scratch_464 - scratch_281*scratch_465 - scratch_282*scratch_466 - scratch_283*scratch_467 - scratch_284*scratch_468 - scratch_285*scratch_469 - scratch_286*scratch_470 - scratch_287*scratch_471;
    double scratch_473 = scratch_307 - scratch_308*scratch_6 - scratch_309*scratch_459 - scratch_310*scratch_460 - scratch_311*scratch_461 - scratch_312*scratch_462 - scratch_313*scratch_463 - scratch_314*scratch_464 - scratch_315*scratch_465 - scratch_316*scratch_466 - scratch_317*scratch_467 - scratch_318*scratch_468 - scratch_319*scratch_469 - scratch_320*scratch_470 - scratch_321*scratch_471 - scratch_322*scratch_472;
    double scratch_474 = scratch_361 - scratch_362*scratch_6 - scratch_363*scratch_459 - scratch_364*scratch_460 - scratch_365*scratch_461 - scratch_366*scratch_462 - scratch_367*scratch_463 - scratch_368*scratch_464 - scratch_369*scratch_465 - scratch_370*scratch_466 - scratch_371*scratch_467 - scratch_372*scratch_468 - scratch_373*scratch_469 - scratch_374*scratch_470 - scratch_375*scratch_471 - scratch_376*scratch_472 - scratch_377*scratch_473;
    double scratch_475 = scratch_378*scratch_474;
    double scratch_476 = -scratch_14*scratch_23 + scratch_22;
    double scratch_477 = -scratch_14*scratch_33 + scratch_32 - scratch_34*scratch_476;
    double scratch_478 = -scratch_14*scratch_45 + scratch_44 - scratch_46*scratch_476 - scratch_47*scratch_477;
    double scratch_479 = -scratch_14*scratch_59 - scratch_476*scratch_60 - scratch_477*scratch_61 - scratch_478*scratch_62 + scratch_58;
    double scratch_480 = -scratch_14*scratch_75 - scratch_476*scratch_76 - scratch_477*scratch_77 - scratch_478*scratch_78 - scratch_479*scratch_79 + scratch_74;
    double scratch_481 = -scratch_14*scratch_93 - scratch_476*scratch_94 - scratch_477*scratch_95 - scratch_478*scratch_96 - scratch_479*scratch_97 - scratch_480*scratch_98 + scratch_92;
    double scratch_482 = scratch_112 - scratch_113*scratch_14 - scratch_114*scratch_476 - scratch_115*scratch_477 - scratch_116*scratch_478 - scratch_117*scratch_479 - scratch_118*scratch_480 - scratch_119*scratch_481;
    double scratch_483 = scratch_134 - scratch_135*scratch_14 - scratch_136*scratch_476 - scratch_137*scratch_477 - scratch_138*scratch_478 - scratch_139*scratch_479 - scratch_140*scratch_480 - scratch_141*scratch_481 - scratch_142*scratch_482;
    double scratch_484 = -scratch_14*scratch_159 + scratch_158 - scratch_160*scratch_476 - scratch_161*scratch_477 - scratch_162*scratch_478 - scratch_163*scratch_479 - scratch_164*scratch_480 - scratch_165*scratch_481 - scratch_166*scratch_482 - scratch_167*scratch_483;
    double scratch_485 = -scratch_14*scratch_185 + scratch_184 - scratch_186*scratch_476 - scratch_187*scratch_477 - scratch_188*scratch_478 - scratch_189*scratch_479 - scratch_190*scratch_480 - scratch_191*scratch_481 - scratch_192*scratch_482 - scratch_193*scratch_483 - scratch_194*scratch_484;
    double scratch_486 = -scratch_14*scratch_213 + scratch_212 - scratch_214*scratch_476 - scratch_215*scratch_477 - scratch_216*scratch_478 - scratch_217*scratch_479 - scratch_218*scratch_480 - scratch_219*scratch_481 - scratch_220*scratch_482 - scratch_221*scratch_483 - scratch_222*scratch_484 - scratch_223*scratch_485;
    double scratch_487 = -scratch_14*scratch_243 + scratch_242 - scratch_244*scratch_476 - scratch_245*scratch_477 - scratch_246*scratch_478 - scratch_247*scratch_479 - scratch_248*scratch_480 - scratch_249*scratch_481 - scratch_250*scratch_482 - scratch_251*scratch_483 - scratch_252*scratch_484 - scratch_253*scratch_485 - scratch_254*scratch_486;
    double scratch_488 = -scratch_14*scratch_275 + scratch_274 - scratch_276*scratch_476 - scratch_277*scratch_477 - scratch_278*scratch_478 - scratch_279*scratch_479 - scratch_280*scratch_480 - scratch_281*scratch_481 - scratch_282*scratch_482 - scratch_283*scratch_483 - scratch_284*scratch_484 - scratch_285*scratch_485 - scratch_286*scratch_486 - scratch_287*scratch_487;
    double scratch_489 = -scratch_14*scratch_309 + scratch_308 - scratch_310*scratch_476 - scratch_311*scratch_477 - scratch_312*scratch_478 - scratch_313*scratch_479 - scratch_314*scratch_480 - scratch_315*scratch_481 - scratch_316*scratch_482 - scratch_317*scratch_483 - scratch_318*scratch_484 - scratch_319*scratch_485 - scratch_320*scratch_486 - scratch_321*scratch_487 - scratch_322*scratch_488;
    double scratch_490 = -scratch_14*scratch_363 + scratch_362 - scratch_364*scratch_476 - scratch_365*scratch_477 - scratch_366*scratch_478 - scratch_367*scratch_479 - scratch_368*scratch_480 - scratch_369*scratch_481 - scratch_370*scratch_482 - scratch_371*scratch_483 - scratch_372*scratch_484 - scratch_373*scratch_485 - scratch_374*scratch_486 - scratch_375*scratch_487 - scratch_376*scratch_488 - scratch_377*scratch_489;
    double scratch_491 = scratch_378*scratch_490;
    double scratch_492 = -scratch_23*scratch_34 + scratch_33;
    double scratch_493 = -scratch_23*scratch_46 + scratch_45 - scratch_47*scratch_492;
    double scratch_494 = -scratch_23*scratch_60 - scratch_492*scratch_61 - scratch_493*scratch_62 + scratch_59;
    double scratch_495 = -scratch_23*scratch_76 - scratch_492*scratch_77 - scratch_493*scratch_78 - scratch_494*scratch_79 + scratch_75;
    double scratch_496 = -scratch_23*scratch_94 - scratch_492*scratch_95 - scratch_493*scratch_96 - scratch_494*scratch_97 - scratch_495*scratch_98 + scratch_93;
    double scratch_497 = scratch_113 - scratch_114*scratch_23 - scratch_115*scratch_492 - scratch_116*scratch_493 - scratch_117*scratch_494 - scratch_118*scratch_495 - scratch_119*scratch_496;
    double scratch_498 = scratch_135 - scratch_136*scratch_23 - scratch_137*scratch_492 - scratch_138*scratch_493 - scratch_139*scratch_494 - scratch_140*scratch_495 - scratch_141*scratch_496 - scratch_142*scratch_497;
    double scratch_499 = scratch_159 - scratch_160*scratch_23 - scratch_161*scratch_492 - scratch_162*scratch_493 - scratch_163*scratch_494 - scratch_164*scratch_495 - scratch_165*scratch_496 - scratch_166*scratch_497 - scratch_167*scratch_498;
    double scratch_500 = scratch_185 - scratch_186*scratch_23 - scratch_187*scratch_492 - scratch_188*scratch_493 - scratch_189*scratch_494 - scratch_190*scratch_495 - scratch_191*scratch_496 - scratch_192*scratch_497 - scratch_193*scratch_498 - scratch_194*scratch_499;
    double scratch_501 = scratch_213 - scratch_214*scratch_23 - scratch_215*scratch_492 - scratch_216*scratch_493 - scratch_217*scratch_494 - scratch_218*scratch_495 - scratch_219*scratch_496 - scratch_220*scratch_497 - scratch_221*scratch_498 - scratch_222*scratch_499 - scratch_223*scratch_500;
    double scratch_502 = -scratch_23*scratch_244 + scratch_243 - scratch_245*scratch_492 - scratch_246*scratch_493 - scratch_247*scratch_494 - scratch_248*scratch_495 - scratch_249*scratch_496 - scratch_250*scratch_497 - scratch_251*scratch_498 - scratch_252*scratch_499 - scratch_253*scratch_500 - scratch_254*scratch_501;
    double scratch_503 = -scratch_23*scratch_276 + scratch_275 - scratch_277*scratch_492 - scratch_278*scratch_493 - scratch_279*scratch_494 - scratch_280*scratch_495 - scratch_281*scratch_496 - scratch_282*scratch_497 - scratch_283*scratch_498 - scratch_284*scratch_499 - scratch_285*scratch_500 - scratch_286*scratch_501 - scratch_287*scratch_502;
    double scratch_504 = -scratch_23*scratch_310 + scratch_309 - scratch_311*scratch_492 - scratch_312*scratch_493 - scratch_313*scratch_494 - scratch_314*scratch_495 - scratch_315*scratch_496 - scratch_316*scratch_497 - scratch_317*scratch_498 - scratch_318*scratch_499 - scratch_319*scratch_500 - scratch_320*scratch_501 - scratch_321*scratch_502 - scratch_322*scratch_503;
    double scratch_505 = -scratch_23*scratch_364 + scratch_363 - scratch_365*scratch_492 - scratch_366*scratch_493 - scratch_367*scratch_494 - scratch_368*scratch_495 - scratch_369*scratch_496 - scratch_370*scratch_497 - scratch_371*scratch_498 - scratch_372*scratch_499 - scratch_373*scratch_500 - scratch_374*scratch_501 - scratch_375*scratch_502 - scratch_376*scratch_503 - scratch_377*scratch_504;
    double scratch_506 = scratch_378*scratch_505;
    double scratch_507 = -scratch_34*scratch_47 + scratch_46;
    double scratch_508 = -scratch_34*scratch_61 - scratch_507*scratch_62 + scratch_60;
    double scratch_509 = -scratch_34*scratch_77 - scratch_507*scratch_78 - scratch_508*scratch_79 + scratch_76;
    double scratch_510 = -scratch_34*scratch_95 - scratch_507*scratch_96 - scratch_508*scratch_97 - scratch_509*scratch_98 + scratch_94;
    double scratch_511 = scratch_114 - scratch_115*scratch_34 - scratch_116*scratch_507 - scratch_117*scratch_508 - scratch_118*scratch_509 - scratch_119*scratch_510;
    double scratch_512 = scratch_136 - scratch_137*scratch_34 - scratch_138*scratch_507 - scratch_139*scratch_508 - scratch_140*scratch_509 - scratch_141*scratch_510 - scratch_142*scratch_511;
    double scratch_513 = scratch_160 - scratch_161*scratch_34 - scratch_162*scratch_507 - scratch_163*scratch_508 - scratch_164*scratch_509 - scratch_165*scratch_510 - scratch_166*scratch_511 - scratch_167*scratch_512;
    double scratch_514 = scratch_186 - scratch_187*scratch_34 - scratch_188*scratch_507 - scratch_189*scratch_508 - scratch_190*scratch_509 - scratch_191*scratch_510 - scratch_192*scratch_511 - scratch_193*scratch_512 - scratch_194*scratch_513;
    double scratch_515 = scratch_214 - scratch_215*scratch_34 - scratch_216*scratch_507 - scratch_217*scratch_508 - scratch_218*scratch_509 - scratch_219*scratch_510 - scratch_220*scratch_511 - scratch_221*scratch_512 - scratch_222*scratch_513 - scratch_223*scratch_514;
    double scratch_516 = scratch_244 - scratch_245*scratch_34 - scratch_246*scratch_507 - scratch_247*scratch_508 - scratch_248*scratch_509 - scratch_249*scratch_510 - scratch_250*scratch_511 - scratch_251*scratch_512 - scratch_252*scratch_513 - scratch_253*scratch_514 - scratch_254*scratch_515;
    double scratch_517 = scratch_276 - scratch_277*scratch_34 - scratch_278*scratch_507 - scratch_279*scratch_508 - scratch_280*scratch_509 - scratch_281*scratch_510 - scratch_282*scratch_511 - scratch_283*scratch_512 - scratch_284*scratch_513 - scratch_285*scratch_514 - scratch_286*scratch_515 - scratch_287*scratch_516;
    double scratch_518 = scratch_310 - scratch_311*scratch_34 - scratch_312*scratch_507 - scratch_313*scratch_508 - scratch_314*scratch_509 - scratch_315*scratch_510 - scratch_316*scratch_511 - scratch_317*scratch_512 - scratch_318*scratch_513 - scratch_319*scratch_514 - scratch_320*scratch_515 - scratch_321*scratch_516 - scratch_322*scratch_517;
    double scratch_519 = -scratch_34*scratch_365 + scratch_364 - scratch_366*scratch_507 - scratch_367*scratch_508 - scratch_368*scratch_509 - scratch_369*scratch_510 - scratch_370*scratch_511 - scratch_371*scratch_512 - scratch_372*scratch_513 - scratch_373*scratch_514 - scratch_374*scratch_515 - scratch_375*scratch_516 - scratch_376*scratch_517 - scratch_377*scratch_518;
    double scratch_520 = scratch_378*scratch_519;
    double scratch_521 = -scratch_47*scratch_62 + scratch_61;
    double scratch_522 = -scratch_47*scratch_78 - scratch_521*scratch_79 + scratch_77;
    double scratch_523 = -scratch_47*scratch_96 - scratch_521*scratch_97 - scratch_522*scratch_98 + scratch_95;
    double scratch_524 = scratch_115 - scratch_116*scratch_47 - scratch_117*scratch_521 - scratch_118*scratch_522 - scratch_119*scratch_523;
    double scratch_525 = scratch_137 - scratch_138*scratch_47 - scratch_139*scratch_521 - scratch_140*scratch_522 - scratch_141*scratch_523 - scratch_142*scratch_524;
    double scratch_526 = scratch_161 - scratch_162*scratch_47 - scratch_163*scratch_521 - scratch_164*scratch_522 - scratch_165*scratch_523 - scratch_166*scratch_524 - scratch_167*scratch_525;
    double scratch_527 = scratch_187 - scratch_188*scratch_47 - scratch_189*scratch_521 - scratch_190*scratch_522 - scratch_191*scratch_523 - scratch_192*scratch_524 - scratch_193*scratch_525 - scratch_194*scratch_526;
    double scratch_528 = scratch_215 - scratch_216*scratch_47 - scratch_217*scratch_521 - scratch_218*scratch_522 - scratch_219*scratch_523 - scratch_220*scratch_524 - scratch_221*scratch_525 - scratch_222*scratch_526 - scratch_223*scratch_527;
    double scratch_529 = scratch_245 - scratch_246*scratch_47 - scratch_247*scratch_521 - scratch_248*scratch_522 - scratch_249*scratch_523 - scratch_250*scratch_524 - scratch_251*scratch_525 - scratch_252*scratch_526 - scratch_253*scratch_527 - scratch_254*scratch_528;
    double scratch_530 = scratch_277 - scratch_278*scratch_47 - scratch_279*scratch_521 - scratch_280*scratch_522 - scratch_281*scratch_523 - scratch_282*scratch_524 - scratch_283*scratch_525 - scratch_284*scratch_526 - scratch_285*scratch_527 - scratch_286*scratch_528 - scratch_287*scratch_529;
    double scratch_531 = scratch_311 - scratch_312*scratch_47 - scratch_313*scratch_521 - scratch_314*scratch_522 - scratch_315*scratch_523 - scratch_316*scratch_524 - scratch_317*scratch_525 - scratch_318*scratch_526 - scratch_319*scratch_527 - scratch_320*scratch_528 - scratch_321*scratch_529 - scratch_322*scratch_530;
    double scratch_532 = scratch_365 - scratch_366*scratch_47 - scratch_367*scratch_521 - scratch_368*scratch_522 - scratch_369*scratch_523 - scratch_370*scratch_524 - scratch_371*scratch_525 - scratch_372*scratch_526 - scratch_373*scratch_527 - scratch_374*scratch_528 - scratch_375*scratch_529 - scratch_376*scratch_530 - scratch_377*scratch_531;
    double scratch_533 = scratch_378*scratch_532;
    double scratch_534 = -scratch_62*scratch_79 + scratch_78;
    double scratch_535 = -scratch_534*scratch_98 - scratch_62*scratch_97 + scratch_96;
    double scratch_536 = scratch_116 - scratch_117*scratch_62 - scratch_118*scratch_534 - scratch_119*scratch_535;
    double scratch_537 = scratch_138 - scratch_139*scratch_62 - scratch_140*scratch_534 - scratch_141*scratch_535 - scratch_142*scratch_536;
    double scratch_538 = scratch_162 - scratch_163*scratch_62 - scratch_164*scratch_534 - scratch_165*scratch_535 - scratch_166*scratch_536 - scratch_167*scratch_537;
    double scratch_539 = scratch_188 - scratch_189*scratch_62 - scratch_190*scratch_534 - scratch_191*scratch_535 - scratch_192*scratch_536 - scratch_193*scratch_537 - scratch_194*scratch_538;
    double scratch_540 = scratch_216 - scratch_217*scratch_62 - scratch_218*scratch_534 - scratch_219*scratch_535 - scratch_220*scratch_536 - scratch_221*scratch_537 - scratch_222*scratch_538 - scratch_223*scratch_539;
    double scratch_541 = scratch_246 - scratch_247*scratch_62 - scratch_248*scratch_534 - scratch_249*scratch_535 - scratch_250*scratch_536 - scratch_251*scratch_537 - scratch_252*scratch_538 - scratch_253*scratch_539 - scratch_254*scratch_540;
    double scratch_542 = scratch_278 - scratch_279*scratch_62 - scratch_280*scratch_534 - scratch_281*scratch_535 - scratch_282*scratch_536 - scratch_283*scratch_537 - scratch_284*scratch_538 - scratch_285*scratch_539 - scratch_286*scratch_540 - scratch_287*scratch_541;
    double scratch_543 = scratch_312 - scratch_313*scratch_62 - scratch_314*scratch_534 - scratch_315*scratch_535 - scratch_316*scratch_536 - scratch_317*scratch_537 - scratch_318*scratch_538 - scratch_319*scratch_539 - scratch_320*scratch_540 - scratch_321*scratch_541 - scratch_322*scratch_542;
    double scratch_544 = scratch_366 - scratch_367*scratch_62 - scratch_368*scratch_534 - scratch_369*scratch_535 - scratch_370*scratch_536 - scratch_371*scratch_537 - scratch_372*scratch_538 - scratch_373*scratch_539 - scratch_374*scratch_540 - scratch_375*scratch_541 - scratch_376*scratch_542 - scratch_377*scratch_543;
    double scratch_545 = scratch_378*scratch_544;
    double scratch_546 = -scratch_79*scratch_98 + scratch_97;
    double scratch_547 = scratch_117 - scratch_118*scratch_79 - scratch_119*scratch_546;
    double scratch_548 = scratch_139 - scratch_140*scratch_79 - scratch_141*scratch_546 - scratch_142*scratch_547;
    double scratch_549 = scratch_163 - scratch_164*scratch_79 - scratch_165*scratch_546 - scratch_166*scratch_547 - scratch_167*scratch_548;
    double scratch_550 = scratch_189 - scratch_190*scratch_79 - scratch_191*scratch_546 - scratch_192*scratch_547 - scratch_193*scratch_548 - scratch_194*scratch_549;
    double scratch_551 = scratch_217 - scratch_218*scratch_79 - scratch_219*scratch_546 - scratch_220*scratch_547 - scratch_221*scratch_548 - scratch_222*scratch_549 - scratch_223*scratch_550;
    double scratch_552 = scratch_247 - scratch_248*scratch_79 - scratch_249*scratch_546 - scratch_250*scratch_547 - scratch_251*scratch_548 - scratch_252*scratch_549 - scratch_253*scratch_550 - scratch_254*scratch_551;
    double scratch_553 = scratch_279 - scratch_280*scratch_79 - scratch_281*scratch_546 - scratch_282*scratch_547 - scratch_283*scratch_548 - scratch_284*scratch_549 - scratch_285*scratch_550 - scratch_286*scratch_551 - scratch_287*scratch_552;
    double scratch_554 = scratch_313 - scratch_314*scratch_79 - scratch_315*scratch_546 - scratch_316*scratch_547 - scratch_317*scratch_548 - scratch_318*scratch_549 - scratch_319*scratch_550 - scratch_320*scratch_551 - scratch_321*scratch_552 - scratch_322*scratch_553;
    double scratch_555 = scratch_367 - scratch_368*scratch_79 - scratch_369*scratch_546 - scratch_370*scratch_547 - scratch_371*scratch_548 - scratch_372*scratch_549 - scratch_373*scratch_550 - scratch_374*scratch_551 - scratch_375*scratch_552 - scratch_376*scratch_553 - scratch_377*scratch_554;
    double scratch_556 = scratch_378*scratch_555;
    double scratch_557 = scratch_118 - scratch_119*scratch_98;
    double scratch_558 = scratch_140 - scratch_141*scratch_98 - scratch_142*scratch_557;
    double scratch_559 = scratch_164 - scratch_165*scratch_98 - scratch_166*scratch_557 - scratch_167*scratch_558;
    double scratch_560 = scratch_190 - scratch_191*scratch_98 - scratch_192*scratch_557 - scratch_193*scratch_558 - scratch_194*scratch_559;
    double scratch_561 = scratch_218 - scratch_219*scratch_98 - scratch_220*scratch_557 - scratch_221*scratch_558 - scratch_222*scratch_559 - scratch_223*scratch_560;
    double scratch_562 = scratch_248 - scratch_249*scratch_98 - scratch_250*scratch_557 - scratch_251*scratch_558 - scratch_252*scratch_559 - scratch_253*scratch_560 - scratch_254*scratch_561;
    double scratch_563 = scratch_280 - scratch_281*scratch_98 - scratch_282*scratch_557 - scratch_283*scratch_558 - scratch_284*scratch_559 - scratch_285*scratch_560 - scratch_286*scratch_561 - scratch_287*scratch_562;
    double scratch_564 = scratch_314 - scratch_315*scratch_98 - scratch_316*scratch_557 - scratch_317*scratch_558 - scratch_318*scratch_559 - scratch_319*scratch_560 - scratch_320*scratch_561 - scratch_321*scratch_562 - scratch_322*scratch_563;
    double scratch_565 = scratch_368 - scratch_369*scratch_98 - scratch_370*scratch_557 - scratch_371*scratch_558 - scratch_372*scratch_559 - scratch_373*scratch_560 - scratch_374*scratch_561 - scratch_375*scratch_562 - scratch_376*scratch_563 - scratch_377*scratch_564;
    double scratch_566 = scratch_378*scratch_565;
    double scratch_567 = -scratch_119*scratch_142 + scratch_141;
    double scratch_568 = -scratch_119*scratch_166 + scratch_165 - scratch_167*scratch_567;
    double scratch_569 = -scratch_119*scratch_192 + scratch_191 - scratch_193*scratch_567 - scratch_194*scratch_568;
    double scratch_570 = -scratch_119*scratch_220 + scratch_219 - scratch_221*scratch_567 - scratch_222*scratch_568 - scratch_223*scratch_569;
    double scratch_571 = -scratch_119*scratch_250 + scratch_249 - scratch_251*scratch_567 - scratch_252*scratch_568 - scratch_253*scratch_569 - scratch_254*scratch_570;
    double scratch_572 = -scratch_119*scratch_282 + scratch_281 - scratch_283*scratch_567 - scratch_284*scratch_568 - scratch_285*scratch_569 - scratch_286*scratch_570 - scratch_287*scratch_571;
    double scratch_573 = -scratch_119*scratch_316 + scratch_315 - scratch_317*scratch_567 - scratch_318*scratch_568 - scratch_319*scratch_569 - scratch_320*scratch_570 - scratch_321*scratch_571 - scratch_322*scratch_572;
    double scratch_574 = -scratch_119*scratch_370 + scratch_369 - scratch_371*scratch_567 - scratch_372*scratch_568 - scratch_373*scratch_569 - scratch_374*scratch_570 - scratch_375*scratch_571 - scratch_376*scratch_572 - scratch_377*scratch_573;
    double scratch_575 = scratch_378*scratch_574;
    double scratch_576 = -scratch_142*scratch_167 + scratch_166;
    double scratch_577 = -scratch_142*scratch_193 + scratch_192 - scratch_194*scratch_576;
    double scratch_578 = -scratch_142*scratch_221 + scratch_220 - scratch_222*scratch_576 - scratch_223*scratch_577;
    double scratch_579 = -scratch_142*scratch_251 + scratch_250 - scratch_252*scratch_576 - scratch_253*scratch_577 - scratch_254*scratch_578;
    double scratch_580 = -scratch_142*scratch_283 + scratch_282 - scratch_284*scratch_576 - scratch_285*scratch_577 - scratch_286*scratch_578 - scratch_287*scratch_579;
    double scratch_581 = -scratch_142*scratch_317 + scratch_316 - scratch_318*scratch_576 - scratch_319*scratch_577 - scratch_320*scratch_578 - scratch_321*scratch_579 - scratch_322*scratch_580;
    double scratch_582 = -scratch_142*scratch_371 + scratch_370 - scratch_372*scratch_576 - scratch_373*scratch_577 - scratch_374*scratch_578 - scratch_375*scratch_579 - scratch_376*scratch_580 - scratch_377*scratch_581;
    double scratch_583 = scratch_378*scratch_582;
    double scratch_584 = -scratch_167*scratch_194 + scratch_193;
    double scratch_585 = -scratch_167*scratch_222 + scratch_221 - scratch_223*scratch_584;
    double scratch_586 = -scratch_167*scratch_252 + scratch_251 - scratch_253*scratch_584 - scratch_254*scratch_585;
    double scratch_587 = -scratch_167*scratch_284 + scratch_283 - scratch_285*scratch_584 - scratch_286*scratch_585 - scratch_287*scratch_586;
    double scratch_588 = -scratch_167*scratch_318 + scratch_317 - scratch_319*scratch_584 - scratch_320*scratch_585 - scratch_321*scratch_586 - scratch_322*scratch_587;
    double scratch_589 = -scratch_167*scratch_372 + scratch_371 - scratch_373*scratch_584 - scratch_374*scratch_585 - scratch_375*scratch_586 - scratch_376*scratch_587 - scratch_377*scratch_588;
    double scratch_590 = scratch_378*scratch_589;
    double scratch_591 = -scratch_194*scratch_223 + scratch_222;
    double scratch_592 = -scratch_194*scratch_253 + scratch_252 - scratch_254*scratch_591;
    double scratch_593 = -scratch_194*scratch_285 + scratch_284 - scratch_286*scratch_591 - scratch_287*scratch_592;
    double scratch_594 = -scratch_194*scratch_319 + scratch_318 - scratch_320*scratch_591 - scratch_321*scratch_592 - scratch_322*scratch_593;
    double scratch_595 = -scratch_194*scratch_373 + scratch_372 - scratch_374*scratch_591 - scratch_375*scratch_592 - scratch_376*scratch_593 - scratch_377*scratch_594;
    double scratch_596 = scratch_378*scratch_595;
    double scratch_597 = -scratch_223*scratch_254 + scratch_253;
    double scratch_598 = -scratch_223*scratch_286 + scratch_285 - scratch_287*scratch_597;
    double scratch_599 = -scratch_223*scratch_320 + scratch_319 - scratch_321*scratch_597 - scratch_322*scratch_598;
    double scratch_600 = -scratch_223*scratch_374 + scratch_373 - scratch_375*scratch_597 - scratch_376*scratch_598 - scratch_377*scratch_599;
    double scratch_601 = scratch_378*scratch_600;
    double scratch_602 = -scratch_254*scratch_287 + scratch_286;
    double scratch_603 = -scratch_254*scratch_321 + scratch_320 - scratch_322*scratch_602;
    double scratch_604 = -scratch_254*scratch_375 + scratch_374 - scratch_376*scratch_602 - scratch_377*scratch_603;
    double scratch_605 = scratch_378*scratch_604;
    double scratch_606 = -scratch_287*scratch_322 + scratch_321;
    double scratch_607 = -scratch_287*scratch_376 + scratch_375 - scratch_377*scratch_606;
    double scratch_608 = scratch_378*scratch_607;
    double scratch_609 = -scratch_322*scratch_377 + scratch_376;
    double scratch_610 = scratch_378*scratch_609;
    double scratch_611 = scratch_377*scratch_378;

    x[0] = scratch_1 - scratch_120*scratch_411 - scratch_143*scratch_412 - scratch_15*scratch_404 - scratch_168*scratch_413 - scratch_195*scratch_414 - scratch_224*scratch_415 - scratch_24*scratch_405 - scratch_255*scratch_416 - scratch_288*scratch_417 - scratch_323*scratch_418 - scratch_35*scratch_406 - scratch_379*scratch_419 - scratch_381*(-scratch_10*scratch_4 - scratch_109*scratch_99 - scratch_11*scratch_7 - scratch_120*scratch_131 - scratch_143*scratch_155 - scratch_15*scratch_19 - scratch_168*scratch_181 - scratch_195*scratch_209 + scratch_2 - scratch_224*scratch_239 - scratch_24*scratch_29 - scratch_255*scratch_271 - scratch_288*scratch_305 - scratch_323*scratch_341 - scratch_35*scratch_41 - scratch_359*scratch_380 - scratch_48*scratch_55 - scratch_63*scratch_71 - scratch_80*scratch_89) - scratch_4*scratch_402 - scratch_401*(-scratch_120*scratch_392 - scratch_143*scratch_393 - scratch_15*scratch_385 - scratch_168*scratch_394 - scratch_195*scratch_395 - scratch_224*scratch_396 - scratch_24*scratch_386 - scratch_255*scratch_397 - scratch_288*scratch_398 - scratch_323*scratch_399 - scratch_35*scratch_387 - scratch_380*scratch_400 + scratch_382 - scratch_383*scratch_4 - scratch_384*scratch_7 - scratch_388*scratch_48 - scratch_389*scratch_63 - scratch_390*scratch_80 - scratch_391*scratch_99) - scratch_403*scratch_7 - scratch_407*scratch_48 - scratch_408*scratch_63 - scratch_409*scratch_80 - scratch_410*scratch_99 - scratch_458*(-scratch_120*scratch_430 - scratch_143*scratch_431 - scratch_15*scratch_423 - scratch_168*scratch_432 - scratch_195*scratch_433 - scratch_224*scratch_434 - scratch_24*scratch_424 - scratch_255*scratch_435 - scratch_288*scratch_436 - scratch_323*scratch_437 - scratch_35*scratch_425 - scratch_380*scratch_438 - scratch_4*scratch_421 + scratch_420 - scratch_422*scratch_7 - scratch_426*scratch_48 - scratch_427*scratch_63 - scratch_428*scratch_80 - scratch_429*scratch_99);
    x[1] = -scratch_381*(scratch_10 - scratch_109*scratch_465 - scratch_11*scratch_6 - scratch_131*scratch_466 - scratch_155*scratch_467 - scratch_181*scratch_468 - scratch_19*scratch_459 - scratch_209*scratch_469 - scratch_239*scratch_470 - scratch_271*scratch_471 - scratch_29*scratch_460 - scratch_305*scratch_472 - scratch_341*scratch_473 - scratch_359*scratch_475 - scratch_41*scratch_461 - scratch_462*scratch_55 - scratch_463*scratch_71 - scratch_464*scratch_89) - scratch_401*(scratch_383 - scratch_384*scratch_6 - scratch_385*scratch_459 - scratch_386*scratch_460 - scratch_387*scratch_461 - scratch_388*scratch_462 - scratch_389*scratch_463 - scratch_390*scratch_464 - scratch_391*scratch_465 - scratch_392*scratch_466 - scratch_393*scratch_467 - scratch_394*scratch_468 - scratch_395*scratch_469 - scratch_396*scratch_470 - scratch_397*scratch_471 - scratch_398*scratch_472 - scratch_399*scratch_473 - scratch_400*scratch_475) + scratch_402 - scratch_403*scratch_6 - scratch_404*scratch_459 - scratch_405*scratch_460 - scratch_406*scratch_461 - scratch_407*scratch_462 - scratch_408*scratch_463 - scratch_409*scratch_464 - scratch_410*scratch_465 - scratch_411*scratch_466 - scratch_412*scratch_467 - scratch_413*scratch_468 - scratch_414*scratch_469 - scratch_415*scratch_470 - scratch_416*scratch_471 - scratch_417*scratch_472 - scratch_418*scratch_473 - scratch_419*scratch_474 - scratch_458*(scratch_421 - scratch_422*scratch_6 - scratch_423*scratch_459 - scratch_424*scratch_460 - scratch_425*scratch_461 - scratch_426*scratch_462 - scratch_427*scratch_463 - scratch_428*scratch_464 - scratch_429*scratch_465 - scratch_430*scratch_466 - scratch_431*scratch_467 - scratch_432*scratch_468 - scratch_433*scratch_469 - scratch_434*scratch_470 - scratch_435*scratch_471 - scratch_436*scratch_472 - scratch_437*scratch_473 - scratch_438*scratch_475);
    x[2] = -scratch_14*scratch_404 - scratch_381*(-scratch_109*scratch_481 + scratch_11 - scratch_131*scratch_482 - scratch_14*scratch_19 - scratch_155*scratch_483 - scratch_181*scratch_484 - scratch_209*scratch_485 - scratch_239*scratch_486 - scratch_271*scratch_487 - scratch_29*scratch_476 - scratch_305*scratch_488 - scratch_341*scratch_489 - scratch_359*scratch_491 - scratch_41*scratch_477 - scratch_478*scratch_55 - scratch_479*scratch_71 - scratch_480*scratch_89) - scratch_401*(-scratch_14*scratch_385 + scratch_384 - scratch_386*scratch_476 - scratch_387*scratch_477 - scratch_388*scratch_478 - scratch_389*scratch_479 - scratch_390*scratch_480 - scratch_391*scratch_481 - scratch_392*scratch_482 - scratch_393*scratch_483 - scratch_394*scratch_484 - scratch_395*scratch_485 - scratch_396*scratch_486 - scratch_397*scratch_487 - scratch_398*scratch_488 - scratch_399*scratch_489 - scratch_400*scratch_491) + scratch_403 - scratch_405*scratch_476 - scratch_406*scratch_477 - scratch_407*scratch_478 - scratch_408*scratch_479 - scratch_409*scratch_480 - scratch_410*scratch_481 - scratch_411*scratch_482 - scratch_412*scratch_483 - scratch_413*scratch_484 - scratch_414*scratch_485 - scratch_415*scratch_486 - scratch_416*scratch_487 - scratch_417*scratch_488 - scratch_418*scratch_489 - scratch_419*scratch_490 - scratch_458*(-scratch_14*scratch_423 + scratch_422 - scratch_424*scratch_476 - scratch_425*scratch_477 - scratch_426*scratch_478 - scratch_427*scratch_479 - scratch_428*scratch_480 - scratch_429*scratch_481 - scratch_430*scratch_482 - scratch_431*scratch_483 - scratch_432*scratch_484 - scratch_433*scratch_485 - scratch_434*scratch_486 - scratch_435*scratch_487 - scratch_436*scratch_488 - scratch_437*scratch_489 - scratch_438*scratch_491);
    x[3] = -scratch_23*scratch_405 - scratch_381*(-scratch_109*scratch_496 - scratch_131*scratch_497 - scratch_155*scratch_498 - scratch_181*scratch_499 + scratch_19 - scratch_209*scratch_500 - scratch_23*scratch_29 - scratch_239*scratch_501 - scratch_271*scratch_502 - scratch_305*scratch_503 - scratch_341*scratch_504 - scratch_359*scratch_506 - scratch_41*scratch_492 - scratch_493*scratch_55 - scratch_494*scratch_71 - scratch_495*scratch_89) - scratch_401*(-scratch_23*scratch_386 + scratch_385 - scratch_387*scratch_492 - scratch_388*scratch_493 - scratch_389*scratch_494 - scratch_390*scratch_495 - scratch_391*scratch_496 - scratch_392*scratch_497 - scratch_393*scratch_498 - scratch_394*scratch_499 - scratch_395*scratch_500 - scratch_396*scratch_501 - scratch_397*scratch_502 - scratch_398*scratch_503 - scratch_399*scratch_504 - scratch_400*scratch_506) + scratch_404 - scratch_406*scratch_492 - scratch_407*scratch_493 - scratch_408*scratch_494 - scratch_409*scratch_495 - scratch_410*scratch_496 - scratch_411*scratch_497 - scratch_412*scratch_498 - scratch_413*scratch_499 - scratch_414*scratch_500 - scratch_415*scratch_501 - scratch_416*scratch_502 - scratch_417*scratch_503 - scratch_418*scratch_504 - scratch_419*scratch_505 - scratch_458*(-scratch_23*scratch_424 + scratch_423 - scratch_425*scratch_492 - scratch_426*scratch_493 - scratch_427*scratch_494 - scratch_428*scratch_495 - scratch_429*scratch_496 - scratch_430*scratch_497 - scratch_431*scratch_498 - scratch_432*scratch_499 - scratch_433*scratch_500 - scratch_434*scratch_501 - scratch_435*scratch_502 - scratch_436*scratch_503 - scratch_437*scratch_504 - scratch_438*scratch_506);
    x[4] = -scratch_34*scratch_406 - scratch_381*(-scratch_109*scratch_510 - scratch_131*scratch_511 - scratch_155*scratch_512 - scratch_181*scratch_513 - scratch_209*scratch_514 - scratch_239*scratch_515 - scratch_271*scratch_516 + scratch_29 - scratch_305*scratch_517 - scratch_34*scratch_41 - scratch_341*scratch_518 - scratch_359*scratch_520 - scratch_507*scratch_55 - scratch_508*scratch_71 - scratch_509*scratch_89) - scratch_401*(-scratch_34*scratch_387 + scratch_386 - scratch_388*scratch_507 - scratch_389*scratch_508 - scratch_390*scratch_509 - scratch_391*scratch_510 - scratch_392*scratch_511 - scratch_393*scratch_512 - scratch_394*scratch_513 - scratch_395*scratch_514 - scratch_396*scratch_515 - scratch_397*scratch_516 - scratch_398*scratch_517 - scratch_399*scratch_518 - scratch_400*scratch_520) + scratch_405 - scratch_407*scratch_507 - scratch_408*scratch_508 - scratch_409*scratch_509 - scratch_410*scratch_510 - scratch_411*scratch_511 - scratch_412*scratch_512 - scratch_413*scratch_513 - scratch_414*scratch_514 - scratch_415*scratch_515 - scratch_416*scratch_516 - scratch_417*scratch_517 - scratch_418*scratch_518 - scratch_419*scratch_519 - scratch_458*(-scratch_34*scratch_425 + scratch_424 - scratch_426*scratch_507 - scratch_427*scratch_508 - scratch_428*scratch_509 - scratch_429*scratch_510 - scratch_430*scratch_511 - scratch_431*scratch_512 - scratch_432*scratch_513 - scratch_433*scratch_514 - scratch_434*scratch_515 - scratch_435*scratch_516 - scratch_436*scratch_517 - scratch_437*scratch_518 - scratch_438*scratch_520);
    x[5] = -scratch_381*(-scratch_109*scratch_523 - scratch_131*scratch_524 - scratch_155*scratch_525 - scratch_181*scratch_526 - scratch_209*scratch_527 - scratch_239*scratch_528 - scratch_271*scratch_529 - scratch_305*scratch_530 - scratch_341*scratch_531 - scratch_359*scratch_533 + scratch_41 - scratch_47*scratch_55 - scratch_521*scratch_71 - scratch_522*scratch_89) - scratch_401*(scratch_387 - scratch_388*scratch_47 - scratch_389*scratch_521 - scratch_390*scratch_522 - scratch_391*scratch_523 - scratch_392*scratch_524 - scratch_393*scratch_525 - scratch_394*scratch_526 - scratch_395*scratch_527 - scratch_396*scratch_528 - scratch_397*scratch_529 - scratch_398*scratch_530 - scratch_399*scratch_531 - scratch_400*scratch_533) + scratch_406 - scratch_407*scratch_47 - scratch_408*scratch_521 - scratch_409*scratch_522 - scratch_410*scratch_523 - scratch_411*scratch_524 - scratch_412*scratch_525 - scratch_413*scratch_526 - scratch_414*scratch_527 - scratch_415*scratch_528 - scratch_416*scratch_529 - scratch_417*scratch_530 - scratch_418*scratch_531 - scratch_419*scratch_532 - scratch_458*(scratch_425 - scratch_426*scratch_47 - scratch_427*scratch_521 - scratch_428*scratch_522 - scratch_429*scratch_523 - scratch_430*scratch_524 - scratch_431*scratch_525 - scratch_432*scratch_526 - scratch_433*scratch_527 - scratch_434*scratch_528 - scratch_435*scratch_529 - scratch_436*scratch_530 - scratch_437*scratch_531 - scratch_438*scratch_533);
    x[6] = -scratch_381*(-scratch_109*scratch_535 - scratch_131*scratch_536 - scratch_155*scratch_537 - scratch_181*scratch_538 - scratch_209*scratch_539 - scratch_239*scratch_540 - scratch_271*scratch_541 - scratch_305*scratch_542 - scratch_341*scratch_543 - scratch_359*scratch_545 - scratch_534*scratch_89 + scratch_55 - scratch_62*scratch_71) - scratch_401*(scratch_388 - scratch_389*scratch_62 - scratch_390*scratch_534 - scratch_391*scratch_535 - scratch_392*scratch_536 - scratch_393*scratch_537 - scratch_394*scratch_538 - scratch_395*scratch_539 - scratch_396*scratch_540 - scratch_397*scratch_541 - scratch_398*scratch_542 - scratch_399*scratch_543 - scratch_400*scratch_545) + scratch_407 - scratch_408*scratch_62 - scratch_409*scratch_534 - scratch_410*scratch_535 - scratch_411*scratch_536 - scratch_412*scratch_537 - scratch_413*scratch_538 - scratch_414*scratch_539 - scratch_415*scratch_540 - scratch_416*scratch_541 - scratch_417*scratch_542 - scratch_418*scratch_543 - scratch_419*scratch_544 - scratch_458*(scratch_426 - scratch_427*scratch_62 - scratch_428*scratch_534 - scratch_429*scratch_535 - scratch_430*scratch_536 - scratch_431*scratch_537 - scratch_432*scratch_538 - scratch_433*scratch_539 - scratch_434*scratch_540 - scratch_435*scratch_541 - scratch_436*scratch_542 - scratch_437*scratch_543 - scratch_438*scratch_545);
    x[7] = -scratch_381*(-scratch_109*scratch_546 - scratch_131*scratch_547 - scratch_155*scratch_548 - scratch_181*scratch_549 - scratch_209*scratch_550 - scratch_239*scratch_551 - scratch_271*scratch_552 - scratch_305*scratch_553 - scratch_341*scratch_554 - scratch_359*scratch_556 + scratch_71 - scratch_79*scratch_89) - scratch_401*(scratch_389 - scratch_390*scratch_79 - scratch_391*scratch_546 - scratch_392*scratch_547 - scratch_393*scratch_548 - scratch_394*scratch_549 - scratch_395*scratch_550 - scratch_396*scratch_551 - scratch_397*scratch_552 - scratch_398*scratch_553 - scratch_399*scratch_554 - scratch_400*scratch_556) + scratch_408 - scratch_409*scratch_79 - scratch_410*scratch_546 - scratch_411*scratch_547 - scratch_412*scratch_548 - scratch_413*scratch_549 - scratch_414*scratch_550 - scratch_415*scratch_551 - scratch_416*scratch_552 - scratch_417*scratch_553 - scratch_418*scratch_554 - scratch_419*scratch_555 - scratch_458*(scratch_427 - scratch_428*scratch_79 - scratch_429*scratch_546 - scratch_430*scratch_547 - scratch_431*scratch_548 - scratch_432*scratch_549 - scratch_433*scratch_550 - scratch_434*scratch_551 - scratch_435*scratch_552 - scratch_436*scratch_553 - scratch_437*scratch_554 - scratch_438*scratch_556);
    x[8] = -scratch_381*(-scratch_109*scratch_98 - scratch_131*scratch_557 - scratch_155*scratch_558 - scratch_181*scratch_559 - scratch_209*scratch_560 - scratch_239*scratch_561 - scratch_271*scratch_562 - scratch_305*scratch_563 - scratch_341*scratch_564 - scratch_359*scratch_566 + scratch_89) - scratch_401*(scratch_390 - scratch_391*scratch_98 - scratch_392*scratch_557 - scratch_393*scratch_558 - scratch_394*scratch_559 - scratch_395*scratch_560 - scratch_396*scratch_561 - scratch_397*scratch_562 - scratch_398*scratch_563 - scratch_399*scratch_564 - scratch_400*scratch_566) + scratch_409 - scratch_410*scratch_98 - scratch_411*scratch_557 - scratch_412*scratch_558 - scratch_413*scratch_559 - scratch_414*scratch_560 - scratch_415*scratch_561 - scratch_416*scratch_562 - scratch_417*scratch_563 - scratch_418*scratch_564 - scratch_419*scratch_565 - scratch_458*(scratch_428 - scratch_429*scratch_98 - scratch_430*scratch_557 - scratch_431*scratch_558 - scratch_432*scratch_559 - scratch_433*scratch_560 - scratch_434*scratch_561 - scratch_435*scratch_562 - scratch_436*scratch_563 - scratch_437*scratch_564 - scratch_438*scratch_566);
    x[9] = -scratch_119*scratch_411 - scratch_381*(scratch_109 - scratch_119*scratch_131 - scratch_155*scratch_567 - scratch_181*scratch_568 - scratch_209*scratch_569 - scratch_239*scratch_570 - scratch_271*scratch_571 - scratch_305*scratch_572 - scratch_341*scratch_573 - scratch_359*scratch_575) - scratch_401*(-scratch_119*scratch_392 + scratch_391 - scratch_393*scratch_567 - scratch_394*scratch_568 - scratch_395*scratch_569 - scratch_396*scratch_570 - scratch_397*scratch_571 - scratch_398*scratch_572 - scratch_399*scratch_573 - scratch_400*scratch_575) + scratch_410 - scratch_412*scratch_567 - scratch_413*scratch_568 - scratch_414*scratch_569 - scratch_415*scratch_570 - scratch_416*scratch_571 - scratch_417*scratch_572 - scratch_418*scratch_573 - scratch_419*scratch_574 - scratch_458*(-scratch_119*scratch_430 + scratch_429 - scratch_431*scratch_567 - scratch_432*scratch_568 - scratch_433*scratch_569 - scratch_434*scratch_570 - scratch_435*scratch_571 - scratch_436*scratch_572 - scratch_437*scratch_573 - scratch_438*scratch_575);
    x[10] = -scratch_142*scratch_412 - scratch_381*(scratch_131 - scratch_142*scratch_155 - scratch_181*scratch_576 - scratch_209*scratch_577 - scratch_239*scratch_578 - scratch_271*scratch_579 - scratch_305*scratch_580 - scratch_341*scratch_581 - scratch_359*scratch_583) - scratch_401*(-scratch_142*scratch_393 + scratch_392 - scratch_394*scratch_576 - scratch_395*scratch_577 - scratch_396*scratch_578 - scratch_397*scratch_579 - scratch_398*scratch_580 - scratch_399*scratch_581 - scratch_400*scratch_583) + scratch_411 - scratch_413*scratch_576 - scratch_414*scratch_577 - scratch_415*scratch_578 - scratch_416*scratch_579 - scratch_417*scratch_580 - scratch_418*scratch_581 - scratch_419*scratch_582 - scratch_458*(-scratch_142*scratch_431 + scratch_430 - scratch_432*scratch_576 - scratch_433*scratch_577 - scratch_434*scratch_578 - scratch_435*scratch_579 - scratch_436*scratch_580 - scratch_437*scratch_581 - scratch_438*scratch_583);
    x[11] = -scratch_167*scratch_413 - scratch_381*(scratch_155 - scratch_167*scratch_181 - scratch_209*scratch_584 - scratch_239*scratch_585 - scratch_271*scratch_586 - scratch_305*scratch_587 - scratch_341*scratch_588 - scratch_359*scratch_590) - scratch_401*(-scratch_167*scratch_394 + scratch_393 - scratch_395*scratch_584 - scratch_396*scratch_585 - scratch_397*scratch_586 - scratch_398*scratch_587 - scratch_399*scratch_588 - scratch_400*scratch_590) + scratch_412 - scratch_414*scratch_584 - scratch_415*scratch_585 - scratch_416*scratch_586 - scratch_417*scratch_587 - scratch_418*scratch_588 - scratch_419*scratch_589 - scratch_458*(-scratch_167*scratch_432 + scratch_431 - scratch_433*scratch_584 - scratch_434*scratch_585 - scratch_435*scratch_586 - scratch_436*scratch_587 - scratch_437*scratch_588 - scratch_438*scratch_590);
    x[12] = -scratch_194*scratch_414 - scratch_381*(scratch_181 - scratch_194*scratch_209 - scratch_239*scratch_591 - scratch_271*scratch_592 - scratch_305*scratch_593 - scratch_341*scratch_594 - scratch_359*scratch_596) - scratch_401*(-scratch_194*scratch_395 + scratch_394 - scratch_396*scratch_591 - scratch_397*scratch_592 - scratch_398*scratch_593 - scratch_399*scratch_594 - scratch_400*scratch_596) + scratch_413 - scratch_415*scratch_591 - scratch_416*scratch_592 - scratch_417*scratch_593 - scratch_418*scratch_594 - scratch_419*scratch_595 - scratch_458*(-scratch_194*scratch_433 + scratch_432 - scratch_434*scratch_591 - scratch_435*scratch_592 - scratch_436*scratch_593 - scratch_437*scratch_594 - scratch_438*scratch_596);
    x[13] = -scratch_223*scratch_415 - scratch_381*(scratch_209 - scratch_223*scratch_239 - scratch_271*scratch_597 - scratch_305*scratch_598 - scratch_341*scratch_599 - scratch_359*scratch_601) - scratch_401*(-scratch_223*scratch_396 + scratch_395 - scratch_397*scratch_597 - scratch_398*scratch_598 - scratch_399*scratch_599 - scratch_400*scratch_601) + scratch_414 - scratch_416*scratch_597 - scratch_417*scratch_598 - scratch_418*scratch_599 - scratch_419*scratch_600 - scratch_458*(-scratch_223*scratch_434 + scratch_433 - scratch_435*scratch_597 - scratch_436*scratch_598 - scratch_437*scratch_599 - scratch_438*scratch_601);
    x[14] = -scratch_254*scratch_416 - scratch_381*(scratch_239 - scratch_254*scratch_271 - scratch_305*scratch_602 - scratch_341*scratch_603 - scratch_359*scratch_605) - scratch_401*(-scratch_254*scratch_397 + scratch_396 - scratch_398*scratch_602 - scratch_399*scratch_603 - scratch_400*scratch_605) + scratch_415 - scratch_417*scratch_602 - scratch_418*scratch_603 - scratch_419*scratch_604 - scratch_458*(-scratch_254*scratch_435 + scratch_434 - scratch_436*scratch_602 - scratch_437*scratch_603 - scratch_438*scratch_605);
    x[15] = -scratch_287*scratch_417 - scratch_381*(scratch_271 - scratch_287*scratch_305 - scratch_341*scratch_606 - scratch_359*scratch_608) - scratch_401*(-scratch_287*scratch_398 + scratch_397 - scratch_399*scratch_606 - scratch_400*scratch_608) + scratch_416 - scratch_418*scratch_606 - scratch_419*scratch_607 - scratch_458*(-scratch_287*scratch_436 + scratch_435 - scratch_437*scratch_606 - scratch_438*scratch_608);
    x[16] = -scratch_322*scratch_418 - scratch_381*(scratch_305 - scratch_322*scratch_341 - scratch_359*scratch_610) - scratch_401*(-scratch_322*scratch_399 + scratch_398 - scratch_400*scratch_610) + scratch_417 - scratch_419*scratch_609 - scratch_458*(-scratch_322*scratch_437 + scratch_436 - scratch_438*scratch_610);
    x[17] = -scratch_377*scratch_419 - scratch_381*(scratch_341 - scratch_359*scratch_611) - scratch_401*(scratch_399 - scratch_400*scratch_611) + scratch_418 - scratch_458*(scratch_437 - scratch_438*scratch_611);
    x[18] = -scratch_359*scratch_378*scratch_381 - scratch_378*scratch_400*scratch_401 - scratch_378*scratch_438*scratch_458 + scratch_419;
    x[19] = scratch_381;
    x[20] = scratch_401;
    x[21] = scratch_458;
}

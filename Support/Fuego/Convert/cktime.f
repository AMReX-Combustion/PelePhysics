C  CVS $Revision: 1.1.1.1 $  created $Date: 2006/05/26 19:09:32 $
C                                                        
C*****precision > double
      DOUBLE PRECISION FUNCTION CKTIME (TSTART)
      IMPLICIT DOUBLE PRECISION (A-H, O-Z), INTEGER (I-N)
C*****END precision > double
C*****precision > single
C      REAL FUNCTION CKTIME (TSTART)
C      IMPLICIT REAL (A-H, O-Z), INTEGER (I-N)
C*****END precision > single
C
C     OBTAIN ELAPSED COMPUTING TIME.
C     V. 1.1 97/03/26 declare ETIME, TLIST type REAL
C     V. 1.0, provided for convenience of Reaction Design
C     users who may need to customize for their systems.
C
C*****COMPUTING TIME > CRI (CRAY) CTSS (LIVERMORE)
CC    THE SYSTEM LIBRARY BASELIB CONTAINS SUBROUTINE IZMOO.
C      EXTERNAL IZM00
C      DIMENSION IVAL(5)
C      IFLAG = IZM00 (IVAL)
C      IF (IFLAG .EQ. 0) THEN
C         CKTIME = FLOAT (IVAL(1)) / 1.0E6 - TSTART
C         RETURN
C      ENDIF
C*****END COMPUTING TIME > CRI (CRAY) CTSS (LIVERMORE)

C*****COMPUTING TIME > CRI (CRAY) CTSS (LOS ALAMOS)
CC    THE SYSTEM LIBRARY CFTLIB CONTAINS SUBROUTINE ISECOND.
C      EXTERNAL ISECOND
C      CALL ISECOND (IVAL)
C      CKTIME = FLOAT (IVAL) / 1.0E6 - TSTART
C      RETURN
C*****END COMPUTING TIME > CRI (CRAY) CTSS (LOS ALAMOS)

C*****COMPUTING TIME > CRI (CRAY) UNICOS
C      REAL SECOND
C      CKTIME = SECOND () - TSTART
C      RETURN
C*****END COMPUTING TIME > CRI (CRAY) UNICOS

C*****COMPUTING TIME > DEC (VAX) VMS
CC    THIS IS A SYSTEM SERVICE CALL FROM FORTRAN.
C      INTEGER*2 LIST(6)
C      INTEGER*4 ADDRESS, TICS
C      EQUIVALENCE (LIST(3), ADDRESS)
C      DATA LIST(1), LIST(2), LIST(5), LIST(6) / 4, '0407'X, 0, 0 /
C      ADDRESS = %LOC (TICS)
C      CALL SYS$GETJPIW (, , , LIST, , , )
C      CKTIME = FLOAT (TICS) / 1.0E2 - TSTART
C      RETURN
C*****END COMPUTING TIME > DEC (VAX) VMS

C*****COMPUTING TIME > generic unix etime
      REAL ETIME, TLIST
C     EXTERNAL ETIME
      DIMENSION TLIST(2)
      CKTIME = ETIME (TLIST) - TSTART
      RETURN
C*****END COMPUTING TIME > generic unix etime

C*****COMPUTING TIME > hpux
CC
CC         SECNDS() is an intrinsic function, which returns
CC         the seconds since midnight minus its argument.
CC
C$NOSTANDARD SYSTEM ON
C      REAL ZERO, SECNDS
C      SAVE ZERO
C      DATA ZERO/0.0/
C      CKTIME = SECNDS(ZERO) - TSTART
C$NOSTANDARD SYSTEM OFF
C      RETURN
C*****END COMPUTING TIME > hpux

C*****COMPUTING TIME > IBM (RISC System/6000) AIX
C      CKTIME = FLOAT (MCLOCK()) * 0.01 - TSTART
C      RETURN
C*****END COMPUTING TIME > IBM (RISC System/6000) AIX

C*****COMPUTING TIME > none
C      CKTIME = 0.0
C      RETURN
C*****END COMPUTING TIME > none
C
      END

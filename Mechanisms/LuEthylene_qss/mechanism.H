#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  O
2  C
3  N
*/

// Species
#define H2_ID 0
#define H_ID 1
#define O_ID 2
#define O2_ID 3
#define OH_ID 4
#define H2O_ID 5
#define HO2_ID 6
#define H2O2_ID 7
#define CH3_ID 8
#define CH4_ID 9
#define CO_ID 10
#define CO2_ID 11
#define CH2O_ID 12
#define C2H2_ID 13
#define C2H4_ID 14
#define C2H6_ID 15
#define HCCO_ID 16
#define CH2CO_ID 17
#define CH3CHO_ID 18
#define aC3H5_ID 19
#define C3H6_ID 20
#define N2_ID 21

#define NUM_GAS_ELEMENTS 4      // Elements in the homogeneous phase
#define NUM_QSSA_GAS_SPECIES 22 // Species in the homogeneous phase
#define NUM_GAS_REACTIONS 206   // Reactions in the homogeneous phase

#define SITE_DENSITY 0.000000E+00 // mol/cm^2

#define NUM_SURFACE_ELEMENTS 0  // Additional elements in heterogeneous phase
#define NUM_SURFACE_SPECIES 0   // Species in the heterogeneous phase
#define NUM_SURFACE_REACTIONS 0 // Reactions in the heterogeneous phase

#define NUM_ELEMENTS (NUM_GAS_ELEMENTS + NUM_SURFACE_ELEMENTS)
#define NUM_SPECIES (NUM_QSSA_GAS_SPECIES + NUM_SURFACE_SPECIES)
#define NUM_REACTIONS (NUM_GAS_REACTIONS + NUM_SURFACE_REACTIONS)

#define NUM_IONS 0

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 22;
  ii = 206;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};
#endif
const amrex::Real h_global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};

//  molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};
#endif
const amrex::Real h_global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.4960317460317460;  // H2
  imw_new[1] = 0.9920634920634921;  // H
  imw_new[2] = 0.0625039064941559;  // O
  imw_new[3] = 0.0312519532470779;  // O2
  imw_new[4] = 0.0587993179279120;  // OH
  imw_new[5] = 0.0555092978073827;  // H2O
  imw_new[6] = 0.0302975216627280;  // HO2
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0665114732291320;  // CH3
  imw_new[9] = 0.0623324814560868;  // CH4
  imw_new[10] = 0.0357015351660121; // CO
  imw_new[11] = 0.0227226249176305; // CO2
  imw_new[12] = 0.0333044694598015; // CH2O
  imw_new[13] = 0.0384054074813734; // C2H2
  imw_new[14] = 0.0356455407428531; // C2H4
  imw_new[15] = 0.0332557366145660; // C2H6
  imw_new[16] = 0.0243730044602598; // HCCO
  imw_new[17] = 0.0237885672145967; // CH2CO
  imw_new[18] = 0.0226999296302181; // CH3CHO
  imw_new[19] = 0.0243468945535997; // aC3H5
  imw_new[20] = 0.0237636938285687; // C3H6
  imw_new[21] = 0.0356964374955379; // N2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 2.016000;   // H2
  mw_new[1] = 1.008000;   // H
  mw_new[2] = 15.999000;  // O
  mw_new[3] = 31.998000;  // O2
  mw_new[4] = 17.007000;  // OH
  mw_new[5] = 18.015000;  // H2O
  mw_new[6] = 33.006000;  // HO2
  mw_new[7] = 34.014000;  // H2O2
  mw_new[8] = 15.035000;  // CH3
  mw_new[9] = 16.043000;  // CH4
  mw_new[10] = 28.010000; // CO
  mw_new[11] = 44.009000; // CO2
  mw_new[12] = 30.026000; // CH2O
  mw_new[13] = 26.038000; // C2H2
  mw_new[14] = 28.054000; // C2H4
  mw_new[15] = 30.070000; // C2H6
  mw_new[16] = 41.029000; // HCCO
  mw_new[17] = 42.037000; // CH2CO
  mw_new[18] = 44.053000; // CH3CHO
  mw_new[19] = 41.073000; // aC3H5
  mw_new[20] = 42.081000; // C3H6
  mw_new[21] = 28.014000; // N2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
                 2.01572094e-08 * T3 - 7.37611761e-12 * T4;
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
                 2.30081632e-18 * T3 - 9.27732332e-22 * T4;
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
                 6.12806624e-09 * T3 + 2.11265971e-12 * T4;
    // species 3: O2
    species[3] = +2.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
                 9.68129509e-09 * T3 + 3.24372837e-12 * T4;
    // species 4: OH
    species[4] = +2.99201543e+00 - 2.40131752e-03 * T + 4.61793841e-06 * T2 -
                 3.88113333e-09 * T3 + 1.36411470e-12 * T4;
    // species 5: H2O
    species[5] = +3.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
                 5.48797062e-09 * T3 + 1.77197817e-12 * T4;
    // species 6: HO2
    species[6] = +3.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
                 2.42763894e-08 * T3 + 9.29225124e-12 * T4;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
                 2.15770813e-08 * T3 + 8.62454363e-12 * T4;
    // species 8: CH3
    species[8] = +2.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
                 6.87117425e-09 * T3 + 2.54385734e-12 * T4;
    // species 9: CH4
    species[9] = +4.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
                 4.84743026e-08 * T3 + 1.66693956e-11 * T4;
    // species 10: CO
    species[10] = +2.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
                  9.07005884e-10 * T3 - 9.04424499e-13 * T4;
    // species 11: CO2
    species[11] = +1.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
                  2.45919022e-09 * T3 - 1.43699548e-13 * T4;
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
                  3.79285261e-08 * T3 + 1.31772652e-11 * T4;
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
                  2.80152437e-08 * T3 - 8.50072974e-12 * T4;
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
                  6.91588753e-08 * T3 + 2.69884373e-11 * T4;
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
                  7.08466285e-08 * T3 + 2.68685771e-11 * T4;
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
                  1.72757590e-08 * T3 - 5.06648110e-12 * T4;
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
                  9.34397568e-09 * T3 - 2.01457615e-12 * T4;
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 3.19328580e-03 * T + 4.75349210e-05 * T2 -
                  5.74586110e-08 * T3 + 2.19311120e-11 * T4;
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
                  3.33555550e-08 * T3 + 1.58465710e-11 * T4;
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
                  1.66891200e-08 * T3 + 7.15814600e-12 * T4;
    // species 21: N2
    species[21] = +2.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485400e-12 * T4;
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
                 1.79566394e-10 * T3 + 2.00255376e-14 * T4;
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
                 4.73515235e-18 * T3 + 4.98197357e-22 * T4;
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
                 1.00177799e-11 * T3 + 1.22833691e-15 * T4;
    // species 3: O2
    species[3] = +2.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
                 2.09470555e-10 * T3 - 2.16717794e-14 * T4;
    // species 4: OH
    species[4] = +2.09288767e+00 + 5.48429716e-04 * T + 1.26505228e-07 * T2 -
                 8.79461556e-11 * T3 + 1.17412376e-14 * T4;
    // species 5: H2O
    species[5] = +2.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
                 9.70419870e-11 * T3 + 1.68200992e-14 * T4;
    // species 6: HO2
    species[6] = +3.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
                 1.14246370e-10 * T3 - 1.07908535e-14 * T4;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
                 3.71185986e-10 * T3 - 2.87908305e-14 * T4;
    // species 8: CH3
    species[8] = +1.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
                 5.95684644e-10 * T3 - 4.67154394e-14 * T4;
    // species 9: CH4
    species[9] = -9.25148505e-01 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
                 1.22292535e-09 * T3 - 1.01815230e-13 * T4;
    // species 10: CO
    species[10] = +1.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
                  2.30053008e-10 * T3 - 2.03647716e-14 * T4;
    // species 11: CO2
    species[11] = +2.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
                  5.23490188e-10 * T3 - 4.72084164e-14 * T4;
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
                  1.00641212e-09 * T3 - 8.83855640e-14 * T4;
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
                  4.67412171e-10 * T3 - 3.61235213e-14 * T4;
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
                  1.47222923e-09 * T3 - 1.25706061e-13 * T4;
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
                  2.21412001e-09 * T3 - 1.90002890e-13 * T4;
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
                  2.86260520e-10 * T3 - 1.94078320e-14 * T4;
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
                  9.23345882e-10 * T3 - 7.94838201e-14 * T4;
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 1.17230590e-02 * T - 4.22631370e-06 * T2 +
                  6.83724510e-10 * T3 - 4.09848630e-14 * T4;
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
                  1.10808010e-09 * T3 - 9.03638870e-14 * T4;
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
                  7.21202200e-10 * T3 - 3.76620400e-14 * T4;
    // species 21: N2
    species[21] = +1.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
                  1.00970380e-10 * T3 - 6.75335100e-15 * T4;
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
                 2.01572094e-08 * T3 - 7.37611761e-12 * T4;
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
                 2.30081632e-18 * T3 - 9.27732332e-22 * T4;
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
                 6.12806624e-09 * T3 + 2.11265971e-12 * T4;
    // species 3: O2
    species[3] = +3.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
                 9.68129509e-09 * T3 + 3.24372837e-12 * T4;
    // species 4: OH
    species[4] = +3.99201543e+00 - 2.40131752e-03 * T + 4.61793841e-06 * T2 -
                 3.88113333e-09 * T3 + 1.36411470e-12 * T4;
    // species 5: H2O
    species[5] = +4.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
                 5.48797062e-09 * T3 + 1.77197817e-12 * T4;
    // species 6: HO2
    species[6] = +4.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
                 2.42763894e-08 * T3 + 9.29225124e-12 * T4;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
                 2.15770813e-08 * T3 + 8.62454363e-12 * T4;
    // species 8: CH3
    species[8] = +3.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
                 6.87117425e-09 * T3 + 2.54385734e-12 * T4;
    // species 9: CH4
    species[9] = +5.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
                 4.84743026e-08 * T3 + 1.66693956e-11 * T4;
    // species 10: CO
    species[10] = +3.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
                  9.07005884e-10 * T3 - 9.04424499e-13 * T4;
    // species 11: CO2
    species[11] = +2.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
                  2.45919022e-09 * T3 - 1.43699548e-13 * T4;
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
                  3.79285261e-08 * T3 + 1.31772652e-11 * T4;
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
                  2.80152437e-08 * T3 - 8.50072974e-12 * T4;
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
                  6.91588753e-08 * T3 + 2.69884373e-11 * T4;
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
                  7.08466285e-08 * T3 + 2.68685771e-11 * T4;
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
                  1.72757590e-08 * T3 - 5.06648110e-12 * T4;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
                  9.34397568e-09 * T3 - 2.01457615e-12 * T4;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 3.19328580e-03 * T + 4.75349210e-05 * T2 -
                  5.74586110e-08 * T3 + 2.19311120e-11 * T4;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
                  3.33555550e-08 * T3 + 1.58465710e-11 * T4;
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
                  1.66891200e-08 * T3 + 7.15814600e-12 * T4;
    // species 21: N2
    species[21] = +3.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485400e-12 * T4;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
                 1.79566394e-10 * T3 + 2.00255376e-14 * T4;
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
                 4.73515235e-18 * T3 + 4.98197357e-22 * T4;
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
                 1.00177799e-11 * T3 + 1.22833691e-15 * T4;
    // species 3: O2
    species[3] = +3.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
                 2.09470555e-10 * T3 - 2.16717794e-14 * T4;
    // species 4: OH
    species[4] = +3.09288767e+00 + 5.48429716e-04 * T + 1.26505228e-07 * T2 -
                 8.79461556e-11 * T3 + 1.17412376e-14 * T4;
    // species 5: H2O
    species[5] = +3.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
                 9.70419870e-11 * T3 + 1.68200992e-14 * T4;
    // species 6: HO2
    species[6] = +4.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
                 1.14246370e-10 * T3 - 1.07908535e-14 * T4;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
                 3.71185986e-10 * T3 - 2.87908305e-14 * T4;
    // species 8: CH3
    species[8] = +2.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
                 5.95684644e-10 * T3 - 4.67154394e-14 * T4;
    // species 9: CH4
    species[9] = +7.48514950e-02 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
                 1.22292535e-09 * T3 - 1.01815230e-13 * T4;
    // species 10: CO
    species[10] = +2.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
                  2.30053008e-10 * T3 - 2.03647716e-14 * T4;
    // species 11: CO2
    species[11] = +3.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
                  5.23490188e-10 * T3 - 4.72084164e-14 * T4;
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
                  1.00641212e-09 * T3 - 8.83855640e-14 * T4;
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
                  4.67412171e-10 * T3 - 3.61235213e-14 * T4;
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
                  1.47222923e-09 * T3 - 1.25706061e-13 * T4;
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
                  2.21412001e-09 * T3 - 1.90002890e-13 * T4;
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
                  2.86260520e-10 * T3 - 1.94078320e-14 * T4;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
                  9.23345882e-10 * T3 - 7.94838201e-14 * T4;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 1.17230590e-02 * T - 4.22631370e-06 * T2 +
                  6.83724510e-10 * T3 - 4.09848630e-14 * T4;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
                  1.10808010e-09 * T3 - 9.03638870e-14 * T4;
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
                  7.21202200e-10 * T3 - 3.76620400e-14 * T4;
    // species 21: N2
    species[21] = +2.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
                  1.00970380e-10 * T3 - 6.75335100e-15 * T4;
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                 3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                 3.688058805000000e-13 * T4;
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * logT - 3.526664095000000e-13 * T +
                 3.326532733333333e-16 * T2 - 1.917346933333333e-19 * T3 +
                 4.638661660000000e-23 * T4;
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * logT + 1.639659420000000e-03 * T -
                 1.107177326666667e-06 * T2 + 5.106721866666666e-10 * T3 -
                 1.056329855000000e-13 * T4;
    // species 3: O2
    species[3] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * logT + 1.498367080000000e-03 * T -
                 1.641217001666667e-06 * T2 + 8.067745908333334e-10 * T3 -
                 1.621864185000000e-13 * T4;
    // species 4: OH
    species[4] = +3.615080560000000e+03 * invT + 4.095940888000000e+00 -
                 3.992015430000000e+00 * logT + 1.200658760000000e-03 * T -
                 7.696564016666666e-07 * T2 + 3.234277775000000e-10 * T3 -
                 6.820573500000000e-14 * T4;
    // species 5: H2O
    species[5] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * logT + 1.018217050000000e-03 * T -
                 1.086733685000000e-06 * T2 + 4.573308850000000e-10 * T3 -
                 8.859890850000000e-14 * T4;
    // species 6: HO2
    species[6] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * logT + 2.374560255000000e-03 * T -
                 3.526381516666666e-06 * T2 + 2.023032450000000e-09 * T3 -
                 4.646125620000001e-13 * T4;
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * logT + 2.714112085000000e-04 * T -
                 2.788928350000000e-06 * T2 + 1.798090108333333e-09 * T3 -
                 4.312271815000000e-13 * T4;
    // species 8: CH3
    species[8] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                 3.673590400000000e+00 * logT - 1.005475875000000e-03 * T -
                 9.550364266666668e-07 * T2 + 5.725978541666666e-10 * T3 -
                 1.271928670000000e-13 * T4;
    // species 9: CH4
    species[9] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                 5.149876130000000e+00 * logT + 6.835489400000000e-03 * T -
                 8.196676650000000e-06 * T2 + 4.039525216666667e-09 * T3 -
                 8.334697800000000e-13 * T4;
    // species 10: CO
    species[10] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * logT + 3.051768400000000e-04 * T -
                  1.694690550000000e-07 * T2 - 7.558382366666667e-11 * T3 +
                  4.522122495000000e-14 * T4;
    // species 11: CO2
    species[11] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * logT - 4.492298385000000e-03 * T +
                  1.187260448333333e-06 * T2 - 2.049325183333333e-10 * T3 +
                  7.184977399999999e-15 * T4;
    // species 12: CH2O
    species[12] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * logT + 4.954166845000000e-03 * T -
                  6.220333466666666e-06 * T2 + 3.160710508333333e-09 * T3 -
                  6.588632600000000e-13 * T4;
    // species 13: C2H2
    species[13] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * logT - 1.168078145000000e-02 * T +
                  5.919530250000000e-06 * T2 - 2.334603641666667e-09 * T3 +
                  4.250364870000000e-13 * T4;
    // species 14: C2H4
    species[14] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * logT + 3.785261235000000e-03 * T -
                  9.516504866666667e-06 * T2 + 5.763239608333333e-09 * T3 -
                  1.349421865000000e-12 * T4;
    // species 15: C2H6
    species[15] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * logT + 2.750771350000000e-03 * T -
                  9.990638133333334e-06 * T2 + 5.903885708333334e-09 * T3 -
                  1.343428855000000e-12 * T4;
    // species 16: HCCO
    species[16] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * logT - 8.827510500000000e-03 * T +
                  3.954850166666666e-06 * T2 - 1.439646583333334e-09 * T3 +
                  2.533240550000000e-13 * T4;
    // species 17: CH2CO
    species[17] = -7.042918040000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * logT - 9.059436050000000e-03 * T +
                  2.899124566666666e-06 * T2 - 7.786646400000000e-10 * T3 +
                  1.007288075000000e-13 * T4;
    // species 18: CH3CHO
    species[18] = -2.157287800000000e+04 * invT + 6.264436000000000e-01 -
                  4.729459500000000e+00 * logT + 1.596642900000000e-03 * T -
                  7.922486833333334e-06 * T2 + 4.788217583333333e-09 * T3 -
                  1.096555600000000e-12 * T4;
    // species 19: aC3H5
    species[19] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * logT - 9.906910499999999e-03 * T -
                  2.082843333333333e-06 * T2 + 2.779629583333333e-09 * T3 -
                  7.923285500000000e-13 * T4;
    // species 20: C3H6
    species[20] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * logT - 1.046259000000000e-02 * T -
                  7.477990000000000e-07 * T2 + 1.390760000000000e-09 * T3 -
                  3.579073000000000e-13 * T4;
    // species 21: N2
    species[21] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
  } else {
    // species 0: H2
    species[0] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                 8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                 1.001276880000000e-15 * T4;
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * logT + 1.154214865000000e-11 * T -
                 2.692699133333334e-15 * T2 + 3.945960291666667e-19 * T3 -
                 2.490986785000000e-23 * T4;
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * logT + 4.298705685000000e-05 * T -
                 6.991409816666667e-09 * T2 + 8.348149916666666e-13 * T3 -
                 6.141684549999999e-17 * T4;
    // species 3: O2
    species[3] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * logT - 7.415437700000000e-04 * T +
                 1.263277781666667e-07 * T2 - 1.745587958333333e-11 * T3 +
                 1.083588970000000e-15 * T4;
    // species 4: OH
    species[4] = +3.858657000000000e+03 * invT - 1.383808430000000e+00 -
                 3.092887670000000e+00 * logT - 2.742148580000000e-04 * T -
                 2.108420466666667e-08 * T2 + 7.328846300000000e-12 * T3 -
                 5.870618800000000e-16 * T4;
    // species 5: H2O
    species[5] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * logT - 1.088459020000000e-03 * T +
                 2.734541966666666e-08 * T2 + 8.086832250000000e-12 * T3 -
                 8.410049600000000e-16 * T4;
    // species 6: HO2
    species[6] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * logT - 1.119910065000000e-03 * T +
                 1.056096916666667e-07 * T2 - 9.520530833333334e-12 * T3 +
                 5.395426750000000e-16 * T4;
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * logT - 2.454158470000000e-03 * T +
                 3.168987083333333e-07 * T2 - 3.093216550000000e-11 * T3 +
                 1.439541525000000e-15 * T4;
    // species 8: CH3
    species[8] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                 2.285717720000000e+00 * logT - 3.619950185000000e-03 * T +
                 4.978572466666667e-07 * T2 - 4.964038700000000e-11 * T3 +
                 2.335771970000000e-15 * T4;
    // species 9: CH4
    species[9] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                 7.485149500000000e-02 * logT - 6.695473350000000e-03 * T +
                 9.554763483333333e-07 * T2 - 1.019104458333333e-10 * T3 +
                 5.090761500000000e-15 * T4;
    // species 10: CO
    species[10] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * logT - 1.031263715000000e-03 * T +
                  1.664709618333334e-07 * T2 - 1.917108400000000e-11 * T3 +
                  1.018238580000000e-15 * T4;
    // species 11: CO2
    species[11] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * logT - 2.207185130000000e-03 * T +
                  3.691356733333334e-07 * T2 - 4.362418233333334e-11 * T3 +
                  2.360420820000000e-15 * T4;
    // species 12: CH2O
    species[12] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * logT - 4.600000410000000e-03 * T +
                  7.370980216666666e-07 * T2 - 8.386767666666666e-11 * T3 +
                  4.419278200000001e-15 * T4;
    // species 13: C2H2
    species[13] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * logT - 2.980833320000000e-03 * T +
                  3.954914200000000e-07 * T2 - 3.895101425000000e-11 * T3 +
                  1.806176065000000e-15 * T4;
    // species 14: C2H4
    species[14] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * logT - 7.322707550000000e-03 * T +
                  1.118463191666667e-06 * T2 - 1.226857691666667e-10 * T3 +
                  6.285303050000000e-15 * T4;
    // species 15: C2H6
    species[15] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * logT - 1.084263385000000e-02 * T +
                  1.670934450000000e-06 * T2 - 1.845100008333333e-10 * T3 +
                  9.500144500000000e-15 * T4;
    // species 16: HCCO
    species[16] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * logT - 2.042670050000000e-03 * T +
                  2.655757833333333e-07 * T2 - 2.385504333333333e-11 * T3 +
                  9.703915999999999e-16 * T4;
    // species 17: CH2CO
    species[17] = -7.551053110000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * logT - 4.501798725000000e-03 * T +
                  6.948993916666666e-07 * T2 - 7.694549016666667e-11 * T3 +
                  3.974191005000000e-15 * T4;
    // species 18: CH3CHO
    species[18] = -2.259312200000000e+04 * invT + 8.884902499999999e+00 -
                  5.404110800000000e+00 * logT - 5.861529500000000e-03 * T +
                  7.043856166666666e-07 * T2 - 5.697704250000000e-11 * T3 +
                  2.049243150000000e-15 * T4;
    // species 19: aC3H5
    species[19] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * logT - 7.162365500000000e-03 * T +
                  9.463605333333332e-07 * T2 - 9.234000833333333e-11 * T3 +
                  4.518194349999999e-15 * T4;
    // species 20: C3H6
    species[20] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * logT - 7.454170000000000e-03 * T +
                  8.249831666666666e-07 * T2 - 6.010018333333334e-11 * T3 +
                  1.883102000000000e-15 * T4;
    // species 21: N2
    species[21] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                 3.489816650000000e+00 * logT - 1.619177705000000e-04 * T +
                 2.814984416666667e-07 * T2 - 2.635144391666666e-10 * T3 +
                 7.030453350000001e-14 * T4;
    // species 1: CH2
    species[1] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * logT - 4.844360715000000e-04 * T -
                 4.658164016666667e-07 * T2 + 3.209092941666667e-10 * T3 -
                 8.437085950000000e-14 * T4;
    // species 2: CH2*
    species[2] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * logT + 1.183307095000000e-03 * T -
                 1.372160366666667e-06 * T2 + 5.573466508333334e-10 * T3 -
                 9.715736850000000e-14 * T4;
    // species 3: HCO
    species[3] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                 4.221185840000000e+00 * logT + 1.621962660000000e-03 * T -
                 2.296657433333333e-06 * T2 + 1.109534108333333e-09 * T3 -
                 2.168844325000000e-13 * T4;
    // species 4: CH3O
    species[4] = +9.786011000000000e+02 * invT - 1.104597300000000e+01 -
                 2.106204000000000e+00 * logT - 3.608297500000000e-03 * T -
                 8.897453333333333e-07 * T2 + 6.148030000000000e-10 * T3 -
                 1.037805000000000e-13 * T4;
    // species 5: H2CC
    species[5] = +4.862179400000000e+04 * invT - 2.638842700000001e+00 -
                 3.281548300000000e+00 * logT - 3.488239550000000e-03 * T +
                 3.975874000000000e-07 * T2 + 1.008702666666667e-10 * T3 -
                 4.909477250000000e-14 * T4;
    // species 6: C2H3
    species[6] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                 3.212466450000000e+00 * logT - 7.573958100000000e-04 * T -
                 4.320156866666666e-06 * T2 + 2.980482058333333e-09 * T3 -
                 7.357543650000000e-13 * T4;
    // species 7: C2H5
    species[7] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                 4.306465680000000e+00 * logT + 2.093294460000000e-03 * T -
                 8.285713450000000e-06 * T2 + 4.992721716666666e-09 * T3 -
                 1.152545020000000e-12 * T4;
    // species 8: CH2CHO
    species[8] = +1.521476600000000e+03 * invT - 6.162391100000001e+00 -
                 3.409062400000000e+00 * logT - 5.369287000000000e-03 * T -
                 3.152487500000000e-07 * T2 - 5.965485916666667e-10 * T3 -
                 1.433692550000000e-13 * T4;
    // species 9: nC3H7
    species[9] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                 1.049117300000000e+00 * logT - 1.300448650000000e-02 * T -
                 3.923752666666667e-07 * T2 + 1.632927666666667e-09 * T3 -
                 4.686010350000000e-13 * T4;
  } else {
    // species 0: CH
    species[0] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                 2.878464730000000e+00 * logT - 4.854568405000000e-04 * T -
                 2.407427583333333e-08 * T2 + 1.089065408333333e-11 * T3 -
                 8.803969149999999e-16 * T4;
    // species 1: CH2
    species[1] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * logT - 1.828196460000000e-03 * T +
                 2.348243283333333e-07 * T2 - 2.168162908333333e-11 * T3 +
                 9.386378350000000e-16 * T4;
    // species 2: CH2*
    species[2] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * logT - 2.327943185000000e-03 * T +
                 3.353199116666667e-07 * T2 - 3.482550000000000e-11 * T3 +
                 1.698581825000000e-15 * T4;
    // species 3: HCO
    species[3] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                 2.772174380000000e+00 * logT - 2.478477630000000e-03 * T +
                 4.140760216666667e-07 * T2 - 4.909681483333334e-11 * T3 +
                 2.667543555000000e-15 * T4;
    // species 4: CH3O
    species[4] = +1.278325200000000e+02 * invT + 8.412240000000000e-01 -
                 3.770799000000000e+00 * logT - 3.935748500000000e-03 * T +
                 4.427306666666667e-07 * T2 - 3.287025833333333e-11 * T3 +
                 1.056308000000000e-15 * T4;
    // species 5: H2CC
    species[5] = +4.831668800000000e+04 * invT + 3.637796990000000e+00 -
                 4.278034000000000e+00 * logT - 2.378140200000000e-03 * T +
                 2.716834833333333e-07 * T2 - 2.121900500000000e-11 * T3 +
                 7.443189499999999e-16 * T4;
    // species 6: C2H3
    species[6] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                 3.016724000000000e+00 * logT - 5.165114600000000e-03 * T +
                 7.801372483333333e-07 * T2 - 8.480274000000000e-11 * T3 +
                 4.313035205000000e-15 * T4;
    // species 7: C2H5
    species[7] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                 1.954656420000000e+00 * logT - 8.698636100000001e-03 * T +
                 1.330344446666667e-06 * T2 - 1.460147408333333e-10 * T3 +
                 7.482078800000000e-15 * T4;
    // species 8: CH2CHO
    species[8] = +4.903217800000000e+02 * invT + 1.100775780000000e+01 -
                 5.975669900000000e+00 * logT - 4.065295700000000e-03 * T +
                 4.572707500000000e-07 * T2 - 3.391920083333333e-11 * T3 +
                 1.088008550000000e-15 * T4;
    // species 9: nC3H7
    species[9] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                 7.709747900000000e+00 * logT - 8.015742500000001e-03 * T +
                 8.786706333333332e-07 * T2 - 6.324029333333334e-11 * T3 +
                 1.943135950000000e-15 * T4;
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * logT - 3.99026037e-03 * T +
                 3.24635850e-06 * T2 - 1.67976745e-09 * T3 +
                 3.68805881e-13 * T4;
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * logT - 3.52666409e-13 * T +
                 3.32653273e-16 * T2 - 1.91734693e-19 * T3 +
                 4.63866166e-23 * T4;
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * logT + 1.63965942e-03 * T -
                 1.10717733e-06 * T2 + 5.10672187e-10 * T3 -
                 1.05632985e-13 * T4;
    // species 3: O2
    species[3] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * logT + 1.49836708e-03 * T -
                 1.64121700e-06 * T2 + 8.06774591e-10 * T3 -
                 1.62186418e-13 * T4;
    // species 4: OH
    species[4] = +3.61508056e+03 * invT + 3.09594089e+00 -
                 3.99201543e+00 * logT + 1.20065876e-03 * T -
                 7.69656402e-07 * T2 + 3.23427778e-10 * T3 -
                 6.82057350e-14 * T4;
    // species 5: H2O
    species[5] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * logT + 1.01821705e-03 * T -
                 1.08673369e-06 * T2 + 4.57330885e-10 * T3 -
                 8.85989085e-14 * T4;
    // species 6: HO2
    species[6] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * logT + 2.37456025e-03 * T -
                 3.52638152e-06 * T2 + 2.02303245e-09 * T3 -
                 4.64612562e-13 * T4;
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * logT + 2.71411208e-04 * T -
                 2.78892835e-06 * T2 + 1.79809011e-09 * T3 -
                 4.31227182e-13 * T4;
    // species 8: CH3
    species[8] = +1.64449988e+04 * invT + 1.06902607e+00 -
                 3.67359040e+00 * logT - 1.00547588e-03 * T -
                 9.55036427e-07 * T2 + 5.72597854e-10 * T3 -
                 1.27192867e-13 * T4;
    // species 9: CH4
    species[9] = -1.02466476e+04 * invT + 8.79117989e+00 -
                 5.14987613e+00 * logT + 6.83548940e-03 * T -
                 8.19667665e-06 * T2 + 4.03952522e-09 * T3 -
                 8.33469780e-13 * T4;
    // species 10: CO
    species[10] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * logT + 3.05176840e-04 * T -
                  1.69469055e-07 * T2 - 7.55838237e-11 * T3 +
                  4.52212249e-14 * T4;
    // species 11: CO2
    species[11] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * logT - 4.49229839e-03 * T +
                  1.18726045e-06 * T2 - 2.04932518e-10 * T3 +
                  7.18497740e-15 * T4;
    // species 12: CH2O
    species[12] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * logT + 4.95416684e-03 * T -
                  6.22033347e-06 * T2 + 3.16071051e-09 * T3 -
                  6.58863260e-13 * T4;
    // species 13: C2H2
    species[13] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * logT - 1.16807815e-02 * T +
                  5.91953025e-06 * T2 - 2.33460364e-09 * T3 +
                  4.25036487e-13 * T4;
    // species 14: C2H4
    species[14] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * logT + 3.78526124e-03 * T -
                  9.51650487e-06 * T2 + 5.76323961e-09 * T3 -
                  1.34942187e-12 * T4;
    // species 15: C2H6
    species[15] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * logT + 2.75077135e-03 * T -
                  9.99063813e-06 * T2 + 5.90388571e-09 * T3 -
                  1.34342886e-12 * T4;
    // species 16: HCCO
    species[16] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * logT - 8.82751050e-03 * T +
                  3.95485017e-06 * T2 - 1.43964658e-09 * T3 +
                  2.53324055e-13 * T4;
    // species 17: CH2CO
    species[17] = -7.04291804e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * logT - 9.05943605e-03 * T +
                  2.89912457e-06 * T2 - 7.78664640e-10 * T3 +
                  1.00728807e-13 * T4;
    // species 18: CH3CHO
    species[18] = -2.15728780e+04 * invT - 3.73556400e-01 -
                  4.72945950e+00 * logT + 1.59664290e-03 * T -
                  7.92248683e-06 * T2 + 4.78821758e-09 * T3 -
                  1.09655560e-12 * T4;
    // species 19: aC3H5
    species[19] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * logT - 9.90691050e-03 * T -
                  2.08284333e-06 * T2 + 2.77962958e-09 * T3 -
                  7.92328550e-13 * T4;
    // species 20: C3H6
    species[20] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * logT - 1.04625900e-02 * T -
                  7.47799000e-07 * T2 + 1.39076000e-09 * T3 -
                  3.57907300e-13 * T4;
    // species 21: N2
    species[21] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * logT - 7.04120200e-04 * T +
                  6.60537000e-07 * T2 - 4.70126250e-10 * T3 +
                  1.22242700e-13 * T4;
  } else {
    // species 0: H2
    species[0] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * logT + 2.47012365e-05 * T -
                 8.32427963e-08 * T2 + 1.49638662e-11 * T3 -
                 1.00127688e-15 * T4;
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * logT + 1.15421486e-11 * T -
                 2.69269913e-15 * T2 + 3.94596029e-19 * T3 -
                 2.49098679e-23 * T4;
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * logT + 4.29870569e-05 * T -
                 6.99140982e-09 * T2 + 8.34814992e-13 * T3 -
                 6.14168455e-17 * T4;
    // species 3: O2
    species[3] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * logT - 7.41543770e-04 * T +
                 1.26327778e-07 * T2 - 1.74558796e-11 * T3 +
                 1.08358897e-15 * T4;
    // species 4: OH
    species[4] = +3.85865700e+03 * invT - 2.38380843e+00 -
                 3.09288767e+00 * logT - 2.74214858e-04 * T -
                 2.10842047e-08 * T2 + 7.32884630e-12 * T3 -
                 5.87061880e-16 * T4;
    // species 5: H2O
    species[5] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * logT - 1.08845902e-03 * T +
                 2.73454197e-08 * T2 + 8.08683225e-12 * T3 -
                 8.41004960e-16 * T4;
    // species 6: HO2
    species[6] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * logT - 1.11991006e-03 * T +
                 1.05609692e-07 * T2 - 9.52053083e-12 * T3 +
                 5.39542675e-16 * T4;
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * logT - 2.45415847e-03 * T +
                 3.16898708e-07 * T2 - 3.09321655e-11 * T3 +
                 1.43954153e-15 * T4;
    // species 8: CH3
    species[8] = +1.67755843e+04 * invT - 7.19435407e+00 -
                 2.28571772e+00 * logT - 3.61995018e-03 * T +
                 4.97857247e-07 * T2 - 4.96403870e-11 * T3 +
                 2.33577197e-15 * T4;
    // species 9: CH4
    species[9] = -9.46834459e+03 * invT - 1.93624665e+01 -
                 7.48514950e-02 * logT - 6.69547335e-03 * T +
                 9.55476348e-07 * T2 - 1.01910446e-10 * T3 +
                 5.09076150e-15 * T4;
    // species 10: CO
    species[10] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * logT - 1.03126372e-03 * T +
                  1.66470962e-07 * T2 - 1.91710840e-11 * T3 +
                  1.01823858e-15 * T4;
    // species 11: CO2
    species[11] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * logT - 2.20718513e-03 * T +
                  3.69135673e-07 * T2 - 4.36241823e-11 * T3 +
                  2.36042082e-15 * T4;
    // species 12: CH2O
    species[12] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * logT - 4.60000041e-03 * T +
                  7.37098022e-07 * T2 - 8.38676767e-11 * T3 +
                  4.41927820e-15 * T4;
    // species 13: C2H2
    species[13] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * logT - 2.98083332e-03 * T +
                  3.95491420e-07 * T2 - 3.89510143e-11 * T3 +
                  1.80617607e-15 * T4;
    // species 14: C2H4
    species[14] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * logT - 7.32270755e-03 * T +
                  1.11846319e-06 * T2 - 1.22685769e-10 * T3 +
                  6.28530305e-15 * T4;
    // species 15: C2H6
    species[15] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * logT - 1.08426339e-02 * T +
                  1.67093445e-06 * T2 - 1.84510001e-10 * T3 +
                  9.50014450e-15 * T4;
    // species 16: HCCO
    species[16] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * logT - 2.04267005e-03 * T +
                  2.65575783e-07 * T2 - 2.38550433e-11 * T3 +
                  9.70391600e-16 * T4;
    // species 17: CH2CO
    species[17] = -7.55105311e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * logT - 4.50179872e-03 * T +
                  6.94899392e-07 * T2 - 7.69454902e-11 * T3 +
                  3.97419100e-15 * T4;
    // species 18: CH3CHO
    species[18] = -2.25931220e+04 * invT + 7.88490250e+00 -
                  5.40411080e+00 * logT - 5.86152950e-03 * T +
                  7.04385617e-07 * T2 - 5.69770425e-11 * T3 +
                  2.04924315e-15 * T4;
    // species 19: aC3H5
    species[19] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * logT - 7.16236550e-03 * T +
                  9.46360533e-07 * T2 - 9.23400083e-11 * T3 +
                  4.51819435e-15 * T4;
    // species 20: C3H6
    species[20] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * logT - 7.45417000e-03 * T +
                  8.24983167e-07 * T2 - 6.01001833e-11 * T3 +
                  1.88310200e-15 * T4;
    // species 21: N2
    species[21] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * logT - 7.43988400e-04 * T +
                  9.47460000e-08 * T2 - 8.41419833e-12 * T3 +
                  3.37667550e-16 * T4;
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
                 5.03930235e-09 * T3 - 1.47522352e-12 * T4 -
                 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
                 5.75204080e-19 * T3 - 1.85546466e-22 * T4 +
                 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
                 1.53201656e-09 * T3 + 4.22531942e-13 * T4 +
                 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +2.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
                 2.42032377e-09 * T3 + 6.48745674e-13 * T4 -
                 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +2.99201543e+00 - 1.20065876e-03 * T + 1.53931280e-06 * T2 -
                 9.70283332e-10 * T3 + 2.72822940e-13 * T4 +
                 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +3.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
                 1.37199266e-09 * T3 + 3.54395634e-13 * T4 -
                 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +3.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
                 6.06909735e-09 * T3 + 1.85845025e-12 * T4 +
                 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
                 5.39427032e-09 * T3 + 1.72490873e-12 * T4 -
                 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +2.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
                 1.71779356e-09 * T3 + 5.08771468e-13 * T4 +
                 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +4.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
                 1.21185757e-08 * T3 + 3.33387912e-12 * T4 -
                 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +2.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
                  2.26751471e-10 * T3 - 1.80884900e-13 * T4 -
                  1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +1.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
                  6.14797555e-10 * T3 - 2.87399096e-14 * T4 -
                  4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
                  9.48213152e-09 * T3 + 2.63545304e-12 * T4 -
                  1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
                  7.00381092e-09 * T3 - 1.70014595e-12 * T4 +
                  2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
                  1.72897188e-08 * T3 + 5.39768746e-12 * T4 +
                  5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
                  1.77116571e-08 * T3 + 5.37371542e-12 * T4 -
                  1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
                  4.31893975e-09 * T3 - 1.01329622e-12 * T4 +
                  2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
                  2.33599392e-09 * T3 - 4.02915230e-13 * T4 -
                  7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 1.59664290e-03 * T + 1.58449737e-05 * T2 -
                  1.43646527e-08 * T3 + 4.38622240e-12 * T4 -
                  2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
                  8.33888875e-09 * T3 + 3.16931420e-12 * T4 +
                  1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
                  4.17228000e-09 * T3 + 1.43162920e-12 * T4 +
                  1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +2.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88970800e-13 * T4 -
                  1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
                 4.48915985e-11 * T3 + 4.00510752e-15 * T4 -
                 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
                 1.18378809e-18 * T3 + 9.96394714e-23 * T4 +
                 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
                 2.50444497e-12 * T3 + 2.45667382e-16 * T4 +
                 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +2.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
                 5.23676387e-11 * T3 - 4.33435588e-15 * T4 -
                 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +2.09288767e+00 + 2.74214858e-04 * T + 4.21684093e-08 * T2 -
                 2.19865389e-11 * T3 + 2.34824752e-15 * T4 +
                 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +2.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
                 2.42604967e-11 * T3 + 3.36401984e-15 * T4 -
                 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +3.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
                 2.85615925e-11 * T3 - 2.15817070e-15 * T4 +
                 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
                 9.27964965e-11 * T3 - 5.75816610e-15 * T4 -
                 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +1.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
                 1.48921161e-10 * T3 - 9.34308788e-15 * T4 +
                 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = -9.25148505e-01 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
                 3.05731338e-10 * T3 - 2.03630460e-14 * T4 -
                 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +1.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
                  5.75132520e-11 * T3 - 4.07295432e-15 * T4 -
                  1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +2.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
                  1.30872547e-10 * T3 - 9.44168328e-15 * T4 -
                  4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
                  2.51603030e-10 * T3 - 1.76771128e-14 * T4 -
                  1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
                  1.16853043e-10 * T3 - 7.22470426e-15 * T4 +
                  2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
                  3.68057308e-10 * T3 - 2.51412122e-14 * T4 +
                  4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
                  5.53530003e-10 * T3 - 3.80005780e-14 * T4 -
                  1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
                  7.15651300e-11 * T3 - 3.88156640e-15 * T4 +
                  1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
                  2.30836470e-10 * T3 - 1.58967640e-14 * T4 -
                  7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 5.86152950e-03 * T - 1.40877123e-06 * T2 +
                  1.70931128e-10 * T3 - 8.19697260e-15 * T4 -
                  2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
                  2.77020025e-10 * T3 - 1.80727774e-14 * T4 +
                  1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
                  1.80300550e-10 * T3 - 7.53240800e-15 * T4 -
                  9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +1.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
                  2.52425950e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
                 5.03930235e-09 * T3 - 1.47522352e-12 * T4 -
                 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
                 5.75204080e-19 * T3 - 1.85546466e-22 * T4 +
                 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
                 1.53201656e-09 * T3 + 4.22531942e-13 * T4 +
                 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +3.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
                 2.42032377e-09 * T3 + 6.48745674e-13 * T4 -
                 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +3.99201543e+00 - 1.20065876e-03 * T + 1.53931280e-06 * T2 -
                 9.70283332e-10 * T3 + 2.72822940e-13 * T4 +
                 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +4.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
                 1.37199266e-09 * T3 + 3.54395634e-13 * T4 -
                 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +4.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
                 6.06909735e-09 * T3 + 1.85845025e-12 * T4 +
                 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
                 5.39427032e-09 * T3 + 1.72490873e-12 * T4 -
                 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +3.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
                 1.71779356e-09 * T3 + 5.08771468e-13 * T4 +
                 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +5.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
                 1.21185757e-08 * T3 + 3.33387912e-12 * T4 -
                 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +3.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
                  2.26751471e-10 * T3 - 1.80884900e-13 * T4 -
                  1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +2.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
                  6.14797555e-10 * T3 - 2.87399096e-14 * T4 -
                  4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
                  9.48213152e-09 * T3 + 2.63545304e-12 * T4 -
                  1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
                  7.00381092e-09 * T3 - 1.70014595e-12 * T4 +
                  2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
                  1.72897188e-08 * T3 + 5.39768746e-12 * T4 +
                  5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
                  1.77116571e-08 * T3 + 5.37371542e-12 * T4 -
                  1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
                  4.31893975e-09 * T3 - 1.01329622e-12 * T4 +
                  2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
                  2.33599392e-09 * T3 - 4.02915230e-13 * T4 -
                  7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 1.59664290e-03 * T + 1.58449737e-05 * T2 -
                  1.43646527e-08 * T3 + 4.38622240e-12 * T4 -
                  2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
                  8.33888875e-09 * T3 + 3.16931420e-12 * T4 +
                  1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
                  4.17228000e-09 * T3 + 1.43162920e-12 * T4 +
                  1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +3.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88970800e-13 * T4 -
                  1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
                 4.48915985e-11 * T3 + 4.00510752e-15 * T4 -
                 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
                 1.18378809e-18 * T3 + 9.96394714e-23 * T4 +
                 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
                 2.50444497e-12 * T3 + 2.45667382e-16 * T4 +
                 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +3.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
                 5.23676387e-11 * T3 - 4.33435588e-15 * T4 -
                 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +3.09288767e+00 + 2.74214858e-04 * T + 4.21684093e-08 * T2 -
                 2.19865389e-11 * T3 + 2.34824752e-15 * T4 +
                 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +3.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
                 2.42604967e-11 * T3 + 3.36401984e-15 * T4 -
                 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +4.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
                 2.85615925e-11 * T3 - 2.15817070e-15 * T4 +
                 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
                 9.27964965e-11 * T3 - 5.75816610e-15 * T4 -
                 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +2.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
                 1.48921161e-10 * T3 - 9.34308788e-15 * T4 +
                 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = +7.48514950e-02 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
                 3.05731338e-10 * T3 - 2.03630460e-14 * T4 -
                 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +2.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
                  5.75132520e-11 * T3 - 4.07295432e-15 * T4 -
                  1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +3.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
                  1.30872547e-10 * T3 - 9.44168328e-15 * T4 -
                  4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
                  2.51603030e-10 * T3 - 1.76771128e-14 * T4 -
                  1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
                  1.16853043e-10 * T3 - 7.22470426e-15 * T4 +
                  2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
                  3.68057308e-10 * T3 - 2.51412122e-14 * T4 +
                  4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
                  5.53530003e-10 * T3 - 3.80005780e-14 * T4 -
                  1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
                  7.15651300e-11 * T3 - 3.88156640e-15 * T4 +
                  1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
                  2.30836470e-10 * T3 - 1.58967640e-14 * T4 -
                  7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 5.86152950e-03 * T - 1.40877123e-06 * T2 +
                  1.70931128e-10 * T3 - 8.19697260e-15 * T4 -
                  2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
                  2.77020025e-10 * T3 - 1.80727774e-14 * T4 +
                  1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
                  1.80300550e-10 * T3 - 7.53240800e-15 * T4 -
                  9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +2.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
                  2.52425950e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +3.48981665e+00 + 1.61917771e-04 * T - 5.62996883e-07 * T2 +
                 7.90543317e-10 * T3 - 2.81218134e-13 * T4 +
                 7.07972934e+04 * invT;
    // species 1: CH2
    species[1] = +3.76267867e+00 + 4.84436072e-04 * T + 9.31632803e-07 * T2 -
                 9.62727883e-10 * T3 + 3.37483438e-13 * T4 +
                 4.60040401e+04 * invT;
    // species 2: CH2*
    species[2] = +4.19860411e+00 - 1.18330710e-03 * T + 2.74432073e-06 * T2 -
                 1.67203995e-09 * T3 + 3.88629474e-13 * T4 +
                 5.04968163e+04 * invT;
    // species 3: HCO
    species[3] = +4.22118584e+00 - 1.62196266e-03 * T + 4.59331487e-06 * T2 -
                 3.32860233e-09 * T3 + 8.67537730e-13 * T4 +
                 3.83956496e+03 * invT;
    // species 4: CH3O
    species[4] = +2.10620400e+00 + 3.60829750e-03 * T + 1.77949067e-06 * T2 -
                 1.84440900e-09 * T3 + 4.15122000e-13 * T4 +
                 9.78601100e+02 * invT;
    // species 5: H2CC
    species[5] = +3.28154830e+00 + 3.48823955e-03 * T - 7.95174800e-07 * T2 -
                 3.02610800e-10 * T3 + 1.96379090e-13 * T4 +
                 4.86217940e+04 * invT;
    // species 6: C2H3
    species[6] = +3.21246645e+00 + 7.57395810e-04 * T + 8.64031373e-06 * T2 -
                 8.94144617e-09 * T3 + 2.94301746e-12 * T4 +
                 3.48598468e+04 * invT;
    // species 7: C2H5
    species[7] = +4.30646568e+00 - 2.09329446e-03 * T + 1.65714269e-05 * T2 -
                 1.49781651e-08 * T3 + 4.61018008e-12 * T4 +
                 1.28416265e+04 * invT;
    // species 8: CH2CHO
    species[8] = +3.40906240e+00 + 5.36928700e-03 * T + 6.30497500e-07 * T2 +
                 1.78964578e-09 * T3 + 5.73477020e-13 * T4 +
                 1.52147660e+03 * invT;
    // species 9: nC3H7
    species[9] = +1.04911730e+00 + 1.30044865e-02 * T + 7.84750533e-07 * T2 -
                 4.89878300e-09 * T3 + 1.87440414e-12 * T4 +
                 1.03123460e+04 * invT;
  } else {
    // species 0: CH
    species[0] = +2.87846473e+00 + 4.85456840e-04 * T + 4.81485517e-08 * T2 -
                 3.26719623e-11 * T3 + 3.52158766e-15 * T4 +
                 7.10124364e+04 * invT;
    // species 1: CH2
    species[1] = +2.87410113e+00 + 1.82819646e-03 * T - 4.69648657e-07 * T2 +
                 6.50448872e-11 * T3 - 3.75455134e-15 * T4 +
                 4.62636040e+04 * invT;
    // species 2: CH2*
    species[2] = +2.29203842e+00 + 2.32794318e-03 * T - 6.70639823e-07 * T2 +
                 1.04476500e-10 * T3 - 6.79432730e-15 * T4 +
                 5.09259997e+04 * invT;
    // species 3: HCO
    species[3] = +2.77217438e+00 + 2.47847763e-03 * T - 8.28152043e-07 * T2 +
                 1.47290445e-10 * T3 - 1.06701742e-14 * T4 +
                 4.01191815e+03 * invT;
    // species 4: CH3O
    species[4] = +3.77079900e+00 + 3.93574850e-03 * T - 8.85461333e-07 * T2 +
                 9.86107750e-11 * T3 - 4.22523200e-15 * T4 +
                 1.27832520e+02 * invT;
    // species 5: H2CC
    species[5] = +4.27803400e+00 + 2.37814020e-03 * T - 5.43366967e-07 * T2 +
                 6.36570150e-11 * T3 - 2.97727580e-15 * T4 +
                 4.83166880e+04 * invT;
    // species 6: C2H3
    species[6] = +3.01672400e+00 + 5.16511460e-03 * T - 1.56027450e-06 * T2 +
                 2.54408220e-10 * T3 - 1.72521408e-14 * T4 +
                 3.46128739e+04 * invT;
    // species 7: C2H5
    species[7] = +1.95465642e+00 + 8.69863610e-03 * T - 2.66068889e-06 * T2 +
                 4.38044223e-10 * T3 - 2.99283152e-14 * T4 +
                 1.28575200e+04 * invT;
    // species 8: CH2CHO
    species[8] = +5.97566990e+00 + 4.06529570e-03 * T - 9.14541500e-07 * T2 +
                 1.01757603e-10 * T3 - 4.35203420e-15 * T4 +
                 4.90321780e+02 * invT;
    // species 9: nC3H7
    species[9] = +7.70974790e+00 + 8.01574250e-03 * T - 1.75734127e-06 * T2 +
                 1.89720880e-10 * T3 - 7.77254380e-15 * T4 +
                 7.97622360e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 * logT + 7.98052075e-03 * T -
                 9.73907550e-06 * T2 + 6.71906980e-09 * T3 -
                 1.84402940e-12 * T4 + 6.83010238e-01;
    // species 1: H
    species[1] = +2.50000000e+00 * logT + 7.05332819e-13 * T -
                 9.97959820e-16 * T2 + 7.66938773e-19 * T3 -
                 2.31933083e-22 * T4 - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * logT - 3.27931884e-03 * T +
                 3.32153198e-06 * T2 - 2.04268875e-09 * T3 +
                 5.28164927e-13 * T4 + 2.05193346e+00;
    // species 3: O2
    species[3] = +3.78245636e+00 * logT - 2.99673416e-03 * T +
                 4.92365101e-06 * T2 - 3.22709836e-09 * T3 +
                 8.10932092e-13 * T4 + 3.65767573e+00;
    // species 4: OH
    species[4] = +3.99201543e+00 * logT - 2.40131752e-03 * T +
                 2.30896920e-06 * T2 - 1.29371111e-09 * T3 +
                 3.41028675e-13 * T4 - 1.03925458e-01;
    // species 5: H2O
    species[5] = +4.19864056e+00 * logT - 2.03643410e-03 * T +
                 3.26020105e-06 * T2 - 1.82932354e-09 * T3 +
                 4.42994543e-13 * T4 - 8.49032208e-01;
    // species 6: HO2
    species[6] = +4.30179801e+00 * logT - 4.74912051e-03 * T +
                 1.05791445e-05 * T2 - 8.09212980e-09 * T3 +
                 2.32306281e-12 * T4 + 3.71666245e+00;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * logT - 5.42822417e-04 * T +
                 8.36678505e-06 * T2 - 7.19236043e-09 * T3 +
                 2.15613591e-12 * T4 + 3.43505074e+00;
    // species 8: CH3
    species[8] = +3.67359040e+00 * logT + 2.01095175e-03 * T +
                 2.86510928e-06 * T2 - 2.29039142e-09 * T3 +
                 6.35964335e-13 * T4 + 1.60456433e+00;
    // species 9: CH4
    species[9] = +5.14987613e+00 * logT - 1.36709788e-02 * T +
                 2.45900299e-05 * T2 - 1.61581009e-08 * T3 +
                 4.16734890e-12 * T4 - 4.64130376e+00;
    // species 10: CO
    species[10] = +3.57953347e+00 * logT - 6.10353680e-04 * T +
                  5.08407165e-07 * T2 + 3.02335295e-10 * T3 -
                  2.26106125e-13 * T4 + 3.50840928e+00;
    // species 11: CO2
    species[11] = +2.35677352e+00 * logT + 8.98459677e-03 * T -
                  3.56178134e-06 * T2 + 8.19730073e-10 * T3 -
                  3.59248870e-14 * T4 + 9.90105222e+00;
    // species 12: CH2O
    species[12] = +4.79372315e+00 * logT - 9.90833369e-03 * T +
                  1.86610004e-05 * T2 - 1.26428420e-08 * T3 +
                  3.29431630e-12 * T4 + 6.02812900e-01;
    // species 13: C2H2
    species[13] = +8.08681094e-01 * logT + 2.33615629e-02 * T -
                  1.77585907e-05 * T2 + 9.33841457e-09 * T3 -
                  2.12518243e-12 * T4 + 1.39397051e+01;
    // species 14: C2H4
    species[14] = +3.95920148e+00 * logT - 7.57052247e-03 * T +
                  2.85495146e-05 * T2 - 2.30529584e-08 * T3 +
                  6.74710933e-12 * T4 + 4.09733096e+00;
    // species 15: C2H6
    species[15] = +4.29142492e+00 * logT - 5.50154270e-03 * T +
                  2.99719144e-05 * T2 - 2.36155428e-08 * T3 +
                  6.71714427e-12 * T4 + 2.66682316e+00;
    // species 16: HCCO
    species[16] = +2.25172140e+00 * logT + 1.76550210e-02 * T -
                  1.18645505e-05 * T2 + 5.75858633e-09 * T3 -
                  1.26662028e-12 * T4 + 1.24904170e+01;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 * logT + 1.81188721e-02 * T -
                  8.69737370e-06 * T2 + 3.11465856e-09 * T3 -
                  5.03644037e-13 * T4 + 1.22156480e+01;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 * logT - 3.19328580e-03 * T +
                  2.37674605e-05 * T2 - 1.91528703e-08 * T3 +
                  5.48277800e-12 * T4 + 4.10301590e+00;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 * logT + 1.98138210e-02 * T +
                  6.24853000e-06 * T2 - 1.11185183e-08 * T3 +
                  3.96164275e-12 * T4 + 1.71732140e+01;
    // species 20: C3H6
    species[20] = +1.49330700e+00 * logT + 2.09251800e-02 * T +
                  2.24339700e-06 * T2 - 5.56304000e-09 * T3 +
                  1.78953650e-12 * T4 + 1.61453400e+01;
    // species 21: N2
    species[21] = +3.29867700e+00 * logT + 1.40824040e-03 * T -
                  1.98161100e-06 * T2 + 1.88050500e-09 * T3 -
                  6.11213500e-13 * T4 + 3.95037200e+00;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 * logT - 4.94024731e-05 * T +
                 2.49728389e-07 * T2 - 5.98554647e-11 * T3 +
                 5.00638440e-15 * T4 - 3.20502331e+00;
    // species 1: H
    species[1] = +2.50000001e+00 * logT - 2.30842973e-11 * T +
                 8.07809740e-15 * T2 - 1.57838412e-18 * T3 +
                 1.24549339e-22 * T4 - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * logT - 8.59741137e-05 * T +
                 2.09742295e-08 * T2 - 3.33925997e-12 * T3 +
                 3.07084227e-16 * T4 + 4.78433864e+00;
    // species 3: O2
    species[3] = +3.28253784e+00 * logT + 1.48308754e-03 * T -
                 3.78983334e-07 * T2 + 6.98235183e-11 * T3 -
                 5.41794485e-15 * T4 + 5.45323129e+00;
    // species 4: OH
    species[4] = +3.09288767e+00 * logT + 5.48429716e-04 * T +
                 6.32526140e-08 * T2 - 2.93153852e-11 * T3 +
                 2.93530940e-15 * T4 + 4.47669610e+00;
    // species 5: H2O
    species[5] = +3.03399249e+00 * logT + 2.17691804e-03 * T -
                 8.20362590e-08 * T2 - 3.23473290e-11 * T3 +
                 4.20502480e-15 * T4 + 4.96677010e+00;
    // species 6: HO2
    species[6] = +4.01721090e+00 * logT + 2.23982013e-03 * T -
                 3.16829075e-07 * T2 + 3.80821233e-11 * T3 -
                 2.69771337e-15 * T4 + 3.78510215e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * logT + 4.90831694e-03 * T -
                 9.50696125e-07 * T2 + 1.23728662e-10 * T3 -
                 7.19770763e-15 * T4 + 2.91615662e+00;
    // species 8: CH3
    species[8] = +2.28571772e+00 * logT + 7.23990037e-03 * T -
                 1.49357174e-06 * T2 + 1.98561548e-10 * T3 -
                 1.16788599e-14 * T4 + 8.48007179e+00;
    // species 9: CH4
    species[9] = +7.48514950e-02 * logT + 1.33909467e-02 * T -
                 2.86642905e-06 * T2 + 4.07641783e-10 * T3 -
                 2.54538075e-14 * T4 + 1.84373180e+01;
    // species 10: CO
    species[10] = +2.71518561e+00 * logT + 2.06252743e-03 * T -
                  4.99412886e-07 * T2 + 7.66843360e-11 * T3 -
                  5.09119290e-15 * T4 + 7.81868772e+00;
    // species 11: CO2
    species[11] = +3.85746029e+00 * logT + 4.41437026e-03 * T -
                  1.10740702e-06 * T2 + 1.74496729e-10 * T3 -
                  1.18021041e-14 * T4 + 2.27163806e+00;
    // species 12: CH2O
    species[12] = +1.76069008e+00 * logT + 9.20000082e-03 * T -
                  2.21129406e-06 * T2 + 3.35470707e-10 * T3 -
                  2.20963910e-14 * T4 + 1.36563230e+01;
    // species 13: C2H2
    species[13] = +4.14756964e+00 * logT + 5.96166664e-03 * T -
                  1.18647426e-06 * T2 + 1.55804057e-10 * T3 -
                  9.03088033e-15 * T4 - 1.23028121e+00;
    // species 14: C2H4
    species[14] = +2.03611116e+00 * logT + 1.46454151e-02 * T -
                  3.35538958e-06 * T2 + 4.90743077e-10 * T3 -
                  3.14265152e-14 * T4 + 1.03053693e+01;
    // species 15: C2H6
    species[15] = +1.07188150e+00 * logT + 2.16852677e-02 * T -
                  5.01280335e-06 * T2 + 7.38040003e-10 * T3 -
                  4.75007225e-14 * T4 + 1.51156107e+01;
    // species 16: HCCO
    species[16] = +5.62820580e+00 * logT + 4.08534010e-03 * T -
                  7.96727350e-07 * T2 + 9.54201733e-11 * T3 -
                  4.85195800e-15 * T4 - 3.93025950e+00;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 * logT + 9.00359745e-03 * T -
                  2.08469817e-06 * T2 + 3.07781961e-10 * T3 -
                  1.98709550e-14 * T4 + 6.32247205e-01;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 * logT + 1.17230590e-02 * T -
                  2.11315685e-06 * T2 + 2.27908170e-10 * T3 -
                  1.02462158e-14 * T4 - 3.48079170e+00;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 * logT + 1.43247310e-02 * T -
                  2.83908160e-06 * T2 + 3.69360033e-10 * T3 -
                  2.25909717e-14 * T4 - 1.12430500e+01;
    // species 20: C3H6
    species[20] = +6.73225700e+00 * logT + 1.49083400e-02 * T -
                  2.47494950e-06 * T2 + 2.40400733e-10 * T3 -
                  9.41551000e-15 * T4 - 1.33133500e+01;
    // species 21: N2
    species[21] = +2.92664000e+00 * logT + 1.48797680e-03 * T -
                  2.84238000e-07 * T2 + 3.36567933e-11 * T3 -
                  1.68833775e-15 * T4 + 5.98052800e+00;
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +7.98052075e-03 - 3.89563020e-05 * T + 6.04716282e-08 * T2 -
                 2.95044704e-11 * T3;
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * T + 6.90244896e-18 * T2 -
                 3.71092933e-21 * T3;
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * T - 1.83841987e-08 * T2 +
                 8.45063884e-12 * T3;
    // species 3: O2
    species[3] = -2.99673416e-03 + 1.96946040e-05 * T - 2.90438853e-08 * T2 +
                 1.29749135e-11 * T3;
    // species 4: OH
    species[4] = -2.40131752e-03 + 9.23587682e-06 * T - 1.16434000e-08 * T2 +
                 5.45645880e-12 * T3;
    // species 5: H2O
    species[5] = -2.03643410e-03 + 1.30408042e-05 * T - 1.64639119e-08 * T2 +
                 7.08791268e-12 * T3;
    // species 6: HO2
    species[6] = -4.74912051e-03 + 4.23165782e-05 * T - 7.28291682e-08 * T2 +
                 3.71690050e-11 * T3;
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * T - 6.47312439e-08 * T2 +
                 3.44981745e-11 * T3;
    // species 8: CH3
    species[8] = +2.01095175e-03 + 1.14604371e-05 * T - 2.06135228e-08 * T2 +
                 1.01754294e-11 * T3;
    // species 9: CH4
    species[9] = -1.36709788e-02 + 9.83601198e-05 * T - 1.45422908e-07 * T2 +
                 6.66775824e-11 * T3;
    // species 10: CO
    species[10] = -6.10353680e-04 + 2.03362866e-06 * T + 2.72101765e-09 * T2 -
                  3.61769800e-12 * T3;
    // species 11: CO2
    species[11] = +8.98459677e-03 - 1.42471254e-05 * T + 7.37757066e-09 * T2 -
                  5.74798192e-13 * T3;
    // species 12: CH2O
    species[12] = -9.90833369e-03 + 7.46440016e-05 * T - 1.13785578e-07 * T2 +
                  5.27090608e-11 * T3;
    // species 13: C2H2
    species[13] = +2.33615629e-02 - 7.10343630e-05 * T + 8.40457311e-08 * T2 -
                  3.40029190e-11 * T3;
    // species 14: C2H4
    species[14] = -7.57052247e-03 + 1.14198058e-04 * T - 2.07476626e-07 * T2 +
                  1.07953749e-10 * T3;
    // species 15: C2H6
    species[15] = -5.50154270e-03 + 1.19887658e-04 * T - 2.12539886e-07 * T2 +
                  1.07474308e-10 * T3;
    // species 16: HCCO
    species[16] = +1.76550210e-02 - 4.74582020e-05 * T + 5.18272770e-08 * T2 -
                  2.02659244e-11 * T3;
    // species 17: CH2CO
    species[17] = +1.81188721e-02 - 3.47894948e-05 * T + 2.80319270e-08 * T2 -
                  8.05830460e-12 * T3;
    // species 18: CH3CHO
    species[18] = -3.19328580e-03 + 9.50698420e-05 * T - 1.72375833e-07 * T2 +
                  8.77244480e-11 * T3;
    // species 19: aC3H5
    species[19] = +1.98138210e-02 + 2.49941200e-05 * T - 1.00066665e-07 * T2 +
                  6.33862840e-11 * T3;
    // species 20: C3H6
    species[20] = +2.09251800e-02 + 8.97358800e-06 * T - 5.00673600e-08 * T2 +
                  2.86325840e-11 * T3;
    // species 21: N2
    species[21] = +1.40824040e-03 - 7.92644400e-06 * T + 1.69245450e-08 * T2 -
                  9.77941600e-12 * T3;
  } else {
    // species 0: H2
    species[0] = -4.94024731e-05 + 9.98913556e-07 * T - 5.38699182e-10 * T2 +
                 8.01021504e-14 * T3;
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * T - 1.42054571e-17 * T2 +
                 1.99278943e-21 * T3;
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * T - 3.00533397e-11 * T2 +
                 4.91334764e-15 * T3;
    // species 3: O2
    species[3] = +1.48308754e-03 - 1.51593334e-06 * T + 6.28411665e-10 * T2 -
                 8.66871176e-14 * T3;
    // species 4: OH
    species[4] = +5.48429716e-04 + 2.53010456e-07 * T - 2.63838467e-10 * T2 +
                 4.69649504e-14 * T3;
    // species 5: H2O
    species[5] = +2.17691804e-03 - 3.28145036e-07 * T - 2.91125961e-10 * T2 +
                 6.72803968e-14 * T3;
    // species 6: HO2
    species[6] = +2.23982013e-03 - 1.26731630e-06 * T + 3.42739110e-10 * T2 -
                 4.31634140e-14 * T3;
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * T + 1.11355796e-09 * T2 -
                 1.15163322e-13 * T3;
    // species 8: CH3
    species[8] = +7.23990037e-03 - 5.97428696e-06 * T + 1.78705393e-09 * T2 -
                 1.86861758e-13 * T3;
    // species 9: CH4
    species[9] = +1.33909467e-02 - 1.14657162e-05 * T + 3.66877605e-09 * T2 -
                 4.07260920e-13 * T3;
    // species 10: CO
    species[10] = +2.06252743e-03 - 1.99765154e-06 * T + 6.90159024e-10 * T2 -
                  8.14590864e-14 * T3;
    // species 11: CO2
    species[11] = +4.41437026e-03 - 4.42962808e-06 * T + 1.57047056e-09 * T2 -
                  1.88833666e-13 * T3;
    // species 12: CH2O
    species[12] = +9.20000082e-03 - 8.84517626e-06 * T + 3.01923636e-09 * T2 -
                  3.53542256e-13 * T3;
    // species 13: C2H2
    species[13] = +5.96166664e-03 - 4.74589704e-06 * T + 1.40223651e-09 * T2 -
                  1.44494085e-13 * T3;
    // species 14: C2H4
    species[14] = +1.46454151e-02 - 1.34215583e-05 * T + 4.41668769e-09 * T2 -
                  5.02824244e-13 * T3;
    // species 15: C2H6
    species[15] = +2.16852677e-02 - 2.00512134e-05 * T + 6.64236003e-09 * T2 -
                  7.60011560e-13 * T3;
    // species 16: HCCO
    species[16] = +4.08534010e-03 - 3.18690940e-06 * T + 8.58781560e-10 * T2 -
                  7.76313280e-14 * T3;
    // species 17: CH2CO
    species[17] = +9.00359745e-03 - 8.33879270e-06 * T + 2.77003765e-09 * T2 -
                  3.17935280e-13 * T3;
    // species 18: CH3CHO
    species[18] = +1.17230590e-02 - 8.45262740e-06 * T + 2.05117353e-09 * T2 -
                  1.63939452e-13 * T3;
    // species 19: aC3H5
    species[19] = +1.43247310e-02 - 1.13563264e-05 * T + 3.32424030e-09 * T2 -
                  3.61455548e-13 * T3;
    // species 20: C3H6
    species[20] = +1.49083400e-02 - 9.89979800e-06 * T + 2.16360660e-09 * T2 -
                  1.50648160e-13 * T3;
    // species 21: N2
    species[21] = +1.48797680e-03 - 1.13695200e-06 * T + 3.02911140e-10 * T2 -
                  2.70134040e-14 * T3;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real cpor[22]; //  temporary storage
  cp_R(cpor, T);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;

  // compute Cp/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    result += y[0] *
              (+2.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
               2.01572094e-08 * T3 - 7.37611761e-12 * T4) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
               2.30081632e-18 * T3 - 9.27732332e-22 * T4) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+3.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
               6.12806624e-09 * T3 + 2.11265971e-12 * T4) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
               9.68129509e-09 * T3 + 3.24372837e-12 * T4) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.99201543e+00 - 2.40131752e-03 * T + 4.61793841e-06 * T2 -
               3.88113333e-09 * T3 + 1.36411470e-12 * T4) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+4.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
               5.48797062e-09 * T3 + 1.77197817e-12 * T4) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
               2.42763894e-08 * T3 + 9.29225124e-12 * T4) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
               2.15770813e-08 * T3 + 8.62454363e-12 * T4) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+3.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
               6.87117425e-09 * T3 + 2.54385734e-12 * T4) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+5.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
               4.84743026e-08 * T3 + 1.66693956e-11 * T4) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+3.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
               9.07005884e-10 * T3 - 9.04424499e-13 * T4) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
               2.45919022e-09 * T3 - 1.43699548e-13 * T4) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+4.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
               3.79285261e-08 * T3 + 1.31772652e-11 * T4) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+8.08681094e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
               2.80152437e-08 * T3 - 8.50072974e-12 * T4) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+3.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
               6.91588753e-08 * T3 + 2.69884373e-11 * T4) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+4.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
               7.08466285e-08 * T3 + 2.68685771e-11 * T4) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+2.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
               1.72757590e-08 * T3 - 5.06648110e-12 * T4) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+2.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
               9.34397568e-09 * T3 - 2.01457615e-12 * T4) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.72945950e+00 - 3.19328580e-03 * T + 4.75349210e-05 * T2 -
               5.74586110e-08 * T3 + 2.19311120e-11 * T4) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+1.36318350e+00 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
               3.33555550e-08 * T3 + 1.58465710e-11 * T4) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+1.49330700e+00 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
               1.66891200e-08 * T3 + 7.15814600e-12 * T4) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+3.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485400e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+3.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
               1.79566394e-10 * T3 + 2.00255376e-14 * T4) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
               4.73515235e-18 * T3 + 4.98197357e-22 * T4) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
               1.00177799e-11 * T3 + 1.22833691e-15 * T4) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
               2.09470555e-10 * T3 - 2.16717794e-14 * T4) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.09288767e+00 + 5.48429716e-04 * T + 1.26505228e-07 * T2 -
               8.79461556e-11 * T3 + 1.17412376e-14 * T4) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
               9.70419870e-11 * T3 + 1.68200992e-14 * T4) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
               1.14246370e-10 * T3 - 1.07908535e-14 * T4) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
               3.71185986e-10 * T3 - 2.87908305e-14 * T4) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
               5.95684644e-10 * T3 - 4.67154394e-14 * T4) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+7.48514950e-02 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
               1.22292535e-09 * T3 - 1.01815230e-13 * T4) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
               2.30053008e-10 * T3 - 2.03647716e-14 * T4) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+3.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
               5.23490188e-10 * T3 - 4.72084164e-14 * T4) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+1.76069008e+00 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
               1.00641212e-09 * T3 - 8.83855640e-14 * T4) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+4.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
               4.67412171e-10 * T3 - 3.61235213e-14 * T4) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
               1.47222923e-09 * T3 - 1.25706061e-13 * T4) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+1.07188150e+00 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
               2.21412001e-09 * T3 - 1.90002890e-13 * T4) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+5.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
               2.86260520e-10 * T3 - 1.94078320e-14 * T4) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+4.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
               9.23345882e-10 * T3 - 7.94838201e-14 * T4) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+5.40411080e+00 + 1.17230590e-02 * T - 4.22631370e-06 * T2 +
               6.83724510e-10 * T3 - 4.09848630e-14 * T4) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+6.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
               1.10808010e-09 * T3 - 9.03638870e-14 * T4) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+6.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
               7.21202200e-10 * T3 - 3.76620400e-14 * T4) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
               1.00970380e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real cvor[22]; //  temporary storage
  cv_R(cvor, T);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  // compute Cv/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    result += y[0] *
              (+1.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
               2.01572094e-08 * T3 - 7.37611761e-12 * T4) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
               2.30081632e-18 * T3 - 9.27732332e-22 * T4) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
               6.12806624e-09 * T3 + 2.11265971e-12 * T4) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
               9.68129509e-09 * T3 + 3.24372837e-12 * T4) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.99201543e+00 - 2.40131752e-03 * T + 4.61793841e-06 * T2 -
               3.88113333e-09 * T3 + 1.36411470e-12 * T4) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
               5.48797062e-09 * T3 + 1.77197817e-12 * T4) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
               2.42763894e-08 * T3 + 9.29225124e-12 * T4) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
               2.15770813e-08 * T3 + 8.62454363e-12 * T4) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
               6.87117425e-09 * T3 + 2.54385734e-12 * T4) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+4.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
               4.84743026e-08 * T3 + 1.66693956e-11 * T4) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
               9.07005884e-10 * T3 - 9.04424499e-13 * T4) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+1.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
               2.45919022e-09 * T3 - 1.43699548e-13 * T4) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+3.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
               3.79285261e-08 * T3 + 1.31772652e-11 * T4) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (-1.91318906e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
               2.80152437e-08 * T3 - 8.50072974e-12 * T4) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
               6.91588753e-08 * T3 + 2.69884373e-11 * T4) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+3.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
               7.08466285e-08 * T3 + 2.68685771e-11 * T4) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+1.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
               1.72757590e-08 * T3 - 5.06648110e-12 * T4) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+1.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
               9.34397568e-09 * T3 - 2.01457615e-12 * T4) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+3.72945950e+00 - 3.19328580e-03 * T + 4.75349210e-05 * T2 -
               5.74586110e-08 * T3 + 2.19311120e-11 * T4) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+3.63183500e-01 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
               3.33555550e-08 * T3 + 1.58465710e-11 * T4) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+4.93307000e-01 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
               1.66891200e-08 * T3 + 7.15814600e-12 * T4) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485400e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+2.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
               1.79566394e-10 * T3 + 2.00255376e-14 * T4) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
               4.73515235e-18 * T3 + 4.98197357e-22 * T4) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+1.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
               1.00177799e-11 * T3 + 1.22833691e-15 * T4) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
               2.09470555e-10 * T3 - 2.16717794e-14 * T4) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.09288767e+00 + 5.48429716e-04 * T + 1.26505228e-07 * T2 -
               8.79461556e-11 * T3 + 1.17412376e-14 * T4) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+2.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
               9.70419870e-11 * T3 + 1.68200992e-14 * T4) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
               1.14246370e-10 * T3 - 1.07908535e-14 * T4) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
               3.71185986e-10 * T3 - 2.87908305e-14 * T4) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+1.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
               5.95684644e-10 * T3 - 4.67154394e-14 * T4) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (-9.25148505e-01 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
               1.22292535e-09 * T3 - 1.01815230e-13 * T4) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+1.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
               2.30053008e-10 * T3 - 2.03647716e-14 * T4) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
               5.23490188e-10 * T3 - 4.72084164e-14 * T4) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+7.60690080e-01 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
               1.00641212e-09 * T3 - 8.83855640e-14 * T4) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+3.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
               4.67412171e-10 * T3 - 3.61235213e-14 * T4) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+1.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
               1.47222923e-09 * T3 - 1.25706061e-13 * T4) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+7.18815000e-02 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
               2.21412001e-09 * T3 - 1.90002890e-13 * T4) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+4.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
               2.86260520e-10 * T3 - 1.94078320e-14 * T4) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+3.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
               9.23345882e-10 * T3 - 7.94838201e-14 * T4) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.40411080e+00 + 1.17230590e-02 * T - 4.22631370e-06 * T2 +
               6.83724510e-10 * T3 - 4.09848630e-14 * T4) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+5.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
               1.10808010e-09 * T3 - 9.03638870e-14 * T4) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+5.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
               7.21202200e-10 * T3 - 3.76620400e-14 * T4) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+1.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
               1.00970380e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real hml[22];                       //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+2.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
       5.03930235e-09 * T3 - 1.47522352e-12 * T4 - 9.17935173e+02 * invT) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
       5.75204080e-19 * T3 - 1.85546466e-22 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+3.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
       1.53201656e-09 * T3 + 4.22531942e-13 * T4 + 2.91222592e+04 * invT) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
       2.42032377e-09 * T3 + 6.48745674e-13 * T4 - 1.06394356e+03 * invT) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.99201543e+00 - 1.20065876e-03 * T + 1.53931280e-06 * T2 -
       9.70283332e-10 * T3 + 2.72822940e-13 * T4 + 3.61508056e+03 * invT) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+4.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
       1.37199266e-09 * T3 + 3.54395634e-13 * T4 - 3.02937267e+04 * invT) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
       6.06909735e-09 * T3 + 1.85845025e-12 * T4 + 2.94808040e+02 * invT) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
       5.39427032e-09 * T3 + 1.72490873e-12 * T4 - 1.77025821e+04 * invT) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+3.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
       1.71779356e-09 * T3 + 5.08771468e-13 * T4 + 1.64449988e+04 * invT) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+5.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
       1.21185757e-08 * T3 + 3.33387912e-12 * T4 - 1.02466476e+04 * invT) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+3.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
       2.26751471e-10 * T3 - 1.80884900e-13 * T4 - 1.43440860e+04 * invT) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
       6.14797555e-10 * T3 - 2.87399096e-14 * T4 - 4.83719697e+04 * invT) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+4.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
       9.48213152e-09 * T3 + 2.63545304e-12 * T4 - 1.43089567e+04 * invT) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+8.08681094e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
       7.00381092e-09 * T3 - 1.70014595e-12 * T4 + 2.64289807e+04 * invT) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+3.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
       1.72897188e-08 * T3 + 5.39768746e-12 * T4 + 5.08977593e+03 * invT) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+4.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
       1.77116571e-08 * T3 + 5.37371542e-12 * T4 - 1.15222055e+04 * invT) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+2.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
       4.31893975e-09 * T3 - 1.01329622e-12 * T4 + 2.00594490e+04 * invT) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+2.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
       2.33599392e-09 * T3 - 4.02915230e-13 * T4 - 7.04291804e+03 * invT) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.72945950e+00 - 1.59664290e-03 * T + 1.58449737e-05 * T2 -
       1.43646527e-08 * T3 + 4.38622240e-12 * T4 - 2.15728780e+04 * invT) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+1.36318350e+00 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
       8.33888875e-09 * T3 + 3.16931420e-12 * T4 + 1.92456290e+04 * invT) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+1.49330700e+00 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
       4.17228000e-09 * T3 + 1.43162920e-12 * T4 + 1.07482600e+03 * invT) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+3.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88970800e-13 * T4 - 1.02089990e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+3.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
       4.48915985e-11 * T3 + 4.00510752e-15 * T4 - 9.50158922e+02 * invT) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
       1.18378809e-18 * T3 + 9.96394714e-23 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
       2.50444497e-12 * T3 + 2.45667382e-16 * T4 + 2.92175791e+04 * invT) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
       5.23676387e-11 * T3 - 4.33435588e-15 * T4 - 1.08845772e+03 * invT) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.09288767e+00 + 2.74214858e-04 * T + 4.21684093e-08 * T2 -
       2.19865389e-11 * T3 + 2.34824752e-15 * T4 + 3.85865700e+03 * invT) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
       2.42604967e-11 * T3 + 3.36401984e-15 * T4 - 3.00042971e+04 * invT) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
       2.85615925e-11 * T3 - 2.15817070e-15 * T4 + 1.11856713e+02 * invT) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
       9.27964965e-11 * T3 - 5.75816610e-15 * T4 - 1.78617877e+04 * invT) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
       1.48921161e-10 * T3 - 9.34308788e-15 * T4 + 1.67755843e+04 * invT) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+7.48514950e-02 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
       3.05731338e-10 * T3 - 2.03630460e-14 * T4 - 9.46834459e+03 * invT) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
       5.75132520e-11 * T3 - 4.07295432e-15 * T4 - 1.41518724e+04 * invT) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+3.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
       1.30872547e-10 * T3 - 9.44168328e-15 * T4 - 4.87591660e+04 * invT) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+1.76069008e+00 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
       2.51603030e-10 * T3 - 1.76771128e-14 * T4 - 1.39958323e+04 * invT) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+4.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
       1.16853043e-10 * T3 - 7.22470426e-15 * T4 + 2.59359992e+04 * invT) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
       3.68057308e-10 * T3 - 2.51412122e-14 * T4 + 4.93988614e+03 * invT) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+1.07188150e+00 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
       5.53530003e-10 * T3 - 3.80005780e-14 * T4 - 1.14263932e+04 * invT) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+5.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
       7.15651300e-11 * T3 - 3.88156640e-15 * T4 + 1.93272150e+04 * invT) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+4.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
       2.30836470e-10 * T3 - 1.58967640e-14 * T4 - 7.55105311e+03 * invT) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+5.40411080e+00 + 5.86152950e-03 * T - 1.40877123e-06 * T2 +
       1.70931128e-10 * T3 - 8.19697260e-15 * T4 - 2.25931220e+04 * invT) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+6.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
       2.77020025e-10 * T3 - 1.80727774e-14 * T4 + 1.74824490e+04 * invT) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+6.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
       1.80300550e-10 * T3 - 7.53240800e-15 * T4 - 9.23570300e+02 * invT) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
       2.52425950e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real uml[22];                       //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+1.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
       5.03930235e-09 * T3 - 1.47522352e-12 * T4 - 9.17935173e+02 * invT) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
       5.75204080e-19 * T3 - 1.85546466e-22 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
       1.53201656e-09 * T3 + 4.22531942e-13 * T4 + 2.91222592e+04 * invT) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
       2.42032377e-09 * T3 + 6.48745674e-13 * T4 - 1.06394356e+03 * invT) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.99201543e+00 - 1.20065876e-03 * T + 1.53931280e-06 * T2 -
       9.70283332e-10 * T3 + 2.72822940e-13 * T4 + 3.61508056e+03 * invT) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
       1.37199266e-09 * T3 + 3.54395634e-13 * T4 - 3.02937267e+04 * invT) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
       6.06909735e-09 * T3 + 1.85845025e-12 * T4 + 2.94808040e+02 * invT) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
       5.39427032e-09 * T3 + 1.72490873e-12 * T4 - 1.77025821e+04 * invT) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
       1.71779356e-09 * T3 + 5.08771468e-13 * T4 + 1.64449988e+04 * invT) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+4.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
       1.21185757e-08 * T3 + 3.33387912e-12 * T4 - 1.02466476e+04 * invT) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
       2.26751471e-10 * T3 - 1.80884900e-13 * T4 - 1.43440860e+04 * invT) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+1.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
       6.14797555e-10 * T3 - 2.87399096e-14 * T4 - 4.83719697e+04 * invT) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+3.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
       9.48213152e-09 * T3 + 2.63545304e-12 * T4 - 1.43089567e+04 * invT) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (-1.91318906e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
       7.00381092e-09 * T3 - 1.70014595e-12 * T4 + 2.64289807e+04 * invT) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
       1.72897188e-08 * T3 + 5.39768746e-12 * T4 + 5.08977593e+03 * invT) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+3.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
       1.77116571e-08 * T3 + 5.37371542e-12 * T4 - 1.15222055e+04 * invT) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+1.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
       4.31893975e-09 * T3 - 1.01329622e-12 * T4 + 2.00594490e+04 * invT) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+1.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
       2.33599392e-09 * T3 - 4.02915230e-13 * T4 - 7.04291804e+03 * invT) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+3.72945950e+00 - 1.59664290e-03 * T + 1.58449737e-05 * T2 -
       1.43646527e-08 * T3 + 4.38622240e-12 * T4 - 2.15728780e+04 * invT) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+3.63183500e-01 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
       8.33888875e-09 * T3 + 3.16931420e-12 * T4 + 1.92456290e+04 * invT) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+4.93307000e-01 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
       4.17228000e-09 * T3 + 1.43162920e-12 * T4 + 1.07482600e+03 * invT) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88970800e-13 * T4 - 1.02089990e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+2.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
       4.48915985e-11 * T3 + 4.00510752e-15 * T4 - 9.50158922e+02 * invT) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
       1.18378809e-18 * T3 + 9.96394714e-23 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+1.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
       2.50444497e-12 * T3 + 2.45667382e-16 * T4 + 2.92175791e+04 * invT) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
       5.23676387e-11 * T3 - 4.33435588e-15 * T4 - 1.08845772e+03 * invT) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.09288767e+00 + 2.74214858e-04 * T + 4.21684093e-08 * T2 -
       2.19865389e-11 * T3 + 2.34824752e-15 * T4 + 3.85865700e+03 * invT) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+2.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
       2.42604967e-11 * T3 + 3.36401984e-15 * T4 - 3.00042971e+04 * invT) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
       2.85615925e-11 * T3 - 2.15817070e-15 * T4 + 1.11856713e+02 * invT) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
       9.27964965e-11 * T3 - 5.75816610e-15 * T4 - 1.78617877e+04 * invT) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+1.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
       1.48921161e-10 * T3 - 9.34308788e-15 * T4 + 1.67755843e+04 * invT) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (-9.25148505e-01 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
       3.05731338e-10 * T3 - 2.03630460e-14 * T4 - 9.46834459e+03 * invT) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+1.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
       5.75132520e-11 * T3 - 4.07295432e-15 * T4 - 1.41518724e+04 * invT) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
       1.30872547e-10 * T3 - 9.44168328e-15 * T4 - 4.87591660e+04 * invT) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+7.60690080e-01 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
       2.51603030e-10 * T3 - 1.76771128e-14 * T4 - 1.39958323e+04 * invT) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+3.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
       1.16853043e-10 * T3 - 7.22470426e-15 * T4 + 2.59359992e+04 * invT) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+1.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
       3.68057308e-10 * T3 - 2.51412122e-14 * T4 + 4.93988614e+03 * invT) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+7.18815000e-02 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
       5.53530003e-10 * T3 - 3.80005780e-14 * T4 - 1.14263932e+04 * invT) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+4.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
       7.15651300e-11 * T3 - 3.88156640e-15 * T4 + 1.93272150e+04 * invT) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+3.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
       2.30836470e-10 * T3 - 1.58967640e-14 * T4 - 7.55105311e+03 * invT) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.40411080e+00 + 5.86152950e-03 * T - 1.40877123e-06 * T2 +
       1.70931128e-10 * T3 - 8.19697260e-15 * T4 - 2.25931220e+04 * invT) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+5.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
       2.77020025e-10 * T3 - 1.80727774e-14 * T4 + 1.74824490e+04 * invT) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+5.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
       1.80300550e-10 * T3 - 7.53240800e-15 * T4 - 9.23570300e+02 * invT) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+1.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
       2.52425950e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[22]; //  temporary storage
  speciesEntropy(sor, T);

  // Compute Eq 42
  for (int id = 0; id < 22; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[22]; //  temporary storage
  amrex::Real x[22];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (2.016000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (33.006000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (15.035000 * YOW);
  x[9] = y[9] / (16.043000 * YOW);
  x[10] = y[10] / (28.010000 * YOW);
  x[11] = y[11] / (44.009000 * YOW);
  x[12] = y[12] / (30.026000 * YOW);
  x[13] = y[13] / (26.038000 * YOW);
  x[14] = y[14] / (28.054000 * YOW);
  x[15] = y[15] / (30.070000 * YOW);
  x[16] = y[16] / (41.029000 * YOW);
  x[17] = y[17] / (42.037000 * YOW);
  x[18] = y[18] / (44.053000 * YOW);
  x[19] = y[19] / (41.073000 * YOW);
  x[20] = y[20] / (42.081000 * YOW);
  x[21] = y[21] / (28.014000 * YOW);
  speciesEntropy(sor, T);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 22; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 2.016000;                   // H2
  XW += x[1] * 1.008000;                   // H
  XW += x[2] * 15.999000;                  // O
  XW += x[3] * 31.998000;                  // O2
  XW += x[4] * 17.007000;                  // OH
  XW += x[5] * 18.015000;                  // H2O
  XW += x[6] * 33.006000;                  // HO2
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 15.035000;                  // CH3
  XW += x[9] * 16.043000;                  // CH4
  XW += x[10] * 28.010000;                 // CO
  XW += x[11] * 44.009000;                 // CO2
  XW += x[12] * 30.026000;                 // CH2O
  XW += x[13] * 26.038000;                 // C2H2
  XW += x[14] * 28.054000;                 // C2H4
  XW += x[15] * 30.070000;                 // C2H6
  XW += x[16] * 41.029000;                 // HCCO
  XW += x[17] * 42.037000;                 // CH2CO
  XW += x[18] * 44.053000;                 // CH3CHO
  XW += x[19] * 41.073000;                 // aC3H5
  XW += x[20] * 42.081000;                 // C3H6
  XW += x[21] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 2.016000;                     // H2
  XW += x[1] * 1.008000;                     // H
  XW += x[2] * 15.999000;                    // O
  XW += x[3] * 31.998000;                    // O2
  XW += x[4] * 17.007000;                    // OH
  XW += x[5] * 18.015000;                    // H2O
  XW += x[6] * 33.006000;                    // HO2
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 15.035000;                    // CH3
  XW += x[9] * 16.043000;                    // CH4
  XW += x[10] * 28.010000;                   // CO
  XW += x[11] * 44.009000;                   // CO2
  XW += x[12] * 30.026000;                   // CH2O
  XW += x[13] * 26.038000;                   // C2H2
  XW += x[14] * 28.054000;                   // C2H4
  XW += x[15] * 30.070000;                   // C2H6
  XW += x[16] * 41.029000;                   // HCCO
  XW += x[17] * 42.037000;                   // CH2CO
  XW += x[18] * 44.053000;                   // CH3CHO
  XW += x[19] * 41.073000;                   // aC3H5
  XW += x[20] * 42.081000;                   // C3H6
  XW += x[21] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against division by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  cp_R(cpor, T);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  speciesEnthalpy(hort, T);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  speciesEntropy(sor, T);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 22; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 22; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 22; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 2.016000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 33.006000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 15.035000 * XWinv;
  y[9] = x[9] * 16.043000 * XWinv;
  y[10] = x[10] * 28.010000 * XWinv;
  y[11] = x[11] * 44.009000 * XWinv;
  y[12] = x[12] * 30.026000 * XWinv;
  y[13] = x[13] * 26.038000 * XWinv;
  y[14] = x[14] * 28.054000 * XWinv;
  y[15] = x[15] * 30.070000 * XWinv;
  y[16] = x[16] * 41.029000 * XWinv;
  y[17] = x[17] * 42.037000 * XWinv;
  y[18] = x[18] * 44.053000 * XWinv;
  y[19] = x[19] * 41.073000 * XWinv;
  y[20] = x[20] * 42.081000 * XWinv;
  y[21] = x[21] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 22; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 2.016000;   // H2
  CW += c[1] * 1.008000;   // H
  CW += c[2] * 15.999000;  // O
  CW += c[3] * 31.998000;  // O2
  CW += c[4] * 17.007000;  // OH
  CW += c[5] * 18.015000;  // H2O
  CW += c[6] * 33.006000;  // HO2
  CW += c[7] * 34.014000;  // H2O2
  CW += c[8] * 15.035000;  // CH3
  CW += c[9] * 16.043000;  // CH4
  CW += c[10] * 28.010000; // CO
  CW += c[11] * 44.009000; // CO2
  CW += c[12] * 30.026000; // CH2O
  CW += c[13] * 26.038000; // C2H2
  CW += c[14] * 28.054000; // C2H4
  CW += c[15] * 30.070000; // C2H6
  CW += c[16] * 41.029000; // HCCO
  CW += c[17] * 42.037000; // CH2CO
  CW += c[18] * 44.053000; // CH3CHO
  CW += c[19] * 41.073000; // aC3H5
  CW += c[20] * 42.081000; // C3H6
  CW += c[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 2.016000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 33.006000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 15.035000 * CWinv;
  y[9] = c[9] * 16.043000 * CWinv;
  y[10] = c[10] * 28.010000 * CWinv;
  y[11] = c[11] * 44.009000 * CWinv;
  y[12] = c[12] * 30.026000 * CWinv;
  y[13] = c[13] * 26.038000 * CWinv;
  y[14] = c[14] * 28.054000 * CWinv;
  y[15] = c[15] * 30.070000 * CWinv;
  y[16] = c[16] * 41.029000 * CWinv;
  y[17] = c[17] * 42.037000 * CWinv;
  y[18] = c[18] * 44.053000 * CWinv;
  y[19] = c[19] * 41.073000 * CWinv;
  y[20] = c[20] * 42.081000 * CWinv;
  y[21] = c[21] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  cv_R(cvml, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  cp_R(cpml, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  speciesEntropy(sml, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  cv_R(cvms, T);
  // multiply by R/molecularweight
  cvms[0] *= 4.124237409798234e+07;  // H2
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 2.598431970171023e+06;  // O2
  cvms[4] *= 4.888847308845322e+06;  // OH
  cvms[5] *= 4.615299815794193e+06;  // H2O
  cvms[6] *= 2.519076112874398e+06;  // HO2
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 5.530071578419182e+06;  // CH3
  cvms[9] *= 5.182610869633635e+06;  // CH4
  cvms[10] *= 2.968390795484913e+06; // CO
  cvms[11] *= 1.889264154639560e+06; // CO2
  cvms[12] *= 2.769087663409458e+06; // CH2O
  cvms[13] *= 3.193203248388218e+06; // C2H2
  cvms[14] *= 2.963735160103101e+06; // C2H4
  cvms[15] *= 2.765035789209591e+06; // C2H6
  cvms[16] *= 2.026484344769124e+06; // HCCO
  cvms[17] *= 1.977891528451897e+06; // CH2CO
  cvms[18] *= 1.887377163451579e+06; // CH3CHO
  cvms[19] *= 2.024313446340233e+06; // aC3H5
  cvms[20] *= 1.975823440068734e+06; // C3H6
  cvms[21] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  cp_R(cpms, T);
  // multiply by R/molecularweight
  cpms[0] *= 4.124237409798234e+07;  // H2
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 2.598431970171023e+06;  // O2
  cpms[4] *= 4.888847308845322e+06;  // OH
  cpms[5] *= 4.615299815794193e+06;  // H2O
  cpms[6] *= 2.519076112874398e+06;  // HO2
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 5.530071578419182e+06;  // CH3
  cpms[9] *= 5.182610869633635e+06;  // CH4
  cpms[10] *= 2.968390795484913e+06; // CO
  cpms[11] *= 1.889264154639560e+06; // CO2
  cpms[12] *= 2.769087663409458e+06; // CH2O
  cpms[13] *= 3.193203248388218e+06; // C2H2
  cpms[14] *= 2.963735160103101e+06; // C2H4
  cpms[15] *= 2.765035789209591e+06; // C2H6
  cpms[16] *= 2.026484344769124e+06; // HCCO
  cpms[17] *= 1.977891528451897e+06; // CH2CO
  cpms[18] *= 1.887377163451579e+06; // CH3CHO
  cpms[19] *= 2.024313446340233e+06; // aC3H5
  cpms[20] *= 1.975823440068734e+06; // C3H6
  cpms[21] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesInternalEnergy(ums, T);

  for (int i = 0; i < 22; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesEnthalpy(hms, T);

  for (int i = 0; i < 22; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  speciesEntropy(sms, T);
  // multiply by R/molecularweight
  sms[0] *= 4.124237409798234e+07;  // H2
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 2.598431970171023e+06;  // O2
  sms[4] *= 4.888847308845322e+06;  // OH
  sms[5] *= 4.615299815794193e+06;  // H2O
  sms[6] *= 2.519076112874398e+06;  // HO2
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 5.530071578419182e+06;  // CH3
  sms[9] *= 5.182610869633635e+06;  // CH4
  sms[10] *= 2.968390795484913e+06; // CO
  sms[11] *= 1.889264154639560e+06; // CO2
  sms[12] *= 2.769087663409458e+06; // CH2O
  sms[13] *= 3.193203248388218e+06; // C2H2
  sms[14] *= 2.963735160103101e+06; // C2H4
  sms[15] *= 2.765035789209591e+06; // C2H6
  sms[16] *= 2.026484344769124e+06; // HCCO
  sms[17] *= 1.977891528451897e+06; // CH2CO
  sms[18] *= 1.887377163451579e+06; // CH3CHO
  sms[19] *= 2.024313446340233e+06; // aC3H5
  sms[20] *= 1.975823440068734e+06; // C3H6
  sms[21] *= 2.967966951578939e+06; // N2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real T,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 2: CH + CO (+M) <=> HCCO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[0] * 2.69e+16 * exp(-3.74 * logT - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-T * 0.00421940928270042) +
      0.5757 * exp(-T * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[10]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
            (sc[16]);
  }

  {
    // reaction 3: H + HCO (+M) <=> CH2O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[1] * 1350000000000 *
                             exp(-2.57 * logT - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-T * 0.003690036900369) +
      0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[1]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) *
            (sc[12]);
  }

  {
    // reaction 4: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[2] * 3.2e+15 * exp(-3.14 * logT - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-T * 0.0128205128205128) +
      0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[1]);
    qr[2] = Corr * k_f[2] * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) *
            (sc[8]);
  }

  {
    // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[3] * 2.69e+21 * exp(-5.11 * logT - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-T * 0.00363636363636364) +
      0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (sc[10]);
    qr[3] = Corr * k_f[3] * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
            (sc[17]);
  }

  {
    // reaction 6: CH2O + H (+M) <=> CH3O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[4] * 2.2e+18 * exp(-4.8 * logT - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-T * 0.0106382978723404) +
      0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[1] * sc[12]);
    qr[4] =
      Corr * k_f[4] * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) * (1.0);
  }

  {
    // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[5] * 2.2e+36 * exp(-9.588 * logT - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-T * 0.0764759865402264) +
      0.6173 * exp(-T * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[5] = Corr * k_f[5] * (sc[8]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) *
            (sc[18]);
  }

  {
    // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[6] * 2.565e+21 * exp(-3.4 * logT - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-T * 0.000185745862510913) +
      1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[6] = Corr * k_f[6] * (1.0);
    qr[6] = Corr * k_f[6] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
            (refCinv) * (sc[1] * sc[13]);
  }

  {
    // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[7] * 3.8e+29 * exp(-7.64 * logT - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
      exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[7] = Corr * k_f[7] * (sc[1] * sc[17]);
    qr[7] =
      Corr * k_f[7] * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) * (1.0);
  }

  {
    // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[8] * 1.4e+18 * exp(-3.86 * logT - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-T * 0.00481927710843374) +
      0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[8] = Corr * k_f[8] * (sc[1]);
    qr[8] = Corr * k_f[8] * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) *
            (sc[14]);
  }

  {
    // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[9] * 4.27e+46 * exp(-11.94 * logT - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-T * 0.000745934656124124) +
      0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[9] = Corr * k_f[9] * (sc[8]);
    qr[9] = Corr * k_f[9] * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) *
            (sc[20]);
  }

  {
    // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[10] * 5.2e+27 * exp(-7.297 * logT - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-T * 0.000112359550561798) +
      0.55 * exp(-T * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[10] = Corr * k_f[10] * (sc[1]);
    qr[10] = Corr * k_f[10] * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) *
             (refC) * (sc[18]);
  }

  {
    // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[11] * 7e+44 * exp(-9.31 * logT - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-T * 0.00555555555555556) +
      0.7345 * exp(-T * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[11] = Corr * k_f[11] * (sc[14]);
    qr[11] = Corr * k_f[11] * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
             (refCinv) * (sc[0]);
  }

  {
    // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[12] * 1.2e+30 * exp(-7.62 * logT - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-T * 0.00476190476190476) +
      0.9753 * exp(-T * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[12] = Corr * k_f[12] * (sc[1] * sc[14]);
    qr[12] = Corr * k_f[12] * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) *
             (refC) * (1.0);
  }

  {
    // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[13] * 1.99e+29 * exp(-7.08 * logT - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
      exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[13] = Corr * k_f[13] * (sc[1]);
    qr[13] = Corr * k_f[13] * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) *
             (refC) * (sc[15]);
  }

  {
    // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[14] * 6.26e+26 * exp(-6.66 * logT - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[14] = Corr * k_f[14] * (sc[1] * sc[20]);
    qr[14] = Corr * k_f[14] * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) *
             (refC) * (1.0);
  }

  {
    // reaction 20: C2H2 (+M) <=> H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (2.5 - 1) * sc[13] +
                       (2.5 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[15] * 2450000000 * exp(-0.64 * logT - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    qf[15] = Corr * k_f[15] * (sc[13]);
    qr[15] = Corr * k_f[15] * exp(-(g_RT[13] - g_RT_qss[5])) * (1.0);
  }

  {
    // reaction 33: HCO + M <=> CO + H + M
    const amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                             (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                             (3 - 1) * sc[14] + (3 - 1) * sc[15];
    qf[16] = Corr * k_f[16] * (1.0);
    qr[16] = Corr * k_f[16] * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (refCinv) * (sc[1] * sc[10]);
  }

  {
    // reaction 54: CH + O <=> CO + H
    qf[17] = k_f[17] * (sc[2]);
    qr[17] = k_f[17] * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
             (sc[1] * sc[10]);
  }

  {
    // reaction 55: CH + OH <=> H + HCO
    qf[18] = k_f[18] * (sc[4]);
    qr[18] = k_f[18] * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 56: CH + H2 <=> CH2 + H
    qf[19] = k_f[19] * (sc[0]);
    qr[19] =
      k_f[19] * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) * (sc[1]);
  }

  {
    // reaction 57: CH + H2O <=> CH2O + H
    qf[20] = k_f[20] * (sc[5]);
    qr[20] = k_f[20] * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 58: CH + O2 <=> HCO + O
    qf[21] = k_f[21] * (sc[3]);
    qr[21] = k_f[21] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[2]);
  }

  {
    // reaction 59: CH + CO2 <=> CO + HCO
    qf[22] = k_f[22] * (sc[11]);
    qr[22] = k_f[22] *
             exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[10]);
  }

  {
    // reaction 60: H + HCO <=> CO + H2
    qf[23] = k_f[23] * (sc[1]);
    qr[23] = k_f[23] * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 61: HCO + O <=> CO + OH
    qf[24] = k_f[24] * (sc[2]);
    qr[24] = k_f[24] * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
             (sc[4] * sc[10]);
  }

  {
    // reaction 62: HCO + O <=> CO2 + H
    qf[25] = k_f[25] * (sc[2]);
    qr[25] = k_f[25] * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 63: HCO + OH <=> CO + H2O
    qf[26] = k_f[26] * (sc[4]);
    qr[26] = k_f[26] * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 64: HCO + O2 <=> CO + HO2
    qf[27] = k_f[27] * (sc[3]);
    qr[27] = k_f[27] * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
             (sc[6] * sc[10]);
  }

  {
    // reaction 65: CH2 + H2 <=> CH3 + H
    qf[28] = k_f[28] * (sc[0]);
    qr[28] = k_f[28] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 66: CH2 + O <=> H + HCO
    qf[29] = k_f[29] * (sc[2]);
    qr[29] = k_f[29] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 67: CH2 + O2 <=> HCO + OH
    qf[30] = k_f[30] * (sc[3]);
    qr[30] =
      k_f[30] * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 68: CH2 + O2 <=> CO2 + 2 H
    qf[31] = k_f[31] * (sc[3]);
    qr[31] = k_f[31] *
             exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
             (refCinv) * (sc[1] * sc[1] * sc[11]);
  }

  {
    // reaction 69: CH2 + OH <=> CH2O + H
    qf[32] = k_f[32] * (sc[4]);
    qr[32] = k_f[32] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 70: CH2 + OH <=> CH + H2O
    qf[33] = k_f[33] * (sc[4]);
    qr[33] =
      k_f[33] * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 71: CH2 + HO2 <=> CH2O + OH
    qf[34] = k_f[34] * (sc[6]);
    qr[34] = k_f[34] * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 72: CH + CH2 <=> C2H2 + H
    // Remove forward reaction
    // qf[35] = k_f[35] * (1.0);
    qf[35] = 0.0;
    qr[35] = k_f[35] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 73: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[36] = k_f[36] * (1.0);
    qf[36] = 0.0;
    qr[36] = k_f[36] * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 74: CH2* + N2 <=> CH2 + N2
    qf[37] = k_f[37] * (sc[21]);
    qr[37] = k_f[37] * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[21]);
  }

  {
    // reaction 75: CH2* + H <=> CH + H2
    qf[38] = k_f[38] * (sc[1]);
    qr[38] = k_f[38] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
             (sc[0]);
  }

  {
    // reaction 76: CH2* + O <=> CO + H2
    qf[39] = k_f[39] * (sc[2]);
    qr[39] = k_f[39] * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 77: CH2* + O <=> H + HCO
    qf[40] = k_f[40] * (sc[2]);
    qr[40] = k_f[40] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 78: CH2* + OH <=> CH2O + H
    qf[41] = k_f[41] * (sc[4]);
    qr[41] = k_f[41] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 79: CH2* + H2 <=> CH3 + H
    qf[42] = k_f[42] * (sc[0]);
    qr[42] = k_f[42] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 80: CH2* + O2 <=> CO + H + OH
    qf[43] = k_f[43] * (sc[3]);
    qr[43] = k_f[43] *
             exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
             (refCinv) * (sc[1] * sc[4] * sc[10]);
  }

  {
    // reaction 81: CH2* + O2 <=> CO + H2O
    qf[44] = k_f[44] * (sc[3]);
    qr[44] = k_f[44] * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 82: CH2* + H2O <=> CH2 + H2O
    qf[45] = k_f[45] * (sc[5]);
    qr[45] =
      k_f[45] * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 83: CH2* + CO <=> CH2 + CO
    qf[46] = k_f[46] * (sc[10]);
    qr[46] = k_f[46] * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[10]);
  }

  {
    // reaction 84: CH2* + CO2 <=> CH2 + CO2
    qf[47] = k_f[47] * (sc[11]);
    qr[47] = k_f[47] * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[11]);
  }

  {
    // reaction 85: CH2* + CO2 <=> CH2O + CO
    qf[48] = k_f[48] * (sc[11]);
    qr[48] = k_f[48] * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
             (sc[10] * sc[12]);
  }

  {
    // reaction 86: CH2O + H <=> H2 + HCO
    qf[49] = k_f[49] * (sc[1] * sc[12]);
    qr[49] =
      k_f[49] * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) * (sc[0]);
  }

  {
    // reaction 87: CH2O + O <=> HCO + OH
    qf[50] = k_f[50] * (sc[2] * sc[12]);
    qr[50] =
      k_f[50] * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 88: CH2O + OH <=> H2O + HCO
    qf[51] = k_f[51] * (sc[4] * sc[12]);
    qr[51] =
      k_f[51] * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) * (sc[5]);
  }

  {
    // reaction 89: CH2O + O2 <=> HCO + HO2
    qf[52] = k_f[52] * (sc[3] * sc[12]);
    qr[52] =
      k_f[52] * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 90: CH2O + HO2 <=> H2O2 + HCO
    qf[53] = k_f[53] * (sc[6] * sc[12]);
    qr[53] =
      k_f[53] * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 91: CH + CH2O <=> CH2CO + H
    qf[54] = k_f[54] * (sc[12]);
    qr[54] = k_f[54] * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 93: CH3 + OH <=> CH2 + H2O
    qf[55] = k_f[55] * (sc[4] * sc[8]);
    qr[55] =
      k_f[55] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 94: CH3 + OH <=> CH2* + H2O
    qf[56] = k_f[56] * (sc[4] * sc[8]);
    qr[56] =
      k_f[56] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 95: CH3 + O2 <=> CH3O + O
    qf[57] = k_f[57] * (sc[3] * sc[8]);
    qr[57] =
      k_f[57] * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) * (sc[2]);
  }

  {
    // reaction 98: CH3 + HO2 <=> CH3O + OH
    qf[58] = k_f[58] * (sc[6] * sc[8]);
    qr[58] =
      k_f[58] * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) * (sc[4]);
  }

  {
    // reaction 100: CH + CH3 <=> C2H3 + H
    qf[59] = k_f[59] * (sc[8]);
    qr[59] = k_f[59] * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
             (sc[1]);
  }

  {
    // reaction 101: CH3 + HCO <=> CH4 + CO
    qf[60] = k_f[60] * (sc[8]);
    qr[60] = k_f[60] * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
             (sc[9] * sc[10]);
  }

  {
    // reaction 102: CH2O + CH3 <=> CH4 + HCO
    qf[61] = k_f[61] * (sc[8] * sc[12]);
    qr[61] =
      k_f[61] * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) * (sc[9]);
  }

  {
    // reaction 103: CH2 + CH3 <=> C2H4 + H
    qf[62] = k_f[62] * (sc[8]);
    qr[62] = k_f[62] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 104: CH2* + CH3 <=> C2H4 + H
    qf[63] = k_f[63] * (sc[8]);
    qr[63] = k_f[63] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 105: 2 CH3 <=> C2H5 + H
    qf[64] = k_f[64] * (sc[8] * sc[8]);
    qr[64] =
      k_f[64] * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) * (sc[1]);
  }

  {
    // reaction 107: CH3O + H <=> CH2O + H2
    qf[65] = k_f[65] * (sc[1]);
    qr[65] = k_f[65] * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
             (sc[0] * sc[12]);
  }

  {
    // reaction 108: CH3O + H <=> CH3 + OH
    qf[66] = k_f[66] * (sc[1]);
    qr[66] = k_f[66] * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) *
             (sc[4] * sc[8]);
  }

  {
    // reaction 109: CH3O + H <=> CH2* + H2O
    qf[67] = k_f[67] * (sc[1]);
    qr[67] =
      k_f[67] * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) * (sc[5]);
  }

  {
    // reaction 110: CH3O + O <=> CH2O + OH
    qf[68] = k_f[68] * (sc[2]);
    qr[68] = k_f[68] * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 111: CH3O + OH <=> CH2O + H2O
    qf[69] = k_f[69] * (sc[4]);
    qr[69] = k_f[69] * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 112: CH3O + O2 <=> CH2O + HO2
    qf[70] = k_f[70] * (sc[3]);
    qr[70] = k_f[70] * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 116: CH + CH4 <=> C2H4 + H
    qf[71] = k_f[71] * (sc[9]);
    qr[71] = k_f[71] * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 117: CH2 + CH4 <=> 2 CH3
    qf[72] = k_f[72] * (sc[9]);
    qr[72] = k_f[72] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 118: CH2* + CH4 <=> 2 CH3
    qf[73] = k_f[73] * (sc[9]);
    qr[73] = k_f[73] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 119: H + HCCO <=> CH2* + CO
    qf[74] = k_f[74] * (sc[1] * sc[16]);
    qr[74] =
      k_f[74] * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) * (sc[10]);
  }

  {
    // reaction 122: CH + HCCO <=> C2H2 + CO
    qf[75] = k_f[75] * (sc[16]);
    qr[75] = k_f[75] * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
             (sc[10] * sc[13]);
  }

  {
    // reaction 123: CH2 + HCCO <=> C2H3 + CO
    qf[76] = k_f[76] * (sc[16]);
    qr[76] = k_f[76] *
             exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 126: C2H2 + O <=> CH2 + CO
    qf[77] = k_f[77] * (sc[2] * sc[13]);
    qr[77] =
      k_f[77] * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) * (sc[10]);
  }

  {
    // reaction 129: C2H2 + HCO <=> C2H3 + CO
    qf[78] = k_f[78] * (sc[13]);
    qr[78] = k_f[78] *
             exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 130: H + H2CC <=> C2H2 + H
    qf[79] = k_f[79] * (sc[1]);
    qr[79] = k_f[79] * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 131: H2CC + O <=> CH2 + CO
    qf[80] = k_f[80] * (sc[2]);
    qr[80] = k_f[80] * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[10]);
  }

  {
    // reaction 132: H2CC + OH <=> CH2CO + H
    qf[81] = k_f[81] * (sc[4]);
    qr[81] = k_f[81] * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 133: H2CC + O2 <=> CH2 + CO2
    qf[82] = k_f[82] * (sc[3]);
    qr[82] = k_f[82] * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[11]);
  }

  {
    // reaction 137: CH2CO + O <=> CH2 + CO2
    qf[83] = k_f[83] * (sc[2] * sc[17]);
    qr[83] =
      k_f[83] * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) * (sc[11]);
  }

  {
    // reaction 139: C2H3 + H <=> C2H2 + H2
    qf[84] = k_f[84] * (sc[1]);
    qr[84] = k_f[84] * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 140: C2H3 + H <=> H2 + H2CC
    qf[85] = k_f[85] * (sc[1]);
    qr[85] = k_f[85] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
             (sc[0]);
  }

  {
    // reaction 141: C2H3 + O <=> CH2CO + H
    qf[86] = k_f[86] * (sc[2]);
    qr[86] = k_f[86] * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 142: C2H3 + O <=> CH3 + CO
    qf[87] = k_f[87] * (sc[2]);
    qr[87] = k_f[87] * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 143: C2H3 + OH <=> C2H2 + H2O
    qf[88] = k_f[88] * (sc[4]);
    qr[88] = k_f[88] * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
             (sc[5] * sc[13]);
  }

  {
    // reaction 144: C2H3 + O2 <=> C2H2 + HO2
    qf[89] = k_f[89] * (sc[3]);
    qr[89] = k_f[89] * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
             (sc[6] * sc[13]);
  }

  {
    // reaction 145: C2H3 + O2 <=> CH2CHO + O
    qf[90] = k_f[90] * (sc[3]);
    qr[90] = k_f[90] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[2]);
  }

  {
    // reaction 146: C2H3 + O2 <=> CH2O + HCO
    qf[91] = k_f[91] * (sc[3]);
    qr[91] = k_f[91] * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
             (sc[12]);
  }

  {
    // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
    qf[92] = k_f[92] * (sc[6]);
    qr[92] = k_f[92] * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[4]);
  }

  {
    // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
    qf[93] = k_f[93] * (sc[7]);
    qr[93] = k_f[93] * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
             (sc[6] * sc[14]);
  }

  {
    // reaction 149: C2H3 + HCO <=> C2H4 + CO
    // Remove forward reaction
    // qf[94] = k_f[94] * (1.0);
    qf[94] = 0.0;
    qr[94] = k_f[94] *
             exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
             (sc[10] * sc[14]);
  }

  {
    // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
    qf[95] = k_f[95] * (sc[8]);
    qr[95] = k_f[95] * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
             (sc[9] * sc[13]);
  }

  {
    // reaction 151: C2H3 + CH3 <=> H + aC3H5
    qf[96] = k_f[96] * (sc[8]);
    qr[96] = k_f[96] * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
             (sc[1] * sc[19]);
  }

  {
    // reaction 152: CH2CHO <=> CH3 + CO
    qf[97] = k_f[97] * (1.0);
    qr[97] = k_f[97] * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 153: CH2CHO + H <=> CH3 + HCO
    qf[98] = k_f[98] * (sc[1]);
    qr[98] =
      k_f[98] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) * (sc[8]);
  }

  {
    // reaction 154: CH2CHO + H <=> CH2CO + H2
    qf[99] = k_f[99] * (sc[1]);
    qr[99] = k_f[99] * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
             (sc[0] * sc[17]);
  }

  {
    // reaction 155: CH2CHO + O <=> CH2CO + OH
    qf[100] = k_f[100] * (sc[2]);
    qr[100] = k_f[100] * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
              (sc[4] * sc[17]);
  }

  {
    // reaction 156: CH2CHO + OH <=> CH2CO + H2O
    qf[101] = k_f[101] * (sc[4]);
    qr[101] = k_f[101] * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
              (sc[5] * sc[17]);
  }

  {
    // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
    qf[102] = k_f[102] * (sc[3]);
    qr[102] = k_f[102] * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
              (sc[6] * sc[17]);
  }

  {
    // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
    qf[103] = k_f[103] * (sc[3]);
    qr[103] = k_f[103] *
              exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
              (refCinv) * (sc[4] * sc[10] * sc[12]);
  }

  {
    // reaction 159: C2H4 + H <=> C2H3 + H2
    qf[104] = k_f[104] * (sc[1] * sc[14]);
    qr[104] =
      k_f[104] * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) * (sc[0]);
  }

  {
    // reaction 160: C2H4 + O <=> C2H3 + OH
    qf[105] = k_f[105] * (sc[2] * sc[14]);
    qr[105] =
      k_f[105] * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) * (sc[4]);
  }

  {
    // reaction 161: C2H4 + O <=> CH3 + HCO
    qf[106] = k_f[106] * (sc[2] * sc[14]);
    qr[106] =
      k_f[106] * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) * (sc[8]);
  }

  {
    // reaction 162: C2H4 + O <=> CH2 + CH2O
    qf[107] = k_f[107] * (sc[2] * sc[14]);
    qr[107] =
      k_f[107] * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) * (sc[12]);
  }

  {
    // reaction 163: C2H4 + OH <=> C2H3 + H2O
    qf[108] = k_f[108] * (sc[4] * sc[14]);
    qr[108] =
      k_f[108] * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) * (sc[5]);
  }

  {
    // reaction 164: C2H4 + O2 <=> C2H3 + HO2
    qf[109] = k_f[109] * (sc[3] * sc[14]);
    qr[109] =
      k_f[109] * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) * (sc[6]);
  }

  {
    // reaction 166: C2H4 + HCO <=> C2H5 + CO
    qf[110] = k_f[110] * (sc[14]);
    qr[110] = k_f[110] *
              exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
              (sc[10]);
  }

  {
    // reaction 167: C2H4 + CH2 <=> H + aC3H5
    qf[111] = k_f[111] * (sc[14]);
    qr[111] = k_f[111] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
    qf[112] = k_f[112] * (sc[14]);
    qr[112] = k_f[112] *
              exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 169: C2H4 + CH2* <=> H + aC3H5
    qf[113] = k_f[113] * (sc[14]);
    qr[113] = k_f[113] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
    qf[114] = k_f[114] * (sc[8] * sc[14]);
    qr[114] =
      k_f[114] * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) * (sc[9]);
  }

  {
    // reaction 171: C2H4 + CH3 <=> nC3H7
    qf[115] = k_f[115] * (sc[8] * sc[14]);
    qr[115] =
      k_f[115] * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (1.0);
  }

  {
    // reaction 172: C2H5 + H <=> C2H4 + H2
    qf[116] = k_f[116] * (sc[1]);
    qr[116] = k_f[116] * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
              (sc[0] * sc[14]);
  }

  {
    // reaction 173: C2H5 + O <=> CH2O + CH3
    qf[117] = k_f[117] * (sc[2]);
    qr[117] = k_f[117] * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (sc[8] * sc[12]);
  }

  {
    // reaction 174: C2H5 + O <=> CH3CHO + H
    qf[118] = k_f[118] * (sc[2]);
    qr[118] = k_f[118] * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
              (sc[1] * sc[18]);
  }

  {
    // reaction 175: C2H5 + O2 <=> C2H4 + HO2
    qf[119] = k_f[119] * (sc[3]);
    qr[119] = k_f[119] * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
              (sc[6] * sc[14]);
  }

  {
    // reaction 176: C2H5 + HO2 <=> C2H6 + O2
    qf[120] = k_f[120] * (sc[6]);
    qr[120] = k_f[120] * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
              (sc[3] * sc[15]);
  }

  {
    // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
    qf[121] = k_f[121] * (sc[6]);
    qr[121] = k_f[121] * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
              (sc[7] * sc[14]);
  }

  {
    // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
    qf[122] = k_f[122] * (sc[6]);
    qr[122] = k_f[122] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (refCinv) * (sc[4] * sc[8] * sc[12]);
  }

  {
    // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
    qf[123] = k_f[123] * (sc[7]);
    qr[123] = k_f[123] * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
              (sc[6] * sc[15]);
  }

  {
    // reaction 180: C2H5 + HCO <=> C2H6 + CO
    // Remove forward reaction
    // qf[124] = k_f[124] * (1.0);
    qf[124] = 0.0;
    qr[124] = k_f[124] *
              exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
              (sc[10] * sc[15]);
  }

  {
    // reaction 181: C2H6 + H <=> C2H5 + H2
    qf[125] = k_f[125] * (sc[1] * sc[15]);
    qr[125] =
      k_f[125] * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) * (sc[0]);
  }

  {
    // reaction 182: C2H6 + O <=> C2H5 + OH
    qf[126] = k_f[126] * (sc[2] * sc[15]);
    qr[126] =
      k_f[126] * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) * (sc[4]);
  }

  {
    // reaction 183: C2H6 + OH <=> C2H5 + H2O
    qf[127] = k_f[127] * (sc[4] * sc[15]);
    qr[127] =
      k_f[127] * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) * (sc[5]);
  }

  {
    // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
    qf[128] = k_f[128] * (sc[15]);
    qr[128] = k_f[128] *
              exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) * (sc[8]);
  }

  {
    // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
    qf[129] = k_f[129] * (sc[8] * sc[15]);
    qr[129] =
      k_f[129] * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) * (sc[9]);
  }

  {
    // reaction 186: H + aC3H5 <=> CH4 + H2CC
    qf[130] = k_f[130] * (sc[1] * sc[19]);
    qr[130] =
      k_f[130] * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
    qf[131] = k_f[131] * (sc[6] * sc[19]);
    qr[131] = k_f[131] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
              (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 189: HCO + aC3H5 <=> C3H6 + CO
    qf[132] = k_f[132] * (sc[19]);
    qr[132] = k_f[132] * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
              (sc[10] * sc[20]);
  }

  {
    // reaction 193: C3H6 + O => C2H5 + HCO
    qf[133] = k_f[133] * (sc[2] * sc[20]);
    qr[133] = 0.0;
  }

  {
    // reaction 198: H + nC3H7 <=> C2H5 + CH3
    qf[134] = k_f[134] * (sc[1]);
    qr[134] = k_f[134] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
              (sc[8]);
  }

  {
    // reaction 199: H + nC3H7 <=> C3H6 + H2
    qf[135] = k_f[135] * (sc[1]);
    qr[135] = k_f[135] * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
              (sc[0] * sc[20]);
  }

  {
    // reaction 200: O + nC3H7 <=> C2H5 + CH2O
    qf[136] = k_f[136] * (sc[2]);
    qr[136] = k_f[136] *
              exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) * (sc[12]);
  }

  {
    // reaction 201: OH + nC3H7 <=> C3H6 + H2O
    qf[137] = k_f[137] * (sc[4]);
    qr[137] = k_f[137] * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
              (sc[5] * sc[20]);
  }

  {
    // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
    qf[138] = k_f[138] * (sc[3]);
    qr[138] = k_f[138] * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
              (sc[6] * sc[20]);
  }

  {
    // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
    qf[139] = k_f[139] * (sc[6]);
    qr[139] =
      k_f[139] *
      exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
    qf[140] = k_f[140] * (sc[8]);
    qr[140] = k_f[140] * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
              (sc[9] * sc[20]);
  }

  {
    // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
    // Remove forward reaction
    // qf[141] = k_f[141] * (1.0);
    qf[141] = 0.0;
    qr[141] = k_f[141] *
              exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
              (sc[8] * sc[19]);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(
  const amrex::Real T,
  const amrex::Real invT,
  const amrex::Real logT,
  amrex::Real* k_f)
{
  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  k_f[0] = 50000000;
  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  k_f[1] = 1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  k_f[2] = 25000000000 * exp((-0.8) * logT);
  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  k_f[3] = 810000 * exp((0.5) * logT - (2269.50716277929) * invT);
  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  k_f[4] = 540000 * exp((0.454) * logT - (1308.36333109227) * invT);
  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f[5] = 18000000;
  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  k_f[6] = 386000000 * exp((1.62) * logT - (18643.2817423997) * invT);
  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  k_f[7] = 330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  k_f[8] = 6080000 * exp((0.27) * logT - (140.900666425322) * invT);
  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f[9] = 25000000;
  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f[10] = 100000000;
  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  k_f[11] = 8000000000000 * exp((0.44) * logT - (44670.543423485) * invT);
  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  k_f[12] = 1080000 * exp((0.454) * logT - (915.85433176459) * invT);
  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  k_f[13] = 521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  k_f[14] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  k_f[15] = 800000000000000 * exp((-0.52) * logT - (25538.2457895895) * invT);
  // reaction 33: HCO + M <=> CO + H + M
  k_f[16] = 187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
  // reaction 54: CH + O <=> CO + H
  k_f[17] = 57000000;
  // reaction 55: CH + OH <=> H + HCO
  k_f[18] = 30000000;
  // reaction 56: CH + H2 <=> CH2 + H
  k_f[19] = 110.7 * exp((1.79) * logT - (840.371831893882) * invT);
  // reaction 57: CH + H2O <=> CH2O + H
  k_f[20] = 5710000 * exp(-(-379.928582682563) * invT);
  // reaction 58: CH + O2 <=> HCO + O
  k_f[21] = 33000000;
  // reaction 59: CH + CO2 <=> CO + HCO
  k_f[22] = 3400000 * exp(-(347.219499405257) * invT);
  // reaction 60: H + HCO <=> CO + H2
  k_f[23] = 73400000;
  // reaction 61: HCO + O <=> CO + OH
  k_f[24] = 30000000;
  // reaction 62: HCO + O <=> CO2 + H
  k_f[25] = 30000000;
  // reaction 63: HCO + OH <=> CO + H2O
  k_f[26] = 50000000;
  // reaction 64: HCO + O2 <=> CO + HO2
  k_f[27] = 7600000 * exp(-(201.286666321888) * invT);
  // reaction 65: CH2 + H2 <=> CH3 + H
  k_f[28] = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
  // reaction 66: CH2 + O <=> H + HCO
  k_f[29] = 80000000;
  // reaction 67: CH2 + O2 <=> HCO + OH
  k_f[30] = 10560000 * exp(-(754.82499870708) * invT);
  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  k_f[31] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 69: CH2 + OH <=> CH2O + H
  k_f[32] = 20000000;
  // reaction 70: CH2 + OH <=> CH + H2O
  k_f[33] = 11.3 * exp((2) * logT - (1509.64999741416) * invT);
  // reaction 71: CH2 + HO2 <=> CH2O + OH
  k_f[34] = 20000000;
  // reaction 72: CH + CH2 <=> C2H2 + H
  k_f[35] = 40000000;
  // reaction 73: 2 CH2 <=> C2H2 + H2
  k_f[36] = 32000000;
  // reaction 74: CH2* + N2 <=> CH2 + N2
  k_f[37] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 75: CH2* + H <=> CH + H2
  k_f[38] = 30000000;
  // reaction 76: CH2* + O <=> CO + H2
  k_f[39] = 15000000;
  // reaction 77: CH2* + O <=> H + HCO
  k_f[40] = 15000000;
  // reaction 78: CH2* + OH <=> CH2O + H
  k_f[41] = 30000000;
  // reaction 79: CH2* + H2 <=> CH3 + H
  k_f[42] = 70000000;
  // reaction 80: CH2* + O2 <=> CO + H + OH
  k_f[43] = 28000000;
  // reaction 81: CH2* + O2 <=> CO + H2O
  k_f[44] = 12000000;
  // reaction 82: CH2* + H2O <=> CH2 + H2O
  k_f[45] = 30000000;
  // reaction 83: CH2* + CO <=> CH2 + CO
  k_f[46] = 9000000;
  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  k_f[47] = 7000000;
  // reaction 85: CH2* + CO2 <=> CH2O + CO
  k_f[48] = 14000000;
  // reaction 86: CH2O + H <=> H2 + HCO
  k_f[49] = 23000 * exp((1.05) * logT - (1648.03458051046) * invT);
  // reaction 87: CH2O + O <=> HCO + OH
  k_f[50] = 39000000 * exp(-(1781.38699694871) * invT);
  // reaction 88: CH2O + OH <=> H2O + HCO
  k_f[51] = 3430 * exp((1.18) * logT - (-224.93784961471) * invT);
  // reaction 89: CH2O + O2 <=> HCO + HO2
  k_f[52] = 100000000 * exp(-(20128.6666321888) * invT);
  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  k_f[53] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 91: CH + CH2O <=> CH2CO + H
  k_f[54] = 94600000 * exp(-(-259.156582889431) * invT);
  // reaction 93: CH3 + OH <=> CH2 + H2O
  k_f[55] = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
  // reaction 94: CH3 + OH <=> CH2* + H2O
  k_f[56] = 25010000;
  // reaction 95: CH3 + O2 <=> CH3O + O
  k_f[57] = 30830000 * exp(-(14492.6399751759) * invT);
  // reaction 98: CH3 + HO2 <=> CH3O + OH
  k_f[58] = 13400000;
  // reaction 100: CH + CH3 <=> C2H3 + H
  k_f[59] = 30000000;
  // reaction 101: CH3 + HCO <=> CH4 + CO
  k_f[60] = 8480000;
  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  k_f[61] = 0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
  // reaction 103: CH2 + CH3 <=> C2H4 + H
  k_f[62] = 40000000;
  // reaction 104: CH2* + CH3 <=> C2H4 + H
  k_f[63] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 105: 2 CH3 <=> C2H5 + H
  k_f[64] = 4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
  // reaction 107: CH3O + H <=> CH2O + H2
  k_f[65] = 20000000;
  // reaction 108: CH3O + H <=> CH3 + OH
  k_f[66] = 32000000;
  // reaction 109: CH3O + H <=> CH2* + H2O
  k_f[67] = 16000000;
  // reaction 110: CH3O + O <=> CH2O + OH
  k_f[68] = 10000000;
  // reaction 111: CH3O + OH <=> CH2O + H2O
  k_f[69] = 5000000;
  // reaction 112: CH3O + O2 <=> CH2O + HO2
  k_f[70] = 4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
  // reaction 116: CH + CH4 <=> C2H4 + H
  k_f[71] = 60000000;
  // reaction 117: CH2 + CH4 <=> 2 CH3
  k_f[72] = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
  // reaction 118: CH2* + CH4 <=> 2 CH3
  k_f[73] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 119: H + HCCO <=> CH2* + CO
  k_f[74] = 100000000;
  // reaction 122: CH + HCCO <=> C2H2 + CO
  k_f[75] = 50000000;
  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  k_f[76] = 30000000;
  // reaction 126: C2H2 + O <=> CH2 + CO
  k_f[77] = 4.08 * exp((2) * logT - (956.111665028967) * invT);
  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  k_f[78] = 10 * exp((2) * logT - (3019.29999482832) * invT);
  // reaction 130: H + H2CC <=> C2H2 + H
  k_f[79] = 100000000;
  // reaction 131: H2CC + O <=> CH2 + CO
  k_f[80] = 100000000;
  // reaction 132: H2CC + OH <=> CH2CO + H
  k_f[81] = 20000000;
  // reaction 133: H2CC + O2 <=> CH2 + CO2
  k_f[82] = 10000000;
  // reaction 137: CH2CO + O <=> CH2 + CO2
  k_f[83] = 1750000 * exp(-(679.342498836372) * invT);
  // reaction 139: C2H3 + H <=> C2H2 + H2
  k_f[84] = 30000000;
  // reaction 140: C2H3 + H <=> H2 + H2CC
  k_f[85] = 60000000;
  // reaction 141: C2H3 + O <=> CH2CO + H
  k_f[86] = 48000000;
  // reaction 142: C2H3 + O <=> CH3 + CO
  k_f[87] = 48000000;
  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  k_f[88] = 30110000;
  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  k_f[89] = 1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  k_f[90] = 300000 * exp((0.29) * logT - (5.53538332385192) * invT);
  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  k_f[91] = 46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  k_f[92] = 10000000;
  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  k_f[93] = 12100 * exp(-(-299.917132819613) * invT);
  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  k_f[94] = 90330000;
  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  k_f[95] = 392000;
  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  k_f[96] = 1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
  // reaction 152: CH2CHO <=> CH3 + CO
  k_f[97] = 7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
  // reaction 153: CH2CHO + H <=> CH3 + HCO
  k_f[98] = 90000000;
  // reaction 154: CH2CHO + H <=> CH2CO + H2
  k_f[99] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 155: CH2CHO + O <=> CH2CO + OH
  k_f[100] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  k_f[101] = 10000000 * exp(-(1006.43333160944) * invT);
  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  k_f[102] = 140000;
  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  k_f[103] = 18000;
  // reaction 159: C2H4 + H <=> C2H3 + H2
  k_f[104] = 50.7 * exp((1.93) * logT - (6516.65582217112) * invT);
  // reaction 160: C2H4 + O <=> C2H3 + OH
  k_f[105] = 15.1 * exp((1.91) * logT - (1882.03033010965) * invT);
  // reaction 161: C2H4 + O <=> CH3 + HCO
  k_f[106] = 19.2 * exp((1.83) * logT - (110.707666477038) * invT);
  // reaction 162: C2H4 + O <=> CH2 + CH2O
  k_f[107] = 0.384 * exp((1.83) * logT - (110.707666477038) * invT);
  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  k_f[108] = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  k_f[109] = 42200000 * exp(-(30595.573280927) * invT);
  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  k_f[110] = 10 * exp((2) * logT - (4025.73332643776) * invT);
  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  k_f[111] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  k_f[112] = 50000000;
  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  k_f[113] = 50000000;
  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  k_f[114] = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
  // reaction 171: C2H4 + CH3 <=> nC3H7
  k_f[115] = 330000 * exp(-(3874.76832669634) * invT);
  // reaction 172: C2H5 + H <=> C2H4 + H2
  k_f[116] = 2000000;
  // reaction 173: C2H5 + O <=> CH2O + CH3
  k_f[117] = 16040000;
  // reaction 174: C2H5 + O <=> CH3CHO + H
  k_f[118] = 80200000;
  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  k_f[119] = 20000;
  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  k_f[120] = 300000;
  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  k_f[121] = 300000;
  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f[122] = 24000000;
  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  k_f[123] = 8700 * exp(-(490.133032493797) * invT);
  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  k_f[124] = 120000000;
  // reaction 181: C2H6 + H <=> C2H5 + H2
  k_f[125] = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
  // reaction 182: C2H6 + O <=> C2H5 + OH
  k_f[126] = 89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  k_f[127] = 3.54 * exp((2.12) * logT - (437.798499250106) * invT);
  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  k_f[128] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  k_f[129] = 6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  k_f[130] = 20000000 * exp(-(1006.43333160944) * invT);
  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f[131] = 6600000;
  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  k_f[132] = 60000000;
  // reaction 193: C3H6 + O => C2H5 + HCO
  k_f[133] = 35 * exp((1.65) * logT - (-489.126599162188) * invT);
  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  k_f[134] = 3.7e+18 * exp((-2.92) * logT - (6292.72440588802) * invT);
  // reaction 199: H + nC3H7 <=> C3H6 + H2
  k_f[135] = 1800000;
  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  k_f[136] = 96000000;
  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  k_f[137] = 24000000;
  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  k_f[138] = 90000;
  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f[139] = 24000000;
  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  k_f[140] = 11000000;
  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  k_f[141] = 3.9e+26 * exp((-5.22) * logT - (9937.0194996458) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between CH3O  nC3H7  C2H5  CH2CHO  H2CC  C2H3  HCO  CH2*  CH2
  // CH QSSA species 4: CH3O

  amrex::Real CH3O_num = epsilon + 1.0 * qf_co[4] + 1.0 * qf_co[57] +
                         1.0 * qf_co[58] + 1.0 * qr_co[65] + 1.0 * qr_co[66] +
                         1.0 * qr_co[68] + 1.0 * qr_co[69] + 1.0 * qr_co[70];
  amrex::Real CH3O_denom = epsilon - qr_co[4] - qr_co[57] - qr_co[58] -
                           qf_co[65] - qf_co[66] - qf_co[67] - qf_co[68] -
                           qf_co[69] - qf_co[70];
  amrex::Real CH3O_rhs = -CH3O_num / CH3O_denom;

  amrex::Real CH3O_CH2D = (epsilon + 1.0 * qr_co[67]) / CH3O_denom;

  // QSSA species 9: nC3H7

  amrex::Real nC3H7_num = epsilon + 1.0 * qf_co[14] + 1.0 * qf_co[115] +
                          1.0 * qr_co[135] + 1.0 * qr_co[137] +
                          1.0 * qr_co[138] + 1.0 * qr_co[140];
  amrex::Real nC3H7_denom = epsilon - qr_co[14] - qr_co[115] - qf_co[134] -
                            qf_co[135] - qf_co[136] - qf_co[137] - qf_co[138] -
                            qf_co[139] - qf_co[140];
  amrex::Real nC3H7_rhs = -nC3H7_num / nC3H7_denom;

  amrex::Real nC3H7_C2H5 =
    (epsilon + 1.0 * qr_co[134] + 1.0 * qr_co[136] + 1.0 * qr_co[139]) /
    nC3H7_denom;

  // QSSA species 7: C2H5

  amrex::Real C2H5_num =
    epsilon + 1.0 * qf_co[12] + 1.0 * qr_co[13] + 1.0 * qf_co[64] +
    1.0 * qr_co[116] + 1.0 * qr_co[117] + 1.0 * qr_co[118] + 1.0 * qr_co[119] +
    1.0 * qr_co[120] + 1.0 * qr_co[121] + 1.0 * qr_co[122] + 1.0 * qr_co[123] +
    1.0 * qr_co[124] + 1.0 * qf_co[125] + 1.0 * qf_co[126] + 1.0 * qf_co[127] +
    1.0 * qf_co[129] + 1.0 * qr_co[141];
  amrex::Real C2H5_denom =
    epsilon - qr_co[12] - qf_co[13] - qr_co[64] - qr_co[110] - qf_co[116] -
    qf_co[117] - qf_co[118] - qf_co[119] - qf_co[120] - qf_co[121] -
    qf_co[122] - qf_co[123] - qr_co[125] - qr_co[126] - qr_co[127] -
    qr_co[128] - qr_co[129] - qr_co[134] - qr_co[136] - qr_co[139];
  amrex::Real C2H5_rhs = -C2H5_num / C2H5_denom;

  amrex::Real C2H5_nC3H7 =
    (epsilon + 1.0 * qf_co[134] + 1.0 * qf_co[136] + 1.0 * qf_co[139]) /
    C2H5_denom;
  amrex::Real C2H5_HCO = (epsilon + 1.0 * qf_co[110]) / C2H5_denom;
  amrex::Real C2H5_CH2D = (epsilon + 1.0 * qf_co[128]) / C2H5_denom;

  // QSSA species 8: CH2CHO

  amrex::Real CH2CHO_num = epsilon + 1.0 * qf_co[7] + 1.0 * qr_co[10] +
                           1.0 * qr_co[97] + 1.0 * qr_co[99] +
                           1.0 * qr_co[100] + 1.0 * qr_co[101] +
                           1.0 * qr_co[102] + 1.0 * qr_co[103];
  amrex::Real CH2CHO_denom = epsilon - qr_co[7] - qf_co[10] - qr_co[90] -
                             qr_co[92] - qf_co[97] - qf_co[98] - qf_co[99] -
                             qf_co[100] - qf_co[101] - qf_co[102] - qf_co[103];
  amrex::Real CH2CHO_rhs = -CH2CHO_num / CH2CHO_denom;

  amrex::Real CH2CHO_C2H3 =
    (epsilon + 1.0 * qf_co[90] + 1.0 * qf_co[92]) / CH2CHO_denom;
  amrex::Real CH2CHO_HCO = (epsilon + 1.0 * qr_co[98]) / CH2CHO_denom;

  // QSSA species 5: H2CC

  amrex::Real H2CC_num = epsilon + 1.0 * qf_co[11] + 1.0 * qf_co[15] +
                         1.0 * qr_co[79] + 1.0 * qr_co[81] + 1.0 * qf_co[130];
  amrex::Real H2CC_denom = epsilon - qr_co[11] - qr_co[15] - qf_co[79] -
                           qf_co[80] - qf_co[81] - qf_co[82] - qr_co[85] -
                           qr_co[112] - qr_co[130];
  amrex::Real H2CC_rhs = -H2CC_num / H2CC_denom;

  amrex::Real H2CC_C2H3 = (epsilon + 1.0 * qf_co[85]) / H2CC_denom;
  amrex::Real H2CC_CH2D = (epsilon + 1.0 * qf_co[112]) / H2CC_denom;
  amrex::Real H2CC_CH2 =
    (epsilon + 1.0 * qr_co[80] + 1.0 * qr_co[82]) / H2CC_denom;

  // QSSA species 6: C2H3

  amrex::Real C2H3_num =
    epsilon + 1.0 * qr_co[6] + 1.0 * qr_co[8] + 1.0 * qr_co[9] +
    1.0 * qr_co[84] + 1.0 * qr_co[86] + 1.0 * qr_co[87] + 1.0 * qr_co[88] +
    1.0 * qr_co[89] + 1.0 * qr_co[93] + 1.0 * qr_co[94] + 1.0 * qr_co[95] +
    1.0 * qr_co[96] + 1.0 * qf_co[104] + 1.0 * qf_co[105] + 1.0 * qf_co[108] +
    1.0 * qf_co[109] + 1.0 * qf_co[114] + 1.0 * qf_co[131] + 1.0 * qr_co[141];
  amrex::Real C2H3_denom =
    epsilon - qf_co[6] - qf_co[8] - qf_co[9] - qr_co[59] - qr_co[76] -
    qr_co[78] - qf_co[84] - qf_co[85] - qf_co[86] - qf_co[87] - qf_co[88] -
    qf_co[89] - qf_co[90] - qf_co[91] - qf_co[92] - qf_co[93] - qf_co[95] -
    qf_co[96] - qr_co[104] - qr_co[105] - qr_co[108] - qr_co[109] - qr_co[114] -
    qr_co[131];
  amrex::Real C2H3_rhs = -C2H3_num / C2H3_denom;

  amrex::Real C2H3_CH2CHO =
    (epsilon + 1.0 * qr_co[90] + 1.0 * qr_co[92]) / C2H3_denom;
  amrex::Real C2H3_H2CC = (epsilon + 1.0 * qr_co[85]) / C2H3_denom;
  amrex::Real C2H3_HCO =
    (epsilon + 1.0 * qf_co[78] + 1.0 * qr_co[91]) / C2H3_denom;
  amrex::Real C2H3_CH2 = (epsilon + 1.0 * qf_co[76]) / C2H3_denom;
  amrex::Real C2H3_CH = (epsilon + 1.0 * qf_co[59]) / C2H3_denom;

  // QSSA species 3: HCO

  amrex::Real HCO_num =
    epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[5] + 1.0 * qr_co[16] +
    1.0 * qr_co[23] + 1.0 * qr_co[24] + 1.0 * qr_co[25] + 1.0 * qr_co[26] +
    1.0 * qr_co[27] + 1.0 * qf_co[49] + 1.0 * qf_co[50] + 1.0 * qf_co[51] +
    1.0 * qf_co[52] + 1.0 * qf_co[53] + 1.0 * qr_co[60] + 1.0 * qf_co[61] +
    1.0 * qr_co[94] + 1.0 * qf_co[106] + 1.0 * qr_co[124] + 1.0 * qr_co[132];
  amrex::Real HCO_denom =
    epsilon - qf_co[1] - qf_co[5] - qf_co[16] - qr_co[18] - qr_co[21] -
    qr_co[22] - qf_co[23] - qf_co[24] - qf_co[25] - qf_co[26] - qf_co[27] -
    qr_co[29] - qr_co[30] - qr_co[40] - qr_co[49] - qr_co[50] - qr_co[51] -
    qr_co[52] - qr_co[53] - qf_co[60] - qr_co[61] - qf_co[78] - qr_co[91] -
    qr_co[98] - qr_co[106] - qf_co[110] - qf_co[132];
  amrex::Real HCO_rhs = -HCO_num / HCO_denom;

  amrex::Real HCO_C2H5 = (epsilon + 1.0 * qr_co[110]) / HCO_denom;
  amrex::Real HCO_CH2CHO = (epsilon + 1.0 * qf_co[98]) / HCO_denom;
  amrex::Real HCO_C2H3 =
    (epsilon + 1.0 * qr_co[78] + 1.0 * qf_co[91]) / HCO_denom;
  amrex::Real HCO_CH2D = (epsilon + 1.0 * qf_co[40]) / HCO_denom;
  amrex::Real HCO_CH2 =
    (epsilon + 1.0 * qf_co[29] + 1.0 * qf_co[30]) / HCO_denom;
  amrex::Real HCO_CH =
    (epsilon + 1.0 * qf_co[18] + 1.0 * qf_co[21] + 1.0 * qf_co[22]) / HCO_denom;

  // QSSA species 2: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[39] + 1.0 * qr_co[41] +
                         1.0 * qr_co[42] + 1.0 * qr_co[43] + 1.0 * qr_co[44] +
                         1.0 * qr_co[48] + 1.0 * qf_co[56] + 1.0 * qr_co[63] +
                         1.0 * qr_co[73] + 1.0 * qf_co[74] + 1.0 * qr_co[113];
  amrex::Real CH2D_denom =
    epsilon - qf_co[37] - qf_co[38] - qf_co[39] - qf_co[40] - qf_co[41] -
    qf_co[42] - qf_co[43] - qf_co[44] - qf_co[45] - qf_co[46] - qf_co[47] -
    qf_co[48] - qr_co[56] - qf_co[63] - qr_co[67] - qf_co[73] - qr_co[74] -
    qf_co[112] - qf_co[113] - qf_co[128];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_CH3O = (epsilon + 1.0 * qf_co[67]) / CH2D_denom;
  amrex::Real CH2D_C2H5 = (epsilon + 1.0 * qr_co[128]) / CH2D_denom;
  amrex::Real CH2D_H2CC = (epsilon + 1.0 * qr_co[112]) / CH2D_denom;
  amrex::Real CH2D_HCO = (epsilon + 1.0 * qr_co[40]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[37] + 1.0 * qr_co[45] +
                          1.0 * qr_co[46] + 1.0 * qr_co[47]) /
                         CH2D_denom;
  amrex::Real CH2D_CH = (epsilon + 1.0 * qr_co[38]) / CH2D_denom;

  // QSSA species 1: CH2

  amrex::Real CH2_num =
    epsilon + 1.0 * qr_co[2] + 1.0 * qr_co[3] + 1.0 * qr_co[28] +
    1.0 * qr_co[31] + 1.0 * qr_co[32] + 1.0 * qr_co[34] + 1.0 * qr_co[35] +
    2.0 * qr_co[36] + 1.0 * qf_co[55] + 1.0 * qr_co[62] + 1.0 * qr_co[72] +
    1.0 * qf_co[77] + 1.0 * qf_co[83] + 1.0 * qf_co[107] + 1.0 * qr_co[111];
  amrex::Real CH2_denom =
    epsilon - qf_co[2] - qf_co[3] - qr_co[19] - qf_co[28] - qf_co[29] -
    qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] - qf_co[34] - qf_co[36] -
    qr_co[37] - qr_co[45] - qr_co[46] - qr_co[47] - qr_co[55] - qf_co[62] -
    qf_co[72] - qf_co[76] - qr_co[77] - qr_co[80] - qr_co[82] - qr_co[83] -
    qr_co[107] - qf_co[111];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_H2CC =
    (epsilon + 1.0 * qf_co[80] + 1.0 * qf_co[82]) / CH2_denom;
  amrex::Real CH2_C2H3 = (epsilon + 1.0 * qr_co[76]) / CH2_denom;
  amrex::Real CH2_HCO =
    (epsilon + 1.0 * qr_co[29] + 1.0 * qr_co[30]) / CH2_denom;
  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[37] + 1.0 * qf_co[45] +
                          1.0 * qf_co[46] + 1.0 * qf_co[47]) /
                         CH2_denom;
  amrex::Real CH2_CH =
    (epsilon + 1.0 * qf_co[19] + 1.0 * qr_co[33]) / CH2_denom;

  // QSSA species 0: CH

  amrex::Real CH_num = epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[17] +
                       1.0 * qr_co[20] + 1.0 * qr_co[35] + 1.0 * qr_co[54] +
                       1.0 * qr_co[71] + 1.0 * qr_co[75];
  amrex::Real CH_denom = epsilon - qf_co[0] - qf_co[17] - qf_co[18] -
                         qf_co[19] - qf_co[20] - qf_co[21] - qf_co[22] -
                         qr_co[33] - qr_co[38] - qf_co[54] - qf_co[59] -
                         qf_co[71] - qf_co[75];
  amrex::Real CH_rhs = -CH_num / CH_denom;

  amrex::Real CH_C2H3 = (epsilon + 1.0 * qr_co[59]) / CH_denom;
  amrex::Real CH_HCO =
    (epsilon + 1.0 * qr_co[18] + 1.0 * qr_co[21] + 1.0 * qr_co[22]) / CH_denom;
  amrex::Real CH_CH2D = (epsilon + 1.0 * qf_co[38]) / CH_denom;
  amrex::Real CH_CH2 = (epsilon + 1.0 * qr_co[19] + 1.0 * qf_co[33]) / CH_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_CH3O;
  amrex::Real H_1 = C2H5_nC3H7;
  amrex::Real H_2 = HCO_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_3 = CH2D_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_4 = C2H3_CH2CHO;
  amrex::Real H_5 = HCO_CH2CHO;
  amrex::Real H_6 = C2H3_H2CC;
  amrex::Real H_7 = CH2D_H2CC;
  amrex::Real H_8 = CH2_H2CC;
  amrex::Real H_9 = (HCO_C2H3 - CH2CHO_C2H3 * H_5) /
                    ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_10 =
    (CH2_C2H3 - H2CC_C2H3 * H_8) / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_11 = CH_C2H3 / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_12 =
    (CH2D_HCO - C2H5_HCO * H_3) / (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                                   (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_13 = (CH2_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_10) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_14 = (CH_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_11) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_15 =
    ((CH2_CH2D - H2CC_CH2D * H_8) - (HCO_CH2D - C2H5_CH2D * H_2) * H_13) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_16 =
    (CH_CH2D - (HCO_CH2D - C2H5_CH2D * H_2) * H_14) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_17 =
    (((CH_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_11) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_14) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_16) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);
  sc_qss[0] =
    ((((CH_rhs - ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_11) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_14) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_16) -
     ((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) *
       H_17) /
    ((((1 - C2H3_CH * H_11) - (HCO_CH - C2H3_CH * H_9) * H_14) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_16) -
     (((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
       H_17);

  sc_qss[1] =
    (((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) -
     ((((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
       (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
      sc_qss[0])) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);

  sc_qss[2] =
    (((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
       H2CC_rhs * H_7) -
      (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
       ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
        H_12) -
     ((CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * sc_qss[0] +
      ((CH2D_CH2 - H2CC_CH2 * H_7) -
       (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
        sc_qss[1])) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);

  sc_qss[3] =
    ((((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
      ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) -
     ((HCO_CH - C2H3_CH * H_9) * sc_qss[0] +
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * sc_qss[1] +
      (HCO_CH2D - C2H5_CH2D * H_2) * sc_qss[2])) /
    (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
     (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);

  sc_qss[6] = (((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) -
               (C2H3_CH * sc_qss[0] + (C2H3_CH2 - H2CC_CH2 * H_6) * sc_qss[1] +
                (C2H3_HCO - CH2CHO_HCO * H_4) * sc_qss[3])) /
              ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);

  sc_qss[5] = H2CC_rhs - (+H2CC_CH2 * sc_qss[1] + H2CC_CH2D * sc_qss[2] +
                          H2CC_C2H3 * sc_qss[6]);

  sc_qss[8] = CH2CHO_rhs - (+CH2CHO_HCO * sc_qss[3] + CH2CHO_C2H3 * sc_qss[6]);

  sc_qss[7] = ((C2H5_rhs - nC3H7_rhs * H_1) -
               (+C2H5_CH2D * sc_qss[2] + C2H5_HCO * sc_qss[3])) /
              (1 - nC3H7_C2H5 * H_1);

  sc_qss[9] = nC3H7_rhs - (+nC3H7_C2H5 * sc_qss[7]);

  sc_qss[4] = CH3O_rhs - (+CH3O_CH2D * sc_qss[2]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real T,
  const amrex::Real invT,
  const amrex::Real logT)
{

  // reaction 0: 2 OH (+M) <=> H2O2 (+M)
  qf[0] = (sc[4] * sc[4]);
  qr[0] = sc[7];

  // reaction 1: CO + H2 (+M) <=> CH2O (+M)
  qf[1] = sc[0] * sc[10];
  qr[1] = sc[12];

  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  qf[2] = sc[10] * sc_qss[0];
  qr[2] = sc[16];

  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc_qss[3];
  qr[3] = sc[12];

  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc_qss[1];
  qr[4] = sc[8];

  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  qf[5] = sc[10] * sc_qss[1];
  qr[5] = sc[17];

  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  qf[6] = sc[1] * sc[12];
  qr[6] = sc_qss[4];

  // reaction 7: CH3 + H (+M) <=> CH4 (+M)
  qf[7] = sc[1] * sc[8];
  qr[7] = sc[9];

  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  qf[8] = sc[8] * sc_qss[3];
  qr[8] = sc[18];

  // reaction 9: 2 CH3 (+M) <=> C2H6 (+M)
  qf[9] = (sc[8] * sc[8]);
  qr[9] = sc[15];

  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  qf[10] = sc_qss[6];
  qr[10] = sc[1] * sc[13];

  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[11] = sc[1] * sc[17];
  qr[11] = sc_qss[8];

  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  qf[12] = sc[1] * sc_qss[6];
  qr[12] = sc[14];

  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[13] = sc[8] * sc_qss[6];
  qr[13] = sc[20];

  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  qf[14] = sc[1] * sc_qss[8];
  qr[14] = sc[18];

  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  qf[15] = sc[14];
  qr[15] = sc[0] * sc_qss[5];

  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  qf[16] = sc[1] * sc[14];
  qr[16] = sc_qss[7];

  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  qf[17] = sc[1] * sc_qss[7];
  qr[17] = sc[15];

  // reaction 18: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[18] = sc[1] * sc[19];
  qr[18] = sc[20];

  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[19] = sc[1] * sc[20];
  qr[19] = sc_qss[9];

  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  qf[20] = sc[13];
  qr[20] = sc_qss[5];

  // reaction 21: 2 H + M <=> H2 + M
  qf[21] = (sc[1] * sc[1]);
  qr[21] = sc[0];

  // reaction 22: 2 H + H2 <=> H2 + H2
  qf[22] = sc[0] * (sc[1] * sc[1]);
  qr[22] = (sc[0] * sc[0]);

  // reaction 23: 2 H + H2O <=> H2 + H2O
  qf[23] = (sc[1] * sc[1]) * sc[5];
  qr[23] = sc[0] * sc[5];

  // reaction 24: 2 H + CO2 <=> H2 + CO2
  qf[24] = (sc[1] * sc[1]) * sc[11];
  qr[24] = sc[0] * sc[11];

  // reaction 25: H + OH + M <=> H2O + M
  qf[25] = sc[1] * sc[4];
  qr[25] = sc[5];

  // reaction 26: H + O + M <=> OH + M
  qf[26] = sc[1] * sc[2];
  qr[26] = sc[4];

  // reaction 27: 2 O + M <=> O2 + M
  qf[27] = (sc[2] * sc[2]);
  qr[27] = sc[3];

  // reaction 28: H + O2 + M <=> HO2 + M
  qf[28] = sc[1] * sc[3];
  qr[28] = sc[6];

  // reaction 29: H + O2 + O2 <=> HO2 + O2
  qf[29] = sc[1] * (sc[3] * sc[3]);
  qr[29] = sc[3] * sc[6];

  // reaction 30: H + O2 + H2O <=> HO2 + H2O
  qf[30] = sc[1] * sc[3] * sc[5];
  qr[30] = sc[5] * sc[6];

  // reaction 31: H + O2 + N2 <=> HO2 + N2
  qf[31] = sc[1] * sc[3] * sc[21];
  qr[31] = sc[6] * sc[21];

  // reaction 32: CO + O + M <=> CO2 + M
  qf[32] = sc[2] * sc[10];
  qr[32] = sc[11];

  // reaction 33: HCO + M <=> CO + H + M
  qf[33] = sc_qss[3];
  qr[33] = sc[1] * sc[10];

  // reaction 34: C2H2 + CH3 + M <=> aC3H5 + M
  qf[34] = sc[8] * sc[13];
  qr[34] = sc[19];

  // reaction 35: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[3];
  qr[35] = sc[2] * sc[4];

  // reaction 36: H2 + O <=> H + OH
  qf[36] = sc[0] * sc[2];
  qr[36] = sc[1] * sc[4];

  // reaction 37: H2 + OH <=> H + H2O
  qf[37] = sc[0] * sc[4];
  qr[37] = sc[1] * sc[5];

  // reaction 38: 2 OH <=> H2O + O
  qf[38] = (sc[4] * sc[4]);
  qr[38] = sc[2] * sc[5];

  // reaction 39: H + HO2 <=> H2O + O
  qf[39] = sc[1] * sc[6];
  qr[39] = sc[2] * sc[5];

  // reaction 40: H + HO2 <=> H2 + O2
  qf[40] = sc[1] * sc[6];
  qr[40] = sc[0] * sc[3];

  // reaction 41: H + HO2 <=> 2 OH
  qf[41] = sc[1] * sc[6];
  qr[41] = (sc[4] * sc[4]);

  // reaction 42: HO2 + O <=> O2 + OH
  qf[42] = sc[2] * sc[6];
  qr[42] = sc[3] * sc[4];

  // reaction 43: HO2 + OH <=> H2O + O2
  qf[43] = sc[4] * sc[6];
  qr[43] = sc[3] * sc[5];

  // reaction 44: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[6] * sc[6]);
  qr[44] = sc[3] * sc[7];

  // reaction 45: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[6] * sc[6]);
  qr[45] = sc[3] * sc[7];

  // reaction 46: H + H2O2 <=> H2 + HO2
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[0] * sc[6];

  // reaction 47: H + H2O2 <=> H2O + OH
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 48: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[4] * sc[6];

  // reaction 49: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[4] * sc[7];
  qr[49] = sc[5] * sc[6];

  // reaction 50: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[4] * sc[7];
  qr[50] = sc[5] * sc[6];

  // reaction 51: CO + OH <=> CO2 + H
  qf[51] = sc[4] * sc[10];
  qr[51] = sc[1] * sc[11];

  // reaction 52: CO + O2 <=> CO2 + O
  qf[52] = sc[3] * sc[10];
  qr[52] = sc[2] * sc[11];

  // reaction 53: CO + HO2 <=> CO2 + OH
  qf[53] = sc[6] * sc[10];
  qr[53] = sc[4] * sc[11];

  // reaction 54: CH + O <=> CO + H
  qf[54] = sc[2] * sc_qss[0];
  qr[54] = sc[1] * sc[10];

  // reaction 55: CH + OH <=> H + HCO
  qf[55] = sc[4] * sc_qss[0];
  qr[55] = sc[1] * sc_qss[3];

  // reaction 56: CH + H2 <=> CH2 + H
  qf[56] = sc[0] * sc_qss[0];
  qr[56] = sc[1] * sc_qss[1];

  // reaction 57: CH + H2O <=> CH2O + H
  qf[57] = sc[5] * sc_qss[0];
  qr[57] = sc[1] * sc[12];

  // reaction 58: CH + O2 <=> HCO + O
  qf[58] = sc[3] * sc_qss[0];
  qr[58] = sc[2] * sc_qss[3];

  // reaction 59: CH + CO2 <=> CO + HCO
  qf[59] = sc[11] * sc_qss[0];
  qr[59] = sc[10] * sc_qss[3];

  // reaction 60: H + HCO <=> CO + H2
  qf[60] = sc[1] * sc_qss[3];
  qr[60] = sc[0] * sc[10];

  // reaction 61: HCO + O <=> CO + OH
  qf[61] = sc[2] * sc_qss[3];
  qr[61] = sc[4] * sc[10];

  // reaction 62: HCO + O <=> CO2 + H
  qf[62] = sc[2] * sc_qss[3];
  qr[62] = sc[1] * sc[11];

  // reaction 63: HCO + OH <=> CO + H2O
  qf[63] = sc[4] * sc_qss[3];
  qr[63] = sc[5] * sc[10];

  // reaction 64: HCO + O2 <=> CO + HO2
  qf[64] = sc[3] * sc_qss[3];
  qr[64] = sc[6] * sc[10];

  // reaction 65: CH2 + H2 <=> CH3 + H
  qf[65] = sc[0] * sc_qss[1];
  qr[65] = sc[1] * sc[8];

  // reaction 66: CH2 + O <=> H + HCO
  qf[66] = sc[2] * sc_qss[1];
  qr[66] = sc[1] * sc_qss[3];

  // reaction 67: CH2 + O2 <=> HCO + OH
  qf[67] = sc[3] * sc_qss[1];
  qr[67] = sc[4] * sc_qss[3];

  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  qf[68] = sc[3] * sc_qss[1];
  qr[68] = (sc[1] * sc[1]) * sc[11];

  // reaction 69: CH2 + OH <=> CH2O + H
  qf[69] = sc[4] * sc_qss[1];
  qr[69] = sc[1] * sc[12];

  // reaction 70: CH2 + OH <=> CH + H2O
  qf[70] = sc[4] * sc_qss[1];
  qr[70] = sc[5] * sc_qss[0];

  // reaction 71: CH2 + HO2 <=> CH2O + OH
  qf[71] = sc[6] * sc_qss[1];
  qr[71] = sc[4] * sc[12];

  // reaction 72: CH + CH2 <=> C2H2 + H
  qf[72] = sc_qss[0] * sc_qss[1];
  qr[72] = sc[1] * sc[13];

  // reaction 73: 2 CH2 <=> C2H2 + H2
  qf[73] = sc_qss[1] * sc_qss[1];
  qr[73] = sc[0] * sc[13];

  // reaction 74: CH2* + N2 <=> CH2 + N2
  qf[74] = sc[21] * sc_qss[2];
  qr[74] = sc[21] * sc_qss[1];

  // reaction 75: CH2* + H <=> CH + H2
  qf[75] = sc[1] * sc_qss[2];
  qr[75] = sc[0] * sc_qss[0];

  // reaction 76: CH2* + O <=> CO + H2
  qf[76] = sc[2] * sc_qss[2];
  qr[76] = sc[0] * sc[10];

  // reaction 77: CH2* + O <=> H + HCO
  qf[77] = sc[2] * sc_qss[2];
  qr[77] = sc[1] * sc_qss[3];

  // reaction 78: CH2* + OH <=> CH2O + H
  qf[78] = sc[4] * sc_qss[2];
  qr[78] = sc[1] * sc[12];

  // reaction 79: CH2* + H2 <=> CH3 + H
  qf[79] = sc[0] * sc_qss[2];
  qr[79] = sc[1] * sc[8];

  // reaction 80: CH2* + O2 <=> CO + H + OH
  qf[80] = sc[3] * sc_qss[2];
  qr[80] = sc[1] * sc[4] * sc[10];

  // reaction 81: CH2* + O2 <=> CO + H2O
  qf[81] = sc[3] * sc_qss[2];
  qr[81] = sc[5] * sc[10];

  // reaction 82: CH2* + H2O <=> CH2 + H2O
  qf[82] = sc[5] * sc_qss[2];
  qr[82] = sc[5] * sc_qss[1];

  // reaction 83: CH2* + CO <=> CH2 + CO
  qf[83] = sc[10] * sc_qss[2];
  qr[83] = sc[10] * sc_qss[1];

  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  qf[84] = sc[11] * sc_qss[2];
  qr[84] = sc[11] * sc_qss[1];

  // reaction 85: CH2* + CO2 <=> CH2O + CO
  qf[85] = sc[11] * sc_qss[2];
  qr[85] = sc[10] * sc[12];

  // reaction 86: CH2O + H <=> H2 + HCO
  qf[86] = sc[1] * sc[12];
  qr[86] = sc[0] * sc_qss[3];

  // reaction 87: CH2O + O <=> HCO + OH
  qf[87] = sc[2] * sc[12];
  qr[87] = sc[4] * sc_qss[3];

  // reaction 88: CH2O + OH <=> H2O + HCO
  qf[88] = sc[4] * sc[12];
  qr[88] = sc[5] * sc_qss[3];

  // reaction 89: CH2O + O2 <=> HCO + HO2
  qf[89] = sc[3] * sc[12];
  qr[89] = sc[6] * sc_qss[3];

  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  qf[90] = sc[6] * sc[12];
  qr[90] = sc[7] * sc_qss[3];

  // reaction 91: CH + CH2O <=> CH2CO + H
  qf[91] = sc[12] * sc_qss[0];
  qr[91] = sc[1] * sc[17];

  // reaction 92: CH3 + O <=> CH2O + H
  qf[92] = sc[2] * sc[8];
  qr[92] = sc[1] * sc[12];

  // reaction 93: CH3 + OH <=> CH2 + H2O
  qf[93] = sc[4] * sc[8];
  qr[93] = sc[5] * sc_qss[1];

  // reaction 94: CH3 + OH <=> CH2* + H2O
  qf[94] = sc[4] * sc[8];
  qr[94] = sc[5] * sc_qss[2];

  // reaction 95: CH3 + O2 <=> CH3O + O
  qf[95] = sc[3] * sc[8];
  qr[95] = sc[2] * sc_qss[4];

  // reaction 96: CH3 + O2 <=> CH2O + OH
  qf[96] = sc[3] * sc[8];
  qr[96] = sc[4] * sc[12];

  // reaction 97: CH3 + HO2 <=> CH4 + O2
  qf[97] = sc[6] * sc[8];
  qr[97] = sc[3] * sc[9];

  // reaction 98: CH3 + HO2 <=> CH3O + OH
  qf[98] = sc[6] * sc[8];
  qr[98] = sc[4] * sc_qss[4];

  // reaction 99: CH3 + H2O2 <=> CH4 + HO2
  qf[99] = sc[7] * sc[8];
  qr[99] = sc[6] * sc[9];

  // reaction 100: CH + CH3 <=> C2H3 + H
  qf[100] = sc[8] * sc_qss[0];
  qr[100] = sc[1] * sc_qss[6];

  // reaction 101: CH3 + HCO <=> CH4 + CO
  qf[101] = sc[8] * sc_qss[3];
  qr[101] = sc[9] * sc[10];

  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  qf[102] = sc[8] * sc[12];
  qr[102] = sc[9] * sc_qss[3];

  // reaction 103: CH2 + CH3 <=> C2H4 + H
  qf[103] = sc[8] * sc_qss[1];
  qr[103] = sc[1] * sc[14];

  // reaction 104: CH2* + CH3 <=> C2H4 + H
  qf[104] = sc[8] * sc_qss[2];
  qr[104] = sc[1] * sc[14];

  // reaction 105: 2 CH3 <=> C2H5 + H
  qf[105] = (sc[8] * sc[8]);
  qr[105] = sc[1] * sc_qss[7];

  // reaction 106: CH3 + HCCO <=> C2H4 + CO
  qf[106] = sc[8] * sc[16];
  qr[106] = sc[10] * sc[14];

  // reaction 107: CH3O + H <=> CH2O + H2
  qf[107] = sc[1] * sc_qss[4];
  qr[107] = sc[0] * sc[12];

  // reaction 108: CH3O + H <=> CH3 + OH
  qf[108] = sc[1] * sc_qss[4];
  qr[108] = sc[4] * sc[8];

  // reaction 109: CH3O + H <=> CH2* + H2O
  qf[109] = sc[1] * sc_qss[4];
  qr[109] = sc[5] * sc_qss[2];

  // reaction 110: CH3O + O <=> CH2O + OH
  qf[110] = sc[2] * sc_qss[4];
  qr[110] = sc[4] * sc[12];

  // reaction 111: CH3O + OH <=> CH2O + H2O
  qf[111] = sc[4] * sc_qss[4];
  qr[111] = sc[5] * sc[12];

  // reaction 112: CH3O + O2 <=> CH2O + HO2
  qf[112] = sc[3] * sc_qss[4];
  qr[112] = sc[6] * sc[12];

  // reaction 113: CH4 + H <=> CH3 + H2
  qf[113] = sc[1] * sc[9];
  qr[113] = sc[0] * sc[8];

  // reaction 114: CH4 + O <=> CH3 + OH
  qf[114] = sc[2] * sc[9];
  qr[114] = sc[4] * sc[8];

  // reaction 115: CH4 + OH <=> CH3 + H2O
  qf[115] = sc[4] * sc[9];
  qr[115] = sc[5] * sc[8];

  // reaction 116: CH + CH4 <=> C2H4 + H
  qf[116] = sc[9] * sc_qss[0];
  qr[116] = sc[1] * sc[14];

  // reaction 117: CH2 + CH4 <=> 2 CH3
  qf[117] = sc[9] * sc_qss[1];
  qr[117] = (sc[8] * sc[8]);

  // reaction 118: CH2* + CH4 <=> 2 CH3
  qf[118] = sc[9] * sc_qss[2];
  qr[118] = (sc[8] * sc[8]);

  // reaction 119: H + HCCO <=> CH2* + CO
  qf[119] = sc[1] * sc[16];
  qr[119] = sc[10] * sc_qss[2];

  // reaction 120: HCCO + O <=> 2 CO + H
  qf[120] = sc[2] * sc[16];
  qr[120] = sc[1] * (sc[10] * sc[10]);

  // reaction 121: HCCO + O2 <=> 2 CO + OH
  qf[121] = sc[3] * sc[16];
  qr[121] = sc[4] * (sc[10] * sc[10]);

  // reaction 122: CH + HCCO <=> C2H2 + CO
  qf[122] = sc[16] * sc_qss[0];
  qr[122] = sc[10] * sc[13];

  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  qf[123] = sc[16] * sc_qss[1];
  qr[123] = sc[10] * sc_qss[6];

  // reaction 124: 2 HCCO <=> C2H2 + 2 CO
  qf[124] = (sc[16] * sc[16]);
  qr[124] = (sc[10] * sc[10]) * sc[13];

  // reaction 125: C2H2 + O <=> H + HCCO
  qf[125] = sc[2] * sc[13];
  qr[125] = sc[1] * sc[16];

  // reaction 126: C2H2 + O <=> CH2 + CO
  qf[126] = sc[2] * sc[13];
  qr[126] = sc[10] * sc_qss[1];

  // reaction 127: C2H2 + OH <=> CH2CO + H
  qf[127] = sc[4] * sc[13];
  qr[127] = sc[1] * sc[17];

  // reaction 128: C2H2 + OH <=> CH3 + CO
  qf[128] = sc[4] * sc[13];
  qr[128] = sc[8] * sc[10];

  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  qf[129] = sc[13] * sc_qss[3];
  qr[129] = sc[10] * sc_qss[6];

  // reaction 130: H + H2CC <=> C2H2 + H
  qf[130] = sc[1] * sc_qss[5];
  qr[130] = sc[1] * sc[13];

  // reaction 131: H2CC + O <=> CH2 + CO
  qf[131] = sc[2] * sc_qss[5];
  qr[131] = sc[10] * sc_qss[1];

  // reaction 132: H2CC + OH <=> CH2CO + H
  qf[132] = sc[4] * sc_qss[5];
  qr[132] = sc[1] * sc[17];

  // reaction 133: H2CC + O2 <=> CH2 + CO2
  qf[133] = sc[3] * sc_qss[5];
  qr[133] = sc[11] * sc_qss[1];

  // reaction 134: CH2CO + H <=> H2 + HCCO
  qf[134] = sc[1] * sc[17];
  qr[134] = sc[0] * sc[16];

  // reaction 135: CH2CO + H <=> CH3 + CO
  qf[135] = sc[1] * sc[17];
  qr[135] = sc[8] * sc[10];

  // reaction 136: CH2CO + O <=> HCCO + OH
  qf[136] = sc[2] * sc[17];
  qr[136] = sc[4] * sc[16];

  // reaction 137: CH2CO + O <=> CH2 + CO2
  qf[137] = sc[2] * sc[17];
  qr[137] = sc[11] * sc_qss[1];

  // reaction 138: CH2CO + OH <=> H2O + HCCO
  qf[138] = sc[4] * sc[17];
  qr[138] = sc[5] * sc[16];

  // reaction 139: C2H3 + H <=> C2H2 + H2
  qf[139] = sc[1] * sc_qss[6];
  qr[139] = sc[0] * sc[13];

  // reaction 140: C2H3 + H <=> H2 + H2CC
  qf[140] = sc[1] * sc_qss[6];
  qr[140] = sc[0] * sc_qss[5];

  // reaction 141: C2H3 + O <=> CH2CO + H
  qf[141] = sc[2] * sc_qss[6];
  qr[141] = sc[1] * sc[17];

  // reaction 142: C2H3 + O <=> CH3 + CO
  qf[142] = sc[2] * sc_qss[6];
  qr[142] = sc[8] * sc[10];

  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  qf[143] = sc[4] * sc_qss[6];
  qr[143] = sc[5] * sc[13];

  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  qf[144] = sc[3] * sc_qss[6];
  qr[144] = sc[6] * sc[13];

  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  qf[145] = sc[3] * sc_qss[6];
  qr[145] = sc[2] * sc_qss[8];

  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  qf[146] = sc[3] * sc_qss[6];
  qr[146] = sc[12] * sc_qss[3];

  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  qf[147] = sc[6] * sc_qss[6];
  qr[147] = sc[4] * sc_qss[8];

  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  qf[148] = sc[7] * sc_qss[6];
  qr[148] = sc[6] * sc[14];

  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  qf[149] = sc_qss[3] * sc_qss[6];
  qr[149] = sc[10] * sc[14];

  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  qf[150] = sc[8] * sc_qss[6];
  qr[150] = sc[9] * sc[13];

  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  qf[151] = sc[8] * sc_qss[6];
  qr[151] = sc[1] * sc[19];

  // reaction 152: CH2CHO <=> CH3 + CO
  qf[152] = sc_qss[8];
  qr[152] = sc[8] * sc[10];

  // reaction 153: CH2CHO + H <=> CH3 + HCO
  qf[153] = sc[1] * sc_qss[8];
  qr[153] = sc[8] * sc_qss[3];

  // reaction 154: CH2CHO + H <=> CH2CO + H2
  qf[154] = sc[1] * sc_qss[8];
  qr[154] = sc[0] * sc[17];

  // reaction 155: CH2CHO + O <=> CH2CO + OH
  qf[155] = sc[2] * sc_qss[8];
  qr[155] = sc[4] * sc[17];

  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  qf[156] = sc[4] * sc_qss[8];
  qr[156] = sc[5] * sc[17];

  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  qf[157] = sc[3] * sc_qss[8];
  qr[157] = sc[6] * sc[17];

  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  qf[158] = sc[3] * sc_qss[8];
  qr[158] = sc[4] * sc[10] * sc[12];

  // reaction 159: C2H4 + H <=> C2H3 + H2
  qf[159] = sc[1] * sc[14];
  qr[159] = sc[0] * sc_qss[6];

  // reaction 160: C2H4 + O <=> C2H3 + OH
  qf[160] = sc[2] * sc[14];
  qr[160] = sc[4] * sc_qss[6];

  // reaction 161: C2H4 + O <=> CH3 + HCO
  qf[161] = sc[2] * sc[14];
  qr[161] = sc[8] * sc_qss[3];

  // reaction 162: C2H4 + O <=> CH2 + CH2O
  qf[162] = sc[2] * sc[14];
  qr[162] = sc[12] * sc_qss[1];

  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  qf[163] = sc[4] * sc[14];
  qr[163] = sc[5] * sc_qss[6];

  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  qf[164] = sc[3] * sc[14];
  qr[164] = sc[6] * sc_qss[6];

  // reaction 165: C2H4 + HO2 <=> CH3CHO + OH
  qf[165] = sc[6] * sc[14];
  qr[165] = sc[4] * sc[18];

  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  qf[166] = sc[14] * sc_qss[3];
  qr[166] = sc[10] * sc_qss[7];

  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  qf[167] = sc[14] * sc_qss[1];
  qr[167] = sc[1] * sc[19];

  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  qf[168] = sc[14] * sc_qss[2];
  qr[168] = sc[9] * sc_qss[5];

  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  qf[169] = sc[14] * sc_qss[2];
  qr[169] = sc[1] * sc[19];

  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  qf[170] = sc[8] * sc[14];
  qr[170] = sc[9] * sc_qss[6];

  // reaction 171: C2H4 + CH3 <=> nC3H7
  qf[171] = sc[8] * sc[14];
  qr[171] = sc_qss[9];

  // reaction 172: C2H5 + H <=> C2H4 + H2
  qf[172] = sc[1] * sc_qss[7];
  qr[172] = sc[0] * sc[14];

  // reaction 173: C2H5 + O <=> CH2O + CH3
  qf[173] = sc[2] * sc_qss[7];
  qr[173] = sc[8] * sc[12];

  // reaction 174: C2H5 + O <=> CH3CHO + H
  qf[174] = sc[2] * sc_qss[7];
  qr[174] = sc[1] * sc[18];

  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  qf[175] = sc[3] * sc_qss[7];
  qr[175] = sc[6] * sc[14];

  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  qf[176] = sc[6] * sc_qss[7];
  qr[176] = sc[3] * sc[15];

  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  qf[177] = sc[6] * sc_qss[7];
  qr[177] = sc[7] * sc[14];

  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[178] = sc[6] * sc_qss[7];
  qr[178] = sc[4] * sc[8] * sc[12];

  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  qf[179] = sc[7] * sc_qss[7];
  qr[179] = sc[6] * sc[15];

  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  qf[180] = sc_qss[3] * sc_qss[7];
  qr[180] = sc[10] * sc[15];

  // reaction 181: C2H6 + H <=> C2H5 + H2
  qf[181] = sc[1] * sc[15];
  qr[181] = sc[0] * sc_qss[7];

  // reaction 182: C2H6 + O <=> C2H5 + OH
  qf[182] = sc[2] * sc[15];
  qr[182] = sc[4] * sc_qss[7];

  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  qf[183] = sc[4] * sc[15];
  qr[183] = sc[5] * sc_qss[7];

  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  qf[184] = sc[15] * sc_qss[2];
  qr[184] = sc[8] * sc_qss[7];

  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  qf[185] = sc[8] * sc[15];
  qr[185] = sc[9] * sc_qss[7];

  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  qf[186] = sc[1] * sc[19];
  qr[186] = sc[9] * sc_qss[5];

  // reaction 187: HO2 + aC3H5 <=> C3H6 + O2
  qf[187] = sc[6] * sc[19];
  qr[187] = sc[3] * sc[20];

  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[188] = sc[6] * sc[19];
  qr[188] = sc[4] * sc[12] * sc_qss[6];

  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  qf[189] = sc[19] * sc_qss[3];
  qr[189] = sc[10] * sc[20];

  // reaction 190: C3H6 + H <=> C2H4 + CH3
  qf[190] = sc[1] * sc[20];
  qr[190] = sc[8] * sc[14];

  // reaction 191: C3H6 + H <=> H2 + aC3H5
  qf[191] = sc[1] * sc[20];
  qr[191] = sc[0] * sc[19];

  // reaction 192: C3H6 + O <=> CH2CO + CH3 + H
  qf[192] = sc[2] * sc[20];
  qr[192] = sc[1] * sc[8] * sc[17];

  // reaction 193: C3H6 + O => C2H5 + HCO
  qf[193] = sc[2] * sc[20];
  qr[193] = 0.0;

  // reaction 194: C3H6 + O <=> OH + aC3H5
  qf[194] = sc[2] * sc[20];
  qr[194] = sc[4] * sc[19];

  // reaction 195: C3H6 + OH <=> H2O + aC3H5
  qf[195] = sc[4] * sc[20];
  qr[195] = sc[5] * sc[19];

  // reaction 196: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[196] = sc[6] * sc[20];
  qr[196] = sc[7] * sc[19];

  // reaction 197: C3H6 + CH3 <=> CH4 + aC3H5
  qf[197] = sc[8] * sc[20];
  qr[197] = sc[9] * sc[19];

  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  qf[198] = sc[1] * sc_qss[9];
  qr[198] = sc[8] * sc_qss[7];

  // reaction 199: H + nC3H7 <=> C3H6 + H2
  qf[199] = sc[1] * sc_qss[9];
  qr[199] = sc[0] * sc[20];

  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  qf[200] = sc[2] * sc_qss[9];
  qr[200] = sc[12] * sc_qss[7];

  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  qf[201] = sc[4] * sc_qss[9];
  qr[201] = sc[5] * sc[20];

  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  qf[202] = sc[3] * sc_qss[9];
  qr[202] = sc[6] * sc[20];

  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[203] = sc[6] * sc_qss[9];
  qr[203] = sc[4] * sc[12] * sc_qss[7];

  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  qf[204] = sc[8] * sc_qss[9];
  qr[204] = sc[9] * sc[20];

  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[205] = sc_qss[6] * sc_qss[7];
  qr[205] = sc[8] * sc[19];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 10; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, T);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  2 OH (+M) <=> H2O2 (+M)
  k_f = 74000000 * exp((-0.37) * logT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2300000 * exp(-0.9 * logT - (-855.468331868023) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-T * 0.0106382978723404) +
    0.7346 * exp(-T * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC);
  // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * logT - (40056.0465980557) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * logT - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-T * 0.0050761421319797) +
    0.932 * exp(-T * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC);
  // reaction 2:  CH + CO (+M) <=> HCCO (+M)
  k_f = 50000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+16 * exp(-3.74 * logT - (974.227464997937) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-T * 0.00421940928270042) +
    0.5757 * exp(-T * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC);
  // reaction 3:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * logT - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-T * 0.003690036900369) +
    0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC);
  // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * logT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * logT - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-T * 0.0128205128205128) +
    0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC);
  // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * logT - (2269.50716277929) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * logT - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-T * 0.00363636363636364) +
    0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC);
  // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * logT - (1308.36333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * logT - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-T * 0.0106382978723404) +
    0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC);
  // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * logT - (192.731983003208) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.477e+21 * exp(-4.76 * logT - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-T * 0.0135135135135135) +
    0.783 * exp(-T * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f = 18000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+36 * exp(-9.588 * logT - (2566.40499560407) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.3827) * exp(-T * 0.0764759865402264) +
    0.6173 * exp(-T * 0.000481231953801732) + exp(-5093 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC);
  // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * logT - (311.994332798926) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * logT - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-T * 0.00662251655629139) +
    0.5325 * exp(-T * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC);
  // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * logT - (18643.2817423997) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * logT - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-T * 0.000185745862510913) +
    1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) * (refCinv);
  // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * logT - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
    exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC);
  // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * logT - (140.900666425322) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * logT - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-T * 0.00481927710843374) +
    0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC);
  // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 4.27e+46 * exp(-11.94 * logT - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-T * 0.000745934656124124) +
    0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC);
  // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f = 100000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.2e+27 * exp(-7.297 * logT - (2365.11832928218) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.45) * exp(-T * 0.000112359550561798) +
    0.55 * exp(-T * 0.000229885057471264) + exp(-7244 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC);
  // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
  k_f = 8000000000000 * exp((0.44) * logT - (44670.543423485) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 7e+44 * exp(-9.31 * logT - (50251.2162472593) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2655) * exp(-T * 0.00555555555555556) +
    0.7345 * exp(-T * 0.000966183574879227) + exp(-5417 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) * (refCinv);
  // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1080000 * exp((0.454) * logT - (915.85433176459) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.2e+30 * exp(-7.62 * logT - (3507.4201606589) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0247000000000001) * exp(-T * 0.00476190476190476) +
    0.9753 * exp(-T * 0.00101626016260163) + exp(-4374 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC);
  // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * logT - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
    exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC);
  // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * logT - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-T * 0.000911909538573774) +
    0.02 * exp(-T * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[15];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * logT - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-T * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC);
  // reaction 20:  C2H2 (+M) <=> H2CC (+M)
  k_f = 800000000000000 * exp((-0.52) * logT - (25538.2457895895) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2450000000 * exp(-0.64 * logT - (25009.8682904946) * invT);
  Corr = redP / (1. + redP);
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5]));
  // reaction 21:  2 H + M <=> H2 + M
  k_f = 1000000 * exp((-1) * logT);
  Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] + (-1) * sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 22:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * logT);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 23:  2 H + H2O <=> H2 + H2O
  k_f = 60000000 * exp((-1.25) * logT);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 24:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * logT);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 25:  H + OH + M <=> H2O + M
  k_f = 22000000000 * exp((-2) * logT);
  Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] + sc[9] + (2) * sc[13] +
         (2) * sc[14] + (2) * sc[15];
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 26:  H + O + M <=> OH + M
  k_f = 500000 * exp((-1) * logT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 27:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * logT);
  Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] + (0.75) * sc[10] +
         (2.6) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 28:  H + O2 + M <=> HO2 + M
  k_f = 2800000 * exp((-0.86) * logT);
  Corr = mixture + (-1) * sc[3] + (-1) * sc[5] + (-0.25) * sc[10] +
         (0.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (0.5) * sc[15] +
         (-1) * sc[21];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 29:  H + O2 + O2 <=> HO2 + O2
  k_f = 300000000 * exp((-1.72) * logT);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 30:  H + O2 + H2O <=> HO2 + H2O
  k_f = 16520000 * exp((-0.76) * logT);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 31:  H + O2 + N2 <=> HO2 + N2
  k_f = 26000000 * exp((-1.24) * logT);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 32:  CO + O + M <=> CO2 + M
  k_f = 602 * exp(-(1509.64999741416) * invT);
  Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
         (2.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC);
  // reaction 33:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) * (refCinv);
  // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
  k_f = 2.2e+43 * exp((-11.82) * logT - (17979.9314692026) * invT);
  Corr = mixture;
  qf[34] *= Corr * k_f;
  qr[34] *= Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC);
  // reaction 35:  H + O2 <=> O + OH
  k_f = 83000000 * exp(-(7252.86180424342) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 36:  H2 + O <=> H + OH
  k_f = 0.05 * exp((2.67) * logT - (3165.23282791169) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 37:  H2 + OH <=> H + H2O
  k_f = 216 * exp((1.51) * logT - (1726.03316371019) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 38:  2 OH <=> H2O + O
  k_f = 0.0357 * exp((2.4) * logT - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 39:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6]));
  // reaction 40:  H + HO2 <=> H2 + O2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6]));
  // reaction 41:  H + HO2 <=> 2 OH
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6]));
  // reaction 42:  HO2 + O <=> O2 + OH
  k_f = 20000000;
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 43:  HO2 + OH <=> H2O + O2
  k_f = 46400000 * exp(-(-251.60833290236) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6]));
  // reaction 44:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 45:  2 HO2 <=> H2O2 + O2
  k_f = 420000000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 46:  H + H2O2 <=> H2 + HO2
  k_f = 12.1 * exp((2) * logT - (2616.72666218454) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7]));
  // reaction 47:  H + H2O2 <=> H2O + OH
  k_f = 10000000 * exp(-(1811.57999689699) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 48:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * logT - (2012.86666321888) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 49:  H2O2 + OH <=> H2O + HO2
  k_f = 1750000 * exp(-(161.02933305751) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 50:  H2O2 + OH <=> H2O + HO2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 51:  CO + OH <=> CO2 + H
  k_f = 47.6 * exp((1.228) * logT - (35.2251666063304) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11]));
  // reaction 52:  CO + O2 <=> CO2 + O
  k_f = 2500000 * exp(-(24053.7566254656) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11]));
  // reaction 53:  CO + HO2 <=> CO2 + OH
  k_f = 150000000 * exp(-(11875.9133129914) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11]));
  // reaction 54:  CH + O <=> CO + H
  k_f = 57000000;
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0]));
  // reaction 55:  CH + OH <=> H + HCO
  k_f = 30000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 56:  CH + H2 <=> CH2 + H
  k_f = 110.7 * exp((1.79) * logT - (840.371831893882) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1]));
  // reaction 57:  CH + H2O <=> CH2O + H
  k_f = 5710000 * exp(-(-379.928582682563) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0]));
  // reaction 58:  CH + O2 <=> HCO + O
  k_f = 33000000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 59:  CH + CO2 <=> CO + HCO
  k_f = 3400000 * exp(-(347.219499405257) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 60:  H + HCO <=> CO + H2
  k_f = 73400000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3]));
  // reaction 61:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3]));
  // reaction 62:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3]));
  // reaction 63:  HCO + OH <=> CO + H2O
  k_f = 50000000;
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3]));
  // reaction 64:  HCO + O2 <=> CO + HO2
  k_f = 7600000 * exp(-(201.286666321888) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3]));
  // reaction 65:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1]));
  // reaction 66:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 67:  CH2 + O2 <=> HCO + OH
  k_f = 10560000 * exp(-(754.82499870708) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 68:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f *
            exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
            (refCinv);
  // reaction 69:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1]));
  // reaction 70:  CH2 + OH <=> CH + H2O
  k_f = 11.3 * exp((2) * logT - (1509.64999741416) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 71:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1]));
  // reaction 72:  CH + CH2 <=> C2H2 + H
  k_f = 40000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1]));
  // reaction 73:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1]));
  // reaction 74:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 75:  CH2* + H <=> CH + H2
  k_f = 30000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2]));
  // reaction 76:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2]));
  // reaction 77:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3]));
  // reaction 78:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2]));
  // reaction 79:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2]));
  // reaction 80:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[80] *= k_f;
  qr[80] *= k_f *
            exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
            (refCinv);
  // reaction 81:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2]));
  // reaction 82:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 83:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 84:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 85:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2]));
  // reaction 86:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * logT - (1648.03458051046) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3]));
  // reaction 87:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3]));
  // reaction 88:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * logT - (-224.93784961471) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3]));
  // reaction 89:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3]));
  // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3]));
  // reaction 91:  CH + CH2O <=> CH2CO + H
  k_f = 94600000 * exp(-(-259.156582889431) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0]));
  // reaction 92:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12]));
  // reaction 93:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1]));
  // reaction 94:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2]));
  // reaction 95:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4]));
  // reaction 96:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 97:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9]));
  // reaction 98:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4]));
  // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * logT - (2606.66232886845) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9]));
  // reaction 100:  CH + CH3 <=> C2H3 + H
  k_f = 30000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6]));
  // reaction 101:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3]));
  // reaction 102:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3]));
  // reaction 103:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1]));
  // reaction 104:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2]));
  // reaction 105:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7]));
  // reaction 106:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16]));
  // reaction 107:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4]));
  // reaction 108:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4]));
  // reaction 109:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4]));
  // reaction 110:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4]));
  // reaction 111:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4]));
  // reaction 112:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4]));
  // reaction 113:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * logT - (5454.86865732316) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9]));
  // reaction 114:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * logT - (4327.66332592059) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9]));
  // reaction 115:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * logT - (1570.03599731073) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 116:  CH + CH4 <=> C2H4 + H
  k_f = 60000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0]));
  // reaction 117:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1]));
  // reaction 118:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2]));
  // reaction 119:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2]));
  // reaction 120:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 121:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 122:  CH + HCCO <=> C2H2 + CO
  k_f = 50000000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0]));
  // reaction 123:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6]));
  // reaction 124:  2 HCCO <=> C2H2 + 2 CO
  k_f = 10000000;
  qf[124] *= k_f;
  qr[124] *= k_f *
             exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
             (refCinv);
  // reaction 125:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * logT - (956.111665028967) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16]));
  // reaction 126:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * logT - (956.111665028967) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1]));
  // reaction 127:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17]));
  // reaction 128:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * logT - (-1006.43333160944) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13]));
  // reaction 129:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * logT - (3019.29999482832) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6]));
  // reaction 130:  H + H2CC <=> C2H2 + H
  k_f = 100000000;
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5]));
  // reaction 131:  H2CC + O <=> CH2 + CO
  k_f = 100000000;
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 132:  H2CC + OH <=> CH2CO + H
  k_f = 20000000;
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5]));
  // reaction 133:  H2CC + O2 <=> CH2 + CO2
  k_f = 10000000;
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 134:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17]));
  // reaction 135:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * logT - (1353.6528310147) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17]));
  // reaction 136:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17]));
  // reaction 137:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1]));
  // reaction 138:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17]));
  // reaction 139:  C2H3 + H <=> C2H2 + H2
  k_f = 30000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6]));
  // reaction 140:  C2H3 + H <=> H2 + H2CC
  k_f = 60000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 141:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6]));
  // reaction 142:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6]));
  // reaction 143:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6]));
  // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6]));
  // reaction 145:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * logT - (5.53538332385192) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 146:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6]));
  // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6]));
  // reaction 149:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6]));
  // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6]));
  // reaction 151:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6]));
  // reaction 152:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv);
  // reaction 153:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8]));
  // reaction 154:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8]));
  // reaction 155:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8]));
  // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8]));
  // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8]));
  // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[158] *= k_f;
  qr[158] *= k_f *
             exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
             (refCinv);
  // reaction 159:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.93) * logT - (6516.65582217112) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6]));
  // reaction 160:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.91) * logT - (1882.03033010965) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6]));
  // reaction 161:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * logT - (110.707666477038) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3]));
  // reaction 162:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * logT - (110.707666477038) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1]));
  // reaction 163:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6]));
  // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6]));
  // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
  k_f = 2000000 * exp(-(7045.03332126608) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18]));
  // reaction 166:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * logT - (4025.73332643776) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7]));
  // reaction 167:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1]));
  // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
  k_f = 50000000;
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5]));
  // reaction 169:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2]));
  // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6]));
  // reaction 171:  C2H4 + CH3 <=> nC3H7
  k_f = 330000 * exp(-(3874.76832669634) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC);
  // reaction 172:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7]));
  // reaction 173:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7]));
  // reaction 174:  C2H5 + O <=> CH3CHO + H
  k_f = 80200000;
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7]));
  // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7]));
  // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7]));
  // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7]));
  // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[178] *= k_f;
  qr[178] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
             (refCinv);
  // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7]));
  // reaction 180:  C2H5 + HCO <=> C2H6 + CO
  k_f = 120000000;
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7]));
  // reaction 181:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7]));
  // reaction 182:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7]));
  // reaction 183:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * logT - (437.798499250106) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7]));
  // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7]));
  // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7]));
  // reaction 186:  H + aC3H5 <=> CH4 + H2CC
  k_f = 20000000 * exp(-(1006.43333160944) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5]));
  // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20]));
  // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[188] *= k_f;
  qr[188] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
             (refCinv);
  // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3]));
  // reaction 190:  C3H6 + H <=> C2H4 + CH3
  k_f = 1.6e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20]));
  // reaction 191:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.17 * exp((2.5) * logT - (1253.00949785375) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20]));
  // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 120 * exp((1.65) * logT - (164.551849718143) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
             (refCinv);
  // reaction 193:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.65) * logT - (-489.126599162188) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[2] + g_RT[20] - g_RT_qss[3] - g_RT_qss[7]));
  // reaction 194:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * logT - (2958.91399493175) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20]));
  // reaction 195:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * logT - (-149.958566409806) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20]));
  // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * logT - (6999.74382134365) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20]));
  // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * logT - (2855.75457844178) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20]));
  // reaction 198:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * logT - (6292.72440588802) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 199:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9]));
  // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9]));
  // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9]));
  // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[203] *= k_f;
  qr[203] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
             (refCinv);
  // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9]));
  // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * logT - (9937.0194996458) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, T);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, T);

  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142], qf_qss[142], qr_qss[142];
  // Fill sc_qss here
  comp_k_f_qss(T, invT, logT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, T, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * logT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * logT - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-T * 0.0106382978723404) +
      0.7346 * exp(-T * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * logT - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * logT - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-T * 0.0050761421319797) +
      0.932 * exp(-T * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * logT - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-T * 0.00421940928270042) +
      0.5757 * exp(-T * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * logT - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-T * 0.003690036900369) +
      0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * logT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * logT - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-T * 0.0128205128205128) +
      0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * logT - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * logT - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-T * 0.00363636363636364) +
      0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * logT - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * logT - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-T * 0.0106382978723404) +
      0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * logT - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * logT - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-T * 0.0135135135135135) +
      0.783 * exp(-T * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * logT - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-T * 0.0764759865402264) +
      0.6173 * exp(-T * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * logT - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * logT - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-T * 0.00662251655629139) +
      0.5325 * exp(-T * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * logT - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * logT - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-T * 0.000185745862510913) +
      1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * logT - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
      exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * logT - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * logT - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-T * 0.00481927710843374) +
      0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * logT - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-T * 0.000745934656124124) +
      0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * logT - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-T * 0.000112359550561798) +
      0.55 * exp(-T * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * logT - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * logT - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-T * 0.00555555555555556) +
      0.7345 * exp(-T * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * logT - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * logT - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-T * 0.00476190476190476) +
      0.9753 * exp(-T * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * logT - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
      exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * logT - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-T * 0.000911909538573774) +
      0.02 * exp(-T * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * logT - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * logT - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * logT - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * logT);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * logT);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * logT);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * logT);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * logT);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * logT);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * logT);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * logT);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * logT - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * logT - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * logT - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * logT - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * logT - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * logT - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * logT - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * logT - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * logT - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * logT - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * logT - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * logT - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * logT - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * logT - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f = 100 * exp((1.6) * logT - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f = 16.32 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * logT - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * logT - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * logT - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * logT - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * logT - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * logT - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * logT - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * logT - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * logT - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * logT - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * logT - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * logT - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * logT - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * logT - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * logT - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real T,
  const amrex::Real invT,
  const amrex::Real logT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, T);
  gibbs_qss(g_RT_qss, T);

  // Fill sc_qss here
  comp_k_f_qss(T, invT, logT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, T, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * logT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * logT - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-T * 0.0106382978723404) +
      0.7346 * exp(-T * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * logT - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * logT - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-T * 0.0050761421319797) +
      0.932 * exp(-T * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * logT - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-T * 0.00421940928270042) +
      0.5757 * exp(-T * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * logT - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-T * 0.003690036900369) +
      0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * logT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * logT - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-T * 0.0128205128205128) +
      0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * logT - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * logT - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-T * 0.00363636363636364) +
      0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * logT - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * logT - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-T * 0.0106382978723404) +
      0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * logT - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * logT - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-T * 0.0135135135135135) +
      0.783 * exp(-T * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * logT - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-T * 0.0764759865402264) +
      0.6173 * exp(-T * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * logT - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * logT - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-T * 0.00662251655629139) +
      0.5325 * exp(-T * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * logT - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * logT - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-T * 0.000185745862510913) +
      1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * logT - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
      exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * logT - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * logT - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-T * 0.00481927710843374) +
      0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * logT - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-T * 0.000745934656124124) +
      0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * logT - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-T * 0.000112359550561798) +
      0.55 * exp(-T * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * logT - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * logT - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-T * 0.00555555555555556) +
      0.7345 * exp(-T * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * logT - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * logT - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-T * 0.00476190476190476) +
      0.9753 * exp(-T * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * logT - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
      exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * logT - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-T * 0.000911909538573774) +
      0.02 * exp(-T * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * logT - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * logT - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * logT - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * logT);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * logT);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * logT);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * logT);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * logT);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * logT);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * logT);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * logT);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * logT - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * logT - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * logT - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * logT - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * logT - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * logT - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * logT - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * logT - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * logT - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * logT - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * logT - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * logT - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * logT - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * logT - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f = 100 * exp((1.6) * logT - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f = 16.32 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * logT - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * logT - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * logT - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * logT - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * logT - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * logT - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * logT - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * logT - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * logT - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * logT - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * logT - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * logT - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * logT - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * logT - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * logT - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 22; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // H2
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // O2
  kcharge[4] = 0;  // OH
  kcharge[5] = 0;  // H2O
  kcharge[6] = 0;  // HO2
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // CH3
  kcharge[9] = 0;  // CH4
  kcharge[10] = 0; // CO
  kcharge[11] = 0; // CO2
  kcharge[12] = 0; // CH2O
  kcharge[13] = 0; // C2H2
  kcharge[14] = 0; // C2H4
  kcharge[15] = 0; // C2H6
  kcharge[16] = 0; // HCCO
  kcharge[17] = 0; // CH2CO
  kcharge[18] = 0; // CH3CHO
  kcharge[19] = 0; // aC3H5
  kcharge[20] = 0; // C3H6
  kcharge[21] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[22];
  CKCHRG(kchrg);

  for (int id = 0; id < 22; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[22];
  amrex::Real h_RT[22];
  amrex::Real g_RT_qss[10];
  amrex::Real h_RT_qss[10];
  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[22], wdot[22];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  const amrex::Real invT_pert1 = 1.0 / T_pert1;
  const amrex::Real logT_pert1 = log(T_pert1);
  productionRate_light(
    wdot_pert1, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], T_pert1,
    invT_pert1, logT_pert1);
  productionRate_light(
    wdot, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], T, invT, logT);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, T);
  for (int i = 0; i < 529; i++) {
    J[i] = 0.0;
  }
  // Species terms
  amrex::Real x0 = sc[12] + sc[16] + sc[17] + sc[18] + sc[19] + sc[1] + sc[20] +
                   sc[2] + sc[4] + sc[6] + sc[7] + sc[8];
  amrex::Real x1 = 3.0 * sc[15] + 2 * sc[9];
  amrex::Real x2 = 2 * sc[0] + 1.5 * sc[10] + 6.0 * sc[5];
  const amrex::Real x5 =
    2 * sc[11] + 2.5 * sc[13] + 2.5 * sc[14] + sc[21] + sc[3] + x0 + x1 + x2;
  amrex::Real x7 = -g_RT[13] + g_RT_qss[5];
  amrex::Real x12 = 1.0 + 2450000000.0 * x5 *
                            exp(-25009.8682904946 * invT - 0.64 * logT) /
                            kf_qss[15];
  amrex::Real x14 = exp(-25009.8682904946 * invT - 0.64 * logT + x7) / x12;
  const amrex::Real x19 = exp(-g_RT[14] + g_RT[9] - g_RT_qss[2] + g_RT_qss[5]);
  amrex::Real x22 = 3.0 * sc[13] + 3.0 * sc[14] + x0;
  const amrex::Real x25 = 2 * sc[11] + sc[21] + sc[3] + x1 + x2 + x22;
  const amrex::Real x27 = refCinv * sc[0];
  amrex::Real x30 = g_RT[0] - g_RT[14] + g_RT_qss[5];
  amrex::Real x31 = -50251.216247259297 * invT - 9.31 * logT;
  amrex::Real x34 = 7.0e+44 * exp(x31);
  amrex::Real x37 = log(
    exp(-5417.0 * invT) + 0.2655 * exp(-0.0055555555555555601 * T) +
    0.7345 * exp(-0.00096618357487922703 * T));
  amrex::Real x40 = -0.29097730287517898 * x37 +
                    0.43429448190325198 * log(x25 * x34 / kf_qss[11]) - 0.4;
  amrex::Real x43 = -0.55155399201712996 * x37 - 0.14 * x40 + 0.75;
  amrex::Real x46 = ((x40) * (x40)) / ((x43) * (x43)) + 1.0;
  amrex::Real x50 = exp(M_LN10 * (0.43429448190325198 * x37 / x46)) /
                    (1.0 + x25 * x34 / kf_qss[11]);
  amrex::Real x51 = x50 * exp(x30 + x31);
  const amrex::Real x56 = exp(g_RT[0] - g_RT[1] + g_RT_qss[5] - g_RT_qss[6]);
  amrex::Real x62 =
    -kf_qss[112] * sc[9] * x19 -
    kf_qss[130] * sc[9] * exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5]) -
    kf_qss[79] * sc[1] - kf_qss[80] * sc[2] - kf_qss[81] * sc[4] -
    kf_qss[82] * sc[3] - kf_qss[85] * sc[0] * x56 - 2450000000.0 * x14 * x5 -
    7.0e+44 * x25 * x27 * x51 + 10.0e-13;
  amrex::Real x65 = kf_qss[85] * sc[1] + 10.0e-13;
  const amrex::Real x66 = x65 / x62;
  amrex::Real x70 = x25 * exp(-4916.3261815789501 * invT - 11.94 * logT);
  amrex::Real x74 = log(
    exp(-10139.8 * invT) + 0.825 * exp(-0.00074593465612412396 * T) +
    0.175 * exp(-1.6666666666666701e-5 * T));
  amrex::Real x76 = -0.29097730287517898 * x74 +
                    0.43429448190325198 * log(4.27e+46 * x70 / kf_qss[9]) - 0.4;
  amrex::Real x81 =
    1.7777777777777777 * ((x76) * (x76)) /
      ((-0.73540532268950665 * x74 - 0.18666666666666668 * x76 + 1) *
       (-0.73540532268950665 * x74 - 0.18666666666666668 * x76 + 1)) +
    1.0;
  amrex::Real x85 = exp(M_LN10 * (0.43429448190325198 * x74 / x81)) /
                    (1.0 + 4.27e+46 * x70 / kf_qss[9]);
  amrex::Real x91 = g_RT[3] - g_RT[6];
  const amrex::Real x96 = exp(g_RT[10] - g_RT[16] - g_RT_qss[1] + g_RT_qss[6]);
  amrex::Real x99 = -g_RT[10] + g_RT_qss[3];
  amrex::Real x101 = kf_qss[78] * exp(-g_RT[13] + g_RT_qss[6] - x99);
  amrex::Real x106 =
    2.565e+21 * x25 * exp(-18014.512518476698 * invT - 3.4 * logT) / kf_qss[6];
  amrex::Real x107 = log(
    exp(0.0795 * invT) + 1.9816 * exp(-0.23292648840026101 * T) -
    0.9816 * exp(-0.000185745862510913 * T));
  amrex::Real x109 =
    -0.29097730287517898 * x107 + 0.43429448190325198 * log(x106) - 0.4;
  amrex::Real x114 =
    1.7777777777777777 * ((x109) * (x109)) /
      ((-0.73540532268950665 * x107 - 0.18666666666666668 * x109 + 1) *
       (-0.73540532268950665 * x107 - 0.18666666666666668 * x109 + 1)) +
    1.0;
  amrex::Real x116 = exp(M_LN10 * (0.43429448190325198 * x107 / x114));
  amrex::Real x119 =
    x116 * exp(-18014.512518476698 * invT - 3.4 * logT) / (x106 + 1.0);
  const amrex::Real x124 = exp(g_RT[1] - g_RT[8] - g_RT_qss[0] + g_RT_qss[6]);
  amrex::Real x135 = g_RT[4] - g_RT[5];
  amrex::Real x138 = -1670.67933047167 * invT - 3.86 * logT;
  amrex::Real x140 = 1.4e+18 * exp(x138);
  amrex::Real x143 = log(
    exp(-6095.0 * invT) + 0.218 * exp(-0.0048192771084337397 * T) +
    0.782 * exp(-0.000375516334960571 * T));
  amrex::Real x146 = -0.29097730287517898 * x143 +
                     0.43429448190325198 * log(x140 * x25 / kf_qss[8]) - 0.4;
  amrex::Real x151 =
    1.7777777777777777 * ((x146) * (x146)) /
      ((-0.73540532268950665 * x143 - 0.18666666666666668 * x146 + 1) *
       (-0.73540532268950665 * x143 - 0.18666666666666668 * x146 + 1)) +
    1.0;
  amrex::Real x154 = exp(M_LN10 * (0.43429448190325198 * x143 / x151)) /
                     (1.0 + x140 * x25 / kf_qss[8]);
  amrex::Real x159 = g_RT[2] - g_RT[4];
  const amrex::Real x162 = refCinv * sc[12];
  const amrex::Real x166 =
    exp(g_RT[12] - g_RT[19] + g_RT[4] - g_RT[6] + g_RT_qss[6]);
  amrex::Real x169 =
    -kf_qss[104] * sc[0] * exp(g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6]) -
    kf_qss[105] * sc[4] * exp(-g_RT[14] + g_RT_qss[6] - x159) -
    kf_qss[108] * sc[5] * exp(-g_RT[14] + g_RT_qss[6] - x135) -
    kf_qss[109] * sc[6] * exp(-g_RT[14] + g_RT_qss[6] - x91) -
    kf_qss[114] * sc[9] * exp(-g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6]) -
    kf_qss[131] * sc[4] * x162 * x166 - kf_qss[59] * sc[1] * x124 -
    kf_qss[76] * sc[10] * x96 - kf_qss[84] * sc[1] - kf_qss[85] * sc[1] -
    kf_qss[86] * sc[2] - kf_qss[87] * sc[2] - kf_qss[88] * sc[4] -
    kf_qss[89] * sc[3] - kf_qss[90] * sc[3] - kf_qss[91] * sc[3] -
    kf_qss[92] * sc[6] - kf_qss[93] * sc[7] - kf_qss[95] * sc[8] -
    kf_qss[96] * sc[8] - sc[10] * x101 - sc[1] * x140 * x154 * x25 -
    4.27e+46 * sc[8] * x70 * x85 - 2.565e+21 * x119 * x25 + 10.0e-13;
  amrex::Real x172 = (kf_qss[85] * sc[0] * x56 + 10.0e-13) / x169;
  amrex::Real x173 = kf_qss[90] * sc[3] + kf_qss[92] * sc[6] + 10.0e-13;
  const amrex::Real x176 = x25 * exp(-2365.1183292821802 * invT - 7.297 * logT);
  amrex::Real x180 = log(
    exp(-7244.0 * invT) + 0.55 * exp(-0.00022988505747126401 * T) +
    0.45 * exp(-0.000112359550561798 * T));
  amrex::Real x182 = -0.29097730287517898 * x180 +
                     0.43429448190325198 * log(5.2e+27 * x176 / kf_qss[10]) -
                     0.4;
  amrex::Real x185 = -0.55155399201712996 * x180 - 0.14 * x182 + 0.75;
  amrex::Real x187 = ((x182) * (x182)) / ((x185) * (x185)) + 1.0;
  amrex::Real x191 = exp(M_LN10 * (0.43429448190325198 * x180 / x187)) /
                     (1.0 + 5.2e+27 * x176 / kf_qss[10]);
  const amrex::Real x196 = exp(g_RT[4] - g_RT[6] - g_RT_qss[6] + g_RT_qss[8]);
  amrex::Real x200 = -g_RT[2] + g_RT[3];
  amrex::Real x202 = kf_qss[90] * exp(-g_RT_qss[6] + g_RT_qss[8] - x200);
  amrex::Real x207 = -g_RT[17] - g_RT[1] + g_RT_qss[8];
  amrex::Real x208 = -5988.2783230761597 * invT - 7.64 * logT;
  amrex::Real x211 = 3.8e+29 * x25 * exp(x208);
  amrex::Real x213 = log(
    exp(-4131.0 * invT) + 0.663 * exp(-0.00058582308142940799 * T) +
    0.337 * exp(-0.0003125 * T));
  amrex::Real x216 = -0.29097730287517898 * x213 +
                     0.43429448190325198 * log(x211 / kf_qss[7]) - 0.4;
  amrex::Real x219 = -0.55155399201712996 * x213 - 0.14 * x216 + 0.75;
  amrex::Real x221 = ((x216) * (x216)) / ((x219) * (x219)) + 1.0;
  amrex::Real x224 = exp(M_LN10 * (0.43429448190325198 * x213 / x221)) /
                     (1.0 + x211 / kf_qss[7]);
  amrex::Real x226 = refC * x224 * exp(x207 + x208);
  amrex::Real x228 =
    -kf_qss[100] * sc[2] - kf_qss[101] * sc[4] - kf_qss[102] * sc[3] -
    kf_qss[103] * sc[3] - kf_qss[92] * sc[4] * x196 - kf_qss[97] -
    kf_qss[98] * sc[1] - kf_qss[99] * sc[1] - 5.2e+27 * sc[1] * x176 * x191 -
    sc[2] * x202 - 3.8e+29 * x226 * x25 + 10.0e-13;
  const amrex::Real x230 = x173 / x228;
  amrex::Real x231 = kf_qss[92] * sc[4] * x196 + sc[2] * x202 + 10.0e-13;
  amrex::Real x232 = x231 / x169;
  amrex::Real x234 = (1.0 / ((-x172 * x66 - x230 * x232 + 1)));
  const amrex::Real x238 = exp(g_RT[11] - g_RT[3] + g_RT_qss[1] - g_RT_qss[5]);
  amrex::Real x248 = -3570.32224388449 * invT - 5.11 * logT;
  amrex::Real x250 = 2.69e+21 * exp(x248);
  amrex::Real x253 = log(
    exp(-5185.0 * invT) + 0.4093 * exp(-0.0036363636363636398 * T) +
    0.5907 * exp(-0.000815660685154976 * T));
  amrex::Real x255 = -0.29097730287517898 * x253 +
                     0.43429448190325198 * log(x25 * x250 / kf_qss[3]) - 0.4;
  amrex::Real x260 =
    1.7777777777777777 * ((x255) * (x255)) /
      ((-0.73540532268950665 * x253 - 0.18666666666666668 * x255 + 1) *
       (-0.73540532268950665 * x253 - 0.18666666666666668 * x255 + 1)) +
    1.0;
  amrex::Real x264 = exp(M_LN10 * (0.43429448190325198 * x253 / x260)) /
                     (1.0 + x25 * x250 / kf_qss[3]);
  amrex::Real x271 = exp(g_RT_qss[1] - g_RT_qss[2]);
  amrex::Real x276 =
    kf_qss[19] * exp(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1]);
  const amrex::Real x289 = exp(g_RT[10] - g_RT[2] + g_RT_qss[1] - g_RT_qss[5]);
  amrex::Real x293 = -618.95649893980499 * invT - 3.14 * logT;
  amrex::Real x295 = 3200000000000000.0 * exp(x293);
  amrex::Real x298 = log(
    exp(-5590.0 * invT) + 0.32 * exp(-0.012820512820512799 * T) +
    0.68 * exp(-0.00050125313283207998 * T));
  amrex::Real x300 = -0.29097730287517898 * x298 +
                     0.43429448190325198 * log(x25 * x295 / kf_qss[2]) - 0.4;
  amrex::Real x305 =
    1.7777777777777777 * ((x300) * (x300)) /
      ((-0.73540532268950665 * x298 - 0.18666666666666668 * x300 + 1) *
       (-0.73540532268950665 * x298 - 0.18666666666666668 * x300 + 1)) +
    1.0;
  amrex::Real x309 = exp(M_LN10 * (0.43429448190325198 * x298 / x305)) /
                     (1.0 + x25 * x295 / kf_qss[2]);
  amrex::Real x313 =
    -kf_qss[107] * sc[12] * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1]) -
    kf_qss[111] * sc[14] - kf_qss[28] * sc[0] - kf_qss[29] * sc[2] -
    kf_qss[30] * sc[3] - kf_qss[31] * sc[3] - kf_qss[32] * sc[4] -
    kf_qss[33] * sc[4] - kf_qss[34] * sc[6] - kf_qss[37] * sc[21] * x271 -
    kf_qss[45] * sc[5] * x271 - kf_qss[46] * sc[10] * x271 -
    kf_qss[47] * sc[11] * x271 -
    kf_qss[55] * sc[5] * exp(-g_RT[8] + g_RT_qss[1] - x135) -
    kf_qss[62] * sc[8] - kf_qss[72] * sc[9] - kf_qss[76] * sc[16] -
    kf_qss[77] * sc[10] * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1]) -
    kf_qss[80] * sc[10] * x289 - kf_qss[82] * sc[11] * x238 -
    kf_qss[83] * sc[11] * exp(g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1]) -
    sc[10] * x25 * x250 * x264 - sc[1] * x25 * x295 * x309 - sc[1] * x276 +
    10.0e-13;
  amrex::Real x315 = kf_qss[80] * sc[2] + kf_qss[82] * sc[3] + 10.0e-13;
  amrex::Real x316 = x315 / x313;
  amrex::Real x318 =
    -x316 * x66 + (kf_qss[76] * sc[10] * x96 + 10.0e-13) / x313;
  amrex::Real x319 = x234 * x318;
  amrex::Real x322 = (kf_qss[59] * sc[8] + 10.0e-13) / x169;
  amrex::Real x325 = g_RT[12] - g_RT_qss[3];
  const amrex::Real x332 = exp(g_RT[1] - g_RT[2] - g_RT_qss[1] + g_RT_qss[3]);
  amrex::Real x341 =
    kf_qss[22] * exp(g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3]);
  const amrex::Real x346 = exp(-g_RT[1] + g_RT[8] + g_RT_qss[3] - g_RT_qss[8]);
  amrex::Real x351 =
    kf_qss[30] * exp(-g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3]);
  amrex::Real x354 =
    kf_qss[91] * exp(g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6]);
  amrex::Real x356 = -2566.4049956040699 * invT - 9.588 * logT;
  const amrex::Real x359 = 2.2e+36 * x25 * exp(x356);
  amrex::Real x362 = log(
    exp(-5093.0 * invT) + 0.3827 * exp(-0.076475986540226401 * T) +
    0.6173 * exp(-0.00048123195380173197 * T));
  amrex::Real x364 = -0.29097730287517898 * x362 +
                     0.43429448190325198 * log(x359 / kf_qss[5]) - 0.4;
  amrex::Real x369 =
    1.7777777777777777 * ((x364) * (x364)) /
      ((-0.73540532268950665 * x362 - 0.18666666666666668 * x364 + 1) *
       (-0.73540532268950665 * x362 - 0.18666666666666668 * x364 + 1)) +
    1.0;
  amrex::Real x373 = exp(M_LN10 * (0.43429448190325198 * x362 / x369)) /
                     (1.0 + x359 / kf_qss[5]);
  const amrex::Real x376 = exp(g_RT[1] - g_RT[2] - g_RT_qss[2] + g_RT_qss[3]);
  const amrex::Real x382 = exp(-g_RT_qss[0] + g_RT_qss[3] - x200);
  amrex::Real x385 = g_RT[8] - g_RT[9];
  const amrex::Real x393 = exp(g_RT[1] - g_RT[4] - g_RT_qss[0] + g_RT_qss[3]);
  amrex::Real x396 = -717.08374877172605 * invT - 2.57 * logT;
  amrex::Real x398 = 1350000000000.0 * exp(x396);
  amrex::Real x401 = log(
    exp(-6570.0 * invT) + 0.2176 * exp(-0.0036900369003690001 * T) +
    0.7824 * exp(-0.00036297640653357502 * T));
  amrex::Real x403 = -0.29097730287517898 * x401 +
                     0.43429448190325198 * log(x25 * x398 / kf_qss[1]) - 0.4;
  amrex::Real x408 =
    1.7777777777777777 * ((x403) * (x403)) /
      ((-0.73540532268950665 * x401 - 0.18666666666666668 * x403 + 1) *
       (-0.73540532268950665 * x401 - 0.18666666666666668 * x403 + 1)) +
    1.0;
  amrex::Real x412 = exp(M_LN10 * (0.43429448190325198 * x401 / x408)) /
                     (1.0 + x25 * x398 / kf_qss[1]);
  amrex::Real x420 =
    -kf_qss[106] * sc[8] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
    kf_qss[110] * sc[14] - kf_qss[132] * sc[19] - kf_qss[16] * x25 -
    kf_qss[18] * sc[1] * x393 - kf_qss[21] * sc[2] * x382 - kf_qss[23] * sc[1] -
    kf_qss[24] * sc[2] - kf_qss[25] * sc[2] - kf_qss[26] * sc[4] -
    kf_qss[27] * sc[3] - kf_qss[29] * sc[1] * x332 - kf_qss[40] * sc[1] * x376 -
    kf_qss[49] * sc[0] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) -
    kf_qss[50] * sc[4] * exp(-x159 - x325) -
    kf_qss[51] * sc[5] * exp(-x135 - x325) -
    kf_qss[52] * sc[6] * exp(-x325 - x91) -
    kf_qss[53] * sc[7] * exp(-g_RT[6] + g_RT[7] - x325) - kf_qss[60] * sc[8] -
    kf_qss[61] * sc[9] * exp(-x325 - x385) - kf_qss[78] * sc[13] -
    kf_qss[98] * sc[8] * x346 - sc[10] * x341 - sc[12] * x354 -
    sc[1] * x25 * x398 * x412 - sc[4] * x351 - sc[8] * x359 * x373 + 10.0e-13;
  amrex::Real x422 = kf_qss[98] * sc[1] + 10.0e-13;
  amrex::Real x423 = x422 / x420;
  amrex::Real x425 =
    -x230 * x423 + (kf_qss[91] * sc[3] + sc[10] * x101 + 10.0e-13) / x420;
  amrex::Real x426 = x234 * x425;
  amrex::Real x431 =
    kf_qss[18] * sc[4] + kf_qss[21] * sc[3] + kf_qss[22] * sc[11] + 10.0e-13;
  amrex::Real x433 = -x322 * x426 + x431 / x420;
  amrex::Real x434 = kf_qss[98] * sc[8] * x346 + 10.0e-13;
  const amrex::Real x435 = x434 / x228;
  amrex::Real x439 =
    -x232 * x435 + (kf_qss[78] * sc[13] + sc[12] * x354 + 10.0e-13) / x169;
  amrex::Real x440 = kf_qss[110] * sc[14] + 10.0e-13;
  const amrex::Real x444 = exp(g_RT[12] - g_RT[2] + g_RT_qss[7] - g_RT_qss[9]);
  const amrex::Real x447 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x453 =
    kf_qss[134] * exp(-g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x455 = kf_qss[136] * sc[12] * x444 +
                     kf_qss[139] * sc[4] * x162 * x447 + sc[8] * x453 +
                     10.0e-13;
  amrex::Real x458 =
    2 * sc[11] + sc[13] + sc[14] + sc[21] + sc[3] + x0 + x1 + x2;
  amrex::Real x461 = exp(-3522.5166606330399 * invT - 6.66 * logT);
  amrex::Real x465 =
    log(exp(-48097.0 * invT) + exp(-0.00076335877862595397 * T));
  amrex::Real x467 =
    -0.29097730287517898 * x465 +
    0.43429448190325198 * log(6.26e+26 * x458 * x461 / kf_qss[14]) - 0.4;
  amrex::Real x472 =
    1.7777777777777777 * ((x467) * (x467)) /
      ((-0.73540532268950665 * x465 - 0.18666666666666668 * x467 + 1) *
       (-0.73540532268950665 * x465 - 0.18666666666666668 * x467 + 1)) +
    1.0;
  amrex::Real x476 = exp(M_LN10 * (0.43429448190325198 * x465 / x472)) /
                     (1.0 + 6.26e+26 * x458 * x461 / kf_qss[14]);
  amrex::Real x479 = -g_RT[1] - g_RT[20] + g_RT_qss[9];
  amrex::Real x481 =
    refC * exp(-3522.5166606330399 * invT - 6.66 * logT + x479);
  amrex::Real x488 =
    -kf_qss[115] * refC * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9]) -
    kf_qss[134] * sc[1] - kf_qss[135] * sc[1] - kf_qss[136] * sc[2] -
    kf_qss[137] * sc[4] - kf_qss[138] * sc[3] - kf_qss[139] * sc[6] -
    kf_qss[140] * sc[8] - 6.26e+26 * x458 * x476 * x481 + 10.0e-13;
  const amrex::Real x490 = x455 / x488;
  amrex::Real x491 = g_RT[15] - g_RT_qss[7];
  amrex::Real x497 = kf_qss[128] * exp(g_RT[8] - g_RT_qss[2] - x491);
  amrex::Real x500 = -g_RT[14] - g_RT[1] + g_RT_qss[7];
  amrex::Real x501 = -3507.4201606588999 * invT - 7.62 * logT;
  amrex::Real x506 = log(
    exp(-4374.0 * invT) + 0.0247 * exp(-0.0047619047619047597 * T) +
    0.9753 * exp(-0.00101626016260163 * T));
  amrex::Real x508 =
    -0.29097730287517898 * x506 +
    0.43429448190325198 * log(1.2e+30 * x25 * exp(x501) / kf_qss[12]) - 0.4;
  amrex::Real x513 =
    1.7777777777777777 * ((x508) * (x508)) /
      ((-0.73540532268950665 * x506 - 0.18666666666666668 * x508 + 1) *
       (-0.73540532268950665 * x506 - 0.18666666666666668 * x508 + 1)) +
    1.0;
  amrex::Real x517 = exp(M_LN10 * (0.43429448190325198 * x506 / x513)) /
                     (1.0 + 1.2e+30 * x25 * exp(x501) / kf_qss[12]);
  amrex::Real x519 = refC * x517 * exp(x500 + x501);
  amrex::Real x521 = -3364.00341090455 * invT - 7.08 * logT;
  amrex::Real x523 = 1.99e+29 * exp(x521);
  amrex::Real x526 = log(
    exp(-6882.0 * invT) + 0.1578 * exp(-0.008 * T) +
    0.8422 * exp(-0.000450653447498873 * T));
  amrex::Real x528 = -0.29097730287517898 * x526 +
                     0.43429448190325198 * log(x25 * x523 / kf_qss[13]) - 0.4;
  amrex::Real x533 =
    1.7777777777777777 * ((x528) * (x528)) /
      ((-0.73540532268950665 * x526 - 0.18666666666666668 * x528 + 1) *
       (-0.73540532268950665 * x526 - 0.18666666666666668 * x528 + 1)) +
    1.0;
  amrex::Real x537 = exp(M_LN10 * (0.43429448190325198 * x526 / x533)) /
                     (1.0 + x25 * x523 / kf_qss[13]);
  amrex::Real x549 = kf_qss[110] * exp(-g_RT[14] + g_RT_qss[7] - x99);
  amrex::Real x551 =
    -kf_qss[116] * sc[1] - kf_qss[117] * sc[2] - kf_qss[118] * sc[2] -
    kf_qss[119] * sc[3] - kf_qss[120] * sc[6] - kf_qss[121] * sc[6] -
    kf_qss[122] * sc[6] - kf_qss[123] * sc[7] -
    kf_qss[125] * sc[0] * exp(g_RT[0] - g_RT[15] - g_RT[1] + g_RT_qss[7]) -
    kf_qss[126] * sc[4] * exp(-x159 - x491) -
    kf_qss[127] * sc[5] * exp(-x135 - x491) -
    kf_qss[129] * sc[9] * exp(-x385 - x491) - kf_qss[136] * sc[12] * x444 -
    kf_qss[139] * sc[4] * x162 * x447 -
    kf_qss[64] * sc[1] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) -
    sc[10] * x549 - sc[1] * x25 * x523 * x537 - sc[8] * x453 - sc[8] * x497 -
    1.2e+30 * x25 * x519 + 10.0e-13;
  amrex::Real x553 =
    kf_qss[134] * sc[1] + kf_qss[136] * sc[2] + kf_qss[139] * sc[6] + 10.0e-13;
  amrex::Real x554 = x553 / x551;
  amrex::Real x556 = (1.0 / ((-x490 * x554 + 1)));
  const amrex::Real x558 = x440 * x556 / x551;
  amrex::Real x559 = sc[10] * x549 + 10.0e-13;
  amrex::Real x560 = x559 / x420;
  amrex::Real x562 = (1.0 / ((-x423 * x435 - x426 * x439 - x558 * x560 + 1)));
  const amrex::Real x564 = exp(-g_RT[8] + g_RT_qss[2] - x135);
  const amrex::Real x566 = exp(g_RT[10] - g_RT[16] - g_RT[1] + g_RT_qss[2]);
  const amrex::Real x571 = exp(-g_RT[1] + g_RT[5] + g_RT_qss[2] - g_RT_qss[4]);
  amrex::Real x579 =
    -kf_qss[112] * sc[14] - kf_qss[113] * sc[14] - kf_qss[128] * sc[15] -
    kf_qss[37] * sc[21] - kf_qss[38] * sc[1] - kf_qss[39] * sc[2] -
    kf_qss[40] * sc[2] - kf_qss[41] * sc[4] - kf_qss[42] * sc[0] -
    kf_qss[43] * sc[3] - kf_qss[44] * sc[3] - kf_qss[45] * sc[5] -
    kf_qss[46] * sc[10] - kf_qss[47] * sc[11] - kf_qss[48] * sc[11] -
    kf_qss[56] * sc[5] * x564 - kf_qss[63] * sc[8] - kf_qss[67] * sc[5] * x571 -
    kf_qss[73] * sc[9] - kf_qss[74] * sc[10] * x566 + 10.0e-13;
  amrex::Real x581 = sc[8] * x497 + 10.0e-13;
  amrex::Real x584 =
    -x558 * x581 / x579 + (kf_qss[40] * sc[1] * x376 + 10.0e-13) / x579;
  amrex::Real x585 = x562 * x584;
  const amrex::Real x588 = exp(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[2]);
  amrex::Real x593 =
    -x433 * x585 + (kf_qss[38] * sc[0] * x588 + 10.0e-13) / x579;
  amrex::Real x594 = kf_qss[128] * sc[15] + 10.0e-13;
  const amrex::Real x596 = x556 * x594 / x551;
  amrex::Real x600 = -x560 * x596 + (kf_qss[40] * sc[2] + 10.0e-13) / x420;
  amrex::Real x601 = x562 * x600;
  amrex::Real x602 = kf_qss[112] * sc[14] + 10.0e-13;
  const amrex::Real x603 = x602 / x62;
  amrex::Real x604 = kf_qss[112] * sc[9] * x19 + 10.0e-13;
  amrex::Real x605 = x604 / x579;
  const amrex::Real x609 = exp(g_RT[4] - g_RT[6] - g_RT[8] + g_RT_qss[4]);
  amrex::Real x615 = -g_RT[12] - g_RT[1] + g_RT_qss[4];
  amrex::Real x616 = -2797.88466187424 * invT - 4.8 * logT;
  amrex::Real x620 = 2.2e+18 * x25 * exp(x616) / kf_qss[4];
  amrex::Real x622 = log(
    exp(-4200.0 * invT) + 0.242 * exp(-0.010638297872340399 * T) +
    0.758 * exp(-0.00064308681672025703 * T));
  amrex::Real x625 =
    -0.29097730287517898 * x622 + 0.43429448190325198 * log(x620) - 0.4;
  amrex::Real x630 =
    1.7777777777777777 * ((x625) * (x625)) /
      ((-0.73540532268950665 * x622 - 0.18666666666666668 * x625 + 1) *
       (-0.73540532268950665 * x622 - 0.18666666666666668 * x625 + 1)) +
    1.0;
  amrex::Real x633 =
    exp(M_LN10 * (0.43429448190325198 * x622 / x630)) / (x620 + 1.0);
  amrex::Real x635 = refC * x633 * exp(x615 + x616);
  amrex::Real x637 = -kf_qss[57] * sc[2] * exp(-g_RT[8] + g_RT_qss[4] - x200) -
                     kf_qss[58] * sc[4] * x609 - kf_qss[65] * sc[1] -
                     kf_qss[66] * sc[1] - kf_qss[67] * sc[1] -
                     kf_qss[68] * sc[2] - kf_qss[69] * sc[4] -
                     kf_qss[70] * sc[3] - 2.2e+18 * x25 * x635 + 10.0e-13;
  const amrex::Real x639 = (kf_qss[67] * sc[5] * x571 + 10.0e-13) / x637;
  amrex::Real x640 = kf_qss[67] * sc[1] + 10.0e-13;
  amrex::Real x641 = x640 / x579;
  amrex::Real x642 =
    -x584 * x601 - x603 * x605 - x639 * x641 + 1 - x581 * x596 / x579;
  amrex::Real x644 = x234 * x439;
  amrex::Real x646 =
    -x318 * x644 + (kf_qss[29] * sc[1] * x332 + sc[4] * x351 + 10.0e-13) / x313;
  amrex::Real x648 = -x316 * x603 - x601 * x646 +
                     (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                      kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                       x313;
  amrex::Real x649 = x648 / x642;
  amrex::Real x651 = x562 * x646;
  amrex::Real x655 = kf_qss[33] * exp(g_RT_qss[0] - g_RT_qss[1] - x135);
  amrex::Real x659 =
    kf_qss[80] * sc[10] * x289 + kf_qss[82] * sc[11] * x238 + 10.0e-13;
  const amrex::Real x660 = x659 / x62;
  amrex::Real x661 = kf_qss[37] * sc[21] * x271 + kf_qss[45] * sc[5] * x271 +
                     kf_qss[46] * sc[10] * x271 + kf_qss[47] * sc[11] * x271 +
                     10.0e-13;
  amrex::Real x666 = -x172 * x660 + (kf_qss[76] * sc[16] + 10.0e-13) / x169;
  amrex::Real x670 =
    -x426 * x666 + (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / x420;
  amrex::Real x673 = -x585 * x670 - x605 * x660 + x661 / x579;
  amrex::Real x674 = x234 * x666;
  amrex::Real x675 = -x316 * x660 - x318 * x674 - x649 * x673 - x651 * x670 + 1;
  const amrex::Real x677 =
    (x319 * x322 + x433 * x651 + x593 * x649 -
     (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / x313) /
    x675;
  const amrex::Real x678 =
    (x433 * x585 - (kf_qss[38] * sc[0] * x588 + 10.0e-13) / x579) / x642;
  const amrex::Real x679 = (x585 * x670 + x605 * x660 - x661 / x579) / x642;
  const amrex::Real x680 = x562 * (x322 * x426 - x431 / x420);
  const amrex::Real x681 =
    x562 *
    (x426 * x666 - (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / x420);
  const amrex::Real x682 =
    x562 * (x560 * x596 - (kf_qss[40] * sc[2] + 10.0e-13) / x420);
  const amrex::Real x683 = x234 * x322;
  const amrex::Real x684 =
    x234 * (x172 * x660 - (kf_qss[76] * sc[16] + 10.0e-13) / x169);
  const amrex::Real x685 =
    x234 *
    (x232 * x435 - (kf_qss[78] * sc[13] + sc[12] * x354 + 10.0e-13) / x169);
  amrex::Real x687 = 2.3703703703703702 * ((x146) * (x146)) /
                     ((-0.73540532269 * x143 - 0.18666666666666668 * x146 + 1) *
                      (-0.73540532269 * x143 - 0.18666666666666668 * x146 + 1) *
                      (-0.73540532269 * x143 - 0.18666666666666668 * x146 + 1));
  const amrex::Real x688 = 0.43429448190325198 / x25;
  x146 = 1.7777777777777777 * x146 /
         ((-0.73540532268950665 * x143 - 0.18666666666666668 * x146 + 1) *
          (-0.73540532268950665 * x143 - 0.18666666666666668 * x146 + 1));
  amrex::Real x694 = sc[1] * x140 * x143 * x154 * x25 / ((x151) * (x151));
  amrex::Real x695 = exp(M_LN10 * (0.43429448190325198 * x143 / x151)) * x25 /
                     (kf_qss[8] * ((1.0 + x140 * x25 / kf_qss[8]) *
                                   (1.0 + x140 * x25 / kf_qss[8])));
  amrex::Real x698 =
    sc[1] * x695 * exp(-3341.3586609433401 * invT - 7.72 * logT);
  amrex::Real x701 = x116 * x25 * exp(-36029.025036953499 * invT - 6.8 * logT) /
                     (kf_qss[6] * ((x106 + 1.0) * (x106 + 1.0)));
  amrex::Real x703 = 2.3703703703703702 * ((x76) * (x76)) /
                     ((-0.73540532269 * x74 - 0.18666666666666668 * x76 + 1) *
                      (-0.73540532269 * x74 - 0.18666666666666668 * x76 + 1) *
                      (-0.73540532269 * x74 - 0.18666666666666668 * x76 + 1));
  x76 = 1.7777777777777777 * x76 /
        ((-0.73540532268950665 * x74 - 0.18666666666666668 * x76 + 1) *
         (-0.73540532268950665 * x74 - 0.18666666666666668 * x76 + 1));
  amrex::Real x707 = 4.27e+46 * sc[8] * x70 * x74 * x85 / ((x81) * (x81));
  amrex::Real x708 = sc[8] * exp(-4916.3261815789501 * invT - 11.94 * logT);
  amrex::Real x714 =
    1.7777777777777777 * x109 /
    ((-0.73540532268950665 * x107 - 0.18666666666666668 * x109 + 1) *
     (-0.73540532268950665 * x107 - 0.18666666666666668 * x109 + 1));
  x109 = 2.3703703703703702 * ((x109) * (x109)) /
         ((-0.73540532269 * x107 - 0.18666666666666668 * x109 + 1) *
          (-0.73540532269 * x107 - 0.18666666666666668 * x109 + 1) *
          (-0.73540532269 * x107 - 0.18666666666666668 * x109 + 1));
  amrex::Real x719 = 2.565e+21 * x107 * x119 * x25 / ((x114) * (x114));
  const amrex::Real x722 =
    sc[8] * x25 * exp(-9832.6523631579003 * invT - 23.88 * logT);
  amrex::Real x723 = 5.4845910414689933e-94 *
                     exp(M_LN10 * (0.43429448190325198 * x74 / x81)) /
                     (kf_qss[9] * ((2.3419203747072597e-47 + x70 / kf_qss[9]) *
                                   (2.3419203747072597e-47 + x70 / kf_qss[9])));
  amrex::Real x725 =
    -2.8e+18 * sc[1] * x154 * exp(x138) - 5.13e+21 * x119 +
    x694 * (4.0 * x146 * x688 + 0.56 * x687 * x688) + 3.92e+36 * x698 +
    1.315845e+43 * x701 + x707 * (0.56 * x688 * x703 + 4.0 * x688 * x76) -
    8.54e+46 * x708 * x85 + x719 * (0.56 * x109 * x688 + 4.0 * x688 * x714) +
    3.64658e+93 * x722 * x723;
  amrex::Real x726 =
    -kf_qss[104] * exp(g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6]) + x725;
  amrex::Real x728 = (kf_qss[59] * sc[8] + 10.0e-13) / ((x169) * (x169));
  amrex::Real x729 = x426 * x728;
  amrex::Real x731 =
    1.7777777777777777 * x403 /
    ((-0.73540532268950665 * x401 - 0.18666666666666668 * x403 + 1) *
     (-0.73540532268950665 * x401 - 0.18666666666666668 * x403 + 1));
  x403 = 2.3703703703703702 * ((x403) * (x403)) /
         ((-0.73540532269 * x401 - 0.18666666666666668 * x403 + 1) *
          (-0.73540532269 * x401 - 0.18666666666666668 * x403 + 1) *
          (-0.73540532269 * x401 - 0.18666666666666668 * x403 + 1));
  amrex::Real x735 = sc[1] * x25 * x398 * x401 * x412 / ((x408) * (x408));
  amrex::Real x736 = exp(M_LN10 * (0.43429448190325198 * x401 / x408)) * x25 /
                     (kf_qss[1] * ((1.0 + x25 * x398 / kf_qss[1]) *
                                   (1.0 + x25 * x398 / kf_qss[1])));
  amrex::Real x739 =
    sc[1] * x736 * exp(-1434.1674975434501 * invT - 5.14 * logT);
  amrex::Real x742 =
    1.7777777777777777 * x364 /
    ((-0.73540532268950665 * x362 - 0.18666666666666668 * x364 + 1) *
     (-0.73540532268950665 * x362 - 0.18666666666666668 * x364 + 1));
  x364 = 2.3703703703703702 * ((x364) * (x364)) /
         ((-0.73540532269 * x362 - 0.18666666666666668 * x364 + 1) *
          (-0.73540532269 * x362 - 0.18666666666666668 * x364 + 1) *
          (-0.73540532269 * x362 - 0.18666666666666668 * x364 + 1));
  amrex::Real x748 = sc[8] * x359 * x362 * x373 / ((x369) * (x369));
  amrex::Real x752 = sc[8] * exp(x356);
  const amrex::Real x754 =
    sc[8] * x25 * exp(-5132.8099912081398 * invT - 19.176 * logT);
  amrex::Real x755 =
    exp(M_LN10 * (0.43429448190325198 * x362 / x369)) /
    (kf_qss[5] * ((1.0 + x359 / kf_qss[5]) * (1.0 + x359 / kf_qss[5])));
  amrex::Real x758 =
    -2 * kf_qss[16] - 2700000000000.0 * sc[1] * x412 * exp(x396) -
    4.4e+36 * x373 * x752 + x735 * (0.56 * x403 * x688 + 4.0 * x688 * x731) +
    3.645e+24 * x739 + x748 * (0.56 * x364 * x688 + 4.0 * x688 * x742) +
    9.68e+72 * x754 * x755;
  amrex::Real x759 =
    -kf_qss[49] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) + x758;
  amrex::Real x761 =
    (kf_qss[91] * sc[3] + sc[10] * x101 + 10.0e-13) / ((x420) * (x420));
  amrex::Real x769 =
    0.56 * ((x216) * (x216)) * x688 / ((x219) * (x219) * (x219)) +
    4.0 * x216 * x688 / ((x219) * (x219));
  amrex::Real x771 = 3.8e+29 * x213 * x226 * x25 / ((x221) * (x221));
  const amrex::Real x772 =
    sc[1] * exp(-2365.1183292821802 * invT - 7.297 * logT);
  amrex::Real x774 =
    exp(M_LN10 * (0.43429448190325198 * x213 / x221)) /
    (kf_qss[7] * ((1.0 + x211 / kf_qss[7]) * (1.0 + x211 / kf_qss[7])));
  const amrex::Real x776 = refC * x25;
  amrex::Real x777 =
    x776 * exp(-11976.556646152299 * invT - 15.28 * logT + x207);
  amrex::Real x781 = x182 / ((x185) * (x185));
  amrex::Real x786 = 5.2e+27 * sc[1] * x176 * x180 * x191 / ((x187) * (x187));
  const amrex::Real x788 = sc[1] * x25;
  const amrex::Real x789 =
    x788 * exp(-4730.2366585643604 * invT - 14.594 * logT);
  amrex::Real x790 =
    3.6982248520710058e-56 * exp(M_LN10 * (0.43429448190325198 * x180 / x187)) /
    (kf_qss[10] * ((1.923076923076923e-28 + x176 / kf_qss[10]) *
                   (1.923076923076923e-28 + x176 / kf_qss[10])));
  amrex::Real x792 =
    -1.04e+28 * x191 * x772 - 7.6e+29 * x226 + x769 * x771 +
    2.888e+59 * x774 * x777 +
    x786 * (0.56 * ((x182) * (x182)) * x688 / ((x185) * (x185) * (x185)) +
            4.0 * x688 * x781) +
    5.408e+55 * x789 * x790;
  amrex::Real x793 = x792 / ((x228) * (x228));
  amrex::Real x796 =
    x173 * x423 * x793 + x230 * x422 * x759 / ((x420) * (x420)) - x759 * x761;
  x431 = x431 / ((x420) * (x420));
  amrex::Real x799 = x230 * x231 / ((x169) * (x169));
  amrex::Real x802 = x172 * x65;
  amrex::Real x805 = exp(M_LN10 * (0.43429448190325198 * x37 / x46)) * x25 /
                     (kf_qss[11] * ((1.0 + x25 * x34 / kf_qss[11]) *
                                    (1.0 + x25 * x34 / kf_qss[11])));
  amrex::Real x808 =
    x27 * x805 * exp(-100502.432494519 * invT - 18.62 * logT + x30);
  amrex::Real x811 = x5 * exp(-50019.736580989098 * invT - 1.28 * logT + x7) /
                     (kf_qss[15] * ((x12) * (x12)));
  amrex::Real x813 = ((x40) * (x40)) / ((x43) * (x43) * (x43));
  amrex::Real x816 = x40 / ((x43) * (x43));
  amrex::Real x819 = 7.0e+44 * x25 * x27 * x37 * x51 / ((x46) * (x46));
  amrex::Real x820 = -4900000000.0 * x14 - 1.4e+45 * x27 * x51 +
                     9.8e+89 * x808 + 1.2005e+19 * x811 +
                     x819 * (0.56 * x688 * x813 + 4.0 * x688 * x816);
  amrex::Real x821 = -kf_qss[85] * x56 - 7.0e+44 * refCinv * x25 * x51 + x820;
  amrex::Real x824 = (kf_qss[85] * sc[0] * x56 + 10.0e-13) / ((x169) * (x169));
  amrex::Real x826 = -kf_qss[85] * x56 * x66 / x169 + x173 * x232 * x793 +
                     x66 * x726 * x824 + x726 * x799 +
                     x802 * x821 / ((x62) * (x62));
  amrex::Real x827 =
    (1.0 / ((-x172 * x66 - x230 * x232 + 1) * (-x172 * x66 - x230 * x232 + 1)));
  amrex::Real x829 = x322 * x425 * x827;
  amrex::Real x830 = -x431 * x759 - x683 * x796 + x726 * x729 + x826 * x829;
  amrex::Real x833 = x25 * exp(-974.22746499793698 * invT - 3.74 * logT);
  amrex::Real x837 = log(
    exp(-5069.0 * invT) + 0.4243 * exp(-0.0042194092827004199 * T) +
    0.5757 * exp(-0.000605326876513317 * T));
  amrex::Real x839 = -0.29097730287517898 * x837 +
                     0.43429448190325198 * log(2.69e+16 * x833 / kf_qss[0]) -
                     0.4;
  amrex::Real x844 =
    1.7777777777777777 * ((x839) * (x839)) /
      ((-0.73540532268950665 * x837 - 0.18666666666666668 * x839 + 1) *
       (-0.73540532268950665 * x837 - 0.18666666666666668 * x839 + 1)) +
    1.0;
  amrex::Real x848 = exp(M_LN10 * (0.43429448190325198 * x837 / x844)) /
                     (1.0 + 2.69e+16 * x833 / kf_qss[0]);
  amrex::Real x851 =
    -kf_qss[17] * sc[2] - kf_qss[18] * sc[4] - kf_qss[19] * sc[0] -
    kf_qss[20] * sc[5] - kf_qss[21] * sc[3] - kf_qss[22] * sc[11] -
    kf_qss[38] * sc[0] * x588 - kf_qss[54] * sc[12] - kf_qss[59] * sc[8] -
    kf_qss[71] * sc[9] - kf_qss[75] * sc[16] - 2.69e+16 * sc[10] * x833 * x848 -
    sc[5] * x655 + 10.0e-13;
  amrex::Real x854 = (kf_qss[59] * sc[1] * x124 + 10.0e-13) / x851;
  amrex::Real x856 =
    -x644 * x854 + (kf_qss[18] * sc[1] * x393 + kf_qss[21] * sc[2] * x382 +
                    sc[10] * x341 + 10.0e-13) /
                     x851;
  amrex::Real x857 = x562 * x856;
  amrex::Real x859 =
    1.7777777777777777 * x300 /
    ((-0.73540532268950665 * x298 - 0.18666666666666668 * x300 + 1) *
     (-0.73540532268950665 * x298 - 0.18666666666666668 * x300 + 1));
  x300 = 2.3703703703703702 * ((x300) * (x300)) /
         ((-0.73540532269 * x298 - 0.18666666666666668 * x300 + 1) *
          (-0.73540532269 * x298 - 0.18666666666666668 * x300 + 1) *
          (-0.73540532269 * x298 - 0.18666666666666668 * x300 + 1));
  amrex::Real x863 = sc[1] * x25 * x295 * x298 * x309 / ((x305) * (x305));
  amrex::Real x865 = exp(M_LN10 * (0.43429448190325198 * x298 / x305)) * x25 /
                     (kf_qss[2] * ((1.0 + x25 * x295 / kf_qss[2]) *
                                   (1.0 + x25 * x295 / kf_qss[2])));
  amrex::Real x869 = sc[1] * x865 * exp(-1237.91299787961 * invT - 6.28 * logT);
  amrex::Real x872 = exp(M_LN10 * (0.43429448190325198 * x253 / x260)) * x25 /
                     (kf_qss[3] * ((1.0 + x25 * x250 / kf_qss[3]) *
                                   (1.0 + x25 * x250 / kf_qss[3])));
  amrex::Real x877 = 2.3703703703703702 * ((x255) * (x255)) /
                     ((-0.73540532269 * x253 - 0.18666666666666668 * x255 + 1) *
                      (-0.73540532269 * x253 - 0.18666666666666668 * x255 + 1) *
                      (-0.73540532269 * x253 - 0.18666666666666668 * x255 + 1));
  x255 = 1.7777777777777777 * x255 /
         ((-0.73540532268950665 * x253 - 0.18666666666666668 * x255 + 1) *
          (-0.73540532268950665 * x253 - 0.18666666666666668 * x255 + 1));
  amrex::Real x881 = sc[10] * x25 * x250 * x253 * x264 / ((x260) * (x260));
  amrex::Real x882 = -5.38e+21 * sc[10] * x264 * exp(x248) +
                     1.44722e+43 * sc[10] * x872 *
                       exp(-7140.6444877689701 * invT - 10.22 * logT) -
                     6400000000000000.0 * sc[1] * x309 * exp(x293) +
                     x863 * (0.56 * x300 * x688 + 4.0 * x688 * x859) +
                     2.048e+31 * x869 +
                     x881 * (4.0 * x255 * x688 + 0.56 * x688 * x877);
  amrex::Real x883 = -kf_qss[28] + x882;
  amrex::Real x885 =
    (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x888 = exp(M_LN10 * (0.43429448190325198 * x526 / x533)) * x25 /
                     (kf_qss[13] * ((1.0 + x25 * x523 / kf_qss[13]) *
                                    (1.0 + x25 * x523 / kf_qss[13])));
  amrex::Real x891 =
    sc[1] * x888 * exp(-6728.0068218091001 * invT - 14.16 * logT);
  amrex::Real x893 =
    1.7777777777777777 * x508 /
    ((-0.73540532268950665 * x506 - 0.18666666666666668 * x508 + 1) *
     (-0.73540532268950665 * x506 - 0.18666666666666668 * x508 + 1));
  x508 = 2.3703703703703702 * ((x508) * (x508)) /
         ((-0.73540532269 * x506 - 0.18666666666666668 * x508 + 1) *
          (-0.73540532269 * x506 - 0.18666666666666668 * x508 + 1) *
          (-0.73540532269 * x506 - 0.18666666666666668 * x508 + 1));
  amrex::Real x897 = 1.2e+30 * x25 * x506 * x519 / ((x513) * (x513));
  amrex::Real x899 = 2.3703703703703702 * ((x528) * (x528)) /
                     ((-0.73540532269 * x526 - 0.18666666666666668 * x528 + 1) *
                      (-0.73540532269 * x526 - 0.18666666666666668 * x528 + 1) *
                      (-0.73540532269 * x526 - 0.18666666666666668 * x528 + 1));
  x528 = 1.7777777777777777 * x528 /
         ((-0.73540532268950665 * x526 - 0.18666666666666668 * x528 + 1) *
          (-0.73540532268950665 * x526 - 0.18666666666666668 * x528 + 1));
  amrex::Real x903 = sc[1] * x25 * x523 * x526 * x537 / ((x533) * (x533));
  amrex::Real x904 =
    6.9444444444444448e-61 * exp(M_LN10 * (0.43429448190325198 * x506 / x513)) /
    (kf_qss[12] * ((8.3333333333333329e-31 + x25 * exp(x501) / kf_qss[12]) *
                   (8.3333333333333329e-31 + x25 * exp(x501) / kf_qss[12])));
  amrex::Real x906 =
    x776 * exp(-7014.8403213177899 * invT - 15.24 * logT + x500);
  amrex::Real x908 =
    -3.98e+29 * sc[1] * x537 * exp(x521) - 2.4e+30 * x519 + 7.9202e+58 * x891 +
    x897 * (0.56 * x508 * x688 + 4.0 * x688 * x893) +
    x903 * (4.0 * x528 * x688 + 0.56 * x688 * x899) + 2.88e+60 * x904 * x906;
  amrex::Real x909 =
    -kf_qss[125] * exp(g_RT[0] - g_RT[15] - g_RT[1] + g_RT_qss[7]) + x908;
  amrex::Real x911 = x556 * x560;
  amrex::Real x913 = x440 * x911 / ((x551) * (x551));
  amrex::Real x915 = x490 * x553 / ((x551) * (x551));
  amrex::Real x918 =
    0.77207907893911465 * x467 /
    (x458 * ((-0.73540532268950665 * x465 - 0.18666666666666668 * x467 + 1) *
             (-0.73540532268950665 * x465 - 0.18666666666666668 * x467 + 1)));
  x467 = 1.0294387719188194 * ((x467) * (x467)) /
         (x458 * ((-0.73540532269 * x465 - 0.18666666666666668 * x467 + 1) *
                  (-0.73540532269 * x465 - 0.18666666666666668 * x467 + 1) *
                  (-0.73540532269 * x465 - 0.18666666666666668 * x467 + 1)));
  amrex::Real x922 = 6.26e+26 * x458 * x465 * x476 * x481 / ((x472) * (x472));
  amrex::Real x923 =
    2.5518276189406848e-54 * exp(M_LN10 * (0.43429448190325198 * x465 / x472)) *
    x458 /
    (kf_qss[14] * ((1.5974440894568689e-27 + x458 * x461 / kf_qss[14]) *
                   (1.5974440894568689e-27 + x458 * x461 / kf_qss[14])));
  amrex::Real x930 = 7.83752e+53 * refC * x923 *
                       exp(-7045.0333212660798 * invT - 13.32 * logT + x479) -
                     1.252e+27 * x476 * x481 +
                     x922 * (0.56 * x467 + 4.0 * x918);
  amrex::Real x933 = x455 * x554 / ((x488) * (x488));
  amrex::Real x935 = x909 * x915 + x930 * x933;
  amrex::Real x936 = (1.0 / ((-x490 * x554 + 1) * (-x490 * x554 + 1)));
  amrex::Real x939 = x440 * x560 * x936 / x551;
  amrex::Real x942 = x425 * x439 * x827;
  amrex::Real x946 = x231 * x435 / ((x169) * (x169));
  amrex::Real x947 =
    (kf_qss[78] * sc[13] + sc[12] * x354 + 10.0e-13) / ((x169) * (x169));
  amrex::Real x950 = x232 * x434 * x793 + x726 * x946 - x726 * x947;
  amrex::Real x951 = x423 * x434 * x793 - x426 * x950 - x644 * x796 +
                     x826 * x942 + x909 * x913 + x935 * x939 +
                     x422 * x435 * x759 / ((x420) * (x420)) +
                     x558 * x559 * x759 / ((x420) * (x420));
  amrex::Real x952 =
    (1.0 / ((-x423 * x435 - x426 * x439 - x558 * x560 + 1) *
            (-x423 * x435 - x426 * x439 - x558 * x560 + 1)));
  amrex::Real x955 = (kf_qss[76] * sc[10] * x96 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x956 = x316 * x65;
  amrex::Real x958 = x315 * x66 / ((x313) * (x313));
  amrex::Real x959 = -x883 * x955 + x883 * x958 + x821 * x956 / ((x62) * (x62));
  amrex::Real x960 =
    (kf_qss[29] * sc[1] * x332 + sc[4] * x351 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x961 = x318 * x439 * x827;
  amrex::Real x962 = -x319 * x950 - x644 * x959 + x826 * x961 - x883 * x960;
  amrex::Real x963 = x433 * x562;
  amrex::Real x964 = x316 * x602;
  amrex::Real x965 = x315 * x603 / ((x313) * (x313));
  amrex::Real x966 = (kf_qss[40] * sc[2] + 10.0e-13) / ((x420) * (x420));
  amrex::Real x968 = x594 * x911 / ((x551) * (x551));
  amrex::Real x970 = x560 * x594 * x936 / x551;
  amrex::Real x971 = -x759 * x966 + x909 * x968 + x935 * x970 +
                     x559 * x596 * x759 / ((x420) * (x420));
  amrex::Real x972 = (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                      kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                     ((x313) * (x313));
  amrex::Real x973 = x600 * x646 * x951 * x952 - x601 * x962 - x651 * x971 +
                     x883 * x965 - x883 * x972 + x821 * x964 / ((x62) * (x62));
  amrex::Real x974 = x593 / x642;
  amrex::Real x976 = (kf_qss[38] * sc[0] * x588 + 10.0e-13) / ((x579) * (x579));
  amrex::Real x977 = x556 * x581 / x579;
  amrex::Real x979 = x440 * x977 / ((x551) * (x551));
  amrex::Real x982 = (kf_qss[40] * sc[1] * x376 + 10.0e-13) / ((x579) * (x579));
  amrex::Real x984 = x440 * x581 * x936 / (x551 * x579);
  amrex::Real x985 = -kf_qss[42] * x558 * x581 / ((x579) * (x579)) +
                     kf_qss[42] * x982 + x909 * x979 + x935 * x984;
  amrex::Real x987 = x433 * x584 * x952;
  amrex::Real x988 = kf_qss[38] * x588 / x579 + kf_qss[42] * x976 -
                     x585 * x830 + x951 * x987 - x963 * x985;
  amrex::Real x989 = x319 * x728;
  amrex::Real x994 =
    1.7777777777777777 * x625 /
    ((-0.73540532268950665 * x622 - 0.18666666666666668 * x625 + 1) *
     (-0.73540532268950665 * x622 - 0.18666666666666668 * x625 + 1));
  x625 = 2.3703703703703702 * ((x625) * (x625)) /
         ((-0.73540532269 * x622 - 0.18666666666666668 * x625 + 1) *
          (-0.73540532269 * x622 - 0.18666666666666668 * x625 + 1) *
          (-0.73540532269 * x622 - 0.18666666666666668 * x625 + 1));
  amrex::Real x998 = 2.2e+18 * x25 * x622 * x635 / ((x630) * (x630));
  x620 = exp(M_LN10 * (0.43429448190325198 * x622 / x630)) /
         (kf_qss[4] * ((x620 + 1.0) * (x620 + 1.0)));
  amrex::Real x1002 = x776 * exp(-5595.76932374848 * invT - 9.6 * logT + x615);
  amrex::Real x1003 = 9.68e+36 * x1002 * x620 - 4.4e+18 * x635 +
                      x998 * (0.56 * x625 * x688 + 4.0 * x688 * x994);
  amrex::Real x1006 =
    x641 * (kf_qss[67] * sc[5] * x571 + 10.0e-13) / ((x637) * (x637));
  amrex::Real x1008 = x602 * x605;
  amrex::Real x1010 = x594 * x977 / ((x551) * (x551));
  amrex::Real x1012 = x581 * x594 * x936 / (x551 * x579);
  amrex::Real x1014 = x603 * x604 / ((x579) * (x579));
  amrex::Real x1015 = x584 * x600 * x952;
  amrex::Real x1016 =
    -kf_qss[42] * x1014 - kf_qss[42] * x581 * x596 / ((x579) * (x579)) -
    kf_qss[42] * x639 * x640 / ((x579) * (x579)) + x1003 * x1006 +
    x1008 * x821 / ((x62) * (x62)) + x1010 * x909 + x1012 * x935 +
    x1015 * x951 - x585 * x971 - x601 * x985;
  amrex::Real x1018 = x318 * x322 * x827;
  amrex::Real x1019 =
    kf_qss[19] / x313 + x1016 * x593 * x648 / ((x642) * (x642)) + x1018 * x826 +
    x433 * x646 * x951 * x952 - x649 * x988 - x651 * x830 - x683 * x959 +
    x726 * x989 - x883 * x885 - x962 * x963 - x973 * x974;
  amrex::Real x1021 = -x601 * x856 + (kf_qss[38] * sc[1] + 10.0e-13) / x851;
  amrex::Real x1022 = x673 / x642;
  amrex::Real x1024 = -x1021 * x1022 - x670 * x857 - x674 * x854 +
                      (kf_qss[33] * sc[4] + sc[1] * x276 + 10.0e-13) / x851;
  amrex::Real x1025 = x1024 / x675;
  amrex::Real x1029 =
    1.7777777777777777 * x839 /
    ((-0.73540532268950665 * x837 - 0.18666666666666668 * x839 + 1) *
     (-0.73540532268950665 * x837 - 0.18666666666666668 * x839 + 1));
  x839 = 2.3703703703703702 * ((x839) * (x839)) /
         ((-0.73540532269 * x837 - 0.18666666666666668 * x839 + 1) *
          (-0.73540532269 * x837 - 0.18666666666666668 * x839 + 1) *
          (-0.73540532269 * x837 - 0.18666666666666668 * x839 + 1));
  amrex::Real x1034 =
    2.69e+16 * sc[10] * x833 * x837 * x848 / ((x844) * (x844));
  amrex::Real x1035 = sc[10] * exp(-974.22746499793698 * invT - 3.74 * logT);
  amrex::Real x1039 =
    sc[10] * x25 * exp(-1948.4549299958701 * invT - 7.48 * logT);
  amrex::Real x1040 =
    1.3819598955238318e-33 * exp(M_LN10 * (0.43429448190325198 * x837 / x844)) /
    (kf_qss[0] * ((3.717472118959108e-17 + x833 / kf_qss[0]) *
                  (3.717472118959108e-17 + x833 / kf_qss[0])));
  amrex::Real x1042 = x1034 * (4.0 * x1029 * x688 + 0.56 * x688 * x839) -
                      5.38e+16 * x1035 * x848 + 1.44722e+33 * x1039 * x1040;
  amrex::Real x1043 = -kf_qss[19] - kf_qss[38] * x588 + x1042;
  amrex::Real x1045 =
    (kf_qss[59] * sc[1] * x124 + 10.0e-13) / ((x851) * (x851));
  amrex::Real x1046 = x1045 * x644;
  amrex::Real x1047 = x439 * x827 * x854;
  amrex::Real x1048 = (kf_qss[18] * sc[1] * x393 + kf_qss[21] * sc[2] * x382 +
                       sc[10] * x341 + 10.0e-13) /
                      ((x851) * (x851));
  amrex::Real x1049 = x234 * x854;
  amrex::Real x1050 =
    x1043 * x1046 - x1043 * x1048 + x1047 * x826 - x1049 * x950;
  amrex::Real x1051 = x1045 * x683;
  amrex::Real x1053 = x433 * x856 * x952;
  amrex::Real x1054 = (kf_qss[38] * sc[1] + 10.0e-13) / ((x851) * (x851));
  amrex::Real x1055 = x600 * x856 * x952;
  amrex::Real x1056 =
    -x1043 * x1054 - x1050 * x601 + x1055 * x951 - x857 * x971;
  amrex::Real x1058 = x1049 * x728;
  amrex::Real x1059 = (kf_qss[76] * sc[16] + 10.0e-13) / ((x169) * (x169));
  amrex::Real x1060 = x172 * x659;
  amrex::Real x1061 = -kf_qss[85] * x56 * x660 / x169 - x1059 * x726 +
                      x1060 * x821 / ((x62) * (x62)) + x660 * x726 * x824;
  amrex::Real x1062 =
    (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / ((x420) * (x420));
  amrex::Real x1064 = x425 * x666 * x827;
  amrex::Real x1065 = -x1061 * x426 - x1062 * x759 + x1064 * x826 - x674 * x796;
  amrex::Real x1066 = x562 * x670;
  amrex::Real x1067 = x318 * x666 * x827;
  amrex::Real x1068 = x605 * x659;
  x661 = x661 / ((x579) * (x579));
  amrex::Real x1071 = x584 * x670 * x952;
  amrex::Real x1072 = x604 * x660 / ((x579) * (x579));
  amrex::Real x1073 = -kf_qss[42] * x1072 + kf_qss[42] * x661 - x1065 * x585 -
                      x1066 * x985 + x1068 * x821 / ((x62) * (x62)) +
                      x1071 * x951;
  amrex::Real x1075 = x316 * x659;
  amrex::Real x1076 = x315 * x660 / ((x313) * (x313));
  amrex::Real x1077 = x1016 * x648 * x673 / ((x642) * (x642)) - x1022 * x973 -
                      x1061 * x319 - x1065 * x651 - x1066 * x962 +
                      x1067 * x826 - x1073 * x649 +
                      x1075 * x821 / ((x62) * (x62)) + x1076 * x883 +
                      x646 * x670 * x951 * x952 - x674 * x959;
  amrex::Real x1078 = -x319 * x322 - x433 * x651 - x593 * x649 +
                      (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / x313;
  amrex::Real x1081 = x1024 * x1078 / ((x675) * (x675));
  amrex::Real x1082 = x322 * x827 * x854;
  amrex::Real x1083 = x1021 / x642;
  amrex::Real x1084 =
    (kf_qss[33] * sc[4] + sc[1] * x276 + 10.0e-13) / ((x851) * (x851));
  amrex::Real x1085 = x670 * x856 * x952;
  amrex::Real x1086 = x1045 * x674;
  amrex::Real x1087 = x666 * x827 * x854;
  amrex::Real x1089 = x1021 * x673 / ((x642) * (x642));
  amrex::Real x1090 = x1016 * x1089 - x1022 * x1056 - x1043 * x1084 +
                      x1043 * x1086 - x1049 * x1061 - x1050 * x1066 -
                      x1065 * x857 - x1073 * x1083 + x1085 * x951 +
                      x1087 * x826;
  amrex::Real x1091 = x1078 / x675;
  const amrex::Real x1094 = refC * exp(
                                     -g_RT[10] + g_RT[16] - g_RT_qss[0] -
                                     974.22746499793698 * invT - 3.74 * logT);
  const amrex::Real x1095 = sc[16] * x1094;
  amrex::Real x1101 =
    kf_qss[54] * exp(-g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0]);
  const amrex::Real x1104 = exp(g_RT[14] + g_RT[1] - g_RT[9] - g_RT_qss[0]);
  const amrex::Real x1107 = exp(g_RT[10] + g_RT[1] - g_RT[2] - g_RT_qss[0]);
  amrex::Real x1111 =
    kf_qss[20] * exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0]);
  const amrex::Real x1114 = exp(g_RT[10] + g_RT[13] - g_RT[16] - g_RT_qss[0]);
  amrex::Real x1117 = exp(g_RT[13] + g_RT[1] - g_RT_qss[0] - g_RT_qss[1]);
  amrex::Real x1121 =
    kf_qss[17] * sc[10] * sc[1] * x1107 + kf_qss[35] * sc[13] * sc[1] * x1117 +
    kf_qss[71] * sc[14] * sc[1] * x1104 + kf_qss[75] * sc[10] * sc[13] * x1114 +
    sc[12] * sc[1] * x1111 + sc[17] * sc[1] * x1101 +
    2.69e+16 * x1095 * x25 * x848 + 10.0e-13;
  const amrex::Real x1123 = exp(g_RT[17] + g_RT[1] - g_RT[4] - g_RT_qss[5]);
  amrex::Real x1127 = exp(-25009.8682904946 * invT - 0.64 * logT) / x12;
  const amrex::Real x1133 = exp(g_RT[13] - g_RT_qss[5]);
  amrex::Real x1135 =
    kf_qss[130] * sc[19] * sc[1] + kf_qss[79] * sc[13] * sc[1] * x1133 +
    kf_qss[81] * sc[17] * sc[1] * x1123 + 2450000000.0 * sc[13] * x1127 * x5 +
    sc[14] * x25 * x34 * x50 + 10.0e-13;
  const amrex::Real x1136 = x1135 / x62;
  const amrex::Real x1137 = refC * sc[14];
  amrex::Real x1140 = g_RT[14] - g_RT[1] - g_RT_qss[6];
  amrex::Real x1141 = x154 * exp(x1140 + x138);
  amrex::Real x1144 = -g_RT[13] + g_RT_qss[6];
  const amrex::Real x1149 = exp(g_RT[0] - g_RT[1] - x1144);
  amrex::Real x1155 =
    kf_qss[141] * exp(g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7]);
  amrex::Real x1160 =
    kf_qss[96] * exp(g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1163 = exp(g_RT[17] + g_RT[1] - g_RT[2] - g_RT_qss[6]);
  amrex::Real x1166 = -g_RT[6] + g_RT[7];
  amrex::Real x1169 = kf_qss[93] * exp(g_RT[14] - g_RT_qss[6] - x1166);
  const amrex::Real x1172 = refCinv * sc[1];
  amrex::Real x1174 =
    x116 * exp(g_RT[1] - 18014.512518476698 * invT - 3.4 * logT - x1144) /
    (x106 + 1.0);
  amrex::Real x1176 = sc[13] * x1172 * x1174;
  const amrex::Real x1178 = exp(g_RT[14] - g_RT_qss[6] - x99);
  const amrex::Real x1184 = exp(g_RT[10] - g_RT[2] + g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1187 = exp(-x1144 - x135);
  const amrex::Real x1192 = exp(-x1144 - x385);
  const amrex::Real x1197 = exp(
    g_RT[20] - g_RT[8] - g_RT_qss[6] - 4916.3261815789501 * invT -
    11.94 * logT);
  amrex::Real x1199 = refC * sc[20] * x1197;
  amrex::Real x1205 =
    kf_qss[104] * sc[14] * sc[1] + kf_qss[105] * sc[14] * sc[2] +
    kf_qss[108] * sc[14] * sc[4] + kf_qss[109] * sc[14] * sc[3] +
    kf_qss[114] * sc[14] * sc[8] + kf_qss[131] * sc[19] * sc[6] +
    kf_qss[84] * sc[0] * sc[13] * x1149 + kf_qss[86] * sc[17] * sc[1] * x1163 +
    kf_qss[87] * sc[10] * sc[8] * x1184 + kf_qss[88] * sc[13] * sc[5] * x1187 +
    kf_qss[89] * sc[13] * sc[6] * exp(-x1144 - x91) +
    kf_qss[94] * sc[10] * sc[14] * x1178 + kf_qss[95] * sc[13] * sc[9] * x1192 +
    sc[14] * sc[6] * x1169 + sc[19] * sc[1] * x1160 + sc[19] * sc[8] * x1155 +
    1.4e+18 * x1137 * x1141 * x25 + 2.565e+21 * x1176 * x25 +
    4.27e+46 * x1199 * x25 * x85 + 10.0e-13;
  amrex::Real x1208 = kf_qss[100] * exp(g_RT[17] - g_RT_qss[8] - x159);
  const amrex::Real x1210 = exp(g_RT[17] - g_RT_qss[8] - x91);
  amrex::Real x1217 = kf_qss[101] * exp(g_RT[17] - g_RT_qss[8] - x135);
  const amrex::Real x1219 = refCinv * sc[10];
  const amrex::Real x1220 = sc[4] * x1219;
  const amrex::Real x1223 =
    exp(g_RT[10] + g_RT[12] - g_RT[3] + g_RT[4] - g_RT_qss[8]);
  const amrex::Real x1228 = exp(
    g_RT[18] - g_RT[1] - g_RT_qss[8] - 2365.1183292821802 * invT -
    7.297 * logT);
  amrex::Real x1231 = refC * sc[18] * x1228 * x191;
  amrex::Real x1235 =
    kf_qss[99] * exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8]);
  amrex::Real x1238 = kf_qss[97] * exp(g_RT[10] + g_RT[8] - g_RT_qss[8]);
  amrex::Real x1240 = kf_qss[102] * sc[17] * sc[6] * x1210 +
                      kf_qss[103] * sc[12] * x1220 * x1223 +
                      sc[0] * sc[17] * x1235 + sc[17] * sc[1] * x211 * x224 +
                      sc[17] * sc[4] * x1208 + sc[17] * sc[5] * x1217 +
                      sc[8] * x1219 * x1238 + 5.2e+27 * x1231 * x25 + 10.0e-13;
  const amrex::Real x1241 = x1240 / x228;
  amrex::Real x1242 = x1136 * x172 - x1205 / x169 + x1241 * x232;
  const amrex::Real x1244 = exp(g_RT[10] - g_RT[8] + g_RT[9] - g_RT_qss[3]);
  const amrex::Real x1248 = exp(-x135 - x99);
  const amrex::Real x1252 = exp(g_RT[11] + g_RT[1] - g_RT[2] - g_RT_qss[3]);
  const amrex::Real x1255 = exp(-x159 - x99);
  const amrex::Real x1263 = exp(-g_RT[19] + g_RT[20] - x99);
  const amrex::Real x1269 = exp(g_RT[0] + g_RT[10] - g_RT[1] - g_RT_qss[3]);
  amrex::Real x1275 = sc[1] * x1219 * exp(g_RT[10] + g_RT[1] - g_RT_qss[3]);
  amrex::Real x1278 = refC * sc[12];
  amrex::Real x1279 = g_RT[12] - g_RT[1] - g_RT_qss[3];
  amrex::Real x1281 = x412 * exp(x1279 + x396);
  amrex::Real x1287 =
    refC * sc[18] * exp(g_RT[18] - g_RT[8] - g_RT_qss[3] + x356);
  const amrex::Real x1295 = exp(g_RT[15] - g_RT_qss[7] - x99);
  amrex::Real x1299 =
    kf_qss[106] * sc[14] * sc[2] + kf_qss[124] * sc[10] * sc[15] * x1295 +
    kf_qss[132] * sc[10] * sc[20] * x1263 + kf_qss[16] * x1275 * x25 +
    kf_qss[23] * sc[0] * sc[10] * x1269 + kf_qss[24] * sc[10] * sc[4] * x1255 +
    kf_qss[25] * sc[11] * sc[1] * x1252 + kf_qss[26] * sc[10] * sc[5] * x1248 +
    kf_qss[27] * sc[10] * sc[6] * exp(-x91 - x99) +
    kf_qss[49] * sc[12] * sc[1] + kf_qss[50] * sc[12] * sc[2] +
    kf_qss[51] * sc[12] * sc[4] + kf_qss[52] * sc[12] * sc[3] +
    kf_qss[53] * sc[12] * sc[6] + kf_qss[60] * sc[10] * sc[9] * x1244 +
    kf_qss[61] * sc[12] * sc[8] + kf_qss[94] * sc[10] * sc[14] * x1178 +
    1350000000000.0 * x1278 * x1281 * x25 + 2.2e+36 * x1287 * x25 * x373 +
    10.0e-13;
  const amrex::Real x1301 = exp(g_RT[0] - g_RT[1] + g_RT[20] - g_RT_qss[9]);
  const amrex::Real x1304 = exp(g_RT[20] - g_RT_qss[9] - x91);
  const amrex::Real x1308 = exp(g_RT[20] - g_RT_qss[9] - x135);
  amrex::Real x1312 = sc[1] * sc[20] * x476;
  const amrex::Real x1315 = exp(g_RT[20] - g_RT_qss[9] - x385);
  amrex::Real x1318 = kf_qss[115] * sc[14] * sc[8] +
                      kf_qss[135] * sc[0] * sc[20] * x1301 +
                      kf_qss[137] * sc[20] * sc[5] * x1308 +
                      kf_qss[138] * sc[20] * sc[6] * x1304 +
                      kf_qss[140] * sc[20] * sc[9] * x1315 +
                      6.26e+26 * x1312 * x458 * x461 + 10.0e-13;
  const amrex::Real x1319 = x1318 / x488;
  const amrex::Real x1321 = exp(g_RT[0] + g_RT[14] - g_RT[1] - g_RT_qss[7]);
  amrex::Real x1325 = -g_RT[3] + g_RT[6];
  const amrex::Real x1326 = exp(g_RT[15] - g_RT_qss[7] - x1325);
  amrex::Real x1329 = sc[14] * sc[1];
  const amrex::Real x1332 = exp(g_RT[18] + g_RT[1] - g_RT[2] - g_RT_qss[7]);
  amrex::Real x1336 = kf_qss[123] * exp(g_RT[15] - g_RT_qss[7] - x1166);
  const amrex::Real x1338 = exp(g_RT[12] - g_RT[2] + g_RT[8] - g_RT_qss[7]);
  const amrex::Real x1341 = refC * sc[15];
  amrex::Real x1342 = g_RT[15] - g_RT[1] - g_RT_qss[7];
  amrex::Real x1343 = x537 * exp(x1342 + x521);
  const amrex::Real x1350 = exp(g_RT[14] - g_RT[6] + g_RT[7] - g_RT_qss[7]);
  const amrex::Real x1353 = exp(g_RT[14] - g_RT_qss[7] - x91);
  const amrex::Real x1356 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT[8] - g_RT_qss[7]);
  const amrex::Real x1358 = refCinv * sc[8];
  amrex::Real x1363 =
    kf_qss[116] * sc[0] * sc[14] * x1321 +
    kf_qss[117] * sc[12] * sc[8] * x1338 +
    kf_qss[118] * sc[18] * sc[1] * x1332 +
    kf_qss[119] * sc[14] * sc[6] * x1353 +
    kf_qss[120] * sc[15] * sc[3] * x1326 +
    kf_qss[121] * sc[14] * sc[7] * x1350 +
    kf_qss[122] * sc[12] * sc[4] * x1356 * x1358 +
    kf_qss[124] * sc[10] * sc[15] * x1295 + kf_qss[125] * sc[15] * sc[1] +
    kf_qss[126] * sc[15] * sc[2] + kf_qss[127] * sc[15] * sc[4] +
    kf_qss[129] * sc[15] * sc[8] + kf_qss[64] * ((sc[8]) * (sc[8])) +
    sc[15] * sc[6] * x1336 + sc[19] * sc[8] * x1155 +
    1.2e+30 * x1329 * x25 * x517 * exp(x501) + 1.99e+29 * x1341 * x1343 * x25 +
    10.0e-13;
  amrex::Real x1364 = x1319 * x554 - x1363 / x551;
  amrex::Real x1365 = x1241 * x423 - x1242 * x426 - x1299 / x420 - x1364 * x911;
  amrex::Real x1366 = x1365 * x562;
  amrex::Real x1367 = x1242 * x234;
  const amrex::Real x1369 = exp(g_RT[0] + g_RT[13] - 2.0 * g_RT_qss[1]);
  const amrex::Real x1374 = exp(g_RT[12] + g_RT[4] - g_RT[6] - g_RT_qss[1]);
  amrex::Real x1379 =
    kf_qss[28] * exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1]);
  const amrex::Real x1381 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[1]);
  amrex::Real x1385 = -g_RT[1] + g_RT[8] - g_RT_qss[1];
  const amrex::Real x1392 = -2.0 * g_RT[8] + g_RT[9];
  amrex::Real x1398 = kf_qss[31] * refCinv *
                      exp(g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1]);
  const amrex::Real x1402 = exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[1]);
  amrex::Real x1406 = refC * sc[17];
  amrex::Real x1407 = -g_RT[10] + g_RT[17] - g_RT_qss[1];
  amrex::Real x1408 = x264 * exp(x1407 + x248);
  amrex::Real x1414 =
    kf_qss[111] * exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1]);
  amrex::Real x1416 =
    kf_qss[107] * sc[14] * sc[2] + kf_qss[32] * sc[12] * sc[1] * x1381 +
    kf_qss[34] * sc[12] * sc[4] * x1374 + kf_qss[35] * sc[13] * sc[1] * x1117 +
    2.0 * kf_qss[36] * sc[0] * sc[13] * x1369 + kf_qss[55] * sc[4] * sc[8] +
    kf_qss[62] * sc[14] * sc[1] * x1402 +
    kf_qss[72] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[1] - x1392) +
    kf_qss[77] * sc[13] * sc[2] + kf_qss[83] * sc[17] * sc[2] +
    3200000000000000.0 * refC * sc[8] * x25 * x309 * exp(x1385 + x293) +
    sc[11] * ((sc[1]) * (sc[1])) * x1398 + sc[19] * sc[1] * x1414 +
    sc[1] * sc[8] * x1379 + 2.69e+21 * x1406 * x1408 * x25 + 10.0e-13;
  amrex::Real x1419 = kf_qss[70] * exp(g_RT[12] - g_RT_qss[4] - x91);
  amrex::Real x1421 = sc[12] * sc[1];
  amrex::Real x1422 = 2.2e+18 * x25 * x633 * exp(x616);
  const amrex::Real x1424 = exp(g_RT[12] - g_RT_qss[4] - x135);
  const amrex::Real x1427 = exp(g_RT[12] - g_RT_qss[4] - x159);
  const amrex::Real x1431 = exp(g_RT[0] + g_RT[12] - g_RT[1] - g_RT_qss[4]);
  const amrex::Real x1435 = exp(-g_RT[1] + g_RT[4] + g_RT[8] - g_RT_qss[4]);
  amrex::Real x1438 =
    kf_qss[57] * sc[3] * sc[8] + kf_qss[58] * sc[6] * sc[8] +
    kf_qss[65] * sc[0] * sc[12] * x1431 + kf_qss[66] * sc[4] * sc[8] * x1435 +
    kf_qss[68] * sc[12] * sc[4] * x1427 + kf_qss[69] * sc[12] * sc[5] * x1424 +
    sc[12] * sc[6] * x1419 + x1421 * x1422 + 10.0e-13;
  const amrex::Real x1439 = x1438 / x637;
  const amrex::Real x1441 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1445 = exp(g_RT[10] - g_RT[11] + g_RT[12] - g_RT_qss[2]);
  const amrex::Real x1448 = exp(g_RT[10] - g_RT[3] + g_RT[5] - g_RT_qss[2]);
  const amrex::Real x1452 = exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[2]);
  const amrex::Real x1455 =
    exp(g_RT[10] + g_RT[1] - g_RT[3] + g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1457 = exp(g_RT[0] + g_RT[10] - g_RT[2] - g_RT_qss[2]);
  amrex::Real x1462 =
    kf_qss[63] * exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2]);
  const amrex::Real x1466 = exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[2]);
  amrex::Real x1469 =
    kf_qss[113] * sc[19] * sc[1] * x1452 + kf_qss[39] * sc[0] * sc[10] * x1457 +
    kf_qss[41] * sc[12] * sc[1] * x1441 + kf_qss[42] * sc[1] * sc[8] * x1466 +
    kf_qss[43] * sc[1] * x1220 * x1455 + kf_qss[44] * sc[10] * sc[5] * x1448 +
    kf_qss[48] * sc[10] * sc[12] * x1445 + kf_qss[56] * sc[4] * sc[8] +
    kf_qss[73] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[2] - x1392) +
    kf_qss[74] * sc[16] * sc[1] + sc[14] * sc[1] * x1462 + 10.0e-13;
  amrex::Real x1470 =
    x1136 * x605 - x1364 * x977 - x1366 * x584 + x1439 * x641 - x1469 / x579;
  amrex::Real x1471 =
    x1136 * x316 - x1242 * x319 - x1365 * x651 - x1416 / x313 - x1470 * x649;
  amrex::Real x1472 = x1470 / x642;
  amrex::Real x1473 =
    -x1021 * x1472 - x1025 * x1471 - x1121 / x851 - x1366 * x856 - x1367 * x854;
  amrex::Real x1474 =
    -x1021 * x974 - x1024 * x1091 - x433 * x857 - x683 * x854 + 1;
  amrex::Real x1475 = x1473 / ((x1474) * (x1474));
  const amrex::Real x1476 =
    x1475 *
    (x1016 * x1021 * x593 / ((x642) * (x642)) - x1019 * x1025 + x1043 * x1051 -
     x1050 * x963 + x1053 * x951 - x1056 * x974 + x1058 * x726 + x1077 * x1081 +
     x1082 * x826 - x1083 * x988 - x1090 * x1091 - x830 * x857);
  x1121 = x1121 / ((x851) * (x851));
  x533 = 1.99e+29 * x1341 * x1343 * x25 * x526 / ((x533) * (x533));
  amrex::Real x1485 =
    sc[14] * sc[1] * x25 * exp(-7014.8403213177899 * invT - 15.24 * logT);
  amrex::Real x1491 =
    x1341 * x888 * exp(-6728.0068218091001 * invT - 14.16 * logT + x1342);
  x513 = 1.2e+30 * x1329 * x25 * x506 * x517 * exp(x501) / ((x513) * (x513));
  amrex::Real x1493 = 2.4e+30 * x1329 * x517 * exp(x501) +
                      3.98e+29 * x1341 * x1343 - 2.88e+60 * x1485 * x904 -
                      7.9202e+58 * x1491 -
                      x513 * (0.56 * x508 * x688 + 4.0 * x688 * x893) -
                      x533 * (4.0 * x528 * x688 + 0.56 * x688 * x899);
  x1363 = x1363 / ((x551) * (x551));
  amrex::Real x1495 = x1319 * x553 / ((x551) * (x551));
  x1318 = x1318 / ((x488) * (x488));
  x472 = 6.26e+26 * x1312 * x458 * x461 * x465 / ((x472) * (x472));
  amrex::Real x1502 = -7.83752e+53 * sc[1] * sc[20] * x923 *
                        exp(-7045.0333212660798 * invT - 13.32 * logT) +
                      1.252e+27 * x1312 * x461 -
                      x472 * (0.56 * x467 + 4.0 * x918);
  amrex::Real x1504 = -x1318 * x554 * x930 + x1363 * x909 - x1495 * x909 -
                      (kf_qss[116] * sc[14] * x1321 + x1493) / x551 +
                      x554 * (kf_qss[135] * sc[20] * x1301 + x1502) / x488;
  x187 = 5.2e+27 * x1231 * x180 * x25 / ((x187) * (x187));
  amrex::Real x1507 =
    sc[17] * x788 * exp(-11976.556646152299 * invT - 15.28 * logT);
  x221 = sc[17] * sc[1] * x211 * x213 * x224 / ((x221) * (x221));
  const amrex::Real x1511 = refC * sc[18] * x25 *
                            exp(
                              g_RT[18] - g_RT[1] - g_RT_qss[8] -
                              4730.2366585643604 * invT - 14.594 * logT);
  amrex::Real x1513 = sc[17] * x224 * exp(x208);
  x769 = 7.6e+29 * sc[1] * x1513 + 1.04e+28 * x1231 - 2.888e+59 * x1507 * x774 -
         5.408e+55 * x1511 * x790 -
         x187 * (0.56 * ((x182) * (x182)) * x688 / ((x185) * (x185) * (x185)) +
                 4.0 * x688 * x781) -
         x221 * x769;
  x1240 = x1240 / ((x228) * (x228));
  amrex::Real x1522 = x1364 * x560 * x936;
  const amrex::Real x1523 = refC * sc[18] * x25 *
                            exp(
                              g_RT[18] - g_RT[8] - g_RT_qss[3] -
                              5132.8099912081398 * invT - 19.176 * logT);
  x408 = 1350000000000.0 * x1278 * x1281 * x25 * x401 / ((x408) * (x408));
  amrex::Real x1527 =
    x1278 * x736 * exp(-1434.1674975434501 * invT - 5.14 * logT + x1279);
  x369 = 2.2e+36 * x1287 * x25 * x362 * x373 / ((x369) * (x369));
  amrex::Real x1529 = 2 * kf_qss[16] * x1275 +
                      2700000000000.0 * x1278 * x412 * exp(x1279 + x396) +
                      4.4e+36 * x1287 * x373 - 9.68e+72 * x1523 * x755 -
                      3.645e+24 * x1527 -
                      x369 * (0.56 * x364 * x688 + 4.0 * x688 * x742) -
                      x408 * (0.56 * x403 * x688 + 4.0 * x688 * x731);
  x425 = x1242 * x425 * x827;
  x1299 = x1299 / ((x420) * (x420));
  x231 = x1241 * x231 / ((x169) * (x169));
  x106 = sc[13] * x116 * x1172 * x25 *
         exp(g_RT[1] - 36029.025036953499 * invT - 6.8 * logT - x1144) /
         (kf_qss[6] * ((x106 + 1.0) * (x106 + 1.0)));
  x116 = 1.4e+18 * x1137 * x1141 * x143 * x25 / ((x151) * (x151));
  x151 = x1137 * x695 * exp(-3341.3586609433401 * invT - 7.72 * logT + x1140);
  const amrex::Real x1539 = refC * sc[20] * x25 *
                            exp(
                              g_RT[20] - g_RT[8] - g_RT_qss[6] -
                              9832.6523631579003 * invT - 23.88 * logT);
  x81 = 4.27e+46 * x1199 * x25 * x74 * x85 / ((x81) * (x81));
  x114 = 2.565e+21 * x107 * x1176 * x25 / ((x114) * (x114));
  amrex::Real x1544 = -1.315845e+43 * x106 + 2.8e+18 * x1137 * x1141 -
                      x114 * (0.56 * x109 * x688 + 4.0 * x688 * x714) -
                      x116 * (4.0 * x146 * x688 + 0.56 * x687 * x688) +
                      5.13e+21 * x1176 + 8.54e+46 * x1199 * x85 -
                      3.92e+36 * x151 - 3.64658e+93 * x1539 * x723 -
                      x81 * (0.56 * x688 * x703 + 4.0 * x688 * x76);
  x1135 = x1135 / ((x62) * (x62));
  x1205 = x1205 / ((x169) * (x169));
  x46 = sc[14] * x25 * x34 * x37 * x50 / ((x46) * (x46));
  amrex::Real x1551 =
    sc[14] * x805 * exp(-100502.432494519 * invT - 18.62 * logT);
  x12 = sc[13] * x5 * exp(-50019.736580989098 * invT - 1.28 * logT) /
        (kf_qss[15] * ((x12) * (x12)));
  amrex::Real x1554 =
    (4900000000.0 * sc[13] * x1127 + 1.4e+45 * sc[14] * x50 * exp(x31) -
     1.2005e+19 * x12 - 9.8e+89 * x1551 -
     x46 * (0.56 * x688 * x813 + 4.0 * x688 * x816)) /
    x62;
  amrex::Real x1555 = -x1240 * x232 * x792 + x1554 * x172;
  amrex::Real x1556 = kf_qss[85] * x1136 * x56 / x169 - x1135 * x172 * x821 -
                      x1136 * x726 * x824 + x1205 * x726 + x1555 - x231 * x726 +
                      x232 * (sc[17] * x1235 + x769) / x228 -
                      (kf_qss[84] * sc[13] * x1149 + x1544) / x169;
  x759 = -x1240 * x423 * x792 - x1241 * x422 * x759 / ((x420) * (x420)) +
         x1299 * x759 + x1364 * x556 * x559 * x759 / ((x420) * (x420)) -
         x1367 * x796 - x1504 * x911 + x1522 * x935 - x1556 * x426 +
         x425 * x826 - (kf_qss[23] * sc[10] * x1269 + x1529) / x420 +
         x423 * (sc[17] * x1235 + x769) / x228;
  x796 = x1242 * x827 * x854;
  x854 = x1471 / x675;
  x1045 = x1045 * x1367;
  amrex::Real x1563 = x1136 * x604 / ((x579) * (x579));
  amrex::Real x1565 = x1439 * x640 / ((x579) * (x579));
  x1469 = x1469 / ((x579) * (x579));
  x630 = x1421 * x1422 * x622 / ((x630) * (x630));
  amrex::Real x1571 = x1421 * x25 * exp(-5595.76932374848 * invT - 9.6 * logT);
  amrex::Real x1572 = 4.4e+18 * x1421 * x633 * exp(x616) -
                      9.68e+36 * x1571 * x620 -
                      x630 * (0.56 * x625 * x688 + 4.0 * x688 * x994);
  amrex::Real x1574 = x1364 * x581 * x936 / x579;
  amrex::Real x1575 = x1365 * x584 * x952;
  x1438 = x1438 / ((x637) * (x637));
  amrex::Real x1578 = -x1003 * x1438 * x641 + x1554 * x605;
  x985 = -kf_qss[39] * sc[10] * x1457 / x579 -
         kf_qss[42] * x1364 * x556 * x581 / ((x579) * (x579)) -
         kf_qss[42] * x1469 + kf_qss[42] * x1563 + kf_qss[42] * x1565 -
         x1135 * x605 * x821 - x1366 * x985 - x1504 * x977 + x1574 * x935 +
         x1575 * x951 + x1578 - x585 * x759 +
         x641 * (kf_qss[65] * sc[12] * x1431 + x1572) / x637;
  amrex::Real x1580 = x1365 * x856 * x952;
  x1024 = x1024 * x1471 / ((x675) * (x675));
  x315 = x1136 * x315 / ((x313) * (x313));
  x318 = x1242 * x318 * x827;
  x305 = 3200000000000000.0 * refC * sc[8] * x25 * x298 * x309 *
         exp(x1385 + x293) / ((x305) * (x305));
  x260 = 2.69e+21 * x1406 * x1408 * x25 * x253 / ((x260) * (x260));
  amrex::Real x1588 = refC * sc[8] * x309 * exp(x1385 + x293);
  amrex::Real x1590 =
    refC * sc[8] * x865 * exp(-1237.91299787961 * invT - 6.28 * logT + x1385);
  amrex::Real x1591 = 5.38e+21 * x1406 * x1408 -
                      1.44722e+43 * x1406 * x872 *
                        exp(-7140.6444877689701 * invT - 10.22 * logT + x1407) +
                      6400000000000000.0 * x1588 - 2.048e+31 * x1590 -
                      x260 * (4.0 * x255 * x688 + 0.56 * x688 * x877) -
                      x305 * (0.56 * x300 * x688 + 4.0 * x688 * x859);
  x1416 = x1416 / ((x313) * (x313));
  x883 = x1016 * x1470 * x648 / ((x642) * (x642)) - x1135 * x316 * x821 +
         x1365 * x646 * x951 * x952 - x1366 * x962 - x1367 * x959 +
         x1416 * x883 - x1472 * x973 + x1554 * x316 - x1556 * x319 -
         x315 * x883 + x318 * x826 - x649 * x985 - x651 * x759 -
         (2.0 * kf_qss[36] * sc[13] * x1369 + x1591) / x313;
  x844 = 2.69e+16 * x1095 * x25 * x837 * x848 / ((x844) * (x844));
  x959 = sc[16] * x776 *
         exp(
           -g_RT[10] + g_RT[16] - g_RT_qss[0] - 1948.4549299958701 * invT -
           7.48 * logT);
  x962 = -(-1.44722e+33 * x1040 * x959 + 5.38e+16 * x1095 * x848 -
           x844 * (4.0 * x1029 * x688 + 0.56 * x688 * x839)) /
         x851;
  x973 = (x1016 * x1021 * x1470 / ((x642) * (x642)) + x1024 * x1077 -
          x1025 * x883 + x1043 * x1045 + x1043 * x1121 - x1049 * x1556 -
          x1050 * x1366 - x1056 * x1472 - x1083 * x985 - x1090 * x854 +
          x1580 * x951 - x759 * x857 + x796 * x826 + x962) /
         x1474;
  x1043 = -sc[1] * x140 * x154 - 2.565e+21 * x119 +
          x694 * (2.0 * x146 * x688 + 0.28 * x687 * x688) + 1.96e+36 * x698 +
          6.579225e+42 * x701 + x707 * (0.28 * x688 * x703 + 2.0 * x688 * x76) -
          4.27e+46 * x708 * x85 +
          x719 * (0.28 * x109 * x688 + 2.0 * x688 * x714) +
          1.82329e+93 * x722 * x723;
  x140 =
    -kf_qss[59] * x124 - kf_qss[84] - kf_qss[85] + x1043 - x140 * x154 * x25;
  x1050 = ((x216) * (x216)) * x688 / ((x219) * (x219) * (x219));
  x182 = ((x182) * (x182)) * x688 / ((x185) * (x185) * (x185));
  x185 = -5.2e+27 * x191 * x772 - 3.8e+29 * x226 +
         x771 * (0.28 * x1050 + 2.0 * x216 * x688 / ((x219) * (x219))) +
         1.444e+59 * x774 * x777 + x786 * (0.28 * x182 + 2.0 * x688 * x781) +
         2.704e+55 * x789 * x790;
  x1056 = -kf_qss[98] - kf_qss[99] - 5.2e+27 * x176 * x191 + x185;
  x1090 = x173 * x232 / ((x228) * (x228));
  amrex::Real x1622 = -2450000000.0 * x14 - 7.0e+44 * x27 * x51 +
                      4.9e+89 * x808 + 6.0025e+18 * x811 +
                      x819 * (0.28 * x688 * x813 + 2.0 * x688 * x816);
  amrex::Real x1623 = -kf_qss[79] + x1622;
  amrex::Real x1625 = x66 * x824;
  amrex::Real x1627 = -kf_qss[85] * x172 / x62 + x1056 * x1090 + x140 * x1625 +
                      x140 * x799 + x1623 * x802 / ((x62) * (x62));
  amrex::Real x1629 = x232 * x434 / ((x228) * (x228));
  amrex::Real x1630 = x1056 * x1629 + x140 * x946 - x140 * x947;
  amrex::Real x1634 = x1034 * (2.0 * x1029 * x688 + 0.28 * x688 * x839) -
                      2.69e+16 * x1035 * x848 + 7.2361e+32 * x1039 * x1040;
  amrex::Real x1635 = x1046 * x1634 - x1048 * x1634;
  amrex::Real x1636 = kf_qss[18] * x393 / x851 -
                      kf_qss[59] * x124 * x644 / x851 + x1047 * x1627 -
                      x1049 * x1630 + x1635;
  amrex::Real x1642 =
    -kf_qss[16] - sc[1] * x398 * x412 - 2.2e+36 * x373 * x752 +
    x735 * (0.28 * x403 * x688 + 2.0 * x688 * x731) + 1.8225e+24 * x739 +
    x748 * (0.28 * x364 * x688 + 2.0 * x688 * x742) + 4.84e+72 * x754 * x755;
  x398 = -kf_qss[18] * x393 - kf_qss[23] - kf_qss[29] * x332 -
         kf_qss[40] * x376 + x1642 - x25 * x398 * x412;
  amrex::Real x1645 = x558 * x559 / ((x420) * (x420));
  amrex::Real x1649 =
    -sc[1] * x523 * x537 - 1.2e+30 * x519 + 3.9601e+58 * x891 +
    x897 * (0.28 * x508 * x688 + 2.0 * x688 * x893) +
    x903 * (2.0 * x528 * x688 + 0.28 * x688 * x899) + 1.44e+60 * x904 * x906;
  x523 = -kf_qss[116] -
         kf_qss[64] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) + x1649 -
         x25 * x523 * x537;
  amrex::Real x1652 =
    refC * x923 * exp(-7045.0333212660798 * invT - 13.32 * logT + x479);
  amrex::Real x1653 = 3.91876e+53 * x1652 - 6.26e+26 * x476 * x481 +
                      x922 * (0.28 * x467 + 2.0 * x918);
  amrex::Real x1654 = -kf_qss[134] - kf_qss[135] + x1653;
  amrex::Real x1656 = -kf_qss[134] * x490 / x551 + x1654 * x933 + x523 * x915;
  amrex::Real x1659 = x230 * x422 / ((x420) * (x420));
  amrex::Real x1660 = x173 * x423 / ((x228) * (x228));
  amrex::Real x1661 =
    -kf_qss[98] * x230 / x420 + x1056 * x1660 + x1659 * x398 - x398 * x761;
  amrex::Real x1662 = x422 * x435 / ((x420) * (x420));
  amrex::Real x1663 = x423 * x434 / ((x228) * (x228));
  amrex::Real x1664 = -kf_qss[98] * x435 / x420 + x1056 * x1663 + x1627 * x942 -
                      x1630 * x426 + x1645 * x398 + x1656 * x939 -
                      x1661 * x644 + x1662 * x398 + x523 * x913;
  amrex::Real x1665 = x559 * x596 / ((x420) * (x420));
  amrex::Real x1666 = x1656 * x970 + x1665 * x398 - x398 * x966 + x523 * x968;
  amrex::Real x1668 = kf_qss[38] / x851 - x1054 * x1634 + x1055 * x1664 -
                      x1636 * x601 - x1666 * x857;
  amrex::Real x1670 = x558 * x581 / ((x579) * (x579));
  amrex::Real x1671 = -kf_qss[38] * x1670 + kf_qss[38] * x982 +
                      kf_qss[40] * x376 / x579 + x1656 * x984 + x523 * x979;
  amrex::Real x1672 = x140 * x729 + x1627 * x829 - x1661 * x683 - x398 * x431;
  amrex::Real x1673 =
    kf_qss[38] * x976 + x1664 * x987 - x1671 * x963 - x1672 * x585;
  amrex::Real x1674 = x639 * x640 / ((x579) * (x579));
  amrex::Real x1677 = 4.84e+36 * x1002 * x620 - 2.2e+18 * x635 +
                      x998 * (0.28 * x625 * x688 + 2.0 * x688 * x994);
  amrex::Real x1678 = -kf_qss[65] - kf_qss[66] - kf_qss[67] + x1677;
  amrex::Real x1680 = x581 * x596 / ((x579) * (x579));
  amrex::Real x1681 =
    -kf_qss[38] * x1014 - kf_qss[38] * x1674 - kf_qss[38] * x1680 -
    kf_qss[67] * x639 / x579 + x1006 * x1678 + x1008 * x1623 / ((x62) * (x62)) +
    x1010 * x523 + x1012 * x1656 + x1015 * x1664 - x1666 * x585 - x1671 * x601;
  amrex::Real x1683 = x1021 * x593 / ((x642) * (x642));
  amrex::Real x1688 =
    sc[10] * x872 * exp(-7140.6444877689701 * invT - 10.22 * logT);
  amrex::Real x1689 =
    -sc[10] * x250 * x264 - sc[1] * x295 * x309 +
    1.024e+31 * sc[1] * x865 * exp(-1237.91299787961 * invT - 6.28 * logT) +
    7.2361e+42 * x1688 + x863 * (0.28 * x300 * x688 + 2.0 * x688 * x859) +
    x881 * (2.0 * x255 * x688 + 0.28 * x688 * x877);
  x295 = x1689 - x25 * x295 * x309 - x276;
  amrex::Real x1691 = -kf_qss[85] * x316 / x62 +
                      x1623 * x956 / ((x62) * (x62)) - x295 * x955 +
                      x295 * x958;
  amrex::Real x1692 = kf_qss[29] * x332 / x313 + x1627 * x961 - x1630 * x319 -
                      x1691 * x644 - x295 * x960;
  amrex::Real x1693 = x433 * x646 * x952;
  amrex::Real x1694 = x593 * x648 / ((x642) * (x642));
  amrex::Real x1695 = x600 * x646 * x952;
  amrex::Real x1696 = x1623 * x964 / ((x62) * (x62)) + x1664 * x1695 -
                      x1666 * x651 - x1692 * x601 + x295 * x965 - x295 * x972;
  amrex::Real x1697 = x1018 * x1627 + x140 * x989 + x1664 * x1693 -
                      x1672 * x651 - x1673 * x649 + x1681 * x1694 -
                      x1691 * x683 - x1692 * x963 - x1696 * x974 - x295 * x885;
  amrex::Real x1698 = x660 * x824;
  amrex::Real x1699 =
    -x1059 * x140 + x1060 * x1623 / ((x62) * (x62)) + x140 * x1698;
  amrex::Real x1700 =
    -x1062 * x398 + x1064 * x1627 - x1661 * x674 - x1699 * x426;
  amrex::Real x1701 = -kf_qss[38] * x1072 + kf_qss[38] * x661 - x1066 * x1671 +
                      x1068 * x1623 / ((x62) * (x62)) + x1071 * x1664 -
                      x1700 * x585;
  amrex::Real x1702 = -x1084 * x1634 + x1086 * x1634;
  x276 = -kf_qss[59] * x124 * x674 / x851 - x1022 * x1668 - x1049 * x1699 -
         x1066 * x1636 - x1083 * x1701 + x1085 * x1664 + x1087 * x1627 +
         x1089 * x1681 - x1700 * x857 + x1702 + x276 / x851;
  amrex::Real x1704 = x646 * x670 * x952;
  amrex::Real x1706 = x648 * x673 / ((x642) * (x642));
  amrex::Real x1707 = -x1022 * x1696 - x1066 * x1692 + x1067 * x1627 +
                      x1075 * x1623 / ((x62) * (x62)) + x1076 * x295 +
                      x1664 * x1704 + x1681 * x1706 - x1691 * x674 -
                      x1699 * x319 - x1700 * x651 - x1701 * x649;
  const amrex::Real x1708 =
    x1475 * (-kf_qss[59] * x124 * x683 / x851 - x1025 * x1697 + x1051 * x1634 +
             x1053 * x1664 + x1058 * x140 + x1081 * x1707 + x1082 * x1627 -
             x1083 * x1673 - x1091 * x276 - x1636 * x963 - x1668 * x974 -
             x1672 * x857 + x1681 * x1683);
  amrex::Real x1709 = x1021 * x1470 / ((x642) * (x642));
  amrex::Real x1711 = x1364 * x556 * x581 / ((x579) * (x579));
  x923 = sc[1] * sc[20] * x923 * exp(-7045.0333212660798 * invT - 13.32 * logT);
  amrex::Real x1716 = 6.26e+26 * x1312 * x461 -
                      x472 * (0.28 * x467 + 2.0 * x918) - 3.91876e+53 * x923;
  amrex::Real x1719 = 1.2e+30 * x1329 * x517 * exp(x501) +
                      1.99e+29 * x1341 * x1343 - 1.44e+60 * x1485 * x904 -
                      3.9601e+58 * x1491 -
                      x513 * (0.28 * x508 * x688 + 2.0 * x688 * x893) -
                      x533 * (2.0 * x528 * x688 + 0.28 * x688 * x899);
  amrex::Real x1721 =
    kf_qss[134] * x1319 / x551 - x1318 * x1654 * x554 + x1363 * x523 -
    x1495 * x523 -
    (kf_qss[118] * sc[18] * x1332 + kf_qss[125] * sc[15] +
     1.2e+30 * sc[14] * x25 * x517 * exp(x501) + x1719) /
      x551 +
    x554 * (6.26e+26 * sc[20] * x458 * x461 * x476 + x1716) / x488;
  amrex::Real x1722 = 2450000000.0 * sc[13] * x1127 + sc[14] * x34 * x50 -
                      6.0025e+18 * x12 - 4.9e+89 * x1551 -
                      x46 * (0.28 * x688 * x813 + 2.0 * x688 * x816);
  amrex::Real x1723 = (kf_qss[130] * sc[19] + kf_qss[79] * sc[13] * x1133 +
                       kf_qss[81] * sc[17] * x1123 + x1722) /
                      x62;
  amrex::Real x1727 = 2.2e+18 * x1421 * x633 * exp(x616) -
                      4.84e+36 * x1571 * x620 -
                      x630 * (0.28 * x625 * x688 + 2.0 * x688 * x994);
  amrex::Real x1730 = x1364 * x556 * x559 / ((x420) * (x420));
  amrex::Real x1731 = x1241 * x422 / ((x420) * (x420));
  amrex::Real x1733 =
    3.8e+29 * sc[1] * x1513 + 5.2e+27 * x1231 - 1.444e+59 * x1507 * x774 -
    2.704e+55 * x1511 * x790 - x187 * (0.28 * x182 + 2.0 * x688 * x781) -
    x221 * (0.28 * x1050 + 2.0 * x216 * x688 / ((x219) * (x219)));
  amrex::Real x1737 = kf_qss[16] * x1275 + 1350000000000.0 * x1278 * x1281 +
                      2.2e+36 * x1287 * x373 - 4.84e+72 * x1523 * x755 -
                      1.8225e+24 * x1527 -
                      x369 * (0.28 * x364 * x688 + 2.0 * x688 * x742) -
                      x408 * (0.28 * x403 * x688 + 2.0 * x688 * x731);
  amrex::Real x1739 = -6.579225e+42 * x106 + 1.4e+18 * x1137 * x1141 -
                      x114 * (0.28 * x109 * x688 + 2.0 * x688 * x714) -
                      x116 * (2.0 * x146 * x688 + 0.28 * x687 * x688) +
                      2.565e+21 * x1176 + 4.27e+46 * x1199 * x85 -
                      1.96e+36 * x151 - 1.82329e+93 * x1539 * x723 -
                      x81 * (0.28 * x688 * x703 + 2.0 * x688 * x76);
  x824 = x1136 * x824;
  amrex::Real x1741 =
    -x1056 * x1240 * x232 - x1135 * x1623 * x172 + x1205 * x140 - x140 * x231 -
    x140 * x824 + x172 * x1723 + x232 * (sc[17] * x211 * x224 + x1733) / x228 -
    (kf_qss[104] * sc[14] + kf_qss[86] * sc[17] * x1163 +
     2.565e+21 * refCinv * sc[13] * x1174 * x25 + sc[19] * x1160 + x1739) /
      x169;
  x398 = kf_qss[98] * x1241 / x420 - x1056 * x1240 * x423 + x1299 * x398 -
         x1367 * x1661 + x1522 * x1656 + x1627 * x425 - x1721 * x911 +
         x1730 * x398 - x1731 * x398 - x1741 * x426 -
         (kf_qss[16] * x1219 * x25 * exp(g_RT[10] + g_RT[1] - g_RT_qss[3]) +
          kf_qss[25] * sc[11] * x1252 + kf_qss[49] * sc[12] + x1737) /
           x420 +
         x423 * (sc[17] * x211 * x224 + x1733) / x228;
  x1661 = -kf_qss[38] * x1469 + kf_qss[38] * x1563 + kf_qss[38] * x1565 -
          kf_qss[38] * x1711 + kf_qss[67] * x1439 / x579 -
          x1135 * x1623 * x605 - x1366 * x1671 - x1438 * x1678 * x641 +
          x1574 * x1656 + x1575 * x1664 - x1721 * x977 + x1723 * x605 -
          x398 * x585 + x641 * (sc[12] * x1422 + x1727) / x637 -
          (kf_qss[113] * sc[19] * x1452 + kf_qss[41] * sc[12] * x1441 +
           kf_qss[42] * sc[8] * x1466 + kf_qss[43] * x1220 * x1455 +
           kf_qss[74] * sc[16] + sc[14] * x1462) /
            x579;
  x1671 = x1470 * x648 / ((x642) * (x642));
  amrex::Real x1745 = x1365 * x646 * x952;
  x872 = x1406 * x872 * exp(-7140.6444877689701 * invT - 10.22 * logT + x1407);
  x865 = -1.024e+31 * refC * sc[8] * x865 *
           exp(-1237.91299787961 * invT - 6.28 * logT + x1385) +
         2.69e+21 * x1406 * x1408 + 3200000000000000.0 * x1588 -
         x260 * (2.0 * x255 * x688 + 0.28 * x688 * x877) -
         x305 * (0.28 * x300 * x688 + 2.0 * x688 * x859) - 7.2361e+42 * x872;
  x295 = -x1135 * x1623 * x316 - x1366 * x1692 - x1367 * x1691 + x1416 * x295 -
         x1472 * x1696 + x1627 * x318 - x1661 * x649 + x1664 * x1745 +
         x1671 * x1681 + x1723 * x316 - x1741 * x319 - x295 * x315 -
         x398 * x651 -
         (kf_qss[32] * sc[12] * x1381 + kf_qss[35] * sc[13] * x1117 +
          kf_qss[62] * sc[14] * x1402 + 2.0 * sc[11] * ((sc[1])) * x1398 +
          sc[19] * x1414 + sc[8] * x1379 + x865) /
           x313;
  x1691 = -7.2361e+32 * x1040 * x959 + 2.69e+16 * x1095 * x848 -
          x844 * (2.0 * x1029 * x688 + 0.28 * x688 * x839);
  x1692 = x1045 * x1634 + x1121 * x1634;
  x1636 =
    (-kf_qss[59] * x124 * x1367 / x851 + x1024 * x1707 - x1025 * x295 -
     x1049 * x1741 - x1083 * x1661 - x1366 * x1636 - x1472 * x1668 +
     x1580 * x1664 + x1627 * x796 + x1681 * x1709 + x1692 - x276 * x854 -
     x398 * x857 -
     (kf_qss[17] * sc[10] * x1107 + kf_qss[35] * sc[13] * x1117 +
      kf_qss[71] * sc[14] * x1104 + sc[12] * x1111 + sc[17] * x1101 + x1691) /
       x851) /
    x1474;
  x1668 = -kf_qss[86] - kf_qss[87] + x1043;
  x1696 = -kf_qss[21] * x382 - kf_qss[24] - kf_qss[25] + x1642;
  x276 = -kf_qss[100] + x185 - x202;
  amrex::Real x1755 = x1659 * x1696 + x1660 * x276 - x1696 * x761;
  amrex::Real x1757 = -kf_qss[80] + x1622;
  amrex::Real x1759 = x1090 * x276 + x1625 * x1668 + x1668 * x799 +
                      x1757 * x802 / ((x62) * (x62)) - x202 * x230 / x169;
  amrex::Real x1760 = x1668 * x729 - x1696 * x431 - x1755 * x683 + x1759 * x829;
  amrex::Real x1761 = -kf_qss[39] - kf_qss[40];
  amrex::Real x1762 = -kf_qss[117] - kf_qss[118] + x1649;
  amrex::Real x1764 =
    -kf_qss[136] * x490 / x551 + x1762 * x915 + x933 * (-kf_qss[136] + x1653);
  amrex::Real x1765 =
    -kf_qss[57] * exp(-g_RT[8] + g_RT_qss[4] - x200) - kf_qss[68] + x1677;
  amrex::Real x1767 =
    x1670 * x1761 - x1761 * x982 + x1762 * x979 + x1764 * x984;
  amrex::Real x1768 = kf_qss[40] / x420 + x1665 * x1696 - x1696 * x966 +
                      x1762 * x968 + x1764 * x970;
  amrex::Real x1769 =
    x1629 * x276 + x1668 * x946 - x1668 * x947 - x202 * x435 / x169;
  amrex::Real x1770 = x1645 * x1696 + x1662 * x1696 + x1663 * x276 -
                      x1755 * x644 + x1759 * x942 + x1762 * x913 +
                      x1764 * x939 - x1769 * x426;
  amrex::Real x1771 = x1006 * x1765 + x1008 * x1757 / ((x62) * (x62)) +
                      x1010 * x1762 + x1012 * x1764 + x1014 * x1761 +
                      x1015 * x1770 + x1674 * x1761 + x1680 * x1761 -
                      x1767 * x601 - x1768 * x585;
  amrex::Real x1772 = -kf_qss[29] + x1689;
  amrex::Real x1775 = -kf_qss[80] * x66 / x313 +
                      x1757 * x956 / ((x62) * (x62)) - x1772 * x955 +
                      x1772 * x958;
  amrex::Real x1776 = x1759 * x961 - x1769 * x319 - x1772 * x960 - x1775 * x644;
  amrex::Real x1779 = -kf_qss[80] * x603 / x313 + x1695 * x1770 +
                      x1757 * x964 / ((x62) * (x62)) - x1768 * x651 +
                      x1772 * x965 - x1772 * x972 - x1776 * x601;
  amrex::Real x1780 =
    -x1760 * x585 - x1761 * x976 - x1767 * x963 + x1770 * x987;
  amrex::Real x1781 = x1018 * x1759 + x1668 * x989 + x1693 * x1770 +
                      x1694 * x1771 - x1760 * x651 - x1772 * x885 -
                      x1775 * x683 - x1776 * x963 - x1779 * x974 - x1780 * x649;
  amrex::Real x1782 = -kf_qss[17] + x1634;
  amrex::Real x1783 = kf_qss[21] * x382 / x851 + x1046 * x1782 + x1047 * x1759 -
                      x1048 * x1782 - x1049 * x1769;
  amrex::Real x1786 =
    -x1059 * x1668 + x1060 * x1757 / ((x62) * (x62)) + x1668 * x1698;
  amrex::Real x1788 = kf_qss[29] / x420 - x1062 * x1696 + x1064 * x1759 -
                      x1755 * x674 - x1786 * x426;
  amrex::Real x1789 = -x1066 * x1767 + x1068 * x1757 / ((x62) * (x62)) +
                      x1071 * x1770 + x1072 * x1761 - x1761 * x661 -
                      x1788 * x585;
  amrex::Real x1791 =
    -kf_qss[80] * x660 / x313 - x1022 * x1779 - x1066 * x1776 + x1067 * x1759 +
    x1075 * x1757 / ((x62) * (x62)) + x1076 * x1772 + x1704 * x1770 +
    x1706 * x1771 - x1775 * x674 - x1786 * x319 - x1788 * x651 - x1789 * x649;
  amrex::Real x1792 =
    -x1054 * x1782 + x1055 * x1770 - x1768 * x857 - x1783 * x601;
  amrex::Real x1793 = -x1022 * x1792 - x1049 * x1786 - x1066 * x1783 -
                      x1083 * x1789 - x1084 * x1782 + x1085 * x1770 +
                      x1086 * x1782 + x1087 * x1759 + x1089 * x1771 -
                      x1788 * x857;
  const amrex::Real x1794 =
    x1475 * (-x1025 * x1781 + x1051 * x1782 + x1053 * x1770 + x1058 * x1668 +
             x1081 * x1791 + x1082 * x1759 - x1083 * x1780 - x1091 * x1793 +
             x1683 * x1771 - x1760 * x857 - x1783 * x963 - x1792 * x974);
  amrex::Real x1797 = x1716 * x554 / x488;
  amrex::Real x1798 = kf_qss[136] * x1319 / x551 -
                      x1318 * x554 * (-kf_qss[136] + x1653) + x1363 * x1762 -
                      x1495 * x1762 + x1797 -
                      (kf_qss[126] * sc[15] + x1719) / x551;
  amrex::Real x1801 = x1722 * x605 / x62;
  amrex::Real x1804 = x172 * x1722 / x62;
  amrex::Real x1806 = x1733 * x232 / x228;
  x202 = -x1135 * x172 * x1757 + x1205 * x1668 - x1240 * x232 * x276 +
         x1241 * x202 / x169 - x1668 * x231 - x1668 * x824 + x1804 + x1806 -
         (kf_qss[105] * sc[14] + x1739) / x169;
  x1696 = -x1240 * x276 * x423 + x1299 * x1696 - x1367 * x1755 + x1522 * x1764 +
          x1696 * x1730 - x1696 * x1731 + x1733 * x423 / x228 + x1759 * x425 -
          x1798 * x911 - x202 * x426 -
          (kf_qss[106] * sc[14] + kf_qss[50] * sc[12] + x1737) / x420;
  x1755 = -x1135 * x1757 * x605 - x1366 * x1767 - x1438 * x1765 * x641 +
          x1469 * x1761 - x1563 * x1761 - x1565 * x1761 + x1574 * x1764 +
          x1575 * x1770 - x1696 * x585 + x1711 * x1761 + x1727 * x641 / x637 -
          x1798 * x977 + x1801;
  x1761 =
    kf_qss[80] * x1136 / x313 - x1135 * x1757 * x316 - x1366 * x1776 -
    x1367 * x1775 + x1416 * x1772 - x1472 * x1779 + x1671 * x1771 -
    x1696 * x651 + x1722 * x316 / x62 + x1745 * x1770 - x1755 * x649 +
    x1759 * x318 - x1772 * x315 - x202 * x319 -
    (kf_qss[107] * sc[14] + kf_qss[77] * sc[13] + kf_qss[83] * sc[17] + x865) /
      x313;
  x1767 = -x1691 / x851;
  x1772 = (x1024 * x1791 - x1025 * x1761 + x1045 * x1782 - x1049 * x202 -
           x1083 * x1755 + x1121 * x1782 - x1366 * x1783 - x1472 * x1792 +
           x1580 * x1770 - x1696 * x857 + x1709 * x1771 + x1759 * x796 + x1767 -
           x1793 * x854) /
          x1474;
  x1775 = -kf_qss[43] - kf_qss[44];
  x1776 = -kf_qss[119] + x1649;
  x1779 = x1776 * x915 + x933 * (-kf_qss[138] + x1653);
  x1782 = x1775 * x558 * x581 / ((x579) * (x579)) - x1775 * x982 +
          x1776 * x979 + x1779 * x984;
  x1783 = -kf_qss[27] + x1642;
  x1792 = -kf_qss[89] - kf_qss[90] - kf_qss[91] + x1043;
  x1793 = -kf_qss[102] - kf_qss[103] + x185;
  amrex::Real x1829 = -kf_qss[90] * x423 / x228 + kf_qss[91] / x420 +
                      x1659 * x1783 + x1660 * x1793 - x1783 * x761;
  amrex::Real x1831 = -kf_qss[82] + x1622;
  amrex::Real x1832 = -kf_qss[90] * x232 / x228 + x1090 * x1793 +
                      x1625 * x1792 + x1792 * x799 +
                      x1831 * x802 / ((x62) * (x62));
  amrex::Real x1833 = kf_qss[21] / x420 - x1783 * x431 + x1792 * x729 -
                      x1829 * x683 + x1832 * x829;
  amrex::Real x1834 = x1629 * x1793 + x1792 * x946 - x1792 * x947;
  amrex::Real x1835 = x1645 * x1783 + x1662 * x1783 + x1663 * x1793 +
                      x1776 * x913 + x1779 * x939 - x1829 * x644 +
                      x1832 * x942 - x1834 * x426;
  amrex::Real x1836 =
    -x1775 * x976 - x1782 * x963 - x1833 * x585 + x1835 * x987;
  amrex::Real x1838 =
    x1665 * x1783 + x1776 * x968 + x1779 * x970 - x1783 * x966;
  amrex::Real x1839 =
    x1006 * (-kf_qss[70] + x1677) + x1008 * x1831 / ((x62) * (x62)) +
    x1010 * x1776 + x1012 * x1779 + x1014 * x1775 + x1015 * x1835 +
    x1775 * x581 * x596 / ((x579) * (x579)) +
    x1775 * x639 * x640 / ((x579) * (x579)) - x1782 * x601 - x1838 * x585;
  amrex::Real x1840 = -kf_qss[21] + x1634;
  amrex::Real x1841 =
    x1046 * x1840 + x1047 * x1832 - x1048 * x1840 - x1049 * x1834;
  amrex::Real x1842 = -kf_qss[30] - kf_qss[31] + x1689;
  amrex::Real x1843 = -kf_qss[82] * x66 / x313 +
                      x1831 * x956 / ((x62) * (x62)) - x1842 * x955 +
                      x1842 * x958;
  amrex::Real x1844 = x1832 * x961 - x1834 * x319 - x1842 * x960 - x1843 * x644;
  amrex::Real x1845 = -kf_qss[82] * x603 / x313 + x1695 * x1835 +
                      x1831 * x964 / ((x62) * (x62)) - x1838 * x651 +
                      x1842 * x965 - x1842 * x972 - x1844 * x601;
  amrex::Real x1846 = x1018 * x1832 + x1693 * x1835 + x1694 * x1839 +
                      x1792 * x989 - x1833 * x651 - x1836 * x649 -
                      x1842 * x885 - x1843 * x683 - x1844 * x963 - x1845 * x974;
  amrex::Real x1847 =
    -x1054 * x1840 + x1055 * x1835 - x1838 * x857 - x1841 * x601;
  amrex::Real x1848 =
    -x1059 * x1792 + x1060 * x1831 / ((x62) * (x62)) + x1698 * x1792;
  amrex::Real x1849 = kf_qss[30] / x420 - x1062 * x1783 + x1064 * x1832 -
                      x1829 * x674 - x1848 * x426;
  amrex::Real x1850 = -x1066 * x1782 + x1068 * x1831 / ((x62) * (x62)) +
                      x1071 * x1835 + x1072 * x1775 - x1775 * x661 -
                      x1849 * x585;
  amrex::Real x1851 = -x1022 * x1847 - x1049 * x1848 - x1066 * x1841 -
                      x1083 * x1850 - x1084 * x1840 + x1085 * x1835 +
                      x1086 * x1840 + x1087 * x1832 + x1089 * x1839 -
                      x1849 * x857;
  amrex::Real x1852 =
    -kf_qss[82] * x660 / x313 - x1022 * x1845 - x1066 * x1844 + x1067 * x1832 +
    x1075 * x1831 / ((x62) * (x62)) + x1076 * x1842 + x1704 * x1835 +
    x1706 * x1839 - x1843 * x674 - x1848 * x319 - x1849 * x651 - x1850 * x649;
  const amrex::Real x1853 =
    x1475 * (-x1025 * x1846 + x1051 * x1840 + x1053 * x1835 + x1058 * x1792 +
             x1081 * x1852 + x1082 * x1832 - x1083 * x1836 - x1091 * x1851 +
             x1683 * x1839 - x1833 * x857 - x1841 * x963 - x1847 * x974);
  amrex::Real x1856 = -x1318 * x554 * (-kf_qss[138] + x1653) + x1363 * x1776 -
                      x1495 * x1776 + x1797 -
                      (kf_qss[120] * sc[15] * x1326 + x1719) / x551;
  amrex::Real x1861 = -x1135 * x172 * x1831 + x1205 * x1792 -
                      x1240 * x1793 * x232 - x1792 * x231 - x1792 * x824 +
                      x1804 + x1806 - (kf_qss[109] * sc[14] + x1739) / x169;
  x1783 = -x1240 * x1793 * x423 + x1299 * x1783 - x1367 * x1829 +
          x1522 * x1779 + x1730 * x1783 - x1731 * x1783 + x1733 * x423 / x228 +
          x1832 * x425 - x1856 * x911 - x1861 * x426 -
          (kf_qss[52] * sc[12] + x1737) / x420;
  x1775 = -x1135 * x1831 * x605 - x1366 * x1782 -
          x1438 * x641 * (-kf_qss[70] + x1677) + x1469 * x1775 - x1563 * x1775 -
          x1565 * x1775 + x1574 * x1779 + x1575 * x1835 + x1711 * x1775 -
          x1783 * x585 + x1801 - x1856 * x977 +
          x641 * (kf_qss[57] * sc[8] + x1727) / x637;
  x1782 = kf_qss[82] * x1136 / x313 - x1135 * x1831 * x316 - x1366 * x1844 -
          x1367 * x1843 + x1416 * x1842 - x1472 * x1845 + x1671 * x1839 +
          x1722 * x316 / x62 + x1745 * x1835 - x1775 * x649 - x1783 * x651 +
          x1832 * x318 - x1842 * x315 - x1861 * x319 - x865 / x313;
  x1829 = (x1024 * x1852 - x1025 * x1782 + x1045 * x1840 - x1049 * x1861 -
           x1083 * x1775 + x1121 * x1840 - x1366 * x1841 - x1472 * x1847 +
           x1580 * x1835 + x1709 * x1839 + x1767 - x1783 * x857 + x1832 * x796 -
           x1851 * x854) /
          x1474;
  x1840 = -kf_qss[105] * exp(-g_RT[14] + g_RT_qss[6] - x159) -
          kf_qss[131] * x162 * x166 - kf_qss[88] + x1043;
  x1841 = -kf_qss[26] - kf_qss[50] * exp(-x159 - x325) + x1642 - x351;
  x1842 = -kf_qss[101] - kf_qss[92] * x196 + x185;
  x1843 = x1659 * x1841 + x1660 * x1842 - x1841 * x761;
  x1844 = -kf_qss[81] + x1622;
  x1845 = -kf_qss[92] * x196 * x230 / x169 + x1090 * x1842 + x1625 * x1840 +
          x1840 * x799 + x1844 * x802 / ((x62) * (x62));
  x1847 = kf_qss[18] / x420 + x1840 * x729 - x1841 * x431 - x1843 * x683 +
          x1845 * x829;
  x1851 = -kf_qss[126] * exp(-x159 - x491) - kf_qss[139] * x162 * x447 + x1649;
  amrex::Real x1878 = -kf_qss[139] * x162 * x447 * x554 / x488 + x1851 * x915 +
                      x933 * (-kf_qss[137] + x1653);
  amrex::Real x1879 = -kf_qss[58] * x609 - kf_qss[69] + x1677;
  amrex::Real x1880 = -kf_qss[92] * x196 * x435 / x169 + x1629 * x1842 +
                      x1840 * x946 - x1840 * x947;
  amrex::Real x1881 = x1645 * x1841 + x1662 * x1841 + x1663 * x1842 -
                      x1843 * x644 + x1845 * x942 + x1851 * x913 +
                      x1878 * x939 - x1880 * x426;
  amrex::Real x1882 =
    -kf_qss[41] * x1670 + kf_qss[41] * x982 + x1851 * x979 + x1878 * x984;
  amrex::Real x1883 =
    x1665 * x1841 - x1841 * x966 + x1851 * x968 + x1878 * x970;
  amrex::Real x1884 =
    -kf_qss[41] * x1014 - kf_qss[41] * x1674 - kf_qss[41] * x1680 +
    x1006 * x1879 + x1008 * x1844 / ((x62) * (x62)) + x1010 * x1851 +
    x1012 * x1878 + x1015 * x1881 - x1882 * x601 - x1883 * x585;
  amrex::Real x1885 = -kf_qss[18] + x1634;
  amrex::Real x1886 =
    x1046 * x1885 + x1047 * x1845 - x1048 * x1885 - x1049 * x1880;
  amrex::Real x1887 =
    -x1059 * x1840 + x1060 * x1844 / ((x62) * (x62)) + x1698 * x1840;
  amrex::Real x1888 =
    -x1062 * x1841 + x1064 * x1845 - x1843 * x674 - x1887 * x426;
  amrex::Real x1889 = -kf_qss[32] - kf_qss[33] + x1689;
  amrex::Real x1890 =
    x1844 * x956 / ((x62) * (x62)) - x1889 * x955 + x1889 * x958;
  x351 =
    x1845 * x961 - x1880 * x319 - x1889 * x960 - x1890 * x644 + x351 / x313;
  amrex::Real x1892 = x1695 * x1881 + x1844 * x964 / ((x62) * (x62)) -
                      x1883 * x651 + x1889 * x965 - x1889 * x972 - x351 * x601;
  amrex::Real x1893 = -kf_qss[41] * x1072 + kf_qss[41] * x661 - x1066 * x1882 +
                      x1068 * x1844 / ((x62) * (x62)) + x1071 * x1881 -
                      x1888 * x585;
  amrex::Real x1894 = -x1022 * x1892 - x1066 * x351 + x1067 * x1845 +
                      x1075 * x1844 / ((x62) * (x62)) + x1076 * x1889 +
                      x1704 * x1881 + x1706 * x1884 - x1887 * x319 -
                      x1888 * x651 - x1890 * x674 - x1893 * x649;
  amrex::Real x1895 =
    -x1054 * x1885 + x1055 * x1881 - x1883 * x857 - x1886 * x601;
  amrex::Real x1896 =
    kf_qss[41] * x976 - x1847 * x585 + x1881 * x987 - x1882 * x963;
  amrex::Real x1897 = x1018 * x1845 + x1693 * x1881 + x1694 * x1884 +
                      x1840 * x989 - x1847 * x651 - x1889 * x885 -
                      x1890 * x683 - x1892 * x974 - x1896 * x649 - x351 * x963;
  amrex::Real x1898 = kf_qss[33] / x851 - x1022 * x1895 - x1049 * x1887 -
                      x1066 * x1886 - x1083 * x1893 - x1084 * x1885 +
                      x1085 * x1881 + x1086 * x1885 + x1087 * x1845 +
                      x1089 * x1884 - x1888 * x857;
  const amrex::Real x1899 =
    x1475 * (-x1025 * x1897 + x1051 * x1885 + x1053 * x1881 + x1058 * x1840 +
             x1081 * x1894 + x1082 * x1845 - x1083 * x1896 - x1091 * x1898 +
             x1683 * x1884 - x1847 * x857 - x1886 * x963 - x1895 * x974);
  amrex::Real x1903 =
    (kf_qss[103] * sc[12] * x1219 * x1223 + sc[17] * x1208 + x1733) / x228;
  amrex::Real x1904 = kf_qss[92] * x1241 * x196 / x169 - x1135 * x172 * x1844 +
                      x1205 * x1840 - x1240 * x1842 * x232 + x1804 -
                      x1840 * x231 - x1840 * x824 + x1903 * x232 -
                      (kf_qss[108] * sc[14] + x1739) / x169;
  amrex::Real x1906 =
    -x1318 * x554 * (-kf_qss[137] + x1653) + x1363 * x1851 - x1495 * x1851 +
    x1797 -
    (kf_qss[122] * sc[12] * x1356 * x1358 + kf_qss[127] * sc[15] + x1719) /
      x551;
  x1841 = -x1240 * x1842 * x423 + x1299 * x1841 - x1367 * x1843 +
          x1522 * x1878 + x1730 * x1841 - x1731 * x1841 + x1845 * x425 +
          x1903 * x423 - x1904 * x426 - x1906 * x911 -
          (kf_qss[24] * sc[10] * x1255 + kf_qss[51] * sc[12] + x1737) / x420;
  x1843 = -kf_qss[41] * x1469 + kf_qss[41] * x1563 + kf_qss[41] * x1565 -
          kf_qss[41] * x1711 - x1135 * x1844 * x605 - x1366 * x1882 -
          x1438 * x1879 * x641 + x1574 * x1878 + x1575 * x1881 + x1801 -
          x1841 * x585 - x1906 * x977 +
          x641 *
            (kf_qss[66] * sc[8] * x1435 + kf_qss[68] * sc[12] * x1427 + x1727) /
            x637 -
          (kf_qss[43] * sc[1] * x1219 * x1455 + kf_qss[56] * sc[8]) / x579;
  x1882 = -x1135 * x1844 * x316 - x1366 * x351 - x1367 * x1890 + x1416 * x1889 -
          x1472 * x1892 + x1671 * x1884 + x1722 * x316 / x62 + x1745 * x1881 -
          x1841 * x651 - x1843 * x649 + x1845 * x318 - x1889 * x315 -
          x1904 * x319 -
          (kf_qss[34] * sc[12] * x1374 + kf_qss[55] * sc[8] + x865) / x313;
  x1885 = (x1024 * x1894 - x1025 * x1882 + x1045 * x1885 - x1049 * x1904 -
           x1083 * x1843 + x1121 * x1885 - x1366 * x1886 - x1472 * x1895 +
           x1580 * x1881 + x1709 * x1884 + x1767 - x1841 * x857 + x1845 * x796 -
           x1898 * x854) /
          x1474;
  x1886 = -6.0 * kf_qss[16] - kf_qss[51] * exp(-x135 - x325) -
          8100000000000.0 * sc[1] * x412 * exp(x396) - 1.32e+37 * x373 * x752 +
          x735 * (1.68 * x403 * x688 + 12.0 * x688 * x731) + 1.0935e+25 * x739 +
          x748 * (1.68 * x364 * x688 + 12.0 * x688 * x742) +
          2.904e+73 * x754 * x755;
  x1889 =
    -kf_qss[108] * exp(-g_RT[14] + g_RT_qss[6] - x135) -
    8.4e+18 * sc[1] * x154 * exp(x138) - 1.539e+22 * x119 +
    x694 * (12.0 * x146 * x688 + 1.68 * x687 * x688) + 1.176e+37 * x698 +
    3.947535e+43 * x701 + x707 * (1.68 * x688 * x703 + 12.0 * x688 * x76) -
    2.562e+47 * x708 * x85 + x719 * (1.68 * x109 * x688 + 12.0 * x688 * x714) +
    1.093974e+94 * x722 * x723;
  x216 = x216 * x688 / ((x219) * (x219));
  x219 = -3.12e+28 * x191 * x772 - 2.28e+30 * x226 +
         x771 * (1.68 * x1050 + 12.0 * x216) + 8.664e+59 * x774 * x777 +
         x786 * (1.68 * x182 + 12.0 * x688 * x781) + 1.6224e+56 * x789 * x790;
  x1890 = x1659 * x1886 + x1660 * x219 - x1886 * x761;
  x813 = x688 * x813;
  x351 = -14700000000.0 * x14 - 4.2e+45 * x27 * x51 + 2.94e+90 * x808 +
         3.6015e+19 * x811 + x819 * (12.0 * x688 * x816 + 1.68 * x813);
  x1892 =
    x1090 * x219 + x1625 * x1889 + x1889 * x799 + x351 * x802 / ((x62) * (x62));
  x1895 = -x1886 * x431 + x1889 * x729 - x1890 * x683 + x1892 * x829;
  x1898 =
    -kf_qss[127] * exp(-x135 - x491) - 1.194e+30 * sc[1] * x537 * exp(x521) -
    7.2e+30 * x519 + 2.37606e+59 * x891 +
    x897 * (1.68 * x508 * x688 + 12.0 * x688 * x893) +
    x903 * (12.0 * x528 * x688 + 1.68 * x688 * x899) + 8.64e+60 * x904 * x906;
  amrex::Real x1946 = 2.351256e+54 * x1652 - 3.756e+27 * x476 * x481 +
                      x922 * (1.68 * x467 + 12.0 * x918);
  amrex::Real x1947 = x1898 * x915 + x1946 * x933;
  amrex::Real x1948 = x1629 * x219 + x1889 * x946 - x1889 * x947;
  amrex::Real x1949 = x1645 * x1886 + x1662 * x1886 + x1663 * x219 -
                      x1890 * x644 + x1892 * x942 + x1898 * x913 +
                      x1947 * x939 - x1948 * x426;
  amrex::Real x1954 =
    -kf_qss[20] + x1034 * (12.0 * x1029 * x688 + 1.68 * x688 * x839) -
    1.614e+17 * x1035 * x848 + 4.34166e+33 * x1039 * x1040 - x655;
  amrex::Real x1955 =
    x1046 * x1954 + x1047 * x1892 - x1048 * x1954 - x1049 * x1948;
  amrex::Real x1956 = -kf_qss[45] - kf_qss[56] * x564 - kf_qss[67] * x571;
  amrex::Real x1957 =
    x1670 * x1956 + x1898 * x979 + x1947 * x984 - x1956 * x982;
  amrex::Real x1958 =
    -x1895 * x585 + x1949 * x433 * x584 * x952 - x1956 * x976 - x1957 * x963;
  amrex::Real x1959 =
    x1665 * x1886 - x1886 * x966 + x1898 * x968 + x1947 * x970;
  amrex::Real x1960 =
    -x1054 * x1954 + x1055 * x1949 - x1955 * x601 - x1959 * x857;
  amrex::Real x1964 = -1.32e+19 * refC * x633 * exp(x615 + x616) +
                      2.904e+37 * x1002 * x620 +
                      x998 * (1.68 * x625 * x688 + 12.0 * x688 * x994);
  amrex::Real x1965 = -kf_qss[67] * x571 * x641 / x637 + x1006 * x1964 +
                      x1008 * x351 / ((x62) * (x62)) + x1010 * x1898 +
                      x1012 * x1947 + x1014 * x1956 + x1015 * x1949 +
                      x1674 * x1956 + x1680 * x1956 - x1957 * x601 -
                      x1959 * x585;
  amrex::Real x1970 =
    -kf_qss[45] * x271 - kf_qss[55] * exp(-g_RT[8] + g_RT_qss[1] - x135) -
    1.614e+22 * sc[10] * x264 * exp(x248) -
    1.92e+16 * sc[1] * x309 * exp(x293) + 4.34166e+43 * x1688 +
    x863 * (1.68 * x300 * x688 + 12.0 * x688 * x859) + 6.144e+31 * x869 +
    x881 * (12.0 * x255 * x688 + 1.68 * x688 * x877);
  amrex::Real x1971 =
    -x1970 * x955 + x1970 * x958 + x351 * x956 / ((x62) * (x62));
  amrex::Real x1972 = x1892 * x961 - x1948 * x319 - x1970 * x960 - x1971 * x644;
  amrex::Real x1973 = kf_qss[45] / x313 + x1695 * x1949 - x1959 * x651 +
                      x1970 * x965 - x1970 * x972 - x1972 * x601 +
                      x351 * x964 / ((x62) * (x62));
  x646 = x1018 * x1892 + x1694 * x1965 + x1889 * x989 - x1895 * x651 +
         x1949 * x433 * x646 * x952 - x1958 * x649 - x1970 * x885 -
         x1971 * x683 - x1972 * x963 - x1973 * x974 + x655 / x313;
  x655 = -x1059 * x1889 + x1060 * x351 / ((x62) * (x62)) + x1698 * x1889;
  amrex::Real x1976 =
    -x1062 * x1886 + x1064 * x1892 - x1890 * x674 - x426 * x655;
  amrex::Real x1977 = kf_qss[45] * x271 / x579 - x1066 * x1957 +
                      x1068 * x351 / ((x62) * (x62)) + x1071 * x1949 +
                      x1072 * x1956 - x1956 * x661 - x1976 * x585;
  amrex::Real x1978 = -x1022 * x1960 - x1049 * x655 - x1066 * x1955 -
                      x1083 * x1977 - x1084 * x1954 + x1085 * x1949 +
                      x1086 * x1954 + x1087 * x1892 + x1089 * x1965 -
                      x1976 * x857;
  amrex::Real x1979 = -x1022 * x1973 - x1066 * x1972 + x1067 * x1892 +
                      x1075 * x351 / ((x62) * (x62)) + x1076 * x1970 +
                      x1704 * x1949 + x1706 * x1965 - x1971 * x674 -
                      x1976 * x651 - x1977 * x649 - x319 * x655;
  const amrex::Real x1980 =
    x1475 *
    (-x1025 * x646 + x1051 * x1954 + x1058 * x1889 + x1081 * x1979 +
     x1082 * x1892 - x1083 * x1958 - x1091 * x1978 + x1683 * x1965 -
     x1895 * x857 + x1949 * x433 * x856 * x952 - x1955 * x963 - x1960 * x974);
  amrex::Real x1985 =
    (kf_qss[137] * sc[20] * x1308 + 3.756e+27 * x1312 * x461 -
     x472 * (1.68 * x467 + 12.0 * x918) - 2.351256e+54 * x923) /
    x488;
  amrex::Real x1986 =
    -x1318 * x1946 * x554 + x1363 * x1898 - x1495 * x1898 + x1985 * x554 -
    (7.2e+30 * x1329 * x517 * exp(x501) + 1.194e+30 * x1341 * x1343 -
     8.64e+60 * x1485 * x904 - 2.37606e+59 * x1491 -
     x513 * (1.68 * x508 * x688 + 12.0 * x688 * x893) -
     x533 * (12.0 * x528 * x688 + 1.68 * x688 * x899)) /
      x551;
  x816 = (14700000000.0 * sc[13] * x1127 + 4.2e+45 * sc[14] * x50 * exp(x31) -
          3.6015e+19 * x12 - 2.94e+90 * x1551 -
          x46 * (12.0 * x688 * x816 + 1.68 * x813)) /
         x62;
  amrex::Real x1992 =
    (kf_qss[69] * sc[12] * x1424 + 1.32e+19 * x1421 * x633 * exp(x616) -
     2.904e+37 * x1571 * x620 -
     x630 * (1.68 * x625 * x688 + 12.0 * x688 * x994)) /
    x637;
  amrex::Real x1995 =
    (sc[17] * x1217 + 2.28e+30 * sc[1] * x1513 + 3.12e+28 * x1231 -
     8.664e+59 * x1507 * x774 - 1.6224e+56 * x1511 * x790 -
     x187 * (1.68 * x182 + 12.0 * x688 * x781) -
     x221 * (1.68 * x1050 + 12.0 * x216)) /
    x228;
  amrex::Real x1999 =
    -x1135 * x172 * x351 + x1205 * x1889 - x1240 * x219 * x232 + x172 * x816 -
    x1889 * x231 - x1889 * x824 + x1995 * x232 -
    (kf_qss[88] * sc[13] * x1187 + 1.539e+22 * sc[13] * x1172 * x1174 -
     3.947535e+43 * x106 + 8.4e+18 * x1137 * x1141 -
     x114 * (1.68 * x109 * x688 + 12.0 * x688 * x714) -
     x116 * (12.0 * x146 * x688 + 1.68 * x687 * x688) +
     2.562e+47 * x1199 * x85 - 1.176e+37 * x151 - 1.093974e+94 * x1539 * x723 -
     x81 * (1.68 * x688 * x703 + 12.0 * x688 * x76)) /
      x169;
  x1886 = -x1240 * x219 * x423 + x1299 * x1886 - x1367 * x1890 + x1522 * x1947 +
          x1730 * x1886 - x1731 * x1886 + x1892 * x425 - x1986 * x911 +
          x1995 * x423 - x1999 * x426 -
          (6.0 * kf_qss[16] * x1275 + kf_qss[26] * sc[10] * x1248 +
           8100000000000.0 * x1278 * x1281 + 1.32e+37 * x1287 * x373 -
           2.904e+73 * x1523 * x755 - 1.0935e+25 * x1527 -
           x369 * (1.68 * x364 * x688 + 12.0 * x688 * x742) -
           x408 * (1.68 * x403 * x688 + 12.0 * x688 * x731)) /
            x420;
  x1890 = -kf_qss[44] * sc[10] * x1448 / x579 - x1135 * x351 * x605 -
          x1366 * x1957 - x1438 * x1964 * x641 + x1469 * x1956 - x1563 * x1956 -
          x1565 * x1956 + x1574 * x1947 + x1575 * x1949 + x1711 * x1956 -
          x1886 * x585 - x1986 * x977 + x1992 * x641 + x605 * x816;
  x1956 =
    -x1135 * x316 * x351 - x1366 * x1972 - x1367 * x1971 + x1416 * x1970 -
    x1472 * x1973 + x1671 * x1965 + x1745 * x1949 - x1886 * x651 -
    x1890 * x649 + x1892 * x318 - x1970 * x315 - x1999 * x319 + x316 * x816 -
    (1.614e+22 * x1406 * x1408 + 1.92e+16 * x1588 - 6.144e+31 * x1590 -
     x260 * (12.0 * x255 * x688 + 1.68 * x688 * x877) -
     x305 * (1.68 * x300 * x688 + 12.0 * x688 * x859) - 4.34166e+43 * x872) /
      x313;
  x1954 = (x1024 * x1979 - x1025 * x1956 + x1045 * x1954 - x1049 * x1999 -
           x1083 * x1890 + x1121 * x1954 - x1366 * x1955 - x1472 * x1960 +
           x1580 * x1949 + x1709 * x1965 - x1886 * x857 + x1892 * x796 -
           x1978 * x854 -
           (-4.34166e+33 * x1040 * x959 + 1.614e+17 * x1095 * x848 -
            x844 * (12.0 * x1029 * x688 + 1.68 * x688 * x839)) /
             x851) /
          x1474;
  x1955 = -kf_qss[52] * exp(-x325 - x91) + x1642;
  x1957 =
    -kf_qss[109] * exp(-g_RT[14] + g_RT_qss[6] - x91) - kf_qss[92] + x1043;
  x1960 =
    -kf_qss[92] * x423 / x228 + x1659 * x1955 + x1660 * x185 - x1955 * x761;
  x1970 = x1622 / ((x62) * (x62));
  x1971 = x1090 * x185 + x1970 * x802;
  x1972 = -kf_qss[92] * x232 / x228 + x1625 * x1957 + x1957 * x799 + x1971;
  x1973 = -x1955 * x431 + x1957 * x729 - x1960 * x683 + x1972 * x829;
  x1978 =
    (-kf_qss[120] - kf_qss[121] - kf_qss[122] + x1649) / ((x551) * (x551));
  amrex::Real x2018 = -kf_qss[139] * x490 / x551 + x1978 * x490 * x553 +
                      x933 * (-kf_qss[139] + x1653);
  amrex::Real x2020 = x1629 * x185 + x1957 * x946 - x1957 * x947;
  amrex::Real x2021 = x1645 * x1955 + x1662 * x1955 + x1663 * x185 -
                      x1960 * x644 + x1972 * x942 + x1978 * x440 * x911 +
                      x2018 * x939 - x2020 * x426;
  amrex::Real x2022 = x1047 * x1972 - x1049 * x2020 + x1635;
  amrex::Real x2023 = x1978 * x440 * x977 + x2018 * x984;
  amrex::Real x2024 = -x1973 * x585 + x2021 * x987 - x2023 * x963;
  amrex::Real x2025 =
    x1665 * x1955 - x1955 * x966 + x1978 * x594 * x911 + x2018 * x970;
  amrex::Real x2026 =
    -x1054 * x1634 + x1055 * x2021 - x2022 * x601 - x2025 * x857;
  amrex::Real x2027 = x1006 * x1677 + x1008 * x1970;
  amrex::Real x2028 = x1012 * x2018 + x1015 * x2021 + x1978 * x594 * x977 -
                      x2023 * x601 - x2025 * x585 + x2027;
  amrex::Real x2029 = -kf_qss[34] + x1689;
  amrex::Real x2031 = x1970 * x316 * x65;
  amrex::Real x2032 = -x2029 * x955 + x2029 * x958 + x2031;
  amrex::Real x2033 = x1972 * x961 - x2020 * x319 - x2029 * x960 - x2032 * x644;
  amrex::Real x2035 = x1695 * x2021 + x1970 * x964 - x2025 * x651 +
                      x2029 * x965 - x2029 * x972 - x2033 * x601;
  amrex::Real x2036 = x1018 * x1972 + x1693 * x2021 + x1694 * x2028 +
                      x1957 * x989 - x1973 * x651 - x2024 * x649 -
                      x2029 * x885 - x2032 * x683 - x2033 * x963 - x2035 * x974;
  amrex::Real x2038 = -x1059 * x1957 + x1060 * x1970 + x1698 * x1957;
  amrex::Real x2040 =
    -x1062 * x1955 + x1064 * x1972 - x1960 * x674 - x2038 * x426;
  amrex::Real x2041 =
    -x1066 * x2023 + x1068 * x1970 + x1071 * x2021 - x2040 * x585;
  amrex::Real x2042 = x1970 * x316 * x659;
  amrex::Real x2043 = -x1022 * x2035 - x1066 * x2033 + x1067 * x1972 +
                      x1076 * x2029 + x1704 * x2021 + x1706 * x2028 -
                      x2032 * x674 - x2038 * x319 - x2040 * x651 -
                      x2041 * x649 + x2042;
  amrex::Real x2044 = -x1022 * x2026 - x1049 * x2038 - x1066 * x2022 -
                      x1083 * x2041 + x1085 * x2021 + x1087 * x1972 +
                      x1089 * x2028 + x1702 - x2040 * x857;
  const amrex::Real x2045 =
    x1475 * (-x1025 * x2036 + x1051 * x1634 + x1053 * x2021 + x1058 * x1957 +
             x1081 * x2043 + x1082 * x1972 - x1083 * x2024 - x1091 * x2044 +
             x1683 * x2028 - x1973 * x857 - x2022 * x963 - x2026 * x974);
  amrex::Real x2049 = -x1135 * x1622 * x172 - x1240 * x185 * x232;
  amrex::Real x2051 =
    x1205 * x1957 + x1804 - x1957 * x231 - x1957 * x824 + x2049 +
    x232 * (kf_qss[102] * sc[17] * x1210 + x1733) / x228 -
    (kf_qss[131] * sc[19] + kf_qss[89] * sc[13] * exp(-x1144 - x91) +
     sc[14] * x1169 + x1739) /
      x169;
  amrex::Real x2056 =
    kf_qss[139] * x1319 / x551 - x1318 * x554 * (-kf_qss[139] + x1653) -
    x1319 * x1978 * x553 +
    x1363 * (-kf_qss[120] - kf_qss[121] - kf_qss[122] + x1649) -
    (kf_qss[119] * sc[14] * x1353 + sc[15] * x1336 + x1719) / x551 +
    x554 * (kf_qss[138] * sc[20] * x1304 + x1716) / x488;
  amrex::Real x2058 = -x1240 * x185 * x423;
  x1955 =
    x1299 * x1955 - x1367 * x1960 + x1522 * x2018 + x1730 * x1955 -
    x1731 * x1955 + x1972 * x425 - x2051 * x426 - x2056 * x911 + x2058 -
    (kf_qss[27] * sc[10] * exp(-x91 - x99) + kf_qss[53] * sc[12] + x1737) /
      x420 +
    x423 * (kf_qss[102] * sc[17] * x1210 + x1733) / x228;
  x1960 = -x1135 * x1622 * x605 - x1438 * x1677 * x641;
  x2023 = -x1366 * x2023 + x1574 * x2018 + x1575 * x2021 + x1801 -
          x1955 * x585 + x1960 - x2056 * x977 +
          x641 * (kf_qss[58] * sc[8] + sc[12] * x1419 + x1727) / x637;
  amrex::Real x2065 = -x1135 * x1622 * x316 + x1722 * x316 / x62;
  x2029 = -x1366 * x2033 - x1367 * x2032 + x1416 * x2029 - x1472 * x2035 +
          x1671 * x2028 + x1745 * x2021 - x1955 * x651 + x1972 * x318 -
          x2023 * x649 - x2029 * x315 - x2051 * x319 + x2065 - x865 / x313;
  x2022 = (x1024 * x2043 - x1025 * x2029 - x1049 * x2051 - x1083 * x2023 -
           x1366 * x2022 - x1472 * x2026 + x1580 * x2021 + x1692 +
           x1709 * x2028 + x1767 - x1955 * x857 + x1972 * x796 - x2044 * x854) /
          x1474;
  x2026 = -kf_qss[53] * exp(-g_RT[6] + g_RT[7] - x325) + x1642;
  x2032 = -kf_qss[93] + x1043;
  x2033 = x1659 * x2026 + x1660 * x185 - x2026 * x761;
  x2035 = x1625 * x2032 + x1971 + x2032 * x799;
  x2044 = -x2026 * x431 + x2032 * x729 - x2033 * x683 + x2035 * x829;
  amrex::Real x2075 = -kf_qss[123] + x1649;
  amrex::Real x2077 = x1653 * x933 + x2075 * x915;
  amrex::Real x2078 = x1629 * x185 + x2032 * x946 - x2032 * x947;
  amrex::Real x2079 = x1645 * x2026 + x1662 * x2026 + x1663 * x185 -
                      x2033 * x644 + x2035 * x942 + x2075 * x913 +
                      x2077 * x939 - x2078 * x426;
  amrex::Real x2080 =
    x1665 * x2026 - x2026 * x966 + x2075 * x968 + x2077 * x970;
  amrex::Real x2081 = x1047 * x2035 - x1049 * x2078 + x1635;
  amrex::Real x2082 =
    -x1054 * x1634 + x1055 * x2079 - x2080 * x857 - x2081 * x601;
  amrex::Real x2083 = -x1059 * x2032 + x1060 * x1970 + x1698 * x2032;
  amrex::Real x2084 =
    -x1062 * x2026 + x1064 * x2035 - x2033 * x674 - x2083 * x426;
  amrex::Real x2086 = x1010 * x2075 + x1012 * x2077 + x1015 * x2079 + x2027 -
                      x2080 * x585 - x601 * (x2075 * x979 + x2077 * x984);
  amrex::Real x2087 = -x1066 * (x2075 * x979 + x2077 * x984) + x1068 * x1970 +
                      x1071 * x2079 - x2084 * x585;
  amrex::Real x2088 = -x1022 * x2082 - x1049 * x2083 - x1066 * x2081 -
                      x1083 * x2087 + x1085 * x2079 + x1087 * x2035 +
                      x1089 * x2086 + x1702 - x2084 * x857;
  amrex::Real x2089 = -x1689 * x955 + x1689 * x958 + x2031;
  amrex::Real x2090 = -x1689 * x960 - x2089 * x644;
  amrex::Real x2091 = x2035 * x961 - x2078 * x319 + x2090;
  amrex::Real x2093 = x1689 * x965 - x1689 * x972 + x1695 * x2079 +
                      x1970 * x964 - x2080 * x651 - x2091 * x601;
  amrex::Real x2094 =
    -x2044 * x585 + x2079 * x987 - x963 * (x2075 * x979 + x2077 * x984);
  amrex::Real x2095 = -x1689 * x885 - x2089 * x683;
  amrex::Real x2096 = x1018 * x2035 + x1693 * x2079 + x1694 * x2086 +
                      x2032 * x989 - x2044 * x651 - x2091 * x963 -
                      x2093 * x974 - x2094 * x649 + x2095;
  amrex::Real x2098 = -x1022 * x2093 - x1066 * x2091 + x1067 * x2035 +
                      x1076 * x1689 + x1704 * x2079 + x1706 * x2086 + x2042 -
                      x2083 * x319 - x2084 * x651 - x2087 * x649 - x2089 * x674;
  const amrex::Real x2099 =
    x1475 * (-x1025 * x2096 + x1051 * x1634 + x1053 * x2079 + x1058 * x2032 +
             x1081 * x2098 + x1082 * x2035 - x1083 * x2094 - x1091 * x2088 +
             x1683 * x2086 - x2044 * x857 - x2081 * x963 - x2082 * x974);
  amrex::Real x2102 = -x1318 * x1653 * x554;
  amrex::Real x2104 = x1363 * x2075 - x1495 * x2075 + x1797 + x2102 -
                      (kf_qss[121] * sc[14] * x1350 + x1719) / x551;
  amrex::Real x2105 = x1804 + x2049 - x1739 / x169;
  amrex::Real x2107 =
    x1205 * x2032 + x1806 - x2032 * x231 - x2032 * x824 + x2105;
  x2026 = x1299 * x2026 - x1367 * x2033 + x1522 * x2077 + x1730 * x2026 -
          x1731 * x2026 + x1733 * x423 / x228 - x1737 / x420 + x2035 * x425 +
          x2058 - x2104 * x911 - x2107 * x426;
  x2033 = -x1366 * (x2075 * x979 + x2077 * x984) + x1574 * x2077 +
          x1575 * x2079 + x1727 * x641 / x637 + x1801 + x1960 - x2026 * x585 -
          x2104 * x977;
  x2091 = -x1366 * x2091 - x1367 * x2089 + x1416 * x1689 - x1472 * x2093 +
          x1671 * x2086 - x1689 * x315 + x1745 * x2079 - x2026 * x651 -
          x2033 * x649 + x2035 * x318 + x2065 - x2107 * x319 - x865 / x313;
  x2081 = (x1024 * x2098 - x1025 * x2091 - x1049 * x2107 - x1083 * x2033 -
           x1366 * x2081 - x1472 * x2082 + x1580 * x2079 + x1692 +
           x1709 * x2086 + x1767 - x2026 * x857 + x2035 * x796 - x2088 * x854) /
          x1474;
  x2082 = -kf_qss[106] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
          kf_qss[60] - kf_qss[98] * x346 + x1642 - x359 * x373;
  x2088 = x1649 - x453 - x497;
  x2093 = x2088 * x915 - x453 * x554 / x488 + x933 * (-kf_qss[140] + x1653);
  amrex::Real x2123 = x1659 * x2082 + x1660 * x185 - x2082 * x761;
  amrex::Real x2124 = -kf_qss[95] - kf_qss[96] + x1043 - 4.27e+46 * x70 * x85;
  amrex::Real x2125 = x1625 * x2124 + x1971 + x2124 * x799;
  amrex::Real x2127 = -kf_qss[98] * x232 * x346 / x228 + x1629 * x185 +
                      x2124 * x946 - x2124 * x947;
  amrex::Real x2128 = -kf_qss[98] * x346 * x423 / x228 + x1645 * x2082 +
                      x1662 * x2082 + x1663 * x185 + x2088 * x913 +
                      x2093 * x939 - x2123 * x644 + x2125 * x942 - x2127 * x426;
  amrex::Real x2130 = -kf_qss[59] * x426 / x169 - x2082 * x431 - x2123 * x683 +
                      x2124 * x729 + x2125 * x829;
  amrex::Real x2132 = -kf_qss[63] * x1670 + kf_qss[63] * x982 + x2088 * x979 +
                      x2093 * x984 - x497 * x558 / x579;
  amrex::Real x2133 =
    kf_qss[63] * x976 + x2128 * x987 - x2130 * x585 - x2132 * x963;
  amrex::Real x2134 =
    x1665 * x2082 - x2082 * x966 + x2088 * x968 + x2093 * x970;
  amrex::Real x2135 = -kf_qss[63] * x1014 - kf_qss[63] * x1674 -
                      kf_qss[63] * x1680 + x1010 * x2088 + x1012 * x2093 +
                      x1015 * x2128 + x2027 - x2132 * x601 - x2134 * x585 -
                      x497 * x596 / x579;
  amrex::Real x2136 = -kf_qss[59] + x1634;
  amrex::Real x2137 =
    x1046 * x2136 + x1047 * x2125 - x1048 * x2136 - x1049 * x2127;
  amrex::Real x2138 =
    -x1054 * x2136 + x1055 * x2128 - x2134 * x857 - x2137 * x601;
  amrex::Real x2139 = -kf_qss[62] + x1689;
  amrex::Real x2140 = x2031 - x2139 * x955 + x2139 * x958;
  amrex::Real x2141 = x2125 * x961 - x2127 * x319 - x2139 * x960 - x2140 * x644;
  amrex::Real x2142 = x1695 * x2128 + x1970 * x964 - x2134 * x651 +
                      x2139 * x965 - x2139 * x972 - x2141 * x601;
  amrex::Real x2143 = -kf_qss[59] * x319 / x169 + x1018 * x2125 +
                      x1693 * x2128 + x1694 * x2135 + x2124 * x989 -
                      x2130 * x651 - x2133 * x649 - x2139 * x885 -
                      x2140 * x683 - x2141 * x963 - x2142 * x974;
  amrex::Real x2144 = -x1059 * x2124 + x1060 * x1970 + x1698 * x2124;
  amrex::Real x2145 =
    -x1062 * x2082 + x1064 * x2125 - x2123 * x674 - x2144 * x426;
  amrex::Real x2146 = -kf_qss[63] * x1072 + kf_qss[63] * x661 - x1066 * x2132 +
                      x1068 * x1970 + x1071 * x2128 - x2145 * x585;
  amrex::Real x2147 = -x1022 * x2138 - x1049 * x2144 - x1066 * x2137 -
                      x1083 * x2146 - x1084 * x2136 + x1085 * x2128 +
                      x1086 * x2136 + x1087 * x2125 + x1089 * x2135 -
                      x2145 * x857;
  amrex::Real x2148 = -x1022 * x2142 - x1066 * x2141 + x1067 * x2125 +
                      x1076 * x2139 + x1704 * x2128 + x1706 * x2135 + x2042 -
                      x2140 * x674 - x2144 * x319 - x2145 * x651 - x2146 * x649;
  const amrex::Real x2149 =
    x1475 * (-kf_qss[59] * x1049 / x169 - x1025 * x2143 + x1051 * x2136 +
             x1053 * x2128 + x1058 * x2124 + x1081 * x2148 + x1082 * x2125 -
             x1083 * x2133 - x1091 * x2147 + x1683 * x2135 - x2130 * x857 -
             x2137 * x963 - x2138 * x974);
  amrex::Real x2155 =
    -x1318 * x554 * (-kf_qss[140] + x1653) + x1363 * x2088 - x1495 * x2088 -
    (kf_qss[117] * sc[12] * x1338 + kf_qss[122] * sc[4] * x1356 * x162 +
     kf_qss[129] * sc[15] + 2.0 * kf_qss[64] * ((sc[8])) + sc[19] * x1155 +
     x1719) /
      x551 +
    x554 * (kf_qss[115] * sc[14] + x1716) / x488;
  amrex::Real x2157 = x1205 * x2124 + x1804 + x2049 - x2124 * x231 -
                      x2124 * x824 + x232 * (x1219 * x1238 + x1733) / x228 -
                      (kf_qss[114] * sc[14] + kf_qss[87] * sc[10] * x1184 +
                       sc[19] * x1155 + x1739) /
                        x169;
  x2082 = x1299 * x2082 - x1367 * x2123 + x1522 * x2093 + x1730 * x2082 -
          x1731 * x2082 + x2058 + x2125 * x425 - x2155 * x911 - x2157 * x426 -
          (kf_qss[61] * sc[12] + x1737) / x420 +
          x423 * (x1219 * x1238 + x1733) / x228;
  x497 = -kf_qss[63] * x1469 + kf_qss[63] * x1563 + kf_qss[63] * x1565 -
         kf_qss[63] * x1711 - x1364 * x497 * x556 / x579 - x1366 * x2132 +
         x1574 * x2093 + x1575 * x2128 + x1801 + x1960 - x2082 * x585 -
         x2155 * x977 +
         x641 *
           (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] +
            kf_qss[66] * sc[4] * x1435 + x1727) /
           x637 -
         (kf_qss[42] * sc[1] * x1466 + kf_qss[56] * sc[4] +
          2.0 * kf_qss[73] * ((sc[8])) * exp(-g_RT_qss[2] - x1392)) /
           x579;
  x1379 = -x1366 * x2141 - x1367 * x2140 + x1416 * x2139 - x1472 * x2142 +
          x1671 * x2135 + x1745 * x2128 + x2065 - x2082 * x651 + x2125 * x318 -
          x2139 * x315 - x2157 * x319 - x497 * x649 -
          (kf_qss[55] * sc[4] +
           2.0 * kf_qss[72] * ((sc[8])) * exp(-g_RT_qss[1] - x1392) +
           3200000000000000.0 * refC * x25 * x309 * exp(x1385 + x293) +
           sc[1] * x1379 + x865) /
            x313;
  x2123 = (x1024 * x2148 - x1025 * x1379 + x1045 * x2136 - x1049 * x2157 -
           x1083 * x497 + x1121 * x2136 - x1366 * x2137 - x1472 * x2138 +
           x1580 * x2128 + x1709 * x2135 + x1767 - x2082 * x857 + x2125 * x796 -
           x2147 * x854) /
          x1474;
  x2132 = -kf_qss[129] * exp(-x385 - x491) + x908;
  x2136 = x2132 * x490 * x553 / ((x551) * (x551)) + x930 * x933;
  x2137 = -kf_qss[61] * exp(-x325 - x385) + x758;
  x2138 =
    x173 * x423 * x793 + x2137 * x230 * x422 / ((x420) * (x420)) - x2137 * x761;
  x2139 =
    -kf_qss[114] * exp(-g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6]) + x725;
  x2140 = -kf_qss[112] * x19 -
          kf_qss[130] * exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5]) + x820;
  x2141 = x1625 * x2139 + x173 * x232 * x793 + x2139 * x799 +
          x2140 * x802 / ((x62) * (x62));
  x2142 = x2139 * x946 - x2139 * x947 + x232 * x434 * x793;
  x2147 = x2132 * x440 * x911 / ((x551) * (x551)) +
          x2136 * x440 * x560 * x936 / x551 +
          x2137 * x422 * x435 / ((x420) * (x420)) +
          x2137 * x558 * x559 / ((x420) * (x420)) - x2138 * x644 +
          x2141 * x942 - x2142 * x426 + x423 * x434 * x793;
  amrex::Real x2179 = -kf_qss[73] * x558 * x581 / ((x579) * (x579)) +
                      kf_qss[73] * x982 +
                      x2132 * x440 * x977 / ((x551) * (x551)) + x2136 * x984;
  amrex::Real x2180 = x2132 * x594 * x911 / ((x551) * (x551)) +
                      x2136 * x560 * x594 * x936 / x551 - x2137 * x966 +
                      x2137 * x559 * x596 / ((x420) * (x420));
  amrex::Real x2181 =
    -kf_qss[112] * x19 * x603 / x579 -
    kf_qss[73] * x581 * x596 / ((x579) * (x579)) -
    kf_qss[73] * x603 * x604 / ((x579) * (x579)) -
    kf_qss[73] * x639 * x640 / ((x579) * (x579)) + x1003 * x1006 +
    x1008 * x2140 / ((x62) * (x62)) + x1012 * x2136 + x1015 * x2147 +
    x2132 * x594 * x977 / ((x551) * (x551)) - x2179 * x601 - x2180 * x585;
  amrex::Real x2182 =
    -x2137 * x431 - x2138 * x683 + x2139 * x729 + x2141 * x829;
  amrex::Real x2183 =
    kf_qss[73] * x976 + x2147 * x987 - x2179 * x963 - x2182 * x585;
  amrex::Real x2184 = -kf_qss[71] + x1042;
  amrex::Real x2185 =
    x1046 * x2184 + x1047 * x2141 - x1048 * x2184 - x1049 * x2142;
  amrex::Real x2186 = -kf_qss[72] + x882;
  amrex::Real x2187 =
    x2140 * x956 / ((x62) * (x62)) - x2186 * x955 + x2186 * x958;
  amrex::Real x2188 = x2141 * x961 - x2142 * x319 - x2186 * x960 - x2187 * x644;
  amrex::Real x2189 = x1695 * x2147 + x2140 * x964 / ((x62) * (x62)) -
                      x2180 * x651 + x2186 * x965 - x2186 * x972 - x2188 * x601;
  amrex::Real x2190 = x1018 * x2141 + x1693 * x2147 + x1694 * x2181 +
                      x2139 * x989 - x2182 * x651 - x2183 * x649 -
                      x2186 * x885 - x2187 * x683 - x2188 * x963 - x2189 * x974;
  amrex::Real x2191 =
    -x1059 * x2139 + x1060 * x2140 / ((x62) * (x62)) + x1698 * x2139;
  amrex::Real x2192 =
    -x1062 * x2137 + x1064 * x2141 - x2138 * x674 - x2191 * x426;
  amrex::Real x2193 = -kf_qss[112] * x19 * x660 / x579 + kf_qss[73] * x661 -
                      kf_qss[73] * x604 * x660 / ((x579) * (x579)) -
                      x1066 * x2179 + x1068 * x2140 / ((x62) * (x62)) +
                      x1071 * x2147 - x2192 * x585;
  amrex::Real x2194 = -x1022 * x2189 - x1066 * x2188 + x1067 * x2141 +
                      x1075 * x2140 / ((x62) * (x62)) + x1076 * x2186 +
                      x1704 * x2147 + x1706 * x2181 - x2187 * x674 -
                      x2191 * x319 - x2192 * x651 - x2193 * x649;
  amrex::Real x2195 =
    -x1054 * x2184 + x1055 * x2147 - x2180 * x857 - x2185 * x601;
  amrex::Real x2196 = -x1022 * x2195 - x1049 * x2191 - x1066 * x2185 -
                      x1083 * x2193 - x1084 * x2184 + x1085 * x2147 +
                      x1086 * x2184 + x1087 * x2141 + x1089 * x2181 -
                      x2192 * x857;
  const amrex::Real x2197 =
    x1475 * (-x1025 * x2190 + x1051 * x2184 + x1053 * x2147 + x1058 * x2139 +
             x1081 * x2194 + x1082 * x2141 - x1083 * x2183 - x1091 * x2196 +
             x1683 * x2181 - x2182 * x857 - x2185 * x963 - x2195 * x974);
  x553 = -x1318 * x554 * x930 - x1319 * x2132 * x553 / ((x551) * (x551)) +
         x1363 * x2132 - x1493 / x551 +
         x554 * (kf_qss[140] * sc[20] * x1315 + x1502) / x488;
  amrex::Real x2205 = -x1135 * x172 * x2140 + x1205 * x2139 + x1555 -
                      x2139 * x231 - x2139 * x824 + x232 * x769 / x228 -
                      (kf_qss[95] * sc[13] * x1192 + x1544) / x169;
  x2137 = -x1240 * x423 * x792 - x1241 * x2137 * x422 / ((x420) * (x420)) +
          x1299 * x2137 + x1364 * x2137 * x556 * x559 / ((x420) * (x420)) -
          x1367 * x2138 + x1522 * x2136 + x2141 * x425 - x2205 * x426 -
          x553 * x911 - (kf_qss[60] * sc[10] * x1244 + x1529) / x420 +
          x423 * x769 / x228;
  x604 = kf_qss[112] * x1136 * x19 / x579 +
         kf_qss[73] * x1136 * x604 / ((x579) * (x579)) -
         kf_qss[73] * x1364 * x556 * x581 / ((x579) * (x579)) +
         kf_qss[73] * x1439 * x640 / ((x579) * (x579)) - kf_qss[73] * x1469 -
         x1135 * x2140 * x605 - x1366 * x2179 + x1572 * x641 / x637 +
         x1574 * x2136 + x1575 * x2147 + x1578 - x2137 * x585 - x553 * x977;
  x640 = -x1135 * x2140 * x316 - x1366 * x2188 - x1367 * x2187 + x1416 * x2186 -
         x1472 * x2189 + x1554 * x316 - x1591 / x313 + x1671 * x2181 +
         x1745 * x2147 - x2137 * x651 + x2141 * x318 - x2186 * x315 -
         x2205 * x319 - x604 * x649;
  x2138 = (x1024 * x2194 - x1025 * x640 + x1045 * x2184 - x1049 * x2205 -
           x1083 * x604 + x1121 * x2184 - x1366 * x2185 - x1472 * x2195 +
           x1580 * x2147 + x1709 * x2181 - x2137 * x857 + x2141 * x796 -
           x2196 * x854 + x962) /
          x1474;
  x2179 =
    -kf_qss[76] * x96 - 2.1e+18 * sc[1] * x154 * exp(x138) +
    2.94e+36 * sc[1] * x695 * exp(-3341.3586609433401 * invT - 7.72 * logT) -
    x101 - 3.8475e+21 * x119 + x694 * (3.0 * x146 * x688 + 0.42 * x687 * x688) +
    9.8688375e+42 * x701 + x707 * (0.42 * x688 * x703 + 3.0 * x688 * x76) -
    6.405e+46 * x708 * x85 + x719 * (0.42 * x109 * x688 + 3.0 * x688 * x714) +
    2.734935e+93 * x722 * x723;
  x739 = -1.5 * kf_qss[16] - 2025000000000.0 * sc[1] * x412 * exp(x396) - x341 -
         3.3e+36 * x373 * x752 +
         x735 * (0.42 * x403 * x688 + 3.0 * x688 * x731) + 2.73375e+24 * x739 +
         x748 * (0.42 * x364 * x688 + 3.0 * x688 * x742) +
         7.26e+72 * x754 * x755;
  x226 = -7.8e+27 * x191 * x772 - 5.7e+29 * x226 +
         x771 * (0.42 * x1050 + 3.0 * x216) + 2.166e+59 * x774 * x777 +
         x786 * (0.42 * x182 + 3.0 * x688 * x781) + 4.056e+55 * x789 * x790;
  x101 = x101 / x420 + x1659 * x739 + x1660 * x226 - x739 * x761;
  x40 = x40 * x688 / ((x43) * (x43));
  x43 = -3675000000.0 * x14 - 1.05e+45 * x27 * x51 + 7.35e+89 * x808 +
        9.00375e+18 * x811 + x819 * (3.0 * x40 + 0.42 * x813);
  x808 =
    x1090 * x226 + x1625 * x2179 + x2179 * x799 + x43 * x802 / ((x62) * (x62));
  x1090 = -x101 * x683 + x2179 * x729 - x431 * x739 + x808 * x829;
  x2184 = x1034 * (3.0 * x1029 * x688 + 0.42 * x688 * x839) -
          4.035e+16 * x1035 * x848 + 1.085415e+33 * x1039 * x1040 -
          2.69e+16 * x833 * x848;
  x519 = -2.985e+29 * sc[1] * x537 * exp(x521) - 1.8e+30 * x519 - x549 +
         5.94015e+58 * x891 + x897 * (0.42 * x508 * x688 + 3.0 * x688 * x893) +
         x903 * (3.0 * x528 * x688 + 0.42 * x688 * x899) +
         2.16e+60 * x904 * x906;
  x891 = 5.87814e+53 * x1652 - 9.39e+26 * x476 * x481 +
         x922 * (0.42 * x467 + 3.0 * x918);
  x2185 = x519 * x915 + x891 * x933;
  x2186 = x1665 * x739 + x2185 * x970 + x519 * x968 - x739 * x966 -
          x549 * x596 / x420;
  x2187 = x1629 * x226 + x2179 * x946 - x2179 * x947;
  x2188 = -x101 * x644 + x1645 * x739 + x1662 * x739 + x1663 * x226 +
          x2185 * x939 - x2187 * x426 + x519 * x913 + x808 * x942 -
          x549 * x558 / x420;
  x341 =
    x1046 * x2184 + x1047 * x808 - x1048 * x2184 - x1049 * x2187 + x341 / x851;
  x2189 = -x1054 * x2184 + x1055 * x2188 - x2186 * x857 - x341 * x601;
  x2195 = -kf_qss[80] * x172 * x289 / x62 - x1059 * x2179 +
          x1060 * x43 / ((x62) * (x62)) + x1698 * x2179;
  x2196 = -kf_qss[46] - kf_qss[74] * x566;
  amrex::Real x2257 = -x101 * x674 - x1062 * x739 + x1064 * x808 - x2195 * x426;
  amrex::Real x2259 = x2185 * x984 + x2196 * x558 * x581 / ((x579) * (x579)) -
                      x2196 * x982 + x519 * x979;
  x584 = kf_qss[46] * x271 / x579 - kf_qss[80] * x289 * x605 / x62 -
         x1066 * x2259 + x1068 * x43 / ((x62) * (x62)) + x1072 * x2196 +
         x2188 * x584 * x670 * x952 - x2196 * x661 - x2257 * x585;
  amrex::Real x2262 = 7.26e+36 * x1002 * x620 - 3.3e+18 * x635 +
                      x998 * (0.42 * x625 * x688 + 3.0 * x688 * x994);
  amrex::Real x2263 = x1006 * x2262 + x1008 * x43 / ((x62) * (x62)) +
                      x1010 * x519 + x1012 * x2185 + x1014 * x2196 +
                      x1015 * x2188 + x1674 * x2196 - x2186 * x585 +
                      x2196 * x581 * x596 / ((x579) * (x579)) - x2259 * x601;
  x856 = -x1022 * x2189 - x1049 * x2195 - x1066 * x341 - x1083 * x584 -
         x1084 * x2184 + x1086 * x2184 + x1087 * x808 + x1089 * x2263 +
         x2188 * x670 * x856 * x952 - x2257 * x857;
  x250 = -kf_qss[46] * x271 -
         kf_qss[77] * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1]) -
         kf_qss[80] * x289 - 4.035e+21 * sc[10] * x264 * exp(x248) -
         4800000000000000.0 * sc[1] * x309 * exp(x293) + 1.085415e+43 * x1688 -
         x25 * x250 * x264 + x863 * (0.42 * x300 * x688 + 3.0 * x688 * x859) +
         1.536e+31 * x869 + x881 * (3.0 * x255 * x688 + 0.42 * x688 * x877);
  amrex::Real x2268 = kf_qss[76] * x96 / x313 - x250 * x955 + x250 * x958 +
                      x43 * x956 / ((x62) * (x62));
  amrex::Real x2269 = -x2187 * x319 - x2268 * x644 - x250 * x960 + x808 * x961;
  amrex::Real x2270 = kf_qss[46] / x313 + x1695 * x2188 - x2186 * x651 -
                      x2269 * x601 + x250 * x965 - x250 * x972 +
                      x43 * x964 / ((x62) * (x62));
  amrex::Real x2271 = -kf_qss[80] * x289 * x316 / x62 - x1022 * x2270 -
                      x1066 * x2269 + x1067 * x808 +
                      x1075 * x43 / ((x62) * (x62)) + x1076 * x250 +
                      x1704 * x2188 + x1706 * x2263 - x2195 * x319 -
                      x2257 * x651 - x2268 * x674 - x584 * x649;
  amrex::Real x2272 =
    -x1090 * x585 + x2188 * x987 - x2196 * x976 - x2259 * x963;
  amrex::Real x2273 = x1018 * x808 - x1090 * x651 + x1693 * x2188 +
                      x1694 * x2263 + x2179 * x989 - x2268 * x683 -
                      x2269 * x963 - x2270 * x974 - x2272 * x649 - x250 * x885;
  const amrex::Real x2274 =
    x1475 * (-x1025 * x2273 + x1051 * x2184 + x1053 * x2188 + x1058 * x2179 +
             x1081 * x2271 + x1082 * x808 - x1083 * x2272 - x1090 * x857 -
             x1091 * x856 + x1683 * x2263 - x2189 * x974 - x341 * x963);
  x1312 = (9.39e+26 * x1312 * x461 - x472 * (0.42 * x467 + 3.0 * x918) -
           5.87814e+53 * x923) /
          x488;
  x1491 =
    x1312 * x554 - x1318 * x554 * x891 + x1363 * x519 - x1495 * x519 -
    (kf_qss[124] * sc[15] * x1295 + 1.8e+30 * x1329 * x517 * exp(x501) +
     2.985e+29 * x1341 * x1343 - 2.16e+60 * x1485 * x904 - 5.94015e+58 * x1491 -
     x513 * (0.42 * x508 * x688 + 3.0 * x688 * x893) -
     x533 * (3.0 * x528 * x688 + 0.42 * x688 * x899)) /
      x551;
  amrex::Real x2285 =
    (kf_qss[103] * sc[4] * x1223 * x162 + 5.7e+29 * sc[1] * x1513 +
     7.8e+27 * x1231 + x1238 * x1358 - 2.166e+59 * x1507 * x774 -
     4.056e+55 * x1511 * x790 - x187 * (0.42 * x182 + 3.0 * x688 * x781) -
     x221 * (0.42 * x1050 + 3.0 * x216)) /
    x228;
  x1551 =
    (3675000000.0 * sc[13] * x1127 + 1.05e+45 * sc[14] * x50 * exp(x31) -
     9.00375e+18 * x12 - 7.35e+89 * x1551 - x46 * (3.0 * x40 + 0.42 * x813)) /
    x62;
  x695 = -x1135 * x172 * x43 + x1205 * x2179 - x1240 * x226 * x232 +
         x1551 * x172 - x2179 * x231 - x2179 * x824 + x2285 * x232 -
         (kf_qss[87] * sc[8] * x1184 + kf_qss[94] * sc[14] * x1178 -
          9.8688375000000004e+42 * x106 + 2.1e+18 * x1137 * x1141 -
          2.94e+36 * x1137 * x695 *
            exp(-3341.3586609433401 * invT - 7.72 * logT + x1140) -
          x114 * (0.42 * x109 * x688 + 3.0 * x688 * x714) -
          x116 * (3.0 * x146 * x688 + 0.42 * x687 * x688) + 3.8475e+21 * x1176 +
          6.405e+46 * x1199 * x85 - 2.734935e+93 * x1539 * x723 -
          x81 * (0.42 * x688 * x703 + 3.0 * x688 * x76)) /
           x169;
  x549 =
    -x101 * x1367 - x1240 * x226 * x423 + x1299 * x739 -
    x1364 * x549 * x556 / x420 - x1491 * x911 + x1522 * x2185 + x1730 * x739 -
    x1731 * x739 + x2285 * x423 + x425 * x808 - x426 * x695 -
    (kf_qss[124] * sc[15] * x1295 + kf_qss[132] * sc[20] * x1263 +
     kf_qss[16] * x1172 * x25 * exp(g_RT[10] + g_RT[1] - g_RT_qss[3]) +
     1.5 * kf_qss[16] * x1275 + kf_qss[23] * sc[0] * x1269 +
     kf_qss[24] * sc[4] * x1255 + kf_qss[26] * sc[5] * x1248 +
     kf_qss[27] * sc[6] * exp(-x91 - x99) + kf_qss[60] * sc[9] * x1244 +
     kf_qss[94] * sc[14] * x1178 + 2025000000000.0 * x1278 * x1281 +
     3.3e+36 * x1287 * x373 - 7.26e+72 * x1523 * x755 - 2.73375e+24 * x1527 -
     x369 * (0.42 * x364 * x688 + 3.0 * x688 * x742) -
     x408 * (0.42 * x403 * x688 + 3.0 * x688 * x731)) /
      x420;
  x1527 = (3.3e+18 * x1421 * x633 * exp(x616) - 7.26e+36 * x1571 * x620 -
           x630 * (0.42 * x625 * x688 + 3.0 * x688 * x994)) /
          x637;
  x739 = refCinv * sc[4];
  x101 = -x1135 * x43 * x605 - x1366 * x2259 - x1438 * x2262 * x641 +
         x1469 * x2196 - x1491 * x977 + x1527 * x641 + x1551 * x605 -
         x1563 * x2196 - x1565 * x2196 + x1574 * x2185 + x1575 * x2188 +
         x1711 * x2196 - x549 * x585 -
         (kf_qss[39] * sc[0] * x1457 + kf_qss[43] * sc[1] * x1455 * x739 +
          kf_qss[44] * sc[5] * x1448 + kf_qss[48] * sc[12] * x1445) /
           x579;
  x2196 =
    -x101 * x649 - x1135 * x316 * x43 - x1366 * x2269 - x1367 * x2268 +
    x1416 * x250 - x1472 * x2270 + x1551 * x316 + x1671 * x2263 +
    x1745 * x2188 - x250 * x315 + x318 * x808 - x319 * x695 - x549 * x651 -
    (4.035e+21 * x1406 * x1408 + 4800000000000000.0 * x1588 -
     1.536e+31 * x1590 - x260 * (3.0 * x255 * x688 + 0.42 * x688 * x877) -
     x305 * (0.42 * x300 * x688 + 3.0 * x688 * x859) - 1.085415e+43 * x872) /
      x313;
  x2184 =
    (-x101 * x1083 + x1024 * x2271 - x1025 * x2196 + x1045 * x2184 -
     x1049 * x695 + x1121 * x2184 - x1366 * x341 - x1472 * x2189 +
     x1580 * x2188 + x1709 * x2263 - x549 * x857 + x796 * x808 - x854 * x856 -
     (kf_qss[17] * sc[1] * x1107 + kf_qss[75] * sc[13] * x1114 -
      1.085415e+33 * x1040 * x959 + 4.035e+16 * x1095 * x848 -
      x844 * (3.0 * x1029 * x688 + 0.42 * x688 * x839)) /
       x851) /
    x1474;
  x341 = x1659 * x758 + x173 * x423 * x793 - x758 * x761;
  x2189 = x1625 * x725 + x173 * x232 * x793 + x725 * x799 +
          x802 * x820 / ((x62) * (x62));
  x2259 =
    kf_qss[22] / x420 + x2189 * x829 - x341 * x683 - x431 * x758 + x725 * x729;
  x1042 = -kf_qss[22] + x1042;
  x856 = x232 * x434 * x793 + x725 * x946 - x725 * x947;
  x250 = x1042 * x1046 - x1042 * x1048 + x1047 * x2189 - x1049 * x856;
  x2268 = -kf_qss[47] - kf_qss[48];
  x2269 = x908 * x915 + x930 * x933;
  x2270 = x1670 * x2268 - x2268 * x982 + x2269 * x984 + x908 * x979;
  amrex::Real x2310 = x1645 * x758 + x1662 * x758 + x2189 * x942 +
                      x2269 * x939 - x341 * x644 + x423 * x434 * x793 -
                      x426 * x856 + x908 * x913;
  amrex::Real x2311 =
    -x2259 * x585 - x2268 * x976 - x2270 * x963 + x2310 * x987;
  amrex::Real x2312 = x1665 * x758 + x2269 * x970 - x758 * x966 + x908 * x968;
  amrex::Real x2313 =
    -x1042 * x1054 + x1055 * x2310 - x2312 * x857 - x250 * x601;
  amrex::Real x2315 = -kf_qss[82] * x172 * x238 / x62 - x1059 * x725 +
                      x1060 * x820 / ((x62) * (x62)) + x1698 * x725;
  amrex::Real x2316 =
    -x1062 * x758 + x1064 * x2189 - x2315 * x426 - x341 * x674;
  amrex::Real x2317 = kf_qss[47] * x271 / x579 -
                      kf_qss[82] * x238 * x605 / x62 - x1066 * x2270 +
                      x1068 * x820 / ((x62) * (x62)) + x1071 * x2310 +
                      x1072 * x2268 - x2268 * x661 - x2316 * x585;
  amrex::Real x2318 = x1003 * x1006 + x1008 * x820 / ((x62) * (x62)) +
                      x1010 * x908 + x1012 * x2269 + x1014 * x2268 +
                      x1015 * x2310 + x1674 * x2268 + x1680 * x2268 -
                      x2270 * x601 - x2312 * x585;
  amrex::Real x2319 = -x1022 * x2313 - x1042 * x1084 + x1042 * x1086 -
                      x1049 * x2315 - x1066 * x250 - x1083 * x2317 +
                      x1085 * x2310 + x1087 * x2189 + x1089 * x2318 -
                      x2316 * x857;
  x882 = -kf_qss[47] * x271 - kf_qss[82] * x238 -
         kf_qss[83] * exp(g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1]) + x882;
  amrex::Real x2321 =
    -x882 * x955 + x882 * x958 + x820 * x956 / ((x62) * (x62));
  amrex::Real x2322 = x2189 * x961 - x2321 * x644 - x319 * x856 - x882 * x960;
  amrex::Real x2323 = kf_qss[47] / x313 + x1695 * x2310 - x2312 * x651 -
                      x2322 * x601 + x882 * x965 - x882 * x972 +
                      x820 * x964 / ((x62) * (x62));
  amrex::Real x2324 = x1018 * x2189 + x1693 * x2310 + x1694 * x2318 -
                      x2259 * x651 - x2311 * x649 - x2321 * x683 -
                      x2322 * x963 - x2323 * x974 + x725 * x989 - x882 * x885;
  amrex::Real x2325 = -kf_qss[82] * x238 * x316 / x62 - x1022 * x2323 -
                      x1066 * x2322 + x1067 * x2189 +
                      x1075 * x820 / ((x62) * (x62)) + x1076 * x882 +
                      x1704 * x2310 + x1706 * x2318 - x2315 * x319 -
                      x2316 * x651 - x2317 * x649 - x2321 * x674;
  const amrex::Real x2326 =
    x1475 * (-x1025 * x2324 + x1042 * x1051 + x1053 * x2310 + x1058 * x725 +
             x1081 * x2325 + x1082 * x2189 - x1083 * x2311 - x1091 * x2319 +
             x1683 * x2318 - x2259 * x857 - x2313 * x974 - x250 * x963);
  x1493 = -x1318 * x554 * x930 + x1363 * x908 - x1493 / x551 - x1495 * x908 +
          x1502 * x554 / x488;
  x1544 = -x1135 * x172 * x820 + x1205 * x725 - x1544 / x169 + x1555 -
          x231 * x725 - x725 * x824 + x232 * x769 / x228;
  x758 = -x1240 * x423 * x792 + x1299 * x758 - x1367 * x341 -
         x1493 * x556 * x560 + x1522 * x2269 - x1544 * x426 + x1730 * x758 -
         x1731 * x758 + x2189 * x425 -
         (kf_qss[25] * sc[1] * x1252 + x1529) / x420 + x423 * x769 / x228;
  x1529 = -x1135 * x605 * x820 - x1366 * x2270 + x1469 * x2268 -
          x1493 * x556 * x581 / x579 - x1563 * x2268 - x1565 * x2268 +
          x1572 * x641 / x637 + x1574 * x2269 + x1575 * x2310 + x1578 +
          x1711 * x2268 - x585 * x758;
  x1398 = -x1135 * x316 * x820 - x1366 * x2322 - x1367 * x2321 + x1416 * x882 -
          x1472 * x2323 - x1529 * x649 - x1544 * x319 + x1554 * x316 +
          x1671 * x2318 + x1745 * x2310 + x2189 * x318 - x315 * x882 -
          x651 * x758 - (((sc[1]) * (sc[1])) * x1398 + x1591) / x313;
  x1555 = (x1024 * x2325 - x1025 * x1398 + x1042 * x1045 + x1042 * x1121 -
           x1049 * x1544 - x1083 * x1529 - x1366 * x250 - x1472 * x2313 +
           x1580 * x2310 + x1709 * x2318 + x2189 * x796 - x2319 * x854 -
           x758 * x857 + x962) /
          x1474;
  x1578 = -kf_qss[131] * x166 * x739 + x1043;
  x1591 = x1578 * x1625 + x1578 * x799 + x1971;
  x962 = x1642 - x354;
  x341 = x1659 * x962 + x1660 * x185 - x761 * x962;
  x1042 = x1578 * x729 + x1591 * x829 - x341 * x683 - x431 * x962;
  x250 = -kf_qss[136] * x444 - kf_qss[139] * x447 * x739 + x1649;
  x2268 = x1653 * x933 + x250 * x915 -
          x554 * (kf_qss[136] * x444 + kf_qss[139] * x447 * x739) / x488;
  x354 = x1578 * x946 - x1578 * x947 + x1629 * x185 + x354 / x169;
  x2270 = x1591 * x942 + x1645 * x962 + x1662 * x962 + x1663 * x185 +
          x2268 * x939 + x250 * x440 * x911 / ((x551) * (x551)) - x341 * x644 -
          x354 * x426;
  x2313 = -kf_qss[54] + x1634;
  x2319 = x1046 * x2313 + x1047 * x1591 - x1048 * x2313 - x1049 * x354;
  x882 = x1665 * x962 + x2268 * x970 + x250 * x594 * x911 / ((x551) * (x551)) -
         x962 * x966;
  x2321 = -x1054 * x2313 + x1055 * x2270 - x2319 * x601 - x857 * x882;
  x2322 = x2268 * x984 + x250 * x440 * x977 / ((x551) * (x551));
  x2323 = -x1042 * x585 + x2270 * x987 - x2322 * x963;
  amrex::Real x2354 =
    -kf_qss[107] * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1]) + x1689;
  amrex::Real x2355 = x2031 - x2354 * x955 + x2354 * x958;
  amrex::Real x2356 = x1591 * x961 - x2354 * x960 - x2355 * x644 - x319 * x354;
  amrex::Real x2357 = x1695 * x2270 + x1970 * x964 + x2354 * x965 -
                      x2354 * x972 - x2356 * x601 - x651 * x882;
  amrex::Real x2358 = x1012 * x2268 + x1015 * x2270 + x2027 - x2322 * x601 +
                      x250 * x594 * x977 / ((x551) * (x551)) - x585 * x882;
  amrex::Real x2360 = x1018 * x1591 - x1042 * x651 + x1578 * x989 +
                      x1693 * x2270 - x2323 * x649 - x2354 * x885 -
                      x2355 * x683 - x2356 * x963 - x2357 * x974 +
                      x2358 * x593 * x648 / ((x642) * (x642));
  amrex::Real x2361 = -x1059 * x1578 + x1060 * x1970 + x1578 * x1698;
  amrex::Real x2362 =
    -x1062 * x962 + x1064 * x1591 - x2361 * x426 - x341 * x674;
  amrex::Real x2363 =
    -x1066 * x2322 + x1068 * x1970 + x1071 * x2270 - x2362 * x585;
  amrex::Real x2364 = -x1022 * x2357 - x1066 * x2356 + x1067 * x1591 +
                      x1076 * x2354 + x1704 * x2270 + x2042 - x2355 * x674 +
                      x2358 * x648 * x673 / ((x642) * (x642)) - x2361 * x319 -
                      x2362 * x651 - x2363 * x649;
  amrex::Real x2365 = x1021 * x2358 * x673 / ((x642) * (x642)) - x1022 * x2321 -
                      x1049 * x2361 - x1066 * x2319 - x1083 * x2363 -
                      x1084 * x2313 + x1085 * x2270 + x1086 * x2313 +
                      x1087 * x1591 - x2362 * x857;
  const amrex::Real x2366 =
    x1475 * (x1021 * x2358 * x593 / ((x642) * (x642)) - x1025 * x2360 -
             x1042 * x857 + x1051 * x2313 + x1053 * x2270 + x1058 * x1578 +
             x1081 * x2364 + x1082 * x1591 - x1083 * x2323 - x1091 * x2365 -
             x2319 * x963 - x2321 * x974);
  amrex::Real x2370 = x1205 * x1578 - x1578 * x231 - x1578 * x824 + x2105 +
                      x232 * (kf_qss[103] * x1220 * x1223 + x1733) / x228;
  amrex::Real x2371 = x1363 * x250 - x1495 * x250 + x1797 + x2102 -
                      (kf_qss[117] * sc[8] * x1338 +
                       kf_qss[122] * sc[4] * x1356 * x1358 + x1719) /
                        x551;
  x962 = x1299 * x962 - x1367 * x341 + x1522 * x2268 + x1591 * x425 +
         x1730 * x962 - x1731 * x962 + x2058 - x2370 * x426 -
         x2371 * x556 * x560 -
         (kf_qss[49] * sc[1] + kf_qss[50] * sc[2] + kf_qss[51] * sc[4] +
          kf_qss[52] * sc[3] + kf_qss[53] * sc[6] + kf_qss[61] * sc[8] +
          1350000000000.0 * x1281 * x776 + x1737) /
           x420 +
         x423 * (kf_qss[103] * x1220 * x1223 + x1733) / x228;
  x341 = (kf_qss[65] * sc[0] * x1431 + kf_qss[68] * sc[4] * x1427 +
          kf_qss[69] * sc[5] * x1424 + sc[1] * x1422 + sc[6] * x1419 + x1727) /
         x637;
  x2322 = -x1366 * x2322 + x1574 * x2268 + x1575 * x2270 + x1801 + x1960 -
          x2371 * x556 * x581 / x579 + x341 * x641 - x585 * x962 -
          (kf_qss[41] * sc[1] * x1441 + kf_qss[48] * sc[10] * x1445) / x579;
  x648 =
    -x1366 * x2356 - x1367 * x2355 + x1416 * x2354 +
    x1470 * x2358 * x648 / ((x642) * (x642)) - x1472 * x2357 + x1591 * x318 +
    x1745 * x2270 + x2065 - x2322 * x649 - x2354 * x315 - x2370 * x319 -
    x651 * x962 -
    (kf_qss[32] * sc[1] * x1381 + kf_qss[34] * sc[4] * x1374 + x865) / x313;
  x1021 =
    (x1021 * x1470 * x2358 / ((x642) * (x642)) + x1024 * x2364 - x1025 * x648 +
     x1045 * x2313 - x1049 * x2370 - x1083 * x2322 + x1121 * x2313 -
     x1366 * x2319 - x1472 * x2321 + x1580 * x2270 + x1591 * x796 -
     x2365 * x854 - x857 * x962 - (sc[1] * x1111 + x1691) / x851) /
    x1474;
  x412 =
    -3.0 * kf_qss[16] - 4050000000000.0 * sc[1] * x412 * exp(x396) +
    5.4675e+24 * sc[1] * x736 * exp(-1434.1674975434501 * invT - 5.14 * logT) -
    6.6e+36 * x373 * x752 + x735 * (0.84 * x403 * x688 + 6.0 * x688 * x731) +
    x748 * (0.84 * x364 * x688 + 6.0 * x688 * x742) + 1.452e+73 * x754 * x755;
  x735 = -kf_qss[78] + x412;
  x748 = -1.14e+30 * refC * x224 * exp(x207 + x208) - 1.56e+28 * x191 * x772 +
         x771 * (0.84 * x1050 + 6.0 * x216) + 4.332e+59 * x774 * x777 +
         x786 * (0.84 * x182 + 6.0 * x688 * x781) + 8.112e+55 * x789 * x790;
  x771 = x748 / ((x228) * (x228));
  x777 =
    x173 * x423 * x771 + x230 * x422 * x735 / ((x420) * (x420)) - x735 * x761;
  x119 =
    -4.2e+18 * sc[1] * x154 * exp(x138) - 7.695e+21 * x119 +
    x694 * (6.0 * x146 * x688 + 0.84 * x687 * x688) + 5.88e+36 * x698 +
    1.9737675000000001e+43 * x701 +
    x707 * (0.84 * x688 * x703 + 6.0 * x688 * x76) - 1.281e+47 * x708 * x85 +
    x719 * (0.84 * x109 * x688 + 6.0 * x688 * x714) + 5.46987e+93 * x722 * x723;
  x154 = x119 * x946 - x119 * x947 + x232 * x434 * x771;
  x537 = -3.6e+30 * refC * x517 * exp(x500 + x501) -
         5.97e+29 * sc[1] * x537 * exp(x521) +
         1.18803e+59 * sc[1] * x888 *
           exp(-6728.0068218091001 * invT - 14.16 * logT) +
         x897 * (0.84 * x508 * x688 + 6.0 * x688 * x893) +
         x903 * (6.0 * x528 * x688 + 0.84 * x688 * x899) +
         4.32e+60 * x904 * x906;
  x694 = x423 * x434 * x771 + x440 * x537 * x911 / ((x551) * (x551));
  x698 = x1653 * x933 + x537 * x915;
  x51 =
    -2.1e+45 * x27 * x51 +
    1.47e+90 * x27 * x805 * exp(-100502.432494519 * invT - 18.62 * logT + x30) +
    x819 * (6.0 * x40 + 0.84 * x813);
  x701 = -6125000000.0 * x14 + x51 + 1.500625e+19 * x811;
  x707 = x119 * x1625 + x119 * x799 + x173 * x232 * x771 +
         x701 * x802 / ((x62) * (x62));
  x719 = -x426 * (kf_qss[78] / x169 + x154) - x644 * x777 + x694 + x698 * x939 +
         x707 * x942 + x422 * x435 * x735 / ((x420) * (x420)) +
         x558 * x559 * x735 / ((x420) * (x420));
  x786 = x1034 * (6.0 * x1029 * x688 + 0.84 * x688 * x839) -
         8.07e+16 * x1035 * x848 + 2.17083e+33 * x1039 * x1040;
  x819 = x537 * x968 + x698 * x970 - x735 * x966 +
         x559 * x596 * x735 / ((x420) * (x420));
  x897 = x1046 * x786 + x1047 * x707 - x1048 * x786 -
         x1049 * (kf_qss[78] / x169 + x154);
  x903 = -x1054 * x786 + x1055 * x719 - x601 * x897 - x819 * x857;
  x906 = x537 * x979 + x698 * x984;
  x635 = 1.452e+37 * x1002 * x620 - 6.6e+18 * x635 +
         x998 * (0.84 * x625 * x688 + 6.0 * x688 * x994);
  x998 = x1006 * x635 + x1008 * x701 / ((x62) * (x62)) + x1012 * x698 +
         x537 * x594 * x977 / ((x551) * (x551));
  x1002 = x1015 * x719 - x585 * x819 - x601 * x906 + x998;
  x1034 = x119 * x729 - x431 * x735 - x683 * x777 + x707 * x829;
  x1111 = -x1034 * x585 + x719 * x987 - x906 * x963;
  x264 = -8.07e+21 * sc[10] * x264 * exp(x248) -
         9600000000000000.0 * sc[1] * x309 * exp(x293) + 2.17083e+43 * x1688 +
         x863 * (0.84 * x300 * x688 + 6.0 * x688 * x859) + 3.072e+31 * x869 +
         x881 * (6.0 * x255 * x688 + 0.84 * x688 * x877);
  x293 = -x264 * x955 + x264 * x958 + x701 * x956 / ((x62) * (x62));
  x309 = -x264 * x960 - x293 * x644 - x319 * (kf_qss[78] / x169 + x154) +
         x707 * x961;
  x863 = x1695 * x719 + x264 * x965 - x264 * x972 - x309 * x601 - x651 * x819 +
         x701 * x964 / ((x62) * (x62));
  x869 = x1002 * x1694 + x1018 * x707 - x1034 * x651 - x1111 * x649 +
         x119 * x989 + x1693 * x719 - x264 * x885 - x293 * x683 - x309 * x963 -
         x863 * x974;
  x881 = -x1059 * x119 + x1060 * x701 / ((x62) * (x62)) + x119 * x1698;
  x1688 = -x1062 * x735 + x1064 * x707 - x426 * x881 - x674 * x777;
  x2313 = -x1066 * x906 + x1068 * x701 / ((x62) * (x62)) + x1071 * x719 -
          x1688 * x585;
  x2319 = x1002 * x1089 - x1022 * x903 - x1049 * x881 - x1066 * x897 -
          x1083 * x2313 - x1084 * x786 + x1085 * x719 + x1086 * x786 +
          x1087 * x707 - x1688 * x857;
  x2321 = x1002 * x1706 - x1022 * x863 - x1066 * x309 + x1067 * x707 +
          x1075 * x701 / ((x62) * (x62)) + x1076 * x264 - x1688 * x651 +
          x1704 * x719 - x2313 * x649 - x293 * x674 - x319 * x881;
  x2354 = x1475 * (x1002 * x1683 - x1025 * x869 - x1034 * x857 + x1051 * x786 +
                   x1053 * x719 + x1058 * x119 + x1081 * x2321 + x1082 * x707 -
                   x1083 * x1111 - x1091 * x2319 - x897 * x963 - x903 * x974);
  x805 =
    2.1e+45 * sc[14] * x50 * exp(x31) -
    1.47e+90 * sc[14] * x805 * exp(-100502.432494519 * invT - 18.62 * logT) -
    x46 * (6.0 * x40 + 0.84 * x813);
  x46 = (kf_qss[79] * sc[1] * x1133 + 6125000000.0 * sc[13] * x1127 +
         2450000000.0 * x1127 * x5 - 1.500625e+19 * x12 + x805) /
        x62;
  x888 = 3.6e+30 * x1329 * x517 * exp(x501) + 5.97e+29 * x1341 * x1343 -
         1.18803e+59 * x1341 * x888 *
           exp(-6728.0068218091001 * invT - 14.16 * logT + x1342) -
         4.32e+60 * x1485 * x904 -
         x513 * (0.84 * x508 * x688 + 6.0 * x688 * x893) -
         x533 * (6.0 * x528 * x688 + 0.84 * x688 * x899);
  x893 = x1363 * x537 - x1495 * x537 + x1797 + x2102 - x888 / x551;
  x731 = 3.0 * kf_qss[16] * x1275 + 4050000000000.0 * x1278 * x1281 -
         5.4675e+24 * x1278 * x736 *
           exp(-1434.1674975434501 * invT - 5.14 * logT + x1279) +
         6.6e+36 * x1287 * x373 - 1.452e+73 * x1523 * x755 -
         x369 * (0.84 * x364 * x688 + 6.0 * x688 * x742) -
         x408 * (0.84 * x403 * x688 + 6.0 * x688 * x731);
  x687 = -1.9737675000000001e+43 * x106 + 4.2e+18 * x1137 * x1141 -
         x114 * (0.84 * x109 * x688 + 6.0 * x688 * x714) -
         x116 * (6.0 * x146 * x688 + 0.84 * x687 * x688) + 7.695e+21 * x1176 +
         1.281e+47 * x1199 * x85 - 5.88e+36 * x151 -
         5.46987e+93 * x1539 * x723 -
         x81 * (0.84 * x688 * x703 + 6.0 * x688 * x76);
  x146 =
    (1.14e+30 * sc[1] * x1513 + 1.56e+28 * x1231 - 4.332e+59 * x1507 * x774 -
     8.112e+55 * x1511 * x790 - x187 * (0.84 * x182 + 6.0 * x688 * x781) -
     x221 * (0.84 * x1050 + 6.0 * x216)) /
    x228;
  x703 = x119 * x1205 - x119 * x231 - x119 * x824 - x1240 * x232 * x748 +
         x146 * x232;
  x76 = -x1135 * x172 * x701 + x172 * x46 + x703 -
        (kf_qss[84] * sc[0] * x1149 + kf_qss[88] * sc[5] * x1187 +
         kf_qss[89] * sc[6] * exp(-x1144 - x91) + kf_qss[95] * sc[9] * x1192 +
         2.565e+21 * x1172 * x1174 * x25 + x687) /
          x169;
  x714 = -x1240 * x423 * x748 + x146 * x423;
  x422 = -x1241 * x422 * x735 / ((x420) * (x420)) + x1299 * x735 +
         x1364 * x556 * x559 * x735 / ((x420) * (x420)) - x1367 * x777 +
         x1522 * x698 + x425 * x707 - x426 * x76 + x714 - x893 * x911 -
         x731 / x420;
  x559 = (6.6e+18 * x1421 * x633 * exp(x616) - 1.452e+37 * x1571 * x620 -
          x630 * (0.84 * x625 * x688 + 6.0 * x688 * x994)) /
         x637;
  x633 =
    -x1135 * x605 * x701 - x1438 * x635 * x641 + x1574 * x698 + x559 * x641;
  x109 = -x1366 * x906 + x1575 * x719 - x422 * x585 + x46 * x605 + x633 -
         x893 * x977;
  x723 = 8.07e+21 * x1406 * x1408 + 9600000000000000.0 * x1588 -
         3.072e+31 * x1590 - x260 * (6.0 * x255 * x688 + 0.84 * x688 * x877) -
         x305 * (0.84 * x300 * x688 + 6.0 * x688 * x859) - 2.17083e+43 * x872;
  x403 = x1002 * x1671 - x109 * x649 - x1135 * x316 * x701 - x1366 * x309 -
         x1367 * x293 + x1416 * x264 - x1472 * x863 + x1745 * x719 -
         x264 * x315 + x316 * x46 + x318 * x707 - x319 * x76 - x422 * x651 -
         (kf_qss[35] * sc[1] * x1117 + 2.0 * kf_qss[36] * sc[0] * x1369 +
          kf_qss[77] * sc[2] + x723) /
           x313;
  x736 = -2.17083e+33 * x1040 * x959 + 8.07e+16 * x1095 * x848 -
         x844 * (6.0 * x1029 * x688 + 0.84 * x688 * x839);
  x742 =
    (x1002 * x1709 + x1024 * x2321 - x1025 * x403 + x1045 * x786 - x1049 * x76 -
     x1083 * x109 + x1121 * x786 - x1366 * x897 - x1472 * x903 + x1580 * x719 -
     x2319 * x854 - x422 * x857 + x707 * x796 -
     (kf_qss[35] * sc[1] * x1117 + kf_qss[75] * sc[10] * x1114 + x736) / x851) /
    x1474;
  x364 = x1046 * x786 + x1047 * x707 - x1048 * x786 - x1049 * x154;
  x755 = -kf_qss[111] + x264;
  x774 = -kf_qss[110] + x412;
  x781 = x1659 * x774 + x173 * x423 * x771 - x761 * x774;
  x790 = x119 * x729 - x431 * x774 - x683 * x781 + x707 * x829;
  x560 = -kf_qss[110] * x556 * x560 / x551 - x154 * x426 + x1645 * x774 +
         x1662 * x774 - x644 * x781 + x694 + x698 * x939 + x707 * x942;
  x859 = -kf_qss[112] - kf_qss[113];
  x300 = -kf_qss[110] * x556 * x581 / (x551 * x579) + x1670 * x859 -
         x859 * x982 + x906;
  x877 = x1665 * x774 + x537 * x968 + x698 * x970 - x774 * x966;
  x255 = -kf_qss[112] * x605 / x62 + x1014 * x859 + x1015 * x560 +
         x1674 * x859 + x1680 * x859 - x300 * x601 - x585 * x877 + x998;
  x508 = -x755 * x955 + x755 * x958 + x701 * x956 / ((x62) * (x62));
  x899 = -x154 * x319 - x508 * x644 + x707 * x961 - x755 * x960;
  x528 = -kf_qss[112] * x316 / x62 + x1695 * x560 - x601 * x899 - x651 * x877 +
         x755 * x965 - x755 * x972 + x701 * x964 / ((x62) * (x62));
  x904 = -x300 * x963 + x560 * x987 - x585 * x790 - x859 * x976;
  x994 = x1018 * x707 + x119 * x989 + x1693 * x560 + x1694 * x255 -
         x508 * x683 - x528 * x974 - x649 * x904 - x651 * x790 - x755 * x885 -
         x899 * x963;
  x625 = -x1054 * x786 + x1055 * x560 - x364 * x601 - x857 * x877;
  x620 = -x1062 * x774 + x1064 * x707 - x426 * x881 - x674 * x781;
  x1029 = -x1066 * x300 + x1068 * x701 / ((x62) * (x62)) + x1071 * x560 +
          x1072 * x859 - x585 * x620 - x661 * x859;
  x839 = -x1022 * x625 - x1029 * x1083 - x1049 * x881 - x1066 * x364 -
         x1084 * x786 + x1085 * x560 + x1086 * x786 + x1087 * x707 +
         x1089 * x255 - x620 * x857;
  x1040 = -x1022 * x528 - x1029 * x649 - x1066 * x899 + x1067 * x707 +
          x1075 * x701 / ((x62) * (x62)) + x1076 * x755 + x1704 * x560 +
          x1706 * x255 - x319 * x881 - x508 * x674 - x620 * x651;
  x1174 = x1475 * (-x1025 * x994 + x1040 * x1081 + x1051 * x786 + x1053 * x560 +
                   x1058 * x119 + x1082 * x707 - x1083 * x904 - x1091 * x839 +
                   x1683 * x255 - x364 * x963 - x625 * x974 - x790 * x857);
  x517 = x1363 * x537 - x1495 * x537 + x2102 -
         (kf_qss[116] * sc[0] * x1321 + kf_qss[119] * sc[6] * x1353 +
          kf_qss[121] * sc[7] * x1350 +
          1.2e+30 * sc[1] * x25 * x517 * exp(x501) + x888) /
           x551 +
         x554 * (kf_qss[115] * sc[8] + x1716) / x488;
  x34 = (6125000000.0 * sc[13] * x1127 - 1.500625e+19 * x12 + x25 * x34 * x50 +
         x805) /
        x62;
  x50 =
    -x1135 * x172 * x701 + x172 * x34 + x703 -
    (kf_qss[104] * sc[1] + kf_qss[105] * sc[2] + kf_qss[108] * sc[4] +
     kf_qss[109] * sc[3] + kf_qss[114] * sc[8] + kf_qss[94] * sc[10] * x1178 +
     sc[6] * x1169 + 1.4e+18 * x1141 * x776 + x687) /
      x169;
  x1141 = x1299 * x774 - x1367 * x781 + x1522 * x698 + x1730 * x774 -
          x1731 * x774 + x425 * x707 - x426 * x50 - x517 * x911 + x714 -
          (kf_qss[106] * sc[2] + kf_qss[94] * sc[10] * x1178 + x731) / x420;
  x1169 = -sc[1] * x1462 / x579 - x1141 * x585 - x1366 * x300 + x1469 * x859 -
          x1563 * x859 - x1565 * x859 + x1575 * x560 + x1711 * x859 +
          x34 * x605 - x517 * x977 + x633;
  x1176 = -x1135 * x316 * x701 - x1141 * x651 - x1169 * x649 - x1366 * x899 -
          x1367 * x508 + x1416 * x755 - x1472 * x528 + x1671 * x255 +
          x1745 * x560 - x315 * x755 + x316 * x34 + x318 * x707 - x319 * x50 -
          (kf_qss[107] * sc[2] + kf_qss[62] * sc[1] * x1402 + x723) / x313;
  x1231 = (x1024 * x1040 - x1025 * x1176 + x1045 * x786 - x1049 * x50 -
           x1083 * x1169 + x1121 * x786 - x1141 * x857 - x1366 * x364 -
           x1472 * x625 + x1580 * x560 + x1709 * x255 + x707 * x796 -
           x839 * x854 - (kf_qss[71] * sc[1] * x1104 + x736) / x851) /
          x1474;
  x1275 = x1659 * x412 + x173 * x423 * x771 - x412 * x761;
  x14 = -7350000000.0 * x14 + x51 + 1.80075e+19 * x811;
  x802 = x119 * x1625 + x119 * x799 + x14 * x802 / ((x62) * (x62)) +
         x173 * x232 * x771;
  x811 = x119 * x729 - x1275 * x683 - x412 * x431 + x802 * x829;
  x1281 = x1046 * x786 + x1047 * x802 - x1048 * x786 - x1049 * x154;
  x922 = 1.175628e+54 * x1652 - 1.878e+27 * x476 * x481 +
         x922 * (0.84 * x467 + 6.0 * x918);
  x1462 = x537 * x915 + x922 * x933;
  x581 = -kf_qss[128] * x440 * x556 * x581 / (x551 * ((x579) * (x579))) +
         kf_qss[128] * x982 + x1462 * x984 + x537 * x979;
  x533 = -kf_qss[128] * x911 / x551 + x1462 * x970 + x1665 * x412 -
         x412 * x966 + x537 * x968;
  x1485 = -x1275 * x644 + x1462 * x939 - x154 * x426 + x1645 * x412 +
          x1662 * x412 + x694 + x802 * x942;
  x1006 = -kf_qss[128] * x1014 - kf_qss[128] * x1674 - kf_qss[128] * x1680 -
          kf_qss[128] * x977 / x551 + x1006 * x635 +
          x1008 * x14 / ((x62) * (x62)) + x1012 * x1462 + x1015 * x1485 -
          x533 * x585 + x537 * x594 * x977 / ((x551) * (x551)) - x581 * x601;
  x1008 = -x1054 * x786 + x1055 * x1485 - x1281 * x601 - x533 * x857;
  x956 = x14 * x956 / ((x62) * (x62)) - x264 * x955 + x264 * x958;
  x513 = -x154 * x319 - x264 * x960 - x644 * x956 + x802 * x961;
  x187 = x14 * x964 / ((x62) * (x62)) + x1485 * x1695 + x264 * x965 -
         x264 * x972 - x513 * x601 - x533 * x651;
  x1507 = kf_qss[128] * x976 + x1485 * x987 - x581 * x963 - x585 * x811;
  x221 = x1006 * x1694 + x1018 * x802 + x119 * x989 + x1485 * x1693 -
         x1507 * x649 - x187 * x974 - x264 * x885 - x513 * x963 - x651 * x811 -
         x683 * x956;
  x1513 = -x1059 * x119 + x1060 * x14 / ((x62) * (x62)) + x119 * x1698;
  x408 = -x1062 * x412 + x1064 * x802 - x1275 * x674 - x1513 * x426;
  x369 = -kf_qss[128] * x1072 + kf_qss[128] * x661 - x1066 * x581 +
         x1068 * x14 / ((x62) * (x62)) + x1071 * x1485 - x408 * x585;
  x1075 = x1006 * x1706 - x1022 * x187 - x1066 * x513 + x1067 * x802 +
          x1075 * x14 / ((x62) * (x62)) + x1076 * x264 + x1485 * x1704 -
          x1513 * x319 - x369 * x649 - x408 * x651 - x674 * x956;
  x106 = x1006 * x1089 - x1008 * x1022 - x1049 * x1513 - x1066 * x1281 -
         x1083 * x369 - x1084 * x786 + x1085 * x1485 + x1086 * x786 +
         x1087 * x802 - x408 * x857;
  x116 = x1475 * (x1006 * x1683 - x1008 * x974 - x1025 * x221 + x1051 * x786 +
                  x1053 * x1485 + x1058 * x119 - x106 * x1091 + x1075 * x1081 +
                  x1082 * x802 - x1083 * x1507 - x1281 * x963 - x811 * x857);
  x1127 = (7350000000.0 * sc[13] * x1127 - 1.80075e+19 * x12 + x805) / x62;
  x151 = x1127 * x172 - x1135 * x14 * x172 + x703 - x687 / x169;
  x918 = (1.878e+27 * sc[1] * sc[20] * x461 * x476 -
          x472 * (0.84 * x467 + 6.0 * x918) - 1.175628e+54 * x923) /
         x488;
  x467 =
    -x1318 * x554 * x922 + x1363 * x537 - x1495 * x537 + x554 * x918 -
    (kf_qss[120] * sc[3] * x1326 + kf_qss[124] * sc[10] * x1295 +
     kf_qss[125] * sc[1] + kf_qss[126] * sc[2] + kf_qss[127] * sc[4] +
     kf_qss[129] * sc[8] + sc[6] * x1336 + 1.99e+29 * x1343 * x776 + x888) /
      x551;
  x1336 = -x1275 * x1367 + x1299 * x412 + x1462 * x1522 - x151 * x426 +
          x1730 * x412 - x1731 * x412 + x425 * x802 - x467 * x911 + x714 -
          (kf_qss[124] * sc[10] * x1295 + x731) / x420;
  x1343 = -kf_qss[128] * x1469 + kf_qss[128] * x1563 + kf_qss[128] * x1565 -
          kf_qss[128] * x1711 + x1127 * x605 - x1135 * x14 * x605 -
          x1336 * x585 - x1366 * x581 - x1438 * x635 * x641 + x1462 * x1574 +
          x1485 * x1575 - x467 * x977 + x559 * x641;
  x472 = x1006 * x1671 + x1127 * x316 - x1135 * x14 * x316 - x1336 * x651 -
         x1343 * x649 - x1366 * x513 - x1367 * x956 + x1416 * x264 -
         x1472 * x187 + x1485 * x1745 - x151 * x319 - x264 * x315 +
         x318 * x802 - x723 / x313;
  x81 =
    (x1006 * x1709 - x1008 * x1472 + x1024 * x1075 - x1025 * x472 +
     x1045 * x786 - x1049 * x151 - x106 * x854 - x1083 * x1343 + x1121 * x786 -
     x1281 * x1366 - x1336 * x857 + x1485 * x1580 - x736 / x851 + x796 * x802) /
    x1474;
  x799 = x1043 * x1625 + x1043 * x799 + x1971;
  x114 = -kf_qss[75] + x1634;
  x946 = x1043 * x946 - x1043 * x947 + x1629 * x185;
  x947 = x1047 * x799 - x1049 * x946;
  x1046 = x1046 * x114 - x1048 * x114 + x947;
  x915 = x1649 * x915 + x1653 * x933;
  x933 = x1642 * x1665 - x1642 * x966 + x1649 * x968 + x915 * x970;
  x1047 = x1642 * x1659 - x1642 * x761 + x1660 * x185;
  x913 = x1649 * x913 + x1663 * x185 - x426 * x946 + x799 * x942 + x915 * x939;
  x939 = -x1047 * x644 + x1642 * x1645 + x1642 * x1662 + x913;
  x942 = x1055 * x939 - x857 * x933;
  x1048 = -x1046 * x601 - x1054 * x114 + x942;
  x12 = -kf_qss[76] + x1689;
  x630 = -x12 * x955 + x12 * x958 + x2031;
  x961 = -x319 * x946 + x799 * x961;
  x1571 = -x12 * x960 - x630 * x644 + x961;
  x305 = x1695 * x939 - x651 * x933;
  x260 = x12 * x965 - x12 * x972 - x1571 * x601 + x1970 * x964 + x305;
  x979 = x1649 * x979 + x915 * x984;
  x984 = x1010 * x1649 + x1012 * x915 + x1015 * x939 + x2027 - x585 * x933 -
         x601 * x979;
  x1588 = x1043 * x729 - x1047 * x683 - x1642 * x431 + x799 * x829;
  x1590 = -x1588 * x585 + x939 * x987 - x963 * x979;
  x844 = x1018 * x799 + x1043 * x989 - x1588 * x651 + x1693 * x939;
  x1050 = -x12 * x885 - x1571 * x963 - x1590 * x649 + x1694 * x984 -
          x260 * x974 - x630 * x683 + x844;
  x1059 = -x1043 * x1059 + x1043 * x1698 + x1060 * x1970;
  x1060 = -x1047 * x674 - x1062 * x1642 + x1064 * x799 -
          x426 * (kf_qss[76] / x169 + x1059);
  x182 = -x1060 * x585 - x1066 * x979 + x1068 * x1970 + x1071 * x939;
  x1084 = -x1022 * x1048 - x1046 * x1066 - x1049 * (kf_qss[76] / x169 + x1059) -
          x1060 * x857 - x1083 * x182 - x1084 * x114 + x1085 * x939 +
          x1086 * x114 + x1087 * x799 + x1089 * x984;
  x1086 = -x1022 * x260 - x1060 * x651 - x1066 * x1571 + x1067 * x799 +
          x1076 * x12 + x1704 * x939 + x1706 * x984 - x182 * x649 + x2042 -
          x319 * (kf_qss[76] / x169 + x1059) - x630 * x674;
  x1625 =
    x1475 * (-x1025 * x1050 + x1043 * x1058 - x1046 * x963 - x1048 * x974 +
             x1051 * x114 + x1053 * x939 + x1081 * x1086 + x1082 * x799 -
             x1083 * x1590 - x1084 * x1091 - x1588 * x857 + x1683 * x984);
  x231 = x1043 * x1205 - x1043 * x231 - x1043 * x824;
  x1205 = x1806 + x2105 + x231;
  x1629 = x1522 * x915 + x1733 * x423 / x228 + x2058 + x425 * x799;
  x1652 = -x1047 * x1367 + x1299 * x1642 + x1642 * x1730 - x1642 * x1731;
  x1363 = x1363 * x1649 - x1495 * x1649;
  x1495 = x1363 - x1719 / x551 + x1797 + x2102;
  x1663 = -x1205 * x426 - x1495 * x911 + x1629 + x1652 - x1737 / x420;
  x1698 = -x1366 * x979 + x1574 * x915 + x1727 * x641 / x637 + x1960;
  x923 = -kf_qss[74] * sc[1] / x579 - x1495 * x977 + x1575 * x939 -
         x1663 * x585 + x1698 + x1801;
  x824 = x1671 * x984 + x1745 * x939 + x2065 + x318 * x799 - x865 / x313;
  x872 = x12 * x1416 - x12 * x315 - x1205 * x319 - x1366 * x1571 -
         x1367 * x630 - x1472 * x260 - x1663 * x651 - x649 * x923 + x824;
  x848 = (x1024 * x1086 - x1025 * x872 + x1045 * x114 - x1046 * x1366 -
          x1048 * x1472 - x1049 * x1205 - x1083 * x923 - x1084 * x854 +
          x1121 * x114 + x1580 * x939 - x1663 * x857 + x1709 * x984 +
          x796 * x799 - (2.69e+16 * x1094 * x25 * x848 + x1691) / x851) /
         x1474;
  x1121 = x1689 * x965 - x1689 * x972 + x1970 * x964 - x601 * (x2090 + x961);
  x1045 = -x1590 * x649 + x1694 * x984 + x2095 + x844 - x963 * (x2090 + x961) -
          x974 * (x1121 + x305);
  x216 = -x1047 * x674 - x1059 * x426 - x1062 * x1642 + x1064 * x799;
  x813 = -x1066 * x979 + x1068 * x1970 + x1071 * x939 - x216 * x585;
  x1971 = -x1059 * x319 + x1067 * x799 + x1704 * x939 + x2042 - x216 * x651;
  x40 = -x1022 * (x1121 + x305) - x1066 * (x2090 + x961) + x1076 * x1689 +
        x1706 * x984 + x1971 - x2089 * x674 - x649 * x813;
  x1054 = -x1054 * x1634 - x601 * (x1635 + x947);
  x2355 = -x1022 * (x1054 + x942) - x1049 * x1059 - x1066 * (x1635 + x947) +
          x1085 * x939 + x1087 * x799 + x1702 - x216 * x857;
  x1051 = x1043 * x1058 + x1051 * x1634 + x1082 * x799 - x963 * (x1635 + x947);
  x1058 =
    x1475 * (-x1025 * x1045 + x1051 + x1053 * x939 + x1081 * x40 -
             x1083 * x1590 - x1091 * (-x1083 * x813 + x1089 * x984 + x2355) -
             x1588 * x857 + x1683 * x984 - x974 * (x1054 + x942));
  x1082 = (kf_qss[102] * sc[6] * x1210 + sc[0] * x1235 + sc[1] * x211 * x224 +
           sc[4] * x1208 + sc[5] * x1217 + x1733) /
          x228;
  x1208 = (kf_qss[81] * sc[1] * x1123 + x1722) / x62;
  x1217 = x1082 * x232 + x1208 * x172 + x2049 + x231 -
          (kf_qss[86] * sc[1] * x1163 + x1739) / x169;
  x1634 = x1082 * x423 - x1217 * x426 - x1495 * x911 + x1522 * x915 + x1652 -
          x1737 / x420 + x2058 + x425 * x799;
  x2356 = x1208 * x605 - x1495 * x977 + x1575 * x939 - x1634 * x585 + x1698;
  x2357 =
    -x1366 * (x2090 + x961) - x1367 * x2089 + x1416 * x1689 - x1689 * x315;
  x1408 = -x1135 * x1622 * x316 + x1208 * x316 - x1217 * x319 -
          x1472 * (x1121 + x305) - x1634 * x651 + x1671 * x984 + x1745 * x939 -
          x2356 * x649 + x2357 + x318 * x799 -
          (kf_qss[83] * sc[2] + 2.69e+21 * x1408 * x776 + x865) / x313;
  x796 = -x1366 * (x1635 + x947) + x796 * x799;
  x2365 = x1024 * x40 + x1580 * x939 + x1709 * x984 -
          x854 * (-x1083 * x813 + x1089 * x984 + x2355);
  x851 =
    (-x1025 * x1408 - x1049 * x1217 - x1083 * x2356 - x1472 * (x1054 + x942) -
     x1634 * x857 + x1692 + x2365 + x796 - (sc[1] * x1101 + x1691) / x851) /
    x1474;
  x1101 = x1363 + x1797 + x2102 - (kf_qss[118] * sc[1] * x1332 + x1719) / x551;
  x191 = (5.2e+27 * x1228 * x191 * x776 + x1733) / x228;
  x1691 = 2.2e+36 * x776 * exp(g_RT[18] - g_RT[8] - g_RT_qss[3] + x356);
  x373 = -x1101 * x911 + x1522 * x915 + x1652 + x191 * x423 + x2058 +
         x425 * x799 - x426 * (x191 * x232 + x2105 + x231) -
         (x1691 * x373 + x1737) / x420;
  x423 = -x1101 * x977 + x1575 * x939 + x1698 + x1801 - x373 * x585;
  x1522 = -x1472 * (x1121 + x305) + x2357 -
          x319 * (x191 * x232 + x2105 + x231) - x373 * x651 - x423 * x649 +
          x824;
  x425 = -x1472 * (x1054 + x942) + x1692 + x1767 + x796;
  x2058 = (-x1025 * x1522 - x1049 * (x191 * x232 + x2105 + x231) -
           x1083 * x423 + x2365 - x373 * x857 + x425) /
          x1474;
  x1642 = -kf_qss[132] + x1642;
  x761 = x1642 * x1659 - x1642 * x761 + x1660 * x185;
  x729 = x1043 * x729 - x1642 * x431 - x683 * x761 + x799 * x829;
  x431 = x1642 * x1645 + x1642 * x1662 - x644 * x761 + x913;
  x829 = x431 * x987 - x585 * x729 - x963 * x979;
  x966 = x1642 * x1665 - x1642 * x966 + x1649 * x968 + x915 * x970;
  x968 = x1121 + x1695 * x431 - x651 * x966;
  x970 = x1010 * x1649 + x1012 * x915 + x1015 * x431 + x2027 - x585 * x966 -
         x601 * x979;
  x989 = x1018 * x799 + x1043 * x989 + x1693 * x431 + x1694 * x970 + x2095 -
         x649 * x829 - x651 * x729 - x963 * (x2090 + x961) - x968 * x974;
  x1018 = -x1059 * x426 - x1062 * x1642 + x1064 * x799 - x674 * x761;
  x1062 = -x1018 * x585 - x1066 * x979 + x1068 * x1970 + x1071 * x431;
  x1055 = x1054 + x1055 * x431 - x857 * x966;
  x1064 = -x1018 * x857 - x1022 * x1055 - x1049 * x1059 - x1062 * x1083 -
          x1066 * (x1635 + x947) + x1085 * x431 + x1087 * x799 + x1089 * x970 +
          x1702;
  x1067 = -x1018 * x651 - x1022 * x968 - x1059 * x319 - x1062 * x649 -
          x1066 * (x2090 + x961) + x1067 * x799 + x1076 * x1689 + x1704 * x431 +
          x1706 * x970 + x2042 - x2089 * x674;
  x1085 = x1475 *
          (-x1025 * x989 + x1051 + x1053 * x431 - x1055 * x974 - x1064 * x1091 +
           x1067 * x1081 - x1083 * x829 + x1683 * x970 - x729 * x857);
  x1087 = x1363 + x1797 + x2102 - (sc[8] * x1155 + x1719) / x551;
  x172 = x172 * (kf_qss[130] * sc[1] + x1722) / x62 + x1806 + x2049 + x231 -
         (kf_qss[131] * sc[6] + sc[1] * x1160 + sc[8] * x1155 + x1739) / x169;
  x1155 = -x1087 * x911 + x1299 * x1642 - x1367 * x761 + x1629 + x1642 * x1730 -
          x1642 * x1731 - x172 * x426 - x1737 / x420;
  x605 = -kf_qss[113] * sc[1] * x1452 / x579 - x1087 * x977 - x1155 * x585 +
         x1575 * x431 + x1698 + x605 * (kf_qss[130] * sc[1] + x1722) / x62;
  x316 = -x1135 * x1622 * x316 - x1155 * x651 - x1472 * x968 + x1671 * x970 -
         x172 * x319 + x1745 * x431 + x2357 +
         x316 * (kf_qss[130] * sc[1] + x1722) / x62 + x318 * x799 -
         x605 * x649 - (sc[1] * x1414 + x865) / x313;
  x1160 = (x1024 * x1067 - x1025 * x316 - x1049 * x172 - x1055 * x1472 -
           x1064 * x854 - x1083 * x605 - x1155 * x857 + x1580 * x431 + x1692 +
           x1709 * x970 + x1767 + x796) /
          x1474;
  x85 = x1804 + x1806 + x2049 + x231 -
        (4.27e+46 * x1197 * x776 * x85 + x1739) / x169;
  x1414 = (kf_qss[135] * sc[0] * x1301 + kf_qss[137] * sc[5] * x1308 +
           kf_qss[138] * sc[6] * x1304 + kf_qss[140] * sc[9] * x1315 +
           6.26e+26 * sc[1] * x458 * x461 * x476 + x1716) /
          x488;
  x554 = x1363 + x1414 * x554 - x1719 / x551 + x2102;
  x420 = x1629 + x1652 - x426 * x85 - x554 * x911 -
         (kf_qss[132] * sc[10] * x1263 + x1737) / x420;
  x426 = x1575 * x939 + x1698 + x1801 - x420 * x585 - x554 * x977;
  x911 = -x1472 * (x1121 + x305) + x2357 - x319 * x85 - x420 * x651 -
         x426 * x649 + x824;
  x1299 =
    (-x1025 * x911 - x1049 * x85 - x1083 * x426 + x2365 - x420 * x857 + x425) /
    x1474;
  x1635 = -kf_qss[37] * x271 + x1689;
  x955 = -x1635 * x955 + x1635 * x958 + x2031;
  x644 = -x1635 * x960 - x644 * x955 + x961;
  x958 = kf_qss[37] / x313 + x1635 * x965 - x1635 * x972 + x1970 * x964 + x305 -
         x601 * x644;
  x960 = -kf_qss[37] * x1670 + kf_qss[37] * x982 + x979;
  x601 = -kf_qss[37] * x1014 - kf_qss[37] * x1674 - kf_qss[37] * x1680 +
         x1010 * x1649 + x1012 * x915 + x1015 * x939 + x2027 - x585 * x933 -
         x601 * x960;
  x271 = -kf_qss[37] * x1072 + kf_qss[37] * x271 / x579 + kf_qss[37] * x661 -
         x1066 * x960 + x1068 * x1970 + x1071 * x939 - x216 * x585;
  x579 = -x1022 * x958 - x1066 * x644 + x1076 * x1635 + x1706 * x601 + x1971 -
         x271 * x649 - x674 * x955;
  x674 = kf_qss[37] * x976 - x1588 * x585 + x939 * x987 - x960 * x963;
  x885 = -x1635 * x885 + x1694 * x601 - x644 * x963 - x649 * x674 -
         x683 * x955 + x844 - x958 * x974;
  x963 =
    x1475 * (-x1025 * x885 + x1051 + x1053 * x939 + x1081 * x579 -
             x1083 * x674 - x1091 * (-x1083 * x271 + x1089 * x601 + x2355) -
             x1588 * x857 + x1683 * x601 - x974 * (x1054 + x942));
  x585 = -kf_qss[37] * x1469 + kf_qss[37] * x1563 + kf_qss[37] * x1565 -
         kf_qss[37] * x1711 - x1366 * x960 - x1495 * x977 + x1574 * x915 +
         x1575 * x939 - x1663 * x585 + x1727 * x641 / x637 + x1801 + x1960;
  x313 = -x1205 * x319 - x1366 * x644 - x1367 * x955 + x1416 * x1635 -
         x1472 * x958 - x1635 * x315 - x1663 * x651 + x1671 * x601 +
         x1745 * x939 + x2065 + x318 * x799 - x585 * x649 - x865 / x313;
  x319 = (x1024 * x579 - x1025 * x313 - x1049 * x1205 - x1083 * x585 +
          x1580 * x939 - x1663 * x857 + x1709 * x601 + x425 -
          x854 * (-x1083 * x271 + x1089 * x601 + x2355)) /
         x1474;
  x641 = (-sc_qss[0] * x1078 + x1471) / ((x675) * (x675));
  x649 = x1077 * x641;
  x651 = (-sc_qss[0] * x1019 + x883) / x675;
  x857 = x1707 * x641;
  x964 = (-sc_qss[0] * x1697 + x295) / x675;
  x965 = x1791 * x641;
  x972 = (-sc_qss[0] * x1781 + x1761) / x675;
  x974 = x1852 * x641;
  x976 = (-sc_qss[0] * x1846 + x1782) / x675;
  x977 = x1894 * x641;
  x982 = (-sc_qss[0] * x1897 + x1882) / x675;
  x987 = x1979 * x641;
  x1010 = (-sc_qss[0] * x646 + x1956) / x675;
  x1012 = x2043 * x641;
  x1014 = (-sc_qss[0] * x2036 + x2029) / x675;
  x1015 = x2098 * x641;
  x1019 = (-sc_qss[0] * x2096 + x2091) / x675;
  x1022 = x2148 * x641;
  x1025 = (-sc_qss[0] * x2143 + x1379) / x675;
  x1049 = x2194 * x641;
  x1053 = (-sc_qss[0] * x2190 + x640) / x675;
  x1066 = x2271 * x641;
  x1068 = (-sc_qss[0] * x2273 + x2196) / x675;
  x661 = x2325 * x641;
  x1071 = (-sc_qss[0] * x2324 + x1398) / x675;
  x1072 = x2364 * x641;
  x1076 = (-sc_qss[0] * x2360 + x648) / x675;
  x1077 = x2321 * x641;
  x1081 = (-sc_qss[0] * x869 + x403) / x675;
  x1083 = x1040 * x641;
  x1089 = (-sc_qss[0] * x994 + x1176) / x675;
  x1091 = x1075 * x641;
  x1366 = (-sc_qss[0] * x221 + x472) / x675;
  x1367 = x1086 * x641;
  x1472 = (-sc_qss[0] * x1050 + x872) / x675;
  x1475 = x40 * x641;
  x854 = (-sc_qss[0] * x1045 + x1408) / x675;
  x1563 = (-sc_qss[0] * x1045 + x1522) / x675;
  x1565 = x1067 * x641;
  x1469 = (-sc_qss[0] * x989 + x316) / x675;
  x1574 = (-sc_qss[0] * x1045 + x911) / x675;
  x1575 = x579 * x641;
  x1580 = (-sc_qss[0] * x885 + x313) / x675;
  x1024 = (-sc_qss[0] * x593 - sc_qss[1] * x673 + x1470) / ((x642) * (x642));
  x1016 = x1016 * x1024;
  x988 = (-sc_qss[0] * x988 - sc_qss[1] * x1073 + x985) / x642;
  x1073 = x1024 * x1681;
  x985 = (-sc_qss[0] * x1673 - sc_qss[1] * x1701 + x1661) / x642;
  x315 = x1024 * x1771;
  x318 = (-sc_qss[0] * x1780 - sc_qss[1] * x1789 + x1755) / x642;
  x1416 = x1024 * x1839;
  x883 = (-sc_qss[0] * x1836 - sc_qss[1] * x1850 + x1775) / x642;
  x1645 = x1024 * x1884;
  x1659 = (-sc_qss[0] * x1896 - sc_qss[1] * x1893 + x1843) / x642;
  x1660 = x1024 * x1965;
  x1662 = (-sc_qss[0] * x1958 - sc_qss[1] * x1977 + x1890) / x642;
  x1665 = x1024 * x2028;
  x1670 = (-sc_qss[0] * x2024 - sc_qss[1] * x2041 + x2023) / x642;
  x1673 = x1024 * x2086;
  x1674 = (-sc_qss[0] * x2094 - sc_qss[1] * x2087 + x2033) / x642;
  x1680 = x1024 * x2135;
  x1681 = (-sc_qss[0] * x2133 - sc_qss[1] * x2146 + x497) / x642;
  x1683 = x1024 * x2181;
  x1689 = (-sc_qss[0] * x2183 - sc_qss[1] * x2193 + x604) / x642;
  x1693 = x1024 * x2263;
  x1694 = (-sc_qss[0] * x2272 - sc_qss[1] * x584 + x101) / x642;
  x1695 = x1024 * x2318;
  x1697 = (-sc_qss[0] * x2311 - sc_qss[1] * x2317 + x1529) / x642;
  x1701 = x1024 * x2358;
  x1702 = (-sc_qss[0] * x2323 - sc_qss[1] * x2363 + x2322) / x642;
  x1704 = x1002 * x1024;
  x1706 = (-sc_qss[0] * x1111 - sc_qss[1] * x2313 + x109) / x642;
  x1707 = x1024 * x255;
  x1709 = (-sc_qss[0] * x904 - sc_qss[1] * x1029 + x1169) / x642;
  x1711 = x1006 * x1024;
  x1719 = (-sc_qss[0] * x1507 - sc_qss[1] * x369 + x1343) / x642;
  x1730 = x1024 * x984;
  x1731 = (-sc_qss[0] * x1590 - sc_qss[1] * x182 + x923) / x642;
  x1737 = -sc_qss[0] * x1590 - sc_qss[1] * x813;
  x1739 = (x1737 + x2356) / x642;
  x1661 = (x1737 + x423) / x642;
  x1671 = x1024 * x970;
  x1745 = (-sc_qss[0] * x829 - sc_qss[1] * x1062 + x605) / x642;
  x865 = (x1737 + x426) / x642;
  x295 = x1024 * x601;
  x1692 = (-sc_qss[0] * x674 - sc_qss[1] * x271 + x585) / x642;
  x952 =
    x952 * (-sc_qss[0] * x433 - sc_qss[1] * x670 - sc_qss[2] * x600 + x1365);
  x951 = x951 * x952;
  x830 =
    x562 * (-sc_qss[0] * x830 - sc_qss[1] * x1065 - sc_qss[2] * x971 + x759);
  x971 = x1664 * x952;
  x1065 =
    x562 * (-sc_qss[0] * x1672 - sc_qss[1] * x1700 - sc_qss[2] * x1666 + x398);
  x759 = x1770 * x952;
  x1664 =
    x562 * (-sc_qss[0] * x1760 - sc_qss[1] * x1788 - sc_qss[2] * x1768 + x1696);
  x1666 = x1835 * x952;
  x1672 =
    x562 * (-sc_qss[0] * x1833 - sc_qss[1] * x1849 - sc_qss[2] * x1838 + x1783);
  x1700 = x1881 * x952;
  x398 =
    x562 * (-sc_qss[0] * x1847 - sc_qss[1] * x1888 - sc_qss[2] * x1883 + x1841);
  x1760 = x1949 * x952;
  x1768 =
    x562 * (-sc_qss[0] * x1895 - sc_qss[1] * x1976 - sc_qss[2] * x1959 + x1886);
  x1770 = x2021 * x952;
  x1771 =
    x562 * (-sc_qss[0] * x1973 - sc_qss[1] * x2040 - sc_qss[2] * x2025 + x1955);
  x1780 = x2079 * x952;
  x1781 =
    x562 * (-sc_qss[0] * x2044 - sc_qss[1] * x2084 - sc_qss[2] * x2080 + x2026);
  x1788 = x2128 * x952;
  x1789 =
    x562 * (-sc_qss[0] * x2130 - sc_qss[1] * x2145 - sc_qss[2] * x2134 + x2082);
  x1791 = x2147 * x952;
  x1797 =
    x562 * (-sc_qss[0] * x2182 - sc_qss[1] * x2192 - sc_qss[2] * x2180 + x2137);
  x1801 = x2188 * x952;
  x1804 =
    x562 * (-sc_qss[0] * x1090 - sc_qss[1] * x2257 - sc_qss[2] * x2186 + x549);
  x1806 = x2310 * x952;
  x1696 =
    x562 * (-sc_qss[0] * x2259 - sc_qss[1] * x2316 - sc_qss[2] * x2312 + x758);
  x1755 = x2270 * x952;
  x1761 =
    x562 * (-sc_qss[0] * x1042 - sc_qss[1] * x2362 - sc_qss[2] * x882 + x962);
  x1767 = x719 * x952;
  x1833 =
    x562 * (-sc_qss[0] * x1034 - sc_qss[1] * x1688 - sc_qss[2] * x819 + x422);
  x1835 = x560 * x952;
  x1836 =
    x562 * (-sc_qss[0] * x790 - sc_qss[1] * x620 - sc_qss[2] * x877 + x1141);
  x1838 = x1485 * x952;
  x1839 =
    x562 * (-sc_qss[0] * x811 - sc_qss[1] * x408 - sc_qss[2] * x533 + x1336);
  x1846 = x939 * x952;
  x1849 =
    x562 * (-sc_qss[0] * x1588 - sc_qss[1] * x1060 - sc_qss[2] * x933 + x1663);
  x1850 = -sc_qss[0] * x1588 - sc_qss[1] * x216 - sc_qss[2] * x933;
  x1852 = x562 * (x1634 + x1850);
  x1783 = x562 * (x1850 + x373);
  x1775 = x431 * x952;
  x1782 =
    x562 * (-sc_qss[0] * x729 - sc_qss[1] * x1018 - sc_qss[2] * x966 + x1155);
  x1847 = x562 * (x1850 + x420);
  x1881 = x562 * (x1663 + x1850);
  x1883 =
    sc_qss[2] * (kf_qss[67] * sc[5] * x571 + 10.0e-13) / ((x637) * (x637));
  x1884 = x1003 * x1438 + x1003 * x1883 -
          (kf_qss[65] * sc[12] * x1431 + x1572) / x637;
  x1422 = x1438 * x1678 + x1678 * x1883 - (sc[12] * x1422 + x1727) / x637;
  x1678 = x1438 * x1765 - x1727 / x637 + x1765 * x1883;
  x1765 = x1438 * (-kf_qss[70] + x1677) + x1883 * (-kf_qss[70] + x1677) -
          (kf_qss[57] * sc[8] + x1727) / x637;
  x1879 =
    x1438 * x1879 + x1879 * x1883 -
    (kf_qss[66] * sc[8] * x1435 + kf_qss[68] * sc[12] * x1427 + x1727) / x637;
  x1888 = -kf_qss[67] * sc_qss[2] * x571 / x637 + x1438 * x1964 +
          x1883 * x1964 - x1992;
  x1419 = x1438 * x1677 + x1677 * x1883 -
          (kf_qss[58] * sc[8] + sc[12] * x1419 + x1727) / x637;
  x1893 = x1438 * x1677 + x1677 * x1883 - x1727 / x637;
  x1727 = x1438 * x1677 + x1677 * x1883 -
          (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] +
           kf_qss[66] * sc[4] * x1435 + x1727) /
            x637;
  x637 = x1003 * x1438 + x1003 * x1883 - x1572 / x637;
  x1003 = x1438 * x2262 - x1527 + x1883 * x2262;
  x1572 = x1438 * x1677 + x1677 * x1883 - x341;
  x1438 = x1438 * x635 + x1883 * x635 - x559;
  x827 =
    x827 * (-sc_qss[0] * x322 - sc_qss[1] * x666 - sc_qss[3] * x439 + x1242);
  x826 = x826 * x827;
  x728 = sc_qss[0] * x728;
  x726 = x234 * (-sc_qss[1] * x1061 - sc_qss[3] * x950 + x1556 + x726 * x728);
  x950 = x1627 * x827;
  x1061 = x234 * (-sc_qss[1] * x1699 - sc_qss[3] * x1630 + x140 * x728 + x1741);
  x1556 = x1759 * x827;
  x140 = x234 * (-sc_qss[1] * x1786 - sc_qss[3] * x1769 + x1668 * x728 + x202);
  x1627 = x1832 * x827;
  x1630 =
    x234 * (-sc_qss[1] * x1848 - sc_qss[3] * x1834 + x1792 * x728 + x1861);
  x1677 = x1845 * x827;
  x1699 =
    x234 * (-sc_qss[1] * x1887 - sc_qss[3] * x1880 + x1840 * x728 + x1904);
  x1741 = x1892 * x827;
  x1668 = x234 * (-sc_qss[1] * x655 - sc_qss[3] * x1948 + x1889 * x728 + x1999);
  x1759 = x1972 * x827;
  x1769 =
    x234 * (-sc_qss[1] * x2038 - sc_qss[3] * x2020 + x1957 * x728 + x2051);
  x1786 = x2035 * x827;
  x202 = x234 * (-sc_qss[1] * x2083 - sc_qss[3] * x2078 + x2032 * x728 + x2107);
  x1792 = x2125 * x827;
  x1832 = x234 * (-kf_qss[59] * sc_qss[0] / x169 - sc_qss[1] * x2144 -
                  sc_qss[3] * x2127 + x2124 * x728 + x2157);
  x1834 = x2141 * x827;
  x1848 =
    x234 * (-sc_qss[1] * x2191 - sc_qss[3] * x2142 + x2139 * x728 + x2205);
  x1861 = x808 * x827;
  x1840 = x234 * (-sc_qss[1] * x2195 - sc_qss[3] * x2187 + x2179 * x728 + x695);
  x1845 = x2189 * x827;
  x725 = x234 * (-sc_qss[1] * x2315 - sc_qss[3] * x856 + x1544 + x725 * x728);
  x1880 = x1591 * x827;
  x1887 = x234 * (-sc_qss[1] * x2361 - sc_qss[3] * x354 + x1578 * x728 + x2370);
  x1894 = x707 * x827;
  x1896 = x234 * (-sc_qss[1] * x881 - sc_qss[3] * (kf_qss[78] / x169 + x154) +
                  x119 * x728 + x76);
  x1897 = x234 * (-sc_qss[1] * x881 - sc_qss[3] * x154 + x119 * x728 + x50);
  x1904 = x802 * x827;
  x1841 = x234 * (-sc_qss[1] * x1513 - sc_qss[3] * x154 + x119 * x728 + x151);
  x1843 = x799 * x827;
  x169 = x234 * (-sc_qss[1] * (kf_qss[76] / x169 + x1059) - sc_qss[3] * x946 +
                 x1043 * x728 + x1205);
  x1043 = -sc_qss[1] * x1059 - sc_qss[3] * x946 + x1043 * x728;
  x1882 = x234 * (x1043 + x1217);
  x232 = x234 * (x1043 + x191 * x232 + x2105 + x231);
  x1889 = x234 * (x1043 + x172);
  x1892 = x234 * (x1043 + x85);
  x1895 = x234 * (x1043 + x1205);
  x936 = x936 * (-sc_qss[2] * x594 / x551 - sc_qss[3] * x440 / x551 + x1364);
  x935 = x935 * x936;
  x1948 = sc_qss[3] * x440 / ((x551) * (x551));
  x1949 = sc_qss[2] * x594 / ((x551) * (x551));
  x909 = x556 * (x1504 + x1948 * x909 + x1949 * x909);
  x1504 = x1656 * x936;
  x523 = x556 * (x1721 + x1948 * x523 + x1949 * x523);
  x1656 = x1764 * x936;
  x1721 = x556 * (x1762 * x1948 + x1762 * x1949 + x1798);
  x1762 = x1779 * x936;
  x1764 = x556 * (x1776 * x1948 + x1776 * x1949 + x1856);
  x1798 = x1878 * x936;
  x1776 = x556 * (x1851 * x1948 + x1851 * x1949 + x1906);
  x1779 = x1947 * x936;
  x1856 = x556 * (x1898 * x1948 + x1898 * x1949 + x1986);
  x1851 = x2018 * x936;
  x1878 = x556 * (sc_qss[2] * x1978 * x594 + sc_qss[3] * x1978 * x440 + x2056);
  x1906 = x2077 * x936;
  x1898 = x556 * (x1948 * x2075 + x1949 * x2075 + x2104);
  x1947 = x2093 * x936;
  x1958 = x556 * (x1948 * x2088 + x1949 * x2088 + x2155);
  x1959 = x2136 * x936;
  x1964 = x556 *
          (sc_qss[3] * x2132 * x440 / ((x551) * (x551)) + x1949 * x2132 + x553);
  x1965 = x2185 * x936;
  x646 = x556 * (x1491 + x1948 * x519 + x1949 * x519);
  x655 = x2269 * x936;
  x908 = x556 * (x1493 + x1948 * x908 + x1949 * x908);
  x1976 = x2268 * x936;
  x1977 = x556 * (x1948 * x250 + x1949 * x250 + x2371);
  x1979 = x698 * x936;
  x1986 = x556 * (x1948 * x537 + x1949 * x537 + x893);
  x1992 = x556 * (-kf_qss[110] * sc_qss[3] / x551 + x1948 * x537 +
                  x1949 * x537 + x517);
  x1999 = x1462 * x936;
  x1886 = x556 * (-kf_qss[128] * sc_qss[2] / x551 + x1948 * x537 +
                  x1949 * x537 + x467);
  x1890 = x915 * x936;
  x1956 = x556 * (x1495 + x1649 * x1948 + x1649 * x1949);
  x1957 = x556 * (x1101 + x1649 * x1948 + x1649 * x1949);
  x1972 = x556 * (x1087 + x1649 * x1948 + x1649 * x1949);
  x1649 = x556 * (x1649 * x1948 + x1649 * x1949 + x554);
  x1973 = sc_qss[6] * x65 / ((x62) * (x62));
  x1978 = sc_qss[1] * x659 / ((x62) * (x62));
  x2018 = sc_qss[2] * x602 / ((x62) * (x62));
  x821 = x1135 * x821 - x1554 + x1973 * x821 + x1978 * x821 + x2018 * x821;
  x1623 = -kf_qss[85] * sc_qss[6] / x62 + x1135 * x1623 + x1623 * x1973 +
          x1623 * x1978 + x1623 * x2018 - x1723;
  x1723 =
    x1135 * x1757 - x1722 / x62 + x1757 * x1973 + x1757 * x1978 + x1757 * x2018;
  x1757 =
    x1135 * x1831 - x1722 / x62 + x1831 * x1973 + x1831 * x1978 + x1831 * x2018;
  x1831 =
    x1135 * x1844 - x1722 / x62 + x1844 * x1973 + x1844 * x1978 + x1844 * x2018;
  x1844 = sc_qss[1] * x351 * x659 / ((x62) * (x62)) +
          sc_qss[2] * x351 * x602 / ((x62) * (x62)) +
          sc_qss[6] * x351 * x65 / ((x62) * (x62)) + x1135 * x351 - x816;
  x1622 = sc_qss[1] * x1970 * x659 + sc_qss[2] * x1970 * x602 +
          sc_qss[6] * x1970 * x65 + x1135 * x1622;
  x351 = x1622 - x1722 / x62;
  x816 = sc_qss[1] * x2140 * x659 / ((x62) * (x62)) +
         sc_qss[2] * x2140 * x602 / ((x62) * (x62)) +
         sc_qss[6] * x2140 * x65 / ((x62) * (x62)) + x1135 * x2140 - x1554;
  x65 = -kf_qss[80] * sc_qss[1] * x289 / x62 +
        sc_qss[1] * x43 * x659 / ((x62) * (x62)) +
        sc_qss[2] * x43 * x602 / ((x62) * (x62)) +
        sc_qss[6] * x43 * x65 / ((x62) * (x62)) + x1135 * x43 - x1551;
  x602 = -kf_qss[82] * sc_qss[1] * x238 / x62 + x1135 * x820 - x1554 +
         x1973 * x820 + x1978 * x820 + x2018 * x820;
  x659 = x1135 * x701 + x1973 * x701 + x1978 * x701 + x2018 * x701 - x46;
  x820 = -kf_qss[112] * sc_qss[2] / x62 + x1135 * x701 + x1973 * x701 +
         x1978 * x701 + x2018 * x701 - x34;
  x1135 = -x1127 + x1135 * x14 + x14 * x1973 + x14 * x1978 + x14 * x2018;
  x1554 = -x1208 + x1622;
  x62 = x1622 - (kf_qss[130] * sc[1] + x1722) / x62;
  x1235 = sc_qss[3] * x434 * x793 + sc_qss[6] * x173 * x793 + x1240 * x792 -
          (sc[17] * x1235 + x769) / x228;
  x1722 = sc_qss[6] * x173 / ((x228) * (x228));
  x1970 = sc_qss[3] * x434 / ((x228) * (x228));
  x211 = x1056 * x1240 + x1056 * x1722 + x1056 * x1970 -
         (sc[17] * x211 * x224 + x1733) / x228;
  x224 = x1240 * x276 + x1722 * x276 - x1733 / x228 + x1970 * x276;
  x1056 = -kf_qss[90] * sc_qss[6] / x228 + x1240 * x1793 + x1722 * x1793 -
          x1733 / x228 + x1793 * x1970;
  x276 = x1240 * x1842 + x1722 * x1842 + x1842 * x1970 - x1903;
  x1793 = x1240 * x219 + x1722 * x219 + x1970 * x219 - x1995;
  x185 = x1240 * x185 + x1722 * x185 + x185 * x1970;
  x1842 = -kf_qss[92] * sc_qss[6] / x228 + x185 -
          (kf_qss[102] * sc[17] * x1210 + x1733) / x228;
  x1903 = -x1733 / x228 + x185;
  x1238 = -kf_qss[98] * sc_qss[3] * x346 / x228 + x185 -
          (x1219 * x1238 + x1733) / x228;
  x792 = sc_qss[3] * x434 * x793 + sc_qss[6] * x173 * x793 + x1240 * x792 -
         x769 / x228;
  x793 = x1240 * x226 + x1722 * x226 + x1970 * x226 - x2285;
  x228 = x185 - (kf_qss[103] * x1220 * x1223 + x1733) / x228;
  x173 =
    sc_qss[3] * x434 * x771 + sc_qss[6] * x173 * x771 + x1240 * x748 - x146;
  x434 = -x1082 + x185;
  x769 = x185 - x191;
  x455 = sc_qss[7] * x455 / ((x488) * (x488));
  x1240 =
    x1318 * x930 + x455 * x930 - (kf_qss[135] * sc[20] * x1301 + x1502) / x488;
  x476 = x1318 * x1654 + x1654 * x455 -
         (6.26e+26 * sc[20] * x458 * x461 * x476 + x1716) / x488;
  x1654 = x1318 * (-kf_qss[136] + x1653) - x1716 / x488 +
          x455 * (-kf_qss[136] + x1653);
  x1733 = x1318 * (-kf_qss[138] + x1653) - x1716 / x488 +
          x455 * (-kf_qss[138] + x1653);
  x219 = -kf_qss[139] * sc_qss[7] * x162 * x447 / x488 +
         x1318 * (-kf_qss[137] + x1653) - x1716 / x488 +
         x455 * (-kf_qss[137] + x1653);
  x1946 = x1318 * x1946 + x1946 * x455 - x1985;
  x1985 = x1318 * (-kf_qss[139] + x1653) + x455 * (-kf_qss[139] + x1653) -
          (kf_qss[138] * sc[20] * x1304 + x1716) / x488;
  x1995 = x1318 * x1653 + x1653 * x455 - x1716 / x488;
  x453 = -sc_qss[7] * x453 / x488 + x1318 * (-kf_qss[140] + x1653) +
         x455 * (-kf_qss[140] + x1653) - (kf_qss[115] * sc[14] + x1716) / x488;
  x2020 =
    x1318 * x930 + x455 * x930 - (kf_qss[140] * sc[20] * x1315 + x1502) / x488;
  x2021 = -x1312 + x1318 * x891 + x455 * x891;
  x930 = x1318 * x930 - x1502 / x488 + x455 * x930;
  x1502 = -sc_qss[7] * (kf_qss[136] * x444 + kf_qss[139] * x447 * x739) / x488 +
          x1995;
  x488 = x1318 * x1653 + x1653 * x455 - (kf_qss[115] * sc[8] + x1716) / x488;
  x1716 = x1318 * x922 + x455 * x922 - x918;
  x1318 = x1318 * x1653 - x1414 + x1653 * x455;
  x1653 = 110.7 * exp(
                    -g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1] -
                    840.37183189388202 * invT + 1.79 * logT);
  x2024 = sc[1] * x1653;
  x2025 = 23000.0 * exp(
                      g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3] -
                      1648.03458051046 * invT + 1.05 * logT);
  x2027 = sc[0] * x2025;
  x2028 = 50.7 * exp(
                   g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6] -
                   6516.6558221711202 * invT + 1.93 * logT);
  x2031 = sc[0] * x2028;
  x2036 = 0.5 * sc[0] * exp(-3638.25649376812 * invT + 2.0 * logT);
  x2038 = 60000000.0 * sc[0] * x56;
  x2040 = -44670.543423485004 * invT + 0.44 * logT;
  x31 = 8.75e+31 * x25 * exp(-x2040 + x31);
  x2041 = -0.29097730287517898 * x37 + 0.43429448190325198 * log(x31) - 0.4;
  x2042 = -0.14 * x2041 - 0.55155399201712996 * x37 + 0.75;
  x2043 = exp(
    M_LN10 * (0.43429448190325198 * x37 /
              (((x2041) * (x2041)) / ((x2042) * (x2042)) + 1.0)));
  x2049 = x2043 * exp(-94921.759670744301 * invT - 8.87 * logT - x2040 + x30) /
          (x31 + 1.0);
  x2051 = 7.0e+44 * x2049 * x25 * x27;
  x2056 = 115.0 * exp(
                    g_RT[0] - g_RT[15] - g_RT[1] + g_RT_qss[7] -
                    3789.2214935095399 * invT + 1.9 * logT);
  x1955 = sc[0] * x2056;
  x1960 = exp(-2012.8666632188799 * invT);
  x2023 = 20000000.0 * sc[1] * x1960;
  x2065 = 100000000.0 * sc[10] * x566;
  x2029 = -18014.512518476698 * invT - 3.4 * logT;
  x2032 = 6645077720207.25 * x25 * exp(628.76922392300185 * invT - 5.02 * logT);
  x2035 = -0.29097730287517898 * x107 + 0.43429448190325198 * log(x2032) - 0.4;
  x2044 = -0.55155399201712996 * x107 - 0.14 * x2035 + 0.75;
  x2075 = exp(
            M_LN10 * (0.43429448190325198 * x107 /
                      (((x2035) * (x2035)) / ((x2044) * (x2044)) + 1.0))) /
          (x2032 + 1.0);
  x2077 = 2.565e+21 * x2075 * x25 * exp(x2029);
  x2078 = 90000000.0 * sc[8] * x346;
  x2079 = 80000000.0 * sc[1] * x332;
  x2080 = 15000000.0 * sc[1] * x376;
  x2083 = 128000.0 * x25 * exp(-618.95649893980499 * invT - 2.34 * logT);
  x2084 = -0.29097730287517898 * x298 + 0.43429448190325198 * log(x2083) - 0.4;
  x2086 = -0.14 * x2084 - 0.55155399201712996 * x298 + 0.75;
  x2087 = exp(
    M_LN10 * (0.43429448190325198 * x298 /
              (((x2084) * (x2084)) / ((x2086) * (x2086)) + 1.0)));
  x2089 = 3200000000000000.0 * x2087 / (x2083 + 1.0);
  x2090 = x2089 * x788 * exp(-618.95649893980499 * invT - 3.14 * logT);
  x2094 = sc[3] * exp(-754.82499870708 * invT);
  x2095 = -1670.679330471668 * invT - 3.86 * logT;
  x138 = 230263157894.737 * x25 *
         exp(140.90066642532199 * invT - 0.27 * logT + x138);
  x2096 = -0.29097730287517898 * x143 + 0.43429448190325198 * log(x138) - 0.4;
  x2098 = -0.55155399201712996 * x143 - 0.14 * x2096 + 0.75;
  x2102 = exp(
    M_LN10 * (0.43429448190325198 * x143 /
              (((x2096) * (x2096)) / ((x2098) * (x2098)) + 1.0)));
  x2104 = 1.4e+18 * x2102 * x788 * exp(x2095) / (x138 + 1.0);
  x2105 = 30000000.0 * sc[1] * x393;
  x2107 = -717.08374877172594 * invT - 2.57 * logT;
  x396 = 1238532.11009174 * x25 *
         exp(-130.83633310922701 * invT - 0.48 * logT + x396);
  x2026 = -0.29097730287517898 * x401 + 0.43429448190325198 * log(x396) - 0.4;
  x2033 = -0.14 * x2026 - 0.55155399201712996 * x401 + 0.75;
  x2091 = exp(
    M_LN10 * (0.43429448190325198 * x401 /
              (((x2026) * (x2026)) / ((x2033) * (x2033)) + 1.0)));
  x2088 = 1350000000000.0 * x2091 * exp(x2107) / (x396 + 1.0);
  x2093 = x2088 * x788;
  x2124 = 16000000.0 * sc[5] * x571;
  x2125 = 20000000.0 * sc[14] * exp(-3019.29999482832 * invT);
  x2127 = 1.5e+18 * exp(-9368.8878839522695 * invT - 2.83 * logT);
  x2128 = sc[8] * x2127;
  x2130 = exp(286.83349950869001 * invT);
  x2133 = 12000000.0 * sc[8] * x2130;
  x2134 = 187000000000.0 * x25 * exp(-8554.6833186802305 * invT - logT);
  x2135 =
    20000000.0 *
    exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5] - 1006.43333160944 * invT);
  x2143 = sc[9] * x2135;
  x2144 = -3507.4201606589004 * invT - 7.62 * logT;
  x501 = 1.11111111111111e+24 * x25 *
         exp(915.85433176459003 * invT - 0.454 * logT + x501);
  x2145 = -0.29097730287517898 * x506 + 0.43429448190325198 * log(x501) - 0.4;
  x2146 = -0.14 * x2145 - 0.55155399201712996 * x506 + 0.75;
  x2148 = exp(
            M_LN10 * (0.43429448190325198 * x506 /
                      (((x2145) * (x2145)) / ((x2146) * (x2146)) + 1.0))) /
          (x501 + 1.0);
  x2155 = 1.2e+30 * refC * x2148 * x25 * exp(x2144 + x500);
  x2157 = -3364.0034109045528 * invT - 7.08 * logT;
  x521 = 3.8195777351247603e+17 * x25 *
         exp(795.08233197145705 * invT + 0.99 * logT + x521);
  x2082 = -0.29097730287517898 * x526 + 0.43429448190325198 * log(x521) - 0.4;
  x497 = -0.14 * x2082 - 0.55155399201712996 * x526 + 0.75;
  x1379 = exp(
    M_LN10 * (0.43429448190325198 * x526 /
              (((x2082) * (x2082)) / ((x497) * (x497)) + 1.0)));
  x2132 = 1.99e+29 * x1379 * x788 * exp(x2157) / (x521 + 1.0);
  x2136 = 3.7e+18 * exp(
                      -g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9] -
                      6292.7244058880196 * invT - 2.92 * logT);
  x2139 = sc[8] * x2136;
  x2140 = exp(
    g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7] - 5334.0966575300299 * invT +
    0.1 * logT);
  x2141 = 4990000.0 * sc[1] * x2140;
  x2142 = -2797.8846618742396 * invT - 4.8 * logT;
  x616 = 4074074074074.07 * x25 *
         exp(1308.3633310922701 * invT - 0.454 * logT + x616);
  x2147 = -0.29097730287517898 * x622 + 0.43429448190325198 * log(x616) - 0.4;
  x2180 = 1.7777777777777777 * ((x2147) * (x2147)) /
            ((-0.18666666666666668 * x2147 - 0.73540532268950665 * x622 + 1) *
             (-0.18666666666666668 * x2147 - 0.73540532268950665 * x622 + 1)) +
          1.0;
  x2181 = exp(M_LN10 * (0.43429448190325198 * x622 / x2180)) / (x616 + 1.0);
  x2182 = 2.2e+18 * refC * x2181 * x25 * exp(x2142 + x615);
  x2183 = -0.29097730287517898 * x180 +
          0.43429448190325198 * log(5.2e+19 * x176) - 0.4;
  x2190 = -0.55155399201712996 * x180 - 0.14 * x2183 + 0.75;
  x2191 = exp(
            M_LN10 * (0.43429448190325198 * x180 /
                      (((x2183) * (x2183)) / ((x2190) * (x2190)) + 1.0))) /
          (5.2e+19 * x176 + 1.0);
  x2192 = 5.2e+27 * sc[1] * x176 * x2191;
  x208 = 1.1515151515151501e+21 * x25 *
         exp(4277.3416593401198 * invT + 0.06 * logT + x208);
  x2193 = -0.29097730287517898 * x213 + 0.43429448190325198 * log(x208) - 0.4;
  x2194 = -0.55155399201712996 * x213 - 0.14 * x2193 + 0.75;
  x553 = exp(
           M_LN10 * (0.43429448190325198 * x213 /
                     (((x2193) * (x2193)) / ((x2194) * (x2194)) + 1.0))) /
         (x208 + 1.0);
  x2205 = -5988.2783230761797 * invT - 7.64 * logT;
  x2137 = 3.8e+29 * refC * x25 * x553 * exp(x207 + x2205);
  x604 = 3.7e+18 * exp(-6292.7244058880196 * invT - 2.92 * logT);
  x640 = sc[1] * x604;
  x2179 =
    4.7067669172932297e+19 * x458 * exp(-1881.67807844359 * invT - 6.66 * logT);
  x226 = -0.29097730287517898 * x465 + 0.43429448190325198 * log(x2179) - 0.4;
  x43 = -0.14 * x226 - 0.55155399201712996 * x465 + 0.75;
  x808 = exp(
           M_LN10 * (0.43429448190325198 * x465 /
                     (((x226) * (x226)) / ((x43) * (x43)) + 1.0))) /
         (x2179 + 1.0);
  x1090 = 6.26e+26 * x458 * x481 * x808;
  x519 = 1750000.0 * exp(
                       g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1] -
                       679.34249883637199 * invT);
  x891 = sc[11] * x519;
  x2185 = -956.11166502896697 * invT + 2.0 * logT;
  x2186 = 4.08 * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1] + x2185);
  x2187 = sc[10] * x2186;
  x2188 = 300000.0 * exp(-5.5353833238519199 * invT + 0.29 * logT);
  x2195 = sc[3] * x2188;
  x2257 = 33000000.0 * sc[2] * x382;
  x584 = 100000000.0 * sc[10] * x289;
  x2262 = 39000000.0 * exp(-1781.38699694871 * invT - x159 - x325);
  x2263 = sc[4] * x2262;
  x2271 = 15.1 * exp(
                   -g_RT[14] + g_RT_qss[6] - 1882.0303301096501 * invT +
                   1.91 * logT - x159);
  x2272 = sc[4] * x2271;
  x2273 = -110.707666477038 * invT + 1.83 * logT;
  x1312 = 0.384 * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1] + x2273);
  x1491 = sc[12] * x1312;
  x2285 = 19.2 * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3] + x2273);
  x1551 = sc[8] * x2285;
  x695 = 96000000.0 * sc[12] * x444;
  x549 =
    30830000.0 * exp(-g_RT[8] + g_RT_qss[4] - 14492.6399751759 * invT - x200);
  x1527 = sc[2] * x549;
  x101 = 89.8 * exp(-2863.3028284288498 * invT + 1.92 * logT - x159 - x491);
  x2196 = sc[4] * x101;
  x2189 = 300000.0 * exp(
                       -g_RT_qss[6] + g_RT_qss[8] - 5.5353833238519199 * invT +
                       0.29 * logT - x200);
  x2259 = sc[2] * x2189;
  x856 = 20000000.0 * sc[2] * x1960;
  x2269 =
    42200000.0 * exp(-g_RT[14] + g_RT_qss[6] - 30595.573280927001 * invT - x91);
  x2310 = sc[6] * x2269;
  x2311 = 10560000.0 * exp(
                         -g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3] -
                         754.82499870708 * invT);
  x2312 = sc[4] * x2311;
  x2315 = 1.34 * exp(192.93326966953001 * invT + 1.61 * logT);
  x2316 = sc[3] * x2315;
  x2317 = 7600000.0 * sc[3] * exp(-201.28666632188799 * invT);
  x2318 = 100000000.0 * exp(-20128.666632188801 * invT - x325 - x91);
  x2324 = sc[6] * x2318;
  x2325 = 10000000.0 * sc[11] * x238;
  x1493 = 46000000000.0 * exp(-508.24883246276698 * invT - 1.39 * logT);
  x1544 = sc[3] * x1493;
  x758 = 46000000000.0 * exp(
                           g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6] -
                           508.24883246276698 * invT - 1.39 * logT);
  x1529 = sc[12] * x758;
  x1398 = 4.28e-19 * exp(1776.3548302906599 * invT + 7.6 * logT);
  x1578 = sc[3] * x1398;
  x1591 =
    3.6 *
    exp(-g_RT[14] + g_RT_qss[6] - 1258.0416645118 * invT + 2.0 * logT - x135);
  x1042 = sc[5] * x1591;
  x250 = 11.3 * sc[4] * exp(-1509.64999741416 * invT + 2.0 * logT);
  x2268 = 3430.0 * exp(224.93784961470999 * invT + 1.18 * logT - x135 - x325);
  x354 = sc[5] * x2268;
  x2270 = 6600000.0 * sc[4] * x162 * x166;
  x882 =
    56.0 *
    exp(-g_RT[8] + g_RT_qss[1] - 2727.4343286615799 * invT + 1.6 * logT - x135);
  x2323 = sc[5] * x882;
  x2358 = 25010000.0 * sc[5] * x564;
  x2360 = 3.54 * exp(-437.79849925010598 * invT + 2.12 * logT - x135 - x491);
  x2361 = sc[5] * x2360;
  x2362 = 13400000.0 * sc[4] * x609;
  x2363 = 24000000.0 * sc[4] * x162 * x447;
  x2364 = 10000000.0 * sc[4] * x196;
  x2370 = exp(-1006.43333160944 * invT);
  x2371 = 10000000.0 * sc[4] * x2370;
  x962 = 12100.0 * sc[7] * exp(299.91713281961302 * invT);
  x341 = 1000000.0 * exp(-g_RT[6] + g_RT[7] - 4025.7333264377598 * invT - x325);
  x2322 = sc[7] * x341;
  x648 = 8700.0 * sc[7] * exp(-490.13303249379697 * invT);
  x412 = 0.227 * exp(
                   -g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6] -
                   4629.5933254034198 * invT + 2.0 * logT);
  x735 = sc[9] * x412;
  x325 = 0.00332 * exp(-2948.8496616156599 * invT + 2.81 * logT - x325 - x385);
  x748 = sc[9] * x325;
  x771 = -0.29097730287517898 * x362 +
         0.43429448190325198 * log(1.2222222222222201e+29 * x25 * exp(x356)) -
         0.4;
  x777 = -0.55155399201712996 * x362 - 0.14 * x771 + 0.75;
  x119 = exp(
           M_LN10 * (0.43429448190325198 * x362 /
                     (((x771) * (x771)) / ((x777) * (x777)) + 1.0))) /
         (1.2222222222222201e+29 * x25 * exp(x356) + 1.0);
  x154 = sc[8] * x119 * x359;
  x537 = -4161.6018262050302 * invT + 2.0 * logT;
  x694 = 4.92 * sc[9] * exp(x537);
  x698 = 32000000.0 * sc[9] * x2130;
  x51 = -0.29097730287517898 * x74 +
        0.43429448190325198 * log(1.708e+39 * x70) - 0.4;
  x701 = -0.14 * x51 - 0.55155399201712996 * x74 + 0.75;
  x707 = exp(
           M_LN10 * (0.43429448190325198 * x74 /
                     (((x51) * (x51)) / ((x701) * (x701)) + 1.0))) /
         (1.708e+39 * x70 + 1.0);
  x719 = 4.27e+46 * sc[8] * x70 * x707;
  x786 = 40000000.0 * sc[15] * exp(276.769166192596 * invT);
  x819 = 6.14 * exp(-5258.61415765932 * invT + 1.74 * logT - x385 - x491);
  x897 = sc[9] * x819;
  x903 = 9980000.0 * sc[1] * x2140;
  x491 = exp(g_RT[8] - g_RT_qss[2] + 276.769166192596 * invT - x491);
  x906 = 40000000.0 * sc[8] * x491;
  x635 = 7.8e+41 * exp(-23600.8616262414 * invT - 9.147 * logT);
  x998 =
    330000.0 * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9] - 3874.76832669634 * invT);
  x1002 = refC * x998;
  x1034 = 16000000.0 * sc[9] * x2130;
  x1111 = 2.46 * sc[9] * exp(x537);
  x264 = 50000000.0 * sc[9] * x19;
  x293 = 3400000.0 * exp(
                       g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3] -
                       347.21949940525701 * invT);
  x309 = sc[10] * x293;
  x863 = 30000000.0 * sc[10] * x96;
  x869 = sc[13] * exp(-3019.29999482832 * invT + 2.0 * logT);
  x248 =
    3320987654320990.0 * x25 * exp(2269.50716277929 * invT - 0.5 * logT + x248);
  x881 = -0.29097730287517898 * x253 + 0.43429448190325198 * log(x248) - 0.4;
  x1688 = -0.55155399201712996 * x253 - 0.14 * x881 + 0.75;
  x2313 = exp(
    M_LN10 * (0.43429448190325198 * x253 /
              (1.0 + ((x881) * (x881)) / ((x1688) * (x1688)))));
  x2319 = -3570.32224388449 * invT - 5.11 * logT;
  x2321 = 2.69e+21 * sc[10] * x2313 * x25 * exp(x2319) / (x248 + 1.0);
  x805 =
    10.0 *
    exp(-g_RT[13] + g_RT_qss[6] - 3019.29999482832 * invT + 2.0 * logT - x99);
  x46 = sc[10] * x805;
  x888 = sc[14] * exp(-4025.7333264377598 * invT + 2.0 * logT);
  x893 =
    10.0 *
    exp(-g_RT[14] + g_RT_qss[7] - 4025.7333264377598 * invT + 2.0 * logT - x99);
  x731 = sc[10] * x893;
  x687 = 3.0625e-6 * x5 * exp(528.37749909489867 * invT - 0.12 * logT) + 1.0;
  x146 = -25009.868290494604 * invT - 0.64 * logT;
  x703 = 2450000000.0 * x5 * exp(x146 + x7) / x687;
  x76 =
    exp(g_RT[0] + g_RT[16] - g_RT[17] - g_RT[1] - 4025.7333264377598 * invT);
  x714 = 0.17 * exp(
                  g_RT[0] + g_RT[19] - g_RT[1] - g_RT[20] -
                  1253.00949785375 * invT + 2.5 * logT);
  x422 =
    12.1 *
    exp(g_RT[0] - g_RT[1] - 2616.7266621845401 * invT + 2.0 * logT - x1166);
  x559 = 16600000.0 *
         exp(g_RT[0] - g_RT[1] + g_RT[3] - g_RT[6] - 412.63766595986999 * invT);
  x633 = 0.05 * exp(-3165.23282791169 * invT + 2.67 * logT);
  x1473 = x1473 / x1474;
  x1474 = 110.7 * exp(-840.37183189388202 * invT + 1.79 * logT);
  x109 = sc_qss[1] * x660 + sc_qss[2] * x603 + sc_qss[6] * x66;
  x723 = -x109 - x1136;
  x433 =
    x562 * (-sc_qss[0] * x433 - sc_qss[1] * x670 - sc_qss[2] * x600 + x1365);
  x562 = 30000000.0 * sc[0] * x588;
  x440 = x556 * (-sc_qss[2] * x594 / x551 - sc_qss[3] * x440 / x551 + x1364);
  x234 =
    x234 * (-sc_qss[0] * x322 - sc_qss[1] * x666 - sc_qss[3] * x439 + x1242);
  x322 = g_RT[0] - 2.0 * g_RT[1];
  x439 = sc[10] + sc[21] + sc[3] + x1 + x22;
  x551 = refC * exp(-logT + x322);
  x556 = 216.0 * sc[4] * exp(-1726.0331637101899 * invT + 1.51 * logT);
  x594 = (-sc_qss[0] * x1078 + x1471) / x675;
  x600 = sc[0] * x1474;
  x666 = 660.0 * exp(
                   g_RT[0] - g_RT[1] + g_RT[8] - g_RT[9] -
                   5454.8686573231598 * invT + 1.62 * logT);
  x593 = (-sc_qss[0] * x593 - sc_qss[1] * x673 + x1470) / x642;
  x642 =
    20000000.0 *
    exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8] - 2012.8666632188799 * invT);
  x670 = x2049 * x27 * x723;
  x673 = x2043 / ((x31 + 1.0) * (x31 + 1.0));
  x30 = x25 * x27 * x723 *
        exp(-145172.975918004 * invT - 18.18 * logT - 2 * x2040 + x30);
  x675 =
    x2043 * exp(-94921.759670744301 * invT - 8.87 * logT - x2040) / (x31 + 1.0);
  x1078 = ((x2041) * (x2041)) / ((x2042) * (x2042) * (x2042));
  x1242 = x2041 / ((x2042) * (x2042));
  x37 = x37 / ((((x2041) * (x2041)) / ((x2042) * (x2042)) + 1.0) *
               (((x2041) * (x2041)) / ((x2042) * (x2042)) + 1.0));
  x1364 = x37 * (0.56 * x1078 * x688 + 4.0 * x1242 * x688);
  x1365 =
    sc[14] * x25 * exp(-145172.975918004 * invT - 18.18 * logT - 2 * x2040);
  x1470 = -7.0e+44 * sc[14] * x1364 * x25 * x675 + 1.4e+45 * sc[14] * x675 +
          7.0e+44 * x1364 * x25 * x670 - 1.225e+77 * x1365 * x673 +
          1.225e+77 * x30 * x673 - 1.4e+45 * x670;
  x1471 = -42446.325760628104 * invT - 3.42 * logT;
  x403 =
    117906976744186.0 * x25 * exp(-2390.2791625723985 * invT - 4.92 * logT);
  x736 = log(
    exp(-10300.0 * invT) + 0.068 * exp(-0.0050761421319797002 * T) +
    0.932 * exp(-0.00064935064935064902 * T));
  x364 = -0.29097730287517898 * x736 + 0.43429448190325198 * log(x403) - 0.4;
  x755 = -0.14 * x364 - 0.55155399201712996 * x736 + 0.75;
  x774 = exp(
           M_LN10 * (0.43429448190325198 * x736 /
                     (((x364) * (x364)) / ((x755) * (x755)) + 1.0))) /
         (x403 + 1.0);
  x781 = 5070000000000000.0 * x774 * exp(x1471);
  x790 = x364 / ((x755) * (x755));
  x560 = ((x364) * (x364)) / ((x755) * (x755) * (x755));
  x859 = 0.56 * x560 * x688 + 4.0 * x688 * x790;
  x300 = x736 / ((((x364) * (x364)) / ((x755) * (x755)) + 1.0) *
                 (((x364) * (x364)) / ((x755) * (x755)) + 1.0));
  x877 = sc[0] * sc[10] * x25 * x300 * x781;
  x255 = exp(
           M_LN10 * (0.43429448190325198 * x736 /
                     (((x364) * (x364)) / ((x755) * (x755)) + 1.0))) /
         ((x403 + 1.0) * (x403 + 1.0));
  x508 =
    x1278 * x25 *
    exp(
      -g_RT[0] - g_RT[10] + g_RT[12] - 44836.604923200604 * invT - 8.34 * logT);
  x899 = x1278 * exp(-g_RT[0] - g_RT[10] + g_RT[12] + x1471);
  x528 = sc[0] * sc[10] * exp(x1471);
  x904 = 5070000000000000.0 * x25 * x300 * x774 * x899;
  x994 = sc[0] * sc[10] * x25 * exp(-44836.604923200604 * invT - 8.34 * logT);
  x625 = -1.19557674418605e+30 * x255 * x508 +
         1.19557674418605e+30 * x255 * x994 - 1.014e+16 * x528 * x774 +
         1.014e+16 * x774 * x899 + x859 * x877 - x859 * x904;
  x620 = -73400000.0 * sc[10] * x1269 - 15000000.0 * sc[10] * x1457 -
         sc[10] * x25 * x781 + 73400000.0 * sc[1] * x830 -
         73400000.0 * sc[1] * x951 - 15000000.0 * sc[2] * x1016 +
         15000000.0 * sc[2] * x988 + x625;
  x1029 = exp(-4025.7333264377598 * invT);
  x839 = 0.17 * sc[20] * exp(-1253.00949785375 * invT + 2.5 * logT);
  x1040 = sc_qss[3] * x435 + sc_qss[6] * x230;
  x517 = -x1040 - x1241;
  x34 = 20000000.0 * x1960 * x517;
  x50 = 12.1 * exp(-2616.7266621845401 * invT + 2.0 * logT);
  x1141 = 16600000.0 * exp(-412.63766595986999 * invT);
  x1169 =
    0.05 *
    exp(-g_RT[0] + g_RT[1] - 3165.23282791169 * invT + 2.67 * logT - x159);
  x1176 = 23000.0 * exp(-1648.03458051046 * invT + 1.05 * logT);
  x1275 = exp(-logT);
  x14 = 660.0 * sc[9] * exp(-5454.8686573231598 * invT + 1.62 * logT);
  x802 = 50.7 * exp(-6516.6558221711202 * invT + 1.93 * logT);
  x811 = exp(-2.0 * logT);
  x1281 = 0.5 * exp(
                  -g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1] -
                  3638.25649376812 * invT + 2.0 * logT);
  x922 =
    216.0 *
    exp(-g_RT[0] + g_RT[1] - 1726.0331637101899 * invT + 1.51 * logT - x135);
  x1462 = 115.0 * exp(-3789.2214935095399 * invT + 1.9 * logT);
  x581 = sc_qss[7] * x490;
  x533 = 0.28 * x560 * x688 + 2.0 * x688 * x790;
  x1485 = -sc[0] * sc[10] * x781 - 5.9778837209302301e+29 * x255 * x508 +
          5.9778837209302301e+29 * x255 * x994 + x533 * x877 - x533 * x904 +
          5070000000000000.0 * x774 * x899;
  x1006 = 7.0e+44 * x25 * x37 * x670;
  x1008 = 7.0e+44 * sc[14] * x25 * x37 * x675;
  x956 = -1000000.0 * sc[0] * x551 + 7.0e+44 * sc[14] * x675 +
         1000000.0 * ((sc[1]) * (sc[1])) * x1275 +
         x1006 * (0.28 * x1078 * x688 + 2.0 * x1242 * x688) -
         x1008 * (0.28 * x1078 * x688 + 2.0 * x1242 * x688) -
         6.125e+76 * x1365 * x673 + 6.125e+76 * x30 * x673 - 7.0e+44 * x670;
  x513 = sc_qss[2] * x639;
  x187 = 73400000.0 * sc[1] * x1065 - 73400000.0 * sc[1] * x971 -
         15000000.0 * sc[2] * x1073 + 15000000.0 * sc[2] * x985 +
         73400000.0 * x433;
  x1507 =
    -15000000.0 * sc[2] * x315 + 15000000.0 * sc[2] * x318 + 15000000.0 * x593;
  x221 = 216.0 * sc[0] * exp(-1726.0331637101899 * invT + 1.51 * logT);
  x1513 = 1.68 * x560 * x688 + 12.0 * x688 * x790;
  x408 = -73400000.0 * sc[1] * x1760 + 73400000.0 * sc[1] * x1768 -
         15000000.0 * sc[2] * x1660 + 15000000.0 * sc[2] * x1662 +
         x1513 * x877 - x1513 * x904 - 3.5867302325581401e+30 * x255 * x508 +
         3.5867302325581401e+30 * x255 * x994 - 3.042e+16 * x528 * x774 +
         3.042e+16 * x774 * x899;
  x369 = -x2038 * x351 - x2051 * x351 + x956;
  x1075 = 20000000.0 * sc[1] * x1903 * x1960;
  x106 = -73400000.0 * sc[1] * x1780 + 73400000.0 * sc[1] * x1781 -
         15000000.0 * sc[2] * x1673 + 15000000.0 * sc[2] * x1674 + x1485;
  x1127 = 660.0 * sc[1] * exp(-5454.8686573231598 * invT + 1.62 * logT);
  x151 = -73400000.0 * sc[1] * x1791 + 73400000.0 * sc[1] * x1797 -
         15000000.0 * sc[2] * x1683 + 15000000.0 * sc[2] * x1689 + x625;
  x918 = x300 * (0.42 * x560 * x688 + 3.0 * x688 * x790);
  x467 = sc[0] * sc[10] * x25 * x781 * x918 - 73400000.0 * sc[0] * x1269 -
         15000000.0 * sc[0] * x1457 - sc[0] * x25 * x781 -
         73400000.0 * sc[1] * x1801 + 73400000.0 * sc[1] * x1804 -
         15000000.0 * sc[2] * x1693 + 15000000.0 * sc[2] * x1694 -
         5070000000000000.0 * x25 * x774 * x899 * x918 -
         8.9668255813953501e+29 * x255 * x508 +
         8.9668255813953501e+29 * x255 * x994 -
         7605000000000000.0 * x528 * x774 + 7605000000000000.0 * x774 * x899;
  x1336 = 73400000.0 * sc[1] * x1696 - 73400000.0 * sc[1] * x1806 -
          15000000.0 * sc[2] * x1695 + 15000000.0 * sc[2] * x1697 + x625;
  x1343 = -73400000.0 * sc[1] * x1755 + 73400000.0 * sc[1] * x1761 -
          15000000.0 * sc[2] * x1701 + 15000000.0 * sc[2] * x1702 +
          5070000000000000.0 * x774 * x776 *
            exp(-g_RT[0] - g_RT[10] + g_RT[12] + x1471);
  x472 = 0.84 * x560 * x688 + 6.0 * x688 * x790;
  x799 = -1.79336511627907e+30 * x255 * x508 +
         1.79336511627907e+30 * x255 * x994 + x472 * x877 - x472 * x904 -
         1.521e+16 * x528 * x774 + 1.521e+16 * x774 * x899;
  x114 = -73400000.0 * sc[1] * x1767 + 73400000.0 * sc[1] * x1833 -
         15000000.0 * sc[2] * x1704 + 15000000.0 * sc[2] * x1706 + x799;
  x946 = -3000000.0 * sc[0] * x551 + 2.1e+45 * sc[14] * x675 +
         3000000.0 * ((sc[1]) * (sc[1])) * x1275 + 20000000.0 * sc[1] * x1438 +
         20000000.0 * sc[1] * x173 * x1960 +
         x1006 * (0.84 * x1078 * x688 + 6.0 * x1242 * x688) -
         x1008 * (0.84 * x1078 * x688 + 6.0 * x1242 * x688) -
         1.8375e+77 * x1365 * x673 + 1.8375e+77 * x30 * x673 - 2.1e+45 * x670;
  x947 = -73400000.0 * sc[1] * x1835 + 73400000.0 * sc[1] * x1836 -
         15000000.0 * sc[2] * x1707 + 15000000.0 * sc[2] * x1709 + x799;
  x1046 = -73400000.0 * sc[1] * x1838 + 73400000.0 * sc[1] * x1839 -
          15000000.0 * sc[2] * x1711 + 15000000.0 * sc[2] * x1719 + x799;
  x915 = -90000000.0 * sc[1] * x1843 + x1843 * x2031 + x1890 * x1955;
  x933 = 70000000.0 * sc[0] * x1730 - 30000000.0 * sc[1] * x1730 +
         20000000.0 * sc[1] * x1893 + 1800000.0 * sc[1] * x1995 +
         x1846 * x2027 + x369 + x915;
  x1047 = -73400000.0 * sc[1] * x1846 + x1485;
  x913 = -2000000.0 * sc[1] * x1890;
  x939 = -15000000.0 * sc[2] * x1730;
  x942 = x1058 * x562 + x1058 * x600 - x1475 * x2024 + x1475 * x2036;
  x1048 = 0.17 * sc[1] * exp(-1253.00949785375 * invT + 2.5 * logT);
  x12 = -50000000.0 * sc[14] * x1016 + 50000000.0 * sc[14] * x988 -
        x2125 * x649 + x2125 * x651 + x2128 * x726 - x2128 * x826 +
        x2143 * x821;
  x630 = 94600000.0 * sc[12] * exp(259.15658288943098 * invT);
  x961 = x517 * x776 * exp(-7699.2149868121596 * invT - 15.22 * logT + x207);
  x1571 = exp(
            M_LN10 * (0.43429448190325198 * x213 /
                      (((x2193) * (x2193)) / ((x2194) * (x2194)) + 1.0))) /
          ((x208 + 1.0) * (x208 + 1.0));
  x305 = refC * x517 * x553 * exp(x207 + x2205);
  x260 = ((x2193) * (x2193)) / ((x2194) * (x2194) * (x2194));
  x979 = x2193 / ((x2194) * (x2194));
  x213 = x213 / ((((x2193) * (x2193)) / ((x2194) * (x2194)) + 1.0) *
                 (((x2193) * (x2193)) / ((x2194) * (x2194)) + 1.0));
  x984 = sc[17] * x788 * exp(-7699.2149868121596 * invT - 15.22 * logT);
  x1588 = sc[17] * exp(x2205);
  x1590 = 3.8e+29 * sc[1] * x1588 * x213 * x25 * x553;
  x844 = -7.6e+29 * sc[1] * x1588 * x553 -
         8.7515151515151504e+50 * x1571 * x961 +
         8.7515151515151504e+50 * x1571 * x984 +
         x1590 * (0.56 * x260 * x688 + 4.0 * x688 * x979) -
         x213 * x2137 * x517 * (0.56 * x260 * x688 + 4.0 * x688 * x979) +
         7.6e+29 * x305;
  x1050 = 50000000.0 * sc[16] * x76 + 48000000.0 * sc[2] * x726 -
          48000000.0 * sc[2] * x826 + 20000000.0 * sc[4] * x821 +
          x1235 * x2137 - x1476 * x630 + x630 * x973 + x844;
  x1059 = -40000000.0 * sc[8] * x649 + 40000000.0 * sc[8] * x651 -
          60000000.0 * sc[9] * x1476 + 60000000.0 * sc[9] * x973 -
          x1016 * x2133 + x2028 * x234 + x2031 * x726 - x2031 * x826 +
          x2133 * x988 + x2155 * x909 - x2155 * x935;
  x1060 = 5710000.0 * sc[5] * exp(379.92858268256299 * invT);
  x182 = -x1439 - x513;
  x1084 = refC * x182 * x2181 * exp(x2142 + x615);
  x1086 = exp(M_LN10 * (0.43429448190325198 * x622 / x2180)) /
          ((x616 + 1.0) * (x616 + 1.0));
  x231 = -4287.4059926562095 * invT - 10.054 * logT;
  x1205 = x1086 * x1421 * x25 * exp(x231);
  x1629 = x182 * x776 * exp(x231 + x615);
  x1652 = 2.3703703703703702 * ((x2147) * (x2147)) /
          ((-0.18666666666666668 * x2147 - 0.73540532269 * x622 + 1) *
           (-0.18666666666666668 * x2147 - 0.73540532269 * x622 + 1) *
           (-0.18666666666666668 * x2147 - 0.73540532269 * x622 + 1));
  x1363 = 1.7777777777777777 * x2147 /
          ((-0.18666666666666668 * x2147 - 0.73540532268950665 * x622 + 1) *
           (-0.18666666666666668 * x2147 - 0.73540532268950665 * x622 + 1));
  x1495 = 2.2e+18 * x1084 * x25 * x622 / ((x2180) * (x2180));
  x1663 = 2.2e+18 * x2181 * x25 * exp(x2142);
  x1698 = sc[12] * sc[1] * x1663 * x622 / ((x2180) * (x2180));
  x923 = 4.4e+18 * x1084 - 1.79259259259259e+31 * x1086 * x1629 +
         1.79259259259259e+31 * x1205 - 4.4e+18 * x1421 * x2181 * exp(x2142) -
         x1495 * (4.0 * x1363 * x688 + 0.56 * x1652 * x688) +
         x1698 * (4.0 * x1363 * x688 + 0.56 * x1652 * x688);
  x824 = -30000000.0 * sc[4] * x1016 - 20000000.0 * sc[4] * x649 +
         20000000.0 * sc[4] * x651 + 30000000.0 * sc[4] * x988 - x1060 * x1476 +
         x1060 * x973 + x1884 * x2182 + x2025 * x433 + x2027 * x830 -
         x2027 * x951 + x923;
  x872 = exp(-g_RT[1] - 2.0 * logT - x135);
  x1121 = refC * sc[5] * x872;
  x1045 = sc[1] * sc[4] * x811;
  x216 = sc[2] * x633 + 30000000.0 * sc[2] * x830 - 30000000.0 * sc[2] * x951 -
         28000000.0 * sc[3] * x1016 + 28000000.0 * sc[3] * x988 -
         16060000000.0 * x1045 + 16060000000.0 * x1121;
  x813 = x433 * exp(-8554.6833186802305 * invT - logT);
  x1971 =
    exp(g_RT[10] + g_RT[1] - g_RT_qss[3] - 8554.6833186802305 * invT - logT);
  x40 = sc[1] * x1219 * x1971;
  x1054 = -57000000.0 * sc[2] * x1476 + 57000000.0 * sc[2] * x973 +
          x2134 * x830 - x2134 * x951 - 374000000000.0 * x40 +
          374000000000.0 * x813;
  x2355 = 195039370078.74 * x25 * exp(-1035.1166815603121 * invT - 4.13 * logT);
  x1051 = log(
    exp(-6964.0 * invT) + 0.217 * exp(-0.0135135135135135 * T) +
    0.783 * exp(-0.00034002040122407302 * T));
  x1082 = -0.29097730287517898 * x1051 + 0.43429448190325198 * log(x2355) - 0.4;
  x1208 = -0.55155399201712996 * x1051 - 0.14 * x1082 + 0.75;
  x1217 = exp(
            M_LN10 * (0.43429448190325198 * x1051 /
                      (((x1082) * (x1082)) / ((x1208) * (x1208)) + 1.0))) /
          (x2355 + 1.0);
  x1634 = -1227.8486645635121 * invT - 4.76 * logT;
  x2356 = exp(-g_RT[1] + x1634 - x385);
  x2357 = sc[1] * sc[8] * exp(x1634);
  x1408 = sc[1] * sc[8] * exp(-2262.965346123824 * invT - 8.89 * logT);
  x796 = exp(
           M_LN10 * (0.43429448190325198 * x1051 /
                     (((x1082) * (x1082)) / ((x1208) * (x1208)) + 1.0))) *
         x25 / ((x2355 + 1.0) * (x2355 + 1.0));
  x2365 = x1082 / ((x1208) * (x1208));
  x1101 = ((x1082) * (x1082)) / ((x1208) * (x1208) * (x1208));
  x191 = 0.56 * x1101 * x688 + 4.0 * x2365 * x688;
  x373 = 2.477e+21 * x1217 * x2357;
  x423 = x1051 * x25 /
         ((((x1082) * (x1082)) / ((x1208) * (x1208)) + 1.0) *
          (((x1082) * (x1082)) / ((x1208) * (x1208)) + 1.0));
  x1522 = refC * sc[9] * x1217 * x2356;
  x425 = 2.477e+21 * x1522 * x423;
  x1642 = refC * sc[9] *
          exp(-g_RT[1] - 2262.965346123824 * invT - 8.89 * logT - x385);
  x761 = 4.954e+21 * refC * sc[9] * x1217 * x2356 - 4.954e+21 * x1217 * x2357 +
         9.6622503937007901e+32 * x1408 * x796 -
         9.6622503937007901e+32 * x1642 * x796 + x191 * x373 * x423 -
         x191 * x425;
  x729 = -70000000.0 * sc[0] * x1016 + 70000000.0 * sc[0] * x988 -
         x2036 * x649 + x2036 * x651 + 70000000.0 * x593 +
         0.5 * x594 * exp(-3638.25649376812 * invT + 2.0 * logT) + x761;
  x431 = x1379 / ((x521 + 1.0) * (x521 + 1.0));
  x829 = x1341 * x25 * exp(-5932.9244898376455 * invT - 13.17 * logT + x1342);
  x966 = x440 * x788 * exp(-5932.9244898376455 * invT - 13.17 * logT);
  x968 = x1379 * x440 * exp(x2157) / (x521 + 1.0);
  x970 = ((x2082) * (x2082)) / ((x497) * (x497) * (x497));
  x989 = x2082 / ((x497) * (x497));
  x526 = x526 / ((((x2082) * (x2082)) / ((x497) * (x497)) + 1.0) *
                 (((x2082) * (x2082)) / ((x497) * (x497)) + 1.0));
  x1342 = x1379 * exp(x1342 + x2157) / (x521 + 1.0);
  x1018 = 1.99e+29 * x1341 * x1342 * x25 * x526;
  x1062 = 3.6982248520710056e-40 *
          exp(
            M_LN10 * (0.43429448190325198 * x180 /
                      (((x2183) * (x2183)) / ((x2190) * (x2190)) + 1.0))) /
          ((x176 + 1.923076923076923e-20) * (x176 + 1.923076923076923e-20));
  x1055 = x1062 * x517 * x789;
  x1064 = ((x2183) * (x2183)) / ((x2190) * (x2190) * (x2190));
  x1067 = 0.56 * x1064 * x688 + 4.0 * x2183 * x688 / ((x2190) * (x2190));
  x180 = x180 / ((((x2183) * (x2183)) / ((x2190) * (x2190)) + 1.0) *
                 (((x2183) * (x2183)) / ((x2190) * (x2190)) + 1.0));
  x1087 = 5.2e+27 * sc[1] * x176 * x2191 * x517;
  x172 = x2087 / ((x2083 + 1.0) * (x2083 + 1.0));
  x1155 = sc[8] * x776 * exp(-1237.91299787961 * invT - 5.48 * logT + x1385);
  x605 = ((x2084) * (x2084)) * x688 / ((x2086) * (x2086) * (x2086));
  x298 = x298 / ((((x2084) * (x2084)) / ((x2086) * (x2086)) + 1.0) *
                 (((x2084) * (x2084)) / ((x2086) * (x2086)) + 1.0));
  x316 = x298 * (4.0 * x2084 * x688 / ((x2086) * (x2086)) + 0.56 * x605);
  x85 = x594 * exp(-618.95649893980499 * invT - 3.14 * logT);
  x1414 = refC * sc[18] * x1228 * x2191;
  x554 = 5.2e+27 * x1414 * x25;
  x420 = 0.56 * ((x2096) * (x2096)) * x688 / ((x2098) * (x2098) * (x2098)) +
         4.0 * x2096 * x688 / ((x2098) * (x2098));
  x143 = x143 / ((((x2096) * (x2096)) / ((x2098) * (x2098)) + 1.0) *
                 (((x2096) * (x2096)) / ((x2098) * (x2098)) + 1.0));
  x426 = x2102 * exp(x1140 + x2095) / (x138 + 1.0);
  x911 = 1.4e+18 * x1137 * x143 * x25 * x426;
  x1635 = x2102 * x234 * exp(x2095) / (x138 + 1.0);
  x955 = 1.4e+18 * x143 * x1635 * x788;
  x644 = x2091 * exp(x1279 + x2107) / (x396 + 1.0);
  x958 = x1278 * x644;
  x960 = x2091 / ((x396 + 1.0) * (x396 + 1.0));
  x1279 = x1278 * x25 * exp(-1565.003830652674 * invT - 5.62 * logT + x1279);
  x601 = ((x2026) * (x2026)) / ((x2033) * (x2033) * (x2033));
  x271 = x2026 / ((x2033) * (x2033));
  x401 = x401 / ((((x2026) * (x2026)) / ((x2033) * (x2033)) + 1.0) *
                 (((x2026) * (x2026)) / ((x2033) * (x2033)) + 1.0));
  x579 = x2088 * x401 * x433 * x788;
  x674 = x433 * x788 * exp(-1565.003830652674 * invT - 5.62 * logT);
  x885 = 1.99e+29 * x526 * x788 * x968;
  x1385 = exp(-618.95649893980499 * invT - 3.14 * logT + x1385);
  x585 = refC * sc[8] * x1385 * x2087 / (x2083 + 1.0);
  x313 = 1350000000000.0 * x25 * x401 * x958;
  x641 = x2102 / ((x138 + 1.0) * (x138 + 1.0));
  x1140 = x1137 * x25 * exp(-3200.4579945180158 * invT - 7.99 * logT + x1140);
  x1024 = x2191 * x517 * x772;
  x1737 = x234 * x788 * exp(-3200.4579945180158 * invT - 7.99 * logT);
  x952 = sc[1] * x2087 * x85 / (x2083 + 1.0);
  x1850 = sc[1] * x2091 * x433 * exp(x2107) / (x396 + 1.0);
  x1883 = x594 * x788 * exp(-1237.91299787961 * invT - 5.48 * logT);
  x827 = log(exp(-6859.5 * invT) + exp(-0.00091190953857377404 * T));
  x728 = x25 * exp(-3003.0964181894101 * invT - 12.0 * logT);
  x1043 = -0.29097730287517898 * x827 +
          0.43429448190325198 * log(6.65e+39 * x728) - 0.4;
  x936 = -0.14 * x1043 - 0.55155399201712996 * x827 + 0.75;
  x1948 = exp(
            M_LN10 * (0.43429448190325198 * x827 /
                      (((x1043) * (x1043)) / ((x936) * (x936)) + 1.0))) /
          (6.65e+39 * x728 + 1.0);
  x1949 = exp(
    -g_RT[19] - g_RT[1] + g_RT[20] - 3003.0964181894101 * invT - 12.0 * logT);
  x1973 = refC * sc[20] * x1949;
  x1978 = sc[19] * sc[1] * exp(-3003.0964181894101 * invT - 12.0 * logT);
  x2018 = 2.2612923285657754e-80 *
          exp(
            M_LN10 * (0.43429448190325198 * x827 /
                      (((x1043) * (x1043)) / ((x936) * (x936)) + 1.0))) *
          x25 /
          ((x728 + 1.5037593984962406e-40) * (x728 + 1.5037593984962406e-40));
  x1622 = sc[19] * sc[1] * exp(-6006.1928363788102 * invT - 24.0 * logT);
  x1722 = ((x1043) * (x1043)) / ((x936) * (x936) * (x936));
  x1970 = x1043 / ((x936) * (x936));
  x185 = x827 / ((((x1043) * (x1043)) / ((x936) * (x936)) + 1.0) *
                 (((x1043) * (x1043)) / ((x936) * (x936)) + 1.0));
  x455 = 1.33e+48 * x1948 * x1973 * x25;
  x2040 =
    refC * sc[20] *
    exp(
      -g_RT[19] - g_RT[1] + g_RT[20] - 6006.1928363788102 * invT - 24.0 * logT);
  x31 = 1.33e+48 * sc[19] * sc[1] * x1948 * x728;
  x2041 = 1.7689e+88 * x1622 * x2018 +
          x185 * x31 * (0.56 * x1722 * x688 + 4.0 * x1970 * x688) -
          x185 * x455 * (0.56 * x1722 * x688 + 4.0 * x1970 * x688) +
          2.66e+48 * x1948 * x1973 - 2.66e+48 * x1948 * x1978 -
          1.7689e+88 * x2018 * x2040;
  x2042 = refC * exp(-g_RT[1] - logT - x159);
  x2043 = sc[4] * x2042;
  x2083 = sc[1] * sc[2] * x1275;
  x2087 = -2.8e+18 * sc[1] * x1635 - 3.98e+29 * sc[1] * x968 -
          sc[8] * x1385 * x2089 * x316 * x776 -
          x1018 * (0.56 * x688 * x970 + 4.0 * x688 * x989) - 1.04e+28 * x1024 +
          5.408e+47 * x1055 - 5.408e+47 * x1062 * x1511 + x1067 * x1087 * x180 -
          x1067 * x180 * x554 + 2.8e+18 * x1137 * x426 -
          6.4473684210526297e+29 * x1140 * x641 - 8.192e+20 * x1155 * x172 -
          3.3440366972477102e+18 * x1279 * x960 + 3.98e+29 * x1341 * x1342 +
          1.04e+28 * x1414 + 8.192e+20 * x172 * x1883 +
          6.4473684210526297e+29 * x1737 * x641 - 2700000000000.0 * x1850 +
          x2041 + 1000000.0 * x2043 - 1000000.0 * x2083 +
          x2089 * x316 * x788 * x85 -
          x313 * (4.0 * x271 * x688 + 0.56 * x601 * x688) - x420 * x911 +
          x420 * x955 - 1.5201919385796501e+47 * x431 * x829 +
          1.5201919385796501e+47 * x431 * x966 +
          x579 * (4.0 * x271 * x688 + 0.56 * x601 * x688) +
          6400000000000000.0 * x585 + 3.3440366972477102e+18 * x674 * x960 +
          x885 * (0.56 * x688 * x970 + 4.0 * x688 * x989) -
          6400000000000000.0 * x952 + 2700000000000.0 * x958;
  x481 = x481 * x808 * (-x1319 - x581);
  x2095 = exp(
            M_LN10 * (0.43429448190325198 * x465 /
                      (((x226) * (x226)) / ((x43) * (x43)) + 1.0))) *
          x458 / ((x2179 + 1.0) * (x2179 + 1.0));
  x138 = refC * (-x1319 - x581) *
         exp(-5404.19473907663 * invT - 13.32 * logT + x479);
  x2102 = sc[1] * sc[20] * exp(-5404.19473907663 * invT - 13.32 * logT);
  x2107 =
    0.43429448190325198 * ((x226) * (x226)) / (((x43) * (x43) * (x43)) * x458);
  x396 = 0.43429448190325198 * x226 / (((x43) * (x43)) * x458);
  x465 = x465 / ((((x226) * (x226)) / ((x43) * (x43)) + 1.0) *
                 (((x226) * (x226)) / ((x43) * (x43)) + 1.0));
  x2026 = sc[1] * sc[20] * x808;
  x2033 = -5.8928721804511299e+46 * x138 * x2095 +
          6.26e+26 * x2026 * x458 * x461 * x465 * (0.56 * x2107 + 4.0 * x396) -
          1.252e+27 * x2026 * x461 + 5.8928721804511299e+46 * x2095 * x2102 -
          6.26e+26 * x458 * x465 * x481 * (0.56 * x2107 + 4.0 * x396) +
          1.252e+27 * x481;
  x2091 = x2035 / ((x2044) * (x2044));
  x2157 = ((x2035) * (x2035)) / ((x2044) * (x2044) * (x2044));
  x521 = x107 / ((((x2035) * (x2035)) / ((x2044) * (x2044)) + 1.0) *
                 (((x2035) * (x2035)) / ((x2044) * (x2044)) + 1.0));
  x2082 = x1172 * x2075 * exp(g_RT[1] - x1144 + x2029);
  x497 = 2.565e+21 * sc[13] * x2082 * x25 * x521;
  x107 = exp(
           M_LN10 * (0.43429448190325198 * x107 /
                     (((x2035) * (x2035)) / ((x2044) * (x2044)) + 1.0))) *
         x25 / ((x2032 + 1.0) * (x2032 + 1.0));
  x2032 = -17385.743294553802 * invT - 8.42 * logT;
  x2035 = x2075 * x234 * exp(x2029);
  x2044 = sc[13] * x1172 * exp(g_RT[1] - x1144 + x2032);
  x1379 = -5.13e+21 * sc[13] * x2082 + 3.4089248704663201e+34 * x107 * x2044 -
          3.4089248704663201e+34 * x107 * x234 * exp(x2032) -
          2.565e+21 * x2035 * x25 * x521 *
            (4.0 * x2091 * x688 + 0.56 * x2157 * x688) +
          5.13e+21 * x2035 + x497 * (4.0 * x2091 * x688 + 0.56 * x2157 * x688);
  x616 = -g_RT[1] - g_RT[3] + g_RT[6];
  x2147 = refC * sc[6] * exp(-0.86 * logT + x616);
  x208 = sc[1] * sc[3] * exp(-0.86 * logT);
  x2193 = -2800000.0 * x208 + 2800000.0 * x2147;
  x2194 = refC * x2148 * x440 * exp(x2144 + x500);
  x2179 = x2145 / ((x2146) * (x2146));
  x226 = ((x2145) * (x2145)) / ((x2146) * (x2146) * (x2146));
  x43 = x506 / ((((x2145) * (x2145)) / ((x2146) * (x2146)) + 1.0) *
                (((x2145) * (x2145)) / ((x2146) * (x2146)) + 1.0));
  x506 = exp(
           M_LN10 * (0.43429448190325198 * x506 /
                     (((x2145) * (x2145)) / ((x2146) * (x2146)) + 1.0))) /
         ((x501 + 1.0) * (x501 + 1.0));
  x501 = sc[14] * sc[1] * x25 * exp(-6098.9859895531999 * invT - 15.694 * logT);
  x2145 = x2148 * exp(x2144);
  x2146 = x440 * x776 * exp(-6098.9859895531999 * invT - 15.694 * logT + x500);
  x37 =
    1.2e+30 * x1329 * x2145 * x25 * x43 *
      (4.0 * x2179 * x688 + 0.56 * x226 * x688) -
    2.4e+30 * x1329 * x2145 - 2.6666666666666702e+54 * x2146 * x506 -
    1.2e+30 * x2194 * x25 * x43 * (4.0 * x2179 * x688 + 0.56 * x226 * x688) +
    2.4e+30 * x2194 + 2.6666666666666702e+54 * x501 * x506;
  x403 = refCinv * exp(
                     g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1] -
                     754.82499870708 * invT);
  x736 = exp(2.0 * g_RT[10] - g_RT[16] + g_RT[1] - g_RT[2]);
  x364 = refCinv * ((sc[10]) * (sc[10]));
  x755 = 10000000.0 * exp(-1811.57999689699 * invT);
  x790 = 16.32 * exp(-g_RT[13] + g_RT[16] + g_RT[1] - g_RT[2] + x2185);
  x560 = 47.6 * exp(
                  -g_RT[10] + g_RT[11] + g_RT[1] - g_RT[4] -
                  35.225166606330397 * invT + 1.228 * logT);
  x300 = -30000000.0 * sc[11] * x1252 - sc[11] * x560 +
         30000000.0 * sc[2] * x1065 - 30000000.0 * sc[2] * x971;
  x625 =
    exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1] - 3019.29999482832 * invT);
  x799 = 1.5e+18 * exp(
                     g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6] -
                     9368.8878839522695 * invT - 2.83 * logT);
  x2355 = -50000000.0 * sc[14] * x1073 + 50000000.0 * sc[14] * x985 -
          50000000.0 * sc[19] * x1452 - 1.33e+48 * sc[19] * x1948 * x728 -
          20000000.0 * sc[19] * x2370 - 20000000.0 * sc[19] * x625 -
          sc[19] * x799 + x1061 * x2128 + x1623 * x2143 - x2125 * x857 +
          x2125 * x964 - x2128 * x950;
  x1051 = 1.6e+16 * exp(-5625.96232369677 * invT - 2.39 * logT);
  x1082 = -sc[20] * x1051 - 6.26e+26 * sc[20] * x458 * x461 * x808 +
          x1090 * x476 - x839;
  x1208 = 2.18e-10 * exp(
                       -g_RT[13] + g_RT[17] + g_RT[1] - g_RT[4] +
                       503.21666580471998 * invT + 4.5 * logT);
  x827 = 1500.0 * exp(-1353.6528310147 * invT + 1.43 * logT);
  x1043 = 94600000.0 * exp(
                         -g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0] +
                         259.15658288943098 * invT);
  x936 = 120.0 * exp(
                   g_RT[17] + g_RT[1] - g_RT[20] - g_RT[2] + g_RT[8] -
                   164.55184971814299 * invT + 1.65 * logT);
  const amrex::Real x5454 =
    -50000000.0 * sc[17] * x1029 - sc[17] * x1043 -
    20000000.0 * sc[17] * x1123 - 48000000.0 * sc[17] * x1163 - sc[17] * x1208 -
    sc[17] * x1358 * x936 - sc[17] * x827 + 48000000.0 * sc[2] * x1061 -
    48000000.0 * sc[2] * x950 + 20000000.0 * sc[4] * x1623 -
    3.8e+29 * x1588 * x25 * x553 + x1636 * x630 - x1708 * x630 + x211 * x2137;
  x2029 =
    -2.565e+21 * refCinv * sc[13] * x2075 * x25 * exp(g_RT[1] - x1144 + x2029) -
    40000000.0 * sc[13] * x1117 + x1061 * x2077 - x2077 * x950;
  x2075 = 3970000.0 * exp(-337.65838275496702 * invT);
  const amrex::Real x5462 =
    -sc[6] * x1141 - sc[6] * x2075 -
    70800000.0 * sc[6] * exp(-150.96499974141599 * invT);
  const amrex::Real x5464 = 2800000.0 * sc[0] + 2100000.0 * sc[10] +
                            4200000.0 * sc[11] + 4200000.0 * sc[15] +
                            2800000.0 * sc[9] + 2800000.0 * x22;
  const amrex::Real x5468 = 83000000.0 * exp(-7252.86180424342 * invT);
  const amrex::Real x5471 = 26000000.0 * exp(-1.24 * logT);
  const amrex::Real x5478 = 16520000.0 * exp(-0.76 * logT);
  const amrex::Real x5481 =
    -sc[21] * sc[3] * x5471 -
    300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * logT) -
    sc[3] * sc[5] * x5478 - sc[3] * x5464 * exp(-0.86 * logT) - sc[3] * x5468;
  const amrex::Real x5488 =
    12000000.0 *
    exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2] + 286.83349950869001 * invT);
  const amrex::Real x5492 =
    -60000000.0 * sc[14] * x1104 - 40000000.0 * sc[14] * x1402 -
    1.2e+30 * sc[14] * x2145 * x25 - sc[14] * x5488 - sc[14] * x802 -
    40000000.0 * sc[8] * x857 + 40000000.0 * sc[8] * x964 +
    60000000.0 * sc[9] * x1636 - 60000000.0 * sc[9] * x1708 + x1061 * x2031 -
    x1073 * x2133 - x1504 * x2155 - x2031 * x950 + x2133 * x985 + x2155 * x523;
  const amrex::Real x5500 =
    84300000.0 * exp(g_RT[12] + g_RT[1] - g_RT[2] - g_RT[8]);
  const amrex::Real x5503 =
    5710000.0 *
    exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0] + 379.92858268256299 * invT);
  const amrex::Real x5506 =
    -sc[12] * x1176 - 20000000.0 * sc[12] * x1381 -
    30000000.0 * sc[12] * x1441 - sc[12] * x1663 - sc[12] * x5500 -
    sc[12] * x5503 - 30000000.0 * sc[4] * x1073 - 20000000.0 * sc[4] * x857 +
    20000000.0 * sc[4] * x964 + 30000000.0 * sc[4] * x985 + x1060 * x1636 -
    x1060 * x1708 + x1065 * x2027 + x1422 * x2182 - x2027 * x971;
  const amrex::Real x5511 = -57000000.0 * sc[10] * x1107 +
                            57000000.0 * sc[2] * x1636 -
                            57000000.0 * sc[2] * x1708 + x1065 * x2134 -
                            187000000000.0 * x1219 * x1971 * x25 - x2134 * x971;
  const amrex::Real x5512 = 16060000000.0 * sc[0] + 22000000000.0 * sc[11] +
                            80300000000.0 * sc[5] + 22000000000.0 * x439;
  const amrex::Real x5514 = -28000000.0 * sc[3] * x1073 +
                            28000000.0 * sc[3] * x985 - sc[4] * x1169 -
                            sc[4] * x5512 * x811;
  const amrex::Real x5521 =
    -70000000.0 * sc[0] * x1073 + 70000000.0 * sc[0] * x985 -
    2.477e+21 * sc[8] * x1217 * x25 * exp(x1634) - sc[8] * x1281 -
    70000000.0 * sc[8] * x1466 - x2036 * x857 + x2036 * x964;
  const amrex::Real x5524 = -22000000000.0 * x1045 + 22000000000.0 * x1121;
  amrex::Real x5527 = 0.28 * x1101 * x688 + 2.0 * x2365 * x688;
  const amrex::Real x5532 = 4.83112519685039e+32 * x1408 * x796 +
                            2.477e+21 * x1522 -
                            4.83112519685039e+32 * x1642 * x796 +
                            x373 * x423 * x5527 - x373 - x425 * x5527;
  const amrex::Real x5534 = x2193 + x5524 + x5532;
  const amrex::Real x5541 =
    8.8445e+87 * x1622 * x2018 +
    x185 * x31 * (0.28 * x1722 * x688 + 2.0 * x1970 * x688) -
    x185 * x455 * (0.28 * x1722 * x688 + 2.0 * x1970 * x688) +
    1.33e+48 * x1948 * x1973 - 1.33e+48 * x1948 * x1978 -
    8.8445e+87 * x2018 * x2040;
  const amrex::Real x5545 =
    -3.8e+29 * sc[1] * x1588 * x553 - 4.3757575757575802e+50 * x1571 * x961 +
    4.3757575757575802e+50 * x1571 * x984 +
    x1590 * (0.28 * x260 * x688 + 2.0 * x688 * x979) -
    x213 * x2137 * x517 * (0.28 * x260 * x688 + 2.0 * x688 * x979) +
    3.8e+29 * x305;
  amrex::Real x5550 =
    0.28 * x1064 * x688 + 2.0 * x2183 * x688 / ((x2190) * (x2190));
  x526 = x526 * (0.28 * x688 * x970 + 2.0 * x688 * x989);
  amrex::Real x5557 = 2.0 * x2084 * x688 / ((x2086) * (x2086)) + 0.28 * x605;
  const amrex::Real x5558 = x2089 * x298 * x788 * x85;
  amrex::Real x5562 =
    ((x2096) * (x2096)) * x688 / ((x2098) * (x2098) * (x2098));
  x143 = x143 * (2.0 * x2096 * x688 / ((x2098) * (x2098)) + 0.28 * x5562);
  x298 = sc[8] * x1385 * x2089 * x298 * x776;
  x401 = x401 * (2.0 * x271 * x688 + 0.28 * x601 * x688);
  const amrex::Real x5588 =
    refC * sc[8] * x1385 * x2089 + 2000000.0 * sc[0] * x551 -
    2000000.0 * ((sc[1]) * (sc[1])) * x1275 - 1.4e+18 * sc[1] * x1635 -
    sc[1] * x2088 * x433 - sc[1] * x2089 * x85 - 1.99e+29 * sc[1] * x968 -
    5.2e+27 * x1024 + 2.704e+47 * x1055 - 2.704e+47 * x1062 * x1511 +
    x1087 * x180 * x5550 - 1.4e+18 * x1137 * x143 * x25 * x426 +
    1.4e+18 * x1137 * x426 - 3.2236842105263198e+29 * x1140 * x641 -
    4.096e+20 * x1155 * x172 - 1.67201834862385e+18 * x1279 * x960 -
    1.99e+29 * x1341 * x1342 * x25 * x526 + 1.99e+29 * x1341 * x1342 +
    5.2e+27 * x1414 + 1.4e+18 * x143 * x1635 * x788 + 4.096e+20 * x172 * x1883 +
    3.2236842105263198e+29 * x1737 * x641 - x180 * x554 * x5550 +
    500000.0 * x2043 - 500000.0 * x2083 + x2088 * x401 * x433 * x788 -
    1350000000000.0 * x25 * x401 * x958 - x298 * x5557 -
    7.6009596928982695e+46 * x431 * x829 +
    7.6009596928982695e+46 * x431 * x966 + 1.99e+29 * x526 * x788 * x968 +
    x5557 * x5558 + 1.67201834862385e+18 * x674 * x960 + 1350000000000.0 * x958;
  const amrex::Real x5591 =
    -2.565e+21 * sc[13] * x2082 + 1.70446243523316e+34 * x107 * x2044 -
    1.70446243523316e+34 * x107 * x234 * exp(x2032) -
    2.565e+21 * x2035 * x25 * x521 *
      (2.0 * x2091 * x688 + 0.28 * x2157 * x688) +
    2.565e+21 * x2035 + x497 * (2.0 * x2091 * x688 + 0.28 * x2157 * x688);
  const amrex::Real x5597 =
    1.2e+30 * x1329 * x2145 * x25 * x43 *
      (2.0 * x2179 * x688 + 0.28 * x226 * x688) -
    1.2e+30 * x1329 * x2145 - 1.33333333333333e+54 * x2146 * x506 -
    1.2e+30 * x2194 * x25 * x43 * (2.0 * x2179 * x688 + 0.28 * x226 * x688) +
    1.2e+30 * x2194 + 1.33333333333333e+54 * x501 * x506;
  const amrex::Real x5601 =
    -2.9464360902255599e+46 * x138 * x2095 +
    6.26e+26 * x2026 * x458 * x461 * x465 * (0.28 * x2107 + 2.0 * x396) -
    6.26e+26 * x2026 * x461 + 2.9464360902255599e+46 * x2095 * x2102 -
    6.26e+26 * x458 * x465 * x481 * (0.28 * x2107 + 2.0 * x396) +
    6.26e+26 * x481;
  const amrex::Real x5603 =
    2.2e+18 * x1084 - 8.9629629629629601e+30 * x1086 * x1629 +
    8.9629629629629601e+30 * x1205 - 2.2e+18 * x1421 * x2181 * exp(x2142) -
    x1495 * (2.0 * x1363 * x688 + 0.28 * x1652 * x688) +
    x1698 * (2.0 * x1363 * x688 + 0.28 * x1652 * x688);
  const amrex::Real x5604 = -187000000000.0 * x40 + 187000000000.0 * x813;
  const amrex::Real x5606 =
    x5541 + x5545 + x5588 + x5591 + x5597 + x5601 + x5603 + x5604;
  const amrex::Real x5610 =
    3970000.0 *
    exp(-g_RT[1] + g_RT[2] + g_RT[5] - g_RT[6] - 337.65838275496702 * invT);
  const amrex::Real x5612 =
    83000000.0 *
    exp(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[4] - 7252.86180424342 * invT);
  const amrex::Real x5662 =
    -50000000.0 * sc[14] * x315 + 50000000.0 * sc[14] * x318 + x140 * x2128 -
    x1556 * x2128 + x1723 * x2143 - x2125 * x965 + x2125 * x972;
  const amrex::Real x5667 =
    120.0 * exp(-164.55184971814299 * invT + 1.65 * logT);
  const amrex::Real x5669 =
    48000000.0 * sc[2] * x140 - 48000000.0 * sc[2] * x1556 + 48000000.0 * x234;
  const amrex::Real x5671 = sc[20] * x5667 + 20000000.0 * sc[4] * x1723 +
                            x1772 * x630 - x1794 * x630 + x2137 * x224 + x5669;
  const amrex::Real x5679 =
    -40000000.0 * sc[8] * x965 + 40000000.0 * sc[8] * x972 +
    60000000.0 * sc[9] * x1772 - 60000000.0 * sc[9] * x1794 + x140 * x2031 -
    x1556 * x2031 - x1656 * x2155 + x1721 * x2155 - x2133 * x315 + x2133 * x318;
  const amrex::Real x5688 =
    -30000000.0 * sc[4] * x315 + 30000000.0 * sc[4] * x318 -
    20000000.0 * sc[4] * x965 + 20000000.0 * sc[4] * x972 + 84300000.0 * sc[8] +
    x1060 * x1772 - x1060 * x1794 + x1664 * x2027 + x1678 * x2182 -
    x2027 * x759;
  const amrex::Real x5692 =
    30000000.0 * sc[2] * x1664 - 30000000.0 * sc[2] * x759 + 30000000.0 * x433;
  const amrex::Real x5693 = 57000000.0 * sc[2] * x1772 -
                            57000000.0 * sc[2] * x1794 + 57000000.0 * x1473 +
                            x1664 * x2134 - x2134 * x759 + x5692;
  const amrex::Real x5741 =
    -50000000.0 * sc[14] * x1416 + 50000000.0 * sc[14] * x883 - x1627 * x2128 +
    x1630 * x2128 + x1757 * x2143 - x2125 * x974 + x2125 * x976;
  const amrex::Real x5746 =
    -48000000.0 * sc[2] * x1627 + 48000000.0 * sc[2] * x1630 +
    20000000.0 * sc[4] * x1757 + x1056 * x2137 + x1829 * x630 - x1853 * x630;
  const amrex::Real x5755 =
    -40000000.0 * sc[8] * x974 + 40000000.0 * sc[8] * x976 +
    60000000.0 * sc[9] * x1829 - 60000000.0 * sc[9] * x1853 - x1416 * x2133 -
    x1627 * x2031 + x1630 * x2031 - x1762 * x2155 + x1764 * x2155 +
    x2133 * x883;
  const amrex::Real x5758 = 300000000.0 * exp(-1.72 * logT + x616);
  const amrex::Real x5763 = refC * sc[6] * x5758 - sc[1] * sc[21] * x5471 -
                            600000000.0 * sc[1] * sc[3] * exp(-1.72 * logT) -
                            sc[1] * sc[5] * x5478 -
                            sc[1] * x5464 * exp(-0.86 * logT) - sc[1] * x5468;
  const amrex::Real x5770 =
    -30000000.0 * sc[4] * x1416 + 30000000.0 * sc[4] * x883 -
    20000000.0 * sc[4] * x974 + 20000000.0 * sc[4] * x976 + x1060 * x1829 -
    x1060 * x1853 - x1666 * x2027 + x1672 * x2027 + x1765 * x2182;
  const amrex::Real x5771 =
    -30000000.0 * sc[2] * x1666 + 30000000.0 * sc[2] * x1672;
  const amrex::Real x5778 =
    47.6 * sc[10] * exp(-35.225166606330397 * invT + 1.228 * logT);
  const amrex::Real x5779 =
    10000000.0 *
    exp(-g_RT[1] + g_RT[4] + g_RT[5] - g_RT[7] - 1811.57999689699 * invT);
  const amrex::Real x5784 =
    sc[4] * exp(-g_RT[1] + 2.0 * g_RT[4] - g_RT[6] - 150.96499974141599 * invT);
  const amrex::Real x5835 =
    -50000000.0 * sc[14] * x1645 + 50000000.0 * sc[14] * x1659 - x1677 * x2128 +
    x1699 * x2128 + x1831 * x2143 - x2125 * x977 + x2125 * x982;
  const amrex::Real x5840 =
    2.18e-10 * exp(503.21666580471998 * invT + 4.5 * logT);
  const amrex::Real x5845 =
    sc[13] * x5840 - 48000000.0 * sc[2] * x1677 + 48000000.0 * sc[2] * x1699 +
    20000000.0 * sc[4] * x1831 - 20000000.0 * x109 - 20000000.0 * x1136 +
    x1885 * x630 - x1899 * x630 + x2137 * x276;
  const amrex::Real x5853 =
    -40000000.0 * sc[8] * x977 + 40000000.0 * sc[8] * x982 +
    60000000.0 * sc[9] * x1885 - 60000000.0 * sc[9] * x1899 - x1645 * x2133 +
    x1659 * x2133 - x1677 * x2031 + x1699 * x2031 + x1776 * x2155 -
    x1798 * x2155;
  const amrex::Real x5860 =
    -30000000.0 * sc[4] * x1645 + 30000000.0 * sc[4] * x1659 -
    20000000.0 * sc[4] * x977 + 20000000.0 * sc[4] * x982 + x1060 * x1885 -
    x1060 * x1899 - x1700 * x2027 + x1879 * x2182 + x2027 * x398 +
    30000000.0 * x593;
  const amrex::Real x5864 =
    -30000000.0 * sc[2] * x1700 + 57000000.0 * sc[2] * x1885 -
    57000000.0 * sc[2] * x1899 + 30000000.0 * sc[2] * x398 - x1700 * x2134 +
    x2134 * x398;
  const amrex::Real x5867 = -sc[1] * x1169 - sc[1] * x5512 * x811 -
                            28000000.0 * sc[3] * x1645 +
                            28000000.0 * sc[3] * x1659;
  const amrex::Real x5876 = 1.68 * x688 * x970 + 12.0 * x688 * x989;
  const amrex::Real x5885 =
    x180 * (1.68 * x1064 * x688 + 12.0 * x2183 * x688 / ((x2190) * (x2190)));
  const amrex::Real x5900 =
    12.0 * x2096 * x688 / ((x2098) * (x2098)) + 1.68 * x5562;
  const amrex::Real x5923 =
    12.0 * x2084 * x688 / ((x2086) * (x2086)) + 1.68 * x605;
  const amrex::Real x5954 = x185 * (1.68 * x1722 * x688 + 12.0 * x1970 * x688);
  const amrex::Real x5963 =
    -50000000.0 * sc[14] * x1660 + 50000000.0 * sc[14] * x1662 + x1010 * x2125 +
    5.3067e+88 * x1622 * x2018 + x1668 * x2128 - x1741 * x2128 + x1844 * x2143 +
    7.98e+48 * x1948 * x1973 - 7.98e+48 * x1948 * x1978 -
    5.3067e+88 * x2018 * x2040 - x2125 * x987 + x31 * x5954 - x455 * x5954;
  const amrex::Real x5970 =
    -2.28e+30 * sc[1] * x1588 * x553 + 48000000.0 * sc[2] * x1668 -
    48000000.0 * sc[2] * x1741 + 20000000.0 * sc[4] * x1844 -
    2.6254545454545501e+51 * x1571 * x961 +
    2.6254545454545501e+51 * x1571 * x984 +
    x1590 * (1.68 * x260 * x688 + 12.0 * x688 * x979) + x1793 * x2137 +
    x1954 * x630 - x1980 * x630 -
    x213 * x2137 * x517 * (1.68 * x260 * x688 + 12.0 * x688 * x979) +
    2.28e+30 * x305;
  const amrex::Real x5973 =
    x1090 * x1946 - 1.7678616541353401e+47 * x138 * x2095 +
    6.26e+26 * x2026 * x458 * x461 * x465 * (1.68 * x2107 + 12.0 * x396) -
    3.756e+27 * x2026 * x461 + 1.7678616541353401e+47 * x2095 * x2102 -
    6.26e+26 * x458 * x465 * x481 * (1.68 * x2107 + 12.0 * x396) +
    3.756e+27 * x481;
  const amrex::Real x5977 = 2.565e+21 * sc[13] * x2082 * x25 * x521 *
                              (12.0 * x2091 * x688 + 1.68 * x2157 * x688) -
                            1.539e+22 * sc[13] * x2082 +
                            1.0226774611399e+35 * x107 * x2044 -
                            1.0226774611399e+35 * x107 * x234 * exp(x2032) +
                            x1668 * x2077 - x1741 * x2077 -
                            2.565e+21 * x2035 * x25 * x521 *
                              (12.0 * x2091 * x688 + 1.68 * x2157 * x688) +
                            1.539e+22 * x2035;
  const amrex::Real x5978 = 16520000.0 * exp(-0.76 * logT + x616);
  const amrex::Real x5992 =
    40000000.0 * sc[8] * x1010 - 40000000.0 * sc[8] * x987 +
    60000000.0 * sc[9] * x1954 - 60000000.0 * sc[9] * x1980 +
    1.2e+30 * x1329 * x2145 * x25 * x43 *
      (12.0 * x2179 * x688 + 1.68 * x226 * x688) -
    7.2e+30 * x1329 * x2145 - x1660 * x2133 + x1662 * x2133 + x1668 * x2031 -
    x1741 * x2031 - x1779 * x2155 + x1856 * x2155 - 8.0e+54 * x2146 * x506 -
    1.2e+30 * x2194 * x25 * x43 * (12.0 * x2179 * x688 + 1.68 * x226 * x688) +
    7.2e+30 * x2194 + 8.0e+54 * x501 * x506;
  x615 = 1.32e+19 * refC * x182 * x2181 * exp(x2142 + x615) +
         sc[12] * sc[1] * x1663 * x622 *
           (12.0 * x1363 * x688 + 1.68 * x1652 * x688) / ((x2180) * (x2180)) +
         20000000.0 * sc[4] * x1010 - 30000000.0 * sc[4] * x1660 +
         30000000.0 * sc[4] * x1662 - 20000000.0 * sc[4] * x987 +
         x1060 * x1954 - x1060 * x1980 -
         2.2e+18 * x1084 * x25 * x622 *
           (12.0 * x1363 * x688 + 1.68 * x1652 * x688) / ((x2180) * (x2180)) -
         5.3777777777777801e+31 * x1086 * x1629 +
         5.3777777777777801e+31 * x1205 -
         1.32e+19 * x1421 * x2181 * exp(x2142) +
         5710000.0 * x1473 * exp(379.92858268256299 * invT) - x1760 * x2027 +
         x1768 * x2027 + x1888 * x2182;
  x622 = -30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1768 +
         57000000.0 * sc[2] * x1954 - 57000000.0 * sc[2] * x1980 -
         x1760 * x2134 + x1768 * x2134 - 1122000000000.0 * x40 +
         1122000000000.0 * x813;
  x2180 = refC * x5512 * x872 - 28000000.0 * sc[3] * x1660 +
          28000000.0 * sc[3] * x1662 - 80300000000.0 * x1045 +
          80300000000.0 * x1121;
  const amrex::Real x6020 =
    -70000000.0 * sc[0] * x1660 + 70000000.0 * sc[0] * x1662 + x1010 * x2036 -
    1.4862e+22 * x1217 * x2357 + 2.8986751181102398e+33 * x1408 * x796 +
    1.4862e+22 * x1522 - 2.8986751181102398e+33 * x1642 * x796 - x2036 * x987 +
    x373 * x423 * (1.68 * x1101 * x688 + 12.0 * x2365 * x688) -
    x425 * (1.68 * x1101 * x688 + 12.0 * x2365 * x688);
  const amrex::Real x6064 = -50000000.0 * sc[14] * x1665 +
                            50000000.0 * sc[14] * x1670 - x1012 * x2125 +
                            x1014 * x2125 - x1759 * x2128 + x1769 * x2128;
  const amrex::Real x6067 =
    -48000000.0 * sc[2] * x1759 + 48000000.0 * sc[2] * x1769;
  const amrex::Real x6072 = 26000000.0 * exp(-1.24 * logT + x616);
  const amrex::Real x6076 = refC * sc[21] * x6072 + refC * sc[3] * x5758 +
                            refC * sc[5] * x5978 +
                            refC * x5464 * exp(-0.86 * logT + x616);
  const amrex::Real x6083 =
    -40000000.0 * sc[8] * x1012 + 40000000.0 * sc[8] * x1014 +
    60000000.0 * sc[9] * x2022 - 60000000.0 * sc[9] * x2045 - x1665 * x2133 +
    x1670 * x2133 - x1759 * x2031 + x1769 * x2031 - x1851 * x2155 +
    x1878 * x2155;
  const amrex::Real x6085 =
    -sc[1] * x1141 - sc[1] * x2075 -
    70800000.0 * sc[1] * exp(-150.96499974141599 * invT);
  const amrex::Real x6092 =
    -20000000.0 * sc[4] * x1012 + 20000000.0 * sc[4] * x1014 -
    30000000.0 * sc[4] * x1665 + 30000000.0 * sc[4] * x1670 + x1060 * x2022 -
    x1060 * x2045 + x1419 * x2182 - x1770 * x2027 + x1771 * x2027;
  const amrex::Real x6096 =
    -30000000.0 * sc[2] * x1770 + 30000000.0 * sc[2] * x1771 +
    57000000.0 * sc[2] * x2022 - 57000000.0 * sc[2] * x2045 - x1770 * x2134 +
    x1771 * x2134;
  const amrex::Real x6100 = 20000000.0 * sc[4] * x351 + x5545;
  const amrex::Real x6104 = x2143 * x351 + x5541;
  const amrex::Real x6106 = x2038 * x351 + x5534 + x5588 + x5591 + x5597 +
                            x5601 + x5603 + x5604 + x6100 + x6104;
  const amrex::Real x6146 = -50000000.0 * sc[14] * x1673 +
                            50000000.0 * sc[14] * x1674 - x1015 * x2125 +
                            x1019 * x2125 - x1786 * x2128 + x202 * x2128;
  const amrex::Real x6149 =
    -48000000.0 * sc[2] * x1786 + 48000000.0 * sc[2] * x202;
  const amrex::Real x6161 =
    -40000000.0 * sc[8] * x1015 + 40000000.0 * sc[8] * x1019 +
    60000000.0 * sc[9] * x2081 - 60000000.0 * sc[9] * x2099 - x1673 * x2133 +
    x1674 * x2133 - x1786 * x2031 + x1898 * x2155 - x1906 * x2155 +
    x202 * x2031;
  const amrex::Real x6168 =
    -20000000.0 * sc[4] * x1015 + 20000000.0 * sc[4] * x1019 -
    30000000.0 * sc[4] * x1673 + 30000000.0 * sc[4] * x1674 + x1060 * x2081 -
    x1060 * x2099 - x1780 * x2027 + x1781 * x2027;
  const amrex::Real x6169 =
    -30000000.0 * sc[2] * x1780 + 30000000.0 * sc[2] * x1781;
  const amrex::Real x6183 =
    -1800000.0 * sc[1] * x1995 + x1090 * x1995 - x1995 * x640 + x5601;
  const amrex::Real x6184 = -68000000.0 * sc[1] * x1893 -
                            90000000.0 * sc[1] * x1903 - x1075 - x1903 * x2192 +
                            x2038 * x351 + x5588 + x6183;
  const amrex::Real x6186 = x1903 * x2137 + x6100;
  const amrex::Real x6188 = x1893 * x2182 + x5603;
  const amrex::Real x6238 = -x1022 * x2125 + x1025 * x2125 - x1792 * x2128 +
                            x1832 * x2128 + x2127 * x234;
  amrex::Real x6240 = 1500.0 * exp(
                                 g_RT[10] - g_RT[17] - g_RT[1] + g_RT[8] -
                                 1353.6528310147 * invT + 1.43 * logT);
  const amrex::Real x6246 =
    sc[10] * x6240 - sc[17] * x1172 * x936 - 48000000.0 * sc[2] * x1792 +
    48000000.0 * sc[2] * x1832 + x1238 * x2137 + x2123 * x630 - x2149 * x630;
  const amrex::Real x6247 =
    1.6e+16 * exp(
                g_RT[14] - g_RT[1] - g_RT[20] + g_RT[8] -
                5625.96232369677 * invT - 2.39 * logT);
  const amrex::Real x6261 =
    -40000000.0 * sc[8] * x1022 + 40000000.0 * sc[8] * x1025 +
    60000000.0 * sc[9] * x2123 - 60000000.0 * sc[9] * x2149 - x1680 * x2133 +
    x1681 * x2133 - x1792 * x2031 + x1832 * x2031 - x1947 * x2155 +
    x1958 * x2155 + 12000000.0 * x2130 * x593 + 40000000.0 * x594;
  const amrex::Real x6269 =
    84300000.0 * sc[2] - 20000000.0 * sc[4] * x1022 +
    20000000.0 * sc[4] * x1025 - 30000000.0 * sc[4] * x1680 +
    30000000.0 * sc[4] * x1681 + x1060 * x2123 - x1060 * x2149 + x1727 * x2182 -
    x1788 * x2027 + x1789 * x2027;
  const amrex::Real x6270 =
    -30000000.0 * sc[2] * x1788 + 30000000.0 * sc[2] * x1789;
  const amrex::Real x6276 =
    -70000000.0 * sc[0] * x1680 + 70000000.0 * sc[0] * x1681 - sc[1] * x1281 -
    70000000.0 * sc[1] * x1466 - x1022 * x2036 + x1025 * x2036 -
    2.477e+21 * x1217 * x788 * exp(x1634);
  const amrex::Real x6323 = -x1049 * x2125 + x1053 * x2125 - x1834 * x2128 +
                            x1848 * x2128 + x2135 * x723 + x2143 * x816;
  const amrex::Real x6329 = -48000000.0 * sc[2] * x1834 +
                            48000000.0 * sc[2] * x1848 +
                            20000000.0 * sc[4] * x816 + x2137 * x792 +
                            x2138 * x630 - x2197 * x630 + x844;
  const amrex::Real x6339 =
    -40000000.0 * sc[8] * x1049 + 40000000.0 * sc[8] * x1053 +
    60000000.0 * sc[9] * x2138 - 60000000.0 * sc[9] * x2197 +
    60000000.0 * x1473 - x1683 * x2133 + x1689 * x2133 - x1834 * x2031 +
    x1848 * x2031 - x1959 * x2155 + x1964 * x2155;
  const amrex::Real x6347 =
    -20000000.0 * sc[4] * x1049 + 20000000.0 * sc[4] * x1053 -
    30000000.0 * sc[4] * x1683 + 30000000.0 * sc[4] * x1689 + x1060 * x2138 -
    x1060 * x2197 - x1791 * x2027 + x1797 * x2027 + x2182 * x637 + x923;
  const amrex::Real x6351 =
    -30000000.0 * sc[2] * x1791 + 30000000.0 * sc[2] * x1797 -
    28000000.0 * sc[3] * x1683 + 28000000.0 * sc[3] * x1689 -
    44000000000.0 * x1045 + 44000000000.0 * x1121;
  const amrex::Real x6354 =
    57000000.0 * sc[2] * x2138 - 57000000.0 * sc[2] * x2197 - x1791 * x2134 +
    x1797 * x2134 - 374000000000.0 * x40 + 374000000000.0 * x813;
  const amrex::Real x6356 =
    -70000000.0 * sc[0] * x1683 + 70000000.0 * sc[0] * x1689 - x1049 * x2036 +
    x1053 * x2036 + 2.477e+21 * x1217 * x2356 * x776 + x761;
  const amrex::Real x6359 = -20000000.0 * sc[1] * x1960 * x792 -
                            68000000.0 * sc[1] * x637 -
                            90000000.0 * sc[1] * x792 + x2087 - x2192 * x792;
  const amrex::Real x6360 =
    47.6 * sc[4] * exp(-35.225166606330397 * invT + 1.228 * logT);
  const amrex::Real x6368 = 0.42 * x688 * x970 + 3.0 * x688 * x989;
  const amrex::Real x6379 =
    x180 * (0.42 * x1064 * x688 + 3.0 * x2183 * x688 / ((x2190) * (x2190)));
  const amrex::Real x6383 =
    3.0 * x2084 * x688 / ((x2086) * (x2086)) + 0.42 * x605;
  const amrex::Real x6391 =
    3.0 * x2096 * x688 / ((x2098) * (x2098)) + 0.42 * x5562;
  const amrex::Real x6443 = x185 * (0.42 * x1722 * x688 + 3.0 * x1970 * x688);
  const amrex::Real x6454 =
    -50000000.0 * sc[14] * x1693 + 50000000.0 * sc[14] * x1694 - x1066 * x2125 +
    x1068 * x2125 + 1.326675e+88 * x1622 * x2018 + x1840 * x2128 -
    x1861 * x2128 + 1.995e+48 * x1948 * x1973 - 1.995e+48 * x1948 * x1978 -
    1.326675e+88 * x2018 * x2040 + x2143 * x65 + x31 * x6443 - x455 * x6443;
  x305 = 3.8e+29 * sc[1] * x1588 * x213 * x25 * x553 *
           (0.42 * x260 * x688 + 3.0 * x688 * x979) -
         5.7e+29 * sc[1] * x1588 * x553 + 48000000.0 * sc[2] * x1840 -
         48000000.0 * sc[2] * x1861 + 20000000.0 * sc[4] * x65 + sc[8] * x6240 -
         6.5636363636363603e+50 * x1571 * x961 +
         6.5636363636363603e+50 * x1571 * x984 -
         x213 * x2137 * x517 * (0.42 * x260 * x688 + 3.0 * x688 * x979) +
         x2137 * x793 + x2184 * x630 - x2274 * x630 + 5.7e+29 * x305;
  x479 = 6.26e+26 * refC * x2021 * x458 * x808 *
           exp(-3522.5166606330399 * invT - 6.66 * logT + x479) -
         4.4196541353383503e+46 * x138 * x2095 +
         6.26e+26 * x2026 * x458 * x461 * x465 * (0.42 * x2107 + 3.0 * x396) -
         9.39e+26 * x2026 * x461 + 4.4196541353383503e+46 * x2095 * x2102 -
         6.26e+26 * x458 * x465 * x481 * (0.42 * x2107 + 3.0 * x396) +
         9.39e+26 * x481;
  const amrex::Real x6473 =
    -3.8475e+21 * sc[13] * x2082 + 2.5566936528497398e+34 * x107 * x2044 -
    2.5566936528497398e+34 * x107 * x234 * exp(x2032) + x1840 * x2077 -
    x1861 * x2077 -
    2.565e+21 * x2035 * x25 * x521 *
      (3.0 * x2091 * x688 + 0.42 * x2157 * x688) +
    3.8475e+21 * x2035 + x497 * (3.0 * x2091 * x688 + 0.42 * x2157 * x688);
  const amrex::Real x6487 =
    -40000000.0 * sc[8] * x1066 + 40000000.0 * sc[8] * x1068 +
    60000000.0 * sc[9] * x2184 - 60000000.0 * sc[9] * x2274 +
    1.2e+30 * x1329 * x2145 * x25 * x43 *
      (3.0 * x2179 * x688 + 0.42 * x226 * x688) -
    1.8e+30 * x1329 * x2145 - x1693 * x2133 + x1694 * x2133 + x1840 * x2031 -
    x1861 * x2031 - x1965 * x2155 - 2.0e+54 * x2146 * x506 + x2155 * x646 -
    1.2e+30 * x2194 * x25 * x43 * (3.0 * x2179 * x688 + 0.42 * x226 * x688) +
    1.8e+30 * x2194 + 2.0e+54 * x501 * x506;
  x231 = -20000000.0 * sc[4] * x1066 + 20000000.0 * sc[4] * x1068 -
         30000000.0 * sc[4] * x1693 + 30000000.0 * sc[4] * x1694 +
         x1003 * x2182 + x1060 * x2184 - x1060 * x2274 + 3.3e+18 * x1084 +
         1.3444444444444401e+31 * x1086 * x1421 * x25 * exp(x231) -
         1.3444444444444401e+31 * x1086 * x1629 -
         3.3e+18 * x1421 * x2181 * exp(x2142) -
         x1495 * (3.0 * x1363 * x688 + 0.42 * x1652 * x688) +
         x1698 * (3.0 * x1363 * x688 + 0.42 * x1652 * x688) - x1801 * x2027 +
         x1804 * x2027;
  const amrex::Real x6499 = x423 * (0.42 * x1101 * x688 + 3.0 * x2365 * x688);
  const amrex::Real x6506 =
    -70000000.0 * sc[0] * x1693 + 70000000.0 * sc[0] * x1694 - x1066 * x2036 +
    x1068 * x2036 - 3.7155e+21 * x1217 * x2357 +
    7.2466877952755894e+32 * x1408 * x796 - 2.477e+21 * x1522 * x6499 +
    3.7155e+21 * x1522 - 7.2466877952755894e+32 * x1642 * x796 + x373 * x6499;
  x1971 = -57000000.0 * sc[1] * x1107 - 30000000.0 * sc[2] * x1801 +
          30000000.0 * sc[2] * x1804 + 57000000.0 * sc[2] * x2184 -
          57000000.0 * sc[2] * x2274 - 187000000000.0 * x1172 * x1971 * x25 -
          x1801 * x2134 + x1804 * x2134 - 280500000000.0 * x40 +
          280500000000.0 * x813;
  const amrex::Real x6554 =
    -50000000.0 * sc[14] * x1695 + 50000000.0 * sc[14] * x1697 + x1071 * x2125 -
    x1845 * x2128 - x2125 * x661 + x2128 * x725 + x2143 * x602;
  x844 = -48000000.0 * sc[2] * x1845 + 48000000.0 * sc[2] * x725 +
         20000000.0 * sc[4] * x602 + x1555 * x630 + x2137 * x792 -
         x2326 * x630 + x844;
  const amrex::Real x6575 =
    40000000.0 * sc[8] * x1071 - 40000000.0 * sc[8] * x661 +
    60000000.0 * sc[9] * x1555 - 60000000.0 * sc[9] * x2326 - x1695 * x2133 +
    x1697 * x2133 - x1845 * x2031 + x2031 * x725 - x2155 * x655 + x2155 * x908 +
    x37;
  x923 = 20000000.0 * sc[4] * x1071 - 30000000.0 * sc[4] * x1695 +
         30000000.0 * sc[4] * x1697 - 20000000.0 * sc[4] * x661 +
         x1060 * x1555 - x1060 * x2326 + x1696 * x2027 - x1806 * x2027 +
         x2182 * x637 + x923;
  const amrex::Real x6587 =
    57000000.0 * sc[2] * x1555 + 30000000.0 * sc[2] * x1696 -
    30000000.0 * sc[2] * x1806 - 57000000.0 * sc[2] * x2326 + x1696 * x2134 -
    x1806 * x2134 - 374000000000.0 * x40 + 374000000000.0 * x813;
  x761 = -70000000.0 * sc[0] * x1695 + 70000000.0 * sc[0] * x1697 +
         x1071 * x2036 - x2036 * x661 + x761;
  const amrex::Real x6628 =
    -30000000.0 * sc[2] * x1755 + 30000000.0 * sc[2] * x1761;
  const amrex::Real x6634 = -50000000.0 * sc[14] * x1701 +
                            50000000.0 * sc[14] * x1702 - x1072 * x2125 +
                            x1076 * x2125 - x1880 * x2128 + x1887 * x2128;
  const amrex::Real x6639 =
    -48000000.0 * sc[2] * x1880 + 48000000.0 * sc[2] * x1887 + x1021 * x630 +
    94600000.0 * x1473 * exp(259.15658288943098 * invT) + x2137 * x228 -
    x2366 * x630;
  const amrex::Real x6648 =
    -40000000.0 * sc[8] * x1072 + 40000000.0 * sc[8] * x1076 +
    60000000.0 * sc[9] * x1021 - 60000000.0 * sc[9] * x2366 - x1701 * x2133 +
    x1702 * x2133 - x1880 * x2031 + x1887 * x2031 - x1976 * x2155 +
    x1977 * x2155;
  x1663 = -sc[1] * x1176 - 20000000.0 * sc[1] * x1381 -
          30000000.0 * sc[1] * x1441 - sc[1] * x1663 - sc[1] * x5500 -
          sc[1] * x5503 - 20000000.0 * sc[4] * x1072 +
          20000000.0 * sc[4] * x1076 - 30000000.0 * sc[4] * x1701 +
          30000000.0 * sc[4] * x1702 + x1021 * x1060 - x1060 * x2366 +
          x1572 * x2182 - x1755 * x2027 + x1761 * x2027;
  const amrex::Real x6700 = -50000000.0 * sc[14] * x1704 +
                            50000000.0 * sc[14] * x1706 - x1077 * x2125 +
                            x1081 * x2125 + x1896 * x2128 + x2143 * x659;
  const amrex::Real x6707 =
    -48000000.0 * sc[2] * x1894 + 48000000.0 * sc[2] * x1896 + sc[4] * x5840 +
    20000000.0 * sc[4] * x659 - x2354 * x630 + x630 * x742;
  x1117 = -40000000.0 * sc[1] * x1117 - x1894 * x2077 + x1896 * x2077 -
          2.565e+21 * x2082 * x25;
  const amrex::Real x6718 =
    -40000000.0 * sc[8] * x1077 + 40000000.0 * sc[8] * x1081 -
    60000000.0 * sc[9] * x2354 + 60000000.0 * sc[9] * x742 - x1704 * x2133 +
    x1706 * x2133 + x1896 * x2031 + x1986 * x2155;
  x1421 = 6.6e+18 * x1084 - 2.6888888888888901e+31 * x1086 * x1629 +
          2.6888888888888901e+31 * x1205 -
          6.6e+18 * x1421 * x2181 * exp(x2142) + x1438 * x2182 -
          x1495 * (6.0 * x1363 * x688 + 0.84 * x1652 * x688) +
          x1698 * (6.0 * x1363 * x688 + 0.84 * x1652 * x688);
  x2142 = -20000000.0 * sc[4] * x1077 + 20000000.0 * sc[4] * x1081 -
          30000000.0 * sc[4] * x1704 + 30000000.0 * sc[4] * x1706 -
          x1060 * x2354 + x1060 * x742 + x1421 - x1767 * x2027 + x1833 * x2027;
  x2181 = -30000000.0 * sc[2] * x1767 + 30000000.0 * sc[2] * x1833 -
          28000000.0 * sc[3] * x1704 + 28000000.0 * sc[3] * x1706 -
          66000000000.0 * x1045 + 66000000000.0 * x1121;
  x1084 = -57000000.0 * sc[2] * x2354 + 57000000.0 * sc[2] * x742 -
          x1767 * x2134 + x1833 * x2134 - 561000000000.0 * x40 +
          561000000000.0 * x813;
  x1086 = -7.431e+21 * x1217 * x2357 + 1.4493375590551199e+33 * x1408 * x796 +
          7.431e+21 * x1522 - 1.4493375590551199e+33 * x1642 * x796 +
          x373 * x423 * (0.84 * x1101 * x688 + 6.0 * x2365 * x688) -
          x425 * (0.84 * x1101 * x688 + 6.0 * x2365 * x688);
  x1205 = -70000000.0 * sc[0] * x1704 + 70000000.0 * sc[0] * x1706 -
          x1077 * x2036 + x1081 * x2036 + x1086;
  x1629 = 0.84 * x688 * x970 + 6.0 * x688 * x989;
  x2183 = 0.84 * x1064 * x688 + 6.0 * x2183 * x688 / ((x2190) * (x2190));
  x2084 = 6.0 * x2084 * x688 / ((x2086) * (x2086)) + 0.84 * x605;
  x2086 = 6.0 * x2096 * x688 / ((x2098) * (x2098)) + 0.84 * x5562;
  x2096 = 2.65335e+88 * x1622 * x2018 +
          x185 * x31 * (0.84 * x1722 * x688 + 6.0 * x1970 * x688) -
          x185 * x455 * (0.84 * x1722 * x688 + 6.0 * x1970 * x688) +
          3.99e+48 * x1948 * x1973 - 3.99e+48 * x1948 * x1978 -
          2.65335e+88 * x2018 * x2040;
  x2098 = -7.695e+21 * sc[13] * x2082 + 5.1133873056994796e+34 * x107 * x2044 -
          5.1133873056994796e+34 * x107 * x234 * exp(x2032) -
          2.565e+21 * x2035 * x25 * x521 *
            (6.0 * x2091 * x688 + 0.84 * x2157 * x688) +
          7.695e+21 * x2035 + x497 * (6.0 * x2091 * x688 + 0.84 * x2157 * x688);
  x2190 = 6000000.0 * sc[0] * x551 - 6000000.0 * ((sc[1]) * (sc[1])) * x1275 -
          68000000.0 * sc[1] * x1438 - 4.2e+18 * sc[1] * x1635 -
          20000000.0 * sc[1] * x173 * x1960 - 90000000.0 * sc[1] * x173 -
          5.97e+29 * sc[1] * x968 - x1018 * x1629 - 1.56e+28 * x1024 +
          8.112e+47 * x1055 - 8.112e+47 * x1062 * x1511 + x1087 * x180 * x2183 +
          4.2e+18 * x1137 * x426 - 9.6710526315789494e+29 * x1140 * x641 -
          1.2288e+21 * x1155 * x172 + 4050000000000.0 * x1278 * x644 -
          5.0160550458715597e+18 * x1279 * x960 + 5.97e+29 * x1341 * x1342 +
          1.56e+28 * x1414 + x1629 * x885 + 1.2288e+21 * x172 * x1883 -
          x173 * x2192 + 9.6710526315789494e+29 * x1737 * x641 -
          x180 * x2183 * x554 - 4050000000000.0 * x1850 + 1500000.0 * x2043 -
          1500000.0 * x2083 - x2084 * x298 + x2084 * x5558 - x2086 * x911 +
          x2086 * x955 + x2096 + x2098 -
          x313 * (6.0 * x271 * x688 + 0.84 * x601 * x688) -
          2.2802879078694799e+47 * x431 * x829 +
          2.2802879078694799e+47 * x431 * x966 +
          x579 * (6.0 * x271 * x688 + 0.84 * x601 * x688) +
          9600000000000000.0 * x585 + 5.0160550458715597e+18 * x674 * x960 -
          9600000000000000.0 * x952;
  x207 = 1.14e+30 * refC * x517 * x553 * exp(x207 + x2205) -
         1.14e+30 * sc[1] * x1588 * x553 -
         1.3127272727272701e+51 * x1571 * x961 +
         1.3127272727272701e+51 * x1571 * x984 +
         x1590 * (0.84 * x260 * x688 + 6.0 * x688 * x979) + x173 * x2137 -
         x213 * x2137 * x517 * (0.84 * x260 * x688 + 6.0 * x688 * x979);
  x500 =
    3.6e+30 * refC * x2148 * x440 * exp(x2144 + x500) +
    1.2e+30 * x1329 * x2145 * x25 * x43 *
      (6.0 * x2179 * x688 + 0.84 * x226 * x688) -
    3.6e+30 * x1329 * x2145 - 4.0e+54 * x2146 * x506 -
    1.2e+30 * x2194 * x25 * x43 * (6.0 * x2179 * x688 + 0.84 * x226 * x688) +
    4.0e+54 * x501 * x506;
  x1329 = 30000000.0 * sc[1] * x124 * x1894 + 90000000.0 * sc[1] * x1894 +
          2000000.0 * sc[1] * x1979 - 80200000.0 * sc[2] * x1979 -
          x1894 * x2031 + x1894 * x2104 - x1894 * x2128 + x1979 * x2132 -
          x1979 * x2139 + x1979 * x2141 - x1979 * x2155 + x207 -
          8400000.0 * x208 + 8400000.0 * x2147 + x500;
  x2144 = -50000000.0 * sc[14] * x1707 + 50000000.0 * sc[14] * x1709 -
          x1083 * x2125 + x1089 * x2125 + x1897 * x2128 + x2143 * x820 +
          50000000.0 * x593 + 20000000.0 * x594 * exp(-3019.29999482832 * invT);
  x2148 = -48000000.0 * sc[2] * x1894 + 48000000.0 * sc[2] * x1897;
  x961 = -20000000.0 * sc[4] * x1083 + 20000000.0 * sc[4] * x1089 -
         30000000.0 * sc[4] * x1707 + 30000000.0 * sc[4] * x1709 -
         x1060 * x1174 + x1060 * x1231 + x1421 - x1835 * x2027 + x1836 * x2027;
  x1571 = -30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 -
          28000000.0 * sc[3] * x1707 + 28000000.0 * sc[3] * x1709 -
          66000000000.0 * x1045 + 66000000000.0 * x1121;
  x260 = -57000000.0 * sc[2] * x1174 + 57000000.0 * sc[2] * x1231 -
         x1835 * x2134 + x1836 * x2134 - 561000000000.0 * x40 +
         561000000000.0 * x813;
  x979 = -60000000.0 * sc[1] * x1104 - 40000000.0 * sc[1] * x1402 -
         1.2e+30 * sc[1] * x2145 * x25 - sc[1] * x5488 - sc[1] * x802 -
         40000000.0 * sc[8] * x1083 + 40000000.0 * sc[8] * x1089 -
         60000000.0 * sc[9] * x1174 + 60000000.0 * sc[9] * x1231 -
         x1707 * x2133 + x1709 * x2133 + x1897 * x2031 + x1992 * x2155;
  x213 = -50000000.0 * sc[14] * x1711 + 50000000.0 * sc[14] * x1719 -
         x1091 * x2125 + x1135 * x2143 + x1366 * x2125 + x1841 * x2128 -
         x1904 * x2128;
  x984 = 48000000.0 * sc[2] * x1841 - 48000000.0 * sc[2] * x1904 +
         20000000.0 * sc[4] * x1135 - x116 * x630 + x207 + x630 * x81;
  x1588 = x1090 * x1716 - 8.8393082706766904e+46 * x138 * x2095 +
          6.26e+26 * x2026 * x458 * x461 * x465 * (0.84 * x2107 + 6.0 * x396) -
          1.878e+27 * x2026 * x461 + 8.8393082706766904e+46 * x2095 * x2102 -
          6.26e+26 * x458 * x465 * x481 * (0.84 * x2107 + 6.0 * x396) +
          1.878e+27 * x481;
  x1590 = -40000000.0 * sc[8] * x1091 + 40000000.0 * sc[8] * x1366 -
          60000000.0 * sc[9] * x116 + 60000000.0 * sc[9] * x81 - x1711 * x2133 +
          x1719 * x2133 + x1841 * x2031 + x1886 * x2155 - x1904 * x2031 -
          x1999 * x2155 + x500;
  x1652 = -20000000.0 * sc[4] * x1091 + 20000000.0 * sc[4] * x1366 -
          30000000.0 * sc[4] * x1711 + 30000000.0 * sc[4] * x1719 -
          x1060 * x116 + x1060 * x81 + x1421 - x1838 * x2027 + x1839 * x2027;
  x1363 = -30000000.0 * sc[2] * x1838 + 30000000.0 * sc[2] * x1839 -
          28000000.0 * sc[3] * x1711 + 28000000.0 * sc[3] * x1719 -
          66000000000.0 * x1045 + 66000000000.0 * x1121;
  x1495 = -57000000.0 * sc[2] * x116 + 57000000.0 * sc[2] * x81 -
          x1838 * x2134 + x1839 * x2134 - 561000000000.0 * x40 +
          561000000000.0 * x813;
  x1698 = -28000000.0 * sc[3] * x1730;
  x813 = -x1730 * x2065;
  x40 = -x1843 * x2031 - x1890 * x2155 + x5597;
  x1064 = -40000000.0 * sc[8] * x1367 + 40000000.0 * sc[8] * x1472 -
          60000000.0 * sc[9] * x1625 + 60000000.0 * sc[9] * x848 +
          x169 * x2031 - x1730 * x2133 + x1731 * x2133 + x1956 * x2155 + x40;
  x605 = -20000000.0 * sc[4] * x1367 + 20000000.0 * sc[4] * x1472 -
         30000000.0 * sc[4] * x1730 + 30000000.0 * sc[4] * x1731 -
         x1060 * x1625 + x1060 * x848 - x1846 * x2027 + x1849 * x2027 + x6188;
  x481 = -30000000.0 * sc[2] * x1846;
  x2095 = -48000000.0 * sc[2] * x1843;
  x138 = -70000000.0 * sc[0] * x1730 + 70000000.0 * sc[0] * x1731 -
         x1367 * x2036 + x1472 * x2036 + x2095;
  x2102 = -x1846 * x2134 + x5604;
  x2107 = -x1843 * x2077 + x5591;
  x396 = 30000000.0 * sc[1] * x124 * x1843 + 90000000.0 * sc[1] * x1843 +
         2000000.0 * sc[1] * x1890 + x1843 * x2104 + x1890 * x2132 -
         x1890 * x2139 + x1890 * x2141 + x2107;
  x465 = 73400000.0 * sc[1] * x1846 - x1843 * x2128 - x1846 * x2078 +
         x1846 * x2079 + x1846 * x2080 + x1846 * x2093 + x1846 * x2105 + x6104;
  x2026 = -80200000.0 * sc[2] * x1890;
  x2091 = -x1890 * x1955;
  x2157 = -2000000.0 * sc[1] * x1956 + 80200000.0 * sc[2] * x1956 +
          x1955 * x1956 - x1956 * x2132 + x1956 * x2139 - x1956 * x2141 +
          x2026 + x2091;
  x521 =
    -50000000.0 * sc[14] * x1730 + 30000000.0 * sc[1] * x1730 - x1730 * x2124;
  x2082 = 50000000.0 * sc[14] * x1739 - x1475 * x2125 + x1554 * x2143 -
          x1843 * x2128 + x1882 * x2128 + x2125 * x854 + x5541;
  x553 = -50000000.0 * sc[1] * x1029 - sc[1] * x1043 -
         20000000.0 * sc[1] * x1123 - 48000000.0 * sc[1] * x1163 -
         sc[1] * x1208 - sc[1] * x1358 * x936 -
         3.8e+29 * sc[1] * x25 * x553 * exp(x2205) - sc[1] * x827 +
         48000000.0 * sc[2] * x1882 + 20000000.0 * sc[4] * x1554 + x2095 +
         x2137 * x434 + x5545 + x630 * x851;
  x2205 = -40000000.0 * sc[8] * x1475 + 40000000.0 * sc[8] * x854 -
          60000000.0 * sc[9] * x1058 + 60000000.0 * sc[9] * x851 -
          x1730 * x2133 + x1739 * x2133 + x1882 * x2031 + x1956 * x2155 + x40;
  x497 = -20000000.0 * sc[4] * x1475 - 30000000.0 * sc[4] * x1730 -
         x1058 * x1060 - x1846 * x2027 + x6188;
  x107 = -70000000.0 * sc[0] * x1730 - x1475 * x2036;
  x2032 = -68000000.0 * sc[1] * x1893 - 80000000.0 * sc[2] * x1475 -
          30000000.0 * sc[4] * x1058 - 30000000.0 * sc[8] * x1058 -
          x1058 * x562 - x1058 * x600 - x1058 * x630 + x1475 * x2024 +
          x1475 * x2090 - 5280000.0 * x1475 * x2094 + x521 + x5534 + x6183;
  x2035 = -57000000.0 * sc[2] * x1058 + x2102;
  x2044 = -40000000.0 * sc[8] * x1475 - 60000000.0 * sc[9] * x1058 -
          x1730 * x2133 + x40;
  x2194 = 48000000.0 * sc[2] * x1889 + 20000000.0 * sc[4] * x62 - x1085 * x630 +
          x1160 * x630 + x1903 * x2137 + x2095 + x5545;
  x2179 = -50000000.0 * sc[1] * x1452 - 1.33e+48 * sc[1] * x1948 * x728 -
          20000000.0 * sc[1] * x2370 - 20000000.0 * sc[1] * x625 -
          sc[1] * x799 + x1469 * x2125 - x1565 * x2125 - x1843 * x2128 +
          x1889 * x2128 + x2143 * x62 + x5541;
  x226 = 40000000.0 * sc[8] * x1469 - 40000000.0 * sc[8] * x1565 -
         60000000.0 * sc[9] * x1085 + 60000000.0 * sc[9] * x1160 -
         x1671 * x2133 + x1745 * x2133 + x1889 * x2031 + x1972 * x2155 + x40;
  x43 = 20000000.0 * sc[4] * x1469 - 20000000.0 * sc[4] * x1565 -
        30000000.0 * sc[4] * x1671 + 30000000.0 * sc[4] * x1745 -
        x1060 * x1085 + x1060 * x1160 - x1775 * x2027 + x1782 * x2027;
  x506 = -30000000.0 * sc[2] * x1775 + 30000000.0 * sc[2] * x1782;
  x458 = -sc[1] * x1051 - 6.26e+26 * sc[1] * x458 * x461 * x808 - x1048 +
         x1090 * x1318 + x5601;
  x461 = 50000000.0 * sc[14] * x1692 - 50000000.0 * sc[14] * x295 -
         x1575 * x2125 + x1580 * x2125 + x1895 * x2128;
  x808 = -40000000.0 * sc[8] * x1575 + 40000000.0 * sc[8] * x1580 +
         12000000.0 * sc[8] * x1692 * x2130 + 60000000.0 * sc[9] * x319 -
         60000000.0 * sc[9] * x963 + x1895 * x2031 + x1956 * x2155 -
         x2133 * x295 + x40;
  x501 = -20000000.0 * sc[4] * x1575 + 20000000.0 * sc[4] * x1580 +
         30000000.0 * sc[4] * x1692 - 30000000.0 * sc[4] * x295 + x1060 * x319 -
         x1060 * x963 - x1846 * x2027 + x1881 * x2027 + x6188;
  x2145 = 70000000.0 * sc[0] * x1692 - 70000000.0 * sc[0] * x295 -
          x1575 * x2036 + x1580 * x2036 + x5532;
  x2146 = refC * exp(-2.0 * g_RT[2] + g_RT[3] - logT);
  x5562 = sc[3] * x2146;
  x1421 = ((sc[2]) * (sc[2])) * x1275;
  x40 = exp(-g_RT[10] + g_RT[11] - g_RT[2] - 1509.64999741416 * invT);
  const amrex::Real x7379 = refC * sc[11] * x40;
  const amrex::Real x7381 = exp(-1509.64999741416 * invT);
  const amrex::Real x7383 = sc[10] * sc[2] * x7381;
  const amrex::Real x7396 = -x1491 * x649 + x1491 * x651 + x1551 * x830 -
                            x1551 * x951 + x2272 * x726 - x2272 * x826;
  const amrex::Real x7429 = -240000.0 * x1421 + 500000.0 * x2043 -
                            500000.0 * x2083 + 240000.0 * x5562 +
                            602.0 * x7379 - 602.0 * x7383;
  const amrex::Real x7439 = x1061 * x2272 + x1065 * x1551 - x1491 * x857 +
                            x1491 * x964 - x1551 * x971 - x2272 * x950;
  const amrex::Real x7441 = 9.63 * exp(-2012.8666632188799 * invT + 2.0 * logT);
  x200 =
    2500000.0 * exp(-g_RT[10] + g_RT[11] - 24053.756625465601 * invT - x200);
  const amrex::Real x7449 =
    1020.0 * exp(-4327.6633259205901 * invT + 1.5 * logT);
  x2 = 2107.0 * sc[11] + 602.0 * sc[21] + 3612.0 * sc[3] + 602.0 * x1 +
       602.0 * x2 + 602.0 * x22;
  x1 = 2.4 * sc[0] + 1.75 * sc[10] + 3.6 * sc[11] + sc[21] + sc[3] +
       15.4 * sc[5] + x1 + x22;
  x22 = 180000.0 * sc[20] * exp(-2958.91399493175 * invT + 0.7 * logT);
  const amrex::Real x7491 =
    -sc[20] * x5667 -
    35.0 * sc[20] * exp(489.12659916218797 * invT + 1.65 * logT) - x22;
  const amrex::Real x7492 =
    89.8 * exp(-2863.3028284288498 * invT + 1.92 * logT);
  const amrex::Real x7498 = 1750000.0 * exp(-679.34249883637199 * invT);
  const amrex::Real x7503 =
    -10000000.0 * sc[17] * x1029 - sc[17] * x7498 - x891 * x965 + x891 * x972;
  const amrex::Real x7505 = exp(
    g_RT[2] - 2.0 * g_RT[4] + g_RT[5] + 1061.78716484796 * invT + 2.4 * logT);
  const amrex::Real x7515 =
    15.1 * exp(-1882.0303301096501 * invT + 1.91 * logT);
  const amrex::Real x7521 = -sc[14] * x7515 - 19.584 * sc[14] * exp(x2273) +
                            x140 * x2272 - x1491 * x965 + x1491 * x972 +
                            x1551 * x1664 - x1551 * x759 - x1556 * x2272;
  const amrex::Real x7522 = 39000000.0 * exp(-1781.38699694871 * invT);
  const amrex::Real x7528 =
    2500000.0 * sc[10] * exp(-24053.756625465601 * invT);
  const amrex::Real x7530 = 20000000.0 * sc[4] * exp(-x1325 - x159);
  const amrex::Real x7546 = 30830000.0 * exp(-14492.6399751759 * invT);
  const amrex::Real x7573 = -x1491 * x974 + x1491 * x976 - x1551 * x1666 +
                            x1551 * x1672 - x1627 * x2272 + x1630 * x2272;
  const amrex::Real x7574 =
    9.63 * exp(-2012.8666632188799 * invT + 2.0 * logT - x1166 - x159);
  const amrex::Real x7577 =
    1020.0 *
    exp(g_RT[8] - g_RT[9] - 4327.6633259205901 * invT + 1.5 * logT - x159);
  const amrex::Real x7580 =
    180000.0 *
    exp(g_RT[19] - g_RT[20] - 2958.91399493175 * invT + 0.7 * logT - x159);
  const amrex::Real x7582 = 20000000.0 * sc[3] * exp(-x1325 - x159);
  const amrex::Real x7583 = sc[4] * exp(1061.78716484796 * invT + 2.4 * logT);
  const amrex::Real x7602 =
    exp(g_RT[17] - g_RT_qss[8] - 2012.8666632188799 * invT - x159);
  x159 =
    10000000.0 * exp(g_RT[16] - g_RT[17] - 4025.7333264377598 * invT - x159);
  const amrex::Real x7627 = -x1491 * x977 + x1491 * x982 - x1551 * x1700 +
                            x1551 * x398 - x1677 * x2272 + x1699 * x2272 +
                            x2271 * x234;
  const amrex::Real x7667 = x1010 * x1491 - x1491 * x987 - x1551 * x1760 +
                            x1551 * x1768 + x1668 * x2272 - x1741 * x2272;
  const amrex::Real x7695 = -100000000.0 * sc[2] * x351 + x7429;
  const amrex::Real x7705 = -x1012 * x1491 + x1014 * x1491 - x1551 * x1770 +
                            x1551 * x1771 - x1759 * x2272 + x1769 * x2272;
  const amrex::Real x7733 = 20000000.0 * sc[2] * x1903 * x1960;
  const amrex::Real x7737 = -10000000.0 * sc[2] * x1893 -
                            96000000.0 * sc[2] * x1995 - x1527 * x1893 -
                            x1903 * x2259 + x7695 - x7733;
  const amrex::Real x7747 = -x1015 * x1491 + x1019 * x1491 - x1551 * x1780 +
                            x1551 * x1781 - x1786 * x2272 + x202 * x2272;
  const amrex::Real x7788 = -x1022 * x1491 + x1025 * x1491 - x1551 * x1788 +
                            x1551 * x1789 - x1792 * x2272 + x1832 * x2272 +
                            x2285 * x433;
  const amrex::Real x7819 = -20000000.0 * sc[2] * x1960 * x792 -
                            10000000.0 * sc[2] * x637 - x1527 * x637 -
                            x2259 * x792;
  const amrex::Real x7826 = -x1049 * x1491 + x1053 * x1491 - x1551 * x1791 +
                            x1551 * x1797 - x1834 * x2272 + x1848 * x2272;
  const amrex::Real x7827 = 2500000.0 * sc[3] * exp(-24053.756625465601 * invT);
  const amrex::Real x7870 = -x1066 * x1491 + x1068 * x1491 - x1551 * x1801 +
                            x1551 * x1804 + x1840 * x2272 - x1861 * x2272;
  const amrex::Real x7908 = x1071 * x1491 - x1491 * x661 + x1551 * x1696 -
                            x1551 * x1806 - x1845 * x2272 + x2272 * x725;
  const amrex::Real x7947 = -x1072 * x1491 + x1076 * x1491 + x1312 * x594 -
                            x1551 * x1755 + x1551 * x1761 - x1880 * x2272 +
                            x1887 * x2272;
  const amrex::Real x7977 = -x1077 * x1491 + x1081 * x1491 - x1551 * x1767 +
                            x1551 * x1833 - x1894 * x2272 + x1896 * x2272;
  const amrex::Real x7987 =
    -10000000.0 * sc[2] * x1438 - 20000000.0 * sc[2] * x173 * x1960 -
    720000.0 * x1421 - x1438 * x1527 - x173 * x2259 + 1500000.0 * x2043 -
    1500000.0 * x2083 + 720000.0 * x5562 + 1806.0 * x7379 - 1806.0 * x7383;
  const amrex::Real x7988 = 96000000.0 * sc[2] * x1894 +
                            96240000.0 * sc[2] * x1979 - x1894 * x2195 -
                            x1979 * x695 + x7987;
  const amrex::Real x8016 = -sc[2] * x7515 - 19.584 * sc[2] * exp(x2273) -
                            x1083 * x1491 + x1089 * x1491 - x1551 * x1835 +
                            x1551 * x1836 - x1894 * x2272 + x1897 * x2272;
  const amrex::Real x8048 = -x1091 * x1491 + x1366 * x1491 - x1551 * x1838 +
                            x1551 * x1839 + x1841 * x2272 - x1904 * x2272;
  const amrex::Real x8066 = -x1890 * x2196;
  const amrex::Real x8073 =
    96000000.0 * sc[2] * x1843 + 60000000.0 * sc[2] * x1846 +
    96240000.0 * sc[2] * x1890 - x1843 * x2195 - x1846 * x2079 - x1846 * x2080 +
    x1846 * x2257 - x1890 * x695;
  const amrex::Real x8074 =
    -96240000.0 * sc[2] * x1956 + x1956 * x2196 + x1956 * x695 + x8066 + x8073;
  const amrex::Real x8077 = -x1846 * x2263;
  const amrex::Real x8087 = -x1551 * x1846 - x1843 * x2272;
  const amrex::Real x8098 = -x1475 * x2187;
  const amrex::Real x8105 =
    -10000000.0 * sc[2] * x1893 - 96000000.0 * sc[2] * x1995 - x1527 * x1893;
  const amrex::Real x8109 =
    57000000.0 * sc[2] * x1058 + 80000000.0 * sc[2] * x1475 +
    30000000.0 * sc[2] * x1730 - 33000000.0 * sc[3] * x1058 - x1475 * x584;
  const amrex::Real x8111 = -x1475 * x891;
  const amrex::Real x8113 = -x1475 * x1491 + x8087;
  const amrex::Real x8168 = x1469 * x1491 - x1491 * x1565 - x1551 * x1775 +
                            x1551 * x1782 - x1843 * x2272 + x1889 * x2272;
  const amrex::Real x8180 =
    180000.0 * sc[2] * exp(-2958.91399493175 * invT + 0.7 * logT);
  const amrex::Real x8181 =
    -sc[2] * x5667 -
    35.0 * sc[2] * exp(489.12659916218797 * invT + 1.65 * logT) - x8180;
  const amrex::Real x8231 = 300000.0 * sc[6] * x909 - 300000.0 * sc[6] * x935;
  const amrex::Real x8253 = 120000.0 * x1421 - 120000.0 * x5562;
  const amrex::Real x8260 = -300000.0 * sc[6] * x1504 + 300000.0 * sc[6] * x523;
  const amrex::Real x8287 =
    -300000.0 * sc[6] * x1656 + 300000.0 * sc[6] * x1721;
  const amrex::Real x8290 = exp(-429.747032597231 * invT);
  const amrex::Real x8294 = 1000000.0 * exp(-x1325 - x385);
  const amrex::Real x8297 = 2660000.0 * exp(-g_RT[19] + g_RT[20] - x1325);
  x1325 = 46400000.0 * exp(251.60833290235999 * invT - x1325 - x135);
  const amrex::Real x8339 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] + 820.24316526169298 * invT);
  const amrex::Real x8342 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] - 6038.59998965664 * invT);
  const amrex::Real x8344 =
    -300000.0 * sc[6] * x1762 + 300000.0 * sc[6] * x1764;
  const amrex::Real x8347 = 42200000.0 * exp(-30595.573280927001 * invT);
  const amrex::Real x8351 = 100000000.0 * exp(-20128.666632188801 * invT);
  const amrex::Real x8357 = 36000.0 * exp(-4498.7569922941902 * invT);
  const amrex::Real x8360 = exp(
    2.0 * g_RT[10] - g_RT[16] - g_RT[3] + g_RT[4] - 429.747032597231 * invT);
  const amrex::Real x8384 = 46400000.0 * exp(251.60833290235999 * invT);
  const amrex::Real x8391 =
    36000.0 *
    exp(g_RT[12] - g_RT[3] + g_RT[4] - g_RT[8] - 4498.7569922941902 * invT);
  const amrex::Real x8396 = 300000.0 * sc[6] * x1776 - 300000.0 * sc[6] * x1798;
  const amrex::Real x8426 =
    -300000.0 * sc[6] * x1779 + 300000.0 * sc[6] * x1856;
  x1144 = 1.34 * exp(192.93326966953001 * invT + 1.61 * logT - x1144 - x91);
  x99 = 7600000.0 * exp(-201.28666632188799 * invT - x91 - x99);
  x91 =
    4.28e-19 *
    exp(g_RT[12] - g_RT_qss[4] + 1776.3548302906599 * invT + 7.6 * logT - x91);
  const amrex::Real x8462 =
    -300000.0 * sc[6] * x1851 + 300000.0 * sc[6] * x1878 + 300000.0 * x440;
  const amrex::Real x8463 =
    260000.0 * sc[6] * exp(820.24316526169298 * invT) +
    840000000.0 * sc[6] * exp(-6038.59998965664 * invT) + x8462;
  const amrex::Real x8466 = -10000000.0 * sc[3] * x351 + x2193 + x8253;
  const amrex::Real x8491 = 300000.0 * sc[6] * x1898 - 300000.0 * sc[6] * x1906;
  const amrex::Real x8497 =
    -90000.0 * sc[3] * x1995 + x1527 * x1893 - x1578 * x1893 + x8466;
  const amrex::Real x8498 = -158000.0 * sc[3] * x1903 + x1903 * x2259;
  const amrex::Real x8529 =
    -300000.0 * sc[6] * x1947 + 300000.0 * sc[6] * x1958;
  const amrex::Real x8558 =
    -300000.0 * sc[6] * x1959 + 300000.0 * sc[6] * x1964;
  const amrex::Real x8592 = -300000.0 * sc[6] * x1965 + 300000.0 * sc[6] * x646;
  const amrex::Real x8619 = -300000.0 * sc[6] * x655 + 300000.0 * sc[6] * x908;
  const amrex::Real x8646 =
    -300000.0 * sc[6] * x1976 + 300000.0 * sc[6] * x1977;
  const amrex::Real x8674 =
    -300000.0 * sc[6] * x1979 + 300000.0 * sc[6] * x1986;
  const amrex::Real x8680 = -158000.0 * sc[3] * x173 + 360000.0 * x1421 +
                            x1438 * x1527 - x1438 * x1578 + x173 * x2259 -
                            360000.0 * x5562;
  const amrex::Real x8681 = 20000.0 * sc[3] * x1979 + x1544 * x1894 +
                            x1894 * x2195 + x1894 * x2316 - 8400000.0 * x208 +
                            8400000.0 * x2147 + x8680;
  const amrex::Real x8698 =
    -300000.0 * sc[6] * x1979 + 300000.0 * sc[6] * x1992;
  const amrex::Real x8724 = 300000.0 * sc[6] * x1886 - 300000.0 * sc[6] * x1999;
  const amrex::Real x8753 = 20000.0 * sc[3] * x1890 - x1529 * x1846 +
                            x1544 * x1843 + x1843 * x2195 + x1843 * x2316 -
                            x1846 * x2257 - x1846 * x2312 + x1846 * x2317;
  const amrex::Real x8759 = -x1846 * x2324;
  const amrex::Real x8761 = -x1843 * x2310;
  const amrex::Real x8762 = -300000.0 * sc[6] * x1890;
  const amrex::Real x8764 = 300000.0 * sc[6] * x1956 + x8761 + x8762;
  const amrex::Real x8777 =
    -90000.0 * sc[3] * x1995 + x1527 * x1893 - x1578 * x1893;
  const amrex::Real x8780 =
    33000000.0 * sc[3] * x1058 + 13200000.0 * x1475 * x2094 - x1475 * x2325;
  const amrex::Real x8856 =
    11.3 *
    exp(
      g_RT_qss[0] - g_RT_qss[1] - 1509.64999741416 * invT + 2.0 * logT - x135);
  const amrex::Real x8857 = sc[5] * x8856;
  const amrex::Real x8884 =
    10000000.0 * sc[2] * x1884 + 24000000.0 * sc[6] * x1240 -
    20000000.0 * sc[6] * x649 + 20000000.0 * sc[6] * x651 - x2270 * x726 +
    x2270 * x826 - x2363 * x909 + x2363 * x935 + x354 * x830 - x354 * x951;
  amrex::Real x8887 =
    0.0310810810810811 * x25 * exp(855.46833186802303 * invT - 0.53 * logT);
  amrex::Real x8888 = log(
    exp(-5182.0 * invT) + 0.2654 * exp(-0.010638297872340399 * T) +
    0.7346 * exp(-0.000569476082004556 * T));
  amrex::Real x8889 =
    -0.29097730287517898 * x8888 + 0.43429448190325198 * log(x8887) - 0.4;
  amrex::Real x8893 =
    1.7777777777777777 * ((x8889) * (x8889)) /
      ((-0.73540532268950665 * x8888 - 0.18666666666666668 * x8889 + 1) *
       (-0.73540532268950665 * x8888 - 0.18666666666666668 * x8889 + 1)) +
    1.0;
  const amrex::Real x8896 =
    exp(M_LN10 * (0.43429448190325198 * x8888 / x8893)) * x25 /
    ((x8887 + 1.0) * (x8887 + 1.0));
  const amrex::Real x8900 =
    ((sc[4]) * (sc[4])) * x8896 * exp(1710.9366637360499 * invT - 1.43 * logT);
  x8887 = exp(M_LN10 * (0.43429448190325198 * x8888 / x8893)) / (x8887 + 1.0);
  const amrex::Real x8902 = 855.46833186802303 * invT - 0.9 * logT;
  const amrex::Real x8905 = ((sc[4]) * (sc[4])) * x8887 * exp(x8902);
  const amrex::Real x8908 = exp(-2.0 * g_RT[4] + g_RT[7] + x8902);
  const amrex::Real x8910 = refC * sc[7] * x8887 * x8908;
  const amrex::Real x8911 =
    refC * sc[7] *
    exp(-2.0 * g_RT[4] + g_RT[7] + 1710.9366637360499 * invT - 1.43 * logT);
  const amrex::Real x8914 =
    2.3703703703703702 * ((x8889) * (x8889)) /
    ((-0.73540532269 * x8888 - 0.18666666666666668 * x8889 + 1) *
     (-0.73540532269 * x8888 - 0.18666666666666668 * x8889 + 1) *
     (-0.73540532269 * x8888 - 0.18666666666666668 * x8889 + 1));
  x8889 = 1.7777777777777777 * x8889 /
          ((-0.73540532268950665 * x8888 - 0.18666666666666668 * x8889 + 1) *
           (-0.73540532268950665 * x8888 - 0.18666666666666668 * x8889 + 1));
  const amrex::Real x8920 =
    4600000.0 * x25 * x8888 * x8905 / ((x8893) * (x8893));
  const amrex::Real x8922 =
    4600000.0 * x25 * x8888 * x8910 / ((x8893) * (x8893));
  const amrex::Real x8923 = -1000000.0 * x2043 + 1000000.0 * x2083 -
                            285945.94594594598 * x8896 * x8911 +
                            285945.94594594598 * x8900 - 9200000.0 * x8905 +
                            9200000.0 * x8910 +
                            x8920 * (4.0 * x688 * x8889 + 0.56 * x688 * x8914) -
                            x8922 * (4.0 * x688 * x8889 + 0.56 * x688 * x8914);
  const amrex::Real x8928 = 32000000.0 * sc[1] * x1884 - x1016 * x2358 -
                            x2323 * x649 + x2323 * x651 + x2358 * x988;
  const amrex::Real x8964 =
    10000000.0 * sc[2] * x1422 + 24000000.0 * sc[6] * x476 -
    20000000.0 * sc[6] * x857 + 20000000.0 * sc[6] * x964 - x1061 * x2270 +
    x1065 * x354 + x1504 * x2363 + x2270 * x950 - x2363 * x523 - x354 * x971;
  const amrex::Real x8969 =
    -500000.0 * x2043 + 500000.0 * x2083 - 142972.97297297299 * x8896 * x8911 +
    142972.97297297299 * x8900 - 4600000.0 * x8905 + 4600000.0 * x8910 +
    x8920 * (2.0 * x688 * x8889 + 0.28 * x688 * x8914) -
    x8922 * (2.0 * x688 * x8889 + 0.28 * x688 * x8914);
  const amrex::Real x8971 = sc[11] * x560 + 30000000.0 * sc[2] * x1065 -
                            30000000.0 * sc[2] * x971 -
                            28000000.0 * x1220 * x1455;
  const amrex::Real x8976 = 32000000.0 * sc[1] * x1422 - x1073 * x2358 -
                            32000000.0 * x1439 - x2323 * x857 + x2323 * x964 +
                            x2358 * x985 - 32000000.0 * x513;
  const amrex::Real x9011 =
    10000000.0 * sc[2] * x1678 + 24000000.0 * sc[6] * x1654 -
    20000000.0 * sc[6] * x965 + 20000000.0 * sc[6] * x972 - x140 * x2270 -
    10000000.0 * x1439 + x1556 * x2270 + x1656 * x2363 + x1664 * x354 -
    x1721 * x2363 - x354 * x759 - 10000000.0 * x513;
  const amrex::Real x9016 = 32000000.0 * sc[1] * x1678 + sc[9] * x7449 -
                            x2323 * x965 + x2323 * x972 - x2358 * x315 +
                            x2358 * x318;
  const amrex::Real x9052 =
    10000000.0 * sc[2] * x1765 + 24000000.0 * sc[6] * x1733 -
    20000000.0 * sc[6] * x974 + 20000000.0 * sc[6] * x976 + sc[8] * x8357 +
    x1627 * x2270 - x1630 * x2270 - x1666 * x354 + x1672 * x354 +
    x1762 * x2363 - x1764 * x2363;
  const amrex::Real x9057 = 32000000.0 * sc[1] * x1765 - x1416 * x2358 -
                            x2323 * x974 + x2323 * x976 + x2358 * x883;
  const amrex::Real x9058 =
    2000000.0 *
    exp(-g_RT[14] + g_RT[18] + g_RT[4] - g_RT[6] - 7045.0333212660798 * invT);
  const amrex::Real x9065 =
    100.0 * sc[9] * exp(-1570.03599731073 * invT + 1.6 * logT);
  const amrex::Real x9068 = 3.1 * exp(149.958566409806 * invT + 2.0 * logT);
  const amrex::Real x9105 =
    150000000.0 *
    exp(-g_RT[10] + g_RT[11] + g_RT[4] - g_RT[6] - 11875.913312991401 * invT);
  const amrex::Real x9109 = 1750000.0 * exp(-161.02933305751 * invT);
  const amrex::Real x9112 = 580000000.0 * exp(-4810.7513250931197 * invT);
  const amrex::Real x9115 =
    3.54 * exp(-437.79849925010598 * invT + 2.12 * logT);
  const amrex::Real x9124 =
    4.83e-10 * exp(1006.43333160944 * invT + 4.0 * logT);
  const amrex::Real x9128 = 3.6 * exp(-1258.0416645118 * invT + 2.0 * logT);
  const amrex::Real x9136 =
    3430.0 * exp(224.93784961470999 * invT + 1.18 * logT);
  const amrex::Real x9152 =
    -20000000.0 * sc[12] * x1374 - 10000000.0 * sc[12] * x1427 -
    sc[12] * x8391 - sc[12] * x9136 + 10000000.0 * sc[2] * x1879 +
    24000000.0 * sc[6] * x219 - 20000000.0 * sc[6] * x977 +
    20000000.0 * sc[6] * x982 - 6600000.0 * x162 * x166 * x234 -
    24000000.0 * x162 * x440 * x447 + x1677 * x2270 - x1699 * x2270 -
    x1700 * x354 - x1776 * x2363 + x1798 * x2363 + x354 * x398;
  const amrex::Real x9153 =
    -30000000.0 * sc[10] * x1255 - 28000000.0 * sc[1] * x1219 * x1455 - x5778;
  const amrex::Real x9155 = 56.0 * exp(-2727.4343286615799 * invT + 1.6 * logT);
  const amrex::Real x9161 = 32000000.0 * sc[1] * x1879 -
                            32000000.0 * sc[8] * x1435 - sc[8] * x7577 -
                            sc[8] * x9155 - 25010000.0 * sc[8] - x1645 * x2358 +
                            x1659 * x2358 - x2323 * x977 + x2323 * x982;
  const amrex::Real x9162 =
    100.0 *
    exp(g_RT[8] - g_RT[9] - 1570.03599731073 * invT + 1.6 * logT - x135);
  const amrex::Real x9164 =
    3.1 *
    exp(g_RT[19] - g_RT[20] + 149.958566409806 * invT + 2.0 * logT - x135);
  const amrex::Real x9183 =
    exp(g_RT[17] - g_RT_qss[8] - 1006.43333160944 * invT - x135);
  const amrex::Real x9197 =
    1750000.0 * exp(-161.02933305751 * invT - x1166 - x135);
  const amrex::Real x9199 =
    580000000.0 * exp(-4810.7513250931197 * invT - x1166 - x135);
  x135 = 7500000.0 * exp(g_RT[16] - g_RT[17] - 1006.43333160944 * invT - x135);
  const amrex::Real x9223 =
    10000000.0 * sc[2] * x1888 + 20000000.0 * sc[6] * x1010 +
    24000000.0 * sc[6] * x1946 - 20000000.0 * sc[6] * x987 - x1668 * x2270 +
    x1741 * x2270 - x1760 * x354 + x1768 * x354 + x1779 * x2363 -
    x1856 * x2363 + x2268 * x433;
  const amrex::Real x9230 = 32000000.0 * sc[1] * x1888 + x1010 * x2323 -
                            x1660 * x2358 + x1662 * x2358 - x2323 * x987 +
                            25010000.0 * x564 * x593 + x594 * x882;
  const amrex::Real x9231 = 2000000.0 * exp(-7045.0333212660798 * invT);
  const amrex::Real x9252 = 150000000.0 * exp(-11875.913312991401 * invT);
  const amrex::Real x9275 =
    6600000.0 * sc[19] + 10000000.0 * sc[2] * x1419 -
    20000000.0 * sc[6] * x1012 + 20000000.0 * sc[6] * x1014 +
    24000000.0 * sc[6] * x1985 - 24000000.0 * x1319 + x1759 * x2270 -
    x1769 * x2270 - x1770 * x354 + x1771 * x354 + x1851 * x2363 -
    x1878 * x2363 - 24000000.0 * x581;
  const amrex::Real x9276 = -20000000.0 * sc[4] * x351 + x8969;
  const amrex::Real x9282 = 32000000.0 * sc[1] * x1419 - x1012 * x2323 +
                            x1014 * x2323 - x1665 * x2358 + x1670 * x2358;
  const amrex::Real x9315 =
    10000000.0 * sc[2] * x1893 + 18000.0 * sc[3] * x1903 -
    20000000.0 * sc[6] * x1015 + 20000000.0 * sc[6] * x1019 - x1780 * x354 +
    x1781 * x354 + x1786 * x2270 - x1898 * x2363 + x1906 * x2363 - x202 * x2270;
  const amrex::Real x9326 = 24000000.0 * sc[4] * x1995;
  const amrex::Real x9328 =
    -5000000.0 * sc[4] * x1893 + 24000000.0 * sc[6] * x1995 - x1893 * x2362 -
    x1903 * x2364 - x1903 * x2371 + x7733 + x9276 - x9326;
  const amrex::Real x9336 =
    4.83e-10 * exp(
                 g_RT[10] - g_RT[13] - g_RT[4] + g_RT[8] +
                 1006.43333160944 * invT + 4.0 * logT);
  const amrex::Real x9375 =
    10000000.0 * sc[2] * x1727 + sc[3] * x8357 - 20000000.0 * sc[6] * x1022 +
    20000000.0 * sc[6] * x1025 + 24000000.0 * sc[6] * x453 - x1788 * x354 +
    x1789 * x354 + x1792 * x2270 - x1832 * x2270 + x1947 * x2363 -
    x1958 * x2363;
  const amrex::Real x9382 = 32000000.0 * sc[1] * x1727 -
                            32000000.0 * sc[4] * x1435 - sc[4] * x7577 -
                            sc[4] * x9155 - 25010000.0 * sc[4] - x1022 * x2323 +
                            x1025 * x2323 - x1680 * x2358 + x1681 * x2358;
  const amrex::Real x9383 =
    100.0 * sc[4] * exp(-1570.03599731073 * invT + 1.6 * logT);
  const amrex::Real x9415 =
    10000000.0 * sc[2] * x637 + 18000.0 * sc[3] * x792 -
    20000000.0 * sc[6] * x1049 + 20000000.0 * sc[6] * x1053 +
    24000000.0 * sc[6] * x2020 - x1791 * x354 + x1797 * x354 + x1834 * x2270 -
    x1848 * x2270 + x1959 * x2363 - x1964 * x2363;
  const amrex::Real x9421 = 32000000.0 * sc[1] * x637 + sc[2] * x7449 -
                            x1049 * x2323 + x1053 * x2323 - x1683 * x2358 +
                            x1689 * x2358;
  const amrex::Real x9426 = 20000000.0 * sc[2] * x1960 * x792 -
                            5000000.0 * sc[4] * x637 - x2362 * x637 -
                            x2364 * x792 - x2371 * x792 + x8923;
  const amrex::Real x9470 =
    10000000.0 * sc[2] * x1003 - 20000000.0 * sc[6] * x1066 +
    20000000.0 * sc[6] * x1068 + 24000000.0 * sc[6] * x2021 - x1801 * x354 +
    x1804 * x354 - x1840 * x2270 + x1861 * x2270 + x1965 * x2363 - x2363 * x646;
  const amrex::Real x9471 =
    -28000000.0 * sc[1] * x1455 * x739 - 30000000.0 * sc[4] * x1255 - x6360;
  const amrex::Real x9476 = 32000000.0 * sc[1] * x1003 - x1066 * x2323 +
                            x1068 * x2323 - x1693 * x2358 + x1694 * x2358;
  const amrex::Real x9508 =
    10000000.0 * sc[2] * x637 + 18000.0 * sc[3] * x792 +
    20000000.0 * sc[6] * x1071 - 20000000.0 * sc[6] * x661 +
    24000000.0 * sc[6] * x930 + x1696 * x354 - x1806 * x354 + x1845 * x2270 -
    x2270 * x725 + x2363 * x655 - x2363 * x908;
  const amrex::Real x9513 = 32000000.0 * sc[1] * x637 + x1071 * x2323 -
                            x1695 * x2358 + x1697 * x2358 - x2323 * x661;
  const amrex::Real x9548 =
    32000000.0 * sc[1] * x1572 - 24000000.0 * sc[4] * x1356 * x1358 -
    24000000.0 * sc[6] * x1976 + 24000000.0 * sc[6] * x1977 - x1072 * x2323 +
    x1076 * x2323 - x1701 * x2358 + x1702 * x2358;
  const amrex::Real x9562 =
    -24000000.0 * refCinv * sc[4] * x440 * x447 + 10000000.0 * sc[2] * x1572 -
    20000000.0 * sc[4] * x1374 - 10000000.0 * sc[4] * x1427 - sc[4] * x8391 -
    sc[4] * x9136 - 20000000.0 * sc[6] * x1072 + 20000000.0 * sc[6] * x1076 +
    24000000.0 * sc[6] * x1502 - 6600000.0 * x166 * x234 * x739 - x1755 * x354 +
    x1761 * x354 + x1880 * x2270 - x1887 * x2270 + x1976 * x2363 -
    x1977 * x2363;
  const amrex::Real x9594 =
    10000000.0 * sc[2] * x1438 + 18000.0 * sc[3] * x173 -
    20000000.0 * sc[6] * x1077 + 20000000.0 * sc[6] * x1081 - x1767 * x354 +
    x1833 * x354 + x1894 * x2270 - x1896 * x2270 + x1979 * x2363 -
    x1986 * x2363;
  const amrex::Real x9600 = 32000000.0 * sc[1] * x1438 - x1077 * x2323 +
                            x1081 * x2323 - x1704 * x2358 + x1706 * x2358;
  const amrex::Real x9614 =
    13800000.0 * refC * sc[7] * x8887 * x8908 +
    20000000.0 * sc[2] * x173 * x1960 -
    13800000.0 * ((sc[4]) * (sc[4])) * x8887 * exp(x8902) -
    5000000.0 * sc[4] * x1438 - x1438 * x2362 - x173 * x2364 - x173 * x2371 -
    1500000.0 * x2043 + 1500000.0 * x2083 - 428918.91891891899 * x8896 * x8911 +
    428918.91891891899 * x8900 +
    x8920 * (6.0 * x688 * x8889 + 0.84 * x688 * x8914) -
    x8922 * (6.0 * x688 * x8889 + 0.84 * x688 * x8914);
  const amrex::Real x9615 =
    30110000.0 * sc[4] * x1894 - 10000000.0 * sc[6] * x1894 -
    24000000.0 * sc[6] * x1979 + x1894 * x2272 + x1979 * x2196 + x9614;
  const amrex::Real x9636 =
    10000000.0 * sc[2] * x1438 + 18000.0 * sc[3] * x173 -
    20000000.0 * sc[6] * x1083 + 20000000.0 * sc[6] * x1089 +
    24000000.0 * sc[6] * x488 - x1835 * x354 + x1836 * x354 + x1894 * x2270 -
    x1897 * x2270 + x1979 * x2363 - x1992 * x2363;
  const amrex::Real x9644 = 32000000.0 * sc[1] * x1438 - x1083 * x2323 +
                            x1089 * x2323 - x1707 * x2358 + x1709 * x2358;
  const amrex::Real x9675 =
    10000000.0 * sc[2] * x1438 + 18000.0 * sc[3] * x173 -
    20000000.0 * sc[6] * x1091 + 20000000.0 * sc[6] * x1366 +
    24000000.0 * sc[6] * x1716 - x1838 * x354 + x1839 * x354 - x1841 * x2270 -
    x1886 * x2363 + x1904 * x2270 + x1999 * x2363;
  const amrex::Real x9680 = 32000000.0 * sc[1] * x1438 - x1091 * x2323 +
                            x1366 * x2323 - x1711 * x2358 + x1719 * x2358;
  amrex::Real x9699 = 10000000.0 * sc[2] * x1893 + 18000.0 * sc[3] * x1903 +
                      x1843 * x2270 + x1890 * x2363;
  const amrex::Real x9705 = -20000000.0 * sc[6] * x1367 +
                            20000000.0 * sc[6] * x1472 +
                            24000000.0 * sc[6] * x1956 - x169 * x2270 -
                            x1846 * x354 + x1849 * x354 - x1956 * x2363 + x9699;
  const amrex::Real x9709 = -x1042 * x1843;
  const amrex::Real x9714 =
    30110000.0 * sc[4] * x1843 - 10000000.0 * sc[6] * x1843 -
    24000000.0 * sc[6] * x1890 + x1843 * x2272 + x1890 * x2196 + x9709;
  const amrex::Real x9715 = 50000000.0 * sc[4] * x1846 - x1846 * x2105 +
                            x1846 * x2263 + x1846 * x2312 + x9714;
  const amrex::Real x9717 = -x1890 * x2361;
  const amrex::Real x9720 = -x1956 * x2196 + x1956 * x2361 + x9717;
  amrex::Real x9752 = 10000000.0 * sc[2] * x1893 - 20000000.0 * sc[6] * x1475 +
                      x1843 * x2270 - x1846 * x354 + x1890 * x2363;
  const amrex::Real x9753 = 24000000.0 * sc[6] * x1956 +
                            20000000.0 * sc[6] * x854 + x1852 * x354 -
                            x1882 * x2270 - x1956 * x2363 + x9752;
  const amrex::Real x9754 = -5000000.0 * sc[4] * x1893 +
                            24000000.0 * sc[6] * x1995 - x1893 * x2362 - x9326;
  const amrex::Real x9756 =
    30110000.0 * sc[4] * x1843 + 50000000.0 * sc[4] * x1846 -
    10000000.0 * sc[6] * x1843 - 24000000.0 * sc[6] * x1890 + x1843 * x2272 -
    x1846 * x2105 + x1846 * x2263 + x1846 * x2312 + x1890 * x2196;
  const amrex::Real x9760 = -x1475 * x2323 - x1730 * x2358;
  x9752 = 20000000.0 * sc[6] * x1563 + x1783 * x354 - x1957 * x2363 -
          x2270 * x232 + x9752;
  const amrex::Real x9784 =
    32000000.0 * sc[1] * x1893 + 30000000.0 * sc[4] * x1058 +
    20000000.0 * sc[4] * x1475 + 30000000.0 * sc[4] * x1730 - x1058 * x8857 -
    10560000.0 * x1475 * x2094 + x1475 * x250 + x5524 + x9276;
  const amrex::Real x9805 = 20000000.0 * sc[6] * x1469 -
                            20000000.0 * sc[6] * x1565 + 6600000.0 * sc[6] -
                            x1775 * x354 + x1782 * x354 - x1889 * x2270 -
                            x1972 * x2363 + x9699;
  const amrex::Real x9831 = 24000000.0 * sc[6] * x1318 -
                            20000000.0 * sc[6] * x1475 +
                            20000000.0 * sc[6] * x1574 - x1649 * x2363 -
                            x1846 * x354 + x1847 * x354 - x1892 * x2270 + x9699;
  x9699 = -20000000.0 * sc[6] * x1575 + 20000000.0 * sc[6] * x1580 +
          24000000.0 * sc[6] * x1956 - x1846 * x354 + x1881 * x354 -
          x1895 * x2270 - x1956 * x2363 + x9699;
  const amrex::Real x9852 = 32000000.0 * sc[1] * x1893 - x1575 * x2323 +
                            x1580 * x2323 + x1692 * x2358 - x2358 * x295;
  const amrex::Real x9855 = 22000000000.0 * x1045 - 22000000000.0 * x1121;
  const amrex::Real x9876 =
    -50000000.0 * sc[10] * x1248 - 12000000.0 * sc[10] * x1448 -
    50000000.0 * sc[4] * x1760 + 50000000.0 * sc[4] * x1768;
  const amrex::Real x9892 =
    -50000000.0 * sc[4] * x1801 + 50000000.0 * sc[4] * x1804 -
    50000000.0 * sc[5] * x1248 - 12000000.0 * sc[5] * x1448;
  const amrex::Real x9898 = 16000000.0 * sc[1] * x1438 +
                            5000000.0 * sc[4] * x1438 + 66000000000.0 * x1045 -
                            66000000000.0 * x1121 + x173 * x2371;
  const amrex::Real x9908 = 16000000.0 * sc[1] * x1893 +
                            5000000.0 * sc[4] * x1893 + x1042 * x1843 +
                            x1890 * x2361 + x1903 * x2371 + x9326 + x9855;
  const amrex::Real x9911 =
    -12000000.0 * sc[3] * x1730 + x1730 * x2124 + x1730 * x2358;
  const amrex::Real x9912 = -50000000.0 * sc[4] * x1846;
  const amrex::Real x9913 = -30110000.0 * sc[4] * x1843;
  const amrex::Real x9917 =
    16000000.0 * sc[1] * x1893 + 5000000.0 * sc[4] * x1893 + x1042 * x1843 +
    x1058 * x1060 + x1058 * x8857 + x1475 * x2323 - x1475 * x250 +
    x1890 * x2361 + x9326 + x9855 + x9911;
  const amrex::Real x9932 = 2800000.0 * x208 - 2800000.0 * x2147;
  const amrex::Real x9983 = -20000.0 * sc[3] * x1762 + 20000.0 * sc[3] * x1764 -
                            x1627 * x962 + x1630 * x962 + 20000.0 * x440;
  const amrex::Real x9997 = sc[18] * x9058 + 20000.0 * sc[3] * x1776 -
                            20000.0 * sc[3] * x1798 - x1677 * x962 +
                            x1699 * x962;
  x385 = 0.0245 * exp(-2606.66232886845 * invT + 2.47 * logT - x1166 - x385);
  const amrex::Real x10019 =
    0.0096 * sc[20] * exp(-6999.7438213436499 * invT + 2.6 * logT);
  const amrex::Real x10023 =
    8700.0 * exp(g_RT[15] - g_RT_qss[7] - 490.13303249379697 * invT - x1166);
  x1166 =
    12100.0 * exp(g_RT[14] - g_RT_qss[6] + 299.91713281961302 * invT - x1166);
  const amrex::Real x10031 = -sc[14] * x1166 - 20000.0 * sc[14] * x1353 -
                             sc[14] * x9231 - 20000.0 * sc[3] * x1851 +
                             20000.0 * sc[3] * x1878 - x1759 * x962 +
                             x1769 * x962;
  const amrex::Real x10033 =
    -sc[10] * x9252 - sc[10] * x99 - x1770 * x2317 + x1771 * x2317;
  const amrex::Real x10037 = -1000000.0 * sc[12] * x1029 - sc[12] * x91 +
                             x1419 * x1578 - x1770 * x2322 + x1771 * x2322;
  const amrex::Real x10039 =
    0.0245 * sc[8] * exp(-2606.66232886845 * invT + 2.47 * logT);
  const amrex::Real x10040 =
    0.0096 * exp(
               g_RT[19] - g_RT[20] - g_RT[6] + g_RT[7] -
               6999.7438213436499 * invT + 2.6 * logT);
  const amrex::Real x10050 =
    90000.0 * sc[3] * x1995 - 24000000.0 * sc[6] * x1995;
  const amrex::Real x10060 = 20000.0 * sc[3] * x1898 - 20000.0 * sc[3] * x1906 -
                             x1786 * x962 + x202 * x962 +
                             12100.0 * x234 * exp(299.91713281961302 * invT);
  const amrex::Real x10062 =
    0.0245 * sc[7] * exp(-2606.66232886845 * invT + 2.47 * logT);
  const amrex::Real x10104 =
    -sc[6] * x9252 - sc[6] * x99 - x1801 * x2317 + x1804 * x2317;
  const amrex::Real x10131 = -1000000.0 * sc[6] * x1029 - sc[6] * x91 +
                             x1572 * x1578 - x1755 * x2322 + x1761 * x2322;
  const amrex::Real x10146 = -20000.0 * sc[3] * x1979 - x1894 * x962;
  const amrex::Real x10150 =
    140000.0 * sc[3] * x173 + 10000000.0 * sc[6] * x1894 +
    24600000.0 * sc[6] * x1979 + x1438 * x2362 + x173 * x2364 + x1894 * x2310 -
    x1979 * x2363 + 8400000.0 * x208 - 8400000.0 * x2147;
  const amrex::Real x10162 = 20000.0 * sc[3] * x1992 - sc[6] * x1166 -
                             20000.0 * sc[6] * x1353 - sc[6] * x9231 + x10146 +
                             x1897 * x962;
  const amrex::Real x10176 = -x1846 * x2317;
  const amrex::Real x10180 = x1578 * x1893 - x1846 * x2322;
  const amrex::Real x10184 = -20000.0 * sc[3] * x1890 - x1843 * x962;
  const amrex::Real x10185 = 20000.0 * sc[3] * x1956 + x10184;
  const amrex::Real x10187 = -x1843 * x2316;
  const amrex::Real x10190 =
    140000.0 * sc[3] * x1903 + 10000000.0 * sc[6] * x1843 +
    24600000.0 * sc[6] * x1890 + x10050 + x10187 + x1843 * x2310 -
    x1890 * x2363 + x1893 * x2362 + x1903 * x2364 + x9932;
  const amrex::Real x10191 = -x1843 * x2270;
  const amrex::Real x10194 = -x1890 * x648;
  const amrex::Real x10197 =
    -24600000.0 * sc[6] * x1956 + x10194 + x1956 * x2363 + x1956 * x648;
  const amrex::Real x10200 = 10000000.0 * sc[6] * x1843 +
                             24600000.0 * sc[6] * x1890 + x10050 +
                             x1843 * x2310 - x1890 * x2363 + x1893 * x2362;
  const amrex::Real x10232 =
    0.0096 * sc[6] * exp(-6999.7438213436499 * invT + 2.6 * logT);
  const amrex::Real x10243 =
    2300000.0 * x25 * x8888 * x8910 / ((x8893) * (x8893));
  x8888 = 2300000.0 * x25 * x8888 * x8905 / ((x8893) * (x8893));
  x8893 = x10243 * (4.0 * x688 * x8889 + 0.56 * x688 * x8914) -
          x8888 * (4.0 * x688 * x8889 + 0.56 * x688 * x8914) +
          142972.97297297299 * x8896 * x8911 - 142972.97297297299 * x8900 +
          4600000.0 * x8905 - 4600000.0 * x8910;
  const amrex::Real x10247 =
    x10243 * (2.0 * x688 * x8889 + 0.28 * x688 * x8914) -
    x8888 * (2.0 * x688 * x8889 + 0.28 * x688 * x8914) +
    71486.486486486494 * x8896 * x8911 - 71486.486486486494 * x8900 +
    2300000.0 * x8905 - 2300000.0 * x8910;
  const amrex::Real x10252 =
    x10243 * (6.0 * x688 * x8889 + 0.84 * x688 * x8914) -
    x8888 * (6.0 * x688 * x8889 + 0.84 * x688 * x8914) +
    214459.459459459 * x8896 * x8911 - 214459.459459459 * x8900 +
    6900000.0 * x8905 - 6900000.0 * x8910;
  const amrex::Real x10256 =
    x10247 + x1843 * x962 + x1846 * x2322 + x1890 * x648;
  const amrex::Real x10257 =
    300000.0 * sc[6] * x1956 + x10256 - x1956 * x648 + x8762;
  const amrex::Real x10281 =
    16040000.0 * sc[2] * x909 - 16040000.0 * sc[2] * x935 +
    24000000.0 * sc[6] * x909 - 24000000.0 * sc[6] * x935 + x748 * x830 -
    x748 * x951;
  amrex::Real x10283 = ((x771) * (x771)) / ((x777) * (x777) * (x777));
  amrex::Real x10286 =
    0.56 * x10283 * x688 + 4.0 * x688 * x771 / ((x777) * (x777));
  amrex::Real x10287 = x362 / ((((x771) * (x771)) / ((x777) * (x777)) + 1.0) *
                               (((x771) * (x771)) / ((x777) * (x777)) + 1.0));
  x1287 = x119 * x1287;
  const amrex::Real x10291 = 2.2e+36 * x10287 * x1287 * x25;
  x356 = 6.6942148760330811e-59 *
         exp(
           M_LN10 * (0.43429448190325198 * x362 /
                     (((x771) * (x771)) / ((x777) * (x777)) + 1.0))) /
         ((x25 * exp(x356) + 8.181818181818196e-30) *
          (x25 * exp(x356) + 8.181818181818196e-30));
  x362 = x356 * x433 * x754;
  const amrex::Real x10300 = sc[8] * x10287 * x119 * x359 * x433;
  x752 = x119 * x433 * x752;
  amrex::Real x10308 =
    8.3490566037735897e+27 * x25 * exp(-2818.0133285064344 * invT - 8.7 * logT);
  amrex::Real x10309 = log(
    exp(-4970.0 * invT) + 0.4675 * exp(-0.0066225165562913899 * T) +
    0.5325 * exp(-0.00096339113680154098 * T));
  amrex::Real x10310 =
    -0.29097730287517898 * x10309 + 0.43429448190325198 * log(x10308) - 0.4;
  amrex::Real x10312 = -0.55155399201712996 * x10309 - 0.14 * x10310 + 0.75;
  const amrex::Real x10314 =
    ((x10310) * (x10310)) * x688 / ((x10312) * (x10312) * (x10312));
  const amrex::Real x10316 = x10310 * x688 / ((x10312) * (x10312));
  const amrex::Real x10319 = -3130.0076613053543 * invT - 9.67 * logT;
  const amrex::Real x10320 = exp(g_RT[15] - 2.0 * g_RT[8] + x10319);
  const amrex::Real x10323 = exp(
    M_LN10 * (0.43429448190325198 * x10309 /
              (((x10310) * (x10310)) / ((x10312) * (x10312)) + 1.0)));
  const amrex::Real x10325 = (1.0 / ((x10308 + 1.0)));
  const amrex::Real x10328 = 3.54e+38 * x10320 * x10323 * x10325 * x1341;
  x10309 = x10309 * x25 /
           ((((x10310) * (x10310)) / ((x10312) * (x10312)) + 1.0) *
            (((x10310) * (x10310)) / ((x10312) * (x10312)) + 1.0));
  x10308 = x25 / ((x10308 + 1.0) * (x10308 + 1.0));
  x10310 = ((sc[8]) * (sc[8])) * x10323 *
           exp(-5948.0209898117882 * invT - 18.37 * logT);
  x10312 = 3.54e+38 * ((sc[8]) * (sc[8])) * x10323 * x10325 * exp(x10319);
  const amrex::Real x10344 =
    3.4278694009181206e-79 *
    exp(
      M_LN10 * (0.43429448190325198 * x74 /
                (((x51) * (x51)) / ((x701) * (x701)) + 1.0))) /
    ((x70 + 5.85480093676815e-40) * (x70 + 5.85480093676815e-40));
  const amrex::Real x10346 = x10344 * x234 * x722;
  const amrex::Real x10348 = x51 / ((x701) * (x701));
  const amrex::Real x10349 = ((x51) * (x51)) / ((x701) * (x701) * (x701));
  x74 = x74 / ((((x51) * (x51)) / ((x701) * (x701)) + 1.0) *
               (((x51) * (x51)) / ((x701) * (x701)) + 1.0));
  x51 = x1199 * x707;
  x701 = 4.27e+46 * x25 * x51 * x74;
  const amrex::Real x10359 =
    ((sc[8]) * (sc[8])) * x10323 * x10325 * exp(x10319);
  const amrex::Real x10362 =
    x10323 * x1341 *
    exp(g_RT[15] - 2.0 * g_RT[8] - 5948.0209898117882 * invT - 18.37 * logT);
  const amrex::Real x10365 = x10320 * x10323 * x10325 * x1341;
  x70 = 4.27e+46 * x234 * x70 * x707;
  const amrex::Real x10368 = sc[8] * x70 * x74;
  const amrex::Real x10372 = 2.2e+43 * refC *
                             exp(
                               -g_RT[13] + g_RT[19] - g_RT[8] -
                               17979.931469202598 * invT - 11.82 * logT);
  const amrex::Real x10375 =
    2.2e+43 * sc[13] * exp(-17979.931469202598 * invT - 11.82 * logT);
  const amrex::Real x10377 = sc[19] * x10372 - sc[8] * x10375;
  x316 = sc[8] * x1385 * x2089 * x316 * x776 - x10286 * x10291 +
         x10286 * x10300 + 5.9111320754717004e+66 * x10308 * x10310 -
         5.9111320754717004e+66 * x10308 * x10362 +
         x10309 * x10312 * (0.56 * x10314 + 4.0 * x10316) -
         x10309 * x10328 * (0.56 * x10314 + 4.0 * x10316) -
         1.458632e+86 * x10344 * x1539 + 1.458632e+86 * x10346 -
         7.08e+38 * x10359 + 7.08e+38 * x10365 +
         x10368 * (4.0 * x10348 * x688 + 0.56 * x10349 * x688) + x10377 +
         8.192e+20 * x1155 * x172 + 8.54e+46 * x1199 * x707 + 4.4e+36 * x1287 -
         5.3777777777777799e+65 * x1523 * x356 - 8.192e+20 * x172 * x1883 -
         x2089 * x316 * x788 * x85 - 8.54e+46 * x234 * x707 * x708 +
         5.3777777777777799e+65 * x362 - 6400000000000000.0 * x585 -
         x701 * (4.0 * x10348 * x688 + 0.56 * x10349 * x688) - 4.4e+36 * x752 +
         6400000000000000.0 * x952;
  const amrex::Real x10400 =
    -16040000.0 * sc[2] * x1504 + 16040000.0 * sc[2] * x523 -
    24000000.0 * sc[6] * x1504 + 24000000.0 * sc[6] * x523 + x1065 * x748 -
    x748 * x971;
  amrex::Real x10403 =
    0.28 * x10283 * x688 + 2.0 * x688 * x771 / ((x777) * (x777));
  x5557 = -refC * sc[8] * x1385 * x2089 + sc[1] * x2089 * x85 -
          x10291 * x10403 + x10300 * x10403 +
          2.9555660377358502e+66 * x10308 * x10310 -
          2.9555660377358502e+66 * x10308 * x10362 +
          x10309 * x10312 * (0.28 * x10314 + 2.0 * x10316) -
          x10309 * x10328 * (0.28 * x10314 + 2.0 * x10316) - x10312 + x10328 -
          7.29316e+85 * x10344 * x1539 + 7.29316e+85 * x10346 +
          x10368 * (2.0 * x10348 * x688 + 0.28 * x10349 * x688) +
          4.096e+20 * x1155 * x172 + 2.2e+36 * x1287 -
          2.6888888888888899e+65 * x1523 * x356 - 4.096e+20 * x172 * x1883 -
          4.27e+46 * x234 * x707 * x708 + x298 * x5557 +
          2.6888888888888899e+65 * x362 + 4.27e+46 * x51 - x5557 * x5558 -
          x701 * (2.0 * x10348 * x688 + 0.28 * x10349 * x688) - 2.2e+36 * x752;
  const amrex::Real x10421 = x10377 + x5532 + x5557;
  const amrex::Real x10445 =
    -16040000.0 * sc[2] * x1656 + 16040000.0 * sc[2] * x1721 -
    24000000.0 * sc[6] * x1656 + 24000000.0 * sc[6] * x1721 + x1664 * x748 +
    16040000.0 * x440 - x748 * x759;
  const amrex::Real x10467 =
    -16040000.0 * sc[2] * x1762 + 16040000.0 * sc[2] * x1764 -
    24000000.0 * sc[6] * x1762 + 24000000.0 * sc[6] * x1764 - x1666 * x748 +
    x1672 * x748;
  const amrex::Real x10490 =
    -24000000.0 * sc[12] * x1356 * x1358 + 16040000.0 * sc[2] * x1776 -
    16040000.0 * sc[2] * x1798 + 24000000.0 * sc[6] * x1776 -
    24000000.0 * sc[6] * x1798 - x1700 * x748 + x398 * x748;
  x10287 =
    x10287 * (1.68 * x10283 * x688 + 12.0 * x688 * x771 / ((x777) * (x777)));
  x74 = x74 * (12.0 * x10348 * x688 + 1.68 * x10349 * x688);
  const amrex::Real x10514 = x234 * x707 * x708;
  const amrex::Real x10530 =
    -16040000.0 * sc[2] * x1779 + 16040000.0 * sc[2] * x1856 -
    24000000.0 * sc[6] * x1779 + 24000000.0 * sc[6] * x1856 - x1760 * x748 +
    x1768 * x748;
  const amrex::Real x10553 =
    -16040000.0 * sc[2] * x1851 + 16040000.0 * sc[2] * x1878 -
    24000000.0 * sc[6] * x1851 + 24000000.0 * sc[6] * x1878 - x1770 * x748 +
    x1771 * x748 + 24000000.0 * x440;
  const amrex::Real x10576 =
    16040000.0 * sc[2] * x1898 - 16040000.0 * sc[2] * x1906 +
    24000000.0 * sc[6] * x1898 - 24000000.0 * sc[6] * x1906 - x1780 * x748 +
    x1781 * x748;
  const amrex::Real x10579 =
    -11000000.0 * sc[8] * x1995 + x10377 + x1995 * x640;
  const amrex::Real x10583 =
    3.9e+26 * exp(
                g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7] -
                9937.0194996457994 * invT - 5.22 * logT);
  const amrex::Real x10586 =
    2.2e-6 * exp(-2855.7545784417798 * invT + 3.5 * logT);
  x0 = sc[0] + sc[10] + sc[11] + sc[13] + sc[14] + sc[15] + sc[21] + sc[3] +
       sc[5] + sc[9] + x0;
  const amrex::Real x10614 = 6.14 * exp(-5258.61415765932 * invT + 1.74 * logT);
  const amrex::Real x10619 =
    0.227 * exp(-4629.5933254034198 * invT + 2.0 * logT);
  const amrex::Real x10623 = -sc[14] * x10619 - sc[14] * x6247 -
                             330000.0 * sc[14] * exp(-3874.76832669634 * invT) +
                             x1002 * x453 - x1792 * x735 + x1832 * x735;
  const amrex::Real x10626 =
    0.00332 * exp(-2948.8496616156599 * invT + 2.81 * logT);
  const amrex::Real x10628 =
    -sc[12] * x10626 - 16040000.0 * sc[12] * x1338 -
    16040000.0 * sc[2] * x1947 + 16040000.0 * sc[2] * x1958 -
    24000000.0 * sc[4] * x1356 * x162 - 24000000.0 * sc[6] * x1947 +
    24000000.0 * sc[6] * x1958 - x1788 * x748 + x1789 * x748;
  const amrex::Real x10630 = -48000000.0 * sc[10] * x1184 - sc[10] * x6240 -
                             sc[10] * x9336 -
                             7.8e+41 * x1219 *
                               exp(
                                 g_RT[10] + g_RT[8] - g_RT_qss[8] -
                                 23600.8616262414 * invT - 9.147 * logT) +
                             x1238 * x635;
  const amrex::Real x10631 =
    2.2e-6 * exp(
               g_RT[19] - g_RT[20] - g_RT[8] + g_RT[9] -
               2855.7545784417798 * invT + 3.5 * logT);
  const amrex::Real x10662 =
    -16040000.0 * sc[2] * x1959 + 16040000.0 * sc[2] * x1964 -
    24000000.0 * sc[6] * x1959 + 24000000.0 * sc[6] * x1964 - x1791 * x748 +
    x1797 * x748 + x325 * x433;
  const amrex::Real x10666 =
    50000000.0 * exp(g_RT[10] + g_RT[14] - g_RT[16] - g_RT[8]);
  const amrex::Real x10674 =
    0.42 * x10283 * x688 + 3.0 * x688 * x771 / ((x777) * (x777));
  const amrex::Real x10710 =
    -16040000.0 * sc[2] * x1965 + 16040000.0 * sc[2] * x646 -
    24000000.0 * sc[6] * x1965 + 24000000.0 * sc[6] * x646 - x1801 * x748 +
    x1804 * x748;
  x6240 = 48000000.0 * sc[2] * x1840 - 48000000.0 * sc[2] * x1861 -
          48000000.0 * sc[8] * x1184 - sc[8] * x6240 - sc[8] * x9336 -
          7.8e+41 * x1358 *
            exp(
              g_RT[10] + g_RT[8] - g_RT_qss[8] - 23600.8616262414 * invT -
              9.147 * logT) +
          x635 * x793;
  const amrex::Real x10733 =
    -16040000.0 * sc[2] * x655 + 16040000.0 * sc[2] * x908 -
    24000000.0 * sc[6] * x655 + 24000000.0 * sc[6] * x908 + x1696 * x748 -
    x1806 * x748;
  const amrex::Real x10758 =
    -16040000.0 * sc[2] * x1976 + 16040000.0 * sc[2] * x1977 - sc[8] * x10626 -
    16040000.0 * sc[8] * x1338 - x1755 * x748 + x1761 * x748;
  const amrex::Real x10759 =
    2.2e+43 * sc[8] * x0 * exp(-17979.931469202598 * invT - 11.82 * logT);
  const amrex::Real x10782 =
    -16040000.0 * sc[2] * x1979 + 16040000.0 * sc[2] * x1986 -
    24000000.0 * sc[6] * x1979 + 24000000.0 * sc[6] * x1986 - x1767 * x748 +
    x1833 * x748;
  x771 = 0.84 * x10283 * x688 + 6.0 * x688 * x771 / ((x777) * (x777));
  x777 = 90000000.0 * sc[1] * x173 - x10291 * x771 + x10300 * x771 +
         8.8666981132075502e+66 * x10308 * x10310 -
         8.8666981132075502e+66 * x10308 * x10362 +
         x10309 * x10312 * (0.84 * x10314 + 6.0 * x10316) -
         x10309 * x10328 * (0.84 * x10314 + 6.0 * x10316) -
         2.187948e+86 * x10344 * x1539 + 2.187948e+86 * x10346 -
         1.062e+39 * x10359 + 1.062e+39 * x10365 +
         x10368 * (6.0 * x10348 * x688 + 0.84 * x10349 * x688) -
         1.281e+47 * x10514 + 1.2288e+21 * x1155 * x172 + 6.6e+36 * x1287 +
         x1438 * x1527 + x1438 * x2362 - 8.0666666666666698e+65 * x1523 * x356 -
         1.2288e+21 * x172 * x1883 + x2084 * x298 - x2084 * x5558 +
         8.0666666666666698e+65 * x362 + 1.281e+47 * x51 -
         9600000000000000.0 * x585 -
         x701 * (6.0 * x10348 * x688 + 0.84 * x10349 * x688) - 6.6e+36 * x752 +
         9600000000000000.0 * x952;
  x2084 = -30000000.0 * sc[1] * x124 * x1894 + 392000.0 * sc[8] * x1894 +
          x1894 * x2128 + x1894 * x719 + x1979 * x2139 - x1979 * x903 +
          x1979 * x906 + x777;
  x10283 = -16040000.0 * sc[2] * x1979 + 16040000.0 * sc[2] * x1992 -
           24000000.0 * sc[6] * x1979 + 24000000.0 * sc[6] * x1992 -
           x1835 * x748 + x1836 * x748;
  const amrex::Real x10828 = -sc[8] * x10619 - sc[8] * x6247 -
                             330000.0 * sc[8] * exp(-3874.76832669634 * invT) +
                             x1002 * x488 - x1894 * x735 + x1897 * x735;
  const amrex::Real x10854 =
    16040000.0 * sc[2] * x1886 - 16040000.0 * sc[2] * x1999 +
    24000000.0 * sc[6] * x1886 - 24000000.0 * sc[6] * x1999 - x1838 * x748 +
    x1839 * x748;
  const amrex::Real x10874 = x1002 * x1995 - x1843 * x735;
  const amrex::Real x10875 =
    -30000000.0 * sc[1] * x124 * x1843 + 90000000.0 * sc[1] * x1903 +
    392000.0 * sc[8] * x1843 + x10579 + x10874 + x1527 * x1893 + x1843 * x2128 +
    x1843 * x719 + x1890 * x2139 - x1890 * x903 + x1890 * x906 + x1893 * x2362 +
    x1903 * x635 + x5557;
  const amrex::Real x10878 = -x1890 * x897;
  const amrex::Real x10883 =
    -16040000.0 * sc[2] * x1890 - 24000000.0 * sc[6] * x1890 - x1846 * x748;
  const amrex::Real x10886 =
    8480000.0 * sc[8] * x1846 + x154 * x1846 + x1551 * x1846 + x1846 * x2078;
  const amrex::Real x10888 = 24000000.0 * sc[6] * x1956 + x10878 + x10883 +
                             x10886 - x1956 * x2139 + x1956 * x897 +
                             x1956 * x903 - x1956 * x906;
  const amrex::Real x10891 = 32000000.0 * sc[1] * x1893 + x1730 * x2133 -
                             x1730 * x698 - x1730 * x786 + x5532;
  const amrex::Real x10902 =
    -30000000.0 * sc[1] * x124 * x1843 + 30000000.0 * sc[8] * x1058 +
    40000000.0 * sc[8] * x1475 + 392000.0 * sc[8] * x1843 + x10891 -
    x1475 * x2090 - x1475 * x694 + x1527 * x1893 + x1843 * x2128 +
    x1843 * x719 + x1890 * x2139 - x1890 * x903 + x1890 * x906 + x1893 * x2362 +
    x5557;
  const amrex::Real x10934 =
    -16040000.0 * sc[2] * x1890 + 16040000.0 * sc[2] * x1972 -
    24000000.0 * sc[6] * x1890 + 24000000.0 * sc[6] * x1972 - x1775 * x748 +
    x1782 * x748;
  x191 = -4.954e+21 * refC * sc[9] * x1217 * x2356 + 4.954e+21 * x1217 * x2357 -
         9.6622503937007901e+32 * x1408 * x796 +
         9.6622503937007901e+32 * x1642 * x796 - x191 * x373 * x423 +
         x191 * x425;
  x5527 = -4.83112519685039e+32 * x1408 * x796 - 2.477e+21 * x1522 +
          4.83112519685039e+32 * x1642 * x796 - x373 * x423 * x5527 + x373 +
          x425 * x5527;
  const amrex::Real x10984 = -x2143 * x351 - x264 * x351 + x5527;
  const amrex::Real x11012 =
    7.431e+21 * x1217 * x2357 - 1.4493375590551199e+33 * x1408 * x796 -
    7.431e+21 * x1522 + 1.4493375590551199e+33 * x1642 * x796 -
    x373 * x423 * (0.84 * x1101 * x688 + 6.0 * x2365 * x688) +
    x425 * (0.84 * x1101 * x688 + 6.0 * x2365 * x688);
  const amrex::Real x11020 = -392000.0 * sc[8] * x1843;
  const amrex::Real x11022 = -8480000.0 * sc[8] * x1846;
  const amrex::Real x11026 = 11000000.0 * sc[8] * x1995 + x10984 +
                             x1843 * x735 + x1846 * x748 + x1890 * x897 -
                             x1956 * x897;
  const amrex::Real x11030 = -50000000.0 * sc[14] * x1730 +
                             60000000.0 * sc[9] * x1058 + x1034 * x1730 +
                             x11020 + x11022 + x1111 * x1475 + x1843 * x735 +
                             x1846 * x748 + x1890 * x897;
  amrex::Real x11041 = -0.29097730287517898 * x837 +
                       0.43429448190325198 * log(538000000.0 * x833) - 0.4;
  amrex::Real x11042 = -0.14 * x11041 - 0.55155399201712996 * x837 + 0.75;
  const amrex::Real x11048 =
    exp(
      M_LN10 * (0.43429448190325198 * x837 /
                (((x11041) * (x11041)) / ((x11042) * (x11042)) + 1.0))) /
    (538000000.0 * x833 + 1.0);
  const amrex::Real x11050 = 2.69e+16 * sc[10] * x11048 * x833;
  const amrex::Real x11054 =
    3400000.0 * sc[11] * exp(-347.21949940525701 * invT);
  amrex::Real x11080 = ((x11041) * (x11041)) / ((x11042) * (x11042) * (x11042));
  const amrex::Real x11082 =
    4.0 * x11041 * x688 / ((x11042) * (x11042)) + 0.56 * x11080 * x688;
  amrex::Real x11083 =
    x837 / ((((x11041) * (x11041)) / ((x11042) * (x11042)) + 1.0) *
            (((x11041) * (x11041)) / ((x11042) * (x11042)) + 1.0));
  const amrex::Real x11087 = 2.69e+16 * x1095 * x11048 * x11083 * x25;
  x837 = 3.4548997388095799e-18 *
         exp(
           M_LN10 * (0.43429448190325198 * x837 /
                     (((x11041) * (x11041)) / ((x11042) * (x11042)) + 1.0))) /
         ((x833 + 1.8587360594795538e-9) * (x833 + 1.8587360594795538e-9));
  const amrex::Real x11095 = x1039 * x1473 * x837;
  amrex::Real x11099 = x881 / ((x1688) * (x1688));
  amrex::Real x11100 = ((x881) * (x881)) / ((x1688) * (x1688) * (x1688));
  const amrex::Real x11101 = 4.0 * x11099 * x688 + 0.56 * x11100 * x688;
  x253 = x253 / ((1.0 + ((x881) * (x881)) / ((x1688) * (x1688))) *
                 (1.0 + ((x881) * (x881)) / ((x1688) * (x1688))));
  x881 = exp(x1407 + x2319) / (x248 + 1.0);
  x1688 = x1406 * x2313 * x881;
  const amrex::Real x11108 = 2.69e+21 * x1688 * x25 * x253;
  x2319 = x2313 * x594 * exp(x2319) / (x248 + 1.0);
  const amrex::Real x11115 = 2.69e+21 * sc[10] * x2319 * x25 * x253;
  x248 = (1.0 / ((x248 + 1.0) * (x248 + 1.0)));
  amrex::Real x11119 = -4871.1373249896797 * invT - 10.72 * logT;
  const amrex::Real x11121 =
    1.7866913580246899e+37 * sc[10] * x2313 * x248 * x25 * x594 * exp(x11119);
  x1407 = x1406 * x2313 * x25 * exp(x11119 + x1407);
  const amrex::Real x11126 = x1035 * x11048 * x1473;
  x833 = 2.69e+16 * x11048 * x1473 * x833;
  const amrex::Real x11132 = sc[10] * x11083 * x833;
  const amrex::Real x11136 =
    -5.38e+21 * sc[10] * x2319 + 5.38e+16 * x1095 * x11048 - x11082 * x11087 +
    x11082 * x11132 + 2.89444e+25 * x11095 - x11101 * x11108 + x11101 * x11115 +
    x11121 - 5.38e+16 * x11126 - 1.7866913580246899e+37 * x1407 * x248 +
    5.38e+21 * x1688 + 1204.0 * x7379 - 1204.0 * x7383 -
    2.89444e+25 * x837 * x959;
  amrex::Real x11167 =
    2.0 * x11041 * x688 / ((x11042) * (x11042)) + 0.28 * x11080 * x688;
  x253 = x253 * (2.0 * x11099 * x688 + 0.28 * x11100 * x688);
  x11119 = sc[10] * x2313 * x248 * x25 * x594 * exp(x11119);
  const amrex::Real x11183 =
    2.69e+21 * sc[10] * x2319 * x25 * x253 - 2.69e+21 * sc[10] * x2319 -
    2.69e+16 * x1035 * x11048 * x1473 + 1.44722e+25 * x1039 * x1473 * x837 +
    2.69e+16 * x1095 * x11048 - x11087 * x11167 +
    8.9334567901234601e+36 * x11119 + x11132 * x11167 -
    8.9334567901234601e+36 * x1407 * x248 - 2.69e+21 * x1688 * x25 * x253 +
    2.69e+21 * x1688 - 1.44722e+25 * x837 * x959;
  const amrex::Real x11184 = x11183 + 602.0 * x7379 - 602.0 * x7383;
  const amrex::Real x11245 =
    -14000000.0 * sc[11] * x1416 + 14000000.0 * sc[11] * x883 +
    18000.0 * sc[3] * x1056 - 18000.0 * x1040 - 18000.0 * x1241;
  const amrex::Real x11274 =
    -14000000.0 * sc[11] * x1645 + 14000000.0 * sc[11] * x1659 -
    18000.0 * sc[12] * x1219 * x1223 + 18000.0 * sc[3] * x276;
  const amrex::Real x11276 =
    12.0 * x11041 * x688 / ((x11042) * (x11042)) + 1.68 * x11080 * x688;
  const amrex::Real x11296 = 12.0 * x11099 * x688 + 1.68 * x11100 * x688;
  const amrex::Real x11349 = 100000000.0 * sc[2] * x351 + x11184;
  const amrex::Real x11381 = 18000.0 * sc[3] * x1903 + x1903 * x635;
  const amrex::Real x11445 =
    3.0 * x11041 * x688 / ((x11042) * (x11042)) + 0.42 * x11080 * x688;
  const amrex::Real x11458 = 3.0 * x11099 * x688 + 0.42 * x11100 * x688;
  const amrex::Real x11481 = exp(2.0 * g_RT[10] + g_RT[13] - 2.0 * g_RT[16]);
  const amrex::Real x11500 =
    -14000000.0 * sc[11] * x1693 + 14000000.0 * sc[11] * x1694 -
    14000000.0 * sc[12] * x1445 + 18000.0 * sc[3] * x793 -
    18000.0 * sc[4] * x1223 * x162;
  x11041 = x11083 *
           (6.0 * x11041 * x688 / ((x11042) * (x11042)) + 0.84 * x11080 * x688);
  x11042 = 6.0 * x11099 * x688 + 0.84 * x11100 * x688;
  x11080 = sc[10] * x11041 * x833 - 8.07e+21 * sc[10] * x2319 +
           18000.0 * sc[3] * x173 - 8.07e+16 * x1035 * x11048 * x1473 -
           2.69e+16 * x1095 * x11041 * x11048 * x25 +
           8.07e+16 * x1095 * x11048 - x11042 * x11108 + x11042 * x11115 +
           4.34166e+25 * x11095 + 2.6800370370370399e+37 * x11119 +
           8.07e+21 * x1406 * x2313 * x881 -
           2.6800370370370399e+37 * x1407 * x248 + 1806.0 * x7379 -
           1806.0 * x7383 - 4.34166e+25 * x837 * x959;
  x11083 = -14000000.0 * sc[11] * x1730;
  x11099 = x1843 * x46 + x1843 * x863 + x1890 * x731;
  x11100 = -60000000.0 * sc[19] * x1846;
  const amrex::Real x11716 = -40000000.0 * sc[3] * x1730 + x11100 +
                             x1730 * x2065 + x1846 * x309 -
                             10.0 * x1846 * x869 - 10.0 * x1846 * x888;
  const amrex::Real x11735 = -50000000.0 * sc[16] * x1058;
  const amrex::Real x11757 = x11022 + x11099 + x11349 + x1846 * x309 -
                             10.0 * x1846 * x869 - 10.0 * x1846 * x888;
  const amrex::Real x11758 = -30000000.0 * sc[16] * x1475 + x1058 * x11050 -
                             x1058 * x11054 + x11757 + x1475 * x2187 +
                             x1475 * x2321 + x1475 * x584;
  const amrex::Real x11824 = -602.0 * x7379 + 602.0 * x7383;
  const amrex::Real x11829 = 10000000.0 * sc[3] * x351 + x11824 - x1846 * x309;
  const amrex::Real x11831 =
    x1058 * x11054 - 2640000.0 * x1475 * x2094 + x1475 * x2325 + x1475 * x891;
  x859 =
    3.3440366972477102e+18 * x1279 * x960 + 2700000000000.0 * x1850 +
    1.19557674418605e+30 * x255 * x508 - 1.19557674418605e+30 * x255 * x994 +
    x313 * (4.0 * x271 * x688 + 0.56 * x601 * x688) + 1.014e+16 * x528 * x774 -
    x579 * (4.0 * x271 * x688 + 0.56 * x601 * x688) -
    3.3440366972477102e+18 * x674 * x960 - 1.014e+16 * x774 * x899 -
    x859 * x877 + x859 * x904 - 2700000000000.0 * x958;
  x533 = sc[0] * sc[10] * x781 + sc[1] * x2088 * x433 +
         1.67201834862385e+18 * x1279 * x960 - x2088 * x401 * x433 * x788 +
         1350000000000.0 * x25 * x401 * x958 +
         5.9778837209302301e+29 * x255 * x508 -
         5.9778837209302301e+29 * x255 * x994 - x533 * x877 + x533 * x904 -
         1.67201834862385e+18 * x674 * x960 - 5070000000000000.0 * x774 * x899 -
         1350000000000.0 * x958;
  x401 = 96000000.0 * sc[2] * x1995 + 24000000.0 * sc[6] * x1995;
  x1278 = 20000000.0 * sc[1] * x1438 + 5000000.0 * sc[4] * x1438 -
          4050000000000.0 * x1278 * x644 +
          5.0160550458715597e+18 * x1279 * x960 + 4050000000000.0 * x1850 +
          1.79336511627907e+30 * x255 * x508 -
          1.79336511627907e+30 * x255 * x994 +
          x313 * (6.0 * x271 * x688 + 0.84 * x601 * x688) - x472 * x877 +
          x472 * x904 + 1.521e+16 * x528 * x774 -
          x579 * (6.0 * x271 * x688 + 0.84 * x601 * x688) -
          5.0160550458715597e+18 * x674 * x960 - 1.521e+16 * x774 * x899;
  x472 = 20000000.0 * sc[1] * x1893 + 5000000.0 * sc[4] * x1893 +
         x1529 * x1846 - x1544 * x1843 - x1846 * x2093 + x1890 * x695 + x533;
  const amrex::Real x11851 = exp(x146) / x687;
  const amrex::Real x11852 = x5 / ((x687) * (x687));
  const amrex::Real x11854 =
    sc[13] * exp(-24481.490791399599 * invT - 0.76 * logT);
  const amrex::Real x11856 =
    x723 * exp(-24481.490791399599 * invT - 0.76 * logT + x7);
  x7 = x723 * exp(x146 + x7) / x687;
  x687 = -4900000000.0 * sc[13] * x11851 + x10377 + 15006.25 * x11852 * x11854 -
         15006.25 * x11852 * x11856 + 4900000000.0 * x7;
  x146 = -2450000000.0 * sc[13] * x11851 + x10377 + 7503.125 * x11852 * x11854 -
         7503.125 * x11852 * x11856 + 2450000000.0 * x7;
  const amrex::Real x11865 = 100000000.0 * sc[1] * x351 + x146 + x351 * x703;
  const amrex::Real x11870 =
    -6125000000.0 * sc[13] * x11851 - 30000000.0 * sc[1] * x1894 + x10377 +
    18757.8125 * x11852 * x11854 - 18757.8125 * x11852 * x11856 - x1894 * x46 +
    x2098 + 6125000000.0 * x7;
  const amrex::Real x11871 = -30000000.0 * sc[1] * x1843 - x1843 * x46;
  x1364 = 7.0e+44 * sc[14] * x1364 * x25 * x675 - 1.4e+45 * sc[14] * x675 +
          2.8e+18 * sc[1] * x1635 - 2.8e+18 * x1137 * x426 +
          6.4473684210526297e+29 * x1140 * x641 - 7.0e+44 * x1364 * x25 * x670 +
          1.225e+77 * x1365 * x673 - 6.4473684210526297e+29 * x1737 * x641 -
          1.225e+77 * x30 * x673 + x420 * x911 - x420 * x955 + 1.4e+45 * x670;
  x420 = -7.0e+44 * sc[14] * x675 + 1.4e+18 * sc[1] * x1635 -
         x1006 * (0.28 * x1078 * x688 + 2.0 * x1242 * x688) +
         x1008 * (0.28 * x1078 * x688 + 2.0 * x1242 * x688) +
         1.4e+18 * x1137 * x143 * x25 * x426 - 1.4e+18 * x1137 * x426 +
         3.2236842105263198e+29 * x1140 * x641 + 6.125e+76 * x1365 * x673 -
         1.4e+18 * x143 * x1635 * x788 - 3.2236842105263198e+29 * x1737 * x641 -
         6.125e+76 * x30 * x673 + 7.0e+44 * x670;
  x143 = x2051 * x351 + x264 * x351;
  x2086 = -2.1e+45 * sc[14] * x675 + 4.2e+18 * sc[1] * x1635 -
          x1006 * (0.84 * x1078 * x688 + 6.0 * x1242 * x688) +
          x1008 * (0.84 * x1078 * x688 + 6.0 * x1242 * x688) -
          4.2e+18 * x1137 * x426 + 9.6710526315789494e+29 * x1140 * x641 +
          1.8375e+77 * x1365 * x673 - 9.6710526315789494e+29 * x1737 * x641 +
          x2086 * x911 - x2086 * x955 - 1.8375e+77 * x30 * x673 +
          2.1e+45 * x670;
  x500 = -x1894 * x2031 - x1894 * x2104 - x1979 * x2155 - x1979 * x731 + x2086 +
         x500;
  const amrex::Real x11888 = -x1843 * x2104 - x1890 * x731 + x420 + x913;
  const amrex::Real x11889 =
    2000000.0 * sc[1] * x1956 + x11888 + 10.0 * x1846 * x888 + x1956 * x731;
  x970 =
    3.98e+29 * sc[1] * x968 + x1018 * (0.56 * x688 * x970 + 4.0 * x688 * x989) -
    2.9555660377358502e+66 * x10308 * x10310 +
    2.9555660377358502e+66 * x10308 * x10362 -
    1.77e+38 * x10309 * x10359 * (0.56 * x10314 + 4.0 * x10316) +
    1.77e+38 * x10309 * x10365 * (0.56 * x10314 + 4.0 * x10316) + x10312 -
    x10328 - 3.98e+29 * x1341 * x1342 + 1.5201919385796501e+47 * x431 * x829 -
    1.5201919385796501e+47 * x431 * x966 -
    x885 * (0.56 * x688 * x970 + 4.0 * x688 * x989);
  x989 = 1.99e+29 * sc[1] * x968 - 1.47778301886792e+66 * x10308 * x10310 +
         1.47778301886792e+66 * x10308 * x10362 -
         1.77e+38 * x10309 * x10359 * (0.28 * x10314 + 2.0 * x10316) +
         1.77e+38 * x10309 * x10365 * (0.28 * x10314 + 2.0 * x10316) +
         1.77e+38 * x10359 - 1.77e+38 * x10365 +
         1.99e+29 * x1341 * x1342 * x25 * x526 - 1.99e+29 * x1341 * x1342 +
         7.6009596928982695e+46 * x431 * x829 -
         7.6009596928982695e+46 * x431 * x966 - 1.99e+29 * x526 * x788 * x968;
  x526 = 5.97e+29 * sc[1] * x968 + x1018 * x1629 -
         4.4333490566037699e+66 * x10308 * x10310 +
         4.4333490566037699e+66 * x10308 * x10362 -
         1.77e+38 * x10309 * x10359 * (0.84 * x10314 + 6.0 * x10316) +
         1.77e+38 * x10309 * x10365 * (0.84 * x10314 + 6.0 * x10316) +
         5.31e+38 * x10359 - 5.31e+38 * x10365 - 5.97e+29 * x1341 * x1342 -
         x1629 * x885 + 2.2802879078694799e+47 * x431 * x829 -
         2.2802879078694799e+47 * x431 * x966;
  x1629 = -x1890 * x2132 - x1890 * x906 + x989;
  const amrex::Real x11907 = 300000.0 * sc[6] * x1956 + x10194 + x10878 +
                             x1955 * x1956 + x1956 * x2132 + x1956 * x2196 +
                             x1956 * x2361 + x1956 * x648 + x1956 * x897 +
                             x1956 * x906 + x2091 + x8066 + x8762 + x9717;
  const amrex::Real x11909 = -5.38e+16 * x1095 * x11048 + x11082 * x11087 -
                             x11082 * x11132 - 2.89444e+25 * x11095 +
                             5.38e+16 * x11126 + 2.89444e+25 * x837 * x959;
  x1039 = 2.69e+16 * x1035 * x11048 * x1473 -
          1.44722e+25 * x1039 * x1473 * x837 - 2.69e+16 * x1095 * x11048 +
          x11087 * x11167 - x11132 * x11167 + 1.44722e+25 * x837 * x959;
  x1035 = -sc[10] * x11041 * x833 + 8.07e+16 * x1035 * x11048 * x1473 +
          2.69e+16 * x1095 * x11041 * x11048 * x25 - 8.07e+16 * x1095 * x11048 -
          4.34166e+25 * x11095 + 4.34166e+25 * x837 * x959;
  x11167 = 50000000.0 * sc[16] * x1058 + 30000000.0 * sc[16] * x1475 + x1039 -
           x1058 * x11050 - x1843 * x863;
  x11041 = 5.38e+21 * sc[10] * x2319 + x11101 * x11108 - x11101 * x11115 -
           x11121 + 1.7866913580246899e+37 * x1407 * x248 - 5.38e+21 * x1688;
  x253 = -2.69e+21 * sc[10] * x2319 * x25 * x253 + 2.69e+21 * sc[10] * x2319 -
         8.9334567901234601e+36 * x11119 +
         8.9334567901234601e+36 * x1407 * x248 + 2.69e+21 * x1688 * x25 * x253 -
         2.69e+21 * x1688;
  const amrex::Real x11922 =
    140000.0 * sc[3] * x1903 + x1075 + x1903 * x2371 + x253 + x7733;
  const amrex::Real x11924 = 20000000.0 * sc[1] * x1960 * x792 +
                             20000000.0 * sc[2] * x1960 * x792 +
                             140000.0 * sc[3] * x792 + x11041 + x2371 * x792;
  x1406 = 8.07e+21 * sc[10] * x2319 + 20000000.0 * sc[1] * x173 * x1960 +
          20000000.0 * sc[2] * x173 * x1960 + 140000.0 * sc[3] * x173 +
          x11042 * x11108 - x11042 * x11115 - 2.6800370370370399e+37 * x11119 -
          8.07e+21 * x1406 * x2313 * x881 +
          2.6800370370370399e+37 * x1407 * x248 + x173 * x2371;
  x11042 = -x1058 * x630 - x1475 * x2321;
  x1067 = 1.04e+28 * x1024 + x10286 * x10291 - x10286 * x10300 -
          5.408e+47 * x1055 + 5.408e+47 * x1062 * x1511 - x1067 * x1087 * x180 +
          x1067 * x180 * x554 - 4.4e+36 * x1287 - 1.04e+28 * x1414 +
          5.3777777777777799e+65 * x1523 * x356 -
          5.3777777777777799e+65 * x362 + 4.4e+36 * x752;
  x5550 = 5.2e+27 * x1024 + x10291 * x10403 - x10300 * x10403 -
          2.704e+47 * x1055 + 2.704e+47 * x1062 * x1511 - x1087 * x180 * x5550 -
          2.2e+36 * x1287 - 5.2e+27 * x1414 +
          2.6888888888888899e+65 * x1523 * x356 + x180 * x554 * x5550 -
          2.6888888888888899e+65 * x362 + 2.2e+36 * x752;
  x180 = 1.56e+28 * x1024 + x10291 * x771 - x10300 * x771 - 8.112e+47 * x1055 +
         8.112e+47 * x1062 * x1511 - x1087 * x180 * x2183 - 6.6e+36 * x1287 -
         1.56e+28 * x1414 + 8.0666666666666698e+65 * x1523 * x356 +
         x173 * x2192 + x180 * x2183 * x554 - 8.0666666666666698e+65 * x362 +
         6.6e+36 * x752;
  x2183 = -sc[19] * x10372 + sc[8] * x10375;
  x10286 = -50000000.0 * sc[14] * x1730 + 60000000.0 * sc[19] * x1846 + x10191 -
           x1843 * x2128 + x2183 + x6104;
  x1199 = 1.458632e+86 * x10344 * x1539 - 1.458632e+86 * x10346 -
          x10368 * (4.0 * x10348 * x688 + 0.56 * x10349 * x688) -
          8.54e+46 * x1199 * x707 - 1.7689e+88 * x1622 * x2018 -
          x185 * x31 * (0.56 * x1722 * x688 + 4.0 * x1970 * x688) +
          x185 * x455 * (0.56 * x1722 * x688 + 4.0 * x1970 * x688) -
          2.66e+48 * x1948 * x1973 + 2.66e+48 * x1948 * x1978 +
          1.7689e+88 * x2018 * x2040 + 8.54e+46 * x234 * x707 * x708 +
          x701 * (4.0 * x10348 * x688 + 0.56 * x10349 * x688);
  x708 = 7.29316e+85 * x10344 * x1539 - 7.29316e+85 * x10346 -
         x10368 * (2.0 * x10348 * x688 + 0.28 * x10349 * x688) -
         8.8445e+87 * x1622 * x2018 -
         x185 * x31 * (0.28 * x1722 * x688 + 2.0 * x1970 * x688) +
         x185 * x455 * (0.28 * x1722 * x688 + 2.0 * x1970 * x688) -
         1.33e+48 * x1948 * x1973 + 1.33e+48 * x1948 * x1978 +
         8.8445e+87 * x2018 * x2040 + 4.27e+46 * x234 * x707 * x708 -
         4.27e+46 * x51 + x701 * (2.0 * x10348 * x688 + 0.28 * x10349 * x688);
  x10403 = 1800000.0 * sc[1] * x1995 + 90000.0 * sc[3] * x1995 +
           11000000.0 * sc[8] * x1995 + x1090 * x1995 + x5601 + x9326;
  x1722 = 2.187948e+86 * x10344 * x1539 - 2.187948e+86 * x10346 -
          x10368 * (6.0 * x10348 * x688 + 0.84 * x10349 * x688) +
          1.281e+47 * x10514 - 2.65335e+88 * x1622 * x2018 -
          x185 * x31 * (0.84 * x1722 * x688 + 6.0 * x1970 * x688) +
          x185 * x455 * (0.84 * x1722 * x688 + 6.0 * x1970 * x688) -
          3.99e+48 * x1948 * x1973 + 3.99e+48 * x1948 * x1978 +
          2.65335e+88 * x2018 * x2040 - 1.281e+47 * x51 +
          x701 * (6.0 * x10348 * x688 + 0.84 * x10349 * x688);
  x1970 = -x1843 * x719 + x708;
  // Write the full Jacobian expression...
  J[0] = -180000.0 * refC * sc[0] * exp(-0.6 * logT + x322) -
         550000000.0 * refC * sc[11] * exp(-2.0 * logT + x322) -
         60000000.0 * refC * sc[5] * exp(-1.25 * logT + x322) -
         7.0e+44 * refCinv * x2049 * x25 * x723 + 70000000.0 * sc[0] * x1016 -
         70000000.0 * sc[0] * x988 - 20000000.0 * sc[12] * x1431 -
         30000000.0 * sc[13] * x1149 - 32000000.0 * sc[13] * x1369 -
         2000000.0 * sc[14] * x1321 - 50000000.0 * sc[16] * x76 -
         sc[17] * x642 - sc[19] * x714 +
         90000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * logT) -
         30000000.0 * sc[1] * x1016 + 1800000.0 * sc[1] * x1240 +
         20000000.0 * sc[1] * x1884 + 90000000.0 * sc[1] * x726 -
         90000000.0 * sc[1] * x826 + 2000000.0 * sc[1] * x909 -
         2000000.0 * sc[1] * x935 + 30000000.0 * sc[1] * x988 -
         1800000.0 * sc[20] * x1301 - sc[2] * x633 - sc[3] * x559 -
         sc[6] * x422 - sc[8] * x666 + x1235 * x2023 + x1470 - x1473 * x1474 -
         30000000.0 * x1473 * x588 + x1476 * x562 + x1476 * x600 -
         x1955 * x909 + x1955 * x935 - x2024 * x649 + x2024 * x651 -
         x2025 * x433 - x2027 * x830 + x2027 * x951 - x2028 * x234 -
         x2031 * x726 + x2031 * x826 + x2036 * x649 - x2036 * x651 -
         x2038 * x821 - x2051 * x821 - x2056 * x440 - 1000000.0 * x439 * x551 -
         x556 - 60000000.0 * x56 * x723 - x562 * x973 - 70000000.0 * x593 -
         0.5 * x594 * exp(-3638.25649376812 * invT + 2.0 * logT) - x600 * x973 +
         x620 +
         (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
          73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
          15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 +
          x2031 * x683 - x2036 * x677) *
           (-x1476 + x973) +
         (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
          73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
          15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 +
          x2038 * x660 + x2051 * x660) *
           (-x649 + x651 + (x677) * (-x1476 + x973)) +
         (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
           (x726 - x826 + (-x683) * (-x1476 + x973) +
            (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
            (x685) *
              (x830 - x951 + (x680) * (-x1476 + x973) +
               (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
               (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                         (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
         (-1800000.0 * sc[1] * x490) *
           (x909 - x935 +
            (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
            (-x558) *
              (x830 - x951 + (x680) * (-x1476 + x973) +
               (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
               (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                         (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
         (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
          73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 +
          x2038 * x603 + x2051 * x603) *
           (-x1016 + x988 + (x678) * (-x1476 + x973) +
            (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
         (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
          x2023 * x435 - x2031 * x685) *
           (x830 - x951 + (x680) * (-x1476 + x973) +
            (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
            (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                      (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[23] =
    180000.0 * sc[0] * sc[1] * exp(-0.6 * logT) + 70000000.0 * sc[0] * x1073 -
    30000000.0 * sc[0] * x1636 * x588 - 70000000.0 * sc[0] * x985 +
    1100000000.0 * sc[11] * sc[1] * x811 + sc[12] * x1176 + sc[14] * x802 +
    sc[15] * x1462 + 50000000.0 * sc[17] * x1029 +
    120000000.0 * sc[1] * sc[5] * exp(-1.25 * logT) +
    90000000.0 * sc[1] * x1061 - 30000000.0 * sc[1] * x1073 +
    2000000.0 * sc[1] * x1275 * x439 + 20000000.0 * sc[1] * x1422 -
    2000000.0 * sc[1] * x1504 + 20000000.0 * sc[1] * x1960 * x211 +
    1800000.0 * sc[1] * x476 + 2000000.0 * sc[1] * x523 -
    90000000.0 * sc[1] * x950 + 30000000.0 * sc[1] * x985 + sc[4] * x1169 +
    sc[5] * x922 + sc[6] * x1141 + sc[7] * x50 + sc[8] * x1281 +
    70000000.0 * sc[8] * x1466 - x1061 * x2031 - x1065 * x2027 -
    1800000.0 * x1319 + x14 - 20000000.0 * x1439 + x1485 + x1504 * x1955 -
    x1623 * x2038 - x1623 * x2051 - x1636 * x600 + x1653 * x594 + x1708 * x562 +
    x1708 * x600 + x187 - x1955 * x523 - x2024 * x857 + x2024 * x964 +
    x2027 * x971 + x2031 * x950 + x2036 * x857 - x2036 * x964 +
    90000000.0 * x234 + x34 + 2000000.0 * x440 - 20000000.0 * x513 -
    1800000.0 * x581 + 30000000.0 * x593 + x839 + x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1636 - x1708) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[46] =
    70000000.0 * sc[0] * x315 - 70000000.0 * sc[0] * x318 - sc[0] * x633 +
    90000000.0 * sc[1] * x140 - 90000000.0 * sc[1] * x1556 +
    1800000.0 * sc[1] * x1654 - 2000000.0 * sc[1] * x1656 +
    73400000.0 * sc[1] * x1664 + 20000000.0 * sc[1] * x1678 +
    2000000.0 * sc[1] * x1721 - 30000000.0 * sc[1] * x315 +
    30000000.0 * sc[1] * x318 - 73400000.0 * sc[1] * x759 - x140 * x2031 +
    x1485 + x1507 + x1556 * x2031 + x1656 * x1955 - x1664 * x2027 -
    x1721 * x1955 - x1723 * x2038 - x1723 * x2051 - x1772 * x562 -
    x1772 * x600 + x1794 * x562 + x1794 * x600 + x2023 * x224 - x2024 * x965 +
    x2024 * x972 + x2027 * x759 + x2036 * x965 - x2036 * x972 + x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1772 - x1794) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[69] =
    70000000.0 * sc[0] * x1416 - sc[0] * x559 - 70000000.0 * sc[0] * x883 +
    20000000.0 * sc[1] * x1056 * x1960 - 30000000.0 * sc[1] * x1416 -
    90000000.0 * sc[1] * x1627 + 90000000.0 * sc[1] * x1630 -
    73400000.0 * sc[1] * x1666 + 73400000.0 * sc[1] * x1672 +
    1800000.0 * sc[1] * x1733 - 2000000.0 * sc[1] * x1762 +
    2000000.0 * sc[1] * x1764 + 20000000.0 * sc[1] * x1765 +
    30000000.0 * sc[1] * x883 - 15000000.0 * sc[2] * x1416 +
    15000000.0 * sc[2] * x883 + x1485 + x1627 * x2031 - x1630 * x2031 +
    x1666 * x2027 - x1672 * x2027 - x1757 * x2038 - x1757 * x2051 +
    x1762 * x1955 - x1764 * x1955 - x1829 * x562 - x1829 * x600 + x1853 * x562 +
    x1853 * x600 - x2024 * x974 + x2024 * x976 + x2036 * x974 - x2036 * x976 +
    x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1829 - x1853) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[92] =
    70000000.0 * sc[0] * x1645 - 70000000.0 * sc[0] * x1659 + sc[1] * x1169 -
    30000000.0 * sc[1] * x1645 + 30000000.0 * sc[1] * x1659 -
    90000000.0 * sc[1] * x1677 + 90000000.0 * sc[1] * x1699 -
    73400000.0 * sc[1] * x1700 + 2000000.0 * sc[1] * x1776 -
    2000000.0 * sc[1] * x1798 + 20000000.0 * sc[1] * x1879 +
    1800000.0 * sc[1] * x219 + 73400000.0 * sc[1] * x398 -
    15000000.0 * sc[2] * x1645 + 15000000.0 * sc[2] * x1659 + x1485 +
    x1677 * x2031 - x1699 * x2031 + x1700 * x2027 - x1776 * x1955 +
    x1798 * x1955 - x1831 * x2038 - x1831 * x2051 - x1885 * x562 -
    x1885 * x600 + x1899 * x562 + x1899 * x600 + x2023 * x276 - x2024 * x977 +
    x2024 * x982 - x2027 * x398 + x2036 * x977 - x2036 * x982 - x221 + x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1885 - x1899) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-1800000.0 * sc[1] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[115] =
    -60000000.0 * refC * sc[0] * exp(-1.25 * logT + x322) +
    70000000.0 * sc[0] * x1660 - 70000000.0 * sc[0] * x1662 +
    4.2e+45 * sc[14] * x675 +
    60000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * logT) -
    30000000.0 * sc[1] * x1660 + 30000000.0 * sc[1] * x1662 +
    90000000.0 * sc[1] * x1668 - 90000000.0 * sc[1] * x1741 -
    2000000.0 * sc[1] * x1779 + 2000000.0 * sc[1] * x1856 +
    20000000.0 * sc[1] * x1888 + 1800000.0 * sc[1] * x1946 + sc[1] * x922 +
    x1006 * (1.68 * x1078 * x688 + 12.0 * x1242 * x688) -
    x1008 * (1.68 * x1078 * x688 + 12.0 * x1242 * x688) + x1010 * x2024 -
    x1010 * x2036 - 3.675e+77 * x1365 * x673 - x1668 * x2031 + x1741 * x2031 +
    x1760 * x2027 - x1768 * x2027 + x1779 * x1955 + x1793 * x2023 -
    x1844 * x2038 - x1844 * x2051 - x1856 * x1955 - x1954 * x562 -
    x1954 * x600 + x1980 * x562 + x1980 * x600 - x2024 * x987 + x2036 * x987 -
    4.2e+45 * x2049 * x27 * x723 + 3.675e+77 * x30 * x673 + x408 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1954 - x1980) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[138] =
    70000000.0 * sc[0] * x1665 - 70000000.0 * sc[0] * x1670 - sc[0] * x422 +
    sc[1] * x1141 + 20000000.0 * sc[1] * x1419 - 30000000.0 * sc[1] * x1665 +
    30000000.0 * sc[1] * x1670 - 90000000.0 * sc[1] * x1759 +
    90000000.0 * sc[1] * x1769 - 73400000.0 * sc[1] * x1770 +
    73400000.0 * sc[1] * x1771 - 2000000.0 * sc[1] * x1851 +
    2000000.0 * sc[1] * x1878 + 1800000.0 * sc[1] * x1985 -
    15000000.0 * sc[2] * x1665 + 15000000.0 * sc[2] * x1670 - x1012 * x2024 +
    x1012 * x2036 + x1014 * x2024 - x1014 * x2036 + x1485 + x1759 * x2031 -
    x1769 * x2031 + x1770 * x2027 - x1771 * x2027 + x1842 * x2023 +
    x1851 * x1955 - x1878 * x1955 - x2022 * x562 - x2022 * x600 + x2045 * x562 +
    x2045 * x600 + x369 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x2022 - x2045) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[161] =
    70000000.0 * sc[0] * x1673 - 70000000.0 * sc[0] * x1674 -
    30000000.0 * sc[1] * x1673 + 30000000.0 * sc[1] * x1674 -
    90000000.0 * sc[1] * x1786 + 20000000.0 * sc[1] * x1893 +
    2000000.0 * sc[1] * x1898 - 2000000.0 * sc[1] * x1906 +
    1800000.0 * sc[1] * x1995 + 90000000.0 * sc[1] * x202 + sc[1] * x50 -
    x1015 * x2024 + x1015 * x2036 + x1019 * x2024 - x1019 * x2036 + x106 +
    x1075 + x1780 * x2027 - x1781 * x2027 + x1786 * x2031 - x1898 * x1955 +
    x1906 * x1955 - x202 * x2031 - x2081 * x562 - x2081 * x600 + x2099 * x562 +
    x2099 * x600 + x369 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x2081 - x2099) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-1800000.0 * sc[1] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[184] =
    70000000.0 * sc[0] * x1680 - 70000000.0 * sc[0] * x1681 - sc[0] * x666 +
    sc[1] * x1281 + 70000000.0 * sc[1] * x1466 - 30000000.0 * sc[1] * x1680 +
    30000000.0 * sc[1] * x1681 + 20000000.0 * sc[1] * x1727 -
    73400000.0 * sc[1] * x1788 + 73400000.0 * sc[1] * x1789 -
    90000000.0 * sc[1] * x1792 + 90000000.0 * sc[1] * x1832 -
    2000000.0 * sc[1] * x1947 + 2000000.0 * sc[1] * x1958 +
    1800000.0 * sc[1] * x453 - 15000000.0 * sc[2] * x1680 +
    15000000.0 * sc[2] * x1681 - x1022 * x2024 + x1022 * x2036 + x1025 * x2024 -
    x1025 * x2036 + x1238 * x2023 + x1485 + x1788 * x2027 - x1789 * x2027 +
    x1792 * x2031 - x1832 * x2031 + x1947 * x1955 - x1955 * x1958 -
    x2123 * x562 - x2123 * x600 + x2149 * x562 + x2149 * x600 + x369 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x2123 - x2149) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[207] =
    70000000.0 * sc[0] * x1683 - 70000000.0 * sc[0] * x1689 -
    2000000.0 * sc[0] * x551 + 2000000.0 * ((sc[1]) * (sc[1])) * x1275 -
    30000000.0 * sc[1] * x1683 + 30000000.0 * sc[1] * x1689 -
    90000000.0 * sc[1] * x1834 + 90000000.0 * sc[1] * x1848 -
    2000000.0 * sc[1] * x1959 + 20000000.0 * sc[1] * x1960 * x792 +
    2000000.0 * sc[1] * x1964 + 1800000.0 * sc[1] * x2020 +
    20000000.0 * sc[1] * x637 - x1049 * x2024 + x1049 * x2036 + x1053 * x2024 -
    x1053 * x2036 + x1127 + x1470 + x151 + x1791 * x2027 - x1797 * x2027 +
    x1834 * x2031 - x1848 * x2031 + x1955 * x1959 - x1955 * x1964 -
    x2038 * x816 - x2051 * x816 - x2138 * x562 - x2138 * x600 + x2197 * x562 +
    x2197 * x600 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x2138 - x2197) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[230] =
    70000000.0 * sc[0] * x1693 - 70000000.0 * sc[0] * x1694 -
    30000000.0 * sc[0] * x2184 * x588 - 1000000.0 * sc[0] * x551 +
    1.05e+45 * sc[14] * x675 + 1000000.0 * ((sc[1]) * (sc[1])) * x1275 +
    20000000.0 * sc[1] * x1003 - 30000000.0 * sc[1] * x1693 +
    30000000.0 * sc[1] * x1694 + 90000000.0 * sc[1] * x1840 -
    90000000.0 * sc[1] * x1861 + 20000000.0 * sc[1] * x1960 * x793 -
    2000000.0 * sc[1] * x1965 + 1800000.0 * sc[1] * x2021 +
    2000000.0 * sc[1] * x646 +
    x1006 * (0.42 * x1078 * x688 + 3.0 * x1242 * x688) -
    x1008 * (0.42 * x1078 * x688 + 3.0 * x1242 * x688) - x1066 * x2024 +
    x1066 * x2036 + x1068 * x2024 - x1068 * x2036 - 9.1875e+76 * x1365 * x673 +
    x1801 * x2027 - x1804 * x2027 - x1840 * x2031 + x1861 * x2031 +
    x1955 * x1965 - x1955 * x646 - x2038 * x65 - x2051 * x65 - x2184 * x600 +
    x2274 * x562 + x2274 * x600 + 9.1875e+76 * x30 * x673 + x467 -
    1.05e+45 * x670 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x2184 - x2274) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[253] =
    -550000000.0 * refC * sc[0] * exp(-2.0 * logT + x322) +
    70000000.0 * sc[0] * x1695 - 70000000.0 * sc[0] * x1697 +
    550000000.0 * ((sc[1]) * (sc[1])) * x811 - 30000000.0 * sc[1] * x1695 +
    30000000.0 * sc[1] * x1697 - 90000000.0 * sc[1] * x1845 +
    20000000.0 * sc[1] * x1960 * x792 + 20000000.0 * sc[1] * x637 -
    2000000.0 * sc[1] * x655 + 90000000.0 * sc[1] * x725 +
    2000000.0 * sc[1] * x908 + 1800000.0 * sc[1] * x930 + x1071 * x2024 -
    x1071 * x2036 + x1336 + x1470 - x1555 * x562 - x1555 * x600 -
    x1696 * x2027 + x1806 * x2027 + x1845 * x2031 + x1955 * x655 -
    x1955 * x908 - x2024 * x661 - x2031 * x725 + x2036 * x661 - x2038 * x602 -
    x2051 * x602 + x2326 * x562 + x2326 * x600 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1555 - x2326) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[276] =
    -20000000.0 * sc[0] * x1431 + 70000000.0 * sc[0] * x1701 -
    70000000.0 * sc[0] * x1702 + sc[1] * x1176 + 1800000.0 * sc[1] * x1502 +
    20000000.0 * sc[1] * x1572 - 30000000.0 * sc[1] * x1701 +
    30000000.0 * sc[1] * x1702 - 90000000.0 * sc[1] * x1880 +
    90000000.0 * sc[1] * x1887 + 20000000.0 * sc[1] * x1960 * x228 -
    2000000.0 * sc[1] * x1976 + 2000000.0 * sc[1] * x1977 - x1021 * x562 -
    x1021 * x600 - x1072 * x2024 + x1072 * x2036 + x1076 * x2024 -
    x1076 * x2036 + x1343 + x1485 + x1755 * x2027 - x1761 * x2027 +
    x1880 * x2031 - x1887 * x2031 + x1955 * x1976 - x1955 * x1977 +
    x2366 * x562 + x2366 * x600 + x369 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x1021 - x2366) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[299] =
    -30000000.0 * sc[0] * x1149 - 32000000.0 * sc[0] * x1369 +
    70000000.0 * sc[0] * x1704 - 70000000.0 * sc[0] * x1706 -
    30000000.0 * sc[1] * x1704 + 30000000.0 * sc[1] * x1706 -
    90000000.0 * sc[1] * x1894 + 90000000.0 * sc[1] * x1896 -
    2000000.0 * sc[1] * x1979 + 2000000.0 * sc[1] * x1986 +
    1800000.0 * sc[1] * x1995 - x1077 * x2024 + x1077 * x2036 + x1081 * x2024 -
    x1081 * x2036 + x114 + x1767 * x2027 - x1833 * x2027 + x1894 * x2031 -
    x1896 * x2031 + x1955 * x1979 - x1955 * x1986 - x2038 * x659 -
    x2051 * x659 + x2354 * x562 + x2354 * x600 - x562 * x742 - x600 * x742 +
    x946 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x2354 + x742) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[322] =
    -2000000.0 * sc[0] * x1321 + 70000000.0 * sc[0] * x1707 -
    70000000.0 * sc[0] * x1709 - 30000000.0 * sc[1] * x1707 +
    30000000.0 * sc[1] * x1709 - 90000000.0 * sc[1] * x1894 +
    90000000.0 * sc[1] * x1897 - 2000000.0 * sc[1] * x1979 +
    2000000.0 * sc[1] * x1992 + 1800000.0 * sc[1] * x488 + sc[1] * x802 -
    x1083 * x2024 + x1083 * x2036 + x1089 * x2024 - x1089 * x2036 +
    x1174 * x562 + x1174 * x600 - x1231 * x562 - x1231 * x600 + x1835 * x2027 -
    x1836 * x2027 + x1894 * x2031 - x1897 * x2031 + x1955 * x1979 -
    x1955 * x1992 - x2038 * x820 - x2051 * x820 + 7.0e+44 * x25 * x675 + x946 +
    x947 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1174 + x1231) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[345] =
    -sc[0] * x1474 * x81 + 70000000.0 * sc[0] * x1711 -
    70000000.0 * sc[0] * x1719 - 30000000.0 * sc[0] * x588 * x81 +
    sc[1] * x1462 - 30000000.0 * sc[1] * x1711 + 1800000.0 * sc[1] * x1716 +
    30000000.0 * sc[1] * x1719 + 90000000.0 * sc[1] * x1841 +
    2000000.0 * sc[1] * x1886 - 90000000.0 * sc[1] * x1904 -
    2000000.0 * sc[1] * x1999 + x1046 - x1091 * x2024 + x1091 * x2036 -
    x1135 * x2038 - x1135 * x2051 + x116 * x562 + x116 * x600 + x1366 * x2024 -
    x1366 * x2036 + x1838 * x2027 - x1839 * x2027 - x1841 * x2031 -
    x1886 * x1955 + x1904 * x2031 + x1955 * x1999 + x946 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x116 + x81) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-1800000.0 * sc[1] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[368] =
    -70000000.0 * sc[0] * x1731 - 50000000.0 * sc[0] * x76 +
    90000000.0 * sc[1] * x169 + 30000000.0 * sc[1] * x1731 +
    73400000.0 * sc[1] * x1849 + 2000000.0 * sc[1] * x1956 +
    15000000.0 * sc[2] * x1731 + x1047 + x1075 - x1367 * x2024 + x1367 * x2036 +
    x1472 * x2024 - x1472 * x2036 + x1625 * x562 + x1625 * x600 - x169 * x2031 -
    x1849 * x2027 - x1955 * x1956 - x562 * x848 - x600 * x848 + x913 + x933 +
    x939 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1625 + x848) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[391] =
    70000000.0 * sc[0] * x1730 - 70000000.0 * sc[0] * x1739 - sc[0] * x642 +
    50000000.0 * sc[1] * x1029 - 30000000.0 * sc[1] * x1730 +
    30000000.0 * sc[1] * x1739 + 73400000.0 * sc[1] * x1852 +
    90000000.0 * sc[1] * x1882 + 20000000.0 * sc[1] * x1893 +
    2000000.0 * sc[1] * x1956 + 20000000.0 * sc[1] * x1960 * x434 +
    1800000.0 * sc[1] * x1995 + 15000000.0 * sc[2] * x1739 + x1047 -
    x1554 * x2038 - x1554 * x2051 + x1846 * x2027 - x1852 * x2027 -
    x1882 * x2031 - x1955 * x1956 + x2024 * x854 - x2036 * x854 - x562 * x851 -
    x600 * x851 + x913 + x915 + x939 + x942 + x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1058 + x851) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[414] =
    -70000000.0 * sc[0] * x1661 + 30000000.0 * sc[1] * x1661 +
    73400000.0 * sc[1] * x1783 + 2000000.0 * sc[1] * x1957 +
    20000000.0 * sc[1] * x1960 * x769 + 90000000.0 * sc[1] * x232 +
    15000000.0 * sc[2] * x1661 + x1047 + x1563 * x2024 - x1563 * x2036 -
    x1783 * x2027 - x1955 * x1957 - x2031 * x232 - x2058 * x562 - x2058 * x600 +
    x913 + x933 + x939 + x942 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1058 + x2058) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[437] =
    70000000.0 * sc[0] * x1671 - 70000000.0 * sc[0] * x1745 - sc[0] * x714 -
    30000000.0 * sc[1] * x1671 + 30000000.0 * sc[1] * x1745 -
    73400000.0 * sc[1] * x1775 + 73400000.0 * sc[1] * x1782 +
    90000000.0 * sc[1] * x1889 + 20000000.0 * sc[1] * x1893 +
    2000000.0 * sc[1] * x1972 + 1800000.0 * sc[1] * x1995 -
    15000000.0 * sc[2] * x1671 + 15000000.0 * sc[2] * x1745 + x1075 +
    x1085 * x562 + x1085 * x600 - x1160 * x562 - x1160 * x600 + x1469 * x2024 -
    x1469 * x2036 + x1485 - x1565 * x2024 + x1565 * x2036 + x1775 * x2027 -
    x1782 * x2027 - x1889 * x2031 - x1955 * x1972 - x2038 * x62 - x2051 * x62 +
    x913 + x915 + x956 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1085 + x1160) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[460] =
    -sc[0] * x1299 * x1474 - 30000000.0 * sc[0] * x1299 * x588 -
    1800000.0 * sc[0] * x1301 + 70000000.0 * sc[0] * x1730 -
    70000000.0 * sc[0] * x865 + 1800000.0 * sc[1] * x1318 +
    2000000.0 * sc[1] * x1649 - 30000000.0 * sc[1] * x1730 +
    73400000.0 * sc[1] * x1847 + 90000000.0 * sc[1] * x1892 +
    20000000.0 * sc[1] * x1893 + 30000000.0 * sc[1] * x865 +
    15000000.0 * sc[2] * x865 + x1047 + x1048 + x1075 + x1574 * x2024 -
    x1574 * x2036 - x1649 * x1955 + x1846 * x2027 - x1847 * x2027 -
    x1892 * x2031 + x369 + x913 + x915 + x939 + x942 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (-x1058 + x1299) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-1800000.0 * sc[1] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[483] =
    -70000000.0 * sc[0] * x1692 + 70000000.0 * sc[0] * x295 -
    30000000.0 * sc[0] * x319 * x588 + 30000000.0 * sc[1] * x1692 +
    73400000.0 * sc[1] * x1881 + 20000000.0 * sc[1] * x1893 +
    90000000.0 * sc[1] * x1895 + 2000000.0 * sc[1] * x1956 +
    1800000.0 * sc[1] * x1995 - 30000000.0 * sc[1] * x295 +
    15000000.0 * sc[2] * x1692 - 15000000.0 * sc[2] * x295 + x1047 + x1075 -
    x1575 * x2024 + x1575 * x2036 + x1580 * x2024 - x1580 * x2036 +
    x1846 * x2027 - x1881 * x2027 - x1895 * x2031 - x1955 * x1956 -
    x319 * x600 + x369 + x562 * x963 + x600 * x963 + x913 + x915 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2024 * x677 - x2027 * x680 + x2031 * x683 -
     x2036 * x677) *
      (x319 - x963) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2027 * x681 - x2031 * x684 + x2038 * x660 +
     x2051 * x660) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-x2023 * x230 + x2038 * x66 + x2051 * x66) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-1800000.0 * sc[1] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-2000000.0 * sc[1] * x596 - 20000000.0 * sc[1] * x639 +
     73400000.0 * sc[1] * x682 + x1955 * x596 - x2027 * x682 + x2038 * x603 +
     x2051 * x603) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-2000000.0 * sc[1] * x558 + 90000000.0 * sc[1] * x685 + x1955 * x558 -
     x2023 * x435 - x2031 * x685) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[1] =
    360000.0 * refC * sc[0] * exp(-0.6 * logT + x322) +
    1100000000.0 * refC * sc[11] * exp(-2.0 * logT + x322) +
    120000000.0 * refC * sc[5] * exp(-1.25 * logT + x322) +
    73400000.0 * sc[10] * x1269 + 20000000.0 * sc[12] * x1431 +
    30000000.0 * sc[13] * x1149 + 2000000.0 * sc[14] * x1321 + sc[17] * x642 +
    sc[19] * x714 - 180000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * logT) +
    30000000.0 * sc[1] * x1016 - 90000000.0 * sc[1] * x1235 -
    30000000.0 * sc[1] * x124 * x726 + 30000000.0 * sc[1] * x124 * x826 -
    1800000.0 * sc[1] * x1240 - 68000000.0 * sc[1] * x1884 -
    90000000.0 * sc[1] * x726 + 90000000.0 * sc[1] * x826 -
    73400000.0 * sc[1] * x830 - 2000000.0 * sc[1] * x909 +
    2000000.0 * sc[1] * x935 + 73400000.0 * sc[1] * x951 -
    30000000.0 * sc[1] * x988 + 1800000.0 * sc[20] * x1301 -
    15000000.0 * sc[2] * x1016 - 80000000.0 * sc[2] * x649 +
    80000000.0 * sc[2] * x651 + 80200000.0 * sc[2] * x909 -
    80200000.0 * sc[2] * x935 + 15000000.0 * sc[2] * x988 + sc[3] * x559 -
    30000000.0 * sc[4] * x1476 + 30000000.0 * sc[4] * x973 + sc[6] * x422 -
    30000000.0 * sc[8] * x1476 + sc[8] * x666 + 30000000.0 * sc[8] * x973 -
    x1016 * x2065 - x1016 * x2124 + x1050 + x1054 + x1059 + x1090 * x1240 +
    x12 - x1235 * x2023 - x1235 * x2192 - x1240 * x640 + x1379 + x1473 * x1474 +
    30000000.0 * x1473 * x588 - x1476 * x562 - x1476 * x600 + x1955 * x909 -
    x1955 * x935 + x2024 * x649 - x2024 * x651 + x2033 + x2038 * x821 +
    x2056 * x440 + x2065 * x988 + x2077 * x726 - x2077 * x826 + x2078 * x830 -
    x2078 * x951 - x2079 * x830 + x2079 * x951 - x2080 * x830 + x2080 * x951 +
    x2087 + x2090 * x649 - x2090 * x651 - x2093 * x830 + x2093 * x951 -
    5280000.0 * x2094 * x649 + 5280000.0 * x2094 * x651 - x2104 * x726 +
    x2104 * x826 - x2105 * x830 + x2105 * x951 + x2124 * x988 - x2132 * x909 +
    x2132 * x935 + x2139 * x909 - x2139 * x935 - x2141 * x909 + x2141 * x935 +
    x216 + x2193 + x37 + 2000000.0 * x439 * x551 + x556 +
    60000000.0 * x56 * x723 + x562 * x973 + x600 * x973 + x729 + x824 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1476 + x973) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[24] =
    -360000.0 * sc[0] * sc[1] * exp(-0.6 * logT) +
    30000000.0 * sc[0] * x1636 * x588 - 10560000.0 * sc[11] * sc[1] * x403 -
    2200000000.0 * sc[11] * sc[1] * x811 - sc[15] * x1462 - sc[16] * x790 -
    100000000.0 * sc[16] - 80200000.0 * sc[18] * x1332 -
    240000000.0 * sc[1] * sc[5] * exp(-1.25 * logT) -
    30000000.0 * sc[1] * x1061 * x124 - 90000000.0 * sc[1] * x1061 -
    73400000.0 * sc[1] * x1065 + 30000000.0 * sc[1] * x1073 +
    30000000.0 * sc[1] * x124 * x950 - 4000000.0 * sc[1] * x1275 * x439 -
    68000000.0 * sc[1] * x1422 + 2000000.0 * sc[1] * x1504 -
    20000000.0 * sc[1] * x1960 * x211 - 90000000.0 * sc[1] * x211 -
    1800000.0 * sc[1] * x476 - 2000000.0 * sc[1] * x523 +
    90000000.0 * sc[1] * x950 + 73400000.0 * sc[1] * x971 -
    30000000.0 * sc[1] * x985 - 15000000.0 * sc[2] * x1073 -
    500000.0 * sc[2] * x1275 * x25 - 80200000.0 * sc[2] * x1504 +
    80200000.0 * sc[2] * x523 - 80000000.0 * sc[2] * x857 +
    80000000.0 * sc[2] * x964 + 15000000.0 * sc[2] * x985 +
    30000000.0 * sc[4] * x1636 - 30000000.0 * sc[4] * x1708 - sc[5] * x922 -
    sc[7] * x50 - sc[7] * x755 + 30000000.0 * sc[8] * x1636 -
    30000000.0 * sc[8] * x1708 + 90000000.0 * x1040 - x1061 * x2104 +
    x1065 * x2078 - x1065 * x2079 - x1065 * x2080 - x1065 * x2093 -
    x1065 * x2105 - x1073 * x2065 - x1073 * x2124 + x1082 -
    28000000.0 * x1220 * x1455 - 30000000.0 * x124 * x234 + 90000000.0 * x1241 +
    1800000.0 * x1319 - x14 + 68000000.0 * x1439 - x1504 * x1955 +
    x1504 * x2132 - x1504 * x2139 + x1504 * x2141 + x1623 * x2038 -
    1.4e+18 * x1635 * x25 + x1636 * x600 - x1653 * x594 - x1708 * x562 -
    x1708 * x600 - 5.2e+27 * x176 * x2191 * x517 + x1955 * x523 + x2024 * x857 -
    x2024 * x964 + x2029 + x2065 * x985 - x2078 * x971 + x2079 * x971 +
    x2080 * x971 - x2088 * x25 * x433 - x2089 * x25 * x85 + x2090 * x857 -
    x2090 * x964 + x2093 * x971 - 5280000.0 * x2094 * x857 +
    5280000.0 * x2094 * x964 + x2104 * x950 + x2105 * x971 - x211 * x2192 +
    x2124 * x985 - x2132 * x523 + x2139 * x523 - 4990000.0 * x2140 * x440 -
    x2141 * x523 - 90000000.0 * x234 + x2355 - 1.99e+29 * x25 * x968 + x300 -
    80000000.0 * x332 * x433 - x34 - 100000000.0 * x364 * x736 -
    15000000.0 * x376 * x433 - 30000000.0 * x393 * x433 - 73400000.0 * x433 -
    2000000.0 * x440 - x476 * x640 + 68000000.0 * x513 + x5454 + x5462 + x5481 +
    x5492 + x5506 + x5511 + x5514 + x5521 + x5534 + x5606 + 1800000.0 * x581 -
    30000000.0 * x593 - x604 * (-x1319 - x581) +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1636 - x1708) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[47] =
    -70000000.0 * sc[0] * x315 + 70000000.0 * sc[0] * x318 + sc[0] * x633 +
    16.32 * sc[13] * exp(x2185) + 100000000.0 * sc[16] -
    30000000.0 * sc[1] * x124 * x140 + 30000000.0 * sc[1] * x124 * x1556 -
    500000.0 * sc[1] * x1275 * x25 - 90000000.0 * sc[1] * x140 +
    90000000.0 * sc[1] * x1556 - 1800000.0 * sc[1] * x1654 +
    2000000.0 * sc[1] * x1656 - 73400000.0 * sc[1] * x1664 -
    68000000.0 * sc[1] * x1678 - 2000000.0 * sc[1] * x1721 -
    90000000.0 * sc[1] * x224 + 30000000.0 * sc[1] * x315 -
    30000000.0 * sc[1] * x318 + 73400000.0 * sc[1] * x759 -
    80200000.0 * sc[2] * x1656 + 80200000.0 * sc[2] * x1721 -
    80000000.0 * sc[2] * x965 + 80000000.0 * sc[2] * x972 -
    28000000.0 * sc[3] * x315 + 28000000.0 * sc[3] * x318 +
    30000000.0 * sc[4] * x1772 - 30000000.0 * sc[4] * x1794 + sc[4] * x5612 +
    sc[5] * x5610 + 30000000.0 * sc[8] * x1772 - 30000000.0 * sc[8] * x1794 +
    x1090 * x1654 + x140 * x2077 - x140 * x2104 + x1507 - x1556 * x2077 +
    x1556 * x2104 - x1654 * x640 - x1656 * x1955 + x1656 * x2132 -
    x1656 * x2139 + x1656 * x2141 + x1664 * x2078 - x1664 * x2079 -
    x1664 * x2080 - x1664 * x2093 - x1664 * x2105 + x1721 * x1955 -
    x1721 * x2132 + x1721 * x2139 - x1721 * x2141 + x1723 * x2038 +
    x1772 * x562 + x1772 * x600 - x1794 * x562 - x1794 * x600 - x2023 * x224 +
    x2024 * x965 - x2024 * x972 - x2036 * x965 + x2036 * x972 - x2065 * x315 +
    x2065 * x318 - x2078 * x759 + x2079 * x759 + x2080 * x759 + x2090 * x965 -
    x2090 * x972 + x2093 * x759 - 5280000.0 * x2094 * x965 +
    5280000.0 * x2094 * x972 + x2105 * x759 - x2124 * x315 + x2124 * x318 -
    x2192 * x224 + 80200000.0 * x440 + x5534 + x5606 + x5662 + x5671 + x5679 +
    x5688 + x5693 + 80000000.0 * x594 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1772 - x1794) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[70] =
    -70000000.0 * sc[0] * x1416 + sc[0] * x559 + 70000000.0 * sc[0] * x883 -
    20000000.0 * sc[1] * x1056 * x1960 - 90000000.0 * sc[1] * x1056 +
    30000000.0 * sc[1] * x124 * x1627 - 30000000.0 * sc[1] * x124 * x1630 +
    30000000.0 * sc[1] * x1416 + 90000000.0 * sc[1] * x1627 -
    90000000.0 * sc[1] * x1630 + 73400000.0 * sc[1] * x1666 -
    73400000.0 * sc[1] * x1672 - 1800000.0 * sc[1] * x1733 +
    2000000.0 * sc[1] * x1762 - 2000000.0 * sc[1] * x1764 -
    68000000.0 * sc[1] * x1765 - 30000000.0 * sc[1] * x883 -
    15000000.0 * sc[2] * x1416 - 80200000.0 * sc[2] * x1762 +
    80200000.0 * sc[2] * x1764 + 57000000.0 * sc[2] * x1829 -
    57000000.0 * sc[2] * x1853 + 15000000.0 * sc[2] * x883 -
    80000000.0 * sc[2] * x974 + 80000000.0 * sc[2] * x976 -
    28000000.0 * sc[3] * x1416 + 28000000.0 * sc[3] * x883 +
    30000000.0 * sc[4] * x1829 - 30000000.0 * sc[4] * x1853 +
    30000000.0 * sc[8] * x1829 - 30000000.0 * sc[8] * x1853 - x1056 * x2192 +
    x1090 * x1733 - x1416 * x2065 - x1416 * x2124 - x1627 * x2077 +
    x1627 * x2104 + x1630 * x2077 - x1630 * x2104 - x1666 * x2078 +
    x1666 * x2079 + x1666 * x2080 + x1666 * x2093 + x1666 * x2105 -
    x1666 * x2134 + x1672 * x2078 - x1672 * x2079 - x1672 * x2080 -
    x1672 * x2093 - x1672 * x2105 + x1672 * x2134 - x1733 * x640 +
    x1757 * x2038 - x1762 * x1955 + x1762 * x2132 - x1762 * x2139 +
    x1762 * x2141 + x1764 * x1955 - x1764 * x2132 + x1764 * x2139 -
    x1764 * x2141 + x1829 * x562 + x1829 * x600 - x1853 * x562 - x1853 * x600 +
    x2024 * x974 - x2024 * x976 - x2036 * x974 + x2036 * x976 + x2065 * x883 +
    x2090 * x974 - x2090 * x976 - 5280000.0 * x2094 * x974 +
    5280000.0 * x2094 * x976 + x2124 * x883 + x5524 + x5532 + x5606 + x5741 +
    x5746 + x5755 + x5763 + x5770 + x5771 + 28000000.0 * x593 +
    5280000.0 * x594 * exp(-754.82499870708 * invT) +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1829 - x1853) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[93] =
    -70000000.0 * sc[0] * x1645 + 70000000.0 * sc[0] * x1659 -
    28000000.0 * sc[1] * x1219 * x1455 + 30000000.0 * sc[1] * x124 * x1677 -
    30000000.0 * sc[1] * x124 * x1699 + 30000000.0 * sc[1] * x1645 -
    30000000.0 * sc[1] * x1659 + 90000000.0 * sc[1] * x1677 -
    90000000.0 * sc[1] * x1699 + 73400000.0 * sc[1] * x1700 -
    2000000.0 * sc[1] * x1776 + 2000000.0 * sc[1] * x1798 -
    68000000.0 * sc[1] * x1879 - 1800000.0 * sc[1] * x219 -
    90000000.0 * sc[1] * x276 - 73400000.0 * sc[1] * x398 -
    15000000.0 * sc[2] * x1645 + 15000000.0 * sc[2] * x1659 +
    80200000.0 * sc[2] * x1776 - 80200000.0 * sc[2] * x1798 + sc[2] * x5612 -
    80000000.0 * sc[2] * x977 + 80000000.0 * sc[2] * x982 +
    30000000.0 * sc[4] * x1885 - 30000000.0 * sc[4] * x1899 + sc[5] * x5779 +
    32000000.0 * sc[8] * x1435 + 30000000.0 * sc[8] * x1885 -
    30000000.0 * sc[8] * x1899 + x1090 * x219 + 30000000.0 * x1473 -
    x1645 * x2065 - x1645 * x2124 + x1659 * x2065 + x1659 * x2124 -
    x1677 * x2077 + x1677 * x2104 + x1699 * x2077 - x1699 * x2104 -
    x1700 * x2078 + x1700 * x2079 + x1700 * x2080 + x1700 * x2093 +
    x1700 * x2105 + x1776 * x1955 - x1776 * x2132 + x1776 * x2139 -
    x1776 * x2141 - x1798 * x1955 + x1798 * x2132 - x1798 * x2139 +
    x1798 * x2141 + x1831 * x2038 + x1885 * x562 + x1885 * x600 - x1899 * x562 -
    x1899 * x600 - x2023 * x276 + x2024 * x977 - x2024 * x982 - x2036 * x977 +
    x2036 * x982 + 500000.0 * x2042 * x25 + x2078 * x398 - x2079 * x398 -
    x2080 * x398 + x2090 * x977 - x2090 * x982 - x2093 * x398 -
    5280000.0 * x2094 * x977 + 5280000.0 * x2094 * x982 - x2105 * x398 -
    x219 * x640 - x2192 * x276 + x221 + x5534 + x5606 + x5778 +
    141600000.0 * x5784 + x5835 + x5845 + x5853 + x5860 + x5864 + x5867 +
    20000000.0 * x594 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1885 - x1899) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[116] =
    120000000.0 * refC * sc[0] * exp(-1.25 * logT + x322) +
    refC * sc[6] * x5978 -
    120000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * logT) -
    sc[1] * sc[3] * x5478 - 30000000.0 * sc[1] * x124 * x1668 +
    30000000.0 * sc[1] * x124 * x1741 - 8.4e+18 * sc[1] * x1635 +
    30000000.0 * sc[1] * x1660 - 30000000.0 * sc[1] * x1662 -
    90000000.0 * sc[1] * x1668 + 90000000.0 * sc[1] * x1741 +
    73400000.0 * sc[1] * x1760 - 73400000.0 * sc[1] * x1768 +
    2000000.0 * sc[1] * x1779 - 90000000.0 * sc[1] * x1793 -
    2000000.0 * sc[1] * x1856 - 68000000.0 * sc[1] * x1888 -
    1800000.0 * sc[1] * x1946 - sc[1] * x922 - 1.194e+30 * sc[1] * x968 +
    80000000.0 * sc[2] * x1010 - 15000000.0 * sc[2] * x1660 +
    15000000.0 * sc[2] * x1662 - 80200000.0 * sc[2] * x1779 +
    80200000.0 * sc[2] * x1856 + sc[2] * x5610 - 80000000.0 * sc[2] * x987 +
    30000000.0 * sc[4] * x1954 - 30000000.0 * sc[4] * x1980 + sc[4] * x5779 +
    30000000.0 * sc[8] * x1954 - 30000000.0 * sc[8] * x1980 - x1010 * x2024 -
    x1010 * x2090 + 5280000.0 * x1010 * x2094 - x1018 * x5876 -
    3.12e+28 * x1024 + 1.6224e+48 * x1055 - 1.6224e+48 * x1062 * x1511 +
    x1087 * x5885 + 8.4e+18 * x1137 * x426 -
    1.9342105263157899e+30 * x1140 * x641 - 2.4576e+21 * x1155 * x172 -
    1.0032110091743101e+19 * x1279 * x960 + 1.194e+30 * x1341 * x1342 +
    3.12e+28 * x1414 - x1660 * x2065 - x1660 * x2124 + x1662 * x2065 +
    x1662 * x2124 - x1668 * x2104 + 2.4576e+21 * x172 * x1883 +
    1.9342105263157899e+30 * x1737 * x641 + x1741 * x2104 - x1760 * x2078 +
    x1760 * x2079 + x1760 * x2080 + x1760 * x2093 + x1760 * x2105 +
    x1768 * x2078 - x1768 * x2079 - x1768 * x2080 - x1768 * x2093 -
    x1768 * x2105 - x1779 * x1955 + x1779 * x2132 - x1779 * x2139 +
    x1779 * x2141 - x1793 * x2023 - x1793 * x2192 + x1844 * x2038 -
    8100000000000.0 * x1850 + x1856 * x1955 - x1856 * x2132 + x1856 * x2139 -
    x1856 * x2141 - x1946 * x640 + x1954 * x562 + x1954 * x600 - x1980 * x562 -
    x1980 * x600 + x2024 * x987 + 3000000.0 * x2043 - 3000000.0 * x2083 +
    x2090 * x987 - 5280000.0 * x2094 * x987 + x2180 - x298 * x5923 -
    x313 * (12.0 * x271 * x688 + 1.68 * x601 * x688) -
    4.5605758157389599e+47 * x431 * x829 +
    4.5605758157389599e+47 * x431 * x966 - x554 * x5885 + x5558 * x5923 +
    16000000.0 * x571 * x593 +
    x579 * (12.0 * x271 * x688 + 1.68 * x601 * x688) + 1.92e+16 * x585 +
    x5876 * x885 - x5900 * x911 + x5900 * x955 + x5963 + x5970 + x5973 + x5977 +
    x5992 + x6020 + x615 + x622 + 1.0032110091743101e+19 * x674 * x960 -
    1.92e+16 * x952 + 8100000000000.0 * x958 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1954 - x1980) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[139] =
    -70000000.0 * sc[0] * x1665 + 70000000.0 * sc[0] * x1670 + sc[0] * x422 +
    30000000.0 * sc[1] * x124 * x1759 - 30000000.0 * sc[1] * x124 * x1769 -
    68000000.0 * sc[1] * x1419 + 30000000.0 * sc[1] * x1665 -
    30000000.0 * sc[1] * x1670 + 90000000.0 * sc[1] * x1759 -
    90000000.0 * sc[1] * x1769 + 73400000.0 * sc[1] * x1770 -
    73400000.0 * sc[1] * x1771 - 90000000.0 * sc[1] * x1842 +
    2000000.0 * sc[1] * x1851 - 2000000.0 * sc[1] * x1878 -
    1800000.0 * sc[1] * x1985 - 80000000.0 * sc[2] * x1012 +
    80000000.0 * sc[2] * x1014 - 15000000.0 * sc[2] * x1665 +
    15000000.0 * sc[2] * x1670 - 80200000.0 * sc[2] * x1851 +
    80200000.0 * sc[2] * x1878 - 28000000.0 * sc[3] * x1665 +
    28000000.0 * sc[3] * x1670 + 30000000.0 * sc[4] * x2022 -
    30000000.0 * sc[4] * x2045 + 30000000.0 * sc[8] * x2022 -
    30000000.0 * sc[8] * x2045 + x1012 * x2024 - x1012 * x2036 + x1012 * x2090 -
    5280000.0 * x1012 * x2094 - x1014 * x2024 + x1014 * x2036 - x1014 * x2090 +
    5280000.0 * x1014 * x2094 + x1090 * x1985 - x1665 * x2065 - x1665 * x2124 +
    x1670 * x2065 + x1670 * x2124 - x1759 * x2077 + x1759 * x2104 +
    x1769 * x2077 - x1769 * x2104 - x1770 * x2078 + x1770 * x2079 +
    x1770 * x2080 + x1770 * x2093 + x1770 * x2105 + x1771 * x2078 -
    x1771 * x2079 - x1771 * x2080 - x1771 * x2093 - x1771 * x2105 -
    x1842 * x2023 + x1842 * x2137 - x1842 * x2192 - x1851 * x1955 +
    x1851 * x2132 - x1851 * x2139 + x1851 * x2141 + x1878 * x1955 -
    x1878 * x2132 + x1878 * x2139 - x1878 * x2141 - x1985 * x640 +
    x2022 * x562 + x2022 * x600 + x2022 * x630 - x2045 * x562 - x2045 * x600 -
    x2045 * x630 + x6064 + x6067 + x6076 + x6083 + x6085 + x6092 + x6096 +
    x6106 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x2022 - x2045) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[162] =
    -70000000.0 * sc[0] * x1673 + 70000000.0 * sc[0] * x1674 +
    30000000.0 * sc[1] * x124 * x1786 - 30000000.0 * sc[1] * x124 * x202 +
    30000000.0 * sc[1] * x1673 - 30000000.0 * sc[1] * x1674 +
    73400000.0 * sc[1] * x1780 - 73400000.0 * sc[1] * x1781 +
    90000000.0 * sc[1] * x1786 - 2000000.0 * sc[1] * x1898 +
    2000000.0 * sc[1] * x1906 - 90000000.0 * sc[1] * x202 - sc[1] * x50 -
    sc[1] * x755 - 80000000.0 * sc[2] * x1015 + 80000000.0 * sc[2] * x1019 -
    15000000.0 * sc[2] * x1673 + 15000000.0 * sc[2] * x1674 +
    80200000.0 * sc[2] * x1898 - 80200000.0 * sc[2] * x1906 +
    57000000.0 * sc[2] * x2081 - 57000000.0 * sc[2] * x2099 -
    28000000.0 * sc[3] * x1673 + 28000000.0 * sc[3] * x1674 +
    30000000.0 * sc[4] * x2081 - 30000000.0 * sc[4] * x2099 +
    30000000.0 * sc[8] * x2081 - 30000000.0 * sc[8] * x2099 + x1015 * x2024 -
    x1015 * x2036 + x1015 * x2090 - 5280000.0 * x1015 * x2094 - x1019 * x2024 +
    x1019 * x2036 - x1019 * x2090 + 5280000.0 * x1019 * x2094 - x1673 * x2065 -
    x1673 * x2124 + x1674 * x2065 + x1674 * x2124 - x1780 * x2078 +
    x1780 * x2079 + x1780 * x2080 + x1780 * x2093 + x1780 * x2105 -
    x1780 * x2134 + x1781 * x2078 - x1781 * x2079 - x1781 * x2080 -
    x1781 * x2093 - x1781 * x2105 + x1781 * x2134 - x1786 * x2077 +
    x1786 * x2104 + x1898 * x1955 - x1898 * x2132 + x1898 * x2139 -
    x1898 * x2141 - x1906 * x1955 + x1906 * x2132 - x1906 * x2139 +
    x1906 * x2141 + x202 * x2077 - x202 * x2104 + x2081 * x562 + x2081 * x600 +
    x2081 * x630 - x2099 * x562 - x2099 * x600 - x2099 * x630 + x5534 + x5591 +
    x5597 + x5604 + x6104 + x6146 + x6149 + x6161 + x6168 + x6169 + x6184 +
    x6186 + x6188 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x2081 - x2099) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[185] =
    sc[0] * x666 - 50000000.0 * sc[14] * x1680 + 50000000.0 * sc[14] * x1681 +
    sc[14] * x6247 - 90000000.0 * sc[1] * x1238 +
    30000000.0 * sc[1] * x124 * x1792 - 30000000.0 * sc[1] * x124 * x1832 +
    30000000.0 * sc[1] * x1680 - 30000000.0 * sc[1] * x1681 -
    68000000.0 * sc[1] * x1727 + 73400000.0 * sc[1] * x1788 -
    73400000.0 * sc[1] * x1789 + 90000000.0 * sc[1] * x1792 -
    90000000.0 * sc[1] * x1832 + 2000000.0 * sc[1] * x1947 -
    2000000.0 * sc[1] * x1958 - 1800000.0 * sc[1] * x453 -
    80000000.0 * sc[2] * x1022 + 80000000.0 * sc[2] * x1025 -
    15000000.0 * sc[2] * x1680 + 15000000.0 * sc[2] * x1681 -
    80200000.0 * sc[2] * x1947 + 80200000.0 * sc[2] * x1958 +
    57000000.0 * sc[2] * x2123 - 57000000.0 * sc[2] * x2149 -
    28000000.0 * sc[3] * x1680 + 28000000.0 * sc[3] * x1681 +
    32000000.0 * sc[4] * x1435 + 30000000.0 * sc[4] * x2123 -
    30000000.0 * sc[4] * x2149 + 30000000.0 * sc[8] * x2123 -
    30000000.0 * sc[8] * x2149 +
    9980000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * logT) +
    x1022 * x2024 + x1022 * x2090 - 5280000.0 * x1022 * x2094 - x1025 * x2024 -
    x1025 * x2090 + 5280000.0 * x1025 * x2094 + x1090 * x453 - x1238 * x2023 -
    x1238 * x2192 + x1385 * x2089 * x776 + 30000000.0 * x1473 - x1680 * x2065 -
    x1680 * x2124 + x1681 * x2065 + x1681 * x2124 - x1788 * x2078 +
    x1788 * x2079 + x1788 * x2080 + x1788 * x2093 + x1788 * x2105 -
    x1788 * x2134 + x1789 * x2078 - x1789 * x2079 - x1789 * x2080 -
    x1789 * x2093 - x1789 * x2105 + x1789 * x2134 - x1792 * x2077 +
    x1792 * x2104 + x1832 * x2077 - x1832 * x2104 - x1947 * x1955 +
    x1947 * x2132 - x1947 * x2139 + x1947 * x2141 + x1955 * x1958 -
    x1958 * x2132 + x1958 * x2139 - x1958 * x2141 + x2123 * x562 +
    x2123 * x600 + x2136 * x440 - x2149 * x562 - x2149 * x600 +
    90000000.0 * x346 * x433 - x453 * x640 + x6106 + x6238 + x6246 + x6261 +
    x6269 + x6270 + x6276 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x2123 - x2149) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[208] =
    4000000.0 * sc[0] * x551 - 50000000.0 * sc[14] * x1683 +
    50000000.0 * sc[14] * x1689 - 4000000.0 * ((sc[1]) * (sc[1])) * x1275 +
    30000000.0 * sc[1] * x124 * x1834 - 30000000.0 * sc[1] * x124 * x1848 +
    30000000.0 * sc[1] * x1683 - 30000000.0 * sc[1] * x1689 +
    73400000.0 * sc[1] * x1791 - 73400000.0 * sc[1] * x1797 +
    90000000.0 * sc[1] * x1834 - 90000000.0 * sc[1] * x1848 +
    2000000.0 * sc[1] * x1959 - 2000000.0 * sc[1] * x1964 -
    1800000.0 * sc[1] * x2020 - 80000000.0 * sc[2] * x1049 +
    80000000.0 * sc[2] * x1053 - 15000000.0 * sc[2] * x1683 +
    15000000.0 * sc[2] * x1689 - 80200000.0 * sc[2] * x1959 +
    80200000.0 * sc[2] * x1964 + 30000000.0 * sc[4] * x2138 -
    30000000.0 * sc[4] * x2197 + 30000000.0 * sc[8] * x2138 -
    30000000.0 * sc[8] * x2197 + x1049 * x2024 + x1049 * x2090 -
    5280000.0 * x1049 * x2094 - x1053 * x2024 - x1053 * x2090 +
    5280000.0 * x1053 * x2094 + x1090 * x2020 - x1127 + x1379 - x1683 * x2065 -
    x1683 * x2124 + x1689 * x2065 + x1689 * x2124 - x1791 * x2078 +
    x1791 * x2079 + x1791 * x2080 + x1791 * x2093 + x1791 * x2105 +
    x1797 * x2078 - x1797 * x2079 - x1797 * x2080 - x1797 * x2093 -
    x1797 * x2105 - x1834 * x2077 + x1834 * x2104 + x1848 * x2077 -
    x1848 * x2104 - x1955 * x1959 + x1955 * x1964 + x1959 * x2132 -
    x1959 * x2139 + x1959 * x2141 - x1964 * x2132 + x1964 * x2139 -
    x1964 * x2141 - x2020 * x640 + x2033 + x2038 * x816 + x2138 * x562 +
    x2138 * x600 + x2193 - x2197 * x562 - x2197 * x600 + x37 + x6323 + x6329 +
    x6339 + x6347 + x6351 + x6354 + x6356 + x6359 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x2138 - x2197) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[231] =
    73400000.0 * sc[0] * x1269 + 30000000.0 * sc[0] * x2184 * x588 +
    2000000.0 * sc[0] * x551 - 2000000.0 * ((sc[1]) * (sc[1])) * x1275 -
    68000000.0 * sc[1] * x1003 - 200000000.0 * sc[1] * x1219 * x736 -
    30000000.0 * sc[1] * x124 * x1840 + 30000000.0 * sc[1] * x124 * x1861 -
    28000000.0 * sc[1] * x1455 * x739 - 2.1e+18 * sc[1] * x1635 +
    30000000.0 * sc[1] * x1693 - 30000000.0 * sc[1] * x1694 +
    73400000.0 * sc[1] * x1801 - 73400000.0 * sc[1] * x1804 -
    90000000.0 * sc[1] * x1840 + 90000000.0 * sc[1] * x1861 -
    20000000.0 * sc[1] * x1960 * x793 + 2000000.0 * sc[1] * x1965 -
    1800000.0 * sc[1] * x2021 - 2000000.0 * sc[1] * x646 -
    90000000.0 * sc[1] * x793 - 2.985e+29 * sc[1] * x968 -
    80000000.0 * sc[2] * x1066 + 80000000.0 * sc[2] * x1068 -
    15000000.0 * sc[2] * x1693 + 15000000.0 * sc[2] * x1694 -
    80200000.0 * sc[2] * x1965 + 80200000.0 * sc[2] * x646 -
    28000000.0 * sc[3] * x1693 + 28000000.0 * sc[3] * x1694 +
    30000000.0 * sc[4] * x2184 - 30000000.0 * sc[4] * x2274 +
    30000000.0 * sc[8] * x2184 - 30000000.0 * sc[8] * x2274 - x1018 * x6368 -
    4.056e+47 * x1062 * x1511 + 4.056e+47 * x1062 * x517 * x789 +
    x1066 * x2024 + x1066 * x2090 - 5280000.0 * x1066 * x2094 - x1068 * x2024 -
    x1068 * x2090 + 5280000.0 * x1068 * x2094 + x1087 * x6379 +
    2.1e+18 * x1137 * x426 - 4.8355263157894698e+29 * x1140 * x641 -
    6.144e+20 * x1155 * x172 - 2.5080275229357798e+18 * x1279 * x960 +
    2.985e+29 * x1341 * x1342 + 7.8e+27 * x1414 - x1693 * x2065 -
    x1693 * x2124 + x1694 * x2065 + x1694 * x2124 + 6.144e+20 * x172 * x1883 +
    4.8355263157894698e+29 * x1737 * x641 - x1801 * x2078 + x1801 * x2079 +
    x1801 * x2080 + x1801 * x2093 + x1801 * x2105 + x1804 * x2078 -
    x1804 * x2079 - x1804 * x2080 - x1804 * x2093 - x1804 * x2105 -
    x1840 * x2104 - 2025000000000.0 * x1850 + x1861 * x2104 - x1955 * x1965 +
    x1955 * x646 + x1965 * x2132 - x1965 * x2139 + x1965 * x2141 + x1971 -
    x2021 * x640 + x2038 * x65 + 750000.0 * x2043 - 2100000.0 * x208 -
    750000.0 * x2083 - x2132 * x646 + x2139 * x646 - x2141 * x646 +
    2100000.0 * x2147 + x2184 * x600 - 7.8e+27 * x2191 * x517 * x772 -
    x2192 * x793 - x2274 * x562 - x2274 * x600 + x231 - x298 * x6383 + x305 -
    x313 * (3.0 * x271 * x688 + 0.42 * x601 * x688) -
    1.14014395393474e+47 * x431 * x829 + 1.14014395393474e+47 * x431 * x966 +
    x479 + x5524 - x554 * x6379 + x5558 * x6383 + 100000000.0 * x566 * x593 +
    x579 * (3.0 * x271 * x688 + 0.42 * x601 * x688) +
    4800000000000000.0 * x585 + x6360 + x6368 * x885 - x6391 * x911 +
    x6391 * x955 + x6454 + x6473 + x6487 + x6506 +
    2.5080275229357798e+18 * x674 * x960 - 4800000000000000.0 * x952 +
    2025000000000.0 * x958 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x2184 - x2274) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[254] =
    1100000000.0 * refC * sc[0] * exp(-2.0 * logT + x322) -
    5280000.0 * ((sc[1]) * (sc[1])) * x403 -
    1100000000.0 * ((sc[1]) * (sc[1])) * x811 +
    30000000.0 * sc[1] * x124 * x1845 - 30000000.0 * sc[1] * x124 * x725 -
    30000000.0 * sc[1] * x1252 + 30000000.0 * sc[1] * x1695 -
    73400000.0 * sc[1] * x1696 - 30000000.0 * sc[1] * x1697 +
    73400000.0 * sc[1] * x1806 + 90000000.0 * sc[1] * x1845 - sc[1] * x560 +
    2000000.0 * sc[1] * x655 - 90000000.0 * sc[1] * x725 -
    2000000.0 * sc[1] * x908 - 1800000.0 * sc[1] * x930 +
    80000000.0 * sc[2] * x1071 - 15000000.0 * sc[2] * x1695 +
    15000000.0 * sc[2] * x1697 - 80200000.0 * sc[2] * x655 -
    80000000.0 * sc[2] * x661 + 80200000.0 * sc[2] * x908 -
    28000000.0 * sc[3] * x1695 + 28000000.0 * sc[3] * x1697 +
    30000000.0 * sc[4] * x1555 - 30000000.0 * sc[4] * x2326 +
    30000000.0 * sc[8] * x1555 - 30000000.0 * sc[8] * x2326 - x1071 * x2024 -
    x1071 * x2090 + 5280000.0 * x1071 * x2094 + x1090 * x930 + x1379 +
    x1555 * x562 + x1555 * x600 - x1695 * x2065 - x1695 * x2124 +
    x1696 * x2078 - x1696 * x2079 - x1696 * x2080 - x1696 * x2093 -
    x1696 * x2105 + x1697 * x2065 + x1697 * x2124 - x1806 * x2078 +
    x1806 * x2079 + x1806 * x2080 + x1806 * x2093 + x1806 * x2105 -
    x1845 * x2077 + x1845 * x2104 - x1955 * x655 + x1955 * x908 + x2024 * x661 +
    x2033 + x2038 * x602 + x2077 * x725 - 4200000.0 * x208 + x2090 * x661 -
    5280000.0 * x2094 * x661 - x2104 * x725 + x2132 * x655 - x2132 * x908 -
    x2139 * x655 + x2139 * x908 + x2141 * x655 - x2141 * x908 +
    4200000.0 * x2147 - x2326 * x562 - x2326 * x600 + x5524 + x6359 -
    x640 * x930 + x6554 + x6575 + x6587 + x761 + x844 + x923 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1555 - x2326) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[277] =
    20000000.0 * sc[0] * x1431 - 70000000.0 * sc[0] * x1701 +
    70000000.0 * sc[0] * x1702 + 30000000.0 * sc[1] * x124 * x1880 -
    30000000.0 * sc[1] * x124 * x1887 - 1800000.0 * sc[1] * x1502 -
    68000000.0 * sc[1] * x1572 + 30000000.0 * sc[1] * x1701 -
    30000000.0 * sc[1] * x1702 + 73400000.0 * sc[1] * x1755 -
    73400000.0 * sc[1] * x1761 + 90000000.0 * sc[1] * x1880 -
    90000000.0 * sc[1] * x1887 - 20000000.0 * sc[1] * x1960 * x228 +
    2000000.0 * sc[1] * x1976 - 2000000.0 * sc[1] * x1977 -
    90000000.0 * sc[1] * x228 + 57000000.0 * sc[2] * x1021 -
    80000000.0 * sc[2] * x1072 + 80000000.0 * sc[2] * x1076 -
    15000000.0 * sc[2] * x1701 + 15000000.0 * sc[2] * x1702 -
    80200000.0 * sc[2] * x1976 + 80200000.0 * sc[2] * x1977 -
    57000000.0 * sc[2] * x2366 - 28000000.0 * sc[3] * x1701 +
    28000000.0 * sc[3] * x1702 + 30000000.0 * sc[4] * x1021 -
    30000000.0 * sc[4] * x2366 + 30000000.0 * sc[8] * x1021 -
    30000000.0 * sc[8] * x2366 + x1021 * x562 + x1021 * x600 + x1072 * x2024 -
    x1072 * x2036 + x1072 * x2090 - 5280000.0 * x1072 * x2094 - x1076 * x2024 +
    x1076 * x2036 - x1076 * x2090 + 5280000.0 * x1076 * x2094 + x1090 * x1502 -
    x1502 * x640 + x1663 - x1701 * x2065 - x1701 * x2124 + x1702 * x2065 +
    x1702 * x2124 - x1755 * x2078 + x1755 * x2079 + x1755 * x2080 +
    x1755 * x2093 + x1755 * x2105 - x1755 * x2134 + x1761 * x2078 -
    x1761 * x2079 - x1761 * x2080 - x1761 * x2093 - x1761 * x2105 +
    x1761 * x2134 - x1880 * x2077 + x1880 * x2104 + x1887 * x2077 -
    x1887 * x2104 - x1955 * x1976 + x1955 * x1977 + x1976 * x2132 -
    x1976 * x2139 + x1976 * x2141 - x1977 * x2132 + x1977 * x2139 -
    x1977 * x2141 - x2192 * x228 - x2366 * x562 - x2366 * x600 + x6106 +
    1350000000000.0 * x644 * x776 + x6628 + x6634 + x6639 + x6648 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x1021 - x2366) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[300] =
    30000000.0 * sc[0] * x1149 - 30000000.0 * sc[1] * x124 * x1896 +
    30000000.0 * sc[1] * x1704 - 30000000.0 * sc[1] * x1706 +
    73400000.0 * sc[1] * x1767 - 73400000.0 * sc[1] * x1833 -
    90000000.0 * sc[1] * x1896 - 2000000.0 * sc[1] * x1986 -
    80000000.0 * sc[2] * x1077 + 80000000.0 * sc[2] * x1081 -
    15000000.0 * sc[2] * x1704 + 15000000.0 * sc[2] * x1706 +
    80200000.0 * sc[2] * x1986 + 16.32 * sc[2] * exp(x2185) -
    30000000.0 * sc[4] * x2354 + 30000000.0 * sc[4] * x742 -
    30000000.0 * sc[8] * x2354 + 30000000.0 * sc[8] * x742 + x1077 * x2024 +
    x1077 * x2090 - 5280000.0 * x1077 * x2094 - x1081 * x2024 - x1081 * x2090 +
    5280000.0 * x1081 * x2094 + x1084 + x1117 + x1205 + x1329 - x1704 * x2065 -
    x1704 * x2124 + x1706 * x2065 + x1706 * x2124 - x1767 * x2078 +
    x1767 * x2079 + x1767 * x2080 + x1767 * x2093 + x1767 * x2105 +
    x1833 * x2078 - x1833 * x2079 - x1833 * x2080 - x1833 * x2093 -
    x1833 * x2105 - x1896 * x2104 - x1955 * x1979 + x1955 * x1986 -
    x1986 * x2132 + x1986 * x2139 - x1986 * x2141 + x2038 * x659 + x2142 +
    x2181 + x2190 - x2354 * x562 - x2354 * x600 + x562 * x742 + x600 * x742 +
    x6183 + x6700 + x6707 + x6718 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x2354 + x742) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[323] =
    2000000.0 * sc[0] * x1321 - 70000000.0 * sc[0] * x1707 +
    70000000.0 * sc[0] * x1709 - 30000000.0 * sc[1] * x124 * x1897 +
    30000000.0 * sc[1] * x1707 - 30000000.0 * sc[1] * x1709 +
    73400000.0 * sc[1] * x1835 - 73400000.0 * sc[1] * x1836 -
    90000000.0 * sc[1] * x1897 - 2000000.0 * sc[1] * x1992 -
    1800000.0 * sc[1] * x488 - 80000000.0 * sc[2] * x1083 +
    80000000.0 * sc[2] * x1089 - 15000000.0 * sc[2] * x1707 +
    15000000.0 * sc[2] * x1709 + 80200000.0 * sc[2] * x1992 -
    30000000.0 * sc[4] * x1174 + 30000000.0 * sc[4] * x1231 +
    20000000.0 * sc[4] * x820 - 30000000.0 * sc[8] * x1174 +
    30000000.0 * sc[8] * x1231 + sc[8] * x6247 + x1083 * x2024 - x1083 * x2036 +
    x1083 * x2090 - 5280000.0 * x1083 * x2094 + x1086 - x1089 * x2024 +
    x1089 * x2036 - x1089 * x2090 + 5280000.0 * x1089 * x2094 + x1090 * x488 -
    x1174 * x562 - x1174 * x600 - x1174 * x630 + x1231 * x562 + x1231 * x600 +
    x1231 * x630 + x1329 + x1571 - x1707 * x2065 - x1707 * x2124 +
    x1709 * x2065 + x1709 * x2124 - x1835 * x2078 + x1835 * x2079 +
    x1835 * x2080 + x1835 * x2093 + x1835 * x2105 + x1836 * x2078 -
    x1836 * x2079 - x1836 * x2080 - x1836 * x2093 - x1836 * x2105 -
    x1894 * x2077 + x1897 * x2077 - x1897 * x2104 - x1955 * x1979 +
    x1955 * x1992 - x1992 * x2132 + x1992 * x2139 - x1992 * x2141 +
    x2038 * x820 + x2144 + x2148 + x2190 + x260 + 1.4e+18 * x426 * x776 -
    x488 * x640 + x5601 + x961 + x979 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1174 + x1231) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[346] =
    sc[0] * x1474 * x81 - 70000000.0 * sc[0] * x1711 +
    70000000.0 * sc[0] * x1719 + 30000000.0 * sc[0] * x588 * x81 -
    30000000.0 * sc[1] * x124 * x1841 + 30000000.0 * sc[1] * x124 * x1904 -
    sc[1] * x1462 + 30000000.0 * sc[1] * x1711 - 1800000.0 * sc[1] * x1716 -
    30000000.0 * sc[1] * x1719 + 73400000.0 * sc[1] * x1838 -
    73400000.0 * sc[1] * x1839 - 90000000.0 * sc[1] * x1841 -
    2000000.0 * sc[1] * x1886 + 90000000.0 * sc[1] * x1904 +
    2000000.0 * sc[1] * x1999 - 80000000.0 * sc[2] * x1091 +
    80000000.0 * sc[2] * x1366 - 15000000.0 * sc[2] * x1711 +
    15000000.0 * sc[2] * x1719 + 80200000.0 * sc[2] * x1886 -
    80200000.0 * sc[2] * x1999 - 30000000.0 * sc[4] * x116 +
    30000000.0 * sc[4] * x81 - 30000000.0 * sc[8] * x116 +
    30000000.0 * sc[8] * x81 + x1086 + x1091 * x2024 - x1091 * x2036 +
    x1091 * x2090 - 5280000.0 * x1091 * x2094 + x1135 * x2038 - x116 * x562 -
    x116 * x600 + 1.99e+29 * x1342 * x776 + x1363 - x1366 * x2024 +
    x1366 * x2036 - x1366 * x2090 + 5280000.0 * x1366 * x2094 + x1495 + x1588 +
    x1590 + x1652 - x1711 * x2065 - x1711 * x2124 - x1716 * x640 +
    x1719 * x2065 + x1719 * x2124 - x1838 * x2078 + x1838 * x2079 +
    x1838 * x2080 + x1838 * x2093 + x1838 * x2105 + x1839 * x2078 -
    x1839 * x2079 - x1839 * x2080 - x1839 * x2093 - x1839 * x2105 +
    x1841 * x2077 - x1841 * x2104 + x1886 * x1955 - x1886 * x2132 +
    x1886 * x2139 - x1886 * x2141 - x1904 * x2077 + x1904 * x2104 -
    x1955 * x1999 + x1999 * x2132 - x1999 * x2139 + x1999 * x2141 -
    4200000.0 * x208 + x213 + 4200000.0 * x2147 + x2190 + x984 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x116 + x81) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[369] =
    50000000.0 * sc[0] * x76 + 50000000.0 * sc[14] * x1731 -
    30000000.0 * sc[1] * x124 * x169 - 90000000.0 * sc[1] * x169 -
    30000000.0 * sc[1] * x1731 - 73400000.0 * sc[1] * x1849 - sc[1] * x790 -
    100000000.0 * sc[1] - 80000000.0 * sc[2] * x1367 +
    80000000.0 * sc[2] * x1472 - 57000000.0 * sc[2] * x1625 +
    48000000.0 * sc[2] * x169 + 15000000.0 * sc[2] * x1731 +
    30000000.0 * sc[2] * x1849 + 57000000.0 * sc[2] * x848 +
    100000000.0 * sc[2] + 28000000.0 * sc[3] * x1731 -
    30000000.0 * sc[4] * x1625 + 30000000.0 * sc[4] * x848 -
    30000000.0 * sc[8] * x1625 + 30000000.0 * sc[8] * x848 + x1064 +
    x1367 * x2024 + x1367 * x2090 - 5280000.0 * x1367 * x2094 - x1367 * x2125 +
    x138 - x1472 * x2024 - x1472 * x2090 + 5280000.0 * x1472 * x2094 +
    x1472 * x2125 - x1625 * x562 - x1625 * x600 - x1625 * x630 + x169 * x2077 -
    x169 * x2104 + x169 * x2128 + x1698 + x1731 * x2065 + x1731 * x2124 +
    x1849 * x2078 - x1849 * x2079 - x1849 * x2080 - x1849 * x2093 -
    x1849 * x2105 + x1849 * x2134 + x2102 + x2157 + x396 + x465 + x481 + x521 +
    x5534 + x562 * x848 + x600 * x848 + x605 + x6184 + x6186 + x630 * x848 +
    x813 + x939 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1625 + x848) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[392] =
    70000000.0 * sc[0] * x1739 + sc[0] * x642 -
    30000000.0 * sc[1] * x124 * x1882 - 30000000.0 * sc[1] * x1739 +
    73400000.0 * sc[1] * x1846 - 73400000.0 * sc[1] * x1852 -
    90000000.0 * sc[1] * x1882 - 20000000.0 * sc[1] * x1960 * x434 -
    90000000.0 * sc[1] * x434 + 15000000.0 * sc[2] * x1739 +
    30000000.0 * sc[2] * x1852 + 57000000.0 * sc[2] * x851 +
    80000000.0 * sc[2] * x854 + 28000000.0 * sc[3] * x1739 +
    30000000.0 * sc[4] * x1739 + 30000000.0 * sc[4] * x851 +
    20000000.0 * sc[4] * x854 + 30000000.0 * sc[8] * x851 + x1060 * x851 +
    x107 + x1554 * x2038 + x1698 + x1739 * x2065 + x1739 * x2124 -
    x1846 * x2078 + x1846 * x2079 + x1846 * x2080 + x1846 * x2093 +
    x1846 * x2105 + x1852 * x2027 + x1852 * x2078 - x1852 * x2079 -
    x1852 * x2080 - x1852 * x2093 - x1852 * x2105 + x1852 * x2134 +
    x1882 * x2077 - x1882 * x2104 - x2024 * x854 + x2032 + x2035 +
    x2036 * x854 + x2082 - x2090 * x854 + 5280000.0 * x2094 * x854 + x2157 -
    x2192 * x434 + x2205 + x396 + x481 + x497 + x553 + x5588 + x562 * x851 +
    x600 * x851 + x813 + x939 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1058 + x851) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[415] =
    70000000.0 * sc[0] * x1661 + 50000000.0 * sc[14] * x1661 +
    30000000.0 * sc[1] * x124 * x1843 - 30000000.0 * sc[1] * x124 * x232 -
    80200000.0 * sc[1] * x1332 - 30000000.0 * sc[1] * x1661 -
    73400000.0 * sc[1] * x1783 + 90000000.0 * sc[1] * x1843 +
    2000000.0 * sc[1] * x1890 - 2000000.0 * sc[1] * x1957 -
    20000000.0 * sc[1] * x1960 * x769 - 90000000.0 * sc[1] * x232 -
    90000000.0 * sc[1] * x769 + 80000000.0 * sc[2] * x1563 +
    15000000.0 * sc[2] * x1661 + 30000000.0 * sc[2] * x1783 +
    80200000.0 * sc[2] * x1957 + 57000000.0 * sc[2] * x2058 +
    48000000.0 * sc[2] * x232 + 28000000.0 * sc[3] * x1661 +
    20000000.0 * sc[4] * x1563 + 30000000.0 * sc[4] * x1661 +
    30000000.0 * sc[4] * x2058 + 40000000.0 * sc[8] * x1563 +
    30000000.0 * sc[8] * x2058 + 60000000.0 * sc[9] * x2058 + x1060 * x2058 +
    x107 + 5.2e+27 * x1228 * x2191 * x776 - x1475 * x2125 - x1563 * x2024 +
    x1563 * x2036 - x1563 * x2090 + 5280000.0 * x1563 * x2094 + x1563 * x2125 +
    x1661 * x2065 + x1661 * x2124 + x1661 * x2133 + x1698 + x1783 * x2027 +
    x1783 * x2078 - x1783 * x2079 - x1783 * x2080 - x1783 * x2093 -
    x1783 * x2105 + x1783 * x2134 + x1843 * x2104 + x1890 * x2132 -
    x1890 * x2139 + x1890 * x2141 + x1955 * x1957 - x1957 * x2132 +
    x1957 * x2139 - x1957 * x2141 + x1957 * x2155 + x2026 + x2031 * x232 +
    x2032 + x2035 + x2038 * x351 + x2044 + x2058 * x562 + x2058 * x600 +
    x2058 * x630 + x2077 * x232 + x2091 + x2095 - x2104 * x232 + x2107 +
    x2128 * x232 + x2137 * x769 - x2192 * x769 + x465 + x481 + x497 + x5588 +
    x6100 + x813 + x939 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1058 + x2058) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[438] =
    -70000000.0 * sc[0] * x1671 + 70000000.0 * sc[0] * x1745 + sc[0] * x714 -
    50000000.0 * sc[14] * x1671 + 50000000.0 * sc[14] * x1745 -
    30000000.0 * sc[1] * x124 * x1889 + 30000000.0 * sc[1] * x1671 -
    30000000.0 * sc[1] * x1745 + 73400000.0 * sc[1] * x1775 -
    73400000.0 * sc[1] * x1782 - 90000000.0 * sc[1] * x1889 -
    68000000.0 * sc[1] * x1893 - 90000000.0 * sc[1] * x1903 -
    2000000.0 * sc[1] * x1972 - 57000000.0 * sc[2] * x1085 +
    57000000.0 * sc[2] * x1160 + 80000000.0 * sc[2] * x1469 -
    80000000.0 * sc[2] * x1565 - 15000000.0 * sc[2] * x1671 +
    15000000.0 * sc[2] * x1745 + 80200000.0 * sc[2] * x1972 -
    28000000.0 * sc[3] * x1671 + 28000000.0 * sc[3] * x1745 -
    30000000.0 * sc[4] * x1085 + 30000000.0 * sc[4] * x1160 -
    30000000.0 * sc[8] * x1085 + 30000000.0 * sc[8] * x1160 - x1075 -
    x1085 * x562 - x1085 * x600 + x1160 * x562 + x1160 * x600 - x1469 * x2024 +
    x1469 * x2036 - x1469 * x2090 + 5280000.0 * x1469 * x2094 + x1565 * x2024 -
    x1565 * x2036 + x1565 * x2090 - 5280000.0 * x1565 * x2094 - x1671 * x2065 -
    x1671 * x2124 + x1745 * x2065 + x1745 * x2124 - x1775 * x2078 +
    x1775 * x2079 + x1775 * x2080 + x1775 * x2093 + x1775 * x2105 -
    x1775 * x2134 + x1782 * x2078 - x1782 * x2079 - x1782 * x2080 -
    x1782 * x2093 - x1782 * x2105 + x1782 * x2134 + x1889 * x2077 -
    x1889 * x2104 - x1903 * x2192 + x1955 * x1972 - x1972 * x2132 +
    x1972 * x2139 - x1972 * x2141 + x2026 + x2038 * x62 + x2091 + x2179 +
    x2194 + x226 + x396 + x43 + x506 + x5534 + x5588 + x5604 + x6183 + x6188 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1085 + x1160) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[461] =
    sc[0] * x1299 * x1474 + 30000000.0 * sc[0] * x1299 * x588 +
    1800000.0 * sc[0] * x1301 + 70000000.0 * sc[0] * x865 +
    50000000.0 * sc[14] * x865 - 30000000.0 * sc[1] * x124 * x1892 -
    1800000.0 * sc[1] * x1318 - 2000000.0 * sc[1] * x1649 -
    73400000.0 * sc[1] * x1847 - 90000000.0 * sc[1] * x1892 -
    68000000.0 * sc[1] * x1893 - 90000000.0 * sc[1] * x1903 -
    30000000.0 * sc[1] * x865 + 57000000.0 * sc[2] * x1299 -
    80000000.0 * sc[2] * x1475 + 80000000.0 * sc[2] * x1574 +
    80200000.0 * sc[2] * x1649 + 30000000.0 * sc[2] * x1847 +
    48000000.0 * sc[2] * x1892 + sc[2] * x5667 + 15000000.0 * sc[2] * x865 +
    28000000.0 * sc[3] * x865 - 30000000.0 * sc[4] * x1058 +
    30000000.0 * sc[4] * x1299 + 20000000.0 * sc[4] * x1574 +
    30000000.0 * sc[4] * x865 - 30000000.0 * sc[8] * x1058 +
    30000000.0 * sc[8] * x1299 + 40000000.0 * sc[8] * x1574 +
    60000000.0 * sc[9] * x1299 - x1058 * x562 - x1058 * x600 - x1058 * x630 +
    x1060 * x1299 + x107 - x1075 + x1299 * x630 - x1318 * x640 + x1475 * x2024 +
    x1475 * x2090 - 5280000.0 * x1475 * x2094 - x1475 * x2125 - x1574 * x2024 +
    x1574 * x2036 - x1574 * x2090 + 5280000.0 * x1574 * x2094 + x1574 * x2125 +
    x1649 * x1955 - x1649 * x2132 + x1649 * x2139 - x1649 * x2141 +
    x1649 * x2155 + x1698 + x1847 * x2027 + x1847 * x2078 - x1847 * x2079 -
    x1847 * x2080 - x1847 * x2093 - x1847 * x2105 + x1847 * x2134 +
    x1892 * x2031 + x1892 * x2077 - x1892 * x2104 + x1892 * x2128 -
    x1903 * x2192 + 1.33e+48 * x1948 * x1949 * x776 + x2026 + x2035 +
    x2038 * x351 + x2044 + x2065 * x865 + x2091 + x2095 + x2124 * x865 +
    x2133 * x865 + x396 + x458 + x465 + x481 + x497 + x521 + x5534 + x5588 +
    x6186 + x813 + x939 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (-x1058 + x1299) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[484] =
    refC * sc[6] * x6072 + 30000000.0 * sc[0] * x319 * x588 -
    sc[1] * sc[3] * x5471 - 30000000.0 * sc[1] * x124 * x1895 -
    30000000.0 * sc[1] * x1692 - 73400000.0 * sc[1] * x1881 -
    90000000.0 * sc[1] * x1895 + 30000000.0 * sc[1] * x295 -
    80000000.0 * sc[2] * x1575 + 80000000.0 * sc[2] * x1580 +
    15000000.0 * sc[2] * x1692 + 30000000.0 * sc[2] * x1881 +
    48000000.0 * sc[2] * x1895 - 15000000.0 * sc[2] * x295 +
    57000000.0 * sc[2] * x319 - 57000000.0 * sc[2] * x963 +
    28000000.0 * sc[3] * x1692 - 28000000.0 * sc[3] * x295 +
    30000000.0 * sc[4] * x319 - 30000000.0 * sc[4] * x963 +
    30000000.0 * sc[8] * x319 - 30000000.0 * sc[8] * x963 + x1575 * x2024 +
    x1575 * x2090 - 5280000.0 * x1575 * x2094 - x1580 * x2024 - x1580 * x2090 +
    5280000.0 * x1580 * x2094 + x1692 * x2065 + x1692 * x2124 + x1881 * x2078 -
    x1881 * x2079 - x1881 * x2080 - x1881 * x2093 - x1881 * x2105 +
    x1881 * x2134 + x1895 * x2077 - x1895 * x2104 - x2065 * x295 + x2095 +
    x2102 - x2124 * x295 + x2145 + x2157 + x319 * x600 + x319 * x630 + x396 +
    x461 + x465 + x481 + x501 + x5524 - x562 * x963 - x600 * x963 + x6184 +
    x6186 - x630 * x963 + x808 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 +
     30000000.0 * sc[1] * x124 * x683 - 30000000.0 * sc[1] * x678 -
     73400000.0 * sc[1] * x680 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 - x2024 * x677 +
     x2027 * x680 - x2031 * x683 + x2036 * x677 + x2065 * x678 - x2077 * x683 +
     x2078 * x680 - x2079 * x680 - x2080 * x680 - x2090 * x677 - x2093 * x680 +
     5280000.0 * x2094 * x677 + x2104 * x683 - x2105 * x680 + x2124 * x678 +
     x2125 * x677 - x2128 * x683 + x2133 * x678 + x2134 * x680) *
      (x319 - x963) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x124 * x684 - 30000000.0 * sc[1] * x679 -
     73400000.0 * sc[1] * x681 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2027 * x681 +
     x2031 * x684 - x2038 * x660 + x2065 * x679 + x2077 * x684 + x2078 * x681 -
     x2079 * x681 - x2080 * x681 - x2093 * x681 - x2104 * x684 - x2105 * x681 +
     x2124 * x679 + x2128 * x684 + x2133 * x679 + x2134 * x681 - x2143 * x660) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x66 + x2023 * x230 -
     x2038 * x66 - x2137 * x230 - x2143 * x66 + x2192 * x230) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (1800000.0 * sc[1] * x490 - x1090 * x490 + x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (2000000.0 * sc[1] * x596 + 68000000.0 * sc[1] * x639 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x596 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x603 - x1955 * x596 +
     x2027 * x682 - x2038 * x603 + x2078 * x682 - x2079 * x682 - x2080 * x682 -
     x2093 * x682 - x2105 * x682 + x2132 * x596 + x2134 * x682 - x2139 * x596 +
     x2141 * x596 - x2143 * x603 - x2155 * x596 - x2182 * x639) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-30000000.0 * sc[1] * x124 * x685 + 90000000.0 * sc[1] * x435 +
     2000000.0 * sc[1] * x558 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 - x1955 * x558 +
     x2023 * x435 + x2031 * x685 + x2077 * x685 - x2104 * x685 + x2128 * x685 +
     x2132 * x558 - x2137 * x435 - x2139 * x558 + x2141 * x558 - x2155 * x558 +
     x2192 * x435) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[2] =
    15000000.0 * sc[10] * x1457 + 30000000.0 * sc[2] * x1016 -
    96000000.0 * sc[2] * x1240 + 57000000.0 * sc[2] * x1476 -
    10000000.0 * sc[2] * x1884 - sc[2] * x633 + 80000000.0 * sc[2] * x649 -
    80000000.0 * sc[2] * x651 - 96000000.0 * sc[2] * x726 -
    100000000.0 * sc[2] * x821 + 96000000.0 * sc[2] * x826 -
    60000000.0 * sc[2] * x830 - 96240000.0 * sc[2] * x909 +
    96240000.0 * sc[2] * x935 + 60000000.0 * sc[2] * x951 -
    57000000.0 * sc[2] * x973 - 30000000.0 * sc[2] * x988 -
    33000000.0 * sc[3] * x1476 + 33000000.0 * sc[3] * x973 - x1235 * x2259 -
    x1235 * x856 - 576000.0 * x1421 - x1527 * x1884 + 1000000.0 * x2043 +
    x2079 * x830 - x2079 * x951 + x2080 * x830 - x2080 * x951 -
    1000000.0 * x2083 - x2187 * x649 + x2187 * x651 + x2195 * x726 -
    x2195 * x826 + x2196 * x909 - x2196 * x935 - x2257 * x830 + x2257 * x951 +
    x2263 * x830 - x2263 * x951 + 576000.0 * x5562 - x584 * x649 + x584 * x651 -
    x649 * x891 + x651 * x891 + x695 * x909 - x695 * x935 + 1204.0 * x7379 -
    1204.0 * x7383 + x7396 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1476 + x973) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (96000000.0 * sc[2] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[25] =
    57000000.0 * sc[10] * x1107 + 30000000.0 * sc[11] * x1252 + sc[12] * x5500 +
    sc[16] * x790 + 48000000.0 * sc[17] * x1163 + sc[17] * x1358 * x936 +
    80200000.0 * sc[18] * x1332 - 96000000.0 * sc[2] * x1061 -
    60000000.0 * sc[2] * x1065 + 30000000.0 * sc[2] * x1073 -
    500000.0 * sc[2] * x1275 * x25 - 10000000.0 * sc[2] * x1422 +
    96240000.0 * sc[2] * x1504 - 100000000.0 * sc[2] * x1623 -
    57000000.0 * sc[2] * x1636 + 57000000.0 * sc[2] * x1708 -
    20000000.0 * sc[2] * x1960 * x211 - 96000000.0 * sc[2] * x476 -
    96240000.0 * sc[2] * x523 + 80000000.0 * sc[2] * x857 +
    96000000.0 * sc[2] * x950 - 80000000.0 * sc[2] * x964 +
    60000000.0 * sc[2] * x971 - 30000000.0 * sc[2] * x985 +
    sc[3] * x1061 * x2188 + 33000000.0 * sc[3] * x1636 -
    33000000.0 * sc[3] * x1708 + sc[3] * x5468 + sc[4] * x1169 + sc[6] * x2075 +
    x1065 * x2079 + x1065 * x2080 - x1065 * x2257 + x1065 * x2263 -
    x1422 * x1527 - x1504 * x2196 - x1504 * x695 - x2079 * x971 - x2080 * x971 -
    x211 * x2259 - x2187 * x857 + x2187 * x964 - x2195 * x950 + x2196 * x523 +
    x2257 * x971 - x2263 * x971 + 80000000.0 * x332 * x433 +
    100000000.0 * x364 * x736 + 15000000.0 * x376 * x433 + x523 * x695 -
    x584 * x857 + x584 * x964 + x7429 + x7439 - x857 * x891 + x891 * x964 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1636 - x1708) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[48] =
    -sc[0] * x633 - sc[10] * x2 * x7381 - sc[11] * x200 - sc[12] * x7522 -
    20.4 * sc[13] * exp(x2185) - sc[15] * x7492 - 100000000.0 * sc[16] -
    500000.0 * sc[1] * x1275 * x25 - 480000.0 * sc[2] * x1 * x1275 -
    96000000.0 * sc[2] * x140 + 96000000.0 * sc[2] * x1556 -
    96000000.0 * sc[2] * x1654 + 96240000.0 * sc[2] * x1656 -
    60000000.0 * sc[2] * x1664 - 10000000.0 * sc[2] * x1678 -
    96240000.0 * sc[2] * x1721 - 100000000.0 * sc[2] * x1723 -
    57000000.0 * sc[2] * x1772 + 57000000.0 * sc[2] * x1794 +
    30000000.0 * sc[2] * x315 - 30000000.0 * sc[2] * x318 +
    60000000.0 * sc[2] * x759 + 80000000.0 * sc[2] * x965 -
    80000000.0 * sc[2] * x972 + 33000000.0 * sc[3] * x1772 -
    33000000.0 * sc[3] * x1794 - sc[4] * x5612 - sc[5] * x5610 -
    0.0357 * sc[5] * x7505 - 20000000.0 * sc[6] - sc[7] * x7441 -
    84300000.0 * sc[8] - sc[9] * x7449 + 100000000.0 * x109 +
    100000000.0 * x1136 + 96000000.0 * x1319 + x140 * x2195 +
    10000000.0 * x1439 - 57000000.0 * x1473 - x1527 * x1678 - x1556 * x2195 -
    x1656 * x2196 - x1656 * x695 + x1664 * x2079 + x1664 * x2080 -
    x1664 * x2257 + x1664 * x2263 + x1721 * x2196 + x1721 * x695 - x182 * x549 -
    x2079 * x759 - x2080 * x759 - x2187 * x965 + x2187 * x972 - x2189 * x517 -
    x224 * x2259 - x224 * x856 + x2257 * x759 - x2263 * x759 -
    96000000.0 * x234 - x34 - 33000000.0 * x382 * x433 - 60000000.0 * x433 -
    96240000.0 * x440 + 10000000.0 * x513 + 96000000.0 * x581 - x584 * x965 +
    x584 * x972 - 30000000.0 * x593 - 80000000.0 * x594 + x7429 + x7491 +
    x7503 + x7521 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1772 - x1794) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[71] =
    sc[1] * x5468 - 20000000.0 * sc[2] * x1056 * x1960 +
    30000000.0 * sc[2] * x1416 + 96000000.0 * sc[2] * x1627 -
    96000000.0 * sc[2] * x1630 + 60000000.0 * sc[2] * x1666 -
    60000000.0 * sc[2] * x1672 - 96000000.0 * sc[2] * x1733 -
    100000000.0 * sc[2] * x1757 + 96240000.0 * sc[2] * x1762 -
    96240000.0 * sc[2] * x1764 - 10000000.0 * sc[2] * x1765 -
    57000000.0 * sc[2] * x1829 + 57000000.0 * sc[2] * x1853 -
    30000000.0 * sc[2] * x883 + 80000000.0 * sc[2] * x974 -
    80000000.0 * sc[2] * x976 + 33000000.0 * sc[3] * x1829 -
    33000000.0 * sc[3] * x1853 + sc[8] * x7546 + 240000.0 * x1 * x2146 -
    x1056 * x2259 - 240000.0 * x1421 + 33000000.0 * x1473 - x1527 * x1765 -
    x1627 * x2195 + x1630 * x2195 - x1666 * x2079 - x1666 * x2080 +
    x1666 * x2257 - x1666 * x2263 + x1672 * x2079 + x1672 * x2080 -
    x1672 * x2257 + x1672 * x2263 - x1762 * x2196 - x1762 * x695 +
    x1764 * x2196 + x1764 * x695 + 500000.0 * x2043 - 500000.0 * x2083 -
    x2187 * x974 + x2187 * x976 + x2188 * x234 + 240000.0 * x5562 -
    x584 * x974 + x584 * x976 + 3612.0 * x7379 - 3612.0 * x7383 + x7528 +
    x7530 + x7573 - x891 * x974 + x891 * x976 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1829 - x1853) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[94] =
    30000000.0 * sc[10] * x1255 + 10000000.0 * sc[12] * x1427 + sc[16] * x159 +
    20000000.0 * sc[17] * x7602 + sc[19] * x7580 + sc[1] * x1169 +
    30000000.0 * sc[2] * x1645 - 30000000.0 * sc[2] * x1659 +
    96000000.0 * sc[2] * x1677 - 96000000.0 * sc[2] * x1699 +
    60000000.0 * sc[2] * x1700 - 96240000.0 * sc[2] * x1776 +
    96240000.0 * sc[2] * x1798 - 100000000.0 * sc[2] * x1831 -
    10000000.0 * sc[2] * x1879 - 57000000.0 * sc[2] * x1885 +
    57000000.0 * sc[2] * x1899 - 96000000.0 * sc[2] * x219 -
    60000000.0 * sc[2] * x398 - sc[2] * x5612 + 80000000.0 * sc[2] * x977 -
    80000000.0 * sc[2] * x982 + 33000000.0 * sc[3] * x1885 -
    33000000.0 * sc[3] * x1899 + sc[6] * x7574 + sc[8] * x7577 + x101 * x440 -
    x1527 * x1879 - x1677 * x2195 + x1699 * x2195 - x1700 * x2079 -
    x1700 * x2080 + x1700 * x2257 - x1700 * x2263 + x1776 * x2196 +
    x1776 * x695 - x1798 * x2196 - x1798 * x695 + 500000.0 * x2042 * x25 +
    x2079 * x398 + x2080 * x398 - x2187 * x977 + x2187 * x982 - x2257 * x398 -
    x2259 * x276 + x2262 * x433 + x2263 * x398 - x276 * x856 - x584 * x977 +
    x584 * x982 + x7429 + x7582 + 0.0714 * x7583 + x7627 - x891 * x977 +
    x891 * x982 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1885 - x1899) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (96000000.0 * sc[2] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[117] =
    -80000000.0 * sc[2] * x1010 + 30000000.0 * sc[2] * x1660 -
    30000000.0 * sc[2] * x1662 - 96000000.0 * sc[2] * x1668 +
    96000000.0 * sc[2] * x1741 + 60000000.0 * sc[2] * x1760 -
    60000000.0 * sc[2] * x1768 + 96240000.0 * sc[2] * x1779 -
    100000000.0 * sc[2] * x1844 - 96240000.0 * sc[2] * x1856 -
    10000000.0 * sc[2] * x1888 - 96000000.0 * sc[2] * x1946 -
    57000000.0 * sc[2] * x1954 + 57000000.0 * sc[2] * x1980 - sc[2] * x5610 -
    0.0357 * sc[2] * x7505 + 80000000.0 * sc[2] * x987 +
    33000000.0 * sc[3] * x1954 - 33000000.0 * sc[3] * x1980 + x1010 * x2187 +
    x1010 * x584 + x1010 * x891 - 3696000.0 * x1421 - x1527 * x1888 +
    x1668 * x2195 - x1741 * x2195 - x1760 * x2079 - x1760 * x2080 +
    x1760 * x2257 - x1760 * x2263 + x1768 * x2079 + x1768 * x2080 -
    x1768 * x2257 + x1768 * x2263 - x1779 * x2196 - x1779 * x695 -
    x1793 * x2259 - x1793 * x856 + x1856 * x2196 + x1856 * x695 +
    3000000.0 * x2043 - 3000000.0 * x2083 - x2187 * x987 + 3696000.0 * x5562 -
    x584 * x987 + 3612.0 * x7379 - 3612.0 * x7383 + x7667 - x891 * x987 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1954 - x1980) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[140] =
    sc[1] * x2075 + 80000000.0 * sc[2] * x1012 - 80000000.0 * sc[2] * x1014 -
    10000000.0 * sc[2] * x1419 + 30000000.0 * sc[2] * x1665 -
    30000000.0 * sc[2] * x1670 + 96000000.0 * sc[2] * x1759 -
    96000000.0 * sc[2] * x1769 + 60000000.0 * sc[2] * x1770 -
    60000000.0 * sc[2] * x1771 + 96240000.0 * sc[2] * x1851 -
    96240000.0 * sc[2] * x1878 - 96000000.0 * sc[2] * x1985 -
    57000000.0 * sc[2] * x2022 + 57000000.0 * sc[2] * x2045 -
    20000000.0 * sc[2] + 33000000.0 * sc[3] * x2022 -
    33000000.0 * sc[3] * x2045 + sc[4] * x7574 - x1012 * x2187 - x1012 * x584 -
    x1012 * x891 + x1014 * x2187 + x1014 * x584 + x1014 * x891 - x1419 * x1527 -
    x1759 * x2195 + x1769 * x2195 - x1770 * x2079 - x1770 * x2080 +
    x1770 * x2257 - x1770 * x2263 + x1771 * x2079 + x1771 * x2080 -
    x1771 * x2257 + x1771 * x2263 - x1842 * x2259 - x1842 * x856 -
    x1851 * x2196 - x1851 * x695 + x1878 * x2196 + x1878 * x695 + x7695 +
    x7705 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x2022 - x2045) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[163] =
    80000000.0 * sc[2] * x1015 - 80000000.0 * sc[2] * x1019 +
    30000000.0 * sc[2] * x1673 - 30000000.0 * sc[2] * x1674 +
    60000000.0 * sc[2] * x1780 - 60000000.0 * sc[2] * x1781 +
    96000000.0 * sc[2] * x1786 - 96240000.0 * sc[2] * x1898 +
    96240000.0 * sc[2] * x1906 - 96000000.0 * sc[2] * x202 -
    57000000.0 * sc[2] * x2081 + 57000000.0 * sc[2] * x2099 - sc[2] * x7441 +
    33000000.0 * sc[3] * x2081 - 33000000.0 * sc[3] * x2099 - x1015 * x2187 -
    x1015 * x584 - x1015 * x891 + x1019 * x2187 + x1019 * x584 + x1019 * x891 -
    x1780 * x2079 - x1780 * x2080 + x1780 * x2257 - x1780 * x2263 +
    x1781 * x2079 + x1781 * x2080 - x1781 * x2257 + x1781 * x2263 -
    x1786 * x2195 + x1898 * x2196 + x1898 * x695 - x1906 * x2196 -
    x1906 * x695 + x202 * x2195 + x7737 + x7747 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x2081 - x2099) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (96000000.0 * sc[2] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[186] =
    48000000.0 * sc[10] * x1184 + 16040000.0 * sc[12] * x1338 +
    sc[17] * x1172 * x936 + 80000000.0 * sc[2] * x1022 -
    80000000.0 * sc[2] * x1025 + 30000000.0 * sc[2] * x1680 -
    30000000.0 * sc[2] * x1681 - 10000000.0 * sc[2] * x1727 +
    60000000.0 * sc[2] * x1788 - 60000000.0 * sc[2] * x1789 +
    96000000.0 * sc[2] * x1792 - 96000000.0 * sc[2] * x1832 +
    96240000.0 * sc[2] * x1947 - 96240000.0 * sc[2] * x1958 -
    57000000.0 * sc[2] * x2123 + 57000000.0 * sc[2] * x2149 -
    96000000.0 * sc[2] * x453 - 84300000.0 * sc[2] +
    33000000.0 * sc[3] * x2123 - 33000000.0 * sc[3] * x2149 + sc[3] * x7546 +
    sc[4] * x7577 - x1022 * x2187 - x1022 * x584 - x1022 * x891 +
    x1025 * x2187 + x1025 * x584 + x1025 * x891 - x1238 * x2259 - x1238 * x856 -
    x1527 * x1727 - x1788 * x2079 - x1788 * x2080 + x1788 * x2257 -
    x1788 * x2263 + x1789 * x2079 + x1789 * x2080 - x1789 * x2257 +
    x1789 * x2263 - x1792 * x2195 + x1832 * x2195 - x1947 * x2196 -
    x1947 * x695 + x1958 * x2196 + x1958 * x695 + x7695 + x7788 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x2123 - x2149) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[209] =
    80000000.0 * sc[2] * x1049 - 80000000.0 * sc[2] * x1053 +
    30000000.0 * sc[2] * x1683 - 30000000.0 * sc[2] * x1689 +
    60000000.0 * sc[2] * x1791 - 60000000.0 * sc[2] * x1797 +
    96000000.0 * sc[2] * x1834 - 96000000.0 * sc[2] * x1848 +
    96240000.0 * sc[2] * x1959 - 96240000.0 * sc[2] * x1964 -
    96000000.0 * sc[2] * x2020 - 57000000.0 * sc[2] * x2138 +
    57000000.0 * sc[2] * x2197 - sc[2] * x7449 - 100000000.0 * sc[2] * x816 +
    33000000.0 * sc[3] * x2138 - 33000000.0 * sc[3] * x2197 - x1049 * x2187 -
    x1049 * x584 - x1049 * x891 + x1053 * x2187 + x1053 * x584 + x1053 * x891 -
    480000.0 * x1421 - x1791 * x2079 - x1791 * x2080 + x1791 * x2257 -
    x1791 * x2263 + x1797 * x2079 + x1797 * x2080 - x1797 * x2257 +
    x1797 * x2263 - x1834 * x2195 + x1848 * x2195 - x1959 * x2196 -
    x1959 * x695 + x1964 * x2196 + x1964 * x695 + 1000000.0 * x2043 -
    1000000.0 * x2083 + 480000.0 * x5562 + 1204.0 * x7379 - 1204.0 * x7383 +
    x7819 + x7826 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x2138 - x2197) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[232] =
    15000000.0 * sc[0] * x1457 + 57000000.0 * sc[1] * x1107 +
    200000000.0 * sc[1] * x1219 * x736 - 10000000.0 * sc[2] * x1003 +
    80000000.0 * sc[2] * x1066 - 80000000.0 * sc[2] * x1068 +
    30000000.0 * sc[2] * x1693 - 30000000.0 * sc[2] * x1694 +
    60000000.0 * sc[2] * x1801 - 60000000.0 * sc[2] * x1804 -
    96000000.0 * sc[2] * x1840 + 96000000.0 * sc[2] * x1861 -
    20000000.0 * sc[2] * x1960 * x793 + 96240000.0 * sc[2] * x1965 -
    sc[2] * x2 * x7381 - 96000000.0 * sc[2] * x2021 -
    57000000.0 * sc[2] * x2184 + 57000000.0 * sc[2] * x2274 -
    96240000.0 * sc[2] * x646 - 100000000.0 * sc[2] * x65 +
    33000000.0 * sc[3] * x2184 - 33000000.0 * sc[3] * x2274 +
    30000000.0 * sc[4] * x1255 + 48000000.0 * sc[8] * x1184 - x1003 * x1527 -
    x1066 * x2187 - x1066 * x584 - x1066 * x891 + x1068 * x2187 + x1068 * x584 +
    x1068 * x891 - 420000.0 * x1421 - x1801 * x2079 - x1801 * x2080 +
    x1801 * x2257 - x1801 * x2263 + x1804 * x2079 + x1804 * x2080 -
    x1804 * x2257 + x1804 * x2263 + x1840 * x2195 - x1861 * x2195 -
    x1965 * x2196 - x1965 * x695 + 750000.0 * x2043 - 750000.0 * x2083 +
    x2186 * x594 + x2196 * x646 - x2259 * x793 + 100000000.0 * x289 * x594 +
    420000.0 * x5562 + x646 * x695 + 903.0 * x7379 - 903.0 * x7383 + x7827 +
    x7870 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x2184 - x2274) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[255] =
    refC * x2 * x40 + 30000000.0 * sc[1] * x1252 - 80000000.0 * sc[2] * x1071 -
    57000000.0 * sc[2] * x1555 + 30000000.0 * sc[2] * x1695 -
    60000000.0 * sc[2] * x1696 - 30000000.0 * sc[2] * x1697 +
    60000000.0 * sc[2] * x1806 + 96000000.0 * sc[2] * x1845 - sc[2] * x200 +
    57000000.0 * sc[2] * x2326 - 100000000.0 * sc[2] * x602 +
    96240000.0 * sc[2] * x655 + 80000000.0 * sc[2] * x661 -
    96000000.0 * sc[2] * x725 - 96240000.0 * sc[2] * x908 -
    96000000.0 * sc[2] * x930 + 33000000.0 * sc[3] * x1555 -
    33000000.0 * sc[3] * x2326 + x1071 * x2187 + x1071 * x584 + x1071 * x891 -
    864000.0 * x1421 + x1696 * x2079 + x1696 * x2080 - x1696 * x2257 +
    x1696 * x2263 - x1806 * x2079 - x1806 * x2080 + x1806 * x2257 -
    x1806 * x2263 - x1845 * x2195 + 1000000.0 * x2043 - 1000000.0 * x2083 -
    x2187 * x661 + x2195 * x725 - x2196 * x655 + x2196 * x908 + x519 * x594 +
    864000.0 * x5562 - x584 * x661 - x655 * x695 - x661 * x891 + x695 * x908 +
    2107.0 * x7379 - 2107.0 * x7383 + x7819 + x7908 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1555 - x2326) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (96000000.0 * sc[2] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[278] =
    sc[1] * x5500 - 57000000.0 * sc[2] * x1021 + 80000000.0 * sc[2] * x1072 -
    80000000.0 * sc[2] * x1076 - 96000000.0 * sc[2] * x1502 -
    10000000.0 * sc[2] * x1572 + 30000000.0 * sc[2] * x1701 -
    30000000.0 * sc[2] * x1702 + 60000000.0 * sc[2] * x1755 -
    60000000.0 * sc[2] * x1761 + 96000000.0 * sc[2] * x1880 -
    96000000.0 * sc[2] * x1887 - 20000000.0 * sc[2] * x1960 * x228 +
    96240000.0 * sc[2] * x1976 - 96240000.0 * sc[2] * x1977 +
    57000000.0 * sc[2] * x2366 - sc[2] * x7522 + 33000000.0 * sc[3] * x1021 -
    33000000.0 * sc[3] * x2366 + 10000000.0 * sc[4] * x1427 +
    16040000.0 * sc[8] * x1338 - x1072 * x2187 - x1072 * x584 - x1072 * x891 +
    x1076 * x2187 + x1076 * x584 + x1076 * x891 - x1527 * x1572 -
    x1755 * x2079 - x1755 * x2080 + x1755 * x2257 - x1755 * x2263 +
    x1761 * x2079 + x1761 * x2080 - x1761 * x2257 + x1761 * x2263 -
    x1880 * x2195 + x1887 * x2195 - x1976 * x2196 - x1976 * x695 +
    x1977 * x2196 + x1977 * x695 - x2259 * x228 + 96000000.0 * x440 * x444 +
    x7695 + x7947 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x1021 - x2366) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[301] =
    80000000.0 * sc[2] * x1077 - 80000000.0 * sc[2] * x1081 +
    30000000.0 * sc[2] * x1704 - 30000000.0 * sc[2] * x1706 +
    60000000.0 * sc[2] * x1767 - 60000000.0 * sc[2] * x1833 -
    96000000.0 * sc[2] * x1896 - 96240000.0 * sc[2] * x1986 -
    96000000.0 * sc[2] * x1995 + 57000000.0 * sc[2] * x2354 -
    100000000.0 * sc[2] * x659 - 57000000.0 * sc[2] * x742 -
    20.4 * sc[2] * exp(x2185) - 33000000.0 * sc[3] * x2354 +
    33000000.0 * sc[3] * x742 - x1077 * x2187 - x1077 * x584 - x1077 * x891 +
    x1081 * x2187 + x1081 * x584 + x1081 * x891 - x1767 * x2079 -
    x1767 * x2080 + x1767 * x2257 - x1767 * x2263 + x1833 * x2079 +
    x1833 * x2080 - x1833 * x2257 + x1833 * x2263 + x1896 * x2195 -
    x1979 * x2196 + x1986 * x2196 + x1986 * x695 + x7977 + x7988 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x2354 + x742) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[324] =
    80000000.0 * sc[2] * x1083 - 80000000.0 * sc[2] * x1089 +
    57000000.0 * sc[2] * x1174 - 57000000.0 * sc[2] * x1231 +
    30000000.0 * sc[2] * x1707 - 30000000.0 * sc[2] * x1709 +
    60000000.0 * sc[2] * x1835 - 60000000.0 * sc[2] * x1836 -
    96000000.0 * sc[2] * x1897 - 96240000.0 * sc[2] * x1992 -
    96000000.0 * sc[2] * x488 - 100000000.0 * sc[2] * x820 -
    33000000.0 * sc[3] * x1174 + 33000000.0 * sc[3] * x1231 - x1083 * x2187 -
    x1083 * x584 - x1083 * x891 + x1089 * x2187 + x1089 * x584 + x1089 * x891 -
    x1835 * x2079 - x1835 * x2080 + x1835 * x2257 - x1835 * x2263 +
    x1836 * x2079 + x1836 * x2080 - x1836 * x2257 + x1836 * x2263 +
    x1897 * x2195 - x1979 * x2196 + x1992 * x2196 + x1992 * x695 + x7988 +
    x8016 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1174 + x1231) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[347] =
    80000000.0 * sc[2] * x1091 - 100000000.0 * sc[2] * x1135 +
    57000000.0 * sc[2] * x116 - 80000000.0 * sc[2] * x1366 +
    30000000.0 * sc[2] * x1711 - 96000000.0 * sc[2] * x1716 -
    30000000.0 * sc[2] * x1719 + 60000000.0 * sc[2] * x1838 -
    60000000.0 * sc[2] * x1839 - 96000000.0 * sc[2] * x1841 -
    96240000.0 * sc[2] * x1886 + 96000000.0 * sc[2] * x1904 +
    96240000.0 * sc[2] * x1999 - sc[2] * x7492 - 57000000.0 * sc[2] * x81 -
    33000000.0 * sc[3] * x116 + 33000000.0 * sc[3] * x81 - x1091 * x2187 -
    x1091 * x584 - x1091 * x891 + x1366 * x2187 + x1366 * x584 + x1366 * x891 -
    x1838 * x2079 - x1838 * x2080 + x1838 * x2257 - x1838 * x2263 +
    x1839 * x2079 + x1839 * x2080 - x1839 * x2257 + x1839 * x2263 +
    x1841 * x2195 + x1886 * x2196 + x1886 * x695 - x1904 * x2195 -
    x1999 * x2196 - x1999 * x695 + x7987 + x8048 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x116 + x81) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (96000000.0 * sc[2] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[370] =
    sc[1] * x790 + 80000000.0 * sc[2] * x1367 - 80000000.0 * sc[2] * x1472 +
    57000000.0 * sc[2] * x1625 - 96000000.0 * sc[2] * x169 +
    30000000.0 * sc[2] * x1730 - 30000000.0 * sc[2] * x1731 -
    60000000.0 * sc[2] * x1849 - 57000000.0 * sc[2] * x848 -
    100000000.0 * sc[2] - 33000000.0 * sc[3] * x1625 +
    33000000.0 * sc[3] * x848 + sc[4] * x159 - x1367 * x1491 - x1367 * x2187 -
    x1367 * x584 - x1367 * x891 + x1472 * x1491 + x1472 * x2187 + x1472 * x584 +
    x1472 * x891 + x1551 * x1849 + x169 * x2195 + x169 * x2272 + x1849 * x2079 +
    x1849 * x2080 - x1849 * x2257 + x1849 * x2263 + x7737 + x8074 + x8077 +
    x8087 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1625 + x848) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[393] =
    48000000.0 * sc[1] * x1163 + sc[1] * x1358 * x936 -
    10000000.0 * sc[2] * x1029 - 100000000.0 * sc[2] * x1554 -
    30000000.0 * sc[2] * x1739 - 60000000.0 * sc[2] * x1852 -
    96000000.0 * sc[2] * x1882 - 20000000.0 * sc[2] * x1960 * x434 -
    sc[2] * x7498 - 57000000.0 * sc[2] * x851 - 80000000.0 * sc[2] * x854 +
    33000000.0 * sc[3] * x851 + 20000000.0 * sc[4] * x7602 + x1491 * x854 +
    x1551 * x1852 + x1852 * x2079 + x1852 * x2080 - x1852 * x2257 +
    x1852 * x2263 + x1882 * x2195 + x1882 * x2272 + x2187 * x854 -
    x2259 * x434 + x584 * x854 + x7429 + x8074 + x8077 + x8098 + x8105 + x8109 +
    x8111 + x8113 + x854 * x891 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1058 + x851) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[416] =
    80200000.0 * sc[1] * x1332 - 80000000.0 * sc[2] * x1563 -
    30000000.0 * sc[2] * x1661 - 60000000.0 * sc[2] * x1783 -
    96240000.0 * sc[2] * x1957 - 20000000.0 * sc[2] * x1960 * x769 -
    57000000.0 * sc[2] * x2058 - 96000000.0 * sc[2] * x232 +
    33000000.0 * sc[3] * x2058 + x1491 * x1563 + x1551 * x1783 + x1563 * x2187 +
    x1563 * x584 + x1563 * x891 + x1783 * x2079 + x1783 * x2080 -
    x1783 * x2257 + x1783 * x2263 + x1957 * x2196 + x1957 * x695 +
    x2195 * x232 - x2259 * x769 + x2272 * x232 + x7695 + x8066 + x8073 + x8077 +
    x8098 + x8105 + x8109 + x8111 + x8113 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1058 + x2058) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[439] =
    57000000.0 * sc[2] * x1085 - 57000000.0 * sc[2] * x1160 -
    80000000.0 * sc[2] * x1469 + 80000000.0 * sc[2] * x1565 +
    30000000.0 * sc[2] * x1671 - 30000000.0 * sc[2] * x1745 +
    60000000.0 * sc[2] * x1775 - 60000000.0 * sc[2] * x1782 +
    96000000.0 * sc[2] * x1843 - 96000000.0 * sc[2] * x1889 +
    96240000.0 * sc[2] * x1890 - 96240000.0 * sc[2] * x1972 -
    100000000.0 * sc[2] * x62 - 33000000.0 * sc[3] * x1085 +
    33000000.0 * sc[3] * x1160 + sc[4] * x7580 + x1469 * x2187 + x1469 * x584 +
    x1469 * x891 - x1565 * x2187 - x1565 * x584 - x1565 * x891 - x1775 * x2079 -
    x1775 * x2080 + x1775 * x2257 - x1775 * x2263 + x1782 * x2079 +
    x1782 * x2080 - x1782 * x2257 + x1782 * x2263 - x1843 * x2195 +
    x1889 * x2195 - x1890 * x695 - x1903 * x2259 + x1972 * x2196 +
    x1972 * x695 + x7429 - x7733 + x8066 + x8105 + x8168 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1085 + x1160) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[462] =
    -57000000.0 * sc[2] * x1299 - 96000000.0 * sc[2] * x1318 -
    80000000.0 * sc[2] * x1574 - 96240000.0 * sc[2] * x1649 -
    60000000.0 * sc[2] * x1847 - 96000000.0 * sc[2] * x1892 -
    10000000.0 * sc[2] * x1893 - 30000000.0 * sc[2] * x865 +
    33000000.0 * sc[3] * x1299 + x1491 * x1574 - x1527 * x1893 + x1551 * x1847 +
    x1574 * x2187 + x1574 * x584 + x1574 * x891 + x1649 * x2196 + x1649 * x695 +
    x1847 * x2079 + x1847 * x2080 - x1847 * x2257 + x1847 * x2263 +
    x1892 * x2195 + x1892 * x2272 - x1903 * x2259 + x7695 - x7733 + x8066 +
    x8073 + x8077 + x8098 + x8109 + x8111 + x8113 + x8181 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (-x1058 + x1299) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (96000000.0 * sc[2] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[485] =
    80000000.0 * sc[2] * x1575 - 80000000.0 * sc[2] * x1580 -
    30000000.0 * sc[2] * x1692 - 60000000.0 * sc[2] * x1881 -
    96000000.0 * sc[2] * x1895 + 30000000.0 * sc[2] * x295 -
    57000000.0 * sc[2] * x319 + 57000000.0 * sc[2] * x963 +
    33000000.0 * sc[3] * x319 - 33000000.0 * sc[3] * x963 - x1491 * x1575 +
    x1491 * x1580 + x1551 * x1881 - x1575 * x2187 - x1575 * x584 -
    x1575 * x891 + x1580 * x2187 + x1580 * x584 + x1580 * x891 + x1881 * x2079 +
    x1881 * x2080 - x1881 * x2257 + x1881 * x2263 + x1895 * x2195 +
    x1895 * x2272 + x7737 + x8074 + x8077 + x8087 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x1491 * x677 +
     x1551 * x680 + x2079 * x680 + x2080 * x680 + x2187 * x677 - x2195 * x683 -
     x2257 * x680 + x2263 * x680 - x2272 * x683 + x584 * x677 + x677 * x891) *
      (x319 - x963) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x1551 * x681 +
     x2079 * x681 + x2080 * x681 + x2195 * x684 - x2257 * x681 + x2263 * x681 +
     x2272 * x684) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (100000000.0 * sc[2] * x66 + x2259 * x230 + x230 * x856) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (96000000.0 * sc[2] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (96240000.0 * sc[2] * x596 + 100000000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x639 - 60000000.0 * sc[2] * x682 + x1527 * x639 +
     x1551 * x682 + x2079 * x682 + x2080 * x682 - x2196 * x596 - x2257 * x682 +
     x2263 * x682 - x596 * x695) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (96240000.0 * sc[2] * x558 - 96000000.0 * sc[2] * x685 + x2195 * x685 -
     x2196 * x558 + x2259 * x435 + x2272 * x685 + x435 * x856 - x558 * x695) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[3] =
    40000000.0 * sc[3] * x1016 - 158000.0 * sc[3] * x1235 -
    90000.0 * sc[3] * x1240 + 33000000.0 * sc[3] * x1476 - sc[3] * x559 -
    10000000.0 * sc[3] * x821 - 20000.0 * sc[3] * x909 +
    20000.0 * sc[3] * x935 - 33000000.0 * sc[3] * x973 -
    40000000.0 * sc[3] * x988 + x1235 * x2259 + 288000.0 * x1421 +
    x1527 * x1884 + x1529 * x830 - x1529 * x951 - x1544 * x726 + x1544 * x826 -
    x1578 * x1884 + 13200000.0 * x2094 * x649 - 13200000.0 * x2094 * x651 +
    x2193 - x2195 * x726 + x2195 * x826 + x2257 * x830 - x2257 * x951 +
    x2310 * x726 - x2310 * x826 + x2312 * x830 - x2312 * x951 - x2316 * x726 +
    x2316 * x826 - x2317 * x830 + x2317 * x951 + x2324 * x830 - x2324 * x951 -
    x2325 * x649 + x2325 * x651 - 288000.0 * x5562 + x8231 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1476 + x973) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (90000.0 * sc[3] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[26] =
    5280000.0 * sc[11] * sc[1] * x403 - sc[3] * x1061 * x1493 -
    sc[3] * x1061 * x2188 - sc[3] * x1061 * x2315 + 40000000.0 * sc[3] * x1073 +
    20000.0 * sc[3] * x1504 - 10000000.0 * sc[3] * x1623 -
    33000000.0 * sc[3] * x1636 + 33000000.0 * sc[3] * x1708 -
    158000.0 * sc[3] * x211 - 90000.0 * sc[3] * x476 - 20000.0 * sc[3] * x523 -
    40000000.0 * sc[3] * x985 + sc[6] * x1141 + x1061 * x2310 + x1065 * x1529 +
    x1065 * x2257 + x1065 * x2312 - x1065 * x2317 + x1065 * x2324 +
    28000000.0 * x1220 * x1455 + x1422 * x1527 - x1422 * x1578 - x1529 * x971 +
    x1544 * x950 + 13200000.0 * x2094 * x857 - 13200000.0 * x2094 * x964 +
    x211 * x2259 + x2193 + x2195 * x950 - x2257 * x971 - x2310 * x950 -
    x2312 * x971 + x2316 * x950 + x2317 * x971 - x2324 * x971 - x2325 * x857 +
    x2325 * x964 + x5481 + x8253 + x8260 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1636 - x1708) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (90000.0 * sc[3] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[49] =
    sc[11] * x200 + 240000.0 * sc[2] * x1 * x1275 - 90000.0 * sc[3] * x1654 +
    20000.0 * sc[3] * x1656 - 20000.0 * sc[3] * x1721 -
    10000000.0 * sc[3] * x1723 - 33000000.0 * sc[3] * x1772 +
    33000000.0 * sc[3] * x1794 - 158000.0 * sc[3] * x224 +
    40000000.0 * sc[3] * x315 - 40000000.0 * sc[3] * x318 + sc[4] * x5612 +
    20000000.0 * sc[6] - x140 * x1544 - x140 * x2195 + x140 * x2310 -
    x140 * x2316 + x1527 * x1678 + x1529 * x1664 - x1529 * x759 +
    x1544 * x1556 + x1556 * x2195 - x1556 * x2310 + x1556 * x2316 -
    x1578 * x1678 + x1664 * x2257 + x1664 * x2312 - x1664 * x2317 +
    x1664 * x2324 + x182 * x549 + 13200000.0 * x2094 * x965 -
    13200000.0 * x2094 * x972 + x2189 * x517 + x2193 + x224 * x2259 -
    x2257 * x759 - x2312 * x759 + x2317 * x759 - x2324 * x759 - x2325 * x965 +
    x2325 * x972 + 33000000.0 * x382 * x433 + x8253 + x8287 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1772 - x1794) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (90000.0 * sc[3] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[72] =
    -sc[0] * x559 - sc[12] * x8351 - sc[14] * x8347 -
    300000.0 * sc[15] * x1326 - 1600000.0 * sc[16] * x8290 - sc[20] * x8297 -
    158000.0 * sc[3] * x1056 + 40000000.0 * sc[3] * x1416 -
    90000.0 * sc[3] * x1733 - 10000000.0 * sc[3] * x1757 +
    20000.0 * sc[3] * x1762 - 20000.0 * sc[3] * x1764 -
    33000000.0 * sc[3] * x1829 + 33000000.0 * sc[3] * x1853 -
    40000000.0 * sc[3] * x883 - sc[5] * x1325 - 130000.0 * sc[7] * x8339 -
    420000000.0 * sc[7] * x8342 - sc[8] * x7546 - sc[8] * x8357 -
    sc[9] * x8294 - 120000.0 * x1 * x2146 + 158000.0 * x1040 + x1056 * x2259 +
    10000000.0 * x109 + 10000000.0 * x1136 + 158000.0 * x1241 +
    90000.0 * x1319 - x1398 * x182 - 33000000.0 * x1473 - x1493 * x234 +
    x1527 * x1765 - x1529 * x1666 + x1529 * x1672 + x1544 * x1627 -
    x1544 * x1630 - x1578 * x1765 + x1627 * x2195 - x1627 * x2310 +
    x1627 * x2316 - x1630 * x2195 + x1630 * x2310 - x1630 * x2316 -
    x1666 * x2257 - x1666 * x2312 + x1666 * x2317 - x1666 * x2324 +
    x1672 * x2257 + x1672 * x2312 - x1672 * x2317 + x1672 * x2324 +
    13200000.0 * x2094 * x974 - 13200000.0 * x2094 * x976 - x2188 * x234 -
    x2315 * x234 - x2325 * x974 + x2325 * x976 -
    7600000.0 * x433 * exp(-201.28666632188799 * invT) - 20000.0 * x440 +
    x5763 + 90000.0 * x581 - 40000000.0 * x593 -
    13200000.0 * x594 * exp(-754.82499870708 * invT) - x7528 - x7530 + x8253 +
    x8344 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1829 - x1853) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (90000.0 * sc[3] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[95] =
    18000.0 * sc[12] * x1219 * x1223 + sc[12] * x8391 +
    28000000.0 * sc[1] * x1219 * x1455 + sc[2] * x5612 +
    40000000.0 * sc[3] * x1645 - 40000000.0 * sc[3] * x1659 -
    20000.0 * sc[3] * x1776 + 20000.0 * sc[3] * x1798 -
    10000000.0 * sc[3] * x1831 - 33000000.0 * sc[3] * x1885 +
    33000000.0 * sc[3] * x1899 - 90000.0 * sc[3] * x219 -
    158000.0 * sc[3] * x276 + sc[6] * x8384 + x1527 * x1879 - x1529 * x1700 +
    x1529 * x398 + x1544 * x1677 - x1544 * x1699 - x1578 * x1879 +
    x1677 * x2195 - x1677 * x2310 + x1677 * x2316 - x1699 * x2195 +
    x1699 * x2310 - x1699 * x2316 - x1700 * x2257 - x1700 * x2312 +
    x1700 * x2317 - x1700 * x2324 + 13200000.0 * x2094 * x977 -
    13200000.0 * x2094 * x982 + x2193 + x2257 * x398 + x2259 * x276 +
    x2311 * x433 + x2312 * x398 - x2317 * x398 + x2324 * x398 - x2325 * x977 +
    x2325 * x982 + 1600000.0 * x364 * x8360 - x7582 + x8253 + x8396 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1885 - x1899) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (90000.0 * sc[3] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[118] =
    refC * sc[6] * x5978 + 12000000.0 * sc[10] * x1448 - sc[1] * sc[3] * x5478 -
    sc[3] * x1325 + 40000000.0 * sc[3] * x1660 - 40000000.0 * sc[3] * x1662 +
    20000.0 * sc[3] * x1779 - 158000.0 * sc[3] * x1793 -
    10000000.0 * sc[3] * x1844 - 20000.0 * sc[3] * x1856 -
    90000.0 * sc[3] * x1946 - 33000000.0 * sc[3] * x1954 +
    33000000.0 * sc[3] * x1980 - 13200000.0 * x1010 * x2094 + x1010 * x2325 +
    1848000.0 * x1421 + x1527 * x1888 - x1529 * x1760 + x1529 * x1768 -
    x1544 * x1668 + x1544 * x1741 - x1578 * x1888 - x1668 * x2195 +
    x1668 * x2310 - x1668 * x2316 + x1741 * x2195 - x1741 * x2310 +
    x1741 * x2316 - x1760 * x2257 - x1760 * x2312 + x1760 * x2317 -
    x1760 * x2324 + x1768 * x2257 + x1768 * x2312 - x1768 * x2317 +
    x1768 * x2324 + x1793 * x2259 + 13200000.0 * x2094 * x987 - x2325 * x987 -
    1848000.0 * x5562 + x8426 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1954 - x1980) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (90000.0 * sc[3] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[141] =
    sc[10] * x99 + sc[12] * x91 + sc[13] * x1144 + 20000.0 * sc[14] * x1353 +
    140000.0 * sc[17] * x1210 + 2660000.0 * sc[19] + sc[1] * x1141 +
    90000.0 * sc[20] * x1304 + 20000000.0 * sc[2] + 40000000.0 * sc[3] * x1665 -
    40000000.0 * sc[3] * x1670 - 158000.0 * sc[3] * x1842 +
    20000.0 * sc[3] * x1851 - 20000.0 * sc[3] * x1878 -
    90000.0 * sc[3] * x1985 - 33000000.0 * sc[3] * x2022 +
    33000000.0 * sc[3] * x2045 + sc[4] * x8384 + 1000000.0 * sc[8] +
    13200000.0 * x1012 * x2094 - x1012 * x2325 - 13200000.0 * x1014 * x2094 +
    x1014 * x2325 + x1419 * x1527 - x1419 * x1578 - x1529 * x1770 +
    x1529 * x1771 + x1544 * x1759 - x1544 * x1769 + x1759 * x2195 -
    x1759 * x2310 + x1759 * x2316 - x1769 * x2195 + x1769 * x2310 -
    x1769 * x2316 - x1770 * x2257 - x1770 * x2312 + x1770 * x2317 -
    x1770 * x2324 + x1771 * x2257 + x1771 * x2312 - x1771 * x2317 +
    x1771 * x2324 + x1842 * x2259 + x2269 * x234 + x2318 * x433 + x6076 +
    x8463 + x8466 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x2022 - x2045) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (90000.0 * sc[3] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[164] =
    40000000.0 * sc[3] * x1673 - 40000000.0 * sc[3] * x1674 -
    20000.0 * sc[3] * x1898 + 20000.0 * sc[3] * x1906 -
    33000000.0 * sc[3] * x2081 + 33000000.0 * sc[3] * x2099 -
    130000.0 * sc[3] * x8339 - 420000000.0 * sc[3] * x8342 +
    13200000.0 * x1015 * x2094 - x1015 * x2325 - 13200000.0 * x1019 * x2094 +
    x1019 * x2325 - x1529 * x1780 + x1529 * x1781 + x1544 * x1786 -
    x1544 * x202 - x1780 * x2257 - x1780 * x2312 + x1780 * x2317 -
    x1780 * x2324 + x1781 * x2257 + x1781 * x2312 - x1781 * x2317 +
    x1781 * x2324 + x1786 * x2195 - x1786 * x2310 + x1786 * x2316 -
    x202 * x2195 + x202 * x2310 - x202 * x2316 + x8491 + x8497 + x8498 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x2081 - x2099) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (90000.0 * sc[3] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[187] =
    -158000.0 * sc[3] * x1238 + 40000000.0 * sc[3] * x1680 -
    40000000.0 * sc[3] * x1681 + 20000.0 * sc[3] * x1947 -
    20000.0 * sc[3] * x1958 - 33000000.0 * sc[3] * x2123 +
    33000000.0 * sc[3] * x2149 - 90000.0 * sc[3] * x453 - sc[3] * x7546 -
    sc[3] * x8357 + 1000000.0 * sc[6] + 13200000.0 * x1022 * x2094 -
    x1022 * x2325 - 13200000.0 * x1025 * x2094 + x1025 * x2325 + x1238 * x2259 +
    x1527 * x1727 - x1529 * x1788 + x1529 * x1789 + x1544 * x1792 -
    x1544 * x1832 - x1578 * x1727 - x1788 * x2257 - x1788 * x2312 +
    x1788 * x2317 - x1788 * x2324 + x1789 * x2257 + x1789 * x2312 -
    x1789 * x2317 + x1789 * x2324 + x1792 * x2195 - x1792 * x2310 +
    x1792 * x2316 - x1832 * x2195 + x1832 * x2310 - x1832 * x2316 + x8466 +
    x8529 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x2123 - x2149) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (90000.0 * sc[3] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[210] =
    40000000.0 * sc[3] * x1683 - 40000000.0 * sc[3] * x1689 +
    20000.0 * sc[3] * x1959 - 20000.0 * sc[3] * x1964 -
    90000.0 * sc[3] * x2020 - 33000000.0 * sc[3] * x2138 +
    33000000.0 * sc[3] * x2197 - 158000.0 * sc[3] * x792 -
    10000000.0 * sc[3] * x816 - sc[3] * x8294 + 13200000.0 * x1049 * x2094 -
    x1049 * x2325 - 13200000.0 * x1053 * x2094 + x1053 * x2325 +
    240000.0 * x1421 + x1527 * x637 - x1529 * x1791 + x1529 * x1797 +
    x1544 * x1834 - x1544 * x1848 - x1578 * x637 - x1791 * x2257 -
    x1791 * x2312 + x1791 * x2317 - x1791 * x2324 + x1797 * x2257 +
    x1797 * x2312 - x1797 * x2317 + x1797 * x2324 + x1834 * x2195 -
    x1834 * x2310 + x1834 * x2316 - x1848 * x2195 + x1848 * x2310 -
    x1848 * x2316 + x2193 + x2259 * x792 - 240000.0 * x5562 + x8558 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x2138 - x2197) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (90000.0 * sc[3] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[233] =
    28000000.0 * sc[1] * x1455 * x739 + 40000000.0 * sc[3] * x1693 -
    40000000.0 * sc[3] * x1694 + 20000.0 * sc[3] * x1965 -
    90000.0 * sc[3] * x2021 - 33000000.0 * sc[3] * x2184 +
    33000000.0 * sc[3] * x2274 - 20000.0 * sc[3] * x646 -
    10000000.0 * sc[3] * x65 - 158000.0 * sc[3] * x793 +
    18000.0 * sc[4] * x1223 * x162 + 12000000.0 * sc[5] * x1448 + sc[6] * x99 +
    x1003 * x1527 - x1003 * x1578 + 13200000.0 * x1066 * x2094 - x1066 * x2325 -
    13200000.0 * x1068 * x2094 + x1068 * x2325 + 3200000.0 * x1220 * x8360 +
    210000.0 * x1421 - x1529 * x1801 + x1529 * x1804 - x1544 * x1840 +
    x1544 * x1861 - x1801 * x2257 - x1801 * x2312 + x1801 * x2317 -
    x1801 * x2324 + x1804 * x2257 + x1804 * x2312 - x1804 * x2317 +
    x1804 * x2324 - x1840 * x2195 + x1840 * x2310 - x1840 * x2316 +
    x1861 * x2195 - x1861 * x2310 + x1861 * x2316 - 2100000.0 * x208 +
    2100000.0 * x2147 + x2259 * x793 - 210000.0 * x5562 - x7827 + x8592 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x2184 - x2274) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (90000.0 * sc[3] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[256] =
    2640000.0 * ((sc[1]) * (sc[1])) * x403 + sc[2] * x200 -
    33000000.0 * sc[3] * x1555 + 40000000.0 * sc[3] * x1695 -
    40000000.0 * sc[3] * x1697 + 33000000.0 * sc[3] * x2326 -
    10000000.0 * sc[3] * x602 + 20000.0 * sc[3] * x655 -
    158000.0 * sc[3] * x792 - 20000.0 * sc[3] * x908 - 90000.0 * sc[3] * x930 -
    13200000.0 * x1071 * x2094 + x1071 * x2325 + 432000.0 * x1421 +
    x1527 * x637 + x1529 * x1696 - x1529 * x1806 + x1544 * x1845 -
    x1544 * x725 - x1578 * x637 + x1696 * x2257 + x1696 * x2312 -
    x1696 * x2317 + x1696 * x2324 - x1806 * x2257 - x1806 * x2312 +
    x1806 * x2317 - x1806 * x2324 + x1845 * x2195 - x1845 * x2310 +
    x1845 * x2316 - 4200000.0 * x208 + 13200000.0 * x2094 * x661 +
    4200000.0 * x2147 - x2195 * x725 + x2259 * x792 + x2310 * x725 -
    x2316 * x725 - x2325 * x661 + 10000000.0 * x238 * x594 - 432000.0 * x5562 +
    x8619 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1555 - x2326) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (90000.0 * sc[3] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[279] =
    -33000000.0 * sc[3] * x1021 - 90000.0 * sc[3] * x1502 +
    40000000.0 * sc[3] * x1701 - 40000000.0 * sc[3] * x1702 +
    20000.0 * sc[3] * x1976 - 20000.0 * sc[3] * x1977 -
    158000.0 * sc[3] * x228 + 33000000.0 * sc[3] * x2366 - sc[3] * x8351 +
    sc[4] * x8391 + sc[6] * x91 + 13200000.0 * x1072 * x2094 - x1072 * x2325 -
    13200000.0 * x1076 * x2094 + x1076 * x2325 + 18000.0 * x1220 * x1223 +
    x1527 * x1572 - x1529 * x1755 + x1529 * x1761 + x1544 * x1880 -
    x1544 * x1887 - x1572 * x1578 - x1755 * x2257 - x1755 * x2312 +
    x1755 * x2317 - x1755 * x2324 + x1761 * x2257 + x1761 * x2312 -
    x1761 * x2317 + x1761 * x2324 + x1880 * x2195 - x1880 * x2310 +
    x1880 * x2316 - x1887 * x2195 + x1887 * x2310 - x1887 * x2316 +
    x2259 * x228 + x433 * x758 + x8466 + x8646 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x1021 - x2366) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (90000.0 * sc[3] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[302] =
    40000000.0 * sc[3] * x1704 - 40000000.0 * sc[3] * x1706 -
    20000.0 * sc[3] * x1986 - 90000.0 * sc[3] * x1995 +
    33000000.0 * sc[3] * x2354 - 10000000.0 * sc[3] * x659 -
    33000000.0 * sc[3] * x742 + sc[6] * x1144 + 13200000.0 * x1077 * x2094 -
    x1077 * x2325 - 13200000.0 * x1081 * x2094 + x1081 * x2325 - x1529 * x1767 +
    x1529 * x1833 - x1544 * x1896 - x1767 * x2257 - x1767 * x2312 +
    x1767 * x2317 - x1767 * x2324 + x1833 * x2257 + x1833 * x2312 -
    x1833 * x2317 + x1833 * x2324 - x1894 * x2310 - x1896 * x2195 +
    x1896 * x2310 - x1896 * x2316 + x8674 + x8681 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x2354 + x742) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (90000.0 * sc[3] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[325] =
    33000000.0 * sc[3] * x1174 - 33000000.0 * sc[3] * x1231 +
    40000000.0 * sc[3] * x1707 - 40000000.0 * sc[3] * x1709 -
    20000.0 * sc[3] * x1992 - 90000.0 * sc[3] * x488 -
    10000000.0 * sc[3] * x820 - sc[3] * x8347 + 20000.0 * sc[6] * x1353 +
    13200000.0 * x1083 * x2094 - x1083 * x2325 - 13200000.0 * x1089 * x2094 +
    x1089 * x2325 - x1529 * x1835 + x1529 * x1836 - x1544 * x1897 -
    x1835 * x2257 - x1835 * x2312 + x1835 * x2317 - x1835 * x2324 +
    x1836 * x2257 + x1836 * x2312 - x1836 * x2317 + x1836 * x2324 -
    x1894 * x2310 - x1897 * x2195 + x1897 * x2310 - x1897 * x2316 + x8681 +
    x8698 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1174 + x1231) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (90000.0 * sc[3] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[348] =
    -10000000.0 * sc[3] * x1135 + 33000000.0 * sc[3] * x116 -
    300000.0 * sc[3] * x1326 + 40000000.0 * sc[3] * x1711 -
    90000.0 * sc[3] * x1716 - 40000000.0 * sc[3] * x1719 -
    20000.0 * sc[3] * x1886 + 20000.0 * sc[3] * x1999 -
    33000000.0 * sc[3] * x81 + 13200000.0 * x1091 * x2094 - x1091 * x2325 -
    13200000.0 * x1366 * x2094 + x1366 * x2325 - x1529 * x1838 + x1529 * x1839 -
    x1544 * x1841 + x1544 * x1904 - x1838 * x2257 - x1838 * x2312 +
    x1838 * x2317 - x1838 * x2324 + x1839 * x2257 + x1839 * x2312 -
    x1839 * x2317 + x1839 * x2324 - x1841 * x2195 + x1841 * x2310 -
    x1841 * x2316 + x1904 * x2195 - x1904 * x2310 + x1904 * x2316 -
    4200000.0 * x208 + 4200000.0 * x2147 + x8680 + x8724 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x116 + x81) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (90000.0 * sc[3] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[371] =
    33000000.0 * sc[3] * x1625 + 40000000.0 * sc[3] * x1730 -
    40000000.0 * sc[3] * x1731 - 20000.0 * sc[3] * x1956 -
    1600000.0 * sc[3] * x8290 - 33000000.0 * sc[3] * x848 +
    13200000.0 * x1367 * x2094 - x1367 * x2325 - 13200000.0 * x1472 * x2094 +
    x1472 * x2325 + x1529 * x1849 - x1544 * x169 - x169 * x2195 + x169 * x2310 -
    x169 * x2316 + x1849 * x2257 + x1849 * x2312 - x1849 * x2317 +
    x1849 * x2324 + x8497 + x8498 + x8753 + x8759 + x8764 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1625 + x848) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (90000.0 * sc[3] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[394] =
    -10000000.0 * sc[3] * x1554 + 40000000.0 * sc[3] * x1730 -
    40000000.0 * sc[3] * x1739 - 20000.0 * sc[3] * x1956 -
    158000.0 * sc[3] * x434 - 33000000.0 * sc[3] * x851 +
    140000.0 * sc[6] * x1210 + x1529 * x1852 - x1544 * x1882 + x1852 * x2257 +
    x1852 * x2312 - x1852 * x2317 + x1852 * x2324 - x1882 * x2195 +
    x1882 * x2310 - x1882 * x2316 - 13200000.0 * x2094 * x854 + x2193 +
    x2259 * x434 + x2325 * x854 + x8253 + x8753 + x8759 + x8764 + x8777 +
    x8780 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1058 + x851) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (90000.0 * sc[3] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[417] =
    -40000000.0 * sc[3] * x1661 + 40000000.0 * sc[3] * x1730 -
    20000.0 * sc[3] * x1957 - 33000000.0 * sc[3] * x2058 -
    158000.0 * sc[3] * x769 + 300000.0 * sc[6] * x1957 + x1529 * x1783 -
    x1544 * x232 - 13200000.0 * x1563 * x2094 + x1563 * x2325 + x1783 * x2257 +
    x1783 * x2312 - x1783 * x2317 + x1783 * x2324 - x2195 * x232 +
    x2259 * x769 + x2310 * x232 - x2316 * x232 + x8497 + x8753 + x8759 + x8761 +
    x8762 + x8780 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1058 + x2058) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (90000.0 * sc[3] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[440] =
    33000000.0 * sc[3] * x1085 - 33000000.0 * sc[3] * x1160 +
    40000000.0 * sc[3] * x1671 - 40000000.0 * sc[3] * x1745 +
    20000.0 * sc[3] * x1890 - 20000.0 * sc[3] * x1972 -
    10000000.0 * sc[3] * x62 + 300000.0 * sc[6] * x1972 + 2660000.0 * sc[6] -
    13200000.0 * x1469 * x2094 + x1469 * x2325 - x1529 * x1775 + x1529 * x1782 +
    x1544 * x1843 - x1544 * x1889 + 13200000.0 * x1565 * x2094 - x1565 * x2325 -
    x1775 * x2257 - x1775 * x2312 + x1775 * x2317 - x1775 * x2324 +
    x1782 * x2257 + x1782 * x2312 - x1782 * x2317 + x1782 * x2324 +
    x1843 * x2195 + x1843 * x2316 - x1889 * x2195 + x1889 * x2310 -
    x1889 * x2316 + x2193 + x8253 + x8498 + x8761 + x8762 + x8777 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1085 + x1160) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (90000.0 * sc[3] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[463] =
    -33000000.0 * sc[3] * x1299 - 90000.0 * sc[3] * x1318 -
    20000.0 * sc[3] * x1649 + 40000000.0 * sc[3] * x1730 - sc[3] * x8297 -
    40000000.0 * sc[3] * x865 + 90000.0 * sc[6] * x1304 +
    300000.0 * sc[6] * x1649 + x1527 * x1893 + x1529 * x1847 - x1544 * x1892 -
    13200000.0 * x1574 * x2094 + x1574 * x2325 - x1578 * x1893 + x1847 * x2257 +
    x1847 * x2312 - x1847 * x2317 + x1847 * x2324 - x1892 * x2195 +
    x1892 * x2310 - x1892 * x2316 + x8466 + x8498 + x8753 + x8759 + x8761 +
    x8762 + x8780 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (-x1058 + x1299) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (90000.0 * sc[3] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[486] =
    refC * sc[6] * x6072 - sc[1] * sc[3] * x5471 - 40000000.0 * sc[3] * x1692 -
    20000.0 * sc[3] * x1956 + 40000000.0 * sc[3] * x295 -
    33000000.0 * sc[3] * x319 - 10000000.0 * sc[3] * x351 +
    33000000.0 * sc[3] * x963 + x1529 * x1881 - x1544 * x1895 +
    13200000.0 * x1575 * x2094 - x1575 * x2325 - 13200000.0 * x1580 * x2094 +
    x1580 * x2325 + x1881 * x2257 + x1881 * x2312 - x1881 * x2317 +
    x1881 * x2324 - x1895 * x2195 + x1895 * x2310 - x1895 * x2316 + x8253 +
    x8498 + x8753 + x8759 + x8764 + x8777 +
    (-40000000.0 * sc[3] * x678 + x1529 * x680 + x1544 * x683 -
     13200000.0 * x2094 * x677 + x2195 * x683 + x2257 * x680 - x2310 * x683 +
     x2312 * x680 + x2316 * x683 - x2317 * x680 + x2324 * x680 + x2325 * x677) *
      (x319 - x963) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1529 * x681 -
     x1544 * x684 - x2195 * x684 + x2257 * x681 + x2310 * x684 + x2312 * x681 -
     x2316 * x684 - x2317 * x681 + x2324 * x681) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x66 - x2259 * x230) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (90000.0 * sc[3] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (20000.0 * sc[3] * x596 + 10000000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x596 - x1527 * x639 + x1529 * x682 + x1578 * x639 +
     x2257 * x682 + x2312 * x682 - x2317 * x682 + x2324 * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (158000.0 * sc[3] * x435 + 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 - x1544 * x685 - x2195 * x685 - x2259 * x435 +
     x2310 * x685 - x2316 * x685) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[4] =
    18000.0 * sc[3] * x1235 + 30000000.0 * sc[4] * x1016 -
    24000000.0 * sc[4] * x1240 + 30000000.0 * sc[4] * x1476 -
    5000000.0 * sc[4] * x1884 + 20000000.0 * sc[4] * x649 -
    20000000.0 * sc[4] * x651 - 30110000.0 * sc[4] * x726 -
    20000000.0 * sc[4] * x821 + 30110000.0 * sc[4] * x826 -
    50000000.0 * sc[4] * x830 + 50000000.0 * sc[4] * x951 -
    30000000.0 * sc[4] * x973 - 30000000.0 * sc[4] * x988 +
    10000000.0 * sc[6] * x726 - 10000000.0 * sc[6] * x826 +
    24000000.0 * sc[6] * x909 - 24000000.0 * sc[6] * x935 + x1042 * x726 -
    x1042 * x826 - x1235 * x2364 - x1235 * x2371 + x1235 * x856 -
    x1476 * x8857 - x1884 * x2362 - 10560000.0 * x2094 * x649 +
    10560000.0 * x2094 * x651 + x2105 * x830 - x2105 * x951 + x216 -
    x2196 * x909 + x2196 * x935 - x2263 * x830 + x2263 * x951 - x2272 * x726 +
    x2272 * x826 - x2312 * x830 + x2312 * x951 + x2361 * x909 - x2361 * x935 +
    x250 * x649 - x250 * x651 - x556 + x8857 * x973 + x8884 + x8923 + x8928 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1476 + x973) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[27] =
    20000000.0 * sc[12] * x1381 + 30000000.0 * sc[12] * x1441 +
    20000000.0 * sc[17] * x1123 + sc[17] * x1208 +
    500000.0 * sc[2] * x1275 * x25 + 20000000.0 * sc[2] * x1960 * x211 +
    18000.0 * sc[3] * x211 + sc[3] * x5468 - 30110000.0 * sc[4] * x1061 -
    50000000.0 * sc[4] * x1065 + 30000000.0 * sc[4] * x1073 -
    5000000.0 * sc[4] * x1422 - 20000000.0 * sc[4] * x1623 -
    30000000.0 * sc[4] * x1636 + 30000000.0 * sc[4] * x1708 -
    24000000.0 * sc[4] * x476 + 20000000.0 * sc[4] * x857 +
    30110000.0 * sc[4] * x950 - 20000000.0 * sc[4] * x964 +
    50000000.0 * sc[4] * x971 - 30000000.0 * sc[4] * x985 + sc[5] * x922 +
    10000000.0 * sc[6] * x1061 - 24000000.0 * sc[6] * x1504 +
    24000000.0 * sc[6] * x523 - 10000000.0 * sc[6] * x950 +
    141600000.0 * sc[6] * exp(-150.96499974141599 * invT) + sc[7] * x755 +
    x1042 * x1061 - x1042 * x950 - x1061 * x2272 + x1065 * x2105 -
    x1065 * x2263 - x1065 * x2312 - x1422 * x2362 + x1504 * x2196 -
    x1504 * x2361 + x1636 * x8857 - x1708 * x8857 - 10560000.0 * x2094 * x857 +
    10560000.0 * x2094 * x964 - x2105 * x971 - x211 * x2364 - x211 * x2371 -
    x2196 * x523 + x2263 * x971 + x2272 * x950 + x2312 * x971 + x2361 * x523 +
    x250 * x857 - x250 * x964 + 30000000.0 * x393 * x433 + x5514 + x5524 +
    x8964 + x8969 + x8971 + x8976 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1636 - x1708) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[50] =
    sc[0] * x633 + sc[12] * x7522 + sc[14] * x7515 + sc[15] * x7492 +
    10000000.0 * sc[17] * x1029 + 500000.0 * sc[1] * x1275 * x25 +
    18000.0 * sc[3] * x224 - 28000000.0 * sc[3] * x315 +
    28000000.0 * sc[3] * x318 - 30110000.0 * sc[4] * x140 +
    30110000.0 * sc[4] * x1556 - 24000000.0 * sc[4] * x1654 -
    50000000.0 * sc[4] * x1664 - 5000000.0 * sc[4] * x1678 -
    20000000.0 * sc[4] * x1723 - 30000000.0 * sc[4] * x1772 +
    30000000.0 * sc[4] * x1794 + 30000000.0 * sc[4] * x315 -
    30000000.0 * sc[4] * x318 - sc[4] * x5612 + 50000000.0 * sc[4] * x759 +
    20000000.0 * sc[4] * x965 - 20000000.0 * sc[4] * x972 +
    0.0714 * sc[5] * x7505 + 10000000.0 * sc[6] * x140 -
    10000000.0 * sc[6] * x1556 - 24000000.0 * sc[6] * x1656 +
    24000000.0 * sc[6] * x1721 + 20000000.0 * sc[6] + sc[7] * x7441 +
    x1042 * x140 - x1042 * x1556 - x140 * x2272 + x1556 * x2272 +
    x1656 * x2196 - x1656 * x2361 + x1664 * x2105 - x1664 * x2263 -
    x1664 * x2312 - x1678 * x2362 - x1721 * x2196 + x1721 * x2361 +
    x1772 * x8857 - x1794 * x8857 - 10560000.0 * x2094 * x965 +
    10560000.0 * x2094 * x972 - x2105 * x759 + x22 - x224 * x2364 -
    x224 * x2371 + x224 * x856 + x2263 * x759 + x2312 * x759 + x250 * x965 -
    x250 * x972 + x34 + x5524 + x5692 + x8969 + x9011 + x9016 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1772 - x1794) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[73] =
    1600000.0 * sc[16] * x8290 + sc[1] * x5468 +
    20000000.0 * sc[2] * x1056 * x1960 + 18000.0 * sc[3] * x1056 -
    28000000.0 * sc[3] * x1416 + 28000000.0 * sc[3] * x883 +
    30000000.0 * sc[4] * x1416 + 30110000.0 * sc[4] * x1627 -
    30110000.0 * sc[4] * x1630 + 50000000.0 * sc[4] * x1666 -
    50000000.0 * sc[4] * x1672 - 24000000.0 * sc[4] * x1733 -
    20000000.0 * sc[4] * x1757 - 5000000.0 * sc[4] * x1765 -
    30000000.0 * sc[4] * x1829 + 30000000.0 * sc[4] * x1853 -
    30000000.0 * sc[4] * x883 + 20000000.0 * sc[4] * x974 -
    20000000.0 * sc[4] * x976 + sc[5] * x1325 - 10000000.0 * sc[6] * x1627 +
    10000000.0 * sc[6] * x1630 - 24000000.0 * sc[6] * x1762 +
    24000000.0 * sc[6] * x1764 - 18000.0 * x1040 - x1042 * x1627 +
    x1042 * x1630 - x1056 * x2364 - x1056 * x2371 - 18000.0 * x1241 +
    x1627 * x2272 - x1630 * x2272 - x1666 * x2105 + x1666 * x2263 +
    x1666 * x2312 + x1672 * x2105 - x1672 * x2263 - x1672 * x2312 +
    x1762 * x2196 - x1762 * x2361 - x1764 * x2196 + x1764 * x2361 -
    x1765 * x2362 + x1829 * x8857 - x1853 * x8857 - 10560000.0 * x2094 * x974 +
    10560000.0 * x2094 * x976 + x250 * x974 - x250 * x976 + x5524 + x5771 +
    28000000.0 * x593 + 10560000.0 * x594 * exp(-754.82499870708 * invT) -
    x7530 + x8969 + x9052 + x9057 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1829 - x1853) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[96] =
    -sc[11] * x9105 - 18000.0 * sc[12] * x1219 * x1223 -
    24000000.0 * sc[12] * x1356 * x1358 - sc[13] * x5840 - sc[13] * x9124 -
    sc[14] * x9128 - sc[15] * x9115 - sc[16] * x159 -
    7500000.0 * sc[17] * x2370 - 20000000.0 * sc[17] * x7602 - sc[18] * x9058 -
    sc[19] * x7580 - sc[20] * x9068 - 30000000.0 * sc[2] * x1700 +
    30000000.0 * sc[2] * x398 - sc[2] * x5612 + 18000.0 * sc[3] * x276 +
    30000000.0 * sc[4] * x1645 - 30000000.0 * sc[4] * x1659 +
    30110000.0 * sc[4] * x1677 - 30110000.0 * sc[4] * x1699 +
    50000000.0 * sc[4] * x1700 - 20000000.0 * sc[4] * x1831 -
    5000000.0 * sc[4] * x1879 - 30000000.0 * sc[4] * x1885 +
    30000000.0 * sc[4] * x1899 - 24000000.0 * sc[4] * x219 -
    9200000.0 * sc[4] * x25 * x8887 * exp(x8902) - 50000000.0 * sc[4] * x398 +
    20000000.0 * sc[4] * x977 - 20000000.0 * sc[4] * x982 - sc[5] * x5779 -
    10000000.0 * sc[6] * x1677 + 10000000.0 * sc[6] * x1699 +
    24000000.0 * sc[6] * x1776 - 24000000.0 * sc[6] * x1798 - sc[6] * x7574 -
    sc[6] * x8384 - sc[7] * x9109 - sc[7] * x9112 - x101 * x440 -
    x1042 * x1677 + x1042 * x1699 + 20000000.0 * x109 + 20000000.0 * x1136 +
    24000000.0 * x1319 + 5000000.0 * x1439 - 30000000.0 * x1473 +
    x1677 * x2272 - x1699 * x2272 - x1700 * x2105 + x1700 * x2263 +
    x1700 * x2312 - x1776 * x2196 + x1776 * x2361 + x1798 * x2196 -
    x1798 * x2361 - 13400000.0 * x182 * x609 - x1879 * x2362 + x1885 * x8857 -
    x1899 * x8857 - 10000000.0 * x196 * x517 - 500000.0 * x2042 * x25 -
    10560000.0 * x2094 * x977 + 10560000.0 * x2094 * x982 + x2105 * x398 -
    x221 - x2262 * x433 - x2263 * x398 - x2271 * x234 - x2311 * x433 -
    x2312 * x398 - 30110000.0 * x234 - x2364 * x276 -
    10000000.0 * x2370 * x517 - x2371 * x276 + x250 * x977 - x250 * x982 +
    x276 * x856 - 1600000.0 * x364 * x8360 - 50000000.0 * x433 +
    5000000.0 * x513 + x5524 - 283200000.0 * x5784 + 24000000.0 * x581 + x5867 -
    30000000.0 * x593 -
    11.3 * x594 * exp(-1509.64999741416 * invT + 2.0 * logT) -
    20000000.0 * x594 - x7582 - 0.1428 * x7583 + x8969 - x9065 + x9152 + x9153 +
    x9161 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1885 - x1899) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[119] =
    50000000.0 * sc[10] * x1248 + 5000000.0 * sc[12] * x1424 +
    30110000.0 * sc[13] * x1187 + sc[16] * x135 + 10000000.0 * sc[17] * x9183 +
    sc[19] * x9164 + sc[1] * x922 + 24000000.0 * sc[20] * x1308 -
    30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1768 +
    0.0714 * sc[2] * x7505 + sc[3] * x1325 + 18000.0 * sc[3] * x1793 +
    857837.83783783799 * ((sc[4]) * (sc[4])) * x8896 *
      exp(1710.9366637360499 * invT - 1.43 * logT) -
    20000000.0 * sc[4] * x1010 + 30000000.0 * sc[4] * x1660 -
    30000000.0 * sc[4] * x1662 - 30110000.0 * sc[4] * x1668 +
    30110000.0 * sc[4] * x1741 + 50000000.0 * sc[4] * x1760 -
    50000000.0 * sc[4] * x1768 - 20000000.0 * sc[4] * x1844 -
    5000000.0 * sc[4] * x1888 - 24000000.0 * sc[4] * x1946 -
    30000000.0 * sc[4] * x1954 + 30000000.0 * sc[4] * x1980 - sc[4] * x5779 +
    20000000.0 * sc[4] * x987 + 10000000.0 * sc[6] * x1668 -
    10000000.0 * sc[6] * x1741 - 24000000.0 * sc[6] * x1779 +
    24000000.0 * sc[6] * x1856 + sc[6] * x9197 + sc[6] * x9199 + sc[8] * x9162 +
    10560000.0 * x1010 * x2094 - x1010 * x250 + x1042 * x1668 - x1042 * x1741 +
    x1473 * x8856 + x1591 * x234 - x1668 * x2272 + x1741 * x2272 -
    x1760 * x2105 + x1760 * x2263 + x1760 * x2312 + x1768 * x2105 -
    x1768 * x2263 - x1768 * x2312 + x1779 * x2196 - x1779 * x2361 -
    x1793 * x2364 - x1793 * x2371 + x1793 * x856 - x1856 * x2196 +
    x1856 * x2361 - x1888 * x2362 + x1954 * x8857 - x1980 * x8857 -
    3000000.0 * x2043 + 3000000.0 * x2083 - 10560000.0 * x2094 * x987 + x2180 +
    x2360 * x440 + x250 * x987 - 857837.83783783799 * x8896 * x8911 -
    27600000.0 * x8905 + 27600000.0 * x8910 +
    x8920 * (12.0 * x688 * x8889 + 1.68 * x688 * x8914) -
    x8922 * (12.0 * x688 * x8889 + 1.68 * x688 * x8914) + x9223 + x9230 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1954 - x1980) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[142] =
    sc[10] * x9252 + sc[14] * x9231 +
    141600000.0 * sc[1] * exp(-150.96499974141599 * invT) -
    30000000.0 * sc[2] * x1770 + 30000000.0 * sc[2] * x1771 +
    20000000.0 * sc[2] - 28000000.0 * sc[3] * x1665 +
    28000000.0 * sc[3] * x1670 + 18000.0 * sc[3] * x1842 +
    20000000.0 * sc[4] * x1012 - 20000000.0 * sc[4] * x1014 -
    5000000.0 * sc[4] * x1419 + 30000000.0 * sc[4] * x1665 -
    30000000.0 * sc[4] * x1670 + 30110000.0 * sc[4] * x1759 -
    30110000.0 * sc[4] * x1769 + 50000000.0 * sc[4] * x1770 -
    50000000.0 * sc[4] * x1771 - 24000000.0 * sc[4] * x1985 -
    30000000.0 * sc[4] * x2022 + 30000000.0 * sc[4] * x2045 - sc[4] * x7574 -
    sc[4] * x8384 + sc[5] * x9197 + sc[5] * x9199 - 10000000.0 * sc[6] * x1759 +
    10000000.0 * sc[6] * x1769 - 24000000.0 * sc[6] * x1851 +
    24000000.0 * sc[6] * x1878 + 13400000.0 * sc[8] -
    10560000.0 * x1012 * x2094 + x1012 * x250 + 10560000.0 * x1014 * x2094 -
    x1014 * x250 - x1042 * x1759 + x1042 * x1769 - x1419 * x2362 +
    x1759 * x2272 - x1769 * x2272 - x1770 * x2105 + x1770 * x2263 +
    x1770 * x2312 + x1771 * x2105 - x1771 * x2263 - x1771 * x2312 -
    x1842 * x2364 - x1842 * x2371 + x1842 * x856 + x1851 * x2196 -
    x1851 * x2361 - x1878 * x2196 + x1878 * x2361 + x2022 * x8857 -
    x2045 * x8857 + 10000000.0 * x234 + 24000000.0 * x440 + x5524 +
    20000000.0 * x594 + x9275 + x9276 + x9282 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x2022 - x2045) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[165] =
    32000000.0 * sc[1] * x1893 + sc[1] * x755 + sc[2] * x7441 -
    28000000.0 * sc[3] * x1673 + 28000000.0 * sc[3] * x1674 +
    20000000.0 * sc[4] * x1015 - 20000000.0 * sc[4] * x1019 +
    30000000.0 * sc[4] * x1673 - 30000000.0 * sc[4] * x1674 +
    50000000.0 * sc[4] * x1780 - 50000000.0 * sc[4] * x1781 +
    30110000.0 * sc[4] * x1786 - 30110000.0 * sc[4] * x202 -
    30000000.0 * sc[4] * x2081 + 30000000.0 * sc[4] * x2099 - sc[4] * x9109 -
    sc[4] * x9112 - 10000000.0 * sc[6] * x1786 + 24000000.0 * sc[6] * x1898 -
    24000000.0 * sc[6] * x1906 + 10000000.0 * sc[6] * x202 -
    10560000.0 * x1015 * x2094 - x1015 * x2323 + x1015 * x250 +
    10560000.0 * x1019 * x2094 + x1019 * x2323 - x1019 * x250 - x1042 * x1786 +
    x1042 * x202 - x1673 * x2358 + x1674 * x2358 - x1780 * x2105 +
    x1780 * x2263 + x1780 * x2312 + x1781 * x2105 - x1781 * x2263 -
    x1781 * x2312 + x1786 * x2272 - x1898 * x2196 + x1898 * x2361 +
    x1906 * x2196 - x1906 * x2361 - x202 * x2272 + x2081 * x8857 -
    x2099 * x8857 + x5524 + x6169 + 4600000.0 * x776 * x8887 * x8908 + x9315 +
    x9328 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x2081 - x2099) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[188] =
    sc[10] * x9336 + 18000.0 * sc[3] * x1238 - 28000000.0 * sc[3] * x1680 +
    28000000.0 * sc[3] * x1681 + 20000000.0 * sc[4] * x1022 -
    20000000.0 * sc[4] * x1025 - 24000000.0 * sc[4] * x1356 * x162 +
    30000000.0 * sc[4] * x1680 - 30000000.0 * sc[4] * x1681 -
    5000000.0 * sc[4] * x1727 + 50000000.0 * sc[4] * x1788 -
    50000000.0 * sc[4] * x1789 + 30110000.0 * sc[4] * x1792 -
    30110000.0 * sc[4] * x1832 - 30000000.0 * sc[4] * x2123 +
    30000000.0 * sc[4] * x2149 - 24000000.0 * sc[4] * x453 + sc[5] * x9162 -
    10000000.0 * sc[6] * x1792 + 10000000.0 * sc[6] * x1832 -
    24000000.0 * sc[6] * x1947 + 24000000.0 * sc[6] * x1958 +
    13400000.0 * sc[6] - 10560000.0 * x1022 * x2094 + x1022 * x250 +
    10560000.0 * x1025 * x2094 - x1025 * x250 - x1042 * x1792 + x1042 * x1832 -
    x1238 * x2364 - x1238 * x2371 + x1238 * x856 - x1727 * x2362 -
    x1788 * x2105 + x1788 * x2263 + x1788 * x2312 + x1789 * x2105 -
    x1789 * x2263 - x1789 * x2312 + x1792 * x2272 - x1832 * x2272 +
    x1947 * x2196 - x1947 * x2361 - x1958 * x2196 + x1958 * x2361 +
    x2123 * x8857 - x2149 * x8857 + x5524 + x6270 + x9276 + x9375 + x9382 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x2123 - x2149) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[211] =
    20000000.0 * sc[4] * x1049 - 20000000.0 * sc[4] * x1053 +
    30000000.0 * sc[4] * x1683 - 30000000.0 * sc[4] * x1689 +
    50000000.0 * sc[4] * x1791 - 50000000.0 * sc[4] * x1797 +
    30110000.0 * sc[4] * x1834 - 30110000.0 * sc[4] * x1848 -
    24000000.0 * sc[4] * x2020 - 30000000.0 * sc[4] * x2138 +
    30000000.0 * sc[4] * x2197 - 20000000.0 * sc[4] * x816 -
    10000000.0 * sc[6] * x1834 + 10000000.0 * sc[6] * x1848 -
    24000000.0 * sc[6] * x1959 + 24000000.0 * sc[6] * x1964 - x1042 * x1834 +
    x1042 * x1848 - 10560000.0 * x1049 * x2094 + x1049 * x250 +
    10560000.0 * x1053 * x2094 - x1053 * x250 - x1791 * x2105 + x1791 * x2263 +
    x1791 * x2312 + x1797 * x2105 - x1797 * x2263 - x1797 * x2312 +
    x1834 * x2272 - x1848 * x2272 + x1959 * x2196 - x1959 * x2361 -
    x1964 * x2196 + x1964 * x2361 + x2138 * x8857 - x2197 * x8857 + x6351 -
    x9383 + x9415 + x9421 + x9426 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x2138 - x2197) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[234] =
    -30000000.0 * sc[2] * x1801 + 30000000.0 * sc[2] * x1804 +
    20000000.0 * sc[2] * x1960 * x793 - 28000000.0 * sc[3] * x1693 +
    28000000.0 * sc[3] * x1694 + 18000.0 * sc[3] * x793 -
    5000000.0 * sc[4] * x1003 + 20000000.0 * sc[4] * x1066 -
    20000000.0 * sc[4] * x1068 - 18000.0 * sc[4] * x1223 * x162 +
    30000000.0 * sc[4] * x1693 - 30000000.0 * sc[4] * x1694 +
    50000000.0 * sc[4] * x1801 - 50000000.0 * sc[4] * x1804 -
    30110000.0 * sc[4] * x1840 + 30110000.0 * sc[4] * x1861 -
    24000000.0 * sc[4] * x2021 - 30000000.0 * sc[4] * x2184 +
    30000000.0 * sc[4] * x2274 - 20000000.0 * sc[4] * x65 +
    50000000.0 * sc[5] * x1248 + 10000000.0 * sc[6] * x1840 -
    10000000.0 * sc[6] * x1861 - 24000000.0 * sc[6] * x1965 +
    24000000.0 * sc[6] * x646 + sc[6] * x9252 + sc[8] * x9336 - x1003 * x2362 +
    x1042 * x1840 - x1042 * x1861 - 10560000.0 * x1066 * x2094 + x1066 * x250 +
    10560000.0 * x1068 * x2094 - x1068 * x250 - 3200000.0 * x1220 * x8360 -
    x1801 * x2105 + x1801 * x2263 + x1801 * x2312 + x1804 * x2105 -
    x1804 * x2263 - x1804 * x2312 - x1840 * x2272 + x1861 * x2272 +
    x1965 * x2196 - x1965 * x2361 - 750000.0 * x2043 + 750000.0 * x2083 +
    x2184 * x8857 - x2196 * x646 - x2274 * x8857 + x2361 * x646 - x2364 * x793 -
    x2371 * x793 + x5524 - 214459.459459459 * x8896 * x8911 +
    214459.459459459 * x8900 - 6900000.0 * x8905 + 6900000.0 * x8910 +
    x8920 * (3.0 * x688 * x8889 + 0.42 * x688 * x8914) -
    x8922 * (3.0 * x688 * x8889 + 0.42 * x688 * x8914) + x9470 + x9471 + x9476 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x2184 - x2274) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[257] =
    sc[1] * x560 + 30000000.0 * sc[2] * x1696 - 30000000.0 * sc[2] * x1806 -
    28000000.0 * sc[3] * x1695 + 28000000.0 * sc[3] * x1697 -
    20000000.0 * sc[4] * x1071 - 30000000.0 * sc[4] * x1555 +
    30000000.0 * sc[4] * x1695 - 50000000.0 * sc[4] * x1696 -
    30000000.0 * sc[4] * x1697 + 50000000.0 * sc[4] * x1806 +
    30110000.0 * sc[4] * x1845 + 30000000.0 * sc[4] * x2326 -
    20000000.0 * sc[4] * x602 + 20000000.0 * sc[4] * x661 -
    30110000.0 * sc[4] * x725 - sc[4] * x9105 - 24000000.0 * sc[4] * x930 -
    10000000.0 * sc[6] * x1845 - 24000000.0 * sc[6] * x655 +
    10000000.0 * sc[6] * x725 + 24000000.0 * sc[6] * x908 - x1042 * x1845 +
    x1042 * x725 + 10560000.0 * x1071 * x2094 - x1071 * x250 + x1555 * x8857 +
    x1696 * x2105 - x1696 * x2263 - x1696 * x2312 - x1806 * x2105 +
    x1806 * x2263 + x1806 * x2312 + x1845 * x2272 - 10560000.0 * x2094 * x661 +
    x2196 * x655 - x2196 * x908 - x2272 * x725 - x2326 * x8857 - x2361 * x655 +
    x2361 * x908 + x250 * x661 + x5524 + x9426 + x9508 + x9513 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1555 - x2326) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[280] =
    20000000.0 * sc[1] * x1381 + 30000000.0 * sc[1] * x1441 +
    20000000.0 * sc[2] * x1960 * x228 + sc[2] * x7522 -
    28000000.0 * sc[3] * x1701 + 28000000.0 * sc[3] * x1702 +
    18000.0 * sc[3] * x228 - 30000000.0 * sc[4] * x1021 +
    20000000.0 * sc[4] * x1072 - 20000000.0 * sc[4] * x1076 -
    24000000.0 * sc[4] * x1502 - 5000000.0 * sc[4] * x1572 +
    30000000.0 * sc[4] * x1701 - 30000000.0 * sc[4] * x1702 +
    50000000.0 * sc[4] * x1755 - 50000000.0 * sc[4] * x1761 +
    30110000.0 * sc[4] * x1880 - 30110000.0 * sc[4] * x1887 +
    30000000.0 * sc[4] * x2366 + 5000000.0 * sc[5] * x1424 -
    10000000.0 * sc[6] * x1880 + 10000000.0 * sc[6] * x1887 + x1021 * x8857 -
    x1042 * x1880 + x1042 * x1887 - 10560000.0 * x1072 * x2094 + x1072 * x250 +
    10560000.0 * x1076 * x2094 - x1076 * x250 - 18000.0 * x1220 * x1223 -
    x1572 * x2362 - x1755 * x2105 + x1755 * x2263 + x1755 * x2312 +
    x1761 * x2105 - x1761 * x2263 - x1761 * x2312 + x1880 * x2272 -
    x1887 * x2272 + x1976 * x2196 - x1976 * x2361 - x1977 * x2196 +
    x1977 * x2361 - x228 * x2364 - x228 * x2371 - x2366 * x8857 + x5524 +
    x6628 + x9276 + x9548 + x9562 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x1021 - x2366) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[303] =
    20000000.0 * sc[4] * x1077 - 20000000.0 * sc[4] * x1081 +
    30000000.0 * sc[4] * x1704 - 30000000.0 * sc[4] * x1706 +
    50000000.0 * sc[4] * x1767 - 50000000.0 * sc[4] * x1833 -
    30110000.0 * sc[4] * x1896 + 30000000.0 * sc[4] * x2354 - sc[4] * x5840 -
    20000000.0 * sc[4] * x659 - 30000000.0 * sc[4] * x742 - sc[4] * x9124 +
    30110000.0 * sc[5] * x1187 + 10000000.0 * sc[6] * x1896 +
    24000000.0 * sc[6] * x1986 + 24000000.0 * sc[6] * x1995 - x1042 * x1894 +
    x1042 * x1896 - 10560000.0 * x1077 * x2094 + x1077 * x250 +
    10560000.0 * x1081 * x2094 - x1081 * x250 - x1767 * x2105 + x1767 * x2263 +
    x1767 * x2312 + x1833 * x2105 - x1833 * x2263 - x1833 * x2312 -
    x1896 * x2272 - x1979 * x2361 - x1986 * x2196 + x1986 * x2361 + x2181 -
    x2354 * x8857 + x742 * x8857 - x9326 + x9594 + x9600 + x9615 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x2354 + x742) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[326] =
    sc[2] * x7515 + 20000000.0 * sc[4] * x1083 - 20000000.0 * sc[4] * x1089 +
    30000000.0 * sc[4] * x1174 - 30000000.0 * sc[4] * x1231 +
    30000000.0 * sc[4] * x1707 - 30000000.0 * sc[4] * x1709 +
    50000000.0 * sc[4] * x1835 - 50000000.0 * sc[4] * x1836 -
    30110000.0 * sc[4] * x1897 - 24000000.0 * sc[4] * x488 -
    20000000.0 * sc[4] * x820 - sc[4] * x9128 + 10000000.0 * sc[6] * x1897 +
    24000000.0 * sc[6] * x1992 + sc[6] * x9231 - x1042 * x1894 + x1042 * x1897 -
    10560000.0 * x1083 * x2094 + x1083 * x250 + 10560000.0 * x1089 * x2094 -
    x1089 * x250 - x1174 * x8857 + x1231 * x8857 + x1571 - x1835 * x2105 +
    x1835 * x2263 + x1835 * x2312 + x1836 * x2105 - x1836 * x2263 -
    x1836 * x2312 - x1897 * x2272 - x1979 * x2361 - x1992 * x2196 +
    x1992 * x2361 + x9615 + x9636 + x9644 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1174 + x1231) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[349] =
    sc[2] * x7492 + 20000000.0 * sc[4] * x1091 - 20000000.0 * sc[4] * x1135 +
    30000000.0 * sc[4] * x116 - 20000000.0 * sc[4] * x1366 +
    30000000.0 * sc[4] * x1711 - 24000000.0 * sc[4] * x1716 -
    30000000.0 * sc[4] * x1719 + 50000000.0 * sc[4] * x1838 -
    50000000.0 * sc[4] * x1839 - 30110000.0 * sc[4] * x1841 +
    30110000.0 * sc[4] * x1904 - 30000000.0 * sc[4] * x81 - sc[4] * x9115 +
    10000000.0 * sc[6] * x1841 + 24000000.0 * sc[6] * x1886 -
    10000000.0 * sc[6] * x1904 - 24000000.0 * sc[6] * x1999 + x1042 * x1841 -
    x1042 * x1904 - 10560000.0 * x1091 * x2094 + x1091 * x250 - x116 * x8857 +
    x1363 + 10560000.0 * x1366 * x2094 - x1366 * x250 - x1838 * x2105 +
    x1838 * x2263 + x1838 * x2312 + x1839 * x2105 - x1839 * x2263 -
    x1839 * x2312 - x1841 * x2272 - x1886 * x2196 + x1886 * x2361 +
    x1904 * x2272 + x1999 * x2196 - x1999 * x2361 + x81 * x8857 + x9614 +
    x9675 + x9680 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x116 + x81) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[372] =
    32000000.0 * sc[1] * x1893 + 30000000.0 * sc[2] * x1849 +
    28000000.0 * sc[3] * x1731 + 1600000.0 * sc[3] * x8290 +
    20000000.0 * sc[4] * x1367 - 20000000.0 * sc[4] * x1472 - sc[4] * x159 +
    30000000.0 * sc[4] * x1625 - 30110000.0 * sc[4] * x169 +
    30000000.0 * sc[4] * x1730 - 30000000.0 * sc[4] * x1731 -
    50000000.0 * sc[4] * x1849 - 30000000.0 * sc[4] * x848 + sc[5] * x135 +
    10000000.0 * sc[6] * x169 + x1042 * x169 - 10560000.0 * x1367 * x2094 -
    x1367 * x2323 + x1367 * x250 + 10560000.0 * x1472 * x2094 + x1472 * x2323 -
    x1472 * x250 - x1625 * x8857 - x169 * x2272 + x1698 - x1730 * x2358 +
    x1731 * x2358 + x1849 * x2105 - x1849 * x2263 - x1849 * x2312 + x481 +
    x5524 + x848 * x8857 + x9328 + x9705 + x9715 + x9720 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1625 + x848) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[395] =
    20000000.0 * sc[1] * x1123 + sc[1] * x1208 + 32000000.0 * sc[1] * x1893 +
    10000000.0 * sc[2] * x1029 + 30000000.0 * sc[2] * x1852 +
    20000000.0 * sc[2] * x1960 * x434 + 28000000.0 * sc[3] * x1739 +
    18000.0 * sc[3] * x434 + 30000000.0 * sc[4] * x1058 +
    20000000.0 * sc[4] * x1475 - 20000000.0 * sc[4] * x1554 +
    30000000.0 * sc[4] * x1730 - 30000000.0 * sc[4] * x1739 -
    50000000.0 * sc[4] * x1852 - 30110000.0 * sc[4] * x1882 -
    7500000.0 * sc[4] * x2370 - 20000000.0 * sc[4] * x7602 -
    30000000.0 * sc[4] * x851 - 20000000.0 * sc[4] * x854 +
    10000000.0 * sc[5] * x9183 + 10000000.0 * sc[6] * x1882 + x1042 * x1882 -
    x1058 * x8857 - 10560000.0 * x1475 * x2094 + x1475 * x250 + x1698 +
    x1739 * x2358 + x1852 * x2105 - x1852 * x2263 - x1852 * x2312 -
    x1882 * x2272 + 10560000.0 * x2094 * x854 + x2323 * x854 - x2364 * x434 -
    x2371 * x434 - x250 * x854 + x481 + x5524 + x851 * x8857 + x8969 + x9709 +
    x9720 + x9753 + x9754 + x9756 + x9760 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1058 + x851) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[418] =
    30000000.0 * sc[2] * x1783 + 20000000.0 * sc[2] * x1960 * x769 +
    28000000.0 * sc[3] * x1661 + 18000.0 * sc[3] * x769 -
    20000000.0 * sc[4] * x1563 - 30000000.0 * sc[4] * x1661 -
    50000000.0 * sc[4] * x1783 - 30000000.0 * sc[4] * x2058 -
    30110000.0 * sc[4] * x232 - sc[4] * x9058 + 24000000.0 * sc[6] * x1957 +
    10000000.0 * sc[6] * x232 + x1042 * x232 + 10560000.0 * x1563 * x2094 +
    x1563 * x2323 - x1563 * x250 + x1661 * x2358 + x1698 + x1783 * x2105 -
    x1783 * x2263 - x1783 * x2312 - x1957 * x2196 + x1957 * x2361 +
    x2058 * x8857 - x2272 * x232 - x2364 * x769 - x2371 * x769 + x481 + x9715 +
    x9717 + x9752 + x9754 + x9760 + x9784 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1058 + x2058) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[441] =
    32000000.0 * sc[1] * x1893 - 28000000.0 * sc[3] * x1671 +
    28000000.0 * sc[3] * x1745 + 30000000.0 * sc[4] * x1085 -
    30000000.0 * sc[4] * x1160 - 20000000.0 * sc[4] * x1469 +
    20000000.0 * sc[4] * x1565 + 30000000.0 * sc[4] * x1671 -
    30000000.0 * sc[4] * x1745 + 50000000.0 * sc[4] * x1775 -
    50000000.0 * sc[4] * x1782 - 30110000.0 * sc[4] * x1889 -
    20000000.0 * sc[4] * x62 - sc[4] * x7580 + sc[5] * x9164 +
    10000000.0 * sc[6] * x1889 + 24000000.0 * sc[6] * x1972 + x1042 * x1889 -
    x1085 * x8857 + x1160 * x8857 + 10560000.0 * x1469 * x2094 + x1469 * x2323 -
    x1469 * x250 - 10560000.0 * x1565 * x2094 - x1565 * x2323 + x1565 * x250 -
    x1671 * x2358 + x1745 * x2358 - x1775 * x2105 + x1775 * x2263 +
    x1775 * x2312 + x1782 * x2105 - x1782 * x2263 - x1782 * x2312 -
    x1889 * x2272 - x1903 * x2364 - x1903 * x2371 - x1972 * x2196 +
    x1972 * x2361 + x506 + x5524 + x7733 + x8969 + x9714 + x9717 + x9754 +
    x9805 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1085 + x1160) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[464] =
    30000000.0 * sc[2] * x1847 + 28000000.0 * sc[3] * x865 -
    30000000.0 * sc[4] * x1299 - 24000000.0 * sc[4] * x1318 -
    20000000.0 * sc[4] * x1574 - 50000000.0 * sc[4] * x1847 -
    30110000.0 * sc[4] * x1892 - 5000000.0 * sc[4] * x1893 -
    30000000.0 * sc[4] * x865 - sc[4] * x9068 + 24000000.0 * sc[5] * x1308 +
    24000000.0 * sc[6] * x1649 + 10000000.0 * sc[6] * x1892 + x1042 * x1892 +
    x1299 * x8857 + 10560000.0 * x1574 * x2094 + x1574 * x2323 - x1574 * x250 -
    x1649 * x2196 + x1649 * x2361 + x1698 + x1847 * x2105 - x1847 * x2263 -
    x1847 * x2312 - x1892 * x2272 - x1893 * x2362 - x1903 * x2364 -
    x1903 * x2371 + x2358 * x865 + x481 + x7733 + x8180 + x9709 + x9717 +
    x9756 + x9760 + x9784 + x9831 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (-x1058 + x1299) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[487] =
    30000000.0 * sc[2] * x1881 + 28000000.0 * sc[3] * x1692 -
    28000000.0 * sc[3] * x295 + 20000000.0 * sc[4] * x1575 -
    20000000.0 * sc[4] * x1580 - 30000000.0 * sc[4] * x1692 -
    50000000.0 * sc[4] * x1881 - 30110000.0 * sc[4] * x1895 +
    30000000.0 * sc[4] * x295 - 30000000.0 * sc[4] * x319 +
    30000000.0 * sc[4] * x963 + 10000000.0 * sc[6] * x1895 + x1042 * x1895 -
    10560000.0 * x1575 * x2094 + x1575 * x250 + 10560000.0 * x1580 * x2094 -
    x1580 * x250 + x1881 * x2105 - x1881 * x2263 - x1881 * x2312 -
    x1895 * x2272 + x319 * x8857 + x481 + x5524 - x8857 * x963 + x9328 + x9699 +
    x9715 + x9720 + x9852 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1042 * x683 +
     10560000.0 * x2094 * x677 + x2105 * x680 - x2263 * x680 + x2270 * x683 +
     x2272 * x683 - x2312 * x680 + x2323 * x677 + x2358 * x678 - x250 * x677 +
     x354 * x680) *
      (x319 - x963) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1042 * x684 + x2105 * x681 - x2263 * x681 -
     x2270 * x684 - x2272 * x684 - x2312 * x681 + x2358 * x679 + x354 * x681) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x66 + x230 * x2364 +
     x230 * x2371 - x230 * x856) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (24000000.0 * sc[4] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-32000000.0 * sc[1] * x639 - 10000000.0 * sc[2] * x639 +
     30000000.0 * sc[2] * x682 + 20000000.0 * sc[4] * x603 +
     5000000.0 * sc[4] * x639 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x596 + x2105 * x682 + x2196 * x596 - x2263 * x682 -
     x2312 * x682 - x2361 * x596 + x2362 * x639 + x2363 * x596 + x354 * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-18000.0 * sc[3] * x435 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x558 + 10000000.0 * sc[6] * x685 + x1042 * x685 +
     x2196 * x558 - x2270 * x685 - x2272 * x685 - x2361 * x558 + x2363 * x558 +
     x2364 * x435 + x2371 * x435 - x435 * x856) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[5] =
    16000000.0 * sc[1] * x1884 - 12000000.0 * sc[3] * x1016 +
    12000000.0 * sc[3] * x988 + 24000000.0 * sc[4] * x1240 +
    5000000.0 * sc[4] * x1884 + 30110000.0 * sc[4] * x726 -
    30110000.0 * sc[4] * x826 + 50000000.0 * sc[4] * x830 -
    50000000.0 * sc[4] * x951 + x1016 * x2124 + x1016 * x2358 - x1042 * x726 +
    x1042 * x826 + 16060000000.0 * x1045 + x1060 * x1476 - x1060 * x973 -
    16060000000.0 * x1121 + x1235 * x2371 + x1476 * x8857 - x2124 * x988 +
    x2323 * x649 - x2323 * x651 - x2358 * x988 - x2361 * x909 + x2361 * x935 -
    x250 * x649 + x250 * x651 - x354 * x830 + x354 * x951 + x556 -
    x8857 * x973 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1476 + x973) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-x230 * x2371) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-24000000.0 * sc[4] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[28] =
    sc[12] * x5503 + 16000000.0 * sc[1] * x1422 - 12000000.0 * sc[3] * x1073 +
    12000000.0 * sc[3] * x985 + 30110000.0 * sc[4] * x1061 +
    50000000.0 * sc[4] * x1065 + 5000000.0 * sc[4] * x1422 +
    24000000.0 * sc[4] * x476 + sc[4] * x5512 * x811 -
    30110000.0 * sc[4] * x950 - 50000000.0 * sc[4] * x971 - sc[5] * x922 +
    sc[6] * x2075 + sc[7] * x755 - x1042 * x1061 + x1042 * x950 -
    x1060 * x1636 + x1060 * x1708 - x1065 * x354 + x1073 * x2124 +
    x1073 * x2358 - 16000000.0 * x1439 + x1504 * x2361 - x1636 * x8857 +
    x1708 * x8857 + x211 * x2371 - x2124 * x985 + x2323 * x857 - x2323 * x964 -
    x2358 * x985 - x2361 * x523 - x250 * x857 + x250 * x964 + x354 * x971 -
    16000000.0 * x513 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1636 - x1708) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-x230 * x2371) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[51] =
    16000000.0 * sc[1] * x1678 - 12000000.0 * sc[3] * x315 +
    12000000.0 * sc[3] * x318 + 30110000.0 * sc[4] * x140 -
    30110000.0 * sc[4] * x1556 + 24000000.0 * sc[4] * x1654 +
    50000000.0 * sc[4] * x1664 + 5000000.0 * sc[4] * x1678 -
    50000000.0 * sc[4] * x759 - sc[5] * x5610 - 0.0357 * sc[5] * x7505 -
    x1042 * x140 + x1042 * x1556 - x1060 * x1772 + x1060 * x1794 +
    x1656 * x2361 - x1664 * x354 - x1721 * x2361 - x1772 * x8857 +
    x1794 * x8857 + x2124 * x315 - x2124 * x318 + x224 * x2371 + x2323 * x965 -
    x2323 * x972 + x2358 * x315 - x2358 * x318 - x250 * x965 + x250 * x972 +
    x354 * x759 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1772 - x1794) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-x230 * x2371) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[74] =
    16000000.0 * sc[1] * x1765 - 12000000.0 * sc[3] * x1416 +
    12000000.0 * sc[3] * x883 - 30110000.0 * sc[4] * x1627 +
    30110000.0 * sc[4] * x1630 - 50000000.0 * sc[4] * x1666 +
    50000000.0 * sc[4] * x1672 + 24000000.0 * sc[4] * x1733 +
    5000000.0 * sc[4] * x1765 - sc[5] * x1325 + x1042 * x1627 - x1042 * x1630 +
    x1056 * x2371 - x1060 * x1829 + x1060 * x1853 + x1416 * x2124 +
    x1416 * x2358 + x1666 * x354 - x1672 * x354 + x1762 * x2361 -
    x1764 * x2361 - x1829 * x8857 + x1853 * x8857 - x2124 * x883 +
    x2323 * x974 - x2323 * x976 - x2358 * x883 - x250 * x974 + x250 * x976 +
    12000000.0 * x593 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1829 - x1853) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-x230 * x2371) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[97] =
    sc[12] * x9136 + sc[14] * x9128 + sc[15] * x9115 +
    7500000.0 * sc[17] * x2370 + 16000000.0 * sc[1] * x1879 +
    sc[1] * x5512 * x811 + sc[20] * x9068 - 12000000.0 * sc[3] * x1645 +
    12000000.0 * sc[3] * x1659 - 30110000.0 * sc[4] * x1677 +
    30110000.0 * sc[4] * x1699 - 50000000.0 * sc[4] * x1700 +
    5000000.0 * sc[4] * x1879 + 24000000.0 * sc[4] * x219 +
    50000000.0 * sc[4] * x398 - sc[5] * x5779 + sc[6] * x8384 + sc[7] * x9109 +
    sc[7] * x9112 + sc[8] * x9155 + 25010000.0 * sc[8] + x1042 * x1677 -
    x1042 * x1699 - x1060 * x1885 + x1060 * x1899 - 24000000.0 * x1319 -
    5000000.0 * x1439 + x1645 * x2124 + x1645 * x2358 - x1659 * x2124 -
    x1659 * x2358 + x1700 * x354 - x1776 * x2361 + x1798 * x2361 -
    x1885 * x8857 + x1899 * x8857 + x221 + x2323 * x977 - x2323 * x982 +
    30110000.0 * x234 + 10000000.0 * x2370 * x517 + x2371 * x276 - x250 * x977 +
    x250 * x982 - x354 * x398 + 50000000.0 * x433 - 5000000.0 * x513 -
    24000000.0 * x581 +
    11.3 * x594 * exp(-1509.64999741416 * invT + 2.0 * logT) + 0.0714 * x7583 +
    x9065 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1885 - x1899) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-x230 * x2371) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-24000000.0 * sc[4] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[120] =
    -refC * x5512 * x872 - 5000000.0 * sc[12] * x1424 -
    30110000.0 * sc[13] * x1187 - sc[16] * x135 - 10000000.0 * sc[17] * x9183 -
    sc[19] * x9164 + 16000000.0 * sc[1] * x1888 - sc[1] * x922 -
    24000000.0 * sc[20] * x1308 - sc[2] * x5610 - 0.0357 * sc[2] * x7505 -
    sc[3] * x1325 - 12000000.0 * sc[3] * x1660 + 12000000.0 * sc[3] * x1662 +
    30110000.0 * sc[4] * x1668 - 30110000.0 * sc[4] * x1741 +
    5000000.0 * sc[4] * x1888 + 24000000.0 * sc[4] * x1946 - sc[4] * x5779 -
    sc[6] * x9197 - sc[6] * x9199 - sc[8] * x9162 - x1010 * x2323 +
    x1010 * x250 - x1042 * x1668 + x1042 * x1741 + 80300000000.0 * x1045 -
    x1060 * x1954 + x1060 * x1980 - 80300000000.0 * x1121 - x1473 * x8856 -
    5710000.0 * x1473 * exp(379.92858268256299 * invT) - x1591 * x234 +
    x1660 * x2124 + x1660 * x2358 - x1662 * x2124 - x1662 * x2358 +
    x1760 * x354 - x1768 * x354 + x1779 * x2361 + x1793 * x2371 -
    x1856 * x2361 - x1954 * x8857 + x1980 * x8857 - x2268 * x433 +
    x2323 * x987 - x2360 * x440 - x250 * x987 - 25010000.0 * x564 * x593 -
    16000000.0 * x571 * x593 - x594 * x882 + x9876 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1954 - x1980) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-x230 * x2371) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[143] =
    16000000.0 * sc[1] * x1419 + sc[1] * x2075 - 12000000.0 * sc[3] * x1665 +
    12000000.0 * sc[3] * x1670 + 5000000.0 * sc[4] * x1419 -
    30110000.0 * sc[4] * x1759 + 30110000.0 * sc[4] * x1769 -
    50000000.0 * sc[4] * x1770 + 50000000.0 * sc[4] * x1771 +
    24000000.0 * sc[4] * x1985 + sc[4] * x8384 - sc[5] * x9197 - sc[5] * x9199 +
    x1012 * x2323 - x1012 * x250 - x1014 * x2323 + x1014 * x250 +
    x1042 * x1759 - x1042 * x1769 - x1060 * x2022 + x1060 * x2045 +
    x1665 * x2124 + x1665 * x2358 - x1670 * x2124 - x1670 * x2358 +
    x1770 * x354 - x1771 * x354 + x1842 * x2371 + x1851 * x2361 -
    x1878 * x2361 - x2022 * x8857 + x2045 * x8857 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x2022 - x2045) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-x230 * x2371) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[166] =
    16000000.0 * sc[1] * x1893 + sc[1] * x755 - 12000000.0 * sc[3] * x1673 +
    12000000.0 * sc[3] * x1674 - 50000000.0 * sc[4] * x1780 +
    50000000.0 * sc[4] * x1781 - 30110000.0 * sc[4] * x1786 +
    5000000.0 * sc[4] * x1893 + 30110000.0 * sc[4] * x202 + sc[4] * x9109 +
    sc[4] * x9112 + x1015 * x2323 - x1015 * x250 - x1019 * x2323 +
    x1019 * x250 + x1042 * x1786 - x1042 * x202 - x1060 * x2081 +
    x1060 * x2099 + x1673 * x2124 + x1673 * x2358 - x1674 * x2124 -
    x1674 * x2358 + x1780 * x354 - x1781 * x354 - x1898 * x2361 +
    x1903 * x2371 + x1906 * x2361 - x2081 * x8857 + x2099 * x8857 + x9326 +
    x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x2081 - x2099) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-x230 * x2371) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-24000000.0 * sc[4] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[189] =
    16000000.0 * sc[1] * x1727 - 12000000.0 * sc[3] * x1680 +
    12000000.0 * sc[3] * x1681 + 5000000.0 * sc[4] * x1727 -
    50000000.0 * sc[4] * x1788 + 50000000.0 * sc[4] * x1789 -
    30110000.0 * sc[4] * x1792 + 30110000.0 * sc[4] * x1832 +
    24000000.0 * sc[4] * x453 + sc[4] * x9155 + 25010000.0 * sc[4] -
    sc[5] * x9162 + x1022 * x2323 - x1022 * x250 - x1025 * x2323 +
    x1025 * x250 + x1042 * x1792 - x1042 * x1832 - x1060 * x2123 +
    x1060 * x2149 + x1238 * x2371 + x1680 * x2124 + x1680 * x2358 -
    x1681 * x2124 - x1681 * x2358 + x1788 * x354 - x1789 * x354 +
    x1947 * x2361 - x1958 * x2361 - x2123 * x8857 + x2149 * x8857 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x2123 - x2149) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-x230 * x2371) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[212] =
    16000000.0 * sc[1] * x637 - 12000000.0 * sc[3] * x1683 +
    12000000.0 * sc[3] * x1689 - 50000000.0 * sc[4] * x1791 +
    50000000.0 * sc[4] * x1797 - 30110000.0 * sc[4] * x1834 +
    30110000.0 * sc[4] * x1848 + 24000000.0 * sc[4] * x2020 +
    5000000.0 * sc[4] * x637 + x1042 * x1834 - x1042 * x1848 +
    44000000000.0 * x1045 + x1049 * x2323 - x1049 * x250 - x1053 * x2323 +
    x1053 * x250 - x1060 * x2138 + x1060 * x2197 - 44000000000.0 * x1121 +
    x1683 * x2124 + x1683 * x2358 - x1689 * x2124 - x1689 * x2358 +
    x1791 * x354 - x1797 * x354 + x1959 * x2361 - x1964 * x2361 -
    x2138 * x8857 + x2197 * x8857 + x2371 * x792 + x9383 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x2138 - x2197) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-x230 * x2371) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[235] =
    16000000.0 * sc[1] * x1003 - 12000000.0 * sc[3] * x1693 +
    12000000.0 * sc[3] * x1694 + 5000000.0 * sc[4] * x1003 +
    30110000.0 * sc[4] * x1840 - 30110000.0 * sc[4] * x1861 +
    24000000.0 * sc[4] * x2021 - x1042 * x1840 + x1042 * x1861 - x1060 * x2184 +
    x1060 * x2274 + x1066 * x2323 - x1066 * x250 - x1068 * x2323 +
    x1068 * x250 + x1693 * x2124 + x1693 * x2358 - x1694 * x2124 -
    x1694 * x2358 + x1801 * x354 - x1804 * x354 + x1965 * x2361 -
    x2184 * x8857 + x2274 * x8857 - x2361 * x646 + x2371 * x793 + x9855 +
    x9892 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x2184 - x2274) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-x230 * x2371) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[258] =
    16000000.0 * sc[1] * x637 - 12000000.0 * sc[3] * x1695 +
    12000000.0 * sc[3] * x1697 + 50000000.0 * sc[4] * x1696 -
    50000000.0 * sc[4] * x1806 - 30110000.0 * sc[4] * x1845 +
    5000000.0 * sc[4] * x637 + 30110000.0 * sc[4] * x725 +
    24000000.0 * sc[4] * x930 + x1042 * x1845 - x1042 * x725 - x1060 * x1555 +
    x1060 * x2326 - x1071 * x2323 + x1071 * x250 - x1555 * x8857 +
    x1695 * x2124 + x1695 * x2358 - x1696 * x354 - x1697 * x2124 -
    x1697 * x2358 + x1806 * x354 + x2323 * x661 + x2326 * x8857 + x2361 * x655 -
    x2361 * x908 + x2371 * x792 - x250 * x661 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1555 - x2326) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-x230 * x2371) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[281] =
    16000000.0 * sc[1] * x1572 + sc[1] * x5503 - 12000000.0 * sc[3] * x1701 +
    12000000.0 * sc[3] * x1702 + 24000000.0 * sc[4] * x1502 +
    5000000.0 * sc[4] * x1572 - 50000000.0 * sc[4] * x1755 +
    50000000.0 * sc[4] * x1761 - 30110000.0 * sc[4] * x1880 +
    30110000.0 * sc[4] * x1887 + sc[4] * x9136 - 5000000.0 * sc[5] * x1424 -
    x1021 * x1060 - x1021 * x8857 + x1042 * x1880 - x1042 * x1887 +
    x1060 * x2366 + x1072 * x2323 - x1072 * x250 - x1076 * x2323 +
    x1076 * x250 + x1701 * x2124 + x1701 * x2358 - x1702 * x2124 -
    x1702 * x2358 + x1755 * x354 - x1761 * x354 + x1976 * x2361 -
    x1977 * x2361 + x228 * x2371 + x2366 * x8857 + x9855 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x1021 - x2366) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-x230 * x2371) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[304] =
    -12000000.0 * sc[3] * x1704 + 12000000.0 * sc[3] * x1706 -
    50000000.0 * sc[4] * x1767 + 50000000.0 * sc[4] * x1833 -
    30110000.0 * sc[4] * x1894 + 30110000.0 * sc[4] * x1896 -
    30110000.0 * sc[5] * x1187 + x1042 * x1894 - x1042 * x1896 + x1060 * x2354 -
    x1060 * x742 + x1077 * x2323 - x1077 * x250 - x1081 * x2323 + x1081 * x250 +
    x1704 * x2124 + x1704 * x2358 - x1706 * x2124 - x1706 * x2358 +
    x1767 * x354 - x1833 * x354 + x1979 * x2361 - x1986 * x2361 +
    x2354 * x8857 - x742 * x8857 + x9326 + x9898 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x2354 + x742) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-x230 * x2371) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[327] =
    -12000000.0 * sc[3] * x1707 + 12000000.0 * sc[3] * x1709 -
    50000000.0 * sc[4] * x1835 + 50000000.0 * sc[4] * x1836 -
    30110000.0 * sc[4] * x1894 + 30110000.0 * sc[4] * x1897 +
    24000000.0 * sc[4] * x488 + sc[4] * x9128 + x1042 * x1894 - x1042 * x1897 +
    x1060 * x1174 - x1060 * x1231 + x1083 * x2323 - x1083 * x250 -
    x1089 * x2323 + x1089 * x250 + x1174 * x8857 - x1231 * x8857 +
    x1707 * x2124 + x1707 * x2358 - x1709 * x2124 - x1709 * x2358 +
    x1835 * x354 - x1836 * x354 + x1979 * x2361 - x1992 * x2361 + x9898 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1174 + x1231) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-x230 * x2371) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[350] =
    -12000000.0 * sc[3] * x1711 + 12000000.0 * sc[3] * x1719 +
    24000000.0 * sc[4] * x1716 - 50000000.0 * sc[4] * x1838 +
    50000000.0 * sc[4] * x1839 + 30110000.0 * sc[4] * x1841 -
    30110000.0 * sc[4] * x1904 + sc[4] * x9115 - x1042 * x1841 + x1042 * x1904 +
    x1060 * x116 - x1060 * x81 + x1091 * x2323 - x1091 * x250 + x116 * x8857 -
    x1366 * x2323 + x1366 * x250 + x1711 * x2124 + x1711 * x2358 -
    x1719 * x2124 - x1719 * x2358 + x1838 * x354 - x1839 * x354 -
    x1886 * x2361 + x1999 * x2361 - x81 * x8857 + x9898 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x116 + x81) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-x230 * x2371) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-24000000.0 * sc[4] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[373] =
    12000000.0 * sc[3] * x1731 + 30110000.0 * sc[4] * x169 +
    50000000.0 * sc[4] * x1849 - sc[5] * x135 - x1042 * x169 + x1060 * x1625 -
    x1060 * x848 + x1367 * x2323 - x1367 * x250 - x1472 * x2323 + x1472 * x250 +
    x1625 * x8857 - x1731 * x2124 - x1731 * x2358 + x1846 * x354 -
    x1849 * x354 - x1956 * x2361 - x848 * x8857 + x9908 + x9911 + x9912 +
    x9913 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1625 + x848) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-x230 * x2371) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[396] =
    12000000.0 * sc[3] * x1739 + 50000000.0 * sc[4] * x1852 +
    30110000.0 * sc[4] * x1882 + 7500000.0 * sc[4] * x2370 -
    10000000.0 * sc[5] * x9183 - x1042 * x1882 - x1060 * x851 - x1739 * x2124 -
    x1739 * x2358 + x1846 * x354 - x1852 * x354 - x1956 * x2361 - x2323 * x854 +
    x2371 * x434 + x250 * x854 - x851 * x8857 + x9912 + x9913 + x9917 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1058 + x851) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-x230 * x2371) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[419] =
    12000000.0 * sc[3] * x1661 + 50000000.0 * sc[4] * x1783 +
    30110000.0 * sc[4] * x232 - x1042 * x232 - x1060 * x2058 - x1563 * x2323 +
    x1563 * x250 - x1661 * x2124 - x1661 * x2358 - x1783 * x354 + x1846 * x354 -
    x1957 * x2361 - x2058 * x8857 + x2371 * x769 + x9912 + x9913 + x9917 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1058 + x2058) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-x230 * x2371) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[442] =
    -12000000.0 * sc[3] * x1671 + 12000000.0 * sc[3] * x1745 -
    50000000.0 * sc[4] * x1775 + 50000000.0 * sc[4] * x1782 +
    30110000.0 * sc[4] * x1889 - sc[5] * x9164 - x1042 * x1889 + x1060 * x1085 -
    x1060 * x1160 + x1085 * x8857 - x1160 * x8857 - x1469 * x2323 +
    x1469 * x250 + x1565 * x2323 - x1565 * x250 + x1671 * x2124 +
    x1671 * x2358 - x1745 * x2124 - x1745 * x2358 + x1775 * x354 -
    x1782 * x354 - x1972 * x2361 + x9908 + x9913 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1085 + x1160) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-x230 * x2371) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[465] =
    16000000.0 * sc[1] * x1893 + 12000000.0 * sc[3] * x865 +
    24000000.0 * sc[4] * x1318 + 50000000.0 * sc[4] * x1847 +
    30110000.0 * sc[4] * x1892 + 5000000.0 * sc[4] * x1893 + sc[4] * x9068 -
    24000000.0 * sc[5] * x1308 + x1042 * x1843 - x1042 * x1892 + x1058 * x1060 +
    x1058 * x8857 - x1060 * x1299 - x1299 * x8857 + x1475 * x2323 -
    x1475 * x250 - x1574 * x2323 + x1574 * x250 - x1649 * x2361 + x1846 * x354 -
    x1847 * x354 + x1890 * x2361 + x1903 * x2371 - x2124 * x865 - x2358 * x865 +
    x9855 + x9911 + x9912 + x9913 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (-x1058 + x1299) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-x230 * x2371) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-24000000.0 * sc[4] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[488] =
    12000000.0 * sc[3] * x1692 - 12000000.0 * sc[3] * x295 +
    50000000.0 * sc[4] * x1881 + 30110000.0 * sc[4] * x1895 - x1042 * x1895 -
    x1060 * x319 + x1060 * x963 + x1575 * x2323 - x1575 * x250 - x1580 * x2323 +
    x1580 * x250 - x1692 * x2124 - x1692 * x2358 + x1846 * x354 - x1881 * x354 -
    x1956 * x2361 + x2124 * x295 + x2358 * x295 - x319 * x8857 + x8857 * x963 +
    x9908 + x9912 + x9913 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1042 * x683 - x2124 * x678 - x2323 * x677 -
     x2358 * x678 + x250 * x677 - x354 * x680) *
      (x319 - x963) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1042 * x684 - x2124 * x679 - x2358 * x679 -
     x354 * x681) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-x230 * x2371) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-24000000.0 * sc[4] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-16000000.0 * sc[1] * x639 - 5000000.0 * sc[4] * x639 +
     50000000.0 * sc[4] * x682 + x2361 * x596 - x354 * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (30110000.0 * sc[4] * x685 - x1042 * x685 + x2361 * x558 - x2371 * x435) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[6] =
    140000.0 * sc[3] * x1235 + 90000.0 * sc[3] * x1240 + sc[3] * x559 +
    20000.0 * sc[3] * x909 - 20000.0 * sc[3] * x935 -
    24000000.0 * sc[6] * x1240 - sc[6] * x422 + 20000000.0 * sc[6] * x649 -
    20000000.0 * sc[6] * x651 - 10000000.0 * sc[6] * x726 +
    10000000.0 * sc[6] * x826 - 24600000.0 * sc[6] * x909 +
    24600000.0 * sc[6] * x935 + x1235 * x2364 + x1578 * x1884 + x1884 * x2362 +
    x2270 * x726 - x2270 * x826 - x2310 * x726 + x2310 * x826 + x2316 * x726 -
    x2316 * x826 + x2317 * x830 - x2317 * x951 + x2322 * x830 - x2322 * x951 -
    x2324 * x830 + x2324 * x951 + x2363 * x909 - x2363 * x935 + x648 * x909 -
    x648 * x935 + x726 * x962 - x826 * x962 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1476 + x973) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[29] =
    sc[21] * sc[3] * x5471 +
    300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * logT) +
    sc[3] * sc[5] * x5478 + sc[3] * x1061 * x2315 - 20000.0 * sc[3] * x1504 +
    140000.0 * sc[3] * x211 + 90000.0 * sc[3] * x476 + 20000.0 * sc[3] * x523 +
    sc[3] * x5464 * exp(-0.86 * logT) - 10000000.0 * sc[6] * x1061 +
    24600000.0 * sc[6] * x1504 - 24000000.0 * sc[6] * x476 -
    24600000.0 * sc[6] * x523 + 20000000.0 * sc[6] * x857 +
    10000000.0 * sc[6] * x950 - 20000000.0 * sc[6] * x964 + sc[7] * x50 +
    x1061 * x2270 - x1061 * x2310 + x1061 * x962 + x1065 * x2317 +
    x1065 * x2322 - x1065 * x2324 + x1422 * x1578 + x1422 * x2362 -
    x1504 * x2363 - x1504 * x648 + x211 * x2364 - x2270 * x950 + x2310 * x950 -
    x2316 * x950 - x2317 * x971 - x2322 * x971 + x2324 * x971 + x2363 * x523 +
    x523 * x648 + x5462 - x950 * x962 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1636 - x1708) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[52] =
    90000.0 * sc[3] * x1654 - 20000.0 * sc[3] * x1656 +
    20000.0 * sc[3] * x1721 + 140000.0 * sc[3] * x224 + sc[5] * x5610 -
    10000000.0 * sc[6] * x140 + 10000000.0 * sc[6] * x1556 -
    24000000.0 * sc[6] * x1654 + 24600000.0 * sc[6] * x1656 -
    24600000.0 * sc[6] * x1721 + 20000000.0 * sc[6] * x965 -
    20000000.0 * sc[6] * x972 - 20000000.0 * sc[6] + sc[7] * x7441 +
    x140 * x2270 - x140 * x2310 + x140 * x2316 + x140 * x962 - x1556 * x2270 +
    x1556 * x2310 - x1556 * x2316 - x1556 * x962 + x1578 * x1678 -
    x1656 * x2363 - x1656 * x648 + x1664 * x2317 + x1664 * x2322 -
    x1664 * x2324 + x1678 * x2362 + x1721 * x2363 + x1721 * x648 +
    x224 * x2364 - x2317 * x759 - x2322 * x759 + x2324 * x759 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1772 - x1794) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[75] =
    -refC * sc[6] * x5758 + sc[0] * x559 + sc[12] * x8351 + sc[14] * x8347 +
    300000.0 * sc[15] * x1326 + sc[1] * sc[21] * x5471 +
    600000000.0 * sc[1] * sc[3] * exp(-1.72 * logT) + sc[1] * sc[5] * x5478 +
    sc[1] * x5464 * exp(-0.86 * logT) + sc[20] * x8297 +
    140000.0 * sc[3] * x1056 + 90000.0 * sc[3] * x1733 + sc[5] * x1325 +
    10000000.0 * sc[6] * x1627 - 10000000.0 * sc[6] * x1630 -
    24000000.0 * sc[6] * x1733 + 24600000.0 * sc[6] * x1762 -
    24600000.0 * sc[6] * x1764 + 20000000.0 * sc[6] * x974 -
    20000000.0 * sc[6] * x976 + 260000.0 * sc[7] * x8339 +
    840000000.0 * sc[7] * x8342 + sc[9] * x8294 - 140000.0 * x1040 +
    x1056 * x2364 - 140000.0 * x1241 - 90000.0 * x1319 + x1398 * x182 +
    x1578 * x1765 - x1627 * x2270 + x1627 * x2310 - x1627 * x2316 +
    x1630 * x2270 - x1630 * x2310 + x1630 * x2316 - x1666 * x2317 -
    x1666 * x2322 + x1666 * x2324 + x1672 * x2317 + x1672 * x2322 -
    x1672 * x2324 - x1762 * x2363 - x1762 * x648 + x1764 * x2363 +
    x1764 * x648 + x1765 * x2362 + x2315 * x234 +
    7600000.0 * x433 * exp(-201.28666632188799 * invT) - 90000.0 * x581 +
    x7530 + x9983 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1829 - x1853) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[98] =
    sc[11] * x9105 + 24000000.0 * sc[12] * x1356 * x1358 +
    20000000.0 * sc[12] * x1374 + 90000.0 * sc[3] * x219 +
    140000.0 * sc[3] * x276 + 10000000.0 * sc[6] * x1677 -
    10000000.0 * sc[6] * x1699 - 24600000.0 * sc[6] * x1776 +
    24600000.0 * sc[6] * x1798 - 24000000.0 * sc[6] * x219 - sc[6] * x7574 -
    sc[6] * x8384 + 20000000.0 * sc[6] * x977 - 20000000.0 * sc[6] * x982 +
    sc[7] * x9109 + sc[7] * x9112 + x1578 * x1879 +
    6600000.0 * x162 * x166 * x234 + 24000000.0 * x162 * x440 * x447 -
    x1677 * x2270 + x1677 * x2310 - x1677 * x2316 + x1699 * x2270 -
    x1699 * x2310 + x1699 * x2316 - x1700 * x2317 - x1700 * x2322 +
    x1700 * x2324 + x1776 * x2363 + x1776 * x648 - x1798 * x2363 -
    x1798 * x648 + 13400000.0 * x182 * x609 + x1879 * x2362 +
    10000000.0 * x196 * x517 + x2317 * x398 + x2322 * x398 - x2324 * x398 +
    x2364 * x276 + 141600000.0 * x5784 + x7582 + x9932 + x9997 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1885 - x1899) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[121] =
    -refC * sc[6] * x5978 + sc[1] * sc[3] * x5478 + sc[2] * x5610 +
    sc[3] * x1325 - 20000.0 * sc[3] * x1779 + 140000.0 * sc[3] * x1793 +
    20000.0 * sc[3] * x1856 + 90000.0 * sc[3] * x1946 -
    20000000.0 * sc[6] * x1010 - 10000000.0 * sc[6] * x1668 +
    10000000.0 * sc[6] * x1741 + 24600000.0 * sc[6] * x1779 -
    24600000.0 * sc[6] * x1856 - 24000000.0 * sc[6] * x1946 - sc[6] * x9197 -
    sc[6] * x9199 + 20000000.0 * sc[6] * x987 + x1578 * x1888 + x1668 * x2270 -
    x1668 * x2310 + x1668 * x2316 + x1668 * x962 - x1741 * x2270 +
    x1741 * x2310 - x1741 * x2316 - x1741 * x962 - x1760 * x2317 -
    x1760 * x2322 + x1760 * x2324 + x1768 * x2317 + x1768 * x2322 -
    x1768 * x2324 - x1779 * x2363 - x1779 * x648 + x1793 * x2364 +
    x1856 * x2363 + x1856 * x648 + x1888 * x2362 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1954 - x1980) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[144] =
    -refC * sc[21] * x6072 - refC * sc[3] * x5758 - refC * sc[5] * x5978 -
    refC * x5464 * exp(-0.86 * logT + x616) - sc[0] * x422 - sc[13] * x1144 -
    sc[15] * x10023 - 140000.0 * sc[17] * x1210 - 9260000.0 * sc[19] -
    90000.0 * sc[20] * x1304 - 20000000.0 * sc[2] + 140000.0 * sc[3] * x1842 +
    90000.0 * sc[3] * x1985 - sc[4] * x7574 - sc[4] * x8384 - sc[5] * x9197 -
    sc[5] * x9199 + 20000000.0 * sc[6] * x1012 - 20000000.0 * sc[6] * x1014 +
    10000000.0 * sc[6] * x1759 - 10000000.0 * sc[6] * x1769 +
    24600000.0 * sc[6] * x1851 - 24600000.0 * sc[6] * x1878 -
    24000000.0 * sc[6] * x1985 -
    520000.0 * sc[6] * exp(820.24316526169298 * invT) -
    1680000000.0 * sc[6] * exp(-6038.59998965664 * invT) - 14400000.0 * sc[8] -
    sc[9] * x385 - x10019 + x10031 + x10033 + x10037 + 24000000.0 * x1319 +
    x1419 * x2362 - x1759 * x2270 + x1759 * x2310 - x1759 * x2316 +
    x1769 * x2270 - x1769 * x2310 + x1769 * x2316 + x1770 * x2324 -
    x1771 * x2324 + x1842 * x2364 - x1851 * x2363 - x1851 * x648 +
    x1878 * x2363 + x1878 * x648 - x2269 * x234 - x2318 * x433 -
    10000000.0 * x234 - 24600000.0 * x440 + 24000000.0 * x581 -
    20000000.0 * x594 + x6085 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x2022 - x2045) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[167] =
    300000.0 * sc[14] * x1350 + sc[19] * x10040 + sc[1] * x50 + sc[2] * x7441 +
    140000.0 * sc[3] * x1903 + 260000.0 * sc[3] * x8339 +
    840000000.0 * sc[3] * x8342 + sc[4] * x9109 + sc[4] * x9112 +
    20000000.0 * sc[6] * x1015 - 20000000.0 * sc[6] * x1019 +
    10000000.0 * sc[6] * x1786 - 24600000.0 * sc[6] * x1898 +
    24600000.0 * sc[6] * x1906 - 10000000.0 * sc[6] * x202 + x10039 + x10050 +
    x10060 + x1578 * x1893 - x1780 * x2317 - x1780 * x2322 + x1780 * x2324 +
    x1781 * x2317 + x1781 * x2322 - x1781 * x2324 - x1786 * x2270 +
    x1786 * x2310 - x1786 * x2316 + x1893 * x2362 + x1898 * x2363 +
    x1898 * x648 + x1903 * x2364 - x1906 * x2363 - x1906 * x648 + x202 * x2270 -
    x202 * x2310 + x202 * x2316 + x341 * x433 +
    8700.0 * x440 * exp(-490.13303249379697 * invT) + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x2081 - x2099) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[190] =
    140000.0 * sc[3] * x1238 - 20000.0 * sc[3] * x1947 +
    20000.0 * sc[3] * x1958 + 90000.0 * sc[3] * x453 +
    24000000.0 * sc[4] * x1356 * x162 + 20000000.0 * sc[6] * x1022 -
    20000000.0 * sc[6] * x1025 + 10000000.0 * sc[6] * x1792 -
    10000000.0 * sc[6] * x1832 + 24600000.0 * sc[6] * x1947 -
    24600000.0 * sc[6] * x1958 - 24000000.0 * sc[6] * x453 -
    14400000.0 * sc[6] + x10062 + x1238 * x2364 + x1578 * x1727 +
    x1727 * x2362 - x1788 * x2317 - x1788 * x2322 + x1788 * x2324 +
    x1789 * x2317 + x1789 * x2322 - x1789 * x2324 - x1792 * x2270 +
    x1792 * x2310 - x1792 * x2316 - x1792 * x962 + x1832 * x2270 -
    x1832 * x2310 + x1832 * x2316 + x1832 * x962 - x1947 * x2363 -
    x1947 * x648 + x1958 * x2363 + x1958 * x648 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x2123 - x2149) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[213] =
    -20000.0 * sc[3] * x1959 + 20000.0 * sc[3] * x1964 +
    90000.0 * sc[3] * x2020 + 140000.0 * sc[3] * x792 + sc[3] * x8294 +
    20000000.0 * sc[6] * x1049 - 20000000.0 * sc[6] * x1053 +
    10000000.0 * sc[6] * x1834 - 10000000.0 * sc[6] * x1848 +
    24600000.0 * sc[6] * x1959 - 24600000.0 * sc[6] * x1964 -
    24000000.0 * sc[6] * x2020 - sc[6] * x385 + x1578 * x637 - x1791 * x2317 -
    x1791 * x2322 + x1791 * x2324 + x1797 * x2317 + x1797 * x2322 -
    x1797 * x2324 - x1834 * x2270 + x1834 * x2310 - x1834 * x2316 -
    x1834 * x962 + x1848 * x2270 - x1848 * x2310 + x1848 * x2316 +
    x1848 * x962 - x1959 * x2363 - x1959 * x648 + x1964 * x2363 + x1964 * x648 +
    x2362 * x637 + x2364 * x792 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x2138 - x2197) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[236] =
    -20000.0 * sc[3] * x1965 + 90000.0 * sc[3] * x2021 +
    20000.0 * sc[3] * x646 + 140000.0 * sc[3] * x793 +
    20000000.0 * sc[6] * x1066 - 20000000.0 * sc[6] * x1068 -
    10000000.0 * sc[6] * x1840 + 10000000.0 * sc[6] * x1861 +
    24600000.0 * sc[6] * x1965 - 24000000.0 * sc[6] * x2021 -
    24600000.0 * sc[6] * x646 + x1003 * x1578 + x1003 * x2362 + x10104 -
    x1801 * x2322 + x1801 * x2324 + x1804 * x2322 - x1804 * x2324 +
    x1840 * x2270 - x1840 * x2310 + x1840 * x2316 + x1840 * x962 -
    x1861 * x2270 + x1861 * x2310 - x1861 * x2316 - x1861 * x962 -
    x1965 * x2363 - x1965 * x648 + 2100000.0 * x208 - 2100000.0 * x2147 +
    x2363 * x646 + x2364 * x793 + x646 * x648 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x2184 - x2274) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[259] =
    -20000.0 * sc[3] * x655 + 140000.0 * sc[3] * x792 + 20000.0 * sc[3] * x908 +
    90000.0 * sc[3] * x930 + sc[4] * x9105 - 20000000.0 * sc[6] * x1071 +
    10000000.0 * sc[6] * x1845 + 24600000.0 * sc[6] * x655 +
    20000000.0 * sc[6] * x661 - 10000000.0 * sc[6] * x725 -
    24600000.0 * sc[6] * x908 - 24000000.0 * sc[6] * x930 + x1578 * x637 +
    x1696 * x2317 + x1696 * x2322 - x1696 * x2324 - x1806 * x2317 -
    x1806 * x2322 + x1806 * x2324 - x1845 * x2270 + x1845 * x2310 -
    x1845 * x2316 - x1845 * x962 + 4200000.0 * x208 - 4200000.0 * x2147 +
    x2270 * x725 - x2310 * x725 + x2316 * x725 + x2362 * x637 - x2363 * x655 +
    x2363 * x908 + x2364 * x792 - x648 * x655 + x648 * x908 + x725 * x962 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1555 - x2326) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[282] =
    24000000.0 * refCinv * sc[4] * x440 * x447 + 90000.0 * sc[3] * x1502 -
    20000.0 * sc[3] * x1976 + 20000.0 * sc[3] * x1977 +
    140000.0 * sc[3] * x228 + sc[3] * x8351 +
    24000000.0 * sc[4] * x1356 * x1358 + 20000000.0 * sc[4] * x1374 +
    20000000.0 * sc[6] * x1072 - 20000000.0 * sc[6] * x1076 -
    24000000.0 * sc[6] * x1502 + 10000000.0 * sc[6] * x1880 -
    10000000.0 * sc[6] * x1887 + 24600000.0 * sc[6] * x1976 -
    24600000.0 * sc[6] * x1977 + x10131 + x1572 * x2362 +
    6600000.0 * x166 * x234 * x739 - x1755 * x2317 + x1755 * x2324 +
    x1761 * x2317 - x1761 * x2324 - x1880 * x2270 + x1880 * x2310 -
    x1880 * x2316 - x1880 * x962 + x1887 * x2270 - x1887 * x2310 +
    x1887 * x2316 + x1887 * x962 - x1976 * x2363 - x1976 * x648 +
    x1977 * x2363 + x1977 * x648 + x228 * x2364 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x1021 - x2366) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[305] =
    20000.0 * sc[3] * x1986 + 20000000.0 * sc[6] * x1077 -
    20000000.0 * sc[6] * x1081 - sc[6] * x1144 - 10000000.0 * sc[6] * x1896 -
    24600000.0 * sc[6] * x1986 + x10050 + x10146 + x10150 + x1438 * x1578 -
    x1767 * x2317 - x1767 * x2322 + x1767 * x2324 + x1833 * x2317 +
    x1833 * x2322 - x1833 * x2324 - x1894 * x2270 - x1894 * x2316 +
    x1896 * x2270 - x1896 * x2310 + x1896 * x2316 + x1896 * x962 -
    x1979 * x648 + x1986 * x2363 + x1986 * x648 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x2354 + x742) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[328] =
    90000.0 * sc[3] * x488 + sc[3] * x8347 + 20000000.0 * sc[6] * x1083 -
    20000000.0 * sc[6] * x1089 - 10000000.0 * sc[6] * x1897 -
    24600000.0 * sc[6] * x1992 - 24000000.0 * sc[6] * x488 +
    300000.0 * sc[7] * x1350 + x10150 + x10162 + x1438 * x1578 - x1835 * x2317 -
    x1835 * x2322 + x1835 * x2324 + x1836 * x2317 + x1836 * x2322 -
    x1836 * x2324 - x1894 * x2270 - x1894 * x2316 + x1897 * x2270 -
    x1897 * x2310 + x1897 * x2316 - x1979 * x648 + x1992 * x2363 +
    x1992 * x648 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1174 + x1231) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[351] =
    300000.0 * sc[3] * x1326 + 90000.0 * sc[3] * x1716 +
    140000.0 * sc[3] * x173 + 20000.0 * sc[3] * x1886 -
    20000.0 * sc[3] * x1999 - sc[6] * x10023 + 20000000.0 * sc[6] * x1091 -
    20000000.0 * sc[6] * x1366 - 24000000.0 * sc[6] * x1716 -
    10000000.0 * sc[6] * x1841 - 24600000.0 * sc[6] * x1886 +
    10000000.0 * sc[6] * x1904 + 24600000.0 * sc[6] * x1999 + x1438 * x1578 +
    x1438 * x2362 + x173 * x2364 - x1838 * x2317 - x1838 * x2322 +
    x1838 * x2324 + x1839 * x2317 + x1839 * x2322 - x1839 * x2324 +
    x1841 * x2270 - x1841 * x2310 + x1841 * x2316 + x1841 * x962 +
    x1886 * x2363 + x1886 * x648 - x1904 * x2270 + x1904 * x2310 -
    x1904 * x2316 - x1904 * x962 - x1999 * x2363 - x1999 * x648 +
    4200000.0 * x208 - 4200000.0 * x2147 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x116 + x81) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[374] =
    20000000.0 * sc[6] * x1367 - 20000000.0 * sc[6] * x1472 -
    10000000.0 * sc[6] * x169 + x10176 + x10180 + x10185 + x10190 + x10191 +
    x10197 + x169 * x2270 - x169 * x2310 + x169 * x2316 + x169 * x962 +
    x1846 * x2324 + x1849 * x2317 + x1849 * x2322 - x1849 * x2324 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1625 + x848) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[397] =
    140000.0 * sc[3] * x434 - 140000.0 * sc[6] * x1210 +
    20000000.0 * sc[6] * x1475 - 10000000.0 * sc[6] * x1882 -
    20000000.0 * sc[6] * x854 + x10176 + x10180 + x10185 + x10187 + x10191 +
    x10197 + x10200 + x1846 * x2324 + x1852 * x2317 + x1852 * x2322 -
    x1852 * x2324 + x1882 * x2270 - x1882 * x2310 + x1882 * x2316 +
    x1882 * x962 + x2364 * x434 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1058 + x851) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[420] =
    20000.0 * sc[3] * x1957 + 140000.0 * sc[3] * x769 + sc[4] * x9058 +
    20000000.0 * sc[6] * x1475 - 20000000.0 * sc[6] * x1563 -
    24600000.0 * sc[6] * x1957 - 10000000.0 * sc[6] * x232 + x10176 + x10180 +
    x10184 + x10187 + x10191 + x10194 + x10200 + x1783 * x2317 + x1783 * x2322 -
    x1783 * x2324 + x1846 * x2324 + x1957 * x2363 + x1957 * x648 +
    x2270 * x232 - x2310 * x232 + x2316 * x232 + x232 * x962 + x2364 * x769 +
    x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1058 + x2058) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[443] =
    20000.0 * sc[3] * x1972 - 20000000.0 * sc[6] * x1469 +
    20000000.0 * sc[6] * x1565 - 10000000.0 * sc[6] * x1889 -
    24600000.0 * sc[6] * x1972 - 9260000.0 * sc[6] + sc[7] * x10040 + x10184 +
    x10190 + x10191 + x10194 + x1578 * x1893 - x1775 * x2317 - x1775 * x2322 +
    x1775 * x2324 + x1782 * x2317 + x1782 * x2322 - x1782 * x2324 +
    x1889 * x2270 - x1889 * x2310 + x1889 * x2316 + x1889 * x962 +
    x1972 * x2363 + x1972 * x648 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1085 + x1160) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[466] =
    90000.0 * sc[3] * x1318 + 20000.0 * sc[3] * x1649 +
    140000.0 * sc[3] * x1903 + sc[3] * x8297 - 90000.0 * sc[6] * x1304 -
    24000000.0 * sc[6] * x1318 + 20000000.0 * sc[6] * x1475 -
    20000000.0 * sc[6] * x1574 - 24600000.0 * sc[6] * x1649 +
    10000000.0 * sc[6] * x1843 + 24600000.0 * sc[6] * x1890 -
    10000000.0 * sc[6] * x1892 + x10176 + x10180 + x10184 + x10187 + x10191 +
    x10194 - x10232 + x1649 * x2363 + x1649 * x648 + x1843 * x2310 +
    x1846 * x2324 + x1847 * x2317 + x1847 * x2322 - x1847 * x2324 -
    x1890 * x2363 + x1892 * x2270 - x1892 * x2310 + x1892 * x2316 +
    x1892 * x962 + x1893 * x2362 + x1903 * x2364 + x9932 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (-x1058 + x1299) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[489] =
    -refC * sc[6] * x6072 + sc[1] * sc[3] * x5471 + 140000.0 * sc[3] * x1903 +
    20000000.0 * sc[6] * x1575 - 20000000.0 * sc[6] * x1580 -
    10000000.0 * sc[6] * x1895 + x10176 + x10180 + x10185 + x10187 + x10191 +
    x10197 + x10200 + x1846 * x2324 + x1881 * x2317 + x1881 * x2322 -
    x1881 * x2324 + x1895 * x2270 - x1895 * x2310 + x1895 * x2316 +
    x1895 * x962 + x1903 * x2364 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 - x2270 * x683 +
     x2310 * x683 - x2316 * x683 + x2317 * x680 + x2322 * x680 - x2324 * x680 -
     x683 * x962) *
      (x319 - x963) +
    (-10000000.0 * sc[6] * x684 + x2270 * x684 - x2310 * x684 + x2316 * x684 +
     x2317 * x681 + x2322 * x681 - x2324 * x681 + x684 * x962) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-140000.0 * sc[3] * x230 - x230 * x2364) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-90000.0 * sc[3] * x490 + 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-20000.0 * sc[3] * x596 + 24600000.0 * sc[6] * x596 - x1578 * x639 +
     x2317 * x682 + x2322 * x682 - x2324 * x682 - x2362 * x639 - x2363 * x596 -
     x596 * x648) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-140000.0 * sc[3] * x435 - 20000.0 * sc[3] * x558 +
     24600000.0 * sc[6] * x558 - 10000000.0 * sc[6] * x685 + x2270 * x685 -
     x2310 * x685 + x2316 * x685 - x2363 * x558 - x2364 * x435 - x558 * x648 +
     x685 * x962) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[7] =
    sc[6] * x422 - x2322 * x830 + x2322 * x951 - x648 * x909 + x648 * x935 -
    x726 * x962 + x8231 + x826 * x962 + x8893 +
    (-x2322 * x680 + x683 * x962) * (-x1476 + x973) +
    (-x2322 * x681 - x684 * x962) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[30] =
    -sc[7] * x50 - sc[7] * x755 + x10247 - x1061 * x962 - x1065 * x2322 +
    x1504 * x648 + x2322 * x971 - x523 * x648 + x8260 + x950 * x962 +
    (-x2322 * x680 + x683 * x962) * (x1636 - x1708) +
    (-x2322 * x681 - x684 * x962) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[53] =
    -sc[7] * x7441 + x10247 - x140 * x962 + x1556 * x962 + x1656 * x648 -
    x1664 * x2322 - x1721 * x648 + x2322 * x759 + x8287 +
    (-x2322 * x680 + x683 * x962) * (x1772 - x1794) +
    (-x2322 * x681 - x684 * x962) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[76] =
    -130000.0 * sc[7] * x8339 - 420000000.0 * sc[7] * x8342 + x10247 +
    x1627 * x962 - x1630 * x962 + x1666 * x2322 - x1672 * x2322 + x1762 * x648 -
    x1764 * x648 + x8344 + (-x2322 * x680 + x683 * x962) * (x1829 - x1853) +
    (-x2322 * x681 - x684 * x962) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[99] =
    4600000.0 * sc[4] * x25 * x8887 * exp(x8902) + sc[5] * x5779 +
    sc[6] * x7574 - sc[7] * x9109 - sc[7] * x9112 + x10247 + x1677 * x962 -
    x1699 * x962 + x1700 * x2322 - x1776 * x648 + x1798 * x648 - x2322 * x398 +
    x8396 + (-x2322 * x680 + x683 * x962) * (x1885 - x1899) +
    (-x2322 * x681 - x684 * x962) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[122] =
    -13800000.0 * refC * sc[7] * x8887 * x8908 +
    13800000.0 * ((sc[4]) * (sc[4])) * x8887 * exp(x8902) + sc[4] * x5779 +
    sc[6] * x9197 + sc[6] * x9199 +
    x10243 * (12.0 * x688 * x8889 + 1.68 * x688 * x8914) - x1668 * x962 +
    x1741 * x962 + x1760 * x2322 - x1768 * x2322 + x1779 * x648 - x1856 * x648 +
    x8426 - x8888 * (12.0 * x688 * x8889 + 1.68 * x688 * x8914) +
    428918.91891891899 * x8896 * x8911 - 428918.91891891899 * x8900 +
    (-x2322 * x680 + x683 * x962) * (x1954 - x1980) +
    (-x2322 * x681 - x684 * x962) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[145] = sc[0] * x422 + 1000000.0 * sc[12] * x1029 + sc[14] * x1166 +
           sc[15] * x10023 + sc[4] * x7574 + sc[5] * x9197 + sc[5] * x9199 +
           sc[9] * x385 + x10019 + x10247 + x1759 * x962 - x1769 * x962 +
           x1770 * x2322 - x1771 * x2322 + x1851 * x648 - x1878 * x648 + x8463 +
           (-x2322 * x680 + x683 * x962) * (x2022 - x2045) +
           (-x2322 * x681 - x684 * x962) *
             (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1665 + x1670 + (x678) * (x2022 - x2045) +
              (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1770 + x1771 + (x680) * (x2022 - x2045) +
              (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
              (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                        (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[168] = -300000.0 * sc[14] * x1350 - sc[19] * x10040 - sc[1] * x50 -
           sc[1] * x755 - sc[2] * x7441 - 130000.0 * sc[3] * x8339 -
           420000000.0 * sc[3] * x8342 - sc[4] * x9109 - sc[4] * x9112 -
           x10039 + x10247 + x1780 * x2322 - x1781 * x2322 + x1786 * x962 -
           x1898 * x648 + x1906 * x648 - x202 * x962 -
           12100.0 * x234 * exp(299.91713281961302 * invT) - x341 * x433 -
           8700.0 * x440 * exp(-490.13303249379697 * invT) -
           2300000.0 * x776 * x8887 * x8908 + x8491 +
           (-x2322 * x680 + x683 * x962) * (x2081 - x2099) +
           (-x2322 * x681 - x684 * x962) *
             (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1673 + x1674 + (x678) * (x2081 - x2099) +
              (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1780 + x1781 + (x680) * (x2081 - x2099) +
              (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
              (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                        (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[191] = -x10062 + x10247 + x1788 * x2322 - x1789 * x2322 + x1792 * x962 -
           x1832 * x962 + x1947 * x648 - x1958 * x648 + x8529 +
           (-x2322 * x680 + x683 * x962) * (x2123 - x2149) +
           (-x2322 * x681 - x684 * x962) *
             (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1680 + x1681 + (x678) * (x2123 - x2149) +
              (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1788 + x1789 + (x680) * (x2123 - x2149) +
              (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
              (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                        (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[214] = sc[6] * x385 + x1791 * x2322 - x1797 * x2322 + x1834 * x962 -
           x1848 * x962 + x1959 * x648 - x1964 * x648 + x8558 + x8893 +
           (-x2322 * x680 + x683 * x962) * (x2138 - x2197) +
           (-x2322 * x681 - x684 * x962) *
             (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1683 + x1689 + (x678) * (x2138 - x2197) +
              (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1791 + x1797 + (x680) * (x2138 - x2197) +
              (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
              (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                        (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[237] = x10243 * (3.0 * x688 * x8889 + 0.42 * x688 * x8914) + x1801 * x2322 -
           x1804 * x2322 - x1840 * x962 + x1861 * x962 + x1965 * x648 -
           x646 * x648 + x8592 -
           x8888 * (3.0 * x688 * x8889 + 0.42 * x688 * x8914) +
           107229.72972973 * x8896 * x8911 - 107229.72972973 * x8900 +
           3450000.0 * x8905 - 3450000.0 * x8910 +
           (-x2322 * x680 + x683 * x962) * (x2184 - x2274) +
           (-x2322 * x681 - x684 * x962) *
             (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1693 + x1694 + (x678) * (x2184 - x2274) +
              (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1801 + x1804 + (x680) * (x2184 - x2274) +
              (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
              (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                        (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[260] =
    -x1696 * x2322 + x1806 * x2322 + x1845 * x962 + x648 * x655 - x648 * x908 -
    x725 * x962 + x8619 + x8893 +
    (-x2322 * x680 + x683 * x962) * (x1555 - x2326) +
    (-x2322 * x681 - x684 * x962) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[283] = 1000000.0 * sc[6] * x1029 + x10247 + x1755 * x2322 - x1761 * x2322 +
           x1880 * x962 - x1887 * x962 + x1976 * x648 - x1977 * x648 + x8646 +
           (-x2322 * x680 + x683 * x962) * (x1021 - x2366) +
           (-x2322 * x681 - x684 * x962) *
             (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1701 + x1702 + (x678) * (x1021 - x2366) +
              (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1755 + x1761 + (x680) * (x1021 - x2366) +
              (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
              (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                        (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[306] = x10252 + x1767 * x2322 - x1833 * x2322 + x1894 * x962 -
           x1896 * x962 + x1979 * x648 - x1986 * x648 + x8674 +
           (-x2322 * x680 + x683 * x962) * (-x2354 + x742) +
           (-x2322 * x681 - x684 * x962) *
             (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1704 + x1706 + (x678) * (-x2354 + x742) +
              (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1767 + x1833 + (x680) * (-x2354 + x742) +
              (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
              (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                        (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[329] = sc[6] * x1166 - 300000.0 * sc[7] * x1350 + x10252 + x1835 * x2322 -
           x1836 * x2322 + x1894 * x962 - x1897 * x962 + x1979 * x648 -
           x1992 * x648 + x8698 +
           (-x2322 * x680 + x683 * x962) * (-x1174 + x1231) +
           (-x2322 * x681 - x684 * x962) *
             (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
              (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
              (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
              (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                        (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[352] =
    sc[6] * x10023 + x10252 + x1838 * x2322 - x1839 * x2322 - x1841 * x962 -
    x1886 * x648 + x1904 * x962 + x1999 * x648 + x8724 +
    (-x2322 * x680 + x683 * x962) * (-x116 + x81) +
    (-x2322 * x681 - x684 * x962) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[375] = x10257 - x169 * x962 - x1849 * x2322 +
           (-x2322 * x680 + x683 * x962) * (-x1625 + x848) +
           (-x2322 * x681 - x684 * x962) *
             (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1730 + x1731 + (x678) * (-x1625 + x848) +
              (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1846 + x1849 + (x680) * (-x1625 + x848) +
              (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
              (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                        (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[398] =
    x10257 - x1852 * x2322 - x1882 * x962 +
    (-x2322 * x680 + x683 * x962) * (-x1058 + x851) +
    (-x2322 * x681 - x684 * x962) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[421] = 300000.0 * sc[6] * x1957 + x10256 - x1783 * x2322 - x1957 * x648 -
           x232 * x962 + x8762 +
           (-x2322 * x680 + x683 * x962) * (-x1058 + x2058) +
           (-x2322 * x681 - x684 * x962) *
             (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (x1661 - x1730 + (x678) * (-x1058 + x2058) +
              (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (x1783 - x1846 + (x680) * (-x1058 + x2058) +
              (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
              (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                        (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[444] = 300000.0 * sc[6] * x1972 - sc[7] * x10040 + x10247 + x1775 * x2322 -
           x1782 * x2322 + x1843 * x962 - x1889 * x962 + x1890 * x648 -
           x1972 * x648 + x8762 +
           (-x2322 * x680 + x683 * x962) * (-x1085 + x1160) +
           (-x2322 * x681 - x684 * x962) *
             (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
              (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
              (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
              (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                        (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[467] = 300000.0 * sc[6] * x1649 + x10232 + x10256 - x1649 * x648 -
           x1847 * x2322 - x1892 * x962 + x8762 +
           (-x2322 * x680 + x683 * x962) * (-x1058 + x1299) +
           (-x2322 * x681 - x684 * x962) *
             (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
           (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
             (-x1730 + x865 + (x678) * (-x1058 + x1299) +
              (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
           (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
             (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
              (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
              (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                        (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[490] =
    x10257 - x1881 * x2322 - x1895 * x962 +
    (-x2322 * x680 + x683 * x962) * (x319 - x963) +
    (-x2322 * x681 - x684 * x962) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-300000.0 * sc[6] * x596 - x2322 * x682 + x596 * x648) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-300000.0 * sc[6] * x558 + x558 * x648 - x685 * x962) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[8] =
    90000000.0 * sc[1] * x1235 + 30000000.0 * sc[1] * x124 * x726 -
    30000000.0 * sc[1] * x124 * x826 + 48000000.0 * sc[2] * x726 -
    48000000.0 * sc[2] * x826 - 11000000.0 * sc[8] * x1240 +
    30000000.0 * sc[8] * x1476 + 40000000.0 * sc[8] * x649 -
    40000000.0 * sc[8] * x651 - sc[8] * x666 - 392000.0 * sc[8] * x726 +
    392000.0 * sc[8] * x826 - 8480000.0 * sc[8] * x830 +
    8480000.0 * sc[8] * x951 - 30000000.0 * sc[8] * x973 + x1002 * x1240 +
    x1016 * x2133 - x1016 * x698 - x1016 * x786 + x10281 + x1235 * x635 +
    x1240 * x640 + x1527 * x1884 - x154 * x830 + x154 * x951 - x1551 * x830 +
    x1551 * x951 + x1884 * x2362 - x2078 * x830 + x2078 * x951 - x2090 * x649 +
    x2090 * x651 - x2128 * x726 + x2128 * x826 - x2133 * x988 - x2139 * x909 +
    x2139 * x935 + x316 - x649 * x694 + x651 * x694 + x698 * x988 -
    x719 * x726 + x719 * x826 + x726 * x735 + x729 - x735 * x826 + x786 * x988 +
    x8928 + x897 * x909 - x897 * x935 + x903 * x909 - x903 * x935 -
    x906 * x909 + x906 * x935 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1476 + x973) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[31] =
    sc[12] * x5500 + 40000000.0 * sc[14] * x1402 + sc[14] * x5488 -
    sc[17] * x1358 * x936 + sc[17] * x827 + sc[19] * x799 +
    30000000.0 * sc[1] * x1061 * x124 - 30000000.0 * sc[1] * x124 * x950 +
    90000000.0 * sc[1] * x211 + sc[20] * x1051 + 48000000.0 * sc[2] * x1061 -
    48000000.0 * sc[2] * x950 - 392000.0 * sc[8] * x1061 -
    8480000.0 * sc[8] * x1065 - 30000000.0 * sc[8] * x1636 +
    30000000.0 * sc[8] * x1708 - 11000000.0 * sc[8] * x476 +
    40000000.0 * sc[8] * x857 + 392000.0 * sc[8] * x950 -
    40000000.0 * sc[8] * x964 + 8480000.0 * sc[8] * x971 + x1002 * x476 -
    90000000.0 * x1040 + x10400 + x10421 - x1061 * x2128 - x1061 * x719 +
    x1061 * x735 - x1065 * x154 - x1065 * x1551 - x1065 * x2078 +
    x1073 * x2133 - x1073 * x698 - x1073 * x786 + 30000000.0 * x124 * x234 -
    90000000.0 * x1241 + x14 + x1422 * x1527 + x1422 * x2362 + x1504 * x2139 -
    x1504 * x897 - x1504 * x903 + x1504 * x906 + x154 * x971 + x1551 * x971 +
    x2078 * x971 + x2089 * x25 * x85 - x2090 * x857 + x2090 * x964 +
    x211 * x635 + x2128 * x950 - x2133 * x985 - x2139 * x523 +
    9980000.0 * x2140 * x440 + x476 * x640 + x523 * x897 + x523 * x903 -
    x523 * x906 + x5521 + x604 * (-x1319 - x581) - x694 * x857 + x694 * x964 +
    x698 * x985 + x719 * x950 - x735 * x950 + x786 * x985 + x8976 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1636 - x1708) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[54] =
    -70000000.0 * sc[0] * x315 + 70000000.0 * sc[0] * x318 +
    19.2 * sc[14] * exp(x2273) + 30000000.0 * sc[1] * x124 * x140 -
    30000000.0 * sc[1] * x124 * x1556 + 90000000.0 * sc[1] * x224 +
    sc[20] * x5667 - 392000.0 * sc[8] * x140 + 392000.0 * sc[8] * x1556 -
    11000000.0 * sc[8] * x1654 - 8480000.0 * sc[8] * x1664 -
    30000000.0 * sc[8] * x1772 + 30000000.0 * sc[8] * x1794 +
    8480000.0 * sc[8] * x759 + 40000000.0 * sc[8] * x965 -
    40000000.0 * sc[8] * x972 - 84300000.0 * sc[8] + x1002 * x1654 + x10421 +
    x10445 - x140 * x2128 - x140 * x719 + x140 * x735 + x1527 * x1678 -
    x154 * x1664 + x154 * x759 - x1551 * x1664 + x1551 * x759 + x1556 * x2128 +
    x1556 * x719 - x1556 * x735 + x1654 * x640 + x1656 * x2139 - x1656 * x897 -
    x1656 * x903 + x1656 * x906 - x1664 * x2078 + x1678 * x2362 -
    x1721 * x2139 + x1721 * x897 + x1721 * x903 - x1721 * x906 + x182 * x549 -
    x2036 * x965 + x2036 * x972 + x2078 * x759 - x2090 * x965 + x2090 * x972 +
    x2133 * x315 - x2133 * x318 + x224 * x635 - x315 * x698 - x315 * x786 +
    x318 * x698 + x318 * x786 + x5669 - x694 * x965 + x694 * x972 + x9016 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1772 - x1794) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[77] =
    -70000000.0 * sc[0] * x1416 + 70000000.0 * sc[0] * x883 +
    90000000.0 * sc[1] * x1056 - 30000000.0 * sc[1] * x124 * x1627 +
    30000000.0 * sc[1] * x124 * x1630 - 48000000.0 * sc[2] * x1627 +
    48000000.0 * sc[2] * x1630 + 392000.0 * sc[8] * x1627 -
    392000.0 * sc[8] * x1630 + 8480000.0 * sc[8] * x1666 -
    8480000.0 * sc[8] * x1672 - 11000000.0 * sc[8] * x1733 -
    30000000.0 * sc[8] * x1829 + 30000000.0 * sc[8] * x1853 - sc[8] * x7546 -
    sc[8] * x8357 + 40000000.0 * sc[8] * x974 - 40000000.0 * sc[8] * x976 +
    sc[9] * x8294 + x1002 * x1733 + x10421 + x10467 + x1056 * x635 +
    x1416 * x2133 - x1416 * x698 - x1416 * x786 + x1527 * x1765 + x154 * x1666 -
    x154 * x1672 + x1551 * x1666 - x1551 * x1672 + x1627 * x2128 +
    x1627 * x719 - x1627 * x735 - x1630 * x2128 - x1630 * x719 + x1630 * x735 +
    x1666 * x2078 - x1672 * x2078 + x1733 * x640 + x1762 * x2139 -
    x1762 * x897 - x1762 * x903 + x1762 * x906 - x1764 * x2139 + x1764 * x897 +
    x1764 * x903 - x1764 * x906 + x1765 * x2362 - x2036 * x974 + x2036 * x976 -
    x2090 * x974 + x2090 * x976 - x2133 * x883 - x694 * x974 + x694 * x976 +
    x698 * x883 + x786 * x883 + x9057 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1829 - x1853) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[100] =
    -70000000.0 * sc[0] * x1645 + 70000000.0 * sc[0] * x1659 + sc[12] * x8391 +
    sc[13] * x9124 - 30000000.0 * sc[1] * x124 * x1677 +
    30000000.0 * sc[1] * x124 * x1699 + 90000000.0 * sc[1] * x276 -
    48000000.0 * sc[2] * x1677 + 48000000.0 * sc[2] * x1699 +
    392000.0 * sc[8] * x1677 - 392000.0 * sc[8] * x1699 +
    8480000.0 * sc[8] * x1700 - 30000000.0 * sc[8] * x1885 +
    30000000.0 * sc[8] * x1899 - 11000000.0 * sc[8] * x219 -
    8480000.0 * sc[8] * x398 + 40000000.0 * sc[8] * x977 -
    40000000.0 * sc[8] * x982 + x1002 * x219 + x10421 + x10490 + x1527 * x1879 +
    x154 * x1700 - x154 * x398 + x1551 * x1700 - x1551 * x398 + x1645 * x2133 -
    x1645 * x698 - x1645 * x786 - x1659 * x2133 + x1659 * x698 + x1659 * x786 +
    x1677 * x2128 + x1677 * x719 - x1677 * x735 - x1699 * x2128 - x1699 * x719 +
    x1699 * x735 + x1700 * x2078 - x1776 * x2139 + x1776 * x897 + x1776 * x903 -
    x1776 * x906 + x1798 * x2139 - x1798 * x897 - x1798 * x903 + x1798 * x906 +
    13400000.0 * x182 * x609 + x1879 * x2362 - x2036 * x977 + x2036 * x982 -
    x2078 * x398 - x2090 * x977 + x2090 * x982 + x219 * x640 + x276 * x635 -
    x694 * x977 + x694 * x982 + x9065 + x9161 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1885 - x1899) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[123] =
    30000000.0 * sc[1] * x124 * x1668 - 30000000.0 * sc[1] * x124 * x1741 +
    90000000.0 * sc[1] * x1793 + 48000000.0 * sc[2] * x1668 -
    48000000.0 * sc[2] * x1741 - 40000000.0 * sc[8] * x1010 +
    sc[8] * x10287 * x119 * x359 * x433 - 392000.0 * sc[8] * x1668 +
    392000.0 * sc[8] * x1741 + 8480000.0 * sc[8] * x1760 -
    8480000.0 * sc[8] * x1768 - 11000000.0 * sc[8] * x1946 -
    30000000.0 * sc[8] * x1954 + 30000000.0 * sc[8] * x1980 +
    sc[8] * x70 * x74 - sc[8] * x9162 + 40000000.0 * sc[8] * x987 +
    x1002 * x1946 + x1010 * x2090 + x1010 * x694 -
    2.2e+36 * x10287 * x1287 * x25 + 1.77333962264151e+67 * x10308 * x10310 -
    1.77333962264151e+67 * x10308 * x10362 +
    x10309 * x10312 * (1.68 * x10314 + 12.0 * x10316) -
    x10309 * x10328 * (1.68 * x10314 + 12.0 * x10316) -
    4.375896e+86 * x10344 * x1539 + 4.375896e+86 * x10344 * x234 * x722 -
    2.124e+39 * x10359 + 2.124e+39 * x10365 + x10377 - 2.562e+47 * x10514 +
    x10530 + 2.4576e+21 * x1155 * x172 + 1.32e+37 * x1287 -
    1.61333333333333e+66 * x1523 * x356 + x1527 * x1888 + x154 * x1760 -
    x154 * x1768 + x1551 * x1760 - x1551 * x1768 + x1660 * x2133 -
    x1660 * x698 - x1660 * x786 - x1662 * x2133 + x1662 * x698 + x1662 * x786 -
    x1668 * x2128 - x1668 * x719 + x1668 * x735 - 2.4576e+21 * x172 * x1883 +
    x1741 * x2128 + x1741 * x719 - x1741 * x735 + x1760 * x2078 -
    x1768 * x2078 + x1779 * x2139 - x1779 * x897 - x1779 * x903 + x1779 * x906 +
    x1793 * x635 - x1856 * x2139 + x1856 * x897 + x1856 * x903 - x1856 * x906 +
    x1888 * x2362 + x1946 * x640 - x2090 * x987 - 4.27e+46 * x25 * x51 * x74 +
    x298 * x5923 + 1.61333333333333e+66 * x362 + 2.562e+47 * x51 -
    x5558 * x5923 - 1.92e+16 * x585 + x6020 - x694 * x987 - 1.32e+37 * x752 +
    x9230 + 1.92e+16 * x952 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1954 - x1980) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[146] =
    -70000000.0 * sc[0] * x1665 + 70000000.0 * sc[0] * x1670 -
    30000000.0 * sc[1] * x124 * x1759 + 30000000.0 * sc[1] * x124 * x1769 +
    90000000.0 * sc[1] * x1842 + 40000000.0 * sc[8] * x1012 -
    40000000.0 * sc[8] * x1014 + 392000.0 * sc[8] * x1759 -
    392000.0 * sc[8] * x1769 + 8480000.0 * sc[8] * x1770 -
    8480000.0 * sc[8] * x1771 - 11000000.0 * sc[8] * x1985 -
    30000000.0 * sc[8] * x2022 + 30000000.0 * sc[8] * x2045 -
    14400000.0 * sc[8] + sc[9] * x385 + x1002 * x1985 - x1012 * x2036 -
    x1012 * x2090 - x1012 * x694 + x1014 * x2036 + x1014 * x2090 +
    x1014 * x694 + x10421 + x10553 + x1419 * x1527 + x1419 * x2362 +
    x154 * x1770 - x154 * x1771 + x1551 * x1770 - x1551 * x1771 +
    x1665 * x2133 - x1665 * x698 - x1665 * x786 - x1670 * x2133 + x1670 * x698 +
    x1670 * x786 + x1759 * x2128 + x1759 * x719 - x1759 * x735 - x1769 * x2128 -
    x1769 * x719 + x1769 * x735 + x1770 * x2078 - x1771 * x2078 + x1842 * x635 +
    x1851 * x2139 - x1851 * x897 - x1851 * x903 + x1851 * x906 - x1878 * x2139 +
    x1878 * x897 + x1878 * x903 - x1878 * x906 + x1985 * x640 + x6067 + x9282 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x2022 - x2045) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[169] =
    -70000000.0 * sc[0] * x1673 + 70000000.0 * sc[0] * x1674 -
    30000000.0 * sc[1] * x124 * x1786 + 30000000.0 * sc[1] * x124 * x202 +
    32000000.0 * sc[1] * x1893 + 90000000.0 * sc[1] * x1903 +
    40000000.0 * sc[8] * x1015 - 40000000.0 * sc[8] * x1019 +
    8480000.0 * sc[8] * x1780 - 8480000.0 * sc[8] * x1781 +
    392000.0 * sc[8] * x1786 - 392000.0 * sc[8] * x202 -
    30000000.0 * sc[8] * x2081 + 30000000.0 * sc[8] * x2099 + x1002 * x1995 -
    x10039 - x1015 * x2036 - x1015 * x2090 - x1015 * x2323 - x1015 * x694 +
    x1019 * x2036 + x1019 * x2090 + x1019 * x2323 + x1019 * x694 + x10576 +
    x10579 + x1527 * x1893 + x154 * x1780 - x154 * x1781 + x1551 * x1780 -
    x1551 * x1781 + x1673 * x2133 - x1673 * x2358 - x1673 * x698 -
    x1673 * x786 - x1674 * x2133 + x1674 * x2358 + x1674 * x698 + x1674 * x786 +
    x1780 * x2078 - x1781 * x2078 + x1786 * x2128 + x1786 * x719 -
    x1786 * x735 + x1893 * x2362 - x1898 * x2139 + x1898 * x897 + x1898 * x903 -
    x1898 * x906 + x1903 * x635 + x1906 * x2139 - x1906 * x897 - x1906 * x903 +
    x1906 * x906 - x202 * x2128 - x202 * x719 + x202 * x735 + x5532 + x5557 +
    x6149 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x2081 - x2099) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[192] =
    -sc[0] * x666 - sc[15] * x10614 - 50000000.0 * sc[16] -
    sc[17] * x1172 * x936 - sc[19] * x10583 + 90000000.0 * sc[1] * x1238 -
    30000000.0 * sc[1] * x124 * x1792 + 30000000.0 * sc[1] * x124 * x1832 -
    sc[20] * x10586 - 48000000.0 * sc[2] * x1792 + 48000000.0 * sc[2] * x1832 -
    84300000.0 * sc[2] - sc[3] * x7546 - sc[3] * x8357 - sc[5] * x9162 -
    14400000.0 * sc[6] + 40000000.0 * sc[8] * x1022 -
    40000000.0 * sc[8] * x1025 -
    7.08e+38 * sc[8] * x10323 * x10325 * x25 * exp(x10319) +
    8480000.0 * sc[8] * x1788 - 8480000.0 * sc[8] * x1789 +
    392000.0 * sc[8] * x1792 - 392000.0 * sc[8] * x1832 -
    30000000.0 * sc[8] * x2123 + 30000000.0 * sc[8] * x2149 -
    11000000.0 * sc[8] * x453 -
    19960000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * logT) -
    9.84 * sc[8] * exp(-g_RT_qss[1] - x1392 + x537) -
    64000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1392) -
    x0 * x10375 - x10062 - x1022 * x2090 - x1022 * x694 + x1025 * x2090 +
    x1025 * x694 + x10421 + x10623 + x10628 + x10630 - x119 * x359 * x433 +
    11000000.0 * x1319 - x1385 * x2089 * x776 - 30000000.0 * x1473 +
    x1527 * x1727 + x154 * x1788 - x154 * x1789 + x1551 * x1788 -
    x1551 * x1789 + x1680 * x2133 - x1680 * x698 - x1680 * x786 -
    x1681 * x2133 + x1681 * x698 + x1681 * x786 + x1727 * x2362 +
    x1788 * x2078 - x1789 * x2078 + x1792 * x2128 + x1792 * x719 -
    x1832 * x2128 - x1832 * x719 + x1947 * x2139 - x1947 * x897 - x1947 * x903 +
    x1947 * x906 - x1958 * x2139 + x1958 * x897 + x1958 * x903 - x1958 * x906 -
    x2127 * x234 - 12000000.0 * x2130 * x593 - x2136 * x440 - x2285 * x433 -
    392000.0 * x234 - 90000000.0 * x346 * x433 - 8480000.0 * x433 -
    40000000.0 * x440 * x491 + x453 * x640 + 11000000.0 * x581 -
    40000000.0 * x594 + x6276 - x70 + x9382 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x2123 - x2149) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[215] =
    8480000.0 * sc[10] * x1244 + 392000.0 * sc[13] * x1192 + sc[19] * x10631 -
    30000000.0 * sc[1] * x124 * x1834 + 30000000.0 * sc[1] * x124 * x1848 +
    90000000.0 * sc[1] * x792 + 11000000.0 * sc[20] * x1315 -
    48000000.0 * sc[2] * x1834 + 48000000.0 * sc[2] * x1848 + sc[3] * x8294 +
    sc[6] * x385 + 40000000.0 * sc[8] * x1049 - 40000000.0 * sc[8] * x1053 +
    8480000.0 * sc[8] * x1791 - 8480000.0 * sc[8] * x1797 +
    392000.0 * sc[8] * x1834 - 392000.0 * sc[8] * x1848 -
    11000000.0 * sc[8] * x2020 - 30000000.0 * sc[8] * x2138 +
    30000000.0 * sc[8] * x2197 + x1002 * x2020 - x1049 * x2090 - x1049 * x694 +
    x1053 * x2090 + x1053 * x694 + x10662 + x1127 + x1527 * x637 +
    x154 * x1791 - x154 * x1797 + x1551 * x1791 - x1551 * x1797 +
    x1683 * x2133 - x1683 * x698 - x1683 * x786 - x1689 * x2133 + x1689 * x698 +
    x1689 * x786 + x1791 * x2078 - x1797 * x2078 + x1834 * x2128 +
    x1834 * x719 - x1834 * x735 - x1848 * x2128 - x1848 * x719 + x1848 * x735 +
    x1959 * x2139 - x1959 * x897 - x1959 * x903 + x1959 * x906 - x1964 * x2139 +
    x1964 * x897 + x1964 * x903 - x1964 * x906 + x2020 * x640 +
    32000000.0 * x2130 * x593 + x234 * x412 + x2362 * x637 + x316 +
    x440 * x819 + 4.92 * x594 * exp(x537) + x635 * x792 + x6356 + x9383 +
    x9421 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x2138 - x2197) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[238] =
    refC * x2021 * x998 + sc[14] * x10666 + 30000000.0 * sc[1] * x124 * x1840 -
    30000000.0 * sc[1] * x124 * x1861 + 90000000.0 * sc[1] * x793 +
    40000000.0 * sc[8] * x1066 - 40000000.0 * sc[8] * x1068 +
    8480000.0 * sc[8] * x1801 - 8480000.0 * sc[8] * x1804 -
    392000.0 * sc[8] * x1840 + 392000.0 * sc[8] * x1861 -
    11000000.0 * sc[8] * x2021 - 30000000.0 * sc[8] * x2184 +
    30000000.0 * sc[8] * x2274 + 8480000.0 * sc[9] * x1244 + x1003 * x1527 +
    x1003 * x2362 - x10291 * x10674 + x10300 * x10674 +
    4.4333490566037699e+66 * x10308 * x10310 -
    4.4333490566037699e+66 * x10308 * x10362 +
    x10309 * x10312 * (0.42 * x10314 + 3.0 * x10316) -
    x10309 * x10328 * (0.42 * x10314 + 3.0 * x10316) -
    1.093974e+86 * x10344 * x1539 + 1.093974e+86 * x10346 - 5.31e+38 * x10359 +
    5.31e+38 * x10365 + x10368 * (3.0 * x10348 * x688 + 0.42 * x10349 * x688) +
    x10377 - 6.405e+46 * x10514 - x1066 * x2090 - x1066 * x694 + x1068 * x2090 +
    x1068 * x694 + x10710 + 6.144e+20 * x1155 * x172 + 3.3e+36 * x1287 -
    4.0333333333333298e+65 * x1523 * x356 + x154 * x1801 - x154 * x1804 +
    x1551 * x1801 - x1551 * x1804 + x1693 * x2133 - x1693 * x698 -
    x1693 * x786 - x1694 * x2133 + x1694 * x698 + x1694 * x786 -
    6.144e+20 * x172 * x1883 + x1801 * x2078 - x1804 * x2078 - x1840 * x2128 -
    x1840 * x719 + x1840 * x735 + x1861 * x2128 + x1861 * x719 - x1861 * x735 +
    x1965 * x2139 - x1965 * x897 - x1965 * x903 + x1965 * x906 + x2021 * x640 -
    x2139 * x646 + x298 * x6383 + 4.0333333333333298e+65 * x356 * x433 * x754 +
    6.405e+46 * x51 - x5558 * x6383 - 4800000000000000.0 * x585 + x6240 +
    x646 * x897 + x646 * x903 - x646 * x906 + x6506 -
    x701 * (3.0 * x10348 * x688 + 0.42 * x10349 * x688) - 3.3e+36 * x752 +
    x9476 + 4800000000000000.0 * x952 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x2184 - x2274) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[261] =
    -30000000.0 * sc[1] * x124 * x1845 + 30000000.0 * sc[1] * x124 * x725 +
    90000000.0 * sc[1] * x792 - 48000000.0 * sc[2] * x1845 +
    48000000.0 * sc[2] * x725 - 40000000.0 * sc[8] * x1071 -
    30000000.0 * sc[8] * x1555 - 8480000.0 * sc[8] * x1696 +
    8480000.0 * sc[8] * x1806 + 392000.0 * sc[8] * x1845 +
    30000000.0 * sc[8] * x2326 + 40000000.0 * sc[8] * x661 -
    392000.0 * sc[8] * x725 - 11000000.0 * sc[8] * x930 + x1002 * x930 +
    x1071 * x2090 + x1071 * x694 + x10733 + x1527 * x637 - x154 * x1696 +
    x154 * x1806 - x1551 * x1696 + x1551 * x1806 + x1695 * x2133 -
    x1695 * x698 - x1695 * x786 - x1696 * x2078 - x1697 * x2133 + x1697 * x698 +
    x1697 * x786 + x1806 * x2078 + x1845 * x2128 + x1845 * x719 - x1845 * x735 -
    x2090 * x661 - x2128 * x725 + x2139 * x655 - x2139 * x908 + x2362 * x637 +
    x316 + x635 * x792 + x640 * x930 - x655 * x897 - x655 * x903 + x655 * x906 -
    x661 * x694 - x719 * x725 + x725 * x735 + x761 + x897 * x908 + x903 * x908 -
    x906 * x908 + x9513 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1555 - x2326) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[284] =
    -70000000.0 * sc[0] * x1701 + 70000000.0 * sc[0] * x1702 -
    30000000.0 * sc[1] * x124 * x1880 + 30000000.0 * sc[1] * x124 * x1887 +
    90000000.0 * sc[1] * x228 + sc[1] * x5500 - 48000000.0 * sc[2] * x1880 +
    48000000.0 * sc[2] * x1887 + sc[4] * x8391 - 30000000.0 * sc[8] * x1021 +
    40000000.0 * sc[8] * x1072 - 40000000.0 * sc[8] * x1076 -
    11000000.0 * sc[8] * x1502 + 8480000.0 * sc[8] * x1755 -
    8480000.0 * sc[8] * x1761 + 392000.0 * sc[8] * x1880 -
    392000.0 * sc[8] * x1887 + 30000000.0 * sc[8] * x2366 + x1002 * x1502 +
    x10421 - x1072 * x2036 - x1072 * x2090 - x1072 * x694 + x10758 +
    x1076 * x2036 + x1076 * x2090 + x1076 * x694 + x1502 * x640 +
    x1527 * x1572 + x154 * x1755 - x154 * x1761 + x1551 * x1755 -
    x1551 * x1761 + x1572 * x2362 + x1701 * x2133 - x1701 * x698 -
    x1701 * x786 - x1702 * x2133 + x1702 * x698 + x1702 * x786 + x1755 * x2078 -
    x1761 * x2078 + x1880 * x2128 + x1880 * x719 - x1880 * x735 -
    x1887 * x2128 - x1887 * x719 + x1887 * x735 + x1976 * x2139 - x1976 * x897 -
    x1976 * x903 + x1976 * x906 - x1977 * x2139 + x1977 * x897 + x1977 * x903 -
    x1977 * x906 + x228 * x635 + x9548 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x1021 - x2366) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[307] =
    30000000.0 * sc[1] * x124 * x1896 - 48000000.0 * sc[2] * x1894 +
    48000000.0 * sc[2] * x1896 + sc[4] * x9124 + 40000000.0 * sc[8] * x1077 -
    40000000.0 * sc[8] * x1081 + 8480000.0 * sc[8] * x1767 -
    8480000.0 * sc[8] * x1833 - 392000.0 * sc[8] * x1896 +
    30000000.0 * sc[8] * x2354 - 30000000.0 * sc[8] * x742 +
    392000.0 * sc[9] * x1192 + x1002 * x1995 + x10579 - x10759 - x1077 * x2090 -
    x1077 * x694 + x10782 + x1081 * x2090 + x1081 * x694 + x1205 +
    x154 * x1767 - x154 * x1833 + x1551 * x1767 - x1551 * x1833 +
    x1704 * x2133 - x1704 * x698 - x1704 * x786 - x1706 * x2133 + x1706 * x698 +
    x1706 * x786 + x173 * x635 + x1767 * x2078 - x1833 * x2078 - x1894 * x735 -
    x1896 * x2128 - x1896 * x719 + x1896 * x735 - x1979 * x897 - x1986 * x2139 +
    x1986 * x897 + x1986 * x903 - x1986 * x906 + x2084 + x9600 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x2354 + x742) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[330] =
    -70000000.0 * sc[0] * x1707 + 70000000.0 * sc[0] * x1709 + sc[10] * x10666 +
    30000000.0 * sc[1] * x124 * x1897 + 40000000.0 * sc[1] * x1402 +
    sc[1] * x5488 + 19.2 * sc[2] * exp(x2273) + 40000000.0 * sc[8] * x1083 -
    40000000.0 * sc[8] * x1089 + 30000000.0 * sc[8] * x1174 -
    30000000.0 * sc[8] * x1231 + 8480000.0 * sc[8] * x1835 -
    8480000.0 * sc[8] * x1836 - 392000.0 * sc[8] * x1897 -
    11000000.0 * sc[8] * x488 + x10283 + x10377 + x10828 - x1083 * x2036 -
    x1083 * x2090 - x1083 * x694 + x1086 + x1089 * x2036 + x1089 * x2090 +
    x1089 * x694 + x154 * x1835 - x154 * x1836 + x1551 * x1835 - x1551 * x1836 +
    x1707 * x2133 - x1707 * x698 - x1707 * x786 - x1709 * x2133 + x1709 * x698 +
    x1709 * x786 + x173 * x635 + x1835 * x2078 - x1836 * x2078 - x1897 * x2128 -
    x1897 * x719 - x1979 * x897 - x1992 * x2139 + x1992 * x897 + x1992 * x903 -
    x1992 * x906 + x2084 + x2148 + x488 * x640 + x9644 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1174 + x1231) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[353] =
    -70000000.0 * sc[0] * x1711 + 70000000.0 * sc[0] * x1719 +
    30000000.0 * sc[1] * x124 * x1841 - 30000000.0 * sc[1] * x124 * x1904 +
    48000000.0 * sc[2] * x1841 - 48000000.0 * sc[2] * x1904 - sc[8] * x10614 +
    40000000.0 * sc[8] * x1091 + 30000000.0 * sc[8] * x116 -
    40000000.0 * sc[8] * x1366 - 11000000.0 * sc[8] * x1716 +
    8480000.0 * sc[8] * x1838 - 8480000.0 * sc[8] * x1839 -
    392000.0 * sc[8] * x1841 + 392000.0 * sc[8] * x1904 -
    30000000.0 * sc[8] * x81 + x1002 * x1716 +
    3.54e+38 * x10320 * x10323 * x10325 * x776 + x10377 + x10854 + x1086 -
    x1091 * x2036 - x1091 * x2090 - x1091 * x694 + x1366 * x2036 +
    x1366 * x2090 + x1366 * x694 + x154 * x1838 - x154 * x1839 + x1551 * x1838 -
    x1551 * x1839 + x1711 * x2133 - x1711 * x698 - x1711 * x786 + x1716 * x640 -
    x1719 * x2133 + x1719 * x698 + x1719 * x786 + x173 * x635 + x1838 * x2078 -
    x1839 * x2078 - x1841 * x2128 - x1841 * x719 + x1841 * x735 -
    x1886 * x2139 + x1886 * x897 + x1886 * x903 - x1886 * x906 + x1904 * x2128 +
    x1904 * x719 - x1904 * x735 + x1999 * x2139 - x1999 * x897 - x1999 * x903 +
    x1999 * x906 + 40000000.0 * x593 * exp(276.769166192596 * invT) + x777 +
    x9680 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x116 + x81) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[376] =
    30000000.0 * sc[1] * x124 * x169 + 48000000.0 * sc[2] * x169 +
    16040000.0 * sc[2] * x1956 + 40000000.0 * sc[8] * x1367 -
    40000000.0 * sc[8] * x1472 + 30000000.0 * sc[8] * x1625 -
    392000.0 * sc[8] * x169 - 8480000.0 * sc[8] * x1849 -
    30000000.0 * sc[8] * x848 - 50000000.0 * sc[8] + x10875 + x10888 + x10891 -
    x1367 * x2090 - x1367 * x2323 - x1367 * x694 + x138 + x1472 * x2090 +
    x1472 * x2323 + x1472 * x694 - x154 * x1849 - x1551 * x1849 - x169 * x2128 -
    x169 * x719 + x169 * x735 - x1730 * x2358 - x1731 * x2133 + x1731 * x2358 +
    x1731 * x698 + x1731 * x786 - x1849 * x2078 + x1849 * x748 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1625 + x848) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[399] =
    70000000.0 * sc[0] * x1739 + 30000000.0 * sc[1] * x124 * x1882 -
    sc[1] * x1358 * x936 + 90000000.0 * sc[1] * x434 + sc[1] * x827 +
    48000000.0 * sc[2] * x1882 + 16040000.0 * sc[2] * x1956 -
    8480000.0 * sc[8] * x1852 - 392000.0 * sc[8] * x1882 -
    30000000.0 * sc[8] * x851 - 40000000.0 * sc[8] * x854 + x10579 + x107 +
    x10874 + x10888 + x10902 - x154 * x1852 - x1551 * x1852 - x1739 * x2133 +
    x1739 * x2358 + x1739 * x698 + x1739 * x786 - x1852 * x2078 + x1852 * x748 -
    x1882 * x2128 - x1882 * x719 + x1882 * x735 + x2036 * x854 + x2090 * x854 +
    x2095 + x2323 * x854 + x434 * x635 + x694 * x854 + x9760 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1058 + x851) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[422] =
    70000000.0 * sc[0] * x1661 + 30000000.0 * sc[1] * x124 * x232 +
    90000000.0 * sc[1] * x769 + 16040000.0 * sc[2] * x1957 +
    48000000.0 * sc[2] * x232 + 24000000.0 * sc[6] * x1957 -
    40000000.0 * sc[8] * x1563 - 8480000.0 * sc[8] * x1783 -
    30000000.0 * sc[8] * x2058 - 392000.0 * sc[8] * x232 + x10579 + x107 +
    x10874 + x10878 + x10883 + x10886 + x10902 + x119 * x1691 - x154 * x1783 -
    x1551 * x1783 + x1563 * x2036 + x1563 * x2090 + x1563 * x2323 +
    x1563 * x694 - x1661 * x2133 + x1661 * x2358 + x1661 * x698 + x1661 * x786 -
    x1783 * x2078 + x1783 * x748 - x1957 * x2139 + x1957 * x897 + x1957 * x903 -
    x1957 * x906 + x2095 - x2128 * x232 - x232 * x719 + x232 * x735 +
    x635 * x769 + x9760 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1058 + x2058) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[445] =
    -70000000.0 * sc[0] * x1671 + 70000000.0 * sc[0] * x1745 +
    30000000.0 * sc[1] * x124 * x1889 + 32000000.0 * sc[1] * x1893 +
    sc[1] * x799 + 48000000.0 * sc[2] * x1889 - sc[8] * x10583 +
    30000000.0 * sc[8] * x1085 - 30000000.0 * sc[8] * x1160 -
    40000000.0 * sc[8] * x1469 + 40000000.0 * sc[8] * x1565 +
    8480000.0 * sc[8] * x1775 - 8480000.0 * sc[8] * x1782 -
    392000.0 * sc[8] * x1889 + sc[9] * x10631 + x0 * x10372 + x10875 + x10878 +
    x10934 + x1469 * x2036 + x1469 * x2090 + x1469 * x2323 + x1469 * x694 +
    x154 * x1775 - x154 * x1782 + x1551 * x1775 - x1551 * x1782 -
    x1565 * x2036 - x1565 * x2090 - x1565 * x2323 - x1565 * x694 +
    x1671 * x2133 - x1671 * x2358 - x1671 * x698 - x1671 * x786 -
    x1745 * x2133 + x1745 * x2358 + x1745 * x698 + x1745 * x786 +
    x1775 * x2078 - x1782 * x2078 - x1889 * x2128 - x1889 * x719 +
    x1889 * x735 - x1972 * x2139 + x1972 * x897 + x1972 * x903 - x1972 * x906 +
    x2095 + x5532 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1085 + x1160) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[468] =
    70000000.0 * sc[0] * x865 + sc[1] * x1051 +
    30000000.0 * sc[1] * x124 * x1892 + 90000000.0 * sc[1] * x1903 +
    16040000.0 * sc[2] * x1649 + 48000000.0 * sc[2] * x1892 + sc[2] * x5667 +
    24000000.0 * sc[6] * x1649 - sc[8] * x10586 - 30000000.0 * sc[8] * x1299 -
    11000000.0 * sc[8] * x1318 - 40000000.0 * sc[8] * x1574 -
    8480000.0 * sc[8] * x1847 - 392000.0 * sc[8] * x1892 +
    11000000.0 * sc[9] * x1315 + 32000000.0 * sc[9] * x2130 * x865 +
    x1002 * x1318 + x10377 + x107 + x10878 + x10883 + x10886 + x10902 +
    4.27e+46 * x1197 * x707 * x776 + x1318 * x640 - x154 * x1847 -
    x1551 * x1847 + x1574 * x2036 + x1574 * x2090 + x1574 * x2323 +
    x1574 * x694 - x1649 * x2139 + x1649 * x897 + x1649 * x903 - x1649 * x906 -
    x1843 * x735 - x1847 * x2078 + x1847 * x748 - x1892 * x2128 - x1892 * x719 +
    x1892 * x735 + x1903 * x635 + x2095 - x2133 * x865 + x2358 * x865 +
    x786 * x865 + x9760 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (-x1058 + x1299) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[491] =
    30000000.0 * sc[1] * x124 * x1895 + 48000000.0 * sc[2] * x1895 +
    16040000.0 * sc[2] * x1956 + 40000000.0 * sc[8] * x1575 -
    40000000.0 * sc[8] * x1580 - 12000000.0 * sc[8] * x1692 * x2130 -
    8480000.0 * sc[8] * x1881 - 392000.0 * sc[8] * x1895 -
    30000000.0 * sc[8] * x319 + 30000000.0 * sc[8] * x963 + x10875 + x10888 -
    x154 * x1881 - x1551 * x1881 - x1575 * x2090 - x1575 * x694 +
    x1580 * x2090 + x1580 * x694 + x1692 * x698 + x1692 * x786 - x1881 * x2078 +
    x1881 * x748 - x1895 * x2128 - x1895 * x719 + x1895 * x735 + x2095 +
    x2133 * x295 + x2145 - x295 * x698 - x295 * x786 + x9852 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x124 * x683 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x154 * x680 -
     x1551 * x680 + x2036 * x677 - x2078 * x680 + x2090 * x677 + x2128 * x683 -
     x2133 * x678 + x2323 * x677 + x2358 * x678 + x677 * x694 + x678 * x698 +
     x678 * x786 + x680 * x748 + x683 * x719 - x683 * x735) *
      (x319 - x963) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x124 * x684 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x154 * x681 - x1551 * x681 - x2078 * x681 -
     x2128 * x684 - x2133 * x679 + x2358 * x679 + x679 * x698 + x679 * x786 +
     x681 * x748 - x684 * x719 + x684 * x735) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-90000000.0 * sc[1] * x230 - x230 * x635) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (11000000.0 * sc[8] * x490 - x1002 * x490 - x490 * x640) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-32000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     24000000.0 * sc[6] * x596 - 8480000.0 * sc[8] * x682 - x1527 * x639 -
     x154 * x682 - x1551 * x682 - x2078 * x682 + x2139 * x596 - x2362 * x639 -
     x596 * x897 - x596 * x903 + x596 * x906 + x682 * x748) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (30000000.0 * sc[1] * x124 * x685 - 90000000.0 * sc[1] * x435 -
     16040000.0 * sc[2] * x558 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x558 - 392000.0 * sc[8] * x685 - x2128 * x685 +
     x2139 * x558 - x435 * x635 - x558 * x897 - x558 * x903 + x558 * x906 -
     x685 * x719 + x685 * x735) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[9] = -50000000.0 * sc[14] * x1016 + 50000000.0 * sc[14] * x988 +
         11000000.0 * sc[8] * x1240 + sc[8] * x666 + 392000.0 * sc[8] * x726 -
         392000.0 * sc[8] * x826 + 8480000.0 * sc[8] * x830 -
         8480000.0 * sc[8] * x951 + 60000000.0 * sc[9] * x1476 -
         60000000.0 * sc[9] * x973 + x1016 * x1034 - x1034 * x988 +
         x1111 * x649 - x1111 * x651 + x191 - x2143 * x821 - x264 * x821 -
         x726 * x735 + x735 * x826 - x748 * x830 + x748 * x951 - x897 * x909 +
         x897 * x935 +
         (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
          392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
          x683 * x735) *
           (-x1476 + x973) +
         (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
          392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
          x681 * x748 - x684 * x735) *
           (-x649 + x651 + (x677) * (-x1476 + x973)) +
         (x2143 * x66 + x264 * x66) *
           (x726 - x826 + (-x683) * (-x1476 + x973) +
            (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
            (x685) *
              (x830 - x951 + (x680) * (-x1476 + x973) +
               (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
               (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                         (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
         (-11000000.0 * sc[8] * x490) *
           (x909 - x935 +
            (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
            (-x558) *
              (x830 - x951 + (x680) * (-x1476 + x973) +
               (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
               (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                         (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
         (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
          x682 * x748) *
           (-x1016 + x988 + (x678) * (-x1476 + x973) +
            (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
         (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
           (x830 - x951 + (x680) * (-x1476 + x973) +
            (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
            (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                      (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[32] =
    -50000000.0 * sc[14] * x1073 + 60000000.0 * sc[14] * x1104 +
    50000000.0 * sc[14] * x985 + 20000000.0 * sc[19] * x2370 +
    392000.0 * sc[8] * x1061 + 8480000.0 * sc[8] * x1065 +
    2.477e+21 * sc[8] * x1217 * x25 * exp(x1634) + 11000000.0 * sc[8] * x476 -
    392000.0 * sc[8] * x950 - 8480000.0 * sc[8] * x971 -
    60000000.0 * sc[9] * x1636 + 60000000.0 * sc[9] * x1708 + x1034 * x1073 -
    x1034 * x985 - x1061 * x735 - x1065 * x748 + x1111 * x857 - x1111 * x964 -
    x14 + x1504 * x897 - x1623 * x2143 - x1623 * x264 - x523 * x897 + x5527 +
    x735 * x950 + x748 * x971 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1636 - x1708) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (x2143 * x66 + x264 * x66) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[55] =
    -50000000.0 * sc[14] * x315 + 50000000.0 * sc[14] * x318 +
    392000.0 * sc[8] * x140 - 392000.0 * sc[8] * x1556 +
    11000000.0 * sc[8] * x1654 + 8480000.0 * sc[8] * x1664 -
    8480000.0 * sc[8] * x759 - 60000000.0 * sc[9] * x1772 +
    60000000.0 * sc[9] * x1794 - sc[9] * x7449 + x1034 * x315 - x1034 * x318 +
    x1111 * x965 - x1111 * x972 - x140 * x735 + x1556 * x735 + x1656 * x897 -
    x1664 * x748 - x1721 * x897 - x1723 * x2143 - x1723 * x264 + x5527 +
    x748 * x759 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1772 - x1794) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (x2143 * x66 + x264 * x66) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[78] =
    -50000000.0 * sc[14] * x1416 + 50000000.0 * sc[14] * x883 -
    392000.0 * sc[8] * x1627 + 392000.0 * sc[8] * x1630 -
    8480000.0 * sc[8] * x1666 + 8480000.0 * sc[8] * x1672 +
    11000000.0 * sc[8] * x1733 - 60000000.0 * sc[9] * x1829 +
    60000000.0 * sc[9] * x1853 - sc[9] * x8294 + x1034 * x1416 - x1034 * x883 +
    x1111 * x974 - x1111 * x976 + x1627 * x735 - x1630 * x735 + x1666 * x748 -
    x1672 * x748 - x1757 * x2143 - x1757 * x264 + x1762 * x897 - x1764 * x897 +
    x5527 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1829 - x1853) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (x2143 * x66 + x264 * x66) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[101] =
    -50000000.0 * sc[14] * x1645 + 50000000.0 * sc[14] * x1659 -
    392000.0 * sc[8] * x1677 + 392000.0 * sc[8] * x1699 -
    8480000.0 * sc[8] * x1700 + 11000000.0 * sc[8] * x219 +
    8480000.0 * sc[8] * x398 + sc[8] * x7577 - 60000000.0 * sc[9] * x1885 +
    60000000.0 * sc[9] * x1899 + x1034 * x1645 - x1034 * x1659 + x1111 * x977 -
    x1111 * x982 + x1677 * x735 - x1699 * x735 + x1700 * x748 - x1776 * x897 +
    x1798 * x897 - x1831 * x2143 - x1831 * x264 - x398 * x748 + x5527 - x9065 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1885 - x1899) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (x2143 * x66 + x264 * x66) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-11000000.0 * sc[8] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[124] =
    -50000000.0 * sc[14] * x1660 + 50000000.0 * sc[14] * x1662 +
    392000.0 * sc[8] * x1668 - 392000.0 * sc[8] * x1741 -
    8480000.0 * sc[8] * x1760 + 8480000.0 * sc[8] * x1768 +
    11000000.0 * sc[8] * x1946 + sc[8] * x9162 - 60000000.0 * sc[9] * x1954 +
    60000000.0 * sc[9] * x1980 - x1010 * x1111 + x1034 * x1660 - x1034 * x1662 +
    x1111 * x987 + 1.4862e+22 * x1217 * x2357 -
    2.8986751181102398e+33 * x1408 * x796 - 1.4862e+22 * x1522 +
    2.8986751181102398e+33 * x1642 * x796 - x1668 * x735 + x1741 * x735 +
    x1760 * x748 - x1768 * x748 + x1779 * x897 - x1844 * x2143 - x1844 * x264 -
    x1856 * x897 - x373 * x423 * (1.68 * x1101 * x688 + 12.0 * x2365 * x688) +
    x425 * (1.68 * x1101 * x688 + 12.0 * x2365 * x688) +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1954 - x1980) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (x2143 * x66 + x264 * x66) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[147] =
    -50000000.0 * sc[14] * x1665 + 50000000.0 * sc[14] * x1670 -
    392000.0 * sc[8] * x1759 + 392000.0 * sc[8] * x1769 -
    8480000.0 * sc[8] * x1770 + 8480000.0 * sc[8] * x1771 +
    11000000.0 * sc[8] * x1985 + 1000000.0 * sc[8] -
    60000000.0 * sc[9] * x2022 + 60000000.0 * sc[9] * x2045 - sc[9] * x385 +
    x1012 * x1111 - x1014 * x1111 + x1034 * x1665 - x1034 * x1670 + x10984 +
    x1759 * x735 - x1769 * x735 + x1770 * x748 - x1771 * x748 + x1851 * x897 -
    x1878 * x897 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x2022 - x2045) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (x2143 * x66 + x264 * x66) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[170] =
    -50000000.0 * sc[14] * x1673 + 50000000.0 * sc[14] * x1674 -
    8480000.0 * sc[8] * x1780 + 8480000.0 * sc[8] * x1781 -
    392000.0 * sc[8] * x1786 + 11000000.0 * sc[8] * x1995 +
    392000.0 * sc[8] * x202 - 60000000.0 * sc[9] * x2081 +
    60000000.0 * sc[9] * x2099 + x10039 + x1015 * x1111 - x1019 * x1111 +
    x1034 * x1673 - x1034 * x1674 + x10984 + x1780 * x748 - x1781 * x748 +
    x1786 * x735 - x1898 * x897 + x1906 * x897 - x202 * x735 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x2081 - x2099) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (x2143 * x66 + x264 * x66) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-11000000.0 * sc[8] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[193] =
    sc[0] * x666 + sc[12] * x10626 + sc[14] * x10619 -
    50000000.0 * sc[14] * x1680 + 50000000.0 * sc[14] * x1681 +
    sc[15] * x10614 + sc[20] * x10586 + sc[4] * x7577 + sc[5] * x9162 +
    1000000.0 * sc[6] - 8480000.0 * sc[8] * x1788 + 8480000.0 * sc[8] * x1789 -
    392000.0 * sc[8] * x1792 + 392000.0 * sc[8] * x1832 +
    11000000.0 * sc[8] * x453 +
    4.92 * sc[8] * exp(-g_RT_qss[1] - x1392 + x537) +
    32000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1392) -
    60000000.0 * sc[9] * x2123 + 60000000.0 * sc[9] * x2149 + x10062 +
    x1022 * x1111 - x1025 * x1111 + x1034 * x1680 - x1034 * x1681 + x10984 +
    2.477e+21 * x1217 * x788 * exp(x1634) - 11000000.0 * x1319 + x1788 * x748 -
    x1789 * x748 + x1792 * x735 - x1832 * x735 + x1947 * x897 - x1958 * x897 +
    392000.0 * x234 + 8480000.0 * x433 - 11000000.0 * x581 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x2123 - x2149) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (x2143 * x66 + x264 * x66) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[216] =
    -8480000.0 * sc[10] * x1244 - 392000.0 * sc[13] * x1192 -
    50000000.0 * sc[14] * x1683 + 50000000.0 * sc[14] * x1689 -
    sc[19] * x10631 - 11000000.0 * sc[20] * x1315 - sc[2] * x7449 -
    sc[3] * x8294 - sc[6] * x385 - 8480000.0 * sc[8] * x1791 +
    8480000.0 * sc[8] * x1797 - 392000.0 * sc[8] * x1834 +
    392000.0 * sc[8] * x1848 + 11000000.0 * sc[8] * x2020 -
    60000000.0 * sc[9] * x2138 + 60000000.0 * sc[9] * x2197 + x1034 * x1683 -
    x1034 * x1689 + x1049 * x1111 - x1053 * x1111 - x1127 -
    2.477e+21 * x1217 * x2356 * x776 - 60000000.0 * x1473 + x1791 * x748 -
    x1797 * x748 + x1834 * x735 - x1848 * x735 - 50000000.0 * x19 * x723 +
    x191 + x1959 * x897 - x1964 * x897 - 16000000.0 * x2130 * x593 -
    x2135 * x723 - x2143 * x816 - x234 * x412 - x264 * x816 - x325 * x433 -
    x440 * x819 - 2.46 * x594 * exp(x537) - x9383 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x2138 - x2197) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (x2143 * x66 + x264 * x66) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[239] =
    -50000000.0 * sc[14] * x1693 + 50000000.0 * sc[14] * x1694 -
    8480000.0 * sc[8] * x1801 + 8480000.0 * sc[8] * x1804 +
    392000.0 * sc[8] * x1840 - 392000.0 * sc[8] * x1861 +
    11000000.0 * sc[8] * x2021 - 8480000.0 * sc[9] * x1244 -
    60000000.0 * sc[9] * x2184 + 60000000.0 * sc[9] * x2274 + x1034 * x1693 -
    x1034 * x1694 + x1066 * x1111 - x1068 * x1111 + 3.7155e+21 * x1217 * x2357 -
    7.2466877952755894e+32 * x1408 * x796 + 2.477e+21 * x1522 * x6499 -
    3.7155e+21 * x1522 + 7.2466877952755894e+32 * x1642 * x796 + x1801 * x748 -
    x1804 * x748 - x1840 * x735 + x1861 * x735 + x1965 * x897 - x2143 * x65 -
    x264 * x65 - x373 * x6499 - x646 * x897 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x2184 - x2274) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (x2143 * x66 + x264 * x66) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[262] =
    -50000000.0 * sc[14] * x1695 + 50000000.0 * sc[14] * x1697 +
    8480000.0 * sc[8] * x1696 - 8480000.0 * sc[8] * x1806 -
    392000.0 * sc[8] * x1845 + 392000.0 * sc[8] * x725 +
    11000000.0 * sc[8] * x930 - 60000000.0 * sc[9] * x1555 +
    60000000.0 * sc[9] * x2326 + x1034 * x1695 - x1034 * x1697 - x1071 * x1111 +
    x1111 * x661 - x1696 * x748 + x1806 * x748 + x1845 * x735 + x191 -
    x2143 * x602 - x264 * x602 + x655 * x897 - x725 * x735 - x897 * x908 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1555 - x2326) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (x2143 * x66 + x264 * x66) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[285] =
    -50000000.0 * sc[14] * x1701 + 50000000.0 * sc[14] * x1702 +
    sc[8] * x10626 + 11000000.0 * sc[8] * x1502 - 8480000.0 * sc[8] * x1755 +
    8480000.0 * sc[8] * x1761 - 392000.0 * sc[8] * x1880 +
    392000.0 * sc[8] * x1887 - 60000000.0 * sc[9] * x1021 +
    60000000.0 * sc[9] * x2366 + x1034 * x1701 - x1034 * x1702 + x1072 * x1111 -
    x1076 * x1111 + x10984 + x1755 * x748 - x1761 * x748 + x1880 * x735 -
    x1887 * x735 + x1976 * x897 - x1977 * x897 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x1021 - x2366) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (x2143 * x66 + x264 * x66) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[308] =
    -50000000.0 * sc[14] * x1704 + 50000000.0 * sc[14] * x1706 -
    8480000.0 * sc[8] * x1767 + 8480000.0 * sc[8] * x1833 -
    392000.0 * sc[8] * x1894 + 392000.0 * sc[8] * x1896 +
    11000000.0 * sc[8] * x1995 - 392000.0 * sc[9] * x1192 +
    60000000.0 * sc[9] * x2354 - 60000000.0 * sc[9] * x742 + x1034 * x1704 -
    x1034 * x1706 + x1077 * x1111 - x1081 * x1111 + x11012 + x1767 * x748 -
    x1833 * x748 + x1894 * x735 - x1896 * x735 + x1979 * x897 - x1986 * x897 -
    x2143 * x659 - x264 * x659 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x2354 + x742) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (x2143 * x66 + x264 * x66) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[331] =
    -50000000.0 * sc[14] * x1707 + 50000000.0 * sc[14] * x1709 +
    60000000.0 * sc[1] * x1104 + sc[8] * x10619 - 8480000.0 * sc[8] * x1835 +
    8480000.0 * sc[8] * x1836 - 392000.0 * sc[8] * x1894 +
    392000.0 * sc[8] * x1897 + 11000000.0 * sc[8] * x488 +
    60000000.0 * sc[9] * x1174 - 60000000.0 * sc[9] * x1231 + x1034 * x1707 -
    x1034 * x1709 + x1083 * x1111 - x1089 * x1111 + x11012 + x1835 * x748 -
    x1836 * x748 + x1894 * x735 - x1897 * x735 + x1979 * x897 - x1992 * x897 -
    x2143 * x820 - x264 * x820 + 50000000.0 * x593 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1174 + x1231) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (x2143 * x66 + x264 * x66) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[354] =
    -50000000.0 * sc[14] * x1711 + 50000000.0 * sc[14] * x1719 +
    sc[8] * x10614 + 11000000.0 * sc[8] * x1716 - 8480000.0 * sc[8] * x1838 +
    8480000.0 * sc[8] * x1839 + 392000.0 * sc[8] * x1841 -
    392000.0 * sc[8] * x1904 + 60000000.0 * sc[9] * x116 -
    60000000.0 * sc[9] * x81 + x1034 * x1711 - x1034 * x1719 + x1091 * x1111 +
    x11012 - x1111 * x1366 - x1135 * x2143 - x1135 * x264 + x1838 * x748 -
    x1839 * x748 - x1841 * x735 - x1886 * x897 + x1904 * x735 + x1999 * x897 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x116 + x81) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (x2143 * x66 + x264 * x66) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-11000000.0 * sc[8] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[377] =
    -50000000.0 * sc[14] * x1730 + 50000000.0 * sc[14] * x1731 +
    392000.0 * sc[8] * x169 + 8480000.0 * sc[8] * x1849 +
    60000000.0 * sc[9] * x1625 - 60000000.0 * sc[9] * x848 + x1034 * x1730 -
    x1034 * x1731 + x11020 + x11022 + x11026 + x1111 * x1367 - x1111 * x1472 -
    x169 * x735 - x1849 * x748 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1625 + x848) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (x2143 * x66 + x264 * x66) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[400] =
    50000000.0 * sc[14] * x1739 + 8480000.0 * sc[8] * x1852 +
    392000.0 * sc[8] * x1882 + 11000000.0 * sc[8] * x1995 -
    60000000.0 * sc[9] * x851 - x1034 * x1739 + x11030 - x1111 * x854 -
    x1554 * x2143 - x1554 * x264 - x1852 * x748 - x1882 * x735 - x1956 * x897 +
    x5527 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1058 + x851) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (x2143 * x66 + x264 * x66) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[423] =
    50000000.0 * sc[14] * x1661 + 8480000.0 * sc[8] * x1783 +
    11000000.0 * sc[8] * x1995 + 392000.0 * sc[8] * x232 -
    60000000.0 * sc[9] * x2058 - x1034 * x1661 + x10984 + x11030 -
    x1111 * x1563 - x1783 * x748 - x1957 * x897 - x232 * x735 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1058 + x2058) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (x2143 * x66 + x264 * x66) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[446] =
    -50000000.0 * sc[14] * x1671 + 50000000.0 * sc[14] * x1745 +
    20000000.0 * sc[1] * x2370 - 8480000.0 * sc[8] * x1775 +
    8480000.0 * sc[8] * x1782 + 392000.0 * sc[8] * x1889 +
    11000000.0 * sc[8] * x1995 - sc[9] * x10631 + 60000000.0 * sc[9] * x1085 -
    60000000.0 * sc[9] * x1160 + x1034 * x1671 - x1034 * x1745 + x11020 -
    x1111 * x1469 + x1111 * x1565 + x1775 * x748 - x1782 * x748 + x1843 * x735 -
    x1889 * x735 + x1890 * x897 - x1972 * x897 - x2143 * x62 - x264 * x62 +
    x5527 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1085 + x1160) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (x2143 * x66 + x264 * x66) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[469] =
    50000000.0 * sc[14] * x865 + sc[8] * x10586 + 11000000.0 * sc[8] * x1318 +
    8480000.0 * sc[8] * x1847 + 392000.0 * sc[8] * x1892 -
    60000000.0 * sc[9] * x1299 - 11000000.0 * sc[9] * x1315 -
    16000000.0 * sc[9] * x2130 * x865 + x10984 + x11030 - x1111 * x1574 -
    x1649 * x897 - x1847 * x748 - x1892 * x735 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (-x1058 + x1299) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (x2143 * x66 + x264 * x66) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-11000000.0 * sc[8] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[492] =
    50000000.0 * sc[14] * x1692 - 50000000.0 * sc[14] * x295 +
    8480000.0 * sc[8] * x1881 + 392000.0 * sc[8] * x1895 -
    16000000.0 * sc[9] * x1692 * x2130 - 60000000.0 * sc[9] * x319 +
    60000000.0 * sc[9] * x963 + x1034 * x295 + x11020 + x11022 + x11026 +
    x1111 * x1575 - x1111 * x1580 - x1881 * x748 - x1895 * x735 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 - x1034 * x678 - x1111 * x677 - x680 * x748 +
     x683 * x735) *
      (x319 - x963) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 - x1034 * x679 + x2143 * x660 + x264 * x660 -
     x681 * x748 - x684 * x735) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (x2143 * x66 + x264 * x66) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-11000000.0 * sc[8] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (8480000.0 * sc[8] * x682 + x2143 * x603 + x264 * x603 + x596 * x897 -
     x682 * x748) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (392000.0 * sc[8] * x685 + x558 * x897 - x685 * x735) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[10] =
    -14000000.0 * sc[11] * x1016 + 14000000.0 * sc[11] * x988 -
    50000000.0 * sc[16] * x1476 - 30000000.0 * sc[16] * x649 +
    30000000.0 * sc[16] * x651 + 50000000.0 * sc[16] * x973 +
    60000000.0 * sc[19] * x830 - 60000000.0 * sc[19] * x951 +
    48000000.0 * sc[2] * x726 + 100000000.0 * sc[2] * x821 -
    48000000.0 * sc[2] * x826 + 30000000.0 * sc[2] * x830 -
    30000000.0 * sc[2] * x951 - 40000000.0 * sc[3] * x1016 +
    18000.0 * sc[3] * x1235 + 40000000.0 * sc[3] * x988 +
    50000000.0 * sc[4] * x830 - 50000000.0 * sc[4] * x951 +
    8480000.0 * sc[8] * x830 - 8480000.0 * sc[8] * x951 + x1016 * x2065 +
    x1054 + x11050 * x1476 - x11050 * x973 - x11054 * x1476 + x11054 * x973 +
    x11136 + x1235 * x635 - x2065 * x988 + x2187 * x649 - x2187 * x651 +
    x2317 * x830 - x2317 * x951 + x2321 * x649 - x2321 * x651 - x309 * x830 +
    x309 * x951 - x46 * x726 + x46 * x826 + x584 * x649 - x584 * x651 + x620 -
    x726 * x863 - x731 * x909 + x731 * x935 + x826 * x863 + 10.0 * x830 * x869 +
    10.0 * x830 * x888 - 10.0 * x869 * x951 - 10.0 * x888 * x951 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1476 + x973) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[33] =
    -14000000.0 * sc[11] * x1073 + 14000000.0 * sc[11] * x985 +
    50000000.0 * sc[16] * x1636 - 50000000.0 * sc[16] * x1708 -
    30000000.0 * sc[16] * x857 + 30000000.0 * sc[16] * x964 +
    100000000.0 * sc[16] + sc[17] * x827 + 60000000.0 * sc[19] * x1065 -
    60000000.0 * sc[19] * x971 + 48000000.0 * sc[2] * x1061 +
    100000000.0 * sc[2] * x1623 - 48000000.0 * sc[2] * x950 -
    40000000.0 * sc[3] * x1073 + 18000.0 * sc[3] * x211 +
    40000000.0 * sc[3] * x985 + 50000000.0 * sc[4] * x1065 -
    50000000.0 * sc[4] * x971 + 8480000.0 * sc[8] * x1065 -
    8480000.0 * sc[8] * x971 - x1061 * x46 - x1061 * x863 + x1065 * x2317 -
    x1065 * x309 + 10.0 * x1065 * x869 + 10.0 * x1065 * x888 + x1073 * x2065 -
    x11050 * x1636 + x11050 * x1708 + x11054 * x1636 - x11054 * x1708 + x11184 +
    x1485 + x1504 * x731 + x187 - x2065 * x985 + x211 * x635 + x2187 * x857 -
    x2187 * x964 - x2317 * x971 + x2321 * x857 - x2321 * x964 + x309 * x971 -
    200000000.0 * x364 * x736 + x46 * x950 - x523 * x731 + x5511 + x5604 +
    x584 * x857 - x584 * x964 + x863 * x950 - 10.0 * x869 * x971 -
    10.0 * x888 * x971 + x8971 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1636 - x1708) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[56] =
    -sc[10] * x2 * x7381 + sc[11] * x200 - 14000000.0 * sc[11] * x315 +
    14000000.0 * sc[11] * x318 + 4.08 * sc[13] * exp(x2185) +
    50000000.0 * sc[16] * x1772 - 50000000.0 * sc[16] * x1794 -
    30000000.0 * sc[16] * x965 + 30000000.0 * sc[16] * x972 +
    200000000.0 * sc[16] + 60000000.0 * sc[19] * x1664 -
    60000000.0 * sc[19] * x759 + 73400000.0 * sc[1] * x1664 -
    73400000.0 * sc[1] * x759 + 100000000.0 * sc[2] * x1723 +
    18000.0 * sc[3] * x224 - 40000000.0 * sc[3] * x315 +
    40000000.0 * sc[3] * x318 + 50000000.0 * sc[4] * x1664 -
    50000000.0 * sc[4] * x759 + 8480000.0 * sc[8] * x1664 -
    8480000.0 * sc[8] * x759 - 100000000.0 * x109 - x11050 * x1772 +
    x11050 * x1794 + x11054 * x1772 - x11054 * x1794 + x11184 -
    100000000.0 * x1136 - x140 * x46 - x140 * x863 + x1485 + x1507 +
    x1556 * x46 + x1556 * x863 + x1656 * x731 + x1664 * x2317 - x1664 * x309 +
    10.0 * x1664 * x869 + 10.0 * x1664 * x888 - x1721 * x731 + x2065 * x315 -
    x2065 * x318 + x2187 * x965 - x2187 * x972 + x224 * x635 - x2317 * x759 +
    x2321 * x965 - x2321 * x972 + x309 * x759 + x5604 + x5669 + x5693 +
    x584 * x965 - x584 * x972 - 10.0 * x759 * x869 - 10.0 * x759 * x888 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1772 - x1794) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[79] =
    50000000.0 * sc[16] * x1829 - 50000000.0 * sc[16] * x1853 +
    3200000.0 * sc[16] * x8290 - 30000000.0 * sc[16] * x974 +
    30000000.0 * sc[16] * x976 - 60000000.0 * sc[19] * x1666 +
    60000000.0 * sc[19] * x1672 - 73400000.0 * sc[1] * x1666 +
    73400000.0 * sc[1] * x1672 - 15000000.0 * sc[2] * x1416 -
    48000000.0 * sc[2] * x1627 + 48000000.0 * sc[2] * x1630 +
    100000000.0 * sc[2] * x1757 + 57000000.0 * sc[2] * x1829 -
    57000000.0 * sc[2] * x1853 + 15000000.0 * sc[2] * x883 -
    40000000.0 * sc[3] * x1416 + 40000000.0 * sc[3] * x883 -
    50000000.0 * sc[4] * x1666 + 50000000.0 * sc[4] * x1672 -
    8480000.0 * sc[8] * x1666 + 8480000.0 * sc[8] * x1672 + x1056 * x635 -
    x11050 * x1829 + x11050 * x1853 + x11054 * x1829 - x11054 * x1853 + x11183 +
    x11245 + x1416 * x2065 + x1485 + x1627 * x46 + x1627 * x863 - x1630 * x46 -
    x1630 * x863 - x1666 * x2134 - x1666 * x2317 + x1666 * x309 -
    10.0 * x1666 * x869 - 10.0 * x1666 * x888 + x1672 * x2134 + x1672 * x2317 -
    x1672 * x309 + 10.0 * x1672 * x869 + 10.0 * x1672 * x888 + x1762 * x731 -
    x1764 * x731 - x2065 * x883 + x2187 * x974 - x2187 * x976 + x2321 * x974 -
    x2321 * x976 + 7600000.0 * x433 * exp(-201.28666632188799 * invT) + x5604 +
    x5771 + x584 * x974 - x584 * x976 + 40000000.0 * x593 + 3612.0 * x7379 -
    3612.0 * x7383 - x7528 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1829 - x1853) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[102] =
    sc[11] * x9105 + sc[13] * x9124 + 50000000.0 * sc[16] * x1885 -
    50000000.0 * sc[16] * x1899 - 30000000.0 * sc[16] * x977 +
    30000000.0 * sc[16] * x982 - 60000000.0 * sc[19] * x1700 +
    60000000.0 * sc[19] * x398 - 73400000.0 * sc[1] * x1700 +
    73400000.0 * sc[1] * x398 - 15000000.0 * sc[2] * x1645 +
    15000000.0 * sc[2] * x1659 - 48000000.0 * sc[2] * x1677 +
    48000000.0 * sc[2] * x1699 + 100000000.0 * sc[2] * x1831 -
    40000000.0 * sc[3] * x1645 + 40000000.0 * sc[3] * x1659 -
    50000000.0 * sc[4] * x1700 + 50000000.0 * sc[4] * x398 -
    8480000.0 * sc[8] * x1700 + 8480000.0 * sc[8] * x398 - x11050 * x1885 +
    x11050 * x1899 + x11054 * x1885 - x11054 * x1899 + x11184 + x11274 + x1485 +
    x1645 * x2065 - x1659 * x2065 + x1677 * x46 + x1677 * x863 - x1699 * x46 -
    x1699 * x863 - x1700 * x2317 + x1700 * x309 - 10.0 * x1700 * x869 -
    10.0 * x1700 * x888 - x1776 * x731 + x1798 * x731 + x2187 * x977 -
    x2187 * x982 + x2317 * x398 + x2321 * x977 - x2321 * x982 + x276 * x635 -
    x309 * x398 - 3200000.0 * x364 * x8360 + 10.0 * x398 * x869 +
    10.0 * x398 * x888 + 50000000.0 * x433 + x5604 + x584 * x977 - x584 * x982 +
    x5864 + x9153 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1885 - x1899) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[125] =
    -sc[10] * x1668 * x805 - 30000000.0 * sc[10] * x1668 * x96 -
    1.614e+22 * sc[10] * x2319 - 14000000.0 * sc[11] * x1660 +
    14000000.0 * sc[11] * x1662 + 30000000.0 * sc[16] * x1010 +
    50000000.0 * sc[16] * x1954 - 50000000.0 * sc[16] * x1980 -
    30000000.0 * sc[16] * x987 - 60000000.0 * sc[19] * x1760 +
    60000000.0 * sc[19] * x1768 + 48000000.0 * sc[2] * x1668 -
    48000000.0 * sc[2] * x1741 + 100000000.0 * sc[2] * x1844 -
    40000000.0 * sc[3] * x1660 + 40000000.0 * sc[3] * x1662 +
    18000.0 * sc[3] * x1793 - 8480000.0 * sc[8] * x1760 +
    8480000.0 * sc[8] * x1768 - x1010 * x2187 - x1010 * x2321 - x1010 * x584 +
    1.614e+17 * x1095 * x11048 - x11050 * x1954 + x11050 * x1980 +
    x11054 * x1954 - x11054 * x1980 - x11087 * x11276 + 8.68332e+25 * x11095 -
    x11108 * x11296 + x11115 * x11296 + 5.3600740740740798e+37 * x11119 -
    1.614e+17 * x11126 + x11132 * x11276 -
    5.3600740740740798e+37 * x1407 * x248 + x1660 * x2065 - x1662 * x2065 +
    1.614e+22 * x1688 + x1741 * x46 + x1741 * x863 - x1760 * x2317 +
    x1760 * x309 - 10.0 * x1760 * x869 - 10.0 * x1760 * x888 + x1768 * x2317 -
    x1768 * x309 + 10.0 * x1768 * x869 + 10.0 * x1768 * x888 + x1779 * x731 +
    x1793 * x635 - x1856 * x731 + x2187 * x987 + x2321 * x987 + x408 +
    x584 * x987 + x622 + 3612.0 * x7379 - 3612.0 * x7383 -
    8.68332e+25 * x837 * x959 + x9876 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1954 - x1980) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[148] =
    -14000000.0 * sc[11] * x1665 + 14000000.0 * sc[11] * x1670 -
    30000000.0 * sc[16] * x1012 + 30000000.0 * sc[16] * x1014 +
    50000000.0 * sc[16] * x2022 - 50000000.0 * sc[16] * x2045 -
    60000000.0 * sc[19] * x1770 + 60000000.0 * sc[19] * x1771 -
    73400000.0 * sc[1] * x1770 + 73400000.0 * sc[1] * x1771 -
    15000000.0 * sc[2] * x1665 + 15000000.0 * sc[2] * x1670 -
    40000000.0 * sc[3] * x1665 + 40000000.0 * sc[3] * x1670 +
    18000.0 * sc[3] * x1842 - 50000000.0 * sc[4] * x1770 +
    50000000.0 * sc[4] * x1771 - 8480000.0 * sc[8] * x1770 +
    8480000.0 * sc[8] * x1771 + x10033 + x1012 * x2187 + x1012 * x2321 +
    x1012 * x584 - x1014 * x2187 - x1014 * x2321 - x1014 * x584 -
    x11050 * x2022 + x11050 * x2045 + x11054 * x2022 - x11054 * x2045 + x11349 +
    x1485 + x1665 * x2065 - x1670 * x2065 + x1759 * x46 + x1759 * x863 -
    x1769 * x46 - x1769 * x863 + x1770 * x309 - 10.0 * x1770 * x869 -
    10.0 * x1770 * x888 - x1771 * x309 + 10.0 * x1771 * x869 +
    10.0 * x1771 * x888 + x1842 * x635 + x1851 * x731 - x1878 * x731 + x5604 +
    x6067 + x6096 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x2022 - x2045) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[171] =
    -14000000.0 * sc[11] * x1673 + 14000000.0 * sc[11] * x1674 -
    30000000.0 * sc[16] * x1015 + 30000000.0 * sc[16] * x1019 +
    50000000.0 * sc[16] * x2081 - 50000000.0 * sc[16] * x2099 -
    60000000.0 * sc[19] * x1780 + 60000000.0 * sc[19] * x1781 +
    57000000.0 * sc[2] * x2081 - 57000000.0 * sc[2] * x2099 -
    40000000.0 * sc[3] * x1673 + 40000000.0 * sc[3] * x1674 -
    50000000.0 * sc[4] * x1780 + 50000000.0 * sc[4] * x1781 -
    8480000.0 * sc[8] * x1780 + 8480000.0 * sc[8] * x1781 + x1015 * x2187 +
    x1015 * x2321 + x1015 * x584 - x1019 * x2187 - x1019 * x2321 -
    x1019 * x584 + x106 - x11050 * x2081 + x11050 * x2099 + x11054 * x2081 -
    x11054 * x2099 + x11349 + x11381 + x1673 * x2065 - x1674 * x2065 -
    x1780 * x2134 - x1780 * x2317 + x1780 * x309 - 10.0 * x1780 * x869 -
    10.0 * x1780 * x888 + x1781 * x2134 + x1781 * x2317 - x1781 * x309 +
    10.0 * x1781 * x869 + 10.0 * x1781 * x888 + x1786 * x46 + x1786 * x863 -
    x1898 * x731 + x1906 * x731 - x202 * x46 - x202 * x863 + x5604 + x6149 +
    x6169 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x2081 - x2099) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[194] =
    -14000000.0 * sc[11] * x1680 + 14000000.0 * sc[11] * x1681 -
    30000000.0 * sc[16] * x1022 + 30000000.0 * sc[16] * x1025 +
    50000000.0 * sc[16] * x2123 - 50000000.0 * sc[16] * x2149 +
    50000000.0 * sc[16] - 60000000.0 * sc[19] * x1788 +
    60000000.0 * sc[19] * x1789 - 73400000.0 * sc[1] * x1788 +
    73400000.0 * sc[1] * x1789 - 15000000.0 * sc[2] * x1680 +
    15000000.0 * sc[2] * x1681 - 48000000.0 * sc[2] * x1792 +
    48000000.0 * sc[2] * x1832 + 57000000.0 * sc[2] * x2123 -
    57000000.0 * sc[2] * x2149 + 18000.0 * sc[3] * x1238 -
    40000000.0 * sc[3] * x1680 + 40000000.0 * sc[3] * x1681 -
    50000000.0 * sc[4] * x1788 + 50000000.0 * sc[4] * x1789 -
    8480000.0 * sc[8] * x1788 + 8480000.0 * sc[8] * x1789 + x1022 * x2187 +
    x1022 * x2321 + x1022 * x584 - x1025 * x2187 - x1025 * x2321 -
    x1025 * x584 + x10630 - x11050 * x2123 + x11050 * x2149 + x11054 * x2123 -
    x11054 * x2149 + x11349 + x1485 + x1680 * x2065 - x1681 * x2065 -
    x1788 * x2134 - x1788 * x2317 + x1788 * x309 - 10.0 * x1788 * x869 -
    10.0 * x1788 * x888 + x1789 * x2134 + x1789 * x2317 - x1789 * x309 +
    10.0 * x1789 * x869 + 10.0 * x1789 * x888 + x1792 * x46 + x1792 * x863 -
    x1832 * x46 - x1832 * x863 + x1947 * x731 - x1958 * x731 +
    8480000.0 * x433 + x5604 + x6270 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x2123 - x2149) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[217] =
    -8480000.0 * sc[10] * x1244 - 14000000.0 * sc[11] * x1683 +
    14000000.0 * sc[11] * x1689 - 30000000.0 * sc[16] * x1049 +
    30000000.0 * sc[16] * x1053 + 50000000.0 * sc[16] * x2138 -
    50000000.0 * sc[16] * x2197 - 60000000.0 * sc[19] * x1791 +
    60000000.0 * sc[19] * x1797 - 30000000.0 * sc[2] * x1791 +
    30000000.0 * sc[2] * x1797 - 48000000.0 * sc[2] * x1834 +
    48000000.0 * sc[2] * x1848 + 100000000.0 * sc[2] * x816 -
    40000000.0 * sc[3] * x1683 + 40000000.0 * sc[3] * x1689 +
    18000.0 * sc[3] * x792 - 50000000.0 * sc[4] * x1791 +
    50000000.0 * sc[4] * x1797 - 8480000.0 * sc[8] * x1791 +
    8480000.0 * sc[8] * x1797 + x1049 * x2187 + x1049 * x2321 + x1049 * x584 -
    x1053 * x2187 - x1053 * x2321 - x1053 * x584 - x11050 * x2138 +
    x11050 * x2197 + x11054 * x2138 - x11054 * x2197 + x11136 + x151 +
    x1683 * x2065 - x1689 * x2065 - x1791 * x2317 + x1791 * x309 -
    10.0 * x1791 * x869 - 10.0 * x1791 * x888 + x1797 * x2317 - x1797 * x309 +
    10.0 * x1797 * x869 + 10.0 * x1797 * x888 + x1834 * x46 + x1834 * x863 -
    x1848 * x46 - x1848 * x863 + x1959 * x731 - x1964 * x731 + x635 * x792 +
    x6354 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x2138 - x2197) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[240] =
    -4.035e+21 * sc[10] * x2319 - 50000000.0 * sc[13] * x1114 -
    40000000.0 * sc[13] * x11481 * x1219 - sc[14] * x10666 -
    90330000.0 * sc[14] * x1178 - 120000000.0 * sc[15] * x1295 -
    30000000.0 * sc[16] * x1066 + 30000000.0 * sc[16] * x1068 +
    50000000.0 * sc[16] * x2184 - 50000000.0 * sc[16] * x2274 -
    60000000.0 * sc[19] * x1801 + 60000000.0 * sc[19] * x1804 -
    400000000.0 * sc[1] * x1219 * x736 - 60000000.0 * sc[20] * x1263 -
    sc[2] * x2 * x7381 + 100000000.0 * sc[2] * x65 -
    40000000.0 * sc[3] * x1693 + 40000000.0 * sc[3] * x1694 -
    8480000.0 * sc[8] * x1801 + 8480000.0 * sc[8] * x1804 -
    8480000.0 * sc[9] * x1244 + x10104 + x1066 * x2187 + x1066 * x2321 +
    x1066 * x584 - x1068 * x2187 - x1068 * x2321 - x1068 * x584 +
    4.035e+16 * x1095 * x11048 - x11050 * x2184 + x11050 * x2274 +
    x11054 * x2184 - x11054 * x2274 - x11087 * x11445 + 2.17083e+25 * x11095 -
    x11108 * x11458 + x11115 * x11458 + 1.34001851851852e+37 * x11119 -
    4.035e+16 * x11126 + x11132 * x11445 + x11500 - 6400000.0 * x1220 * x8360 -
    1.34001851851852e+37 * x1407 * x248 + 4.035e+21 * x1688 + x1693 * x2065 -
    x1694 * x2065 + x1801 * x309 - 10.0 * x1801 * x869 - 10.0 * x1801 * x888 -
    x1804 * x309 + 10.0 * x1804 * x869 + 10.0 * x1804 * x888 - x1840 * x46 -
    x1840 * x863 + x1861 * x46 + x1861 * x863 + x1965 * x731 + x1971 -
    x2186 * x594 - 2.69e+21 * x2319 * x25 - x234 * x805 -
    30000000.0 * x234 * x96 - 100000000.0 * x289 * x594 - x293 * x433 -
    x440 * x893 + x467 - 100000000.0 * x566 * x593 + x6240 - x646 * x731 +
    903.0 * x7379 - 903.0 * x7383 - x7827 - x833 - 2.17083e+25 * x837 * x959 +
    x9471 + x9892 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x2184 - x2274) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[263] =
    refC * x2 * x40 - 5.38e+21 * sc[10] * x2319 - 14000000.0 * sc[11] * x1695 +
    14000000.0 * sc[11] * x1697 + 30000000.0 * sc[16] * x1071 +
    50000000.0 * sc[16] * x1555 - 50000000.0 * sc[16] * x2326 -
    30000000.0 * sc[16] * x661 + 60000000.0 * sc[19] * x1696 -
    60000000.0 * sc[19] * x1806 + sc[1] * x560 - 48000000.0 * sc[2] * x1845 +
    sc[2] * x200 + 100000000.0 * sc[2] * x602 + 48000000.0 * sc[2] * x725 -
    40000000.0 * sc[3] * x1695 + 40000000.0 * sc[3] * x1697 +
    18000.0 * sc[3] * x792 + 50000000.0 * sc[4] * x1696 -
    50000000.0 * sc[4] * x1806 + sc[4] * x9105 + 8480000.0 * sc[8] * x1696 -
    8480000.0 * sc[8] * x1806 - x1071 * x2187 - x1071 * x2321 - x1071 * x584 +
    5.38e+16 * x1095 * x11048 - x11050 * x1555 + x11050 * x2326 +
    x11054 * x1555 - x11054 * x2326 - x11082 * x11087 + x11082 * x11132 +
    2.89444e+25 * x11095 - x11101 * x11108 + x11101 * x11115 + x11121 -
    5.38e+16 * x11126 + x1336 - 1.7866913580246899e+37 * x1407 * x248 +
    3400000.0 * x1473 * exp(-347.21949940525701 * invT) + 5.38e+21 * x1688 +
    x1695 * x2065 + x1696 * x2317 - x1696 * x309 + 10.0 * x1696 * x869 +
    10.0 * x1696 * x888 - x1697 * x2065 - x1806 * x2317 + x1806 * x309 -
    10.0 * x1806 * x869 - 10.0 * x1806 * x888 + x1845 * x46 + x1845 * x863 +
    x2187 * x661 + x2321 * x661 - x46 * x725 + x584 * x661 + 14000000.0 * x593 +
    x635 * x792 + x655 * x731 + x6587 - x725 * x863 - x731 * x908 +
    2107.0 * x7379 - 2107.0 * x7383 - 2.89444e+25 * x837 * x959 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1555 - x2326) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[286] =
    -14000000.0 * sc[10] * x1445 - 14000000.0 * sc[11] * x1701 +
    14000000.0 * sc[11] * x1702 + 50000000.0 * sc[16] * x1021 -
    30000000.0 * sc[16] * x1072 + 30000000.0 * sc[16] * x1076 -
    50000000.0 * sc[16] * x2366 - 60000000.0 * sc[19] * x1755 +
    60000000.0 * sc[19] * x1761 + 57000000.0 * sc[2] * x1021 -
    48000000.0 * sc[2] * x1880 + 48000000.0 * sc[2] * x1887 -
    57000000.0 * sc[2] * x2366 - 40000000.0 * sc[3] * x1701 +
    40000000.0 * sc[3] * x1702 + 18000.0 * sc[3] * x228 -
    50000000.0 * sc[4] * x1755 + 50000000.0 * sc[4] * x1761 -
    8480000.0 * sc[8] * x1755 + 8480000.0 * sc[8] * x1761 - x1021 * x11050 +
    x1021 * x11054 + x1072 * x2187 + x1072 * x2321 + x1072 * x584 -
    x1076 * x2187 - x1076 * x2321 - x1076 * x584 + x11050 * x2366 -
    x11054 * x2366 + x11349 - 18000.0 * x1220 * x1223 + x1343 + x1485 +
    x1701 * x2065 - x1702 * x2065 - x1755 * x2134 - x1755 * x2317 +
    x1755 * x309 - 10.0 * x1755 * x869 - 10.0 * x1755 * x888 + x1761 * x2134 +
    x1761 * x2317 - x1761 * x309 + 10.0 * x1761 * x869 + 10.0 * x1761 * x888 +
    x1880 * x46 + x1880 * x863 - x1887 * x46 - x1887 * x863 + x1976 * x731 -
    x1977 * x731 + x228 * x635 + x5604 + x6628 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x1021 - x2366) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[309] =
    -50000000.0 * sc[10] * x1114 - 14000000.0 * sc[11] * x1704 +
    14000000.0 * sc[11] * x1706 - 30000000.0 * sc[16] * x1077 +
    30000000.0 * sc[16] * x1081 - 50000000.0 * sc[16] * x2354 +
    50000000.0 * sc[16] * x742 - 60000000.0 * sc[19] * x1767 +
    60000000.0 * sc[19] * x1833 - 30000000.0 * sc[2] * x1767 +
    30000000.0 * sc[2] * x1833 - 48000000.0 * sc[2] * x1894 +
    48000000.0 * sc[2] * x1896 + 100000000.0 * sc[2] * x659 +
    4.08 * sc[2] * exp(x2185) - 40000000.0 * sc[3] * x1704 +
    40000000.0 * sc[3] * x1706 - 50000000.0 * sc[4] * x1767 +
    50000000.0 * sc[4] * x1833 + sc[4] * x9124 - 8480000.0 * sc[8] * x1767 +
    8480000.0 * sc[8] * x1833 + x1077 * x2187 + x1077 * x2321 + x1077 * x584 -
    x1081 * x2187 - x1081 * x2321 - x1081 * x584 + x1084 + x11050 * x2354 -
    x11050 * x742 - x11054 * x2354 + x11054 * x742 + x11080 + x114 -
    20000000.0 * x11481 * x364 + x1704 * x2065 - x1706 * x2065 + x173 * x635 -
    x1767 * x2317 + x1767 * x309 - 10.0 * x1767 * x869 - 10.0 * x1767 * x888 +
    x1833 * x2317 - x1833 * x309 + 10.0 * x1833 * x869 + 10.0 * x1833 * x888 +
    x1894 * x46 + x1894 * x863 - x1896 * x46 - x1896 * x863 + x1979 * x731 -
    x1986 * x731 + 10.0 * x433 * exp(-3019.29999482832 * invT + 2.0 * logT) +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x2354 + x742) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[332] =
    -sc[10] * x10666 - 90330000.0 * sc[10] * x1178 -
    14000000.0 * sc[11] * x1707 + 14000000.0 * sc[11] * x1709 -
    30000000.0 * sc[16] * x1083 + 30000000.0 * sc[16] * x1089 -
    50000000.0 * sc[16] * x1174 + 50000000.0 * sc[16] * x1231 -
    60000000.0 * sc[19] * x1835 + 60000000.0 * sc[19] * x1836 -
    30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 +
    100000000.0 * sc[2] * x820 - 40000000.0 * sc[3] * x1707 +
    40000000.0 * sc[3] * x1709 - 50000000.0 * sc[4] * x1835 +
    50000000.0 * sc[4] * x1836 - 8480000.0 * sc[8] * x1835 +
    8480000.0 * sc[8] * x1836 + x1083 * x2187 + x1083 * x2321 + x1083 * x584 -
    x1089 * x2187 - x1089 * x2321 - x1089 * x584 + x11050 * x1174 -
    x11050 * x1231 - x11054 * x1174 + x11054 * x1231 + x11080 + x1707 * x2065 -
    x1709 * x2065 + x173 * x635 - x1835 * x2317 + x1835 * x309 -
    10.0 * x1835 * x869 - 10.0 * x1835 * x888 + x1836 * x2317 - x1836 * x309 +
    10.0 * x1836 * x869 + 10.0 * x1836 * x888 + x1894 * x46 + x1894 * x863 -
    x1897 * x46 - x1897 * x863 + x1979 * x731 - x1992 * x731 + x2148 + x260 +
    10.0 * x433 * exp(-4025.7333264377598 * invT + 2.0 * logT) + x947 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1174 + x1231) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[355] =
    -120000000.0 * sc[10] * x1295 - 14000000.0 * sc[11] * x1711 +
    14000000.0 * sc[11] * x1719 - 30000000.0 * sc[16] * x1091 -
    50000000.0 * sc[16] * x116 + 30000000.0 * sc[16] * x1366 +
    50000000.0 * sc[16] * x81 - 60000000.0 * sc[19] * x1838 +
    60000000.0 * sc[19] * x1839 + 100000000.0 * sc[2] * x1135 -
    30000000.0 * sc[2] * x1838 + 30000000.0 * sc[2] * x1839 +
    48000000.0 * sc[2] * x1841 - 48000000.0 * sc[2] * x1904 -
    40000000.0 * sc[3] * x1711 + 40000000.0 * sc[3] * x1719 -
    50000000.0 * sc[4] * x1838 + 50000000.0 * sc[4] * x1839 -
    8480000.0 * sc[8] * x1838 + 8480000.0 * sc[8] * x1839 + x1046 +
    x1091 * x2187 + x1091 * x2321 + x1091 * x584 + x11050 * x116 -
    x11050 * x81 - x11054 * x116 + x11054 * x81 + x11080 - x1366 * x2187 -
    x1366 * x2321 - x1366 * x584 + x1495 + x1711 * x2065 - x1719 * x2065 +
    x173 * x635 - x1838 * x2317 + x1838 * x309 - 10.0 * x1838 * x869 -
    10.0 * x1838 * x888 + x1839 * x2317 - x1839 * x309 + 10.0 * x1839 * x869 +
    10.0 * x1839 * x888 - x1841 * x46 - x1841 * x863 - x1886 * x731 +
    x1904 * x46 + x1904 * x863 + x1999 * x731 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x116 + x81) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[378] =
    14000000.0 * sc[11] * x1731 - 30000000.0 * sc[16] * x1367 +
    30000000.0 * sc[16] * x1472 - 50000000.0 * sc[16] * x1625 +
    50000000.0 * sc[16] * x848 + 40000000.0 * sc[16] +
    60000000.0 * sc[19] * x1849 + 73400000.0 * sc[1] * x1849 +
    100000000.0 * sc[1] - 57000000.0 * sc[2] * x1625 +
    48000000.0 * sc[2] * x169 + 15000000.0 * sc[2] * x1731 +
    30000000.0 * sc[2] * x1849 + 57000000.0 * sc[2] * x848 +
    200000000.0 * sc[2] + 40000000.0 * sc[3] * x1731 +
    3200000.0 * sc[3] * x8290 + 50000000.0 * sc[4] * x1849 +
    8480000.0 * sc[8] * x1849 + 50000000.0 * sc[8] + x10176 + x1047 +
    2.69e+16 * x1094 * x11048 * x25 + x11022 + x11050 * x1625 - x11050 * x848 -
    x11054 * x1625 + x11054 * x848 + x11083 + x11099 + x11349 + x11381 +
    x11716 + x1367 * x2187 + x1367 * x2321 + x1367 * x584 - x1472 * x2187 -
    x1472 * x2321 - x1472 * x584 + 50000000.0 * x1473 - x169 * x46 -
    x169 * x863 - x1731 * x2065 + x1849 * x2134 + x1849 * x2317 - x1849 * x309 +
    10.0 * x1849 * x869 + 10.0 * x1849 * x888 - x1956 * x731 + x2095 + x2102 +
    x481 + 30000000.0 * x594 + x939 + x9912 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1625 + x848) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[401] =
    14000000.0 * sc[11] * x1739 - 30000000.0 * sc[16] * x1475 +
    50000000.0 * sc[16] * x851 + 30000000.0 * sc[16] * x854 +
    60000000.0 * sc[19] * x1852 + 73400000.0 * sc[1] * x1852 + sc[1] * x827 +
    100000000.0 * sc[2] * x1554 + 15000000.0 * sc[2] * x1739 +
    30000000.0 * sc[2] * x1852 + 48000000.0 * sc[2] * x1882 +
    57000000.0 * sc[2] * x851 + 40000000.0 * sc[3] * x1739 +
    18000.0 * sc[3] * x434 + 50000000.0 * sc[4] * x1852 +
    8480000.0 * sc[8] * x1852 + x10176 + x1047 + x1058 * x11050 -
    x1058 * x11054 + x11022 - x11050 * x851 + x11054 * x851 + x11083 + x11099 +
    x11184 + x11716 + x11735 + x1475 * x2187 + x1475 * x2321 + x1475 * x584 -
    x1739 * x2065 + x1852 * x2134 + x1852 * x2317 - x1852 * x309 +
    10.0 * x1852 * x869 + 10.0 * x1852 * x888 - x1882 * x46 - x1882 * x863 -
    x1956 * x731 + x2035 + x2095 - x2187 * x854 +
    2.69e+21 * x2313 * x776 * x881 - x2321 * x854 + x434 * x635 + x481 -
    x584 * x854 + x939 + x9912 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1058 + x851) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[424] =
    14000000.0 * sc[11] * x1661 + 30000000.0 * sc[16] * x1563 +
    50000000.0 * sc[16] * x2058 + 60000000.0 * sc[19] * x1783 +
    73400000.0 * sc[1] * x1783 + 15000000.0 * sc[2] * x1661 +
    30000000.0 * sc[2] * x1783 + 57000000.0 * sc[2] * x2058 +
    48000000.0 * sc[2] * x232 + 40000000.0 * sc[3] * x1661 -
    40000000.0 * sc[3] * x1730 + 18000.0 * sc[3] * x769 +
    50000000.0 * sc[4] * x1783 + 8480000.0 * sc[8] * x1783 + x10176 + x1047 -
    x11050 * x2058 + x11054 * x2058 + x11083 + x11100 + x11735 + x11758 -
    x1563 * x2187 - x1563 * x2321 - x1563 * x584 - x1661 * x2065 +
    x1730 * x2065 + x1783 * x2134 + x1783 * x2317 - x1783 * x309 +
    10.0 * x1783 * x869 + 10.0 * x1783 * x888 - x1957 * x731 + x2035 + x2095 -
    x232 * x46 - x232 * x863 + x481 + x635 * x769 + x939 + x9912 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1058 + x2058) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[447] =
    -14000000.0 * sc[11] * x1671 + 14000000.0 * sc[11] * x1745 -
    50000000.0 * sc[16] * x1085 + 50000000.0 * sc[16] * x1160 +
    30000000.0 * sc[16] * x1469 - 30000000.0 * sc[16] * x1565 -
    60000000.0 * sc[19] * x1775 + 60000000.0 * sc[19] * x1782 -
    73400000.0 * sc[1] * x1775 + 73400000.0 * sc[1] * x1782 -
    57000000.0 * sc[2] * x1085 + 57000000.0 * sc[2] * x1160 -
    15000000.0 * sc[2] * x1671 + 15000000.0 * sc[2] * x1745 +
    48000000.0 * sc[2] * x1889 + 100000000.0 * sc[2] * x62 -
    40000000.0 * sc[3] * x1671 + 40000000.0 * sc[3] * x1745 -
    50000000.0 * sc[4] * x1775 + 50000000.0 * sc[4] * x1782 -
    8480000.0 * sc[8] * x1775 + 8480000.0 * sc[8] * x1782 + x1085 * x11050 -
    x1085 * x11054 - x11050 * x1160 + x11054 * x1160 + x11099 + x11184 +
    x11381 - x1469 * x2187 - x1469 * x2321 - x1469 * x584 + x1485 +
    x1565 * x2187 + x1565 * x2321 + x1565 * x584 + x1671 * x2065 -
    x1745 * x2065 - x1775 * x2134 - x1775 * x2317 + x1775 * x309 -
    10.0 * x1775 * x869 - 10.0 * x1775 * x888 + x1782 * x2134 + x1782 * x2317 -
    x1782 * x309 + 10.0 * x1782 * x869 + 10.0 * x1782 * x888 - x1889 * x46 -
    x1889 * x863 - x1972 * x731 + x2095 + 60000000.0 * x433 + x506 + x5604 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1085 + x1160) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[470] =
    -60000000.0 * sc[10] * x1263 + 14000000.0 * sc[11] * x865 +
    50000000.0 * sc[16] * x1299 + 30000000.0 * sc[16] * x1574 +
    60000000.0 * sc[19] * x1847 + 73400000.0 * sc[1] * x1847 +
    57000000.0 * sc[2] * x1299 + 30000000.0 * sc[2] * x1847 +
    48000000.0 * sc[2] * x1892 + 15000000.0 * sc[2] * x865 -
    40000000.0 * sc[3] * x1730 + 40000000.0 * sc[3] * x865 +
    50000000.0 * sc[4] * x1847 + 8480000.0 * sc[8] * x1847 + x10176 + x1047 -
    x11050 * x1299 + x11054 * x1299 + x11083 + x11100 + x11381 + x11735 +
    x11758 - x1574 * x2187 - x1574 * x2321 - x1574 * x584 - x1649 * x731 +
    x1730 * x2065 + x1847 * x2134 + x1847 * x2317 - x1847 * x309 +
    10.0 * x1847 * x869 + 10.0 * x1847 * x888 - x1892 * x46 - x1892 * x863 +
    x2035 - x2065 * x865 + x2095 + x481 + x939 + x9912 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (-x1058 + x1299) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[493] =
    14000000.0 * sc[11] * x1692 - 14000000.0 * sc[11] * x295 -
    30000000.0 * sc[16] * x1575 + 30000000.0 * sc[16] * x1580 +
    50000000.0 * sc[16] * x319 - 50000000.0 * sc[16] * x963 +
    60000000.0 * sc[19] * x1881 + 73400000.0 * sc[1] * x1881 +
    15000000.0 * sc[2] * x1692 + 30000000.0 * sc[2] * x1881 +
    48000000.0 * sc[2] * x1895 - 15000000.0 * sc[2] * x295 +
    57000000.0 * sc[2] * x319 - 57000000.0 * sc[2] * x963 +
    40000000.0 * sc[3] * x1692 - 40000000.0 * sc[3] * x295 +
    50000000.0 * sc[4] * x1881 + 8480000.0 * sc[8] * x1881 + x10176 + x1047 -
    x11050 * x319 + x11050 * x963 + x11054 * x319 - x11054 * x963 + x11100 +
    x11381 + x11757 + x1575 * x2187 + x1575 * x2321 + x1575 * x584 -
    x1580 * x2187 - x1580 * x2321 - x1580 * x584 - x1692 * x2065 +
    x1881 * x2134 + x1881 * x2317 - x1881 * x309 + 10.0 * x1881 * x869 +
    10.0 * x1881 * x888 - x1895 * x46 - x1895 * x863 - x1956 * x731 +
    x2065 * x295 + x2095 + x2102 + x481 + x9912 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 - x2065 * x678 +
     x2134 * x680 - x2187 * x677 + x2317 * x680 - x2321 * x677 - x309 * x680 +
     x46 * x683 - x584 * x677 + 10.0 * x680 * x869 + 10.0 * x680 * x888 +
     x683 * x863) *
      (x319 - x963) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 - x2065 * x679 +
     x2134 * x681 + x2317 * x681 - x309 * x681 - x46 * x684 +
     10.0 * x681 * x869 + 10.0 * x681 * x888 - x684 * x863) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-100000000.0 * sc[2] * x66 - 18000.0 * sc[3] * x230 - x230 * x635) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x603 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x2134 * x682 +
     x2317 * x682 - x309 * x682 + x596 * x731 + 10.0 * x682 * x869 +
     10.0 * x682 * x888) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x435 - x435 * x635 -
     x46 * x685 + x558 * x731 - x685 * x863) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[11] =
    14000000.0 * sc[11] * x1016 - 14000000.0 * sc[11] * x988 +
    30000000.0 * sc[2] * x830 - 30000000.0 * sc[2] * x951 +
    10000000.0 * sc[3] * x821 + x11054 * x1476 - x11054 * x973 -
    2640000.0 * x2094 * x649 + 2640000.0 * x2094 * x651 + x2325 * x649 -
    x2325 * x651 + x309 * x830 - x309 * x951 + x649 * x891 - x651 * x891 -
    1204.0 * x7379 + 1204.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1476 + x973) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-10000000.0 * sc[3] * x66) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973)));
  J[34] =
    -5280000.0 * sc[11] * sc[1] * x403 + 14000000.0 * sc[11] * x1073 -
    14000000.0 * sc[11] * x985 + 10000000.0 * sc[3] * x1623 + x1065 * x309 -
    x11054 * x1636 + x11054 * x1708 + x11824 - 2640000.0 * x2094 * x857 +
    2640000.0 * x2094 * x964 + x2325 * x857 - x2325 * x964 + x300 -
    x309 * x971 + x857 * x891 - x891 * x964 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1636 - x1708) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-10000000.0 * sc[3] * x66) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708)));
  J[57] =
    sc[10] * x2 * x7381 - sc[11] * x200 + 14000000.0 * sc[11] * x315 -
    14000000.0 * sc[11] * x318 + sc[17] * x7498 + 10000000.0 * sc[3] * x1723 -
    x11054 * x1772 + x11054 * x1794 + x11824 + x1664 * x309 -
    2640000.0 * x2094 * x965 + 2640000.0 * x2094 * x972 + x2325 * x965 -
    x2325 * x972 - x309 * x759 + x5692 + x891 * x965 - x891 * x972 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1772 - x1794) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-10000000.0 * sc[3] * x66) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794)));
  J[80] =
    14000000.0 * sc[11] * x1416 - 14000000.0 * sc[11] * x883 +
    10000000.0 * sc[3] * x1757 - 10000000.0 * x109 - x11054 * x1829 +
    x11054 * x1853 - 10000000.0 * x1136 - x1666 * x309 + x1672 * x309 -
    2640000.0 * x2094 * x974 + 2640000.0 * x2094 * x976 + x2325 * x974 -
    x2325 * x976 + x5771 + 2640000.0 * x594 * exp(-754.82499870708 * invT) -
    3612.0 * x7379 + 3612.0 * x7383 + x7528 + x891 * x974 - x891 * x976 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1829 - x1853) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853)));
  J[103] =
    14000000.0 * sc[11] * x1645 - 14000000.0 * sc[11] * x1659 - sc[11] * x9105 -
    30000000.0 * sc[2] * x1700 + 30000000.0 * sc[2] * x398 +
    10000000.0 * sc[3] * x1831 - x11054 * x1885 + x11054 * x1899 + x11824 -
    x1700 * x309 - 2640000.0 * x2094 * x977 + 2640000.0 * x2094 * x982 +
    x2325 * x977 - x2325 * x982 + x309 * x398 + x5778 + x891 * x977 -
    x891 * x982 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1885 - x1899) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899)));
  J[126] =
    14000000.0 * sc[11] * x1660 - 14000000.0 * sc[11] * x1662 -
    30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1768 +
    10000000.0 * sc[3] * x1844 + 2640000.0 * x1010 * x2094 - x1010 * x2325 -
    x1010 * x891 - x11054 * x1954 + x11054 * x1980 - x1760 * x309 +
    x1768 * x309 - 2640000.0 * x2094 * x987 + x2325 * x987 - 3612.0 * x7379 +
    3612.0 * x7383 + x891 * x987 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1954 - x1980) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-10000000.0 * sc[3] * x66) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980)));
  J[149] =
    sc[10] * x9252 + 14000000.0 * sc[11] * x1665 - 14000000.0 * sc[11] * x1670 -
    30000000.0 * sc[2] * x1770 + 30000000.0 * sc[2] * x1771 +
    10000000.0 * sc[3] * x351 - 2640000.0 * x1012 * x2094 + x1012 * x2325 +
    x1012 * x891 + 2640000.0 * x1014 * x2094 - x1014 * x2325 - x1014 * x891 -
    x11054 * x2022 + x11054 * x2045 + x11824 - x1770 * x309 + x1771 * x309 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x2022 - x2045) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045)));
  J[172] =
    14000000.0 * sc[11] * x1673 - 14000000.0 * sc[11] * x1674 +
    10000000.0 * sc[3] * x351 - 2640000.0 * x1015 * x2094 + x1015 * x2325 +
    x1015 * x891 + 2640000.0 * x1019 * x2094 - x1019 * x2325 - x1019 * x891 -
    x11054 * x2081 + x11054 * x2099 + x11824 - x1780 * x309 + x1781 * x309 +
    x6169 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x2081 - x2099) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099)));
  J[195] =
    14000000.0 * sc[11] * x1680 - 14000000.0 * sc[11] * x1681 +
    10000000.0 * sc[3] * x351 - 2640000.0 * x1022 * x2094 + x1022 * x2325 +
    x1022 * x891 + 2640000.0 * x1025 * x2094 - x1025 * x2325 - x1025 * x891 -
    x11054 * x2123 + x11054 * x2149 + x11824 - x1788 * x309 + x1789 * x309 +
    x6270 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x2123 - x2149) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149)));
  J[218] =
    14000000.0 * sc[11] * x1683 - 14000000.0 * sc[11] * x1689 -
    30000000.0 * sc[2] * x1791 + 30000000.0 * sc[2] * x1797 +
    10000000.0 * sc[3] * x816 - 2640000.0 * x1049 * x2094 + x1049 * x2325 +
    x1049 * x891 + 2640000.0 * x1053 * x2094 - x1053 * x2325 - x1053 * x891 -
    x11054 * x2138 + x11054 * x2197 - x1791 * x309 + x1797 * x309 -
    1204.0 * x7379 + 1204.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x2138 - x2197) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197)));
  J[241] =
    14000000.0 * sc[11] * x1693 - 14000000.0 * sc[11] * x1694 +
    14000000.0 * sc[12] * x1445 - 30000000.0 * sc[2] * x1801 +
    30000000.0 * sc[2] * x1804 + sc[2] * x2 * x7381 + 10000000.0 * sc[3] * x65 +
    sc[6] * x9252 - 2640000.0 * x1066 * x2094 + x1066 * x2325 + x1066 * x891 +
    2640000.0 * x1068 * x2094 - x1068 * x2325 - x1068 * x891 - x11054 * x2184 +
    x11054 * x2274 - x1801 * x309 + x1804 * x309 + x293 * x433 + x6360 -
    903.0 * x7379 + 903.0 * x7383 + x7827 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x2184 - x2274) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-10000000.0 * sc[3] * x66) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274)));
  J[264] =
    -refC * x2 * x40 + 14000000.0 * sc[11] * x1695 -
    14000000.0 * sc[11] * x1697 - 2640000.0 * ((sc[1]) * (sc[1])) * x403 -
    30000000.0 * sc[1] * x1252 - sc[1] * x560 + 30000000.0 * sc[2] * x1696 -
    30000000.0 * sc[2] * x1806 - sc[2] * x200 + 10000000.0 * sc[3] * x602 -
    sc[4] * x9105 + 2640000.0 * x1071 * x2094 - x1071 * x2325 - x1071 * x891 -
    x11054 * x1555 + x11054 * x2326 -
    3400000.0 * x1473 * exp(-347.21949940525701 * invT) + x1696 * x309 -
    x1806 * x309 - 2640000.0 * x2094 * x661 + x2325 * x661 -
    10000000.0 * x238 * x594 - x519 * x594 - 14000000.0 * x593 + x661 * x891 -
    2107.0 * x7379 + 2107.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1555 - x2326) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326)));
  J[287] =
    14000000.0 * sc[10] * x1445 + 14000000.0 * sc[11] * x1701 -
    14000000.0 * sc[11] * x1702 + 10000000.0 * sc[3] * x351 - x1021 * x11054 -
    2640000.0 * x1072 * x2094 + x1072 * x2325 + x1072 * x891 +
    2640000.0 * x1076 * x2094 - x1076 * x2325 - x1076 * x891 + x11054 * x2366 +
    x11824 - x1755 * x309 + x1761 * x309 + x6628 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x1021 - x2366) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366)));
  J[310] =
    14000000.0 * sc[11] * x1704 - 14000000.0 * sc[11] * x1706 -
    30000000.0 * sc[2] * x1767 + 30000000.0 * sc[2] * x1833 +
    10000000.0 * sc[3] * x659 - 2640000.0 * x1077 * x2094 + x1077 * x2325 +
    x1077 * x891 + 2640000.0 * x1081 * x2094 - x1081 * x2325 - x1081 * x891 +
    x11054 * x2354 - x11054 * x742 - x1767 * x309 + x1833 * x309 -
    1806.0 * x7379 + 1806.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x2354 + x742) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742)));
  J[333] =
    14000000.0 * sc[11] * x1707 - 14000000.0 * sc[11] * x1709 -
    30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 +
    10000000.0 * sc[3] * x820 - 2640000.0 * x1083 * x2094 + x1083 * x2325 +
    x1083 * x891 + 2640000.0 * x1089 * x2094 - x1089 * x2325 - x1089 * x891 +
    x11054 * x1174 - x11054 * x1231 - x1835 * x309 + x1836 * x309 -
    1806.0 * x7379 + 1806.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1174 + x1231) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)));
  J[356] =
    14000000.0 * sc[11] * x1711 - 14000000.0 * sc[11] * x1719 -
    30000000.0 * sc[2] * x1838 + 30000000.0 * sc[2] * x1839 +
    10000000.0 * sc[3] * x1135 - 2640000.0 * x1091 * x2094 + x1091 * x2325 +
    x1091 * x891 + x11054 * x116 - x11054 * x81 + 2640000.0 * x1366 * x2094 -
    x1366 * x2325 - x1366 * x891 - x1838 * x309 + x1839 * x309 -
    1806.0 * x7379 + 1806.0 * x7383 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x116 + x81) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-10000000.0 * sc[3] * x66) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81)));
  J[379] =
    14000000.0 * sc[11] * x1730 - 14000000.0 * sc[11] * x1731 +
    30000000.0 * sc[2] * x1849 + x11054 * x1625 - x11054 * x848 + x11829 -
    2640000.0 * x1367 * x2094 + x1367 * x2325 + x1367 * x891 +
    2640000.0 * x1472 * x2094 - x1472 * x2325 - x1472 * x891 + x1849 * x309 +
    x481 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1625 + x848) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-10000000.0 * sc[3] * x66) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848)));
  J[402] =
    14000000.0 * sc[11] * x1730 - 14000000.0 * sc[11] * x1739 +
    30000000.0 * sc[2] * x1852 + sc[2] * x7498 + 10000000.0 * sc[3] * x1554 -
    x11054 * x851 + x11824 + x11831 - x1846 * x309 + x1852 * x309 +
    2640000.0 * x2094 * x854 - x2325 * x854 + x481 - x854 * x891 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1058 + x851) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851)));
  J[425] =
    -14000000.0 * sc[11] * x1661 + 14000000.0 * sc[11] * x1730 +
    30000000.0 * sc[2] * x1783 - x11054 * x2058 + x11829 + x11831 +
    2640000.0 * x1563 * x2094 - x1563 * x2325 - x1563 * x891 + x1783 * x309 +
    x481 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1058 + x2058) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)));
  J[448] =
    14000000.0 * sc[11] * x1671 - 14000000.0 * sc[11] * x1745 +
    10000000.0 * sc[3] * x62 + x1085 * x11054 - x11054 * x1160 + x11824 +
    2640000.0 * x1469 * x2094 - x1469 * x2325 - x1469 * x891 -
    2640000.0 * x1565 * x2094 + x1565 * x2325 + x1565 * x891 - x1775 * x309 +
    x1782 * x309 + x506 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1085 + x1160) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160)));
  J[471] =
    14000000.0 * sc[11] * x1730 - 14000000.0 * sc[11] * x865 +
    30000000.0 * sc[2] * x1847 - x11054 * x1299 + x11829 + x11831 +
    2640000.0 * x1574 * x2094 - x1574 * x2325 - x1574 * x891 + x1847 * x309 +
    x481 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (-x1058 + x1299) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)));
  J[494] =
    -14000000.0 * sc[11] * x1692 + 14000000.0 * sc[11] * x295 +
    30000000.0 * sc[2] * x1881 - x11054 * x319 + x11054 * x963 + x11829 -
    2640000.0 * x1575 * x2094 + x1575 * x2325 + x1575 * x891 +
    2640000.0 * x1580 * x2094 - x1580 * x2325 - x1580 * x891 + x1881 * x309 +
    x481 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 +
     2640000.0 * x2094 * x677 - x2325 * x677 + x309 * x680 - x677 * x891) *
      (x319 - x963) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x309 * x681) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-10000000.0 * sc[3] * x66) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x603 + x309 * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963)));
  J[12] =
    sc[10] * x25 * x781 - 14000000.0 * sc[11] * x1016 +
    14000000.0 * sc[11] * x988 - 20000000.0 * sc[12] * x1431 +
    20000000.0 * sc[1] * x1884 + 96000000.0 * sc[2] * x1240 +
    18000.0 * sc[3] * x1235 + 5000000.0 * sc[4] * x1884 + x10281 +
    x1476 * x630 + x1491 * x649 - x1491 * x651 - x1529 * x830 + x1529 * x951 +
    x1544 * x726 - x1544 * x826 + x1578 * x1884 + x2093 * x830 - x2093 * x951 +
    x2263 * x830 - x2263 * x951 + x2322 * x830 - x2322 * x951 + x2324 * x830 -
    x2324 * x951 - x630 * x973 - x695 * x909 + x695 * x935 + x824 + x859 +
    x8884 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1476 + x973) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-18000.0 * sc[3] * x230) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[35] =
    -14000000.0 * sc[11] * x1073 + 14000000.0 * sc[11] * x985 + sc[17] * x1043 +
    20000000.0 * sc[1] * x1422 + 96000000.0 * sc[2] * x476 +
    sc[3] * x1061 * x1493 + 18000.0 * sc[3] * x211 + 5000000.0 * sc[4] * x1422 +
    x10400 - x1065 * x1529 + x1065 * x2093 + x1065 * x2263 + x1065 * x2322 +
    x1065 * x2324 + x1422 * x1578 - 20000000.0 * x1439 + x1491 * x857 -
    x1491 * x964 + x1504 * x695 + x1529 * x971 - x1544 * x950 - x1636 * x630 +
    x1708 * x630 + x2088 * x25 * x433 - x2093 * x971 - x2263 * x971 -
    x2322 * x971 - x2324 * x971 - 20000000.0 * x513 - x523 * x695 + x533 +
    x5506 + x5603 + x8964 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1636 - x1708) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-18000.0 * sc[3] * x230) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[58] =
    -14000000.0 * sc[11] * x315 + 14000000.0 * sc[11] * x318 - sc[12] * x7522 +
    0.384 * sc[14] * exp(x2273) + 20000000.0 * sc[1] * x1678 +
    96000000.0 * sc[2] * x1654 + 18000.0 * sc[3] * x224 +
    5000000.0 * sc[4] * x1678 + x10445 - 96000000.0 * x1319 + x140 * x1544 +
    x1491 * x965 - x1491 * x972 - x1529 * x1664 + x1529 * x759 - x1544 * x1556 +
    x1578 * x1678 + x1656 * x695 + x1664 * x2093 + x1664 * x2263 +
    x1664 * x2322 + x1664 * x2324 - x1721 * x695 - x1772 * x630 + x1794 * x630 -
    x2093 * x759 - x2263 * x759 - x2322 * x759 - x2324 * x759 + x533 + x5603 +
    x5688 - 96000000.0 * x581 + x9011 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1772 - x1794) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-18000.0 * sc[3] * x230) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[81] =
    -sc[12] * x8351 + 20000000.0 * sc[1] * x1765 + 96000000.0 * sc[2] * x1733 +
    5000000.0 * sc[4] * x1765 + x10467 + x11245 + x1398 * x182 + x1491 * x974 -
    x1491 * x976 + x1493 * x234 + x1529 * x1666 - x1529 * x1672 -
    x1544 * x1627 + x1544 * x1630 + x1578 * x1765 - x1666 * x2093 -
    x1666 * x2263 - x1666 * x2322 - x1666 * x2324 + x1672 * x2093 +
    x1672 * x2263 + x1672 * x2322 + x1672 * x2324 + x1762 * x695 -
    x1764 * x695 - x1829 * x630 + x1853 * x630 + x533 + x5603 + x5770 + x9052 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1829 - x1853) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-18000.0 * sc[3] * x230) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[104] =
    20000000.0 * sc[1] * x1879 + 96000000.0 * sc[2] * x219 +
    5000000.0 * sc[4] * x1879 + x10490 + x11274 - 5000000.0 * x1439 +
    x1491 * x977 - x1491 * x982 + x1529 * x1700 - x1529 * x398 - x1544 * x1677 +
    x1544 * x1699 + x1578 * x1879 - x1700 * x2093 - x1700 * x2263 -
    x1700 * x2322 - x1700 * x2324 - x1776 * x695 + x1798 * x695 - x1885 * x630 +
    x1899 * x630 + x2093 * x398 + x2262 * x433 + x2263 * x398 + x2322 * x398 +
    x2324 * x398 - 5000000.0 * x513 + x533 + x5603 + x5860 + 20000000.0 * x594 +
    x9152 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1885 - x1899) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-18000.0 * sc[3] * x230) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[127] =
    -14000000.0 * sc[11] * x1660 + 14000000.0 * sc[11] * x1662 -
    5000000.0 * sc[12] * x1424 + 20000000.0 * sc[1] * x1888 +
    96000000.0 * sc[2] * x1946 + 18000.0 * sc[3] * x1793 +
    5000000.0 * sc[4] * x1888 - x1010 * x1491 + x10530 +
    1.0032110091743101e+19 * x1279 * x960 + x1491 * x987 - x1513 * x877 +
    x1513 * x904 + x1529 * x1760 - x1529 * x1768 + x1544 * x1668 -
    x1544 * x1741 + x1578 * x1888 - x1760 * x2093 - x1760 * x2263 -
    x1760 * x2322 - x1760 * x2324 + x1768 * x2093 + x1768 * x2263 +
    x1768 * x2322 + x1768 * x2324 + x1779 * x695 + 8100000000000.0 * x1850 -
    x1856 * x695 - x1954 * x630 + x1980 * x630 +
    3.5867302325581401e+30 * x255 * x508 -
    3.5867302325581401e+30 * x255 * x994 +
    x313 * (12.0 * x271 * x688 + 1.68 * x601 * x688) + 3.042e+16 * x528 * x774 -
    x579 * (12.0 * x271 * x688 + 1.68 * x601 * x688) + x615 -
    1.0032110091743101e+19 * x674 * x960 - 3.042e+16 * x774 * x899 + x9223 -
    8100000000000.0 * x958 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1954 - x1980) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-18000.0 * sc[3] * x230) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[150] =
    -14000000.0 * sc[11] * x1665 + 14000000.0 * sc[11] * x1670 +
    20000000.0 * sc[1] * x1419 + 96000000.0 * sc[2] * x1985 +
    18000.0 * sc[3] * x1842 + 5000000.0 * sc[4] * x1419 + x10037 +
    x1012 * x1491 - x1014 * x1491 + x10553 + x1529 * x1770 - x1529 * x1771 -
    x1544 * x1759 + x1544 * x1769 - x1770 * x2093 - x1770 * x2263 -
    x1770 * x2324 + x1771 * x2093 + x1771 * x2263 + x1771 * x2324 +
    x1851 * x695 - x1878 * x695 - x2022 * x630 + x2045 * x630 + x2318 * x433 +
    x533 + x5603 + 20000000.0 * x594 + x6092 + x9275 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x2022 - x2045) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-18000.0 * sc[3] * x230) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[173] =
    -14000000.0 * sc[11] * x1673 + 14000000.0 * sc[11] * x1674 +
    20000000.0 * sc[1] * x1893 + 5000000.0 * sc[4] * x1893 + x1015 * x1491 -
    x1019 * x1491 + x10576 + x1529 * x1780 - x1529 * x1781 - x1544 * x1786 +
    x1544 * x202 + x1578 * x1893 - x1780 * x2093 - x1780 * x2263 -
    x1780 * x2322 - x1780 * x2324 + x1781 * x2093 + x1781 * x2263 +
    x1781 * x2322 + x1781 * x2324 - x1898 * x695 + x1906 * x695 - x2081 * x630 +
    x2099 * x630 + x341 * x433 + x401 + x533 + x6168 + x6188 + x9315 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x2081 - x2099) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-18000.0 * sc[3] * x230) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[196] =
    -14000000.0 * sc[11] * x1680 + 14000000.0 * sc[11] * x1681 +
    20000000.0 * sc[1] * x1727 + 96000000.0 * sc[2] * x453 +
    18000.0 * sc[3] * x1238 + 5000000.0 * sc[4] * x1727 + x1022 * x1491 -
    x1025 * x1491 + x10628 + x1529 * x1788 - x1529 * x1789 - x1544 * x1792 +
    x1544 * x1832 + x1578 * x1727 - x1788 * x2093 - x1788 * x2263 -
    x1788 * x2322 - x1788 * x2324 + x1789 * x2093 + x1789 * x2263 +
    x1789 * x2322 + x1789 * x2324 + x1947 * x695 - x1958 * x695 - x2123 * x630 +
    x2149 * x630 + x533 + x5603 + x6269 + x9375 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x2123 - x2149) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-18000.0 * sc[3] * x230) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[219] =
    -14000000.0 * sc[11] * x1683 + 14000000.0 * sc[11] * x1689 +
    20000000.0 * sc[1] * x637 + 96000000.0 * sc[2] * x2020 +
    5000000.0 * sc[4] * x637 + x1049 * x1491 - x1053 * x1491 + x10662 +
    x1529 * x1791 - x1529 * x1797 - x1544 * x1834 + x1544 * x1848 +
    x1578 * x637 - x1791 * x2093 - x1791 * x2263 - x1791 * x2322 -
    x1791 * x2324 + x1797 * x2093 + x1797 * x2263 + x1797 * x2322 +
    x1797 * x2324 + x1959 * x695 - x1964 * x695 - x2138 * x630 + x2197 * x630 +
    x6347 + x859 + x9415 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x2138 - x2197) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-18000.0 * sc[3] * x230) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[242] =
    -sc[0] * sc[10] * x25 * x781 * x918 + sc[0] * x25 * x781 +
    20000000.0 * sc[1] * x1003 + 96000000.0 * sc[2] * x2021 +
    5000000.0 * sc[4] * x1003 + x1003 * x1578 + x1066 * x1491 - x1068 * x1491 +
    x10710 + x11500 + 2.5080275229357798e+18 * x1279 * x960 + x1529 * x1801 -
    x1529 * x1804 + x1544 * x1840 - x1544 * x1861 - x1801 * x2093 -
    x1801 * x2263 - x1801 * x2322 - x1801 * x2324 + x1804 * x2093 +
    x1804 * x2263 + x1804 * x2322 + x1804 * x2324 + 2025000000000.0 * x1850 +
    x1965 * x695 - x2184 * x630 + x2274 * x630 + x231 +
    5070000000000000.0 * x25 * x774 * x899 * x918 +
    8.9668255813953501e+29 * x255 * x508 -
    8.9668255813953501e+29 * x255 * x994 +
    x313 * (3.0 * x271 * x688 + 0.42 * x601 * x688) +
    7605000000000000.0 * x528 * x774 -
    x579 * (3.0 * x271 * x688 + 0.42 * x601 * x688) - x646 * x695 -
    2.5080275229357798e+18 * x674 * x960 - 7605000000000000.0 * x774 * x899 +
    x9470 - 2025000000000.0 * x958 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x2184 - x2274) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-18000.0 * sc[3] * x230) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[265] =
    -14000000.0 * sc[11] * x1695 + 14000000.0 * sc[11] * x1697 +
    20000000.0 * sc[1] * x637 + 96000000.0 * sc[2] * x930 +
    5000000.0 * sc[4] * x637 - x1071 * x1491 + x10733 + x1491 * x661 -
    x1529 * x1696 + x1529 * x1806 - x1544 * x1845 + x1544 * x725 -
    x1555 * x630 + x1578 * x637 + x1696 * x2093 + x1696 * x2263 +
    x1696 * x2322 + x1696 * x2324 - x1806 * x2093 - x1806 * x2263 -
    x1806 * x2322 - x1806 * x2324 + x2326 * x630 + 14000000.0 * x593 +
    x655 * x695 - x695 * x908 + x859 + x923 + x9508 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1555 - x2326) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[288] =
    -20000000.0 * sc[0] * x1431 - 14000000.0 * sc[10] * x1445 -
    14000000.0 * sc[11] * x1701 + 14000000.0 * sc[11] * x1702 +
    20000000.0 * sc[1] * x1572 + 96000000.0 * sc[2] * x1502 - sc[2] * x7522 +
    18000.0 * sc[3] * x228 - sc[3] * x8351 -
    24000000.0 * sc[4] * x1356 * x1358 + 5000000.0 * sc[4] * x1572 -
    5000000.0 * sc[5] * x1424 - 24000000.0 * sc[6] * x1976 +
    24000000.0 * sc[6] * x1977 + x10131 - x1021 * x630 + x1072 * x1491 +
    x10758 - x1076 * x1491 - 18000.0 * x1220 * x1223 - x1312 * x594 -
    94600000.0 * x1473 * exp(259.15658288943098 * invT) + x1529 * x1755 -
    x1529 * x1761 - x1544 * x1880 + x1544 * x1887 + x1663 - x1755 * x2093 -
    x1755 * x2263 - x1755 * x2324 + x1761 * x2093 + x1761 * x2263 +
    x1761 * x2324 + x1976 * x695 - x1977 * x695 + x2366 * x630 - x433 * x758 -
    96000000.0 * x440 * x444 + x533 + x5603 - 1350000000000.0 * x644 * x776 -
    5070000000000000.0 * x774 * x776 *
      exp(-g_RT[0] - g_RT[10] + g_RT[12] + x1471) +
    x9562 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x1021 - x2366) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-18000.0 * sc[3] * x230) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[311] =
    -14000000.0 * sc[11] * x1704 + 14000000.0 * sc[11] * x1706 + x1077 * x1491 +
    x10782 - x1081 * x1491 + x1278 + x1438 * x1578 + x1529 * x1767 -
    x1529 * x1833 - x1544 * x1894 + x1544 * x1896 - x1767 * x2093 -
    x1767 * x2263 - x1767 * x2322 - x1767 * x2324 + x1833 * x2093 +
    x1833 * x2263 + x1833 * x2322 + x1833 * x2324 + x1979 * x695 -
    x1986 * x695 + x2142 + x2354 * x630 + x401 - x630 * x742 + x9594 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x2354 + x742) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-18000.0 * sc[3] * x230) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[334] =
    -14000000.0 * sc[11] * x1707 + 14000000.0 * sc[11] * x1709 +
    96000000.0 * sc[2] * x488 + 0.384 * sc[2] * exp(x2273) + x10283 +
    x1083 * x1491 - x1089 * x1491 + x1174 * x630 - x1231 * x630 + x1278 +
    x1438 * x1578 + x1529 * x1835 - x1529 * x1836 - x1544 * x1894 +
    x1544 * x1897 - x1835 * x2093 - x1835 * x2263 - x1835 * x2322 -
    x1835 * x2324 + x1836 * x2093 + x1836 * x2263 + x1836 * x2322 +
    x1836 * x2324 + x1979 * x695 - x1992 * x695 + x961 + x9636 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1174 + x1231) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-18000.0 * sc[3] * x230) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[357] =
    -14000000.0 * sc[11] * x1711 + 14000000.0 * sc[11] * x1719 +
    96000000.0 * sc[2] * x1716 + x10854 + x1091 * x1491 + x116 * x630 + x1278 -
    x1366 * x1491 + x1438 * x1578 + x1529 * x1838 - x1529 * x1839 +
    x1544 * x1841 - x1544 * x1904 + x1652 - x1838 * x2093 - x1838 * x2263 -
    x1838 * x2322 - x1838 * x2324 + x1839 * x2093 + x1839 * x2263 +
    x1839 * x2322 + x1839 * x2324 - x1886 * x695 + x1999 * x695 - x630 * x81 +
    x9675 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x116 + x81) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-18000.0 * sc[3] * x230) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[380] =
    14000000.0 * sc[11] * x1731 + 16040000.0 * sc[2] * x1956 + x10180 + x10883 +
    x11083 + x1367 * x1491 - x1472 * x1491 - x1529 * x1849 + x1544 * x169 +
    x1625 * x630 + x1849 * x2093 + x1849 * x2263 + x1849 * x2322 +
    x1849 * x2324 + x1849 * x748 - x1956 * x695 + x401 + x472 + x605 -
    x630 * x848 + x8077 + x8759 + x9705 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1625 + x848) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-18000.0 * sc[3] * x230) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[403] =
    14000000.0 * sc[11] * x1739 + sc[1] * x1043 + 16040000.0 * sc[2] * x1956 +
    18000.0 * sc[3] * x434 + 30000000.0 * sc[4] * x1739 +
    20000000.0 * sc[4] * x854 + x10180 + x1058 * x630 + x1060 * x851 + x10883 +
    x11083 + x1475 * x1491 - x1491 * x854 - x1529 * x1852 + x1544 * x1882 +
    x1852 * x2027 + x1852 * x2093 + x1852 * x2263 + x1852 * x2322 +
    x1852 * x2324 + x1852 * x748 - x1956 * x695 + x401 + x472 + x497 -
    x630 * x851 + x8077 + x8759 + x9753 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1058 + x851) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-18000.0 * sc[3] * x230) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[426] =
    14000000.0 * sc[11] * x1661 + 16040000.0 * sc[2] * x1957 +
    18000.0 * sc[3] * x769 + 20000000.0 * sc[4] * x1563 +
    30000000.0 * sc[4] * x1661 + 24000000.0 * sc[6] * x1957 + x10180 +
    x1058 * x630 + x1060 * x2058 + x10883 + x11083 + x1475 * x1491 -
    x1491 * x1563 - x1529 * x1783 + x1544 * x232 + x1783 * x2027 +
    x1783 * x2093 + x1783 * x2263 + x1783 * x2322 + x1783 * x2324 +
    x1783 * x748 - x1957 * x695 - x2058 * x630 + x401 + x472 + x497 + x8077 +
    x8759 + x9752 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1058 + x2058) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-18000.0 * sc[3] * x230) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[449] =
    -14000000.0 * sc[11] * x1671 + 14000000.0 * sc[11] * x1745 +
    20000000.0 * sc[1] * x1893 + 5000000.0 * sc[4] * x1893 + x1085 * x630 +
    x10934 - x1160 * x630 - x1469 * x1491 + x1491 * x1565 + x1529 * x1775 -
    x1529 * x1782 - x1544 * x1843 + x1544 * x1889 + x1578 * x1893 -
    x1775 * x2093 - x1775 * x2263 - x1775 * x2322 - x1775 * x2324 +
    x1782 * x2093 + x1782 * x2263 + x1782 * x2322 + x1782 * x2324 +
    x1890 * x695 - x1972 * x695 + x401 + x43 + x533 + x6188 + x9805 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1085 + x1160) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-18000.0 * sc[3] * x230) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[472] =
    14000000.0 * sc[11] * x865 + 96000000.0 * sc[2] * x1318 +
    16040000.0 * sc[2] * x1649 + 20000000.0 * sc[4] * x1574 +
    30000000.0 * sc[4] * x865 + 24000000.0 * sc[6] * x1649 + x10180 +
    x1058 * x630 + x1060 * x1299 + x10883 + x11083 - x1299 * x630 +
    x1475 * x1491 - x1491 * x1574 - x1529 * x1847 + x1544 * x1892 -
    x1649 * x695 + x1847 * x2027 + x1847 * x2093 + x1847 * x2263 +
    x1847 * x2322 + x1847 * x2324 + x1847 * x748 + x472 + x497 + x8077 + x8759 +
    x9831 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (-x1058 + x1299) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-18000.0 * sc[3] * x230) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[495] =
    14000000.0 * sc[11] * x1692 - 14000000.0 * sc[11] * x295 +
    16040000.0 * sc[2] * x1956 + x10180 + x10883 + x1491 * x1575 -
    x1491 * x1580 - x1529 * x1881 + x1544 * x1895 + x1881 * x2093 +
    x1881 * x2263 + x1881 * x2322 + x1881 * x2324 + x1881 * x748 -
    x1956 * x695 - x319 * x630 + x401 + x472 + x501 + x630 * x963 + x8077 +
    x8759 + x9699 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 - x1491 * x677 -
     x1529 * x680 - x1544 * x683 + x2027 * x680 + x2093 * x680 + x2263 * x680 +
     x2270 * x683 + x2322 * x680 + x2324 * x680 + x354 * x680 + x680 * x748) *
      (x319 - x963) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 - x1529 * x681 +
     x1544 * x684 + x2027 * x681 + x2093 * x681 + x2263 * x681 - x2270 * x684 +
     x2322 * x681 + x2324 * x681 + x354 * x681 + x681 * x748) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-18000.0 * sc[3] * x230) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-96000000.0 * sc[2] * x490 - 24000000.0 * sc[6] * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-20000000.0 * sc[1] * x639 - 16040000.0 * sc[2] * x596 -
     10000000.0 * sc[2] * x639 - 5000000.0 * sc[4] * x639 -
     24000000.0 * sc[6] * x596 - x1529 * x682 - x1578 * x639 + x2027 * x682 +
     x2093 * x682 - x2182 * x639 + x2263 * x682 + x2322 * x682 + x2324 * x682 +
     x2363 * x596 + x354 * x682 + x596 * x695 + x682 * x748) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-16040000.0 * sc[2] * x558 - 18000.0 * sc[3] * x435 -
     24000000.0 * sc[6] * x558 + x1544 * x685 - x2270 * x685 + x2363 * x558 +
     x558 * x695) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[13] =
    -30000000.0 * sc[13] * x1149 - 32000000.0 * sc[13] * x1369 -
    50000000.0 * sc[16] * x1476 + 50000000.0 * sc[16] * x973 +
    30000000.0 * sc[1] * x726 + 100000000.0 * sc[1] * x821 -
    30000000.0 * sc[1] * x826 + 30110000.0 * sc[4] * x726 -
    30110000.0 * sc[4] * x826 + 392000.0 * sc[8] * x726 -
    392000.0 * sc[8] * x826 + x1379 + x2077 * x726 - x2077 * x826 -
    x2187 * x649 + x2187 * x651 + x2316 * x726 - x2316 * x826 + x46 * x726 -
    x46 * x826 + x687 + x703 * x821 - 10.0 * x830 * x869 + 10.0 * x869 * x951 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1476 + x973) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[36] =
    -100000000.0 * sc[13] * x1133 + 50000000.0 * sc[16] * x1636 -
    50000000.0 * sc[16] * x1708 + sc[16] * x790 + sc[17] * x1208 +
    30000000.0 * sc[1] * x1061 + 100000000.0 * sc[1] * x1623 -
    30000000.0 * sc[1] * x950 + sc[3] * x1061 * x2315 +
    30110000.0 * sc[4] * x1061 - 30110000.0 * sc[4] * x950 +
    392000.0 * sc[8] * x1061 - 392000.0 * sc[8] * x950 + x1061 * x46 -
    10.0 * x1065 * x869 - 100000000.0 * x109 - 100000000.0 * x1136 + x146 +
    x1623 * x703 + x2029 - x2187 * x857 + x2187 * x964 - x2316 * x950 +
    30000000.0 * x234 - x46 * x950 + x5591 + 10.0 * x869 * x971 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1636 - x1708) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[59] =
    -20.4 * sc[13] * exp(x2185) + 50000000.0 * sc[16] * x1772 -
    50000000.0 * sc[16] * x1794 + 30000000.0 * sc[1] * x140 -
    30000000.0 * sc[1] * x1556 + 100000000.0 * sc[1] * x1723 +
    30110000.0 * sc[4] * x140 - 30110000.0 * sc[4] * x1556 +
    392000.0 * sc[8] * x140 - 392000.0 * sc[8] * x1556 + x140 * x2077 +
    x140 * x2316 + x140 * x46 + x146 - x1556 * x2077 - x1556 * x2316 -
    x1556 * x46 - 10.0 * x1664 * x869 + x1723 * x703 - x2187 * x965 +
    x2187 * x972 + x5591 + 10.0 * x759 * x869 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1772 - x1794) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[82] =
    50000000.0 * sc[16] * x1829 - 50000000.0 * sc[16] * x1853 -
    30000000.0 * sc[1] * x1627 + 30000000.0 * sc[1] * x1630 +
    100000000.0 * sc[1] * x1757 - 30110000.0 * sc[4] * x1627 +
    30110000.0 * sc[4] * x1630 - 392000.0 * sc[8] * x1627 +
    392000.0 * sc[8] * x1630 + x146 - x1627 * x2077 - x1627 * x2316 -
    x1627 * x46 + x1630 * x2077 + x1630 * x2316 + x1630 * x46 +
    10.0 * x1666 * x869 - 10.0 * x1672 * x869 + x1757 * x703 - x2187 * x974 +
    x2187 * x976 + x2315 * x234 + x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1829 - x1853) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[105] =
    -sc[13] * x5840 - sc[13] * x9124 + 50000000.0 * sc[16] * x1885 -
    50000000.0 * sc[16] * x1899 - 30000000.0 * sc[1] * x1677 +
    30000000.0 * sc[1] * x1699 + 100000000.0 * sc[1] * x1831 -
    30110000.0 * sc[4] * x1677 + 30110000.0 * sc[4] * x1699 -
    392000.0 * sc[8] * x1677 + 392000.0 * sc[8] * x1699 + x146 - x1677 * x2077 -
    x1677 * x2316 - x1677 * x46 + x1699 * x2077 + x1699 * x2316 + x1699 * x46 +
    10.0 * x1700 * x869 + x1831 * x703 - x2187 * x977 + x2187 * x982 +
    30110000.0 * x234 - 10.0 * x398 * x869 + x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1885 - x1899) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[128] =
    sc[10] * x1668 * x805 - 14700000000.0 * sc[13] * x11851 -
    30110000.0 * sc[13] * x1187 + 50000000.0 * sc[16] * x1954 -
    50000000.0 * sc[16] * x1980 + 30000000.0 * sc[1] * x1668 -
    30000000.0 * sc[1] * x1741 + 100000000.0 * sc[1] * x1844 +
    30110000.0 * sc[4] * x1668 - 30110000.0 * sc[4] * x1741 +
    392000.0 * sc[8] * x1668 - 392000.0 * sc[8] * x1741 + x1010 * x2187 +
    x10377 + 45018.75 * x11852 * x11854 - 45018.75 * x11852 * x11856 +
    x1668 * x2316 - x1741 * x2316 - x1741 * x46 + 10.0 * x1760 * x869 -
    10.0 * x1768 * x869 + x1844 * x703 - x2187 * x987 + x5977 +
    14700000000.0 * x7 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1954 - x1980) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[151] =
    -sc[13] * x1144 + 50000000.0 * sc[16] * x2022 -
    50000000.0 * sc[16] * x2045 - 30000000.0 * sc[1] * x1759 +
    30000000.0 * sc[1] * x1769 - 30110000.0 * sc[4] * x1759 +
    30110000.0 * sc[4] * x1769 - 392000.0 * sc[8] * x1759 +
    392000.0 * sc[8] * x1769 - x1012 * x2187 + x1014 * x2187 + x11865 -
    x1759 * x2077 - x1759 * x2316 - x1759 * x46 + x1769 * x2077 +
    x1769 * x2316 + x1769 * x46 + 10.0 * x1770 * x869 - 10.0 * x1771 * x869 +
    x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x2022 - x2045) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[174] =
    50000000.0 * sc[16] * x2081 - 50000000.0 * sc[16] * x2099 -
    30000000.0 * sc[1] * x1786 + 30000000.0 * sc[1] * x202 -
    30110000.0 * sc[4] * x1786 + 30110000.0 * sc[4] * x202 -
    392000.0 * sc[8] * x1786 + 392000.0 * sc[8] * x202 - x1015 * x2187 +
    x1019 * x2187 + x11865 + 10.0 * x1780 * x869 - 10.0 * x1781 * x869 -
    x1786 * x2077 - x1786 * x2316 - x1786 * x46 + x202 * x2077 + x202 * x2316 +
    x202 * x46 + x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x2081 - x2099) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[197] =
    sc[10] * x9336 + 50000000.0 * sc[16] * x2123 - 50000000.0 * sc[16] * x2149 -
    30000000.0 * sc[1] * x1792 + 30000000.0 * sc[1] * x1832 -
    30110000.0 * sc[4] * x1792 + 30110000.0 * sc[4] * x1832 -
    392000.0 * sc[8] * x1792 + 392000.0 * sc[8] * x1832 - x0 * x10375 -
    x1022 * x2187 + x1025 * x2187 + x11865 + 10.0 * x1788 * x869 -
    10.0 * x1789 * x869 - x1792 * x2077 - x1792 * x2316 - x1792 * x46 +
    x1832 * x2077 + x1832 * x2316 + x1832 * x46 + 392000.0 * x234 + x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x2123 - x2149) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[220] =
    -392000.0 * sc[13] * x1192 + 50000000.0 * sc[16] * x2138 -
    50000000.0 * sc[16] * x2197 - 30000000.0 * sc[1] * x1834 +
    30000000.0 * sc[1] * x1848 + 100000000.0 * sc[1] * x816 -
    30110000.0 * sc[4] * x1834 + 30110000.0 * sc[4] * x1848 -
    392000.0 * sc[8] * x1834 + 392000.0 * sc[8] * x1848 - x1049 * x2187 +
    x1053 * x2187 + x1379 + 10.0 * x1791 * x869 - 10.0 * x1797 * x869 -
    x1834 * x2077 - x1834 * x2316 - x1834 * x46 + x1848 * x2077 +
    x1848 * x2316 + x1848 * x46 + x687 + x703 * x816 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x2138 - x2197) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[243] =
    -50000000.0 * sc[13] * x1114 - 20000000.0 * sc[13] * x11481 * x1219 -
    3675000000.0 * sc[13] * x11851 + 50000000.0 * sc[16] * x2184 -
    50000000.0 * sc[16] * x2274 + 30000000.0 * sc[1] * x1840 -
    30000000.0 * sc[1] * x1861 + 100000000.0 * sc[1] * x65 +
    30110000.0 * sc[4] * x1840 - 30110000.0 * sc[4] * x1861 +
    392000.0 * sc[8] * x1840 - 392000.0 * sc[8] * x1861 + sc[8] * x9336 +
    x10377 - x1066 * x2187 + x1068 * x2187 + 11254.6875 * x11852 * x11854 -
    11254.6875 * x11852 * x11856 + 10.0 * x1801 * x869 - 10.0 * x1804 * x869 +
    x1840 * x2316 + x1840 * x46 - x1861 * x2316 - x1861 * x46 + x2186 * x594 +
    x234 * x805 + x6473 + x65 * x703 + 3675000000.0 * x7 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x2184 - x2274) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[266] =
    50000000.0 * sc[16] * x1555 - 50000000.0 * sc[16] * x2326 -
    30000000.0 * sc[1] * x1845 + 100000000.0 * sc[1] * x602 +
    30000000.0 * sc[1] * x725 - 30110000.0 * sc[4] * x1845 +
    30110000.0 * sc[4] * x725 - 392000.0 * sc[8] * x1845 +
    392000.0 * sc[8] * x725 + x1071 * x2187 + x1379 - 10.0 * x1696 * x869 +
    10.0 * x1806 * x869 - x1845 * x2077 - x1845 * x2316 - x1845 * x46 +
    x2077 * x725 - x2187 * x661 + x2316 * x725 + x46 * x725 + x602 * x703 +
    x687 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1555 - x2326) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[289] =
    50000000.0 * sc[16] * x1021 - 50000000.0 * sc[16] * x2366 -
    30000000.0 * sc[1] * x1880 + 30000000.0 * sc[1] * x1887 -
    30110000.0 * sc[4] * x1880 + 30110000.0 * sc[4] * x1887 -
    392000.0 * sc[8] * x1880 + 392000.0 * sc[8] * x1887 - x1072 * x2187 +
    x1076 * x2187 + x11865 + 10.0 * x1755 * x869 - 10.0 * x1761 * x869 -
    x1880 * x2077 - x1880 * x2316 - x1880 * x46 + x1887 * x2077 +
    x1887 * x2316 + x1887 * x46 + x5591 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x1021 - x2366) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[312] =
    -30000000.0 * sc[0] * x1149 - 32000000.0 * sc[0] * x1369 -
    50000000.0 * sc[10] * x1114 - 50000000.0 * sc[16] * x2354 +
    50000000.0 * sc[16] * x742 - 100000000.0 * sc[1] * x1133 +
    30000000.0 * sc[1] * x1896 + 100000000.0 * sc[1] * x659 -
    20.4 * sc[2] * exp(x2185) - 30110000.0 * sc[4] * x1894 +
    30110000.0 * sc[4] * x1896 - sc[4] * x5840 - sc[4] * x9124 -
    30110000.0 * sc[5] * x1187 - sc[6] * x1144 - 392000.0 * sc[8] * x1894 +
    392000.0 * sc[8] * x1896 - 392000.0 * sc[9] * x1192 - x10759 -
    x1077 * x2187 + x1081 * x2187 + x1117 - 10000000.0 * x11481 * x364 -
    2450000000.0 * x11851 * x5 + x11870 + 10.0 * x1767 * x869 -
    10.0 * x1833 * x869 - x1894 * x2316 + x1896 * x2316 + x1896 * x46 -
    10.0 * x433 * exp(-3019.29999482832 * invT + 2.0 * logT) + x659 * x703 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x2354 + x742) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[335] =
    -50000000.0 * sc[16] * x1174 + 50000000.0 * sc[16] * x1231 +
    30000000.0 * sc[1] * x1897 + 100000000.0 * sc[1] * x820 -
    30110000.0 * sc[4] * x1894 + 30110000.0 * sc[4] * x1897 -
    392000.0 * sc[8] * x1894 + 392000.0 * sc[8] * x1897 - x1083 * x2187 +
    x1089 * x2187 + x11870 + 10.0 * x1835 * x869 - 10.0 * x1836 * x869 -
    x1894 * x2077 - x1894 * x2316 + x1897 * x2077 + x1897 * x2316 +
    x1897 * x46 + x703 * x820 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1174 + x1231) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[358] =
    -7350000000.0 * sc[13] * x11851 - 50000000.0 * sc[16] * x116 +
    50000000.0 * sc[16] * x81 + 100000000.0 * sc[1] * x1135 +
    30000000.0 * sc[1] * x1841 - 30000000.0 * sc[1] * x1904 +
    30110000.0 * sc[4] * x1841 - 30110000.0 * sc[4] * x1904 +
    392000.0 * sc[8] * x1841 - 392000.0 * sc[8] * x1904 + x10377 -
    x1091 * x2187 + x1135 * x703 + 22509.375 * x11852 * x11854 -
    22509.375 * x11852 * x11856 + x1366 * x2187 + 10.0 * x1838 * x869 -
    10.0 * x1839 * x869 + x1841 * x2077 + x1841 * x2316 + x1841 * x46 -
    x1904 * x2077 - x1904 * x2316 - x1904 * x46 + x2098 + 7350000000.0 * x7 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x116 + x81) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[381] =
    -50000000.0 * sc[16] * x1625 + 50000000.0 * sc[16] * x848 +
    20000000.0 * sc[16] + 30000000.0 * sc[1] * x169 + sc[1] * x790 +
    30110000.0 * sc[4] * x169 + 392000.0 * sc[8] * x169 + x10187 + x11020 +
    x11865 + x11871 - x1367 * x2187 + x1472 * x2187 + 50000000.0 * x1473 +
    x169 * x2077 + x169 * x2316 + x169 * x46 + 10.0 * x1846 * x869 -
    10.0 * x1849 * x869 + x2107 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1625 + x848) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[404] =
    50000000.0 * sc[16] * x851 + sc[1] * x1208 + 100000000.0 * sc[1] * x1554 +
    30000000.0 * sc[1] * x1882 + 30110000.0 * sc[4] * x1882 +
    392000.0 * sc[8] * x1882 + x10187 + x11020 + x11735 + x11871 + x146 +
    x1554 * x703 + 10.0 * x1846 * x869 - 10.0 * x1852 * x869 + x1882 * x2077 +
    x1882 * x2316 + x1882 * x46 + x2107 + x2187 * x854 + x8098 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1058 + x851) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[427] =
    50000000.0 * sc[16] * x2058 + 30000000.0 * sc[1] * x232 +
    30110000.0 * sc[4] * x232 + 392000.0 * sc[8] * x232 + x10187 + x11020 +
    x11735 + x11865 + x11871 + x1563 * x2187 - 10.0 * x1783 * x869 +
    10.0 * x1846 * x869 + x2077 * x232 + x2107 + x2316 * x232 + x232 * x46 +
    x8098 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1058 + x2058) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[450] =
    -50000000.0 * sc[16] * x1085 + 50000000.0 * sc[16] * x1160 +
    30000000.0 * sc[1] * x1889 + 100000000.0 * sc[1] * x62 +
    30110000.0 * sc[4] * x1889 + 392000.0 * sc[8] * x1889 + x0 * x10372 +
    x10187 + x11020 + x11871 + x146 + x1469 * x2187 - x1565 * x2187 +
    10.0 * x1775 * x869 - 10.0 * x1782 * x869 + x1889 * x2077 + x1889 * x2316 +
    x1889 * x46 + x2107 + x62 * x703 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1085 + x1160) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[473] =
    50000000.0 * sc[16] * x1299 + 30000000.0 * sc[1] * x1892 +
    30110000.0 * sc[4] * x1892 + 392000.0 * sc[8] * x1892 + x10187 + x11020 +
    x11735 + x11865 + x11871 + x1574 * x2187 + 10.0 * x1846 * x869 -
    10.0 * x1847 * x869 + x1892 * x2077 + x1892 * x2316 + x1892 * x46 + x2107 +
    x8098 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (-x1058 + x1299) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[496] =
    50000000.0 * sc[16] * x319 - 50000000.0 * sc[16] * x963 +
    30000000.0 * sc[1] * x1895 + 30110000.0 * sc[4] * x1895 +
    392000.0 * sc[8] * x1895 + x10187 + x11020 + x11865 + x11871 -
    x1575 * x2187 + x1580 * x2187 + 10.0 * x1846 * x869 - 10.0 * x1881 * x869 +
    x1895 * x2077 + x1895 * x2316 + x1895 * x46 + x2107 + x9913 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2077 * x683 + x2187 * x677 - x2316 * x683 -
     x46 * x683 - 10.0 * x680 * x869) *
      (x319 - x963) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2077 * x684 +
     x2316 * x684 + x46 * x684 - x660 * x703 - 10.0 * x681 * x869) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-100000000.0 * sc[1] * x66 - x66 * x703) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-100000000.0 * sc[1] * x603 - x603 * x703 - 10.0 * x682 * x869) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2077 * x685 + x2316 * x685 + x46 * x685) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[14] =
    7.0e+44 * refCinv * x2049 * x25 * x723 + 100000000.0 * sc[14] * x1016 -
    2000000.0 * sc[14] * x1321 - 100000000.0 * sc[14] * x988 +
    2000000.0 * sc[1] * x909 - 2000000.0 * sc[1] * x935 +
    20000.0 * sc[3] * x909 - 20000.0 * sc[3] * x935 + x1002 * x1240 +
    x1042 * x726 - x1042 * x826 + x1059 + x1364 + x2051 * x821 + x2104 * x726 -
    x2104 * x826 + x2125 * x649 - x2125 * x651 + x2310 * x726 - x2310 * x826 +
    x264 * x821 + x37 + x726 * x735 + x726 * x962 + x731 * x909 - x731 * x935 -
    x735 * x826 + x7396 + x8231 - x826 * x962 - 10.0 * x830 * x888 +
    10.0 * x888 * x951 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1476 + x973) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-x2051 * x66 - x264 * x66) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-x1002 * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[37] =
    100000000.0 * sc[14] * x1073 - 100000000.0 * sc[14] * x985 +
    50000000.0 * sc[19] * x1452 + 20000000.0 * sc[19] * x625 -
    2000000.0 * sc[1] * x1504 + 2000000.0 * sc[1] * x523 + sc[20] * x1051 -
    20000.0 * sc[3] * x1504 + 20000.0 * sc[3] * x523 + x1002 * x476 +
    x1042 * x1061 - x1042 * x950 + x1061 * x2104 + x1061 * x2310 +
    x1061 * x735 + x1061 * x962 - 10.0 * x1065 * x888 - x1504 * x731 +
    x1623 * x2051 + x1623 * x264 + 1.4e+18 * x1635 * x25 - x2104 * x950 +
    x2125 * x857 - x2125 * x964 - x2310 * x950 + x420 + 2000000.0 * x440 +
    x523 * x731 + x5492 + x5597 - x735 * x950 + x7439 + x8260 +
    10.0 * x888 * x971 - x950 * x962 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1636 - x1708) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-x2051 * x66 - x264 * x66) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-x1002 * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[60] =
    100000000.0 * sc[14] * x315 - 100000000.0 * sc[14] * x318 -
    2000000.0 * sc[1] * x1656 + 2000000.0 * sc[1] * x1721 -
    20000.0 * sc[3] * x1656 + 20000.0 * sc[3] * x1721 + x1002 * x1654 +
    x1042 * x140 - x1042 * x1556 + x140 * x2104 + x140 * x2310 + x140 * x735 +
    x140 * x962 - x1556 * x2104 - x1556 * x2310 - x1556 * x735 - x1556 * x962 -
    x1656 * x731 - 10.0 * x1664 * x888 + x1721 * x731 + x1723 * x2051 +
    x1723 * x264 + x2125 * x965 - x2125 * x972 + x420 + x5597 + x5679 + x7521 +
    10.0 * x759 * x888 + x8287 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1772 - x1794) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-x2051 * x66 - x264 * x66) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-x1002 * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[83] =
    100000000.0 * sc[14] * x1416 - sc[14] * x8347 -
    100000000.0 * sc[14] * x883 - 2000000.0 * sc[1] * x1762 +
    2000000.0 * sc[1] * x1764 + x1002 * x1733 - x1042 * x1627 + x1042 * x1630 -
    x1627 * x2104 - x1627 * x2310 - x1627 * x735 + x1630 * x2104 +
    x1630 * x2310 + x1630 * x735 + 10.0 * x1666 * x888 - 10.0 * x1672 * x888 +
    x1757 * x2051 + x1757 * x264 - x1762 * x731 + x1764 * x731 + x2125 * x974 -
    x2125 * x976 + x420 + x5597 + x5755 + x7573 + x8344 + x9983 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1829 - x1853) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-x1002 * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[106] =
    100000000.0 * sc[14] * x1645 - 100000000.0 * sc[14] * x1659 -
    sc[14] * x9128 + 2000000.0 * sc[1] * x1776 - 2000000.0 * sc[1] * x1798 +
    x1002 * x219 - x1042 * x1677 + x1042 * x1699 - x1677 * x2104 -
    x1677 * x2310 - x1677 * x735 + x1699 * x2104 + x1699 * x2310 +
    x1699 * x735 + 10.0 * x1700 * x888 + x1776 * x731 - x1798 * x731 +
    x1831 * x2051 + x1831 * x264 + x2125 * x977 - x2125 * x982 -
    10.0 * x398 * x888 + x420 + x5597 + x5853 + x7627 + x8396 + x9997 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1885 - x1899) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-x1002 * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[129] =
    100000000.0 * sc[14] * x1660 - 100000000.0 * sc[14] * x1662 -
    4.2e+45 * sc[14] * x675 + 8.4e+18 * sc[1] * x1635 -
    2000000.0 * sc[1] * x1779 + 2000000.0 * sc[1] * x1856 -
    20000.0 * sc[3] * x1779 + 20000.0 * sc[3] * x1856 + x1002 * x1946 -
    x1006 * (1.68 * x1078 * x688 + 12.0 * x1242 * x688) +
    x1008 * (1.68 * x1078 * x688 + 12.0 * x1242 * x688) - x1010 * x2125 +
    x1042 * x1668 - x1042 * x1741 - 8.4e+18 * x1137 * x426 +
    1.9342105263157899e+30 * x1140 * x641 + 3.675e+77 * x1365 * x673 +
    x1591 * x234 + x1668 * x2104 + x1668 * x2310 + x1668 * x735 + x1668 * x962 -
    1.9342105263157899e+30 * x1737 * x641 - x1741 * x2104 - x1741 * x2310 -
    x1741 * x735 - x1741 * x962 + 10.0 * x1760 * x888 - 10.0 * x1768 * x888 -
    x1779 * x731 + x1844 * x2051 + x1844 * x264 + x1856 * x731 +
    4.2e+45 * x2049 * x27 * x723 + x2125 * x987 - 3.675e+77 * x30 * x673 +
    x5900 * x911 - x5900 * x955 + x5992 + x7667 + x8426 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1954 - x1980) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-x2051 * x66 - x264 * x66) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-x1002 * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[152] =
    100000000.0 * sc[14] * x1665 - 100000000.0 * sc[14] * x1670 -
    2000000.0 * sc[1] * x1851 + 2000000.0 * sc[1] * x1878 + x1002 * x1985 +
    x10031 + x1012 * x2125 - x1014 * x2125 - x1042 * x1759 + x1042 * x1769 +
    x143 - x1759 * x2104 - x1759 * x2310 - x1759 * x735 + x1769 * x2104 +
    x1769 * x2310 + x1769 * x735 + 10.0 * x1770 * x888 - 10.0 * x1771 * x888 -
    x1851 * x731 + x1878 * x731 + x2269 * x234 + x420 + x5597 + x6083 + x7705 +
    x8462 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x2022 - x2045) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-x1002 * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[175] =
    -300000.0 * sc[14] * x1350 + 100000000.0 * sc[14] * x1673 -
    100000000.0 * sc[14] * x1674 + 2000000.0 * sc[1] * x1898 -
    2000000.0 * sc[1] * x1906 + x1002 * x1995 + x10060 + x1015 * x2125 -
    x1019 * x2125 - x1042 * x1786 + x1042 * x202 + x143 + 10.0 * x1780 * x888 -
    10.0 * x1781 * x888 - x1786 * x2104 - x1786 * x2310 - x1786 * x735 +
    x1898 * x731 - x1906 * x731 + x202 * x2104 + x202 * x2310 + x202 * x735 +
    x420 + x5597 + x6161 + x7747 + x8491 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x2081 - x2099) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-x1002 * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[198] =
    100000000.0 * sc[14] * x1680 - 100000000.0 * sc[14] * x1681 +
    50000000.0 * sc[16] - 2000000.0 * sc[1] * x1947 +
    2000000.0 * sc[1] * x1958 - 20000.0 * sc[3] * x1947 +
    20000.0 * sc[3] * x1958 + x1022 * x2125 - x1025 * x2125 - x1042 * x1792 +
    x1042 * x1832 + x10623 + x143 + 10.0 * x1788 * x888 - 10.0 * x1789 * x888 -
    x1792 * x2104 - x1792 * x2310 - x1792 * x962 + x1832 * x2104 +
    x1832 * x2310 + x1832 * x962 - x1947 * x731 + x1958 * x731 + x420 + x5597 +
    x6261 + x7788 + x8529 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x2123 - x2149) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-x1002 * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[221] =
    100000000.0 * sc[14] * x1683 - 100000000.0 * sc[14] * x1689 -
    2000000.0 * sc[1] * x1959 + 2000000.0 * sc[1] * x1964 -
    20000.0 * sc[3] * x1959 + 20000.0 * sc[3] * x1964 + x1002 * x2020 -
    x1042 * x1834 + x1042 * x1848 + x1049 * x2125 - x1053 * x2125 + x1364 +
    10.0 * x1791 * x888 - 10.0 * x1797 * x888 - x1834 * x2104 - x1834 * x2310 -
    x1834 * x735 - x1834 * x962 + x1848 * x2104 + x1848 * x2310 + x1848 * x735 +
    x1848 * x962 + 50000000.0 * x19 * x723 - x1959 * x731 + x1964 * x731 +
    x2051 * x816 + x234 * x412 + x264 * x816 + x37 + x6339 + x7826 + x8558 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x2138 - x2197) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-x1002 * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[244] =
    refC * x2021 * x998 - sc[14] * x10666 - 90330000.0 * sc[14] * x1178 +
    100000000.0 * sc[14] * x1693 - 100000000.0 * sc[14] * x1694 -
    1.05e+45 * sc[14] * x675 + 2.1e+18 * sc[1] * x1635 -
    2000000.0 * sc[1] * x1965 + 2000000.0 * sc[1] * x646 -
    20000.0 * sc[3] * x1965 + 20000.0 * sc[3] * x646 -
    x1006 * (0.42 * x1078 * x688 + 3.0 * x1242 * x688) +
    x1008 * (0.42 * x1078 * x688 + 3.0 * x1242 * x688) + x1042 * x1840 -
    x1042 * x1861 + x1066 * x2125 - x1068 * x2125 - 2.1e+18 * x1137 * x426 +
    4.8355263157894698e+29 * x1140 * x641 + 9.1875e+76 * x1365 * x673 -
    4.8355263157894698e+29 * x1737 * x641 + 10.0 * x1801 * x888 -
    10.0 * x1804 * x888 + x1840 * x2104 + x1840 * x2310 + x1840 * x735 +
    x1840 * x962 - x1861 * x2104 - x1861 * x2310 - x1861 * x735 - x1861 * x962 -
    x1965 * x731 + x2051 * x65 + x264 * x65 - 9.1875e+76 * x30 * x673 +
    x440 * x893 + x6391 * x911 - x6391 * x955 + x646 * x731 + x6487 +
    1.05e+45 * x670 + x7870 + x8592 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x2184 - x2274) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-x2051 * x66 - x264 * x66) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-x1002 * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[267] =
    100000000.0 * sc[14] * x1695 - 100000000.0 * sc[14] * x1697 -
    2000000.0 * sc[1] * x655 + 2000000.0 * sc[1] * x908 -
    20000.0 * sc[3] * x655 + 20000.0 * sc[3] * x908 + x1002 * x930 -
    x1042 * x1845 + x1042 * x725 - x1071 * x2125 + x1364 - 10.0 * x1696 * x888 +
    10.0 * x1806 * x888 - x1845 * x2104 - x1845 * x2310 - x1845 * x735 -
    x1845 * x962 + x2051 * x602 + x2104 * x725 + x2125 * x661 + x2310 * x725 +
    x264 * x602 - x655 * x731 + x6575 + x725 * x735 + x725 * x962 +
    x731 * x908 + x7908 + x8619 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1555 - x2326) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-x1002 * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[290] =
    100000000.0 * sc[14] * x1701 - 100000000.0 * sc[14] * x1702 -
    2000000.0 * sc[1] * x1976 + 2000000.0 * sc[1] * x1977 -
    20000.0 * sc[3] * x1976 + 20000.0 * sc[3] * x1977 + x1002 * x1502 -
    x1042 * x1880 + x1042 * x1887 + x1072 * x2125 - x1076 * x2125 + x143 +
    10.0 * x1755 * x888 - 10.0 * x1761 * x888 - x1880 * x2104 - x1880 * x2310 -
    x1880 * x735 - x1880 * x962 + x1887 * x2104 + x1887 * x2310 + x1887 * x735 +
    x1887 * x962 - x1976 * x731 + x1977 * x731 + x420 + x5597 + x6648 + x7947 +
    x8646 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x1021 - x2366) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-x1002 * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[313] =
    100000000.0 * sc[14] * x1704 - 100000000.0 * sc[14] * x1706 -
    2000000.0 * sc[1] * x1979 + 2000000.0 * sc[1] * x1986 +
    20000.0 * sc[3] * x1986 + x1002 * x1995 + x10146 - x1042 * x1894 +
    x1042 * x1896 + x1077 * x2125 - x1081 * x2125 + 10.0 * x1767 * x888 -
    10.0 * x1833 * x888 - x1894 * x2310 - x1894 * x735 + x1896 * x2104 +
    x1896 * x2310 + x1896 * x735 + x1896 * x962 + x1986 * x731 + x2051 * x659 +
    x264 * x659 + x500 + x6718 + x7977 + x8674 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x2354 + x742) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-x1002 * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[336] =
    -2000000.0 * sc[0] * x1321 - sc[10] * x10666 - 90330000.0 * sc[10] * x1178 +
    100000000.0 * sc[14] * x1707 - 100000000.0 * sc[14] * x1709 -
    2000000.0 * sc[1] * x1979 + 2000000.0 * sc[1] * x1992 - sc[3] * x8347 -
    sc[4] * x9128 - 300000.0 * sc[7] * x1350 + x10162 - x1042 * x1894 +
    x1042 * x1897 + x10828 + x1083 * x2125 - x1089 * x2125 +
    10.0 * x1835 * x888 - 10.0 * x1836 * x888 - x1894 * x2310 + x1897 * x2104 +
    x1897 * x2310 + x1992 * x731 + x2051 * x820 - 7.0e+44 * x25 * x675 +
    x264 * x820 - 1.4e+18 * x426 * x776 -
    10.0 * x433 * exp(-4025.7333264377598 * invT + 2.0 * logT) + x500 -
    100000000.0 * x593 - 20000000.0 * x594 * exp(-3019.29999482832 * invT) +
    x8016 + x8698 + x979 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1174 + x1231) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-x1002 * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[359] =
    100000000.0 * sc[14] * x1711 - 100000000.0 * sc[14] * x1719 +
    2000000.0 * sc[1] * x1886 - 2000000.0 * sc[1] * x1999 +
    20000.0 * sc[3] * x1886 - 20000.0 * sc[3] * x1999 + x1002 * x1716 +
    x1042 * x1841 - x1042 * x1904 + x1091 * x2125 + x1135 * x2051 +
    x1135 * x264 - x1366 * x2125 + x1590 + 10.0 * x1838 * x888 -
    10.0 * x1839 * x888 + x1841 * x2104 + x1841 * x2310 + x1841 * x735 +
    x1841 * x962 + x1886 * x731 - x1904 * x2104 - x1904 * x2310 - x1904 * x735 -
    x1904 * x962 - x1999 * x731 + x2086 + x8048 + x8724 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x116 + x81) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-x2051 * x66 - x264 * x66) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-x1002 * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[382] =
    100000000.0 * sc[14] * x1730 - 100000000.0 * sc[14] * x1731 +
    50000000.0 * sc[8] + x10185 + x1042 * x169 + x1064 + x10874 + x11889 -
    x1367 * x1491 + x1367 * x2125 + x143 + x1472 * x1491 - x1472 * x2125 +
    x1551 * x1849 + x169 * x2104 + x169 * x2272 + x169 * x2310 + x169 * x735 +
    x169 * x962 - 10.0 * x1849 * x888 + x8087 + x8764 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1625 + x848) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-x2051 * x66 - x264 * x66) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-x1002 * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[405] =
    100000000.0 * sc[14] * x1730 - 100000000.0 * sc[14] * x1739 + x10185 +
    x1042 * x1882 + x10874 + x11889 + x1475 * x2125 + x1491 * x854 +
    x1551 * x1852 + x1554 * x2051 + x1554 * x264 - 10.0 * x1852 * x888 +
    x1882 * x2104 + x1882 * x2272 + x1882 * x2310 + x1882 * x735 +
    x1882 * x962 - x2125 * x854 + x2205 + x8113 + x8764 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1058 + x851) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-x1002 * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[428] =
    -100000000.0 * sc[14] * x1661 + 100000000.0 * sc[14] * x1730 +
    2000000.0 * sc[1] * x1957 + 20000.0 * sc[3] * x1957 + sc[4] * x9058 +
    300000.0 * sc[6] * x1957 + 40000000.0 * sc[8] * x1563 +
    60000000.0 * sc[9] * x2058 + x10184 + x1042 * x232 + x10874 + x143 +
    x1475 * x2125 + x1491 * x1563 + x1551 * x1783 - x1563 * x2125 +
    x1661 * x2133 - 10.0 * x1783 * x888 - x1843 * x2104 + 10.0 * x1846 * x888 -
    x1890 * x731 + x1957 * x2155 + x1957 * x731 + x2031 * x232 + x2044 +
    x2104 * x232 + x2272 * x232 + x2310 * x232 + x232 * x735 + x232 * x962 +
    x420 + x8113 + x8761 + x8762 + x913 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1058 + x2058) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-x1002 * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[451] =
    100000000.0 * sc[14] * x1671 - 100000000.0 * sc[14] * x1745 +
    50000000.0 * sc[1] * x1452 + 2000000.0 * sc[1] * x1972 +
    20000000.0 * sc[1] * x625 + 20000.0 * sc[3] * x1972 +
    300000.0 * sc[6] * x1972 + x10184 + x1042 * x1889 + x10874 + x11888 -
    x1469 * x2125 + x1565 * x2125 + 10.0 * x1775 * x888 - 10.0 * x1782 * x888 +
    x1889 * x2104 + x1889 * x2310 + x1889 * x735 + x1889 * x962 + x1972 * x731 +
    x2051 * x62 + x226 + x264 * x62 + x8168 + x8761 + x8762 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1085 + x1160) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-x1002 * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[474] =
    100000000.0 * sc[14] * x1730 - 100000000.0 * sc[14] * x865 + sc[1] * x1051 +
    2000000.0 * sc[1] * x1649 + 20000.0 * sc[3] * x1649 +
    300000.0 * sc[6] * x1649 + 40000000.0 * sc[8] * x1574 +
    60000000.0 * sc[9] * x1299 + x1002 * x1318 + x10184 + x1042 * x1892 +
    x11888 + x143 + x1475 * x2125 + x1491 * x1574 + x1551 * x1847 -
    x1574 * x2125 + x1649 * x2155 + x1649 * x731 - x1843 * x735 +
    10.0 * x1846 * x888 - 10.0 * x1847 * x888 + x1892 * x2031 + x1892 * x2104 +
    x1892 * x2272 + x1892 * x2310 + x1892 * x735 + x1892 * x962 + x2044 +
    x2133 * x865 + x8113 + x8761 + x8762 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (-x1058 + x1299) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-x1002 * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[497] =
    -100000000.0 * sc[14] * x1692 + 100000000.0 * sc[14] * x295 + x10185 +
    x1042 * x1895 + x10874 + x11889 + x143 - x1491 * x1575 + x1491 * x1580 +
    x1551 * x1881 + x1575 * x2125 - x1580 * x2125 - 10.0 * x1881 * x888 +
    x1895 * x2104 + x1895 * x2272 + x1895 * x2310 + x1895 * x735 +
    x1895 * x962 + x808 + x8087 + x8764 + x9709 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1042 * x683 +
     x1491 * x677 + x1551 * x680 - x2031 * x683 - x2104 * x683 - x2125 * x677 +
     x2133 * x678 - x2272 * x683 - x2310 * x683 - 10.0 * x680 * x888 -
     x683 * x735 - x683 * x962) *
      (x319 - x963) +
    (-100000000.0 * sc[14] * x679 + x1042 * x684 + x1551 * x681 + x2031 * x684 -
     x2051 * x660 + x2104 * x684 + x2133 * x679 + x2272 * x684 + x2310 * x684 -
     x264 * x660 - 10.0 * x681 * x888 + x684 * x735 + x684 * x962) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-x2051 * x66 - x264 * x66) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-x1002 * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-2000000.0 * sc[1] * x596 - 20000.0 * sc[3] * x596 -
     300000.0 * sc[6] * x596 + x1551 * x682 - x2051 * x603 - x2155 * x596 -
     x264 * x603 - x596 * x731 - 10.0 * x682 * x888) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-2000000.0 * sc[1] * x558 - 20000.0 * sc[3] * x558 -
     300000.0 * sc[6] * x558 + x1042 * x685 + x2031 * x685 + x2104 * x685 -
     x2155 * x558 + x2272 * x685 + x2310 * x685 - x558 * x731 + x685 * x735 +
     x685 * x962) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[15] =
    x1016 * x786 + x1955 * x909 - x1955 * x935 + x2056 * x440 + x2132 * x909 -
    x2132 * x935 + x2196 * x909 - x2196 * x935 + x2361 * x909 - x2361 * x935 +
    x648 * x909 - x648 * x935 - x786 * x988 + x8231 + x897 * x909 -
    x897 * x935 + x906 * x909 - x906 * x935 + x970 +
    (-x678 * x786) * (-x1476 + x973) +
    (-x679 * x786) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[38] =
    -sc[15] * x1462 + x1073 * x786 - x1504 * x1955 - x1504 * x2132 -
    x1504 * x2196 - x1504 * x2361 - x1504 * x648 - x1504 * x897 - x1504 * x906 +
    x1955 * x523 + x2132 * x523 + x2196 * x523 + x2361 * x523 +
    1.99e+29 * x25 * x968 + x523 * x648 + x523 * x897 + x523 * x906 -
    x786 * x985 + x8260 + x989 + (-x678 * x786) * (x1636 - x1708) +
    (-x679 * x786) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[61] =
    -sc[15] * x7492 - x1656 * x1955 - x1656 * x2132 - x1656 * x2196 -
    x1656 * x2361 - x1656 * x648 - x1656 * x897 - x1656 * x906 + x1721 * x1955 +
    x1721 * x2132 + x1721 * x2196 + x1721 * x2361 + x1721 * x648 +
    x1721 * x897 + x1721 * x906 + x315 * x786 - x318 * x786 + x8287 + x989 +
    (-x678 * x786) * (x1772 - x1794) +
    (-x679 * x786) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[84] =
    -300000.0 * sc[15] * x1326 + x1416 * x786 - x1762 * x1955 - x1762 * x2132 -
    x1762 * x2196 - x1762 * x2361 - x1762 * x648 - x1762 * x897 - x1762 * x906 +
    x1764 * x1955 + x1764 * x2132 + x1764 * x2196 + x1764 * x2361 +
    x1764 * x648 + x1764 * x897 + x1764 * x906 - x786 * x883 + x8344 + x989 +
    (-x678 * x786) * (x1829 - x1853) +
    (-x679 * x786) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[107] =
    -sc[15] * x9115 + x101 * x440 + x1645 * x786 - x1659 * x786 +
    x1776 * x1955 + x1776 * x2132 + x1776 * x2196 + x1776 * x2361 +
    x1776 * x648 + x1776 * x897 + x1776 * x906 - x1798 * x1955 - x1798 * x2132 -
    x1798 * x2196 - x1798 * x2361 - x1798 * x648 - x1798 * x897 - x1798 * x906 +
    x8396 + x989 + (-x678 * x786) * (x1885 - x1899) +
    (-x679 * x786) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[130] =
    1.194e+30 * sc[1] * x968 + x1018 * x5876 -
    8.8666981132075502e+66 * x10308 * x10310 +
    8.8666981132075502e+66 * x10308 * x10362 -
    1.77e+38 * x10309 * x10359 * (1.68 * x10314 + 12.0 * x10316) +
    1.77e+38 * x10309 * x10365 * (1.68 * x10314 + 12.0 * x10316) +
    1.062e+39 * x10359 - 1.062e+39 * x10365 - 1.194e+30 * x1341 * x1342 +
    x1660 * x786 - x1662 * x786 - x1779 * x1955 - x1779 * x2132 -
    x1779 * x2196 - x1779 * x2361 - x1779 * x648 - x1779 * x897 - x1779 * x906 +
    x1856 * x1955 + x1856 * x2132 + x1856 * x2196 + x1856 * x2361 +
    x1856 * x648 + x1856 * x897 + x1856 * x906 + x2360 * x440 +
    4.5605758157389599e+47 * x431 * x829 -
    4.5605758157389599e+47 * x431 * x966 - x5876 * x885 + x8426 +
    (-x678 * x786) * (x1954 - x1980) +
    (-x679 * x786) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[153] =
    -sc[15] * x10023 + x1665 * x786 - x1670 * x786 - x1851 * x1955 -
    x1851 * x2132 - x1851 * x2196 - x1851 * x2361 - x1851 * x648 -
    x1851 * x897 - x1851 * x906 + x1878 * x1955 + x1878 * x2132 +
    x1878 * x2196 + x1878 * x2361 + x1878 * x648 + x1878 * x897 + x1878 * x906 +
    x8462 + x989 + (-x678 * x786) * (x2022 - x2045) +
    (-x679 * x786) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[176] =
    x1673 * x786 - x1674 * x786 + x1898 * x1955 + x1898 * x2132 +
    x1898 * x2196 + x1898 * x2361 + x1898 * x648 + x1898 * x897 + x1898 * x906 -
    x1906 * x1955 - x1906 * x2132 - x1906 * x2196 - x1906 * x2361 -
    x1906 * x648 - x1906 * x897 - x1906 * x906 +
    8700.0 * x440 * exp(-490.13303249379697 * invT) + x8491 + x989 +
    (-x678 * x786) * (x2081 - x2099) +
    (-x679 * x786) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[199] =
    -sc[15] * x10614 + 3.54e+38 * sc[8] * x10323 * x10325 * x25 * exp(x10319) +
    x1680 * x786 - x1681 * x786 - x1947 * x1955 - x1947 * x2132 -
    x1947 * x2196 - x1947 * x2361 - x1947 * x648 - x1947 * x897 - x1947 * x906 +
    x1955 * x1958 + x1958 * x2132 + x1958 * x2196 + x1958 * x2361 +
    x1958 * x648 + x1958 * x897 + x1958 * x906 + 40000000.0 * x440 * x491 +
    x8529 + x989 + (-x678 * x786) * (x2123 - x2149) +
    (-x679 * x786) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[222] =
    x1683 * x786 - x1689 * x786 - x1955 * x1959 + x1955 * x1964 -
    x1959 * x2132 - x1959 * x2196 - x1959 * x2361 - x1959 * x648 -
    x1959 * x897 - x1959 * x906 + x1964 * x2132 + x1964 * x2196 +
    x1964 * x2361 + x1964 * x648 + x1964 * x897 + x1964 * x906 + x440 * x819 +
    x8558 + x970 + (-x678 * x786) * (x2138 - x2197) +
    (-x679 * x786) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[245] =
    -120000000.0 * sc[15] * x1295 + 2.985e+29 * sc[1] * x968 + x1018 * x6368 -
    2.2166745283018902e+66 * x10308 * x10310 +
    2.2166745283018902e+66 * x10308 * x10362 -
    1.77e+38 * x10309 * x10359 * (0.42 * x10314 + 3.0 * x10316) +
    1.77e+38 * x10309 * x10365 * (0.42 * x10314 + 3.0 * x10316) +
    2.655e+38 * x10359 - 2.655e+38 * x10365 - 2.985e+29 * x1341 * x1342 +
    x1693 * x786 - x1694 * x786 - x1955 * x1965 + x1955 * x646 - x1965 * x2132 -
    x1965 * x2196 - x1965 * x2361 - x1965 * x648 - x1965 * x897 - x1965 * x906 +
    x2132 * x646 + x2196 * x646 + x2361 * x646 +
    1.14014395393474e+47 * x431 * x829 - 1.14014395393474e+47 * x431 * x966 -
    x6368 * x885 + x646 * x648 + x646 * x897 + x646 * x906 + x8592 +
    (-x678 * x786) * (x2184 - x2274) +
    (-x679 * x786) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[268] =
    x1695 * x786 - x1697 * x786 - x1955 * x655 + x1955 * x908 - x2132 * x655 +
    x2132 * x908 - x2196 * x655 + x2196 * x908 - x2361 * x655 + x2361 * x908 -
    x648 * x655 + x648 * x908 - x655 * x897 - x655 * x906 + x8619 +
    x897 * x908 + x906 * x908 + x970 + (-x678 * x786) * (x1555 - x2326) +
    (-x679 * x786) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[291] =
    x1701 * x786 - x1702 * x786 - x1955 * x1976 + x1955 * x1977 -
    x1976 * x2132 - x1976 * x2196 - x1976 * x2361 - x1976 * x648 -
    x1976 * x897 - x1976 * x906 + x1977 * x2132 + x1977 * x2196 +
    x1977 * x2361 + x1977 * x648 + x1977 * x897 + x1977 * x906 + x8646 + x989 +
    (-x678 * x786) * (x1021 - x2366) +
    (-x679 * x786) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[314] =
    x1704 * x786 - x1706 * x786 - x1955 * x1979 + x1955 * x1986 -
    x1979 * x2132 - x1979 * x2196 - x1979 * x2361 - x1979 * x648 -
    x1979 * x897 - x1979 * x906 + x1986 * x2132 + x1986 * x2196 +
    x1986 * x2361 + x1986 * x648 + x1986 * x897 + x1986 * x906 + x526 + x8674 +
    (-x678 * x786) * (-x2354 + x742) +
    (-x679 * x786) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[337] =
    x1707 * x786 - x1709 * x786 - x1955 * x1979 + x1955 * x1992 -
    x1979 * x2132 - x1979 * x2196 - x1979 * x2361 - x1979 * x648 -
    x1979 * x897 - x1979 * x906 + x1992 * x2132 + x1992 * x2196 +
    x1992 * x2361 + x1992 * x648 + x1992 * x897 + x1992 * x906 + x526 + x8698 +
    (-x678 * x786) * (-x1174 + x1231) +
    (-x679 * x786) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[360] =
    -120000000.0 * sc[10] * x1295 - sc[1] * x1462 - sc[2] * x7492 -
    300000.0 * sc[3] * x1326 - sc[4] * x9115 - sc[6] * x10023 - sc[8] * x10614 -
    1.77e+38 * x10320 * x10323 * x10325 * x776 - 1.99e+29 * x1342 * x776 +
    x1711 * x786 - x1719 * x786 + x1886 * x1955 + x1886 * x2132 +
    x1886 * x2196 + x1886 * x2361 + x1886 * x648 + x1886 * x897 + x1886 * x906 -
    x1955 * x1999 - x1999 * x2132 - x1999 * x2196 - x1999 * x2361 -
    x1999 * x648 - x1999 * x897 - x1999 * x906 + x526 -
    40000000.0 * x593 * exp(276.769166192596 * invT) + x8724 +
    (-x678 * x786) * (-x116 + x81) +
    (-x679 * x786) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[383] =
    x11907 + x1629 + x1730 * x786 - x1731 * x786 +
    (-x678 * x786) * (-x1625 + x848) +
    (-x679 * x786) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[406] =
    x11907 + x1629 + x1730 * x786 - x1739 * x786 +
    (-x678 * x786) * (-x1058 + x851) +
    (-x679 * x786) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[429] =
    300000.0 * sc[6] * x1957 + x10194 + x10878 + x1629 - x1661 * x786 +
    x1730 * x786 + x1955 * x1957 + x1957 * x2132 + x1957 * x2196 +
    x1957 * x2361 + x1957 * x648 + x1957 * x897 + x1957 * x906 + x2091 + x8066 +
    x8762 + x9717 + (-x678 * x786) * (-x1058 + x2058) +
    (-x679 * x786) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[452] =
    300000.0 * sc[6] * x1972 + x10194 + x10878 + x1629 + x1671 * x786 -
    x1745 * x786 + x1955 * x1972 + x1972 * x2132 + x1972 * x2196 +
    x1972 * x2361 + x1972 * x648 + x1972 * x897 + x1972 * x906 + x2091 + x8066 +
    x8762 + x9717 + (-x678 * x786) * (-x1085 + x1160) +
    (-x679 * x786) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[475] =
    300000.0 * sc[6] * x1649 + x10194 + x10878 + x1629 + x1649 * x1955 +
    x1649 * x2132 + x1649 * x2196 + x1649 * x2361 + x1649 * x648 +
    x1649 * x897 + x1649 * x906 + x1730 * x786 + x2091 - x786 * x865 + x8066 +
    x8762 + x9717 + (-x678 * x786) * (-x1058 + x1299) +
    (-x679 * x786) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[498] =
    x11907 + x1629 - x1692 * x786 + x295 * x786 +
    (-x678 * x786) * (x319 - x963) +
    (-x679 * x786) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-300000.0 * sc[6] * x596 - x1955 * x596 - x2132 * x596 - x2196 * x596 -
     x2361 * x596 - x596 * x648 - x596 * x897 - x596 * x906) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-300000.0 * sc[6] * x558 - x1955 * x558 - x2132 * x558 - x2196 * x558 -
     x2361 * x558 - x558 * x648 - x558 * x897 - x558 * x906) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[16] =
    50000000.0 * sc[16] * x1476 + 30000000.0 * sc[16] * x649 -
    30000000.0 * sc[16] * x651 - 50000000.0 * sc[16] * x76 -
    50000000.0 * sc[16] * x973 - x1016 * x2065 - x11050 * x1476 +
    x11050 * x973 + x11909 + x2065 * x988 + x726 * x863 - x826 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (-x1476 + x973) +
    (x2065 * x679 + x684 * x863) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (x685 * x863) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[39] =
    -50000000.0 * sc[16] * x1636 + 50000000.0 * sc[16] * x1708 - sc[16] * x790 +
    30000000.0 * sc[16] * x857 - 30000000.0 * sc[16] * x964 -
    100000000.0 * sc[16] + 50000000.0 * sc[17] * x1029 + x1039 + x1061 * x863 -
    x1073 * x2065 + x11050 * x1636 - x11050 * x1708 + x2065 * x985 +
    100000000.0 * x364 * x736 - x863 * x950 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1636 - x1708) +
    (x2065 * x679 + x684 * x863) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (x685 * x863) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[62] =
    16.32 * sc[13] * exp(x2185) - 50000000.0 * sc[16] * x1772 +
    50000000.0 * sc[16] * x1794 + 30000000.0 * sc[16] * x965 -
    30000000.0 * sc[16] * x972 - 100000000.0 * sc[16] +
    10000000.0 * sc[17] * x1029 + x1039 + x11050 * x1772 - x11050 * x1794 +
    x140 * x863 - x1556 * x863 - x2065 * x315 + x2065 * x318 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1772 - x1794) +
    (x2065 * x679 + x684 * x863) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (x685 * x863) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[85] =
    -50000000.0 * sc[16] * x1829 + 50000000.0 * sc[16] * x1853 -
    1600000.0 * sc[16] * x8290 + 30000000.0 * sc[16] * x974 -
    30000000.0 * sc[16] * x976 + x1039 + x11050 * x1829 - x11050 * x1853 -
    x1416 * x2065 - x1627 * x863 + x1630 * x863 + x2065 * x883 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1829 - x1853) +
    (x2065 * x679 + x684 * x863) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (x685 * x863) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[108] =
    -sc[16] * x159 - 50000000.0 * sc[16] * x1885 + 50000000.0 * sc[16] * x1899 +
    30000000.0 * sc[16] * x977 - 30000000.0 * sc[16] * x982 +
    7500000.0 * sc[17] * x2370 + x1039 + x11050 * x1885 - x11050 * x1899 -
    x1645 * x2065 + x1659 * x2065 - x1677 * x863 + x1699 * x863 +
    1600000.0 * x364 * x8360 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1885 - x1899) +
    (x2065 * x679 + x684 * x863) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (x685 * x863) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[131] =
    30000000.0 * sc[10] * x1668 * x96 - 30000000.0 * sc[16] * x1010 -
    sc[16] * x135 - 50000000.0 * sc[16] * x1954 + 50000000.0 * sc[16] * x1980 +
    30000000.0 * sc[16] * x987 - 1.614e+17 * x1095 * x11048 + x11050 * x1954 -
    x11050 * x1980 + x11087 * x11276 - 8.68332e+25 * x11095 +
    1.614e+17 * x11126 - x11132 * x11276 - x1660 * x2065 + x1662 * x2065 -
    x1741 * x863 + 8.68332e+25 * x837 * x959 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1954 - x1980) +
    (x2065 * x679 + x684 * x863) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (x685 * x863) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[154] =
    30000000.0 * sc[16] * x1012 - 30000000.0 * sc[16] * x1014 -
    50000000.0 * sc[16] * x2022 + 50000000.0 * sc[16] * x2045 + x1039 +
    x11050 * x2022 - x11050 * x2045 - x1665 * x2065 + x1670 * x2065 -
    x1759 * x863 + x1769 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x2022 - x2045) +
    (x2065 * x679 + x684 * x863) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (x685 * x863) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[177] =
    30000000.0 * sc[16] * x1015 - 30000000.0 * sc[16] * x1019 -
    50000000.0 * sc[16] * x2081 + 50000000.0 * sc[16] * x2099 + x1039 +
    x11050 * x2081 - x11050 * x2099 - x1673 * x2065 + x1674 * x2065 -
    x1786 * x863 + x202 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x2081 - x2099) +
    (x2065 * x679 + x684 * x863) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (x685 * x863) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[200] =
    30000000.0 * sc[16] * x1022 - 30000000.0 * sc[16] * x1025 -
    50000000.0 * sc[16] * x2123 + 50000000.0 * sc[16] * x2149 -
    50000000.0 * sc[16] + x1039 + x11050 * x2123 - x11050 * x2149 -
    x1680 * x2065 + x1681 * x2065 - x1792 * x863 + x1832 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x2123 - x2149) +
    (x2065 * x679 + x684 * x863) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (x685 * x863) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[223] =
    30000000.0 * sc[16] * x1049 - 30000000.0 * sc[16] * x1053 -
    50000000.0 * sc[16] * x2138 + 50000000.0 * sc[16] * x2197 + x11050 * x2138 -
    x11050 * x2197 + x11909 - x1683 * x2065 + x1689 * x2065 - x1834 * x863 +
    x1848 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x2138 - x2197) +
    (x2065 * x679 + x684 * x863) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (x685 * x863) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[246] =
    50000000.0 * sc[13] * x1114 + 40000000.0 * sc[13] * x11481 * x1219 +
    sc[14] * x10666 + 30000000.0 * sc[16] * x1066 -
    30000000.0 * sc[16] * x1068 - 50000000.0 * sc[16] * x2184 +
    50000000.0 * sc[16] * x2274 + 200000000.0 * sc[1] * x1219 * x736 -
    4.035e+16 * x1095 * x11048 + x11050 * x2184 - x11050 * x2274 +
    x11087 * x11445 - 2.17083e+25 * x11095 + 4.035e+16 * x11126 -
    x11132 * x11445 + 3200000.0 * x1220 * x8360 - x1693 * x2065 +
    x1694 * x2065 + x1840 * x863 - x1861 * x863 + 30000000.0 * x234 * x96 +
    100000000.0 * x566 * x593 + x833 + 2.17083e+25 * x837 * x959 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x2184 - x2274) +
    (x2065 * x679 + x684 * x863) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (x685 * x863) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[269] =
    -30000000.0 * sc[16] * x1071 - 50000000.0 * sc[16] * x1555 +
    50000000.0 * sc[16] * x2326 + 30000000.0 * sc[16] * x661 + x11050 * x1555 -
    x11050 * x2326 + x11909 - x1695 * x2065 + x1697 * x2065 - x1845 * x863 +
    x725 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1555 - x2326) +
    (x2065 * x679 + x684 * x863) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (x685 * x863) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[292] =
    -50000000.0 * sc[16] * x1021 + 30000000.0 * sc[16] * x1072 -
    30000000.0 * sc[16] * x1076 + 50000000.0 * sc[16] * x2366 + x1021 * x11050 +
    x1039 - x11050 * x2366 - x1701 * x2065 + x1702 * x2065 - x1880 * x863 +
    x1887 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (x1021 - x2366) +
    (x2065 * x679 + x684 * x863) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (x685 * x863) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[315] =
    50000000.0 * sc[10] * x1114 + 30000000.0 * sc[16] * x1077 -
    30000000.0 * sc[16] * x1081 + 50000000.0 * sc[16] * x2354 -
    50000000.0 * sc[16] * x742 + 16.32 * sc[2] * exp(x2185) + x1035 -
    x11050 * x2354 + x11050 * x742 + 20000000.0 * x11481 * x364 -
    x1704 * x2065 + x1706 * x2065 - x1894 * x863 + x1896 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (-x2354 + x742) +
    (x2065 * x679 + x684 * x863) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (x685 * x863) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[338] = sc[10] * x10666 + 30000000.0 * sc[16] * x1083 -
           30000000.0 * sc[16] * x1089 + 50000000.0 * sc[16] * x1174 -
           50000000.0 * sc[16] * x1231 + x1035 - x11050 * x1174 +
           x11050 * x1231 - x1707 * x2065 + x1709 * x2065 - x1894 * x863 +
           x1897 * x863 +
           (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
             (-x1174 + x1231) +
           (x2065 * x679 + x684 * x863) *
             (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
           (x685 * x863) *
             (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
              (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
              (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                        (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[361] =
    30000000.0 * sc[16] * x1091 + 50000000.0 * sc[16] * x116 -
    30000000.0 * sc[16] * x1366 - 50000000.0 * sc[16] * x81 + x1035 -
    x11050 * x116 + x11050 * x81 - x1711 * x2065 + x1719 * x2065 +
    x1841 * x863 - x1904 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) * (-x116 + x81) +
    (x2065 * x679 + x684 * x863) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (x685 * x863) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[384] =
    -50000000.0 * sc[0] * x76 + 30000000.0 * sc[16] * x1367 -
    30000000.0 * sc[16] * x1472 + 50000000.0 * sc[16] * x1625 -
    50000000.0 * sc[16] * x848 - 40000000.0 * sc[16] - sc[1] * x790 -
    100000000.0 * sc[1] - 100000000.0 * sc[2] - 1600000.0 * sc[3] * x8290 -
    sc[4] * x159 - sc[5] * x135 - 50000000.0 * sc[8] + x1039 -
    2.69e+16 * x1094 * x11048 * x25 - x11050 * x1625 + x11050 * x848 -
    50000000.0 * x1473 + x169 * x863 + x1731 * x2065 - x1843 * x863 -
    30000000.0 * x594 + x813 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (-x1625 + x848) +
    (x2065 * x679 + x684 * x863) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (x685 * x863) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[407] =
    -50000000.0 * sc[16] * x851 - 30000000.0 * sc[16] * x854 +
    50000000.0 * sc[1] * x1029 + 10000000.0 * sc[2] * x1029 +
    7500000.0 * sc[4] * x2370 + x11050 * x851 + x11167 + x1739 * x2065 +
    x1882 * x863 + x813 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (-x1058 + x851) +
    (x2065 * x679 + x684 * x863) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (x685 * x863) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[430] = -30000000.0 * sc[16] * x1563 - 50000000.0 * sc[16] * x2058 +
           x11050 * x2058 + x11167 + x1661 * x2065 + x232 * x863 + x813 +
           (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
             (-x1058 + x2058) +
           (x2065 * x679 + x684 * x863) *
             (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
           (x685 * x863) *
             (x1783 - x1846 + (x680) * (-x1058 + x2058) +
              (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
              (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                        (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[453] =
    50000000.0 * sc[16] * x1085 - 50000000.0 * sc[16] * x1160 -
    30000000.0 * sc[16] * x1469 + 30000000.0 * sc[16] * x1565 + x1039 -
    x1085 * x11050 + x11050 * x1160 - x1671 * x2065 + x1745 * x2065 -
    x1843 * x863 + x1889 * x863 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
      (-x1085 + x1160) +
    (x2065 * x679 + x684 * x863) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (x685 * x863) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[476] = -50000000.0 * sc[16] * x1299 - 30000000.0 * sc[16] * x1574 +
           x11050 * x1299 + x11167 + x1892 * x863 + x2065 * x865 + x813 +
           (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) *
             (-x1058 + x1299) +
           (x2065 * x679 + x684 * x863) *
             (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
           (x685 * x863) *
             (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
              (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
              (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                        (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[499] =
    30000000.0 * sc[16] * x1575 - 30000000.0 * sc[16] * x1580 -
    50000000.0 * sc[16] * x319 + 50000000.0 * sc[16] * x963 + x1039 +
    x11050 * x319 - x11050 * x963 + x1692 * x2065 - x1843 * x863 +
    x1895 * x863 - x2065 * x295 +
    (-30000000.0 * sc[16] * x677 + x2065 * x678 - x683 * x863) * (x319 - x963) +
    (x2065 * x679 + x684 * x863) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (x685 * x863) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[17] =
    -sc[17] * x642 + 140000.0 * sc[3] * x1235 + x1050 + x11041 + x1235 * x2023 +
    x1235 * x2371 + x1235 * x856 - x2321 * x649 + x2321 * x651 - x649 * x891 +
    x651 * x891 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1476 + x973) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[40] =
    20000000.0 * sc[1] * x1960 * x211 + 20000000.0 * sc[2] * x1960 * x211 +
    140000.0 * sc[3] * x211 + x211 * x2371 - x2321 * x857 + x2321 * x964 +
    x253 + x34 + x5454 + x5545 - x857 * x891 + x891 * x964 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1636 - x1708) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[63] =
    140000.0 * sc[3] * x224 + x2023 * x224 + x224 * x2371 + x224 * x856 -
    x2321 * x965 + x2321 * x972 + x253 + x34 + x5545 + x5671 + x7503 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1772 - x1794) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[86] =
    20000000.0 * sc[1] * x1056 * x1960 + 20000000.0 * sc[2] * x1056 * x1960 +
    140000.0 * sc[3] * x1056 - 140000.0 * x1040 + x1056 * x2371 -
    140000.0 * x1241 - x2321 * x974 + x2321 * x976 + x253 + x5545 + x5746 -
    x891 * x974 + x891 * x976 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1829 - x1853) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[109] =
    sc[16] * x159 - 7500000.0 * sc[17] * x2370 - 20000000.0 * sc[17] * x7602 +
    140000.0 * sc[3] * x276 + x2023 * x276 - x2321 * x977 + x2321 * x982 +
    10000000.0 * x2370 * x517 + x2371 * x276 + x253 + x276 * x856 + x5545 +
    x5845 - x891 * x977 + x891 * x982 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1885 - x1899) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[132] =
    1.614e+22 * sc[10] * x2319 + sc[16] * x135 - 10000000.0 * sc[17] * x9183 +
    140000.0 * sc[3] * x1793 + x1010 * x2321 + x1010 * x891 + x11108 * x11296 -
    x11115 * x11296 - 5.3600740740740798e+37 * x11119 +
    5.3600740740740798e+37 * x1407 * x248 - 1.614e+22 * x1688 + x1793 * x2023 +
    x1793 * x2371 + x1793 * x856 - x2321 * x987 + x5970 - x891 * x987 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1954 - x1980) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[155] =
    -140000.0 * sc[17] * x1210 + 140000.0 * sc[3] * x1842 - x1012 * x2321 -
    x1012 * x891 + x1014 * x2321 + x1014 * x891 + x1842 * x2023 +
    x1842 * x2137 + x1842 * x2371 + x1842 * x856 + x2022 * x630 - x2045 * x630 +
    x253 + x6067 + x6100 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x2022 - x2045) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[178] =
    -x1015 * x2321 - x1015 * x891 + x1019 * x2321 + x1019 * x891 + x11922 +
    x2081 * x630 - x2099 * x630 + x6149 + x6186 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x2081 - x2099) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[201] =
    140000.0 * sc[3] * x1238 - x1022 * x2321 - x1022 * x891 + x1025 * x2321 +
    x1025 * x891 + x1238 * x2023 + x1238 * x2371 + x1238 * x856 + x253 + x6100 +
    x6246 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x2123 - x2149) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[224] =
    -x1049 * x2321 - x1049 * x891 + x1053 * x2321 + x1053 * x891 + x11924 +
    x6329 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x2138 - x2197) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[247] =
    4.035e+21 * sc[10] * x2319 + 20000000.0 * sc[1] * x1960 * x793 +
    20000000.0 * sc[2] * x1960 * x793 + 140000.0 * sc[3] * x793 -
    x1066 * x2321 - x1066 * x891 + x1068 * x2321 + x1068 * x891 +
    x11108 * x11458 - x11115 * x11458 - 1.34001851851852e+37 * x11119 +
    1.34001851851852e+37 * x1407 * x248 - 4.035e+21 * x1688 +
    2.69e+21 * x2319 * x25 + x2371 * x793 + x305 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x2184 - x2274) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[270] =
    x1071 * x2321 + x1071 * x891 + x11924 - x2321 * x661 + x519 * x594 -
    x661 * x891 + x844 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1555 - x2326) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[293] =
    20000000.0 * sc[1] * x1960 * x228 + 20000000.0 * sc[2] * x1960 * x228 +
    140000.0 * sc[3] * x228 - x1072 * x2321 - x1072 * x891 + x1076 * x2321 +
    x1076 * x891 + x228 * x2371 + x253 + x6100 + x6639 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (x1021 - x2366) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[316] =
    -x1077 * x2321 - x1077 * x891 + x1081 * x2321 + x1081 * x891 + x1406 +
    x207 + x6707 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x2354 + x742) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[339] =
    20000000.0 * sc[4] * x820 - x1083 * x2321 - x1083 * x891 + x1089 * x2321 +
    x1089 * x891 - x1174 * x630 + x1231 * x630 + x1406 + x207 + x2148 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1174 + x1231) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[362] =
    -x1091 * x2321 - x1091 * x891 + x1366 * x2321 + x1366 * x891 + x1406 +
    x984 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) * (-x116 + x81) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[385] =
    50000000.0 * sc[0] * x76 + 48000000.0 * sc[2] * x169 + sc[4] * x159 +
    sc[5] * x135 + x11922 - x1367 * x2321 - x1367 * x891 + x1472 * x2321 +
    x1472 * x891 - x1625 * x630 + x2095 + x6186 + x630 * x848 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1625 + x848) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[408] =
    -sc[0] * x642 + 20000000.0 * sc[1] * x1960 * x434 -
    10000000.0 * sc[2] * x1029 + 20000000.0 * sc[2] * x1960 * x434 -
    sc[2] * x7498 + 140000.0 * sc[3] * x434 - 7500000.0 * sc[4] * x2370 -
    20000000.0 * sc[4] * x7602 - 10000000.0 * sc[5] * x9183 -
    140000.0 * sc[6] * x1210 + x11042 - 2.69e+21 * x2313 * x776 * x881 +
    x2321 * x854 + x2371 * x434 + x253 + x553 + x8111 + x854 * x891 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1058 + x851) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[431] =
    20000000.0 * sc[1] * x1960 * x769 + 20000000.0 * sc[2] * x1960 * x769 +
    48000000.0 * sc[2] * x232 + 140000.0 * sc[3] * x769 + x11042 +
    x1563 * x2321 + x1563 * x891 + x2058 * x630 + x2095 + x2137 * x769 +
    x2371 * x769 + x253 + x6100 + x8111 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1058 + x2058) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-20000000.0 * sc[4] * x603) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[454] =
    x11922 + x1469 * x2321 + x1469 * x891 - x1565 * x2321 - x1565 * x891 +
    x2194 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1085 + x1160) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[477] =
    48000000.0 * sc[2] * x1892 + sc[2] * x5667 + x11042 + x11922 +
    x1299 * x630 + x1574 * x2321 + x1574 * x891 + x2095 + x6186 + x8111 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) *
      (-x1058 + x1299) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-20000000.0 * sc[4] * x603) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[500] =
    48000000.0 * sc[2] * x1895 + x11922 - x1575 * x2321 - x1575 * x891 +
    x1580 * x2321 + x1580 * x891 + x2095 + x319 * x630 + x6186 - x630 * x963 +
    (-48000000.0 * sc[2] * x683 + x2321 * x677 + x677 * x891) * (x319 - x963) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x66 - x2023 * x230 -
     x2137 * x230 - x230 * x2371 - x230 * x856) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-20000000.0 * sc[4] * x603) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x435 - x2023 * x435 -
     x2137 * x435 - x2371 * x435 - x435 * x856) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[18] =
    80200000.0 * sc[2] * x909 - 80200000.0 * sc[2] * x935 + x1067 +
    x1235 * x2192 + x154 * x830 - x154 * x951 +
    (x154 * x680) * (-x1476 + x973) +
    (x154 * x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-x2192 * x230) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[41] =
    -80200000.0 * sc[18] * x1332 - 80200000.0 * sc[2] * x1504 +
    80200000.0 * sc[2] * x523 + x1065 * x154 - x154 * x971 +
    5.2e+27 * x176 * x2191 * x517 + x211 * x2192 + x5550 +
    (x154 * x680) * (x1636 - x1708) +
    (x154 * x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-x2192 * x230) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[64] =
    -80200000.0 * sc[2] * x1656 + 80200000.0 * sc[2] * x1721 + x154 * x1664 -
    x154 * x759 + x2192 * x224 + 80200000.0 * x440 + x5550 +
    (x154 * x680) * (x1772 - x1794) +
    (x154 * x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-x2192 * x230) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[87] =
    -80200000.0 * sc[2] * x1762 + 80200000.0 * sc[2] * x1764 + x1056 * x2192 -
    x154 * x1666 + x154 * x1672 + x5550 + (x154 * x680) * (x1829 - x1853) +
    (x154 * x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-x2192 * x230) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[110] =
    -sc[18] * x9058 + 80200000.0 * sc[2] * x1776 - 80200000.0 * sc[2] * x1798 -
    x154 * x1700 + x154 * x398 + x2192 * x276 + x5550 +
    (x154 * x680) * (x1885 - x1899) +
    (x154 * x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-x2192 * x230) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[133] =
    -80200000.0 * sc[2] * x1779 + 80200000.0 * sc[2] * x1856 -
    sc[8] * x10287 * x119 * x359 * x433 + 3.12e+28 * x1024 +
    2.2e+36 * x10287 * x1287 * x25 - 1.6224e+48 * x1055 +
    1.6224e+48 * x1062 * x1511 - x1087 * x5885 - 1.32e+37 * x1287 -
    3.12e+28 * x1414 + 1.61333333333333e+66 * x1523 * x356 - x154 * x1760 +
    x154 * x1768 + x1793 * x2192 - 1.61333333333333e+66 * x362 + x554 * x5885 +
    1.32e+37 * x752 + (x154 * x680) * (x1954 - x1980) +
    (x154 * x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-x2192 * x230) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[156] =
    sc[14] * x9231 - 80200000.0 * sc[2] * x1851 + 80200000.0 * sc[2] * x1878 -
    x154 * x1770 + x154 * x1771 + x1842 * x2192 + x5550 +
    (x154 * x680) * (x2022 - x2045) +
    (x154 * x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-x2192 * x230) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[179] =
    80200000.0 * sc[2] * x1898 - 80200000.0 * sc[2] * x1906 - x154 * x1780 +
    x154 * x1781 + x1903 * x2192 + x5550 + (x154 * x680) * (x2081 - x2099) +
    (x154 * x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-x2192 * x230) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[202] =
    -80200000.0 * sc[2] * x1947 + 80200000.0 * sc[2] * x1958 +
    x119 * x359 * x433 + x1238 * x2192 - x154 * x1788 + x154 * x1789 + x5550 +
    (x154 * x680) * (x2123 - x2149) +
    (x154 * x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-x2192 * x230) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[225] =
    -80200000.0 * sc[2] * x1959 + 80200000.0 * sc[2] * x1964 + x1067 -
    x154 * x1791 + x154 * x1797 + x2192 * x792 +
    (x154 * x680) * (x2138 - x2197) +
    (x154 * x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-x2192 * x230) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[248] =
    -80200000.0 * sc[2] * x1965 + 80200000.0 * sc[2] * x646 + x10291 * x10674 -
    x10300 * x10674 + 4.056e+47 * x1062 * x1511 -
    4.056e+47 * x1062 * x517 * x789 - x1087 * x6379 - 3.3e+36 * x1287 -
    7.8e+27 * x1414 + 4.0333333333333298e+65 * x1523 * x356 - x154 * x1801 +
    x154 * x1804 + 7.8e+27 * x2191 * x517 * x772 + x2192 * x793 -
    4.0333333333333298e+65 * x356 * x433 * x754 + x554 * x6379 +
    3.3e+36 * x752 + (x154 * x680) * (x2184 - x2274) +
    (x154 * x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-x2192 * x230) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[271] =
    -80200000.0 * sc[2] * x655 + 80200000.0 * sc[2] * x908 + x1067 +
    x154 * x1696 - x154 * x1806 + x2192 * x792 +
    (x154 * x680) * (x1555 - x2326) +
    (x154 * x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-x2192 * x230) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[294] =
    -80200000.0 * sc[2] * x1976 + 80200000.0 * sc[2] * x1977 - x154 * x1755 +
    x154 * x1761 + x2192 * x228 + x5550 + (x154 * x680) * (x1021 - x2366) +
    (x154 * x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-x2192 * x230) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[317] =
    -80200000.0 * sc[2] * x1979 + 80200000.0 * sc[2] * x1986 - x154 * x1767 +
    x154 * x1833 + x180 + (x154 * x680) * (-x2354 + x742) +
    (x154 * x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-x2192 * x230) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[340] =
    -80200000.0 * sc[2] * x1979 + 80200000.0 * sc[2] * x1992 + sc[6] * x9231 -
    x154 * x1835 + x154 * x1836 + x180 + (x154 * x680) * (-x1174 + x1231) +
    (x154 * x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-x2192 * x230) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[363] =
    80200000.0 * sc[2] * x1886 - 80200000.0 * sc[2] * x1999 - x154 * x1838 +
    x154 * x1839 + x180 + (x154 * x680) * (-x116 + x81) +
    (x154 * x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-x2192 * x230) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[386] =
    80200000.0 * sc[2] * x1956 - x154 * x1846 + x154 * x1849 + x1903 * x2192 +
    x2026 + x5550 + (x154 * x680) * (-x1625 + x848) +
    (x154 * x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-x2192 * x230) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[409] =
    80200000.0 * sc[2] * x1956 - x154 * x1846 + x154 * x1852 + x2026 +
    x2192 * x434 + x5550 + (x154 * x680) * (-x1058 + x851) +
    (x154 * x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-x2192 * x230) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[432] =
    -80200000.0 * sc[1] * x1332 + 80200000.0 * sc[2] * x1957 - sc[4] * x9058 -
    x119 * x1691 - 5.2e+27 * x1228 * x2191 * x776 + x154 * x1783 -
    x154 * x1846 + x2026 + x2192 * x769 + x5550 +
    (x154 * x680) * (-x1058 + x2058) +
    (x154 * x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-x2192 * x230) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[455] =
    80200000.0 * sc[2] * x1972 - x154 * x1775 + x154 * x1782 + x1903 * x2192 +
    x2026 + x5550 + (x154 * x680) * (-x1085 + x1160) +
    (x154 * x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-x2192 * x230) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[478] =
    80200000.0 * sc[2] * x1649 - x154 * x1846 + x154 * x1847 + x1903 * x2192 +
    x2026 + x5550 + (x154 * x680) * (-x1058 + x1299) +
    (x154 * x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-x2192 * x230) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[501] =
    80200000.0 * sc[2] * x1956 - x154 * x1846 + x154 * x1881 + x1903 * x2192 +
    x2026 + x5550 + (x154 * x680) * (x319 - x963) +
    (x154 * x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-x2192 * x230) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-80200000.0 * sc[2] * x596 + x154 * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (-80200000.0 * sc[2] * x558 - x2192 * x435) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[19] =
    -sc[19] * x714 - 60000000.0 * sc[19] * x830 + 60000000.0 * sc[19] * x951 +
    x12 + x2041 + x2183 + x2270 * x726 - x2270 * x826 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1476 + x973) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-x2143 * x66) *
      (x726 - x826 + (-x683) * (-x1476 + x973) +
       (x684) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x685) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (x2128 * x685 + x2270 * x685) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[42] =
    -60000000.0 * sc[19] * x1065 + 60000000.0 * sc[19] * x971 + x1061 * x2270 +
    x2183 - x2270 * x950 + x2355 + x5541 + x839 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1636 - x1708) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-x2143 * x66) *
      (x1061 - x950 + (-x683) * (x1636 - x1708) +
       (x684) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x685) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (x2128 * x685 + x2270 * x685) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[65] =
    -60000000.0 * sc[19] * x1664 + 60000000.0 * sc[19] * x759 + x140 * x2270 -
    x1556 * x2270 + x2183 + x22 + x5541 + x5662 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1772 - x1794) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-x2143 * x66) *
      (x140 - x1556 + (-x683) * (x1772 - x1794) +
       (x684) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x685) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (x2128 * x685 + x2270 * x685) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[88] =
    60000000.0 * sc[19] * x1666 - 60000000.0 * sc[19] * x1672 + sc[20] * x8297 -
    x1627 * x2270 + x1630 * x2270 + x2183 + x5541 + x5741 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1829 - x1853) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-x2143 * x66) *
      (-x1627 + x1630 + (-x683) * (x1829 - x1853) +
       (x684) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x685) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[111] =
    60000000.0 * sc[19] * x1700 - 60000000.0 * sc[19] * x398 - sc[19] * x7580 +
    sc[20] * x9068 + 6600000.0 * x162 * x166 * x234 - x1677 * x2270 +
    x1699 * x2270 + x2183 + x5541 + x5835 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1885 - x1899) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-x2143 * x66) *
      (-x1677 + x1699 + (-x683) * (x1885 - x1899) +
       (x684) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x685) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[134] =
    60000000.0 * sc[19] * x1760 - 60000000.0 * sc[19] * x1768 - sc[19] * x9164 +
    x1668 * x2270 - x1741 * x2270 + x2183 + x5963 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1954 - x1980) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-x2143 * x66) *
      (x1668 - x1741 + (-x683) * (x1954 - x1980) +
       (x684) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x685) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[157] =
    60000000.0 * sc[19] * x1770 - 60000000.0 * sc[19] * x1771 -
    9260000.0 * sc[19] + x10019 - x1759 * x2270 + x1769 * x2270 + x2183 +
    x6064 + x6104 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x2022 - x2045) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-x2143 * x66) *
      (-x1759 + x1769 + (-x683) * (x2022 - x2045) +
       (x684) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x685) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[180] =
    -sc[19] * x10040 + 60000000.0 * sc[19] * x1780 -
    60000000.0 * sc[19] * x1781 - x1786 * x2270 + x202 * x2270 + x2183 + x6104 +
    x6146 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x2081 - x2099) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-x2143 * x66) *
      (-x1786 + x202 + (-x683) * (x2081 - x2099) +
       (x684) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x685) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[203] =
    -50000000.0 * sc[14] * x1680 + 50000000.0 * sc[14] * x1681 -
    sc[19] * x10583 + 60000000.0 * sc[19] * x1788 -
    60000000.0 * sc[19] * x1789 + sc[20] * x10586 + x0 * x10375 -
    x1792 * x2270 + x1832 * x2270 + x2183 + x6104 + x6238 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x2123 - x2149) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-x2143 * x66) *
      (-x1792 + x1832 + (-x683) * (x2123 - x2149) +
       (x684) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x685) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[226] =
    -50000000.0 * sc[14] * x1683 + 50000000.0 * sc[14] * x1689 -
    sc[19] * x10631 + 60000000.0 * sc[19] * x1791 -
    60000000.0 * sc[19] * x1797 - x1834 * x2270 + x1848 * x2270 + x2041 +
    x2183 + x6323 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x2138 - x2197) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-x2143 * x66) *
      (-x1834 + x1848 + (-x683) * (x2138 - x2197) +
       (x684) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x685) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[249] =
    60000000.0 * sc[19] * x1801 - 60000000.0 * sc[19] * x1804 +
    60000000.0 * sc[20] * x1263 + x1840 * x2270 - x1861 * x2270 + x2183 +
    x6454 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x2184 - x2274) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-x2143 * x66) *
      (x1840 - x1861 + (-x683) * (x2184 - x2274) +
       (x684) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x685) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[272] =
    -60000000.0 * sc[19] * x1696 + 60000000.0 * sc[19] * x1806 - x1845 * x2270 +
    x2041 + x2183 + x2270 * x725 + x6554 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1555 - x2326) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-x2143 * x66) *
      (-x1845 + x725 + (-x683) * (x1555 - x2326) +
       (x684) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x685) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (x2128 * x685 + x2270 * x685) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[295] =
    60000000.0 * sc[19] * x1755 - 60000000.0 * sc[19] * x1761 +
    6600000.0 * x166 * x234 * x739 - x1880 * x2270 + x1887 * x2270 + x2183 +
    x6104 + x6634 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x1021 - x2366) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-x2143 * x66) *
      (-x1880 + x1887 + (-x683) * (x1021 - x2366) +
       (x684) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x685) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[318] =
    60000000.0 * sc[19] * x1767 - 60000000.0 * sc[19] * x1833 + x10759 -
    x1894 * x2128 - x1894 * x2270 + x1896 * x2270 + x2096 + x2183 + x6700 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x2354 + x742) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-x2143 * x66) *
      (-x1894 + x1896 + (-x683) * (-x2354 + x742) +
       (x684) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x685) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[341] =
    60000000.0 * sc[19] * x1835 - 60000000.0 * sc[19] * x1836 - x1894 * x2128 -
    x1894 * x2270 + x1897 * x2270 + x2096 + x2144 + x2183 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1174 + x1231) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-x2143 * x66) *
      (-x1894 + x1897 + (-x683) * (-x1174 + x1231) +
       (x684) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[364] =
    60000000.0 * sc[19] * x1838 - 60000000.0 * sc[19] * x1839 + x1841 * x2270 -
    x1904 * x2270 + x2096 + x213 + x2183 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x116 + x81) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-x2143 * x66) *
      (x1841 - x1904 + (-x683) * (-x116 + x81) +
       (x684) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x685) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[387] =
    50000000.0 * sc[14] * x1731 - 60000000.0 * sc[19] * x1849 + x10286 -
    x1367 * x2125 + x1472 * x2125 + x169 * x2128 + x169 * x2270 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1625 + x848) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-x2143 * x66) *
      (x169 - x1843 + (-x683) * (-x1625 + x848) +
       (x684) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x685) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[410] =
    -50000000.0 * sc[14] * x1730 + 60000000.0 * sc[19] * x1846 -
    60000000.0 * sc[19] * x1852 + x10191 + x1882 * x2270 + x2082 + x2183 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1058 + x851) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-x2143 * x66) *
      (-x1843 + x1882 + (-x683) * (-x1058 + x851) +
       (x684) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x685) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[433] =
    50000000.0 * sc[14] * x1661 - 60000000.0 * sc[19] * x1783 + x10286 -
    x1475 * x2125 + x1563 * x2125 + x2128 * x232 + x2270 * x232 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1058 + x2058) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-x2143 * x66) *
      (-x1843 + x232 + (-x683) * (-x1058 + x2058) +
       (x684) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x685) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (x2128 * x685 + x2270 * x685) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[456] =
    -sc[0] * x714 - 50000000.0 * sc[14] * x1671 + 50000000.0 * sc[14] * x1745 +
    60000000.0 * sc[19] * x1775 - 60000000.0 * sc[19] * x1782 - sc[4] * x7580 -
    sc[5] * x9164 - 9260000.0 * sc[6] - sc[7] * x10040 - sc[8] * x10583 -
    sc[9] * x10631 - x0 * x10372 + x10191 + x1889 * x2270 + x2179 + x2183 -
    60000000.0 * x433 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1085 + x1160) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-x2143 * x66) *
      (-x1843 + x1889 + (-x683) * (-x1085 + x1160) +
       (x684) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x685) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[479] =
    60000000.0 * sc[10] * x1263 + 50000000.0 * sc[14] * x865 -
    60000000.0 * sc[19] * x1847 + sc[3] * x8297 + sc[4] * x9068 +
    sc[8] * x10586 + x10232 + x10286 + x1048 - x1475 * x2125 + x1574 * x2125 +
    x1892 * x2128 + x1892 * x2270 + 1.33e+48 * x1948 * x1949 * x776 + x8180 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (-x1058 + x1299) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-x2143 * x66) *
      (-x1843 + x1892 + (-x683) * (-x1058 + x1299) +
       (x684) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x685) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[502] =
    60000000.0 * sc[19] * x1846 - 60000000.0 * sc[19] * x1881 + x10191 -
    x1843 * x2128 + x1895 * x2270 + x2183 + x461 + x6104 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2125 * x677 -
     x2128 * x683 - x2270 * x683) *
      (x319 - x963) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2128 * x684 -
     x2143 * x660 + x2270 * x684) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-x2143 * x66) *
      (-x1843 + x1895 + (-x683) * (x319 - x963) +
       (x684) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x685) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (-60000000.0 * sc[19] * x682 - x2143 * x603) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (x2128 * x685 + x2270 * x685) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[20] =
    sc[19] * x714 + 60000000.0 * sc[19] * x830 - 60000000.0 * sc[19] * x951 +
    1800000.0 * sc[1] * x1240 - 1800000.0 * sc[20] * x1301 +
    90000.0 * sc[3] * x1240 + 24000000.0 * sc[4] * x1240 +
    11000000.0 * sc[8] * x1240 + x1090 * x1240 + x1199 + x2033 + x719 * x726 -
    x719 * x826 + (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1476 + x973) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x649 + x651 + (x677) * (-x1476 + x973)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (x909 - x935 +
       (-x596) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                  (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
       (-x558) *
         (x830 - x951 + (x680) * (-x1476 + x973) +
          (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
          (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                    (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1016 + x988 + (x678) * (-x1476 + x973) +
       (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))) +
    (x685 * x719) *
      (x830 - x951 + (x680) * (-x1476 + x973) +
       (x681) * (-x649 + x651 + (x677) * (-x1476 + x973)) +
       (x682) * (-x1016 + x988 + (x678) * (-x1476 + x973) +
                 (x679) * (-x649 + x651 + (x677) * (-x1476 + x973))));
  J[43] =
    sc[17] * x1358 * x936 + 60000000.0 * sc[19] * x1065 +
    1.33e+48 * sc[19] * x1948 * x728 - 60000000.0 * sc[19] * x971 +
    1800000.0 * sc[1] * x476 + 90000.0 * sc[3] * x476 +
    24000000.0 * sc[4] * x476 + 11000000.0 * sc[8] * x476 + x1061 * x719 +
    x1082 - 1800000.0 * x1319 + x5601 - 1800000.0 * x581 + x708 - x719 * x950 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1636 - x1708) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x857 + x964 + (x677) * (x1636 - x1708)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1504 + x523 +
       (-x596) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                  (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
       (-x558) *
         (x1065 - x971 + (x680) * (x1636 - x1708) +
          (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
          (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                    (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1073 + x985 + (x678) * (x1636 - x1708) +
       (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))) +
    (x685 * x719) *
      (x1065 - x971 + (x680) * (x1636 - x1708) +
       (x681) * (-x857 + x964 + (x677) * (x1636 - x1708)) +
       (x682) * (-x1073 + x985 + (x678) * (x1636 - x1708) +
                 (x679) * (-x857 + x964 + (x677) * (x1636 - x1708))));
  J[66] =
    60000000.0 * sc[19] * x1664 - 60000000.0 * sc[19] * x759 +
    1800000.0 * sc[1] * x1654 + 90000.0 * sc[3] * x1654 +
    24000000.0 * sc[4] * x1654 + 11000000.0 * sc[8] * x1654 + x1090 * x1654 +
    x140 * x719 - x1556 * x719 + x5601 + x708 + x7491 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1772 - x1794) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x965 + x972 + (x677) * (x1772 - x1794)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1656 + x1721 +
       (-x596) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                  (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
       (-x558) *
         (x1664 - x759 + (x680) * (x1772 - x1794) +
          (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
          (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                    (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))))) +
    (60000000.0 * sc[19] * x682) *
      (-x315 + x318 + (x678) * (x1772 - x1794) +
       (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))) +
    (x685 * x719) *
      (x1664 - x759 + (x680) * (x1772 - x1794) +
       (x681) * (-x965 + x972 + (x677) * (x1772 - x1794)) +
       (x682) * (-x315 + x318 + (x678) * (x1772 - x1794) +
                 (x679) * (-x965 + x972 + (x677) * (x1772 - x1794))));
  J[89] =
    -60000000.0 * sc[19] * x1666 + 60000000.0 * sc[19] * x1672 +
    1800000.0 * sc[1] * x1733 - sc[20] * x8297 + 90000.0 * sc[3] * x1733 +
    24000000.0 * sc[4] * x1733 + 11000000.0 * sc[8] * x1733 + x1090 * x1733 -
    90000.0 * x1319 - x1627 * x719 + x1630 * x719 + x5601 - 90000.0 * x581 +
    x708 + (60000000.0 * sc[19] * x680 - x683 * x719) * (x1829 - x1853) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x974 + x976 + (x677) * (x1829 - x1853)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1762 + x1764 +
       (-x596) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                  (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
       (-x558) *
         (-x1666 + x1672 + (x680) * (x1829 - x1853) +
          (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
          (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                    (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1416 + x883 + (x678) * (x1829 - x1853) +
       (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))) +
    (x685 * x719) *
      (-x1666 + x1672 + (x680) * (x1829 - x1853) +
       (x681) * (-x974 + x976 + (x677) * (x1829 - x1853)) +
       (x682) * (-x1416 + x883 + (x678) * (x1829 - x1853) +
                 (x679) * (-x974 + x976 + (x677) * (x1829 - x1853))));
  J[112] =
    -60000000.0 * sc[19] * x1700 + 60000000.0 * sc[19] * x398 + sc[19] * x7580 +
    1800000.0 * sc[1] * x219 - sc[20] * x9068 + 90000.0 * sc[3] * x219 +
    24000000.0 * sc[4] * x219 + 11000000.0 * sc[8] * x219 + x1090 * x219 -
    24000000.0 * x1319 - x1677 * x719 + x1699 * x719 + x5601 -
    24000000.0 * x581 + x708 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1885 - x1899) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x977 + x982 + (x677) * (x1885 - x1899)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (x1776 - x1798 +
       (-x596) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                  (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
       (-x558) *
         (-x1700 + x398 + (x680) * (x1885 - x1899) +
          (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
          (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                    (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1645 + x1659 + (x678) * (x1885 - x1899) +
       (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))) +
    (x685 * x719) *
      (-x1700 + x398 + (x680) * (x1885 - x1899) +
       (x681) * (-x977 + x982 + (x677) * (x1885 - x1899)) +
       (x682) * (-x1645 + x1659 + (x678) * (x1885 - x1899) +
                 (x679) * (-x977 + x982 + (x677) * (x1885 - x1899))));
  J[135] =
    -60000000.0 * sc[19] * x1760 + 60000000.0 * sc[19] * x1768 +
    sc[19] * x9164 + 1800000.0 * sc[1] * x1946 - 24000000.0 * sc[20] * x1308 +
    90000.0 * sc[3] * x1946 + 24000000.0 * sc[4] * x1946 +
    11000000.0 * sc[8] * x1946 - sc[8] * x70 * x74 +
    4.375896e+86 * x10344 * x1539 - 4.375896e+86 * x10344 * x234 * x722 +
    2.562e+47 * x10514 - 5.3067e+88 * x1622 * x2018 + x1668 * x719 -
    x1741 * x719 - 7.98e+48 * x1948 * x1973 + 7.98e+48 * x1948 * x1978 +
    5.3067e+88 * x2018 * x2040 + 4.27e+46 * x25 * x51 * x74 - x31 * x5954 +
    x455 * x5954 - 2.562e+47 * x51 + x5973 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1954 - x1980) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (x1010 - x987 + (x677) * (x1954 - x1980)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1779 + x1856 +
       (-x596) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                  (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
       (-x558) *
         (-x1760 + x1768 + (x680) * (x1954 - x1980) +
          (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
          (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                    (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1660 + x1662 + (x678) * (x1954 - x1980) +
       (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))) +
    (x685 * x719) *
      (-x1760 + x1768 + (x680) * (x1954 - x1980) +
       (x681) * (x1010 - x987 + (x677) * (x1954 - x1980)) +
       (x682) * (-x1660 + x1662 + (x678) * (x1954 - x1980) +
                 (x679) * (x1010 - x987 + (x677) * (x1954 - x1980))));
  J[158] =
    -60000000.0 * sc[19] * x1770 + 60000000.0 * sc[19] * x1771 +
    2660000.0 * sc[19] + 1800000.0 * sc[1] * x1985 - 90000.0 * sc[20] * x1304 +
    90000.0 * sc[3] * x1985 + 24000000.0 * sc[4] * x1985 +
    11000000.0 * sc[8] * x1985 - x10019 + x1090 * x1985 - x1759 * x719 +
    x1769 * x719 + x5601 + x708 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x2022 - x2045) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1851 + x1878 +
       (-x596) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                  (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
       (-x558) *
         (-x1770 + x1771 + (x680) * (x2022 - x2045) +
          (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
          (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                    (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1665 + x1670 + (x678) * (x2022 - x2045) +
       (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))) +
    (x685 * x719) *
      (-x1770 + x1771 + (x680) * (x2022 - x2045) +
       (x681) * (-x1012 + x1014 + (x677) * (x2022 - x2045)) +
       (x682) * (-x1665 + x1670 + (x678) * (x2022 - x2045) +
                 (x679) * (-x1012 + x1014 + (x677) * (x2022 - x2045))));
  J[181] =
    sc[19] * x10040 - 60000000.0 * sc[19] * x1780 +
    60000000.0 * sc[19] * x1781 + x10403 - x1786 * x719 + x202 * x719 + x708 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x2081 - x2099) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (x1898 - x1906 +
       (-x596) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                  (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
       (-x558) *
         (-x1780 + x1781 + (x680) * (x2081 - x2099) +
          (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
          (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                    (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1673 + x1674 + (x678) * (x2081 - x2099) +
       (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))) +
    (x685 * x719) *
      (-x1780 + x1781 + (x680) * (x2081 - x2099) +
       (x681) * (-x1015 + x1019 + (x677) * (x2081 - x2099)) +
       (x682) * (-x1673 + x1674 + (x678) * (x2081 - x2099) +
                 (x679) * (-x1015 + x1019 + (x677) * (x2081 - x2099))));
  J[204] =
    sc[14] * x6247 + sc[17] * x1172 * x936 - 60000000.0 * sc[19] * x1788 +
    60000000.0 * sc[19] * x1789 + 1800000.0 * sc[1] * x453 - sc[20] * x10586 +
    90000.0 * sc[3] * x453 + 24000000.0 * sc[4] * x453 +
    11000000.0 * sc[8] * x453 + x1090 * x453 - 11000000.0 * x1319 -
    x1792 * x719 + x1832 * x719 + x5601 - 11000000.0 * x581 + x70 + x708 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x2123 - x2149) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1947 + x1958 +
       (-x596) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                  (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
       (-x558) *
         (-x1788 + x1789 + (x680) * (x2123 - x2149) +
          (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
          (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                    (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1680 + x1681 + (x678) * (x2123 - x2149) +
       (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))) +
    (x685 * x719) *
      (-x1788 + x1789 + (x680) * (x2123 - x2149) +
       (x681) * (-x1022 + x1025 + (x677) * (x2123 - x2149)) +
       (x682) * (-x1680 + x1681 + (x678) * (x2123 - x2149) +
                 (x679) * (-x1022 + x1025 + (x677) * (x2123 - x2149))));
  J[227] =
    sc[19] * x10631 - 60000000.0 * sc[19] * x1791 +
    60000000.0 * sc[19] * x1797 + 1800000.0 * sc[1] * x2020 -
    11000000.0 * sc[20] * x1315 + 90000.0 * sc[3] * x2020 +
    24000000.0 * sc[4] * x2020 + 11000000.0 * sc[8] * x2020 + x1090 * x2020 +
    x1199 - x1834 * x719 + x1848 * x719 + x2033 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x2138 - x2197) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1959 + x1964 +
       (-x596) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                  (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
       (-x558) *
         (-x1791 + x1797 + (x680) * (x2138 - x2197) +
          (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
          (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                    (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1683 + x1689 + (x678) * (x2138 - x2197) +
       (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))) +
    (x685 * x719) *
      (-x1791 + x1797 + (x680) * (x2138 - x2197) +
       (x681) * (-x1049 + x1053 + (x677) * (x2138 - x2197)) +
       (x682) * (-x1683 + x1689 + (x678) * (x2138 - x2197) +
                 (x679) * (-x1049 + x1053 + (x677) * (x2138 - x2197))));
  J[250] =
    -60000000.0 * sc[19] * x1801 + 60000000.0 * sc[19] * x1804 +
    1800000.0 * sc[1] * x2021 - 60000000.0 * sc[20] * x1263 +
    90000.0 * sc[3] * x2021 + 24000000.0 * sc[4] * x2021 +
    11000000.0 * sc[8] * x2021 + 1.093974e+86 * x10344 * x1539 -
    1.093974e+86 * x10346 -
    x10368 * (3.0 * x10348 * x688 + 0.42 * x10349 * x688) + 6.405e+46 * x10514 -
    1.326675e+88 * x1622 * x2018 + x1840 * x719 - x1861 * x719 -
    1.995e+48 * x1948 * x1973 + 1.995e+48 * x1948 * x1978 +
    1.326675e+88 * x2018 * x2040 - x31 * x6443 + x455 * x6443 + x479 -
    6.405e+46 * x51 + x701 * (3.0 * x10348 * x688 + 0.42 * x10349 * x688) +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x2184 - x2274) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1965 + x646 +
       (-x596) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                  (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
       (-x558) *
         (-x1801 + x1804 + (x680) * (x2184 - x2274) +
          (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
          (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                    (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1693 + x1694 + (x678) * (x2184 - x2274) +
       (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))) +
    (x685 * x719) *
      (-x1801 + x1804 + (x680) * (x2184 - x2274) +
       (x681) * (-x1066 + x1068 + (x677) * (x2184 - x2274)) +
       (x682) * (-x1693 + x1694 + (x678) * (x2184 - x2274) +
                 (x679) * (-x1066 + x1068 + (x677) * (x2184 - x2274))));
  J[273] =
    60000000.0 * sc[19] * x1696 - 60000000.0 * sc[19] * x1806 +
    1800000.0 * sc[1] * x930 + 90000.0 * sc[3] * x930 +
    24000000.0 * sc[4] * x930 + 11000000.0 * sc[8] * x930 + x1090 * x930 +
    x1199 - x1845 * x719 + x2033 + x719 * x725 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1555 - x2326) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (x1071 - x661 + (x677) * (x1555 - x2326)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x655 + x908 +
       (-x596) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                  (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
       (-x558) *
         (x1696 - x1806 + (x680) * (x1555 - x2326) +
          (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
          (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                    (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1695 + x1697 + (x678) * (x1555 - x2326) +
       (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))) +
    (x685 * x719) *
      (x1696 - x1806 + (x680) * (x1555 - x2326) +
       (x681) * (x1071 - x661 + (x677) * (x1555 - x2326)) +
       (x682) * (-x1695 + x1697 + (x678) * (x1555 - x2326) +
                 (x679) * (x1071 - x661 + (x677) * (x1555 - x2326))));
  J[296] =
    -60000000.0 * sc[19] * x1755 + 60000000.0 * sc[19] * x1761 +
    1800000.0 * sc[1] * x1502 + 90000.0 * sc[3] * x1502 +
    24000000.0 * sc[4] * x1502 + 11000000.0 * sc[8] * x1502 + x1090 * x1502 -
    x1880 * x719 + x1887 * x719 + x5601 + x708 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x1021 - x2366) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1976 + x1977 +
       (-x596) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                  (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
       (-x558) *
         (-x1755 + x1761 + (x680) * (x1021 - x2366) +
          (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
          (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                    (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1701 + x1702 + (x678) * (x1021 - x2366) +
       (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))) +
    (x685 * x719) *
      (-x1755 + x1761 + (x680) * (x1021 - x2366) +
       (x681) * (-x1072 + x1076 + (x677) * (x1021 - x2366)) +
       (x682) * (-x1701 + x1702 + (x678) * (x1021 - x2366) +
                 (x679) * (-x1072 + x1076 + (x677) * (x1021 - x2366))));
  J[319] =
    -60000000.0 * sc[19] * x1767 + 60000000.0 * sc[19] * x1833 + x10403 +
    x1722 - x1894 * x719 + x1896 * x719 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x2354 + x742) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1979 + x1986 +
       (-x596) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                  (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
       (-x558) *
         (-x1767 + x1833 + (x680) * (-x2354 + x742) +
          (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
          (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                    (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1704 + x1706 + (x678) * (-x2354 + x742) +
       (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))) +
    (x685 * x719) *
      (-x1767 + x1833 + (x680) * (-x2354 + x742) +
       (x681) * (-x1077 + x1081 + (x677) * (-x2354 + x742)) +
       (x682) * (-x1704 + x1706 + (x678) * (-x2354 + x742) +
                 (x679) * (-x1077 + x1081 + (x677) * (-x2354 + x742))));
  J[342] =
    -60000000.0 * sc[19] * x1835 + 60000000.0 * sc[19] * x1836 +
    1800000.0 * sc[1] * x488 + 90000.0 * sc[3] * x488 +
    24000000.0 * sc[4] * x488 + 11000000.0 * sc[8] * x488 + sc[8] * x6247 +
    x1090 * x488 + x1722 - x1894 * x719 + x1897 * x719 + x5601 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1174 + x1231) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1979 + x1992 +
       (-x596) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                  (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
       (-x558) *
         (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
          (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
          (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                    (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
       (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))) +
    (x685 * x719) *
      (-x1835 + x1836 + (x680) * (-x1174 + x1231) +
       (x681) * (-x1083 + x1089 + (x677) * (-x1174 + x1231)) +
       (x682) * (-x1707 + x1709 + (x678) * (-x1174 + x1231) +
                 (x679) * (-x1083 + x1089 + (x677) * (-x1174 + x1231))));
  J[365] =
    -60000000.0 * sc[19] * x1838 + 60000000.0 * sc[19] * x1839 +
    1800000.0 * sc[1] * x1716 + 90000.0 * sc[3] * x1716 +
    24000000.0 * sc[4] * x1716 + 11000000.0 * sc[8] * x1716 + x1588 + x1722 +
    x1841 * x719 - x1904 * x719 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x116 + x81) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1091 + x1366 + (x677) * (-x116 + x81)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (x1886 - x1999 +
       (-x596) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                  (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
       (-x558) *
         (-x1838 + x1839 + (x680) * (-x116 + x81) +
          (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
          (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                    (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1711 + x1719 + (x678) * (-x116 + x81) +
       (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))) +
    (x685 * x719) *
      (-x1838 + x1839 + (x680) * (-x116 + x81) +
       (x681) * (-x1091 + x1366 + (x677) * (-x116 + x81)) +
       (x682) * (-x1711 + x1719 + (x678) * (-x116 + x81) +
                 (x679) * (-x1091 + x1366 + (x677) * (-x116 + x81))));
  J[388] =
    60000000.0 * sc[19] * x1849 + x10403 + x11100 + x169 * x719 + x1970 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1625 + x848) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                  (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
       (-x558) *
         (-x1846 + x1849 + (x680) * (-x1625 + x848) +
          (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
          (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                    (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1730 + x1731 + (x678) * (-x1625 + x848) +
       (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))) +
    (x685 * x719) *
      (-x1846 + x1849 + (x680) * (-x1625 + x848) +
       (x681) * (-x1367 + x1472 + (x677) * (-x1625 + x848)) +
       (x682) * (-x1730 + x1731 + (x678) * (-x1625 + x848) +
                 (x679) * (-x1367 + x1472 + (x677) * (-x1625 + x848))));
  J[411] =
    60000000.0 * sc[19] * x1852 + sc[1] * x1358 * x936 + x10403 + x11100 +
    x1882 * x719 + x1970 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1058 + x851) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1475 + x854 + (x677) * (-x1058 + x851)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1890 + x1956 +
       (-x596) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                  (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
       (-x558) *
         (-x1846 + x1852 + (x680) * (-x1058 + x851) +
          (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
          (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                    (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1730 + x1739 + (x678) * (-x1058 + x851) +
       (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))) +
    (x685 * x719) *
      (-x1846 + x1852 + (x680) * (-x1058 + x851) +
       (x681) * (-x1475 + x854 + (x677) * (-x1058 + x851)) +
       (x682) * (-x1730 + x1739 + (x678) * (-x1058 + x851) +
                 (x679) * (-x1475 + x854 + (x677) * (-x1058 + x851))));
  J[434] =
    60000000.0 * sc[19] * x1783 + x10403 + x11100 + x1970 + x232 * x719 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1058 + x2058) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1890 + x1957 +
       (-x596) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                  (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
       (-x558) *
         (x1783 - x1846 + (x680) * (-x1058 + x2058) +
          (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
          (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                    (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))))) +
    (60000000.0 * sc[19] * x682) *
      (x1661 - x1730 + (x678) * (-x1058 + x2058) +
       (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))) +
    (x685 * x719) *
      (x1783 - x1846 + (x680) * (-x1058 + x2058) +
       (x681) * (-x1475 + x1563 + (x677) * (-x1058 + x2058)) +
       (x682) * (x1661 - x1730 + (x678) * (-x1058 + x2058) +
                 (x679) * (-x1475 + x1563 + (x677) * (-x1058 + x2058))));
  J[457] =
    sc[0] * x714 - 60000000.0 * sc[19] * x1775 + 60000000.0 * sc[19] * x1782 +
    1.33e+48 * sc[1] * x1948 * x728 + sc[4] * x7580 + sc[5] * x9164 +
    2660000.0 * sc[6] + sc[7] * x10040 + sc[9] * x10631 + x10403 +
    x1889 * x719 + x1970 + 60000000.0 * x433 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1085 + x1160) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1890 + x1972 +
       (-x596) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                  (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
       (-x558) *
         (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
          (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
          (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                    (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
       (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))) +
    (x685 * x719) *
      (-x1775 + x1782 + (x680) * (-x1085 + x1160) +
       (x681) * (x1469 - x1565 + (x677) * (-x1085 + x1160)) +
       (x682) * (-x1671 + x1745 + (x678) * (-x1085 + x1160) +
                 (x679) * (x1469 - x1565 + (x677) * (-x1085 + x1160))));
  J[480] =
    -1800000.0 * sc[0] * x1301 - 60000000.0 * sc[10] * x1263 +
    60000000.0 * sc[19] * x1847 + 1800000.0 * sc[1] * x1318 +
    90000.0 * sc[3] * x1318 - sc[3] * x8297 + 24000000.0 * sc[4] * x1318 -
    sc[4] * x9068 - 24000000.0 * sc[5] * x1308 - 90000.0 * sc[6] * x1304 -
    sc[8] * x10586 + 11000000.0 * sc[8] * x1318 - 11000000.0 * sc[9] * x1315 -
    x10232 + x11100 - 4.27e+46 * x1197 * x707 * x776 + x1892 * x719 -
    1.33e+48 * x1948 * x1949 * x776 + x1970 + x458 + x8181 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (-x1058 + x1299) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (x1649 - x1890 +
       (-x596) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                  (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
       (-x558) *
         (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
          (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
          (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                    (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1730 + x865 + (x678) * (-x1058 + x1299) +
       (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))) +
    (x685 * x719) *
      (-x1846 + x1847 + (x680) * (-x1058 + x1299) +
       (x681) * (-x1475 + x1574 + (x677) * (-x1058 + x1299)) +
       (x682) * (-x1730 + x865 + (x678) * (-x1058 + x1299) +
                 (x679) * (-x1475 + x1574 + (x677) * (-x1058 + x1299))));
  J[503] =
    60000000.0 * sc[19] * x1881 + x10403 + x11100 + x1895 * x719 + x1970 +
    (60000000.0 * sc[19] * x680 - x683 * x719) * (x319 - x963) +
    (60000000.0 * sc[19] * x681 + x684 * x719) *
      (-x1575 + x1580 + (x677) * (x319 - x963)) +
    (-1800000.0 * sc[1] * x490 - 90000.0 * sc[3] * x490 -
     24000000.0 * sc[4] * x490 - 11000000.0 * sc[8] * x490 - x1090 * x490) *
      (-x1890 + x1956 +
       (-x596) * (x1692 - x295 + (x678) * (x319 - x963) +
                  (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
       (-x558) *
         (-x1846 + x1881 + (x680) * (x319 - x963) +
          (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
          (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                    (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))))) +
    (60000000.0 * sc[19] * x682) *
      (x1692 - x295 + (x678) * (x319 - x963) +
       (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))) +
    (x685 * x719) *
      (-x1846 + x1881 + (x680) * (x319 - x963) +
       (x681) * (-x1575 + x1580 + (x677) * (x319 - x963)) +
       (x682) * (x1692 - x295 + (x678) * (x319 - x963) +
                 (x679) * (-x1575 + x1580 + (x677) * (x319 - x963))));
  J[21] = 0;
  J[44] = 0;
  J[67] = 0;
  J[90] = 0;
  J[113] = 0;
  J[136] = 0;
  J[159] = 0;
  J[182] = 0;
  J[205] = 0;
  J[228] = 0;
  J[251] = 0;
  J[274] = 0;
  J[297] = 0;
  J[320] = 0;
  J[343] = 0;
  J[366] = 0;
  J[389] = 0;
  J[412] = 0;
  J[435] = 0;
  J[458] = 0;
  J[481] = 0;
  J[504] = 0;

  for (int k = 0; k < 22; k++) {
    J[506 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[22], dcRdT[22], e_RT[22];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, T);
    dcvpRdT(dcRdT, T);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, T);
    dcvpRdT(dcRdT, T);
    speciesInternalEnergy(e_RT, T);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 22; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[506 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 22; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 22; ++m) {
      dehmixdc += eh_RT[m] * J[k * 23 + m];
    }
    J[k * 23 + 22] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[528] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 90;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 9966;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 22;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.01600000E+00;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 3.30060000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 1.50350000E+01;
  WT[9] = 1.60430000E+01;
  WT[10] = 2.80100000E+01;
  WT[11] = 4.40090000E+01;
  WT[12] = 3.00260000E+01;
  WT[13] = 2.60380000E+01;
  WT[14] = 2.80540000E+01;
  WT[15] = 3.00700000E+01;
  WT[16] = 4.10290000E+01;
  WT[17] = 4.20370000E+01;
  WT[18] = 4.40530000E+01;
  WT[19] = 4.10730000E+01;
  WT[20] = 4.20810000E+01;
  WT[21] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 3.80000000E+01;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 1.07400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.44000000E+02;
  EPS[9] = 1.41400000E+02;
  EPS[10] = 9.81000000E+01;
  EPS[11] = 2.44000000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 2.09000000E+02;
  EPS[14] = 2.80800000E+02;
  EPS[15] = 2.52300000E+02;
  EPS[16] = 1.50000000E+02;
  EPS[17] = 4.36000000E+02;
  EPS[18] = 4.36000000E+02;
  EPS[19] = 2.66800000E+02;
  EPS[20] = 2.66800000E+02;
  EPS[21] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.92000000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.45800000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.80000000E+00;
  SIG[9] = 3.74600000E+00;
  SIG[10] = 3.65000000E+00;
  SIG[11] = 3.76300000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 4.10000000E+00;
  SIG[14] = 3.97100000E+00;
  SIG[15] = 4.30200000E+00;
  SIG[16] = 2.50000000E+00;
  SIG[17] = 3.97000000E+00;
  SIG[18] = 3.97000000E+00;
  SIG[19] = 4.98200000E+00;
  SIG[20] = 4.98200000E+00;
  SIG[21] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 7.90000000E-01;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 2.60000000E+00;
  POL[10] = 1.95000000E+00;
  POL[11] = 2.65000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 2.80000000E+02;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 0.00000000E+00;
  ZROT[9] = 1.30000000E+01;
  ZROT[10] = 1.80000000E+00;
  ZROT[11] = 2.10000000E+00;
  ZROT[12] = 2.00000000E+00;
  ZROT[13] = 2.50000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.00000000E+00;
  ZROT[17] = 2.00000000E+00;
  ZROT[18] = 2.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 1;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.38347555E+01;
  COFETA[1] = 1.00106621E+00;
  COFETA[2] = -4.98105694E-02;
  COFETA[3] = 2.31450475E-03;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.71618439E+01;
  COFETA[13] = 2.68036374E+00;
  COFETA[14] = -2.72570227E-01;
  COFETA[15] = 1.21650964E-02;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.05420930E+01;
  COFETA[21] = -1.37777266E+00;
  COFETA[22] = 4.20502561E-01;
  COFETA[23] = -2.40627344E-02;
  COFETA[24] = -1.71463359E+01;
  COFETA[25] = 2.68036374E+00;
  COFETA[26] = -2.72570227E-01;
  COFETA[27] = 1.21650964E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -2.02316522E+01;
  COFETA[33] = 3.63241793E+00;
  COFETA[34] = -3.95581049E-01;
  COFETA[35] = 1.74725495E-02;
  COFETA[36] = -2.00094678E+01;
  COFETA[37] = 3.57220167E+00;
  COFETA[38] = -3.87936446E-01;
  COFETA[39] = 1.71483254E-02;
  COFETA[40] = -1.66188439E+01;
  COFETA[41] = 2.40307799E+00;
  COFETA[42] = -2.36167638E-01;
  COFETA[43] = 1.05714061E-02;
  COFETA[44] = -2.40015087E+01;
  COFETA[45] = 5.14359547E+00;
  COFETA[46] = -5.74269731E-01;
  COFETA[47] = 2.44937679E-02;
  COFETA[48] = -1.98330663E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -2.33666497E+01;
  COFETA[53] = 4.80350223E+00;
  COFETA[54] = -5.38341336E-01;
  COFETA[55] = 2.32747213E-02;
  COFETA[56] = -2.50655480E+01;
  COFETA[57] = 5.33982977E+00;
  COFETA[58] = -5.89982992E-01;
  COFETA[59] = 2.47780650E-02;
  COFETA[60] = -2.46410962E+01;
  COFETA[61] = 5.19497183E+00;
  COFETA[62] = -5.78827339E-01;
  COFETA[63] = 2.46050921E-02;
  COFETA[64] = -1.92183918E+01;
  COFETA[65] = 3.75164499E+00;
  COFETA[66] = -4.10390993E-01;
  COFETA[67] = 1.80861665E-02;
  COFETA[68] = -2.23395728E+01;
  COFETA[69] = 3.86433912E+00;
  COFETA[70] = -3.41553983E-01;
  COFETA[71] = 1.17083447E-02;
  COFETA[72] = -2.23161511E+01;
  COFETA[73] = 3.86433912E+00;
  COFETA[74] = -3.41553983E-01;
  COFETA[75] = 1.17083447E-02;
  COFETA[76] = -2.51527894E+01;
  COFETA[77] = 5.30723075E+00;
  COFETA[78] = -5.89742369E-01;
  COFETA[79] = 2.49294033E-02;
  COFETA[80] = -2.51406667E+01;
  COFETA[81] = 5.30723075E+00;
  COFETA[82] = -5.89742369E-01;
  COFETA[83] = 2.49294033E-02;
  COFETA[84] = -1.65695492E+01;
  COFETA[85] = 2.39056562E+00;
  COFETA[86] = -2.34558144E-01;
  COFETA[87] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 9.24082480E+00;
  COFLAM[1] = -4.69567526E-01;
  COFLAM[2] = 1.15980102E-01;
  COFLAM[3] = -2.61033156E-03;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = -1.93717634E+00;
  COFLAM[13] = 2.89110257E+00;
  COFLAM[14] = -2.71096988E-01;
  COFLAM[15] = 1.15344939E-02;
  COFLAM[16] = 1.41666231E+01;
  COFLAM[17] = -3.24630273E+00;
  COFLAM[18] = 5.33877875E-01;
  COFLAM[19] = -2.32905027E-02;
  COFLAM[20] = 2.33729836E+01;
  COFLAM[21] = -8.96536178E+00;
  COFLAM[22] = 1.52828630E+00;
  COFLAM[23] = -7.58551616E-02;
  COFLAM[24] = -1.12959874E+00;
  COFLAM[25] = 2.34014328E+00;
  COFLAM[26] = -1.63245076E-01;
  COFLAM[27] = 5.80319843E-03;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = 1.39937895E+01;
  COFLAM[33] = -4.64256403E+00;
  COFLAM[34] = 9.07728510E-01;
  COFLAM[35] = -4.77274380E-02;
  COFLAM[36] = 1.33091614E+01;
  COFLAM[37] = -4.96140250E+00;
  COFLAM[38] = 1.03295495E+00;
  COFLAM[39] = -5.63420011E-02;
  COFLAM[40] = 1.18777275E+01;
  COFLAM[41] = -3.15463597E+00;
  COFLAM[42] = 6.01972754E-01;
  COFLAM[43] = -3.03211015E-02;
  COFLAM[44] = -1.13649201E+01;
  COFLAM[45] = 5.88177354E+00;
  COFLAM[46] = -5.68651792E-01;
  COFLAM[47] = 2.03561484E-02;
  COFLAM[48] = 5.39305623E+00;
  COFLAM[49] = -2.39312259E+00;
  COFLAM[50] = 7.39585006E-01;
  COFLAM[51] = -4.58435469E-02;
  COFLAM[52] = -7.70164041E+00;
  COFLAM[53] = 4.56884430E+00;
  COFLAM[54] = -4.04747578E-01;
  COFLAM[55] = 1.40841066E-02;
  COFLAM[56] = -1.46152767E+01;
  COFLAM[57] = 6.36251222E+00;
  COFLAM[58] = -5.03831917E-01;
  COFLAM[59] = 1.26120967E-02;
  COFLAM[60] = -1.09902158E+01;
  COFLAM[61] = 4.70647555E+00;
  COFLAM[62] = -2.52272322E-01;
  COFLAM[63] = 1.75186734E-04;
  COFLAM[64] = -5.96382011E+00;
  COFLAM[65] = 4.39355990E+00;
  COFLAM[66] = -3.97598235E-01;
  COFLAM[67] = 1.39749618E-02;
  COFLAM[68] = -8.32870491E+00;
  COFLAM[69] = 3.97067241E+00;
  COFLAM[70] = -2.21252281E-01;
  COFLAM[71] = 1.47870386E-03;
  COFLAM[72] = -9.88396235E+00;
  COFLAM[73] = 4.13890943E+00;
  COFLAM[74] = -1.74918796E-01;
  COFLAM[75] = -3.28392968E-03;
  COFLAM[76] = -2.14189910E+01;
  COFLAM[77] = 9.40840962E+00;
  COFLAM[78] = -9.66247319E-01;
  COFLAM[79] = 3.55085303E-02;
  COFLAM[80] = -1.70514626E+01;
  COFLAM[81] = 7.35906672E+00;
  COFLAM[82] = -6.52820712E-01;
  COFLAM[83] = 1.99982085E-02;
  COFLAM[84] = 1.29305954E+01;
  COFLAM[85] = -3.52816965E+00;
  COFLAM[86] = 6.45498434E-01;
  COFLAM[87] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.03270769E+01;
  COFD[1] = 2.19285409E+00;
  COFD[2] = -7.54492786E-02;
  COFD[3] = 3.51398213E-03;
  COFD[4] = -1.14366544E+01;
  COFD[5] = 2.78323501E+00;
  COFD[6] = -1.51214064E-01;
  COFD[7] = 6.75150012E-03;
  COFD[8] = -1.09595844E+01;
  COFD[9] = 2.30836460E+00;
  COFD[10] = -8.76339315E-02;
  COFD[11] = 3.90878445E-03;
  COFD[12] = -1.18989101E+01;
  COFD[13] = 2.57507000E+00;
  COFD[14] = -1.24033737E-01;
  COFD[15] = 5.56694959E-03;
  COFD[16] = -1.09629118E+01;
  COFD[17] = 2.30836460E+00;
  COFD[18] = -8.76339315E-02;
  COFD[19] = 3.90878445E-03;
  COFD[20] = -1.71983144E+01;
  COFD[21] = 4.63881440E+00;
  COFD[22] = -3.86139677E-01;
  COFD[23] = 1.66955099E-02;
  COFD[24] = -1.18998160E+01;
  COFD[25] = 2.57507000E+00;
  COFD[26] = -1.24033737E-01;
  COFD[27] = 5.56694959E-03;
  COFD[28] = -1.19006697E+01;
  COFD[29] = 2.57507000E+00;
  COFD[30] = -1.24033737E-01;
  COFD[31] = 5.56694959E-03;
  COFD[32] = -1.25141403E+01;
  COFD[33] = 2.77873601E+00;
  COFD[34] = -1.50637360E-01;
  COFD[35] = 6.72684281E-03;
  COFD[36] = -1.24693714E+01;
  COFD[37] = 2.76686648E+00;
  COFD[38] = -1.49120141E-01;
  COFD[39] = 6.66220432E-03;
  COFD[40] = -1.17159884E+01;
  COFD[41] = 2.48123210E+00;
  COFD[42] = -1.11322604E-01;
  COFD[43] = 4.99282389E-03;
  COFD[44] = -1.37794466E+01;
  COFD[45] = 3.23973858E+00;
  COFD[46] = -2.09989036E-01;
  COFD[47] = 9.27667906E-03;
  COFD[48] = -1.60528433E+01;
  COFD[49] = 4.11188603E+00;
  COFD[50] = -3.21540884E-01;
  COFD[51] = 1.40482564E-02;
  COFD[52] = -1.34709956E+01;
  COFD[53] = 3.09379603E+00;
  COFD[54] = -1.91268635E-01;
  COFD[55] = 8.47480224E-03;
  COFD[56] = -1.42229344E+01;
  COFD[57] = 3.38669384E+00;
  COFD[58] = -2.28784122E-01;
  COFD[59] = 1.00790953E-02;
  COFD[60] = -1.39924933E+01;
  COFD[61] = 3.26384506E+00;
  COFD[62] = -2.12947087E-01;
  COFD[63] = 9.39743888E-03;
  COFD[64] = -1.22004476E+01;
  COFD[65] = 2.80725489E+00;
  COFD[66] = -1.54291406E-01;
  COFD[67] = 6.88290911E-03;
  COFD[68] = -1.57035004E+01;
  COFD[69] = 3.93614244E+00;
  COFD[70] = -2.99111497E-01;
  COFD[71] = 1.30888229E-02;
  COFD[72] = -1.57045486E+01;
  COFD[73] = 3.93614244E+00;
  COFD[74] = -2.99111497E-01;
  COFD[75] = 1.30888229E-02;
  COFD[76] = -1.43129867E+01;
  COFD[77] = 3.31177824E+00;
  COFD[78] = -2.18945280E-01;
  COFD[79] = 9.64764419E-03;
  COFD[80] = -1.43135474E+01;
  COFD[81] = 3.31177824E+00;
  COFD[82] = -2.18945280E-01;
  COFD[83] = 9.64764419E-03;
  COFD[84] = -1.16906458E+01;
  COFD[85] = 2.47469981E+00;
  COFD[86] = -1.10436257E-01;
  COFD[87] = 4.95273813E-03;
  COFD[88] = -1.14366544E+01;
  COFD[89] = 2.78323501E+00;
  COFD[90] = -1.51214064E-01;
  COFD[91] = 6.75150012E-03;
  COFD[92] = -1.47968875E+01;
  COFD[93] = 4.23027636E+00;
  COFD[94] = -3.36139991E-01;
  COFD[95] = 1.46507621E-02;
  COFD[96] = -1.34230419E+01;
  COFD[97] = 3.48624238E+00;
  COFD[98] = -2.41554467E-01;
  COFD[99] = 1.06263545E-02;
  COFD[100] = -1.46550238E+01;
  COFD[101] = 3.83606243E+00;
  COFD[102] = -2.86076532E-01;
  COFD[103] = 1.25205829E-02;
  COFD[104] = -1.34248014E+01;
  COFD[105] = 3.48624238E+00;
  COFD[106] = -2.41554467E-01;
  COFD[107] = 1.06263545E-02;
  COFD[108] = -1.95739720E+01;
  COFD[109] = 5.61113230E+00;
  COFD[110] = -4.90190187E-01;
  COFD[111] = 2.03260675E-02;
  COFD[112] = -1.46554904E+01;
  COFD[113] = 3.83606243E+00;
  COFD[114] = -2.86076532E-01;
  COFD[115] = 1.25205829E-02;
  COFD[116] = -1.46559297E+01;
  COFD[117] = 3.83606243E+00;
  COFD[118] = -2.86076532E-01;
  COFD[119] = 1.25205829E-02;
  COFD[120] = -1.57995045E+01;
  COFD[121] = 4.22225052E+00;
  COFD[122] = -3.35156428E-01;
  COFD[123] = 1.46104855E-02;
  COFD[124] = -1.57199190E+01;
  COFD[125] = 4.19936335E+00;
  COFD[126] = -3.32311009E-01;
  COFD[127] = 1.44921003E-02;
  COFD[128] = -1.43151328E+01;
  COFD[129] = 3.68038508E+00;
  COFD[130] = -2.65779346E-01;
  COFD[131] = 1.16360771E-02;
  COFD[132] = -1.76147183E+01;
  COFD[133] = 4.86049500E+00;
  COFD[134] = -4.12200578E-01;
  COFD[135] = 1.77160971E-02;
  COFD[136] = -1.97550243E+01;
  COFD[137] = 5.56931926E+00;
  COFD[138] = -4.89105511E-01;
  COFD[139] = 2.04493129E-02;
  COFD[140] = -1.72232379E+01;
  COFD[141] = 4.69060745E+00;
  COFD[142] = -3.92369888E-01;
  COFD[143] = 1.69459661E-02;
  COFD[144] = -1.82252070E+01;
  COFD[145] = 5.05237312E+00;
  COFD[146] = -4.35182396E-01;
  COFD[147] = 1.86363074E-02;
  COFD[148] = -1.79345106E+01;
  COFD[149] = 4.91373893E+00;
  COFD[150] = -4.18747629E-01;
  COFD[151] = 1.79856610E-02;
  COFD[152] = -1.54460977E+01;
  COFD[153] = 4.26819983E+00;
  COFD[154] = -3.40766379E-01;
  COFD[155] = 1.48393361E-02;
  COFD[156] = -1.94688845E+01;
  COFD[157] = 5.43830787E+00;
  COFD[158] = -4.75472880E-01;
  COFD[159] = 1.99909996E-02;
  COFD[160] = -1.94694206E+01;
  COFD[161] = 5.43830787E+00;
  COFD[162] = -4.75472880E-01;
  COFD[163] = 1.99909996E-02;
  COFD[164] = -1.83539845E+01;
  COFD[165] = 4.98756925E+00;
  COFD[166] = -4.27526072E-01;
  COFD[167] = 1.83341755E-02;
  COFD[168] = -1.83542714E+01;
  COFD[169] = 4.98756925E+00;
  COFD[170] = -4.27526072E-01;
  COFD[171] = 1.83341755E-02;
  COFD[172] = -1.42894603E+01;
  COFD[173] = 3.67490723E+00;
  COFD[174] = -2.65114792E-01;
  COFD[175] = 1.16092671E-02;
  COFD[176] = -1.09595844E+01;
  COFD[177] = 2.30836460E+00;
  COFD[178] = -8.76339315E-02;
  COFD[179] = 3.90878445E-03;
  COFD[180] = -1.34230419E+01;
  COFD[181] = 3.48624238E+00;
  COFD[182] = -2.41554467E-01;
  COFD[183] = 1.06263545E-02;
  COFD[184] = -1.32093517E+01;
  COFD[185] = 2.90778936E+00;
  COFD[186] = -1.67388544E-01;
  COFD[187] = 7.45220609E-03;
  COFD[188] = -1.43139120E+01;
  COFD[189] = 3.17651319E+00;
  COFD[190] = -2.02028974E-01;
  COFD[191] = 8.94232502E-03;
  COFD[192] = -1.32243932E+01;
  COFD[193] = 2.90778936E+00;
  COFD[194] = -1.67388544E-01;
  COFD[195] = 7.45220609E-03;
  COFD[196] = -1.94093476E+01;
  COFD[197] = 5.16013126E+00;
  COFD[198] = -4.46824543E-01;
  COFD[199] = 1.90464887E-02;
  COFD[200] = -1.43190281E+01;
  COFD[201] = 3.17651319E+00;
  COFD[202] = -2.02028974E-01;
  COFD[203] = 8.94232502E-03;
  COFD[204] = -1.43238892E+01;
  COFD[205] = 3.17651319E+00;
  COFD[206] = -2.02028974E-01;
  COFD[207] = 8.94232502E-03;
  COFD[208] = -1.50766073E+01;
  COFD[209] = 3.47945612E+00;
  COFD[210] = -2.40703722E-01;
  COFD[211] = 1.05907441E-02;
  COFD[212] = -1.50270285E+01;
  COFD[213] = 3.46140064E+00;
  COFD[214] = -2.38440092E-01;
  COFD[215] = 1.04960087E-02;
  COFD[216] = -1.40998907E+01;
  COFD[217] = 3.08120012E+00;
  COFD[218] = -1.89629903E-01;
  COFD[219] = 8.40361952E-03;
  COFD[220] = -1.70534750E+01;
  COFD[221] = 4.14240922E+00;
  COFD[222] = -3.25239774E-01;
  COFD[223] = 1.41980687E-02;
  COFD[224] = -1.94373032E+01;
  COFD[225] = 5.02567894E+00;
  COFD[226] = -4.32045169E-01;
  COFD[227] = 1.85132214E-02;
  COFD[228] = -1.65488277E+01;
  COFD[229] = 3.95035840E+00;
  COFD[230] = -3.00959418E-01;
  COFD[231] = 1.31692593E-02;
  COFD[232] = -1.74792034E+01;
  COFD[233] = 4.29676909E+00;
  COFD[234] = -3.44085306E-01;
  COFD[235] = 1.49671135E-02;
  COFD[236] = -1.72556425E+01;
  COFD[237] = 4.17889917E+00;
  COFD[238] = -3.29752510E-01;
  COFD[239] = 1.43850275E-02;
  COFD[240] = -1.49500258E+01;
  COFD[241] = 3.52327209E+00;
  COFD[242] = -2.46286208E-01;
  COFD[243] = 1.08285963E-02;
  COFD[244] = -1.90883170E+01;
  COFD[245] = 4.84384483E+00;
  COFD[246] = -4.10265575E-01;
  COFD[247] = 1.76414287E-02;
  COFD[248] = -1.90946650E+01;
  COFD[249] = 4.84384483E+00;
  COFD[250] = -4.10265575E-01;
  COFD[251] = 1.76414287E-02;
  COFD[252] = -1.76774947E+01;
  COFD[253] = 4.24719726E+00;
  COFD[254] = -3.38206061E-01;
  COFD[255] = 1.47350654E-02;
  COFD[256] = -1.76808635E+01;
  COFD[257] = 4.24719726E+00;
  COFD[258] = -3.38206061E-01;
  COFD[259] = 1.47350654E-02;
  COFD[260] = -1.40756909E+01;
  COFD[261] = 3.07549274E+00;
  COFD[262] = -1.88889344E-01;
  COFD[263] = 8.37152866E-03;
  COFD[264] = -1.18989101E+01;
  COFD[265] = 2.57507000E+00;
  COFD[266] = -1.24033737E-01;
  COFD[267] = 5.56694959E-03;
  COFD[268] = -1.46550238E+01;
  COFD[269] = 3.83606243E+00;
  COFD[270] = -2.86076532E-01;
  COFD[271] = 1.25205829E-02;
  COFD[272] = -1.43139120E+01;
  COFD[273] = 3.17651319E+00;
  COFD[274] = -2.02028974E-01;
  COFD[275] = 8.94232502E-03;
  COFD[276] = -1.55511233E+01;
  COFD[277] = 3.48070094E+00;
  COFD[278] = -2.40859499E-01;
  COFD[279] = 1.05972514E-02;
  COFD[280] = -1.43340695E+01;
  COFD[281] = 3.17651319E+00;
  COFD[282] = -2.02028974E-01;
  COFD[283] = 8.94232502E-03;
  COFD[284] = -2.12652444E+01;
  COFD[285] = 5.59961822E+00;
  COFD[286] = -4.91624856E-01;
  COFD[287] = 2.05035546E-02;
  COFD[288] = -1.55588172E+01;
  COFD[289] = 3.48070094E+00;
  COFD[290] = -2.40859499E-01;
  COFD[291] = 1.05972514E-02;
  COFD[292] = -1.55661647E+01;
  COFD[293] = 3.48070094E+00;
  COFD[294] = -2.40859499E-01;
  COFD[295] = 1.05972514E-02;
  COFD[296] = -1.63493305E+01;
  COFD[297] = 3.82388595E+00;
  COFD[298] = -2.84480724E-01;
  COFD[299] = 1.24506311E-02;
  COFD[300] = -1.62724429E+01;
  COFD[301] = 3.79163564E+00;
  COFD[302] = -2.80257365E-01;
  COFD[303] = 1.22656902E-02;
  COFD[304] = -1.52721010E+01;
  COFD[305] = 3.36790500E+00;
  COFD[306] = -2.26321740E-01;
  COFD[307] = 9.97135055E-03;
  COFD[308] = -1.84688303E+01;
  COFD[309] = 4.49330851E+00;
  COFD[310] = -3.68208715E-01;
  COFD[311] = 1.59565402E-02;
  COFD[312] = -2.08293167E+01;
  COFD[313] = 5.35267674E+00;
  COFD[314] = -4.69010505E-01;
  COFD[315] = 1.98979152E-02;
  COFD[316] = -1.78834868E+01;
  COFD[317] = 4.29613154E+00;
  COFD[318] = -3.44012526E-01;
  COFD[319] = 1.49643715E-02;
  COFD[320] = -1.89544717E+01;
  COFD[321] = 4.68595732E+00;
  COFD[322] = -3.91842840E-01;
  COFD[323] = 1.69262542E-02;
  COFD[324] = -1.86424488E+01;
  COFD[325] = 4.53572533E+00;
  COFD[326] = -3.73386925E-01;
  COFD[327] = 1.61678881E-02;
  COFD[328] = -1.64169341E+01;
  COFD[329] = 3.89309916E+00;
  COFD[330] = -2.93528188E-01;
  COFD[331] = 1.28463177E-02;
  COFD[332] = -2.05184780E+01;
  COFD[333] = 5.18417470E+00;
  COFD[334] = -4.49491573E-01;
  COFD[335] = 1.91438508E-02;
  COFD[336] = -2.05284666E+01;
  COFD[337] = 5.18417470E+00;
  COFD[338] = -4.49491573E-01;
  COFD[339] = 1.91438508E-02;
  COFD[340] = -1.91121670E+01;
  COFD[341] = 4.61801405E+00;
  COFD[342] = -3.83535652E-01;
  COFD[343] = 1.65862513E-02;
  COFD[344] = -1.91174394E+01;
  COFD[345] = 4.61801405E+00;
  COFD[346] = -3.83535652E-01;
  COFD[347] = 1.65862513E-02;
  COFD[348] = -1.52414498E+01;
  COFD[349] = 3.35922578E+00;
  COFD[350] = -2.25181399E-01;
  COFD[351] = 9.92132878E-03;
  COFD[352] = -1.09629118E+01;
  COFD[353] = 2.30836460E+00;
  COFD[354] = -8.76339315E-02;
  COFD[355] = 3.90878445E-03;
  COFD[356] = -1.34248014E+01;
  COFD[357] = 3.48624238E+00;
  COFD[358] = -2.41554467E-01;
  COFD[359] = 1.06263545E-02;
  COFD[360] = -1.32243932E+01;
  COFD[361] = 2.90778936E+00;
  COFD[362] = -1.67388544E-01;
  COFD[363] = 7.45220609E-03;
  COFD[364] = -1.43340695E+01;
  COFD[365] = 3.17651319E+00;
  COFD[366] = -2.02028974E-01;
  COFD[367] = 8.94232502E-03;
  COFD[368] = -1.32399011E+01;
  COFD[369] = 2.90778936E+00;
  COFD[370] = -1.67388544E-01;
  COFD[371] = 7.45220609E-03;
  COFD[372] = -1.94252948E+01;
  COFD[373] = 5.16013126E+00;
  COFD[374] = -4.46824543E-01;
  COFD[375] = 1.90464887E-02;
  COFD[376] = -1.43393972E+01;
  COFD[377] = 3.17651319E+00;
  COFD[378] = -2.02028974E-01;
  COFD[379] = 8.94232502E-03;
  COFD[380] = -1.43444614E+01;
  COFD[381] = 3.17651319E+00;
  COFD[382] = -2.02028974E-01;
  COFD[383] = 8.94232502E-03;
  COFD[384] = -1.50911746E+01;
  COFD[385] = 3.47945612E+00;
  COFD[386] = -2.40703722E-01;
  COFD[387] = 1.05907441E-02;
  COFD[388] = -1.50420909E+01;
  COFD[389] = 3.46140064E+00;
  COFD[390] = -2.38440092E-01;
  COFD[391] = 1.04960087E-02;
  COFD[392] = -1.41191170E+01;
  COFD[393] = 3.08120012E+00;
  COFD[394] = -1.89629903E-01;
  COFD[395] = 8.40361952E-03;
  COFD[396] = -1.70756953E+01;
  COFD[397] = 4.14240922E+00;
  COFD[398] = -3.25239774E-01;
  COFD[399] = 1.41980687E-02;
  COFD[400] = -1.94570202E+01;
  COFD[401] = 5.02567894E+00;
  COFD[402] = -4.32045169E-01;
  COFD[403] = 1.85132214E-02;
  COFD[404] = -1.65675292E+01;
  COFD[405] = 3.95035840E+00;
  COFD[406] = -3.00959418E-01;
  COFD[407] = 1.31692593E-02;
  COFD[408] = -1.74984410E+01;
  COFD[409] = 4.29676909E+00;
  COFD[410] = -3.44085306E-01;
  COFD[411] = 1.49671135E-02;
  COFD[412] = -1.72753698E+01;
  COFD[413] = 4.17889917E+00;
  COFD[414] = -3.29752510E-01;
  COFD[415] = 1.43850275E-02;
  COFD[416] = -1.49718147E+01;
  COFD[417] = 3.52327209E+00;
  COFD[418] = -2.46286208E-01;
  COFD[419] = 1.08285963E-02;
  COFD[420] = -1.91102567E+01;
  COFD[421] = 4.84384483E+00;
  COFD[422] = -4.10265575E-01;
  COFD[423] = 1.76414287E-02;
  COFD[424] = -1.91168913E+01;
  COFD[425] = 4.84384483E+00;
  COFD[426] = -4.10265575E-01;
  COFD[427] = 1.76414287E-02;
  COFD[428] = -1.76992903E+01;
  COFD[429] = 4.24719726E+00;
  COFD[430] = -3.38206061E-01;
  COFD[431] = 1.47350654E-02;
  COFD[432] = -1.77028097E+01;
  COFD[433] = 4.24719726E+00;
  COFD[434] = -3.38206061E-01;
  COFD[435] = 1.47350654E-02;
  COFD[436] = -1.40949183E+01;
  COFD[437] = 3.07549274E+00;
  COFD[438] = -1.88889344E-01;
  COFD[439] = 8.37152866E-03;
  COFD[440] = -1.71983144E+01;
  COFD[441] = 4.63881440E+00;
  COFD[442] = -3.86139677E-01;
  COFD[443] = 1.66955099E-02;
  COFD[444] = -1.95739720E+01;
  COFD[445] = 5.61113230E+00;
  COFD[446] = -4.90190187E-01;
  COFD[447] = 2.03260675E-02;
  COFD[448] = -1.94093476E+01;
  COFD[449] = 5.16013126E+00;
  COFD[450] = -4.46824543E-01;
  COFD[451] = 1.90464887E-02;
  COFD[452] = -2.12652444E+01;
  COFD[453] = 5.59961822E+00;
  COFD[454] = -4.91624856E-01;
  COFD[455] = 2.05035546E-02;
  COFD[456] = -1.94252948E+01;
  COFD[457] = 5.16013126E+00;
  COFD[458] = -4.46824543E-01;
  COFD[459] = 1.90464887E-02;
  COFD[460] = -1.19157788E+01;
  COFD[461] = 9.28952533E-01;
  COFD[462] = 2.42107483E-01;
  COFD[463] = -1.59824150E-02;
  COFD[464] = -2.06463656E+01;
  COFD[465] = 5.41688482E+00;
  COFD[466] = -4.73387188E-01;
  COFD[467] = 1.99280175E-02;
  COFD[468] = -2.06516251E+01;
  COFD[469] = 5.41688482E+00;
  COFD[470] = -4.73387188E-01;
  COFD[471] = 1.99280175E-02;
  COFD[472] = -2.12831283E+01;
  COFD[473] = 5.61184117E+00;
  COFD[474] = -4.90532156E-01;
  COFD[475] = 2.03507922E-02;
  COFD[476] = -2.14087360E+01;
  COFD[477] = 5.57281993E+00;
  COFD[478] = -4.76690860E-01;
  COFD[479] = 1.94000702E-02;
  COFD[480] = -2.11388255E+01;
  COFD[481] = 5.55529689E+00;
  COFD[482] = -4.87942530E-01;
  COFD[483] = 2.04249057E-02;
  COFD[484] = -2.07653629E+01;
  COFD[485] = 5.01091988E+00;
  COFD[486] = -3.77985581E-01;
  COFD[487] = 1.40968617E-02;
  COFD[488] = -1.77563175E+01;
  COFD[489] = 3.57475686E+00;
  COFD[490] = -1.56396297E-01;
  COFD[491] = 3.12157721E-03;
  COFD[492] = -2.15095920E+01;
  COFD[493] = 5.46737673E+00;
  COFD[494] = -4.55696085E-01;
  COFD[495] = 1.81982625E-02;
  COFD[496] = -2.08812277E+01;
  COFD[497] = 5.08859217E+00;
  COFD[498] = -3.90525428E-01;
  COFD[499] = 1.47376395E-02;
  COFD[500] = -2.12661812E+01;
  COFD[501] = 5.24930667E+00;
  COFD[502] = -4.17435088E-01;
  COFD[503] = 1.61434424E-02;
  COFD[504] = -2.10440599E+01;
  COFD[505] = 5.59806282E+00;
  COFD[506] = -4.87109535E-01;
  COFD[507] = 2.01370226E-02;
  COFD[508] = -1.87383877E+01;
  COFD[509] = 3.96926341E+00;
  COFD[510] = -2.16412264E-01;
  COFD[511] = 6.06012078E-03;
  COFD[512] = -1.87452995E+01;
  COFD[513] = 3.96926341E+00;
  COFD[514] = -2.16412264E-01;
  COFD[515] = 6.06012078E-03;
  COFD[516] = -2.13847376E+01;
  COFD[517] = 5.17440955E+00;
  COFD[518] = -4.04678430E-01;
  COFD[519] = 1.54706350E-02;
  COFD[520] = -2.13884026E+01;
  COFD[521] = 5.17440955E+00;
  COFD[522] = -4.04678430E-01;
  COFD[523] = 1.54706350E-02;
  COFD[524] = -2.10643264E+01;
  COFD[525] = 5.53614864E+00;
  COFD[526] = -4.86046753E-01;
  COFD[527] = 2.03659193E-02;
  COFD[528] = -1.18998160E+01;
  COFD[529] = 2.57507000E+00;
  COFD[530] = -1.24033737E-01;
  COFD[531] = 5.56694959E-03;
  COFD[532] = -1.46554904E+01;
  COFD[533] = 3.83606243E+00;
  COFD[534] = -2.86076532E-01;
  COFD[535] = 1.25205829E-02;
  COFD[536] = -1.43190281E+01;
  COFD[537] = 3.17651319E+00;
  COFD[538] = -2.02028974E-01;
  COFD[539] = 8.94232502E-03;
  COFD[540] = -1.55588172E+01;
  COFD[541] = 3.48070094E+00;
  COFD[542] = -2.40859499E-01;
  COFD[543] = 1.05972514E-02;
  COFD[544] = -1.43393972E+01;
  COFD[545] = 3.17651319E+00;
  COFD[546] = -2.02028974E-01;
  COFD[547] = 8.94232502E-03;
  COFD[548] = -2.06463656E+01;
  COFD[549] = 5.41688482E+00;
  COFD[550] = -4.73387188E-01;
  COFD[551] = 1.99280175E-02;
  COFD[552] = -1.55666313E+01;
  COFD[553] = 3.48070094E+00;
  COFD[554] = -2.40859499E-01;
  COFD[555] = 1.05972514E-02;
  COFD[556] = -1.55740954E+01;
  COFD[557] = 3.48070094E+00;
  COFD[558] = -2.40859499E-01;
  COFD[559] = 1.05972514E-02;
  COFD[560] = -1.63542358E+01;
  COFD[561] = 3.82388595E+00;
  COFD[562] = -2.84480724E-01;
  COFD[563] = 1.24506311E-02;
  COFD[564] = -1.62775683E+01;
  COFD[565] = 3.79163564E+00;
  COFD[566] = -2.80257365E-01;
  COFD[567] = 1.22656902E-02;
  COFD[568] = -1.52792799E+01;
  COFD[569] = 3.36790500E+00;
  COFD[570] = -2.26321740E-01;
  COFD[571] = 9.97135055E-03;
  COFD[572] = -1.84777509E+01;
  COFD[573] = 4.49330851E+00;
  COFD[574] = -3.68208715E-01;
  COFD[575] = 1.59565402E-02;
  COFD[576] = -2.08367641E+01;
  COFD[577] = 5.35267674E+00;
  COFD[578] = -4.69010505E-01;
  COFD[579] = 1.98979152E-02;
  COFD[580] = -1.78903850E+01;
  COFD[581] = 4.29613154E+00;
  COFD[582] = -3.44012526E-01;
  COFD[583] = 1.49643715E-02;
  COFD[584] = -1.89616566E+01;
  COFD[585] = 4.68595732E+00;
  COFD[586] = -3.91842840E-01;
  COFD[587] = 1.69262542E-02;
  COFD[588] = -1.86499019E+01;
  COFD[589] = 4.53572533E+00;
  COFD[590] = -3.73386925E-01;
  COFD[591] = 1.61678881E-02;
  COFD[592] = -1.64255877E+01;
  COFD[593] = 3.89309916E+00;
  COFD[594] = -2.93528188E-01;
  COFD[595] = 1.28463177E-02;
  COFD[596] = -2.05272244E+01;
  COFD[597] = 5.18417470E+00;
  COFD[598] = -4.49491573E-01;
  COFD[599] = 1.91438508E-02;
  COFD[600] = -2.05373910E+01;
  COFD[601] = 5.18417470E+00;
  COFD[602] = -4.49491573E-01;
  COFD[603] = 1.91438508E-02;
  COFD[604] = -1.91208247E+01;
  COFD[605] = 4.61801405E+00;
  COFD[606] = -3.83535652E-01;
  COFD[607] = 1.65862513E-02;
  COFD[608] = -1.91261897E+01;
  COFD[609] = 4.61801405E+00;
  COFD[610] = -3.83535652E-01;
  COFD[611] = 1.65862513E-02;
  COFD[612] = -1.52486292E+01;
  COFD[613] = 3.35922578E+00;
  COFD[614] = -2.25181399E-01;
  COFD[615] = 9.92132878E-03;
  COFD[616] = -1.19006697E+01;
  COFD[617] = 2.57507000E+00;
  COFD[618] = -1.24033737E-01;
  COFD[619] = 5.56694959E-03;
  COFD[620] = -1.46559297E+01;
  COFD[621] = 3.83606243E+00;
  COFD[622] = -2.86076532E-01;
  COFD[623] = 1.25205829E-02;
  COFD[624] = -1.43238892E+01;
  COFD[625] = 3.17651319E+00;
  COFD[626] = -2.02028974E-01;
  COFD[627] = 8.94232502E-03;
  COFD[628] = -1.55661647E+01;
  COFD[629] = 3.48070094E+00;
  COFD[630] = -2.40859499E-01;
  COFD[631] = 1.05972514E-02;
  COFD[632] = -1.43444614E+01;
  COFD[633] = 3.17651319E+00;
  COFD[634] = -2.02028974E-01;
  COFD[635] = 8.94232502E-03;
  COFD[636] = -2.06516251E+01;
  COFD[637] = 5.41688482E+00;
  COFD[638] = -4.73387188E-01;
  COFD[639] = 1.99280175E-02;
  COFD[640] = -1.55740954E+01;
  COFD[641] = 3.48070094E+00;
  COFD[642] = -2.40859499E-01;
  COFD[643] = 1.05972514E-02;
  COFD[644] = -1.55816727E+01;
  COFD[645] = 3.48070094E+00;
  COFD[646] = -2.40859499E-01;
  COFD[647] = 1.05972514E-02;
  COFD[648] = -1.63588948E+01;
  COFD[649] = 3.82388595E+00;
  COFD[650] = -2.84480724E-01;
  COFD[651] = 1.24506311E-02;
  COFD[652] = -1.62824385E+01;
  COFD[653] = 3.79163564E+00;
  COFD[654] = -2.80257365E-01;
  COFD[655] = 1.22656902E-02;
  COFD[656] = -1.52861287E+01;
  COFD[657] = 3.36790500E+00;
  COFD[658] = -2.26321740E-01;
  COFD[659] = 9.97135055E-03;
  COFD[660] = -1.84862906E+01;
  COFD[661] = 4.49330851E+00;
  COFD[662] = -3.68208715E-01;
  COFD[663] = 1.59565402E-02;
  COFD[664] = -2.08438728E+01;
  COFD[665] = 5.35267674E+00;
  COFD[666] = -4.69010505E-01;
  COFD[667] = 1.98979152E-02;
  COFD[668] = -1.78969625E+01;
  COFD[669] = 4.29613154E+00;
  COFD[670] = -3.44012526E-01;
  COFD[671] = 1.49643715E-02;
  COFD[672] = -1.89685112E+01;
  COFD[673] = 4.68595732E+00;
  COFD[674] = -3.91842840E-01;
  COFD[675] = 1.69262542E-02;
  COFD[676] = -1.86570161E+01;
  COFD[677] = 4.53572533E+00;
  COFD[678] = -3.73386925E-01;
  COFD[679] = 1.61678881E-02;
  COFD[680] = -1.64338675E+01;
  COFD[681] = 3.89309916E+00;
  COFD[682] = -2.93528188E-01;
  COFD[683] = 1.28463177E-02;
  COFD[684] = -2.05355943E+01;
  COFD[685] = 5.18417470E+00;
  COFD[686] = -4.49491573E-01;
  COFD[687] = 1.91438508E-02;
  COFD[688] = -2.05459343E+01;
  COFD[689] = 5.18417470E+00;
  COFD[690] = -4.49491573E-01;
  COFD[691] = 1.91438508E-02;
  COFD[692] = -1.91291085E+01;
  COFD[693] = 4.61801405E+00;
  COFD[694] = -3.83535652E-01;
  COFD[695] = 1.65862513E-02;
  COFD[696] = -1.91345636E+01;
  COFD[697] = 4.61801405E+00;
  COFD[698] = -3.83535652E-01;
  COFD[699] = 1.65862513E-02;
  COFD[700] = -1.52554785E+01;
  COFD[701] = 3.35922578E+00;
  COFD[702] = -2.25181399E-01;
  COFD[703] = 9.92132878E-03;
  COFD[704] = -1.25141403E+01;
  COFD[705] = 2.77873601E+00;
  COFD[706] = -1.50637360E-01;
  COFD[707] = 6.72684281E-03;
  COFD[708] = -1.57995045E+01;
  COFD[709] = 4.22225052E+00;
  COFD[710] = -3.35156428E-01;
  COFD[711] = 1.46104855E-02;
  COFD[712] = -1.50766073E+01;
  COFD[713] = 3.47945612E+00;
  COFD[714] = -2.40703722E-01;
  COFD[715] = 1.05907441E-02;
  COFD[716] = -1.63493305E+01;
  COFD[717] = 3.82388595E+00;
  COFD[718] = -2.84480724E-01;
  COFD[719] = 1.24506311E-02;
  COFD[720] = -1.50911746E+01;
  COFD[721] = 3.47945612E+00;
  COFD[722] = -2.40703722E-01;
  COFD[723] = 1.05907441E-02;
  COFD[724] = -2.12831283E+01;
  COFD[725] = 5.61184117E+00;
  COFD[726] = -4.90532156E-01;
  COFD[727] = 2.03507922E-02;
  COFD[728] = -1.63542358E+01;
  COFD[729] = 3.82388595E+00;
  COFD[730] = -2.84480724E-01;
  COFD[731] = 1.24506311E-02;
  COFD[732] = -1.63588948E+01;
  COFD[733] = 3.82388595E+00;
  COFD[734] = -2.84480724E-01;
  COFD[735] = 1.24506311E-02;
  COFD[736] = -1.73374523E+01;
  COFD[737] = 4.21416723E+00;
  COFD[738] = -3.34163932E-01;
  COFD[739] = 1.45697432E-02;
  COFD[740] = -1.72738845E+01;
  COFD[741] = 4.19029808E+00;
  COFD[742] = -3.31177076E-01;
  COFD[743] = 1.44446234E-02;
  COFD[744] = -1.59862997E+01;
  COFD[745] = 3.67388294E+00;
  COFD[746] = -2.64990709E-01;
  COFD[747] = 1.16042706E-02;
  COFD[748] = -1.93276406E+01;
  COFD[749] = 4.85015581E+00;
  COFD[750] = -4.10945109E-01;
  COFD[751] = 1.76651398E-02;
  COFD[752] = -2.14449532E+01;
  COFD[753] = 5.56531152E+00;
  COFD[754] = -4.88789821E-01;
  COFD[755] = 2.04437116E-02;
  COFD[756] = -1.88463801E+01;
  COFD[757] = 4.68393046E+00;
  COFD[758] = -3.91610863E-01;
  COFD[759] = 1.69174645E-02;
  COFD[760] = -1.98646724E+01;
  COFD[761] = 5.04367502E+00;
  COFD[762] = -4.34153325E-01;
  COFD[763] = 1.85956055E-02;
  COFD[764] = -1.95552136E+01;
  COFD[765] = 4.90255048E+00;
  COFD[766] = -4.17368501E-01;
  COFD[767] = 1.79287358E-02;
  COFD[768] = -1.72828280E+01;
  COFD[769] = 4.26063341E+00;
  COFD[770] = -3.39848064E-01;
  COFD[771] = 1.48021313E-02;
  COFD[772] = -2.11606942E+01;
  COFD[773] = 5.42846112E+00;
  COFD[774] = -4.74321870E-01;
  COFD[775] = 1.99459749E-02;
  COFD[776] = -2.11667588E+01;
  COFD[777] = 5.42846112E+00;
  COFD[778] = -4.74321870E-01;
  COFD[779] = 1.99459749E-02;
  COFD[780] = -1.99803480E+01;
  COFD[781] = 4.97875278E+00;
  COFD[782] = -4.26485475E-01;
  COFD[783] = 1.82931933E-02;
  COFD[784] = -1.99835677E+01;
  COFD[785] = 4.97875278E+00;
  COFD[786] = -4.26485475E-01;
  COFD[787] = 1.82931933E-02;
  COFD[788] = -1.59633426E+01;
  COFD[789] = 3.66853818E+00;
  COFD[790] = -2.64346221E-01;
  COFD[791] = 1.15784613E-02;
  COFD[792] = -1.24693714E+01;
  COFD[793] = 2.76686648E+00;
  COFD[794] = -1.49120141E-01;
  COFD[795] = 6.66220432E-03;
  COFD[796] = -1.57199190E+01;
  COFD[797] = 4.19936335E+00;
  COFD[798] = -3.32311009E-01;
  COFD[799] = 1.44921003E-02;
  COFD[800] = -1.50270285E+01;
  COFD[801] = 3.46140064E+00;
  COFD[802] = -2.38440092E-01;
  COFD[803] = 1.04960087E-02;
  COFD[804] = -1.62724429E+01;
  COFD[805] = 3.79163564E+00;
  COFD[806] = -2.80257365E-01;
  COFD[807] = 1.22656902E-02;
  COFD[808] = -1.50420909E+01;
  COFD[809] = 3.46140064E+00;
  COFD[810] = -2.38440092E-01;
  COFD[811] = 1.04960087E-02;
  COFD[812] = -2.14087360E+01;
  COFD[813] = 5.57281993E+00;
  COFD[814] = -4.76690860E-01;
  COFD[815] = 1.94000702E-02;
  COFD[816] = -1.62775683E+01;
  COFD[817] = 3.79163564E+00;
  COFD[818] = -2.80257365E-01;
  COFD[819] = 1.22656902E-02;
  COFD[820] = -1.62824385E+01;
  COFD[821] = 3.79163564E+00;
  COFD[822] = -2.80257365E-01;
  COFD[823] = 1.22656902E-02;
  COFD[824] = -1.72738845E+01;
  COFD[825] = 4.19029808E+00;
  COFD[826] = -3.31177076E-01;
  COFD[827] = 1.44446234E-02;
  COFD[828] = -1.72167712E+01;
  COFD[829] = 4.16886779E+00;
  COFD[830] = -3.28518156E-01;
  COFD[831] = 1.43341626E-02;
  COFD[832] = -1.59525075E+01;
  COFD[833] = 3.66023858E+00;
  COFD[834] = -2.63401043E-01;
  COFD[835] = 1.15432000E-02;
  COFD[836] = -1.92867532E+01;
  COFD[837] = 4.83375900E+00;
  COFD[838] = -4.09146560E-01;
  COFD[839] = 1.76006599E-02;
  COFD[840] = -2.14082433E+01;
  COFD[841] = 5.55346617E+00;
  COFD[842] = -4.87783156E-01;
  COFD[843] = 2.04210886E-02;
  COFD[844] = -1.87897289E+01;
  COFD[845] = 4.66162351E+00;
  COFD[846] = -3.88920477E-01;
  COFD[847] = 1.68089648E-02;
  COFD[848] = -1.98075051E+01;
  COFD[849] = 5.02169524E+00;
  COFD[850] = -4.31582804E-01;
  COFD[851] = 1.84953568E-02;
  COFD[852] = -1.94823661E+01;
  COFD[853] = 4.87333294E+00;
  COFD[854] = -4.13769241E-01;
  COFD[855] = 1.77802244E-02;
  COFD[856] = -1.72316133E+01;
  COFD[857] = 4.24011069E+00;
  COFD[858] = -3.37339810E-01;
  COFD[859] = 1.46996679E-02;
  COFD[860] = -2.11309194E+01;
  COFD[861] = 5.41773516E+00;
  COFD[862] = -4.73414338E-01;
  COFD[863] = 1.99258685E-02;
  COFD[864] = -2.11372801E+01;
  COFD[865] = 5.41773516E+00;
  COFD[866] = -4.73414338E-01;
  COFD[867] = 1.99258685E-02;
  COFD[868] = -1.99235836E+01;
  COFD[869] = 4.95514826E+00;
  COFD[870] = -4.23691395E-01;
  COFD[871] = 1.81828318E-02;
  COFD[872] = -1.99269591E+01;
  COFD[873] = 4.95514826E+00;
  COFD[874] = -4.23691395E-01;
  COFD[875] = 1.81828318E-02;
  COFD[876] = -1.59327344E+01;
  COFD[877] = 3.65620899E+00;
  COFD[878] = -2.62933804E-01;
  COFD[879] = 1.15253223E-02;
  COFD[880] = -1.17159884E+01;
  COFD[881] = 2.48123210E+00;
  COFD[882] = -1.11322604E-01;
  COFD[883] = 4.99282389E-03;
  COFD[884] = -1.43151328E+01;
  COFD[885] = 3.68038508E+00;
  COFD[886] = -2.65779346E-01;
  COFD[887] = 1.16360771E-02;
  COFD[888] = -1.40998907E+01;
  COFD[889] = 3.08120012E+00;
  COFD[890] = -1.89629903E-01;
  COFD[891] = 8.40361952E-03;
  COFD[892] = -1.52721010E+01;
  COFD[893] = 3.36790500E+00;
  COFD[894] = -2.26321740E-01;
  COFD[895] = 9.97135055E-03;
  COFD[896] = -1.41191170E+01;
  COFD[897] = 3.08120012E+00;
  COFD[898] = -1.89629903E-01;
  COFD[899] = 8.40361952E-03;
  COFD[900] = -2.11388255E+01;
  COFD[901] = 5.55529689E+00;
  COFD[902] = -4.87942530E-01;
  COFD[903] = 2.04249057E-02;
  COFD[904] = -1.52792799E+01;
  COFD[905] = 3.36790500E+00;
  COFD[906] = -2.26321740E-01;
  COFD[907] = 9.97135055E-03;
  COFD[908] = -1.52861287E+01;
  COFD[909] = 3.36790500E+00;
  COFD[910] = -2.26321740E-01;
  COFD[911] = 9.97135055E-03;
  COFD[912] = -1.59862997E+01;
  COFD[913] = 3.67388294E+00;
  COFD[914] = -2.64990709E-01;
  COFD[915] = 1.16042706E-02;
  COFD[916] = -1.59525075E+01;
  COFD[917] = 3.66023858E+00;
  COFD[918] = -2.63401043E-01;
  COFD[919] = 1.15432000E-02;
  COFD[920] = -1.50233391E+01;
  COFD[921] = 3.26660767E+00;
  COFD[922] = -2.13287177E-01;
  COFD[923] = 9.41137857E-03;
  COFD[924] = -1.81735675E+01;
  COFD[925] = 4.38391495E+00;
  COFD[926] = -3.54941287E-01;
  COFD[927] = 1.54195107E-02;
  COFD[928] = -2.05128629E+01;
  COFD[929] = 5.23843909E+00;
  COFD[930] = -4.55815614E-01;
  COFD[931] = 1.93898040E-02;
  COFD[932] = -1.76285583E+01;
  COFD[933] = 4.19935698E+00;
  COFD[934] = -3.32310212E-01;
  COFD[935] = 1.44920670E-02;
  COFD[936] = -1.86157710E+01;
  COFD[937] = 4.55689508E+00;
  COFD[938] = -3.75937921E-01;
  COFD[939] = 1.62703488E-02;
  COFD[940] = -1.83538331E+01;
  COFD[941] = 4.42828044E+00;
  COFD[942] = -3.60417833E-01;
  COFD[943] = 1.56455103E-02;
  COFD[944] = -1.60261598E+01;
  COFD[945] = 3.73312045E+00;
  COFD[946] = -2.72579779E-01;
  COFD[947] = 1.19290272E-02;
  COFD[948] = -2.02922626E+01;
  COFD[949] = 5.11106992E+00;
  COFD[950] = -4.42047129E-01;
  COFD[951] = 1.89042990E-02;
  COFD[952] = -2.03014971E+01;
  COFD[953] = 5.11106992E+00;
  COFD[954] = -4.42047129E-01;
  COFD[955] = 1.89042990E-02;
  COFD[956] = -1.87684982E+01;
  COFD[957] = 4.49191492E+00;
  COFD[958] = -3.68041771E-01;
  COFD[959] = 1.59498676E-02;
  COFD[960] = -1.87733780E+01;
  COFD[961] = 4.49191492E+00;
  COFD[962] = -3.68041771E-01;
  COFD[963] = 1.59498676E-02;
  COFD[964] = -1.50031706E+01;
  COFD[965] = 3.26223357E+00;
  COFD[966] = -2.12746642E-01;
  COFD[967] = 9.38912883E-03;
  COFD[968] = -1.37794466E+01;
  COFD[969] = 3.23973858E+00;
  COFD[970] = -2.09989036E-01;
  COFD[971] = 9.27667906E-03;
  COFD[972] = -1.76147183E+01;
  COFD[973] = 4.86049500E+00;
  COFD[974] = -4.12200578E-01;
  COFD[975] = 1.77160971E-02;
  COFD[976] = -1.70534750E+01;
  COFD[977] = 4.14240922E+00;
  COFD[978] = -3.25239774E-01;
  COFD[979] = 1.41980687E-02;
  COFD[980] = -1.84688303E+01;
  COFD[981] = 4.49330851E+00;
  COFD[982] = -3.68208715E-01;
  COFD[983] = 1.59565402E-02;
  COFD[984] = -1.70756953E+01;
  COFD[985] = 4.14240922E+00;
  COFD[986] = -3.25239774E-01;
  COFD[987] = 1.41980687E-02;
  COFD[988] = -2.07653629E+01;
  COFD[989] = 5.01091988E+00;
  COFD[990] = -3.77985581E-01;
  COFD[991] = 1.40968617E-02;
  COFD[992] = -1.84777509E+01;
  COFD[993] = 4.49330851E+00;
  COFD[994] = -3.68208715E-01;
  COFD[995] = 1.59565402E-02;
  COFD[996] = -1.84862906E+01;
  COFD[997] = 4.49330851E+00;
  COFD[998] = -3.68208715E-01;
  COFD[999] = 1.59565402E-02;
  COFD[1000] = -1.93276406E+01;
  COFD[1001] = 4.85015581E+00;
  COFD[1002] = -4.10945109E-01;
  COFD[1003] = 1.76651398E-02;
  COFD[1004] = -1.92867532E+01;
  COFD[1005] = 4.83375900E+00;
  COFD[1006] = -4.09146560E-01;
  COFD[1007] = 1.76006599E-02;
  COFD[1008] = -1.81735675E+01;
  COFD[1009] = 4.38391495E+00;
  COFD[1010] = -3.54941287E-01;
  COFD[1011] = 1.54195107E-02;
  COFD[1012] = -2.13425604E+01;
  COFD[1013] = 5.40460130E+00;
  COFD[1014] = -4.72718910E-01;
  COFD[1015] = 1.99362717E-02;
  COFD[1016] = -2.19317665E+01;
  COFD[1017] = 5.45216133E+00;
  COFD[1018] = -4.52916925E-01;
  COFD[1019] = 1.80456400E-02;
  COFD[1020] = -2.09191230E+01;
  COFD[1021] = 5.30153901E+00;
  COFD[1022] = -4.63335119E-01;
  COFD[1023] = 1.96897053E-02;
  COFD[1024] = -2.16802565E+01;
  COFD[1025] = 5.52918296E+00;
  COFD[1026] = -4.85360709E-01;
  COFD[1027] = 2.03448006E-02;
  COFD[1028] = -2.14326420E+01;
  COFD[1029] = 5.41729961E+00;
  COFD[1030] = -4.73400281E-01;
  COFD[1031] = 1.99269567E-02;
  COFD[1032] = -1.94485902E+01;
  COFD[1033] = 4.91446566E+00;
  COFD[1034] = -4.18837152E-01;
  COFD[1035] = 1.79893537E-02;
  COFD[1036] = -2.22116629E+01;
  COFD[1037] = 5.54251230E+00;
  COFD[1038] = -4.70946314E-01;
  COFD[1039] = 1.90785869E-02;
  COFD[1040] = -2.22235050E+01;
  COFD[1041] = 5.54251230E+00;
  COFD[1042] = -4.70946314E-01;
  COFD[1043] = 1.90785869E-02;
  COFD[1044] = -2.18590684E+01;
  COFD[1045] = 5.47368915E+00;
  COFD[1046] = -4.79424291E-01;
  COFD[1047] = 2.01372920E-02;
  COFD[1048] = -2.18653022E+01;
  COFD[1049] = 5.47368915E+00;
  COFD[1050] = -4.79424291E-01;
  COFD[1051] = 2.01372920E-02;
  COFD[1052] = -1.81432499E+01;
  COFD[1053] = 4.37565431E+00;
  COFD[1054] = -3.53906025E-01;
  COFD[1055] = 1.53760786E-02;
  COFD[1056] = -1.60528433E+01;
  COFD[1057] = 4.11188603E+00;
  COFD[1058] = -3.21540884E-01;
  COFD[1059] = 1.40482564E-02;
  COFD[1060] = -1.97550243E+01;
  COFD[1061] = 5.56931926E+00;
  COFD[1062] = -4.89105511E-01;
  COFD[1063] = 2.04493129E-02;
  COFD[1064] = -1.94373032E+01;
  COFD[1065] = 5.02567894E+00;
  COFD[1066] = -4.32045169E-01;
  COFD[1067] = 1.85132214E-02;
  COFD[1068] = -2.08293167E+01;
  COFD[1069] = 5.35267674E+00;
  COFD[1070] = -4.69010505E-01;
  COFD[1071] = 1.98979152E-02;
  COFD[1072] = -1.94570202E+01;
  COFD[1073] = 5.02567894E+00;
  COFD[1074] = -4.32045169E-01;
  COFD[1075] = 1.85132214E-02;
  COFD[1076] = -1.77563175E+01;
  COFD[1077] = 3.57475686E+00;
  COFD[1078] = -1.56396297E-01;
  COFD[1079] = 3.12157721E-03;
  COFD[1080] = -2.08367641E+01;
  COFD[1081] = 5.35267674E+00;
  COFD[1082] = -4.69010505E-01;
  COFD[1083] = 1.98979152E-02;
  COFD[1084] = -2.08438728E+01;
  COFD[1085] = 5.35267674E+00;
  COFD[1086] = -4.69010505E-01;
  COFD[1087] = 1.98979152E-02;
  COFD[1088] = -2.14449532E+01;
  COFD[1089] = 5.56531152E+00;
  COFD[1090] = -4.88789821E-01;
  COFD[1091] = 2.04437116E-02;
  COFD[1092] = -2.14082433E+01;
  COFD[1093] = 5.55346617E+00;
  COFD[1094] = -4.87783156E-01;
  COFD[1095] = 2.04210886E-02;
  COFD[1096] = -2.05128629E+01;
  COFD[1097] = 5.23843909E+00;
  COFD[1098] = -4.55815614E-01;
  COFD[1099] = 1.93898040E-02;
  COFD[1100] = -2.19317665E+01;
  COFD[1101] = 5.45216133E+00;
  COFD[1102] = -4.52916925E-01;
  COFD[1103] = 1.80456400E-02;
  COFD[1104] = -1.90499374E+01;
  COFD[1105] = 3.99221757E+00;
  COFD[1106] = -2.19854880E-01;
  COFD[1107] = 6.22736279E-03;
  COFD[1108] = -2.20036321E+01;
  COFD[1109] = 5.55935694E+00;
  COFD[1110] = -4.74154740E-01;
  COFD[1111] = 1.92584304E-02;
  COFD[1112] = -2.16379525E+01;
  COFD[1113] = 5.29019717E+00;
  COFD[1114] = -4.24502606E-01;
  COFD[1115] = 1.65197343E-02;
  COFD[1116] = -2.19399756E+01;
  COFD[1117] = 5.41841631E+00;
  COFD[1118] = -4.46818971E-01;
  COFD[1119] = 1.77127652E-02;
  COFD[1120] = -2.14303411E+01;
  COFD[1121] = 5.59268435E+00;
  COFD[1122] = -4.91232974E-01;
  COFD[1123] = 2.05064746E-02;
  COFD[1124] = -2.01015275E+01;
  COFD[1125] = 4.41511629E+00;
  COFD[1126] = -2.84086963E-01;
  COFD[1127] = 9.37586971E-03;
  COFD[1128] = -2.01111534E+01;
  COFD[1129] = 4.41511629E+00;
  COFD[1130] = -2.84086963E-01;
  COFD[1131] = 9.37586971E-03;
  COFD[1132] = -2.20947854E+01;
  COFD[1133] = 5.36053938E+00;
  COFD[1134] = -4.36434519E-01;
  COFD[1135] = 1.71484255E-02;
  COFD[1136] = -2.20998692E+01;
  COFD[1137] = 5.36053938E+00;
  COFD[1138] = -4.36434519E-01;
  COFD[1139] = 1.71484255E-02;
  COFD[1140] = -2.04833743E+01;
  COFD[1141] = 5.23112374E+00;
  COFD[1142] = -4.54967682E-01;
  COFD[1143] = 1.93570423E-02;
  COFD[1144] = -1.34709956E+01;
  COFD[1145] = 3.09379603E+00;
  COFD[1146] = -1.91268635E-01;
  COFD[1147] = 8.47480224E-03;
  COFD[1148] = -1.72232379E+01;
  COFD[1149] = 4.69060745E+00;
  COFD[1150] = -3.92369888E-01;
  COFD[1151] = 1.69459661E-02;
  COFD[1152] = -1.65488277E+01;
  COFD[1153] = 3.95035840E+00;
  COFD[1154] = -3.00959418E-01;
  COFD[1155] = 1.31692593E-02;
  COFD[1156] = -1.78834868E+01;
  COFD[1157] = 4.29613154E+00;
  COFD[1158] = -3.44012526E-01;
  COFD[1159] = 1.49643715E-02;
  COFD[1160] = -1.65675292E+01;
  COFD[1161] = 3.95035840E+00;
  COFD[1162] = -3.00959418E-01;
  COFD[1163] = 1.31692593E-02;
  COFD[1164] = -2.15095920E+01;
  COFD[1165] = 5.46737673E+00;
  COFD[1166] = -4.55696085E-01;
  COFD[1167] = 1.81982625E-02;
  COFD[1168] = -1.78903850E+01;
  COFD[1169] = 4.29613154E+00;
  COFD[1170] = -3.44012526E-01;
  COFD[1171] = 1.49643715E-02;
  COFD[1172] = -1.78969625E+01;
  COFD[1173] = 4.29613154E+00;
  COFD[1174] = -3.44012526E-01;
  COFD[1175] = 1.49643715E-02;
  COFD[1176] = -1.88463801E+01;
  COFD[1177] = 4.68393046E+00;
  COFD[1178] = -3.91610863E-01;
  COFD[1179] = 1.69174645E-02;
  COFD[1180] = -1.87897289E+01;
  COFD[1181] = 4.66162351E+00;
  COFD[1182] = -3.88920477E-01;
  COFD[1183] = 1.68089648E-02;
  COFD[1184] = -1.76285583E+01;
  COFD[1185] = 4.19935698E+00;
  COFD[1186] = -3.32310212E-01;
  COFD[1187] = 1.44920670E-02;
  COFD[1188] = -2.09191230E+01;
  COFD[1189] = 5.30153901E+00;
  COFD[1190] = -4.63335119E-01;
  COFD[1191] = 1.96897053E-02;
  COFD[1192] = -2.20036321E+01;
  COFD[1193] = 5.55935694E+00;
  COFD[1194] = -4.74154740E-01;
  COFD[1195] = 1.92584304E-02;
  COFD[1196] = -2.03766918E+01;
  COFD[1197] = 5.13263469E+00;
  COFD[1198] = -4.44457285E-01;
  COFD[1199] = 1.89932102E-02;
  COFD[1200] = -2.12121345E+01;
  COFD[1201] = 5.39823225E+00;
  COFD[1202] = -4.72294645E-01;
  COFD[1203] = 1.99340225E-02;
  COFD[1204] = -2.10944068E+01;
  COFD[1205] = 5.34286099E+00;
  COFD[1206] = -4.68100992E-01;
  COFD[1207] = 1.98731399E-02;
  COFD[1208] = -1.88646025E+01;
  COFD[1209] = 4.72476764E+00;
  COFD[1210] = -3.96306836E-01;
  COFD[1211] = 1.70964541E-02;
  COFD[1212] = -2.21065263E+01;
  COFD[1213] = 5.58360799E+00;
  COFD[1214] = -4.82701436E-01;
  COFD[1215] = 1.98437922E-02;
  COFD[1216] = -2.21153557E+01;
  COFD[1217] = 5.58360799E+00;
  COFD[1218] = -4.82701436E-01;
  COFD[1219] = 1.98437922E-02;
  COFD[1220] = -2.14323161E+01;
  COFD[1221] = 5.37331605E+00;
  COFD[1222] = -4.70491203E-01;
  COFD[1223] = 1.99134666E-02;
  COFD[1224] = -2.14369847E+01;
  COFD[1225] = 5.37331605E+00;
  COFD[1226] = -4.70491203E-01;
  COFD[1227] = 1.99134666E-02;
  COFD[1228] = -1.76002073E+01;
  COFD[1229] = 4.19171952E+00;
  COFD[1230] = -3.31354810E-01;
  COFD[1231] = 1.44520623E-02;
  COFD[1232] = -1.42229344E+01;
  COFD[1233] = 3.38669384E+00;
  COFD[1234] = -2.28784122E-01;
  COFD[1235] = 1.00790953E-02;
  COFD[1236] = -1.82252070E+01;
  COFD[1237] = 5.05237312E+00;
  COFD[1238] = -4.35182396E-01;
  COFD[1239] = 1.86363074E-02;
  COFD[1240] = -1.74792034E+01;
  COFD[1241] = 4.29676909E+00;
  COFD[1242] = -3.44085306E-01;
  COFD[1243] = 1.49671135E-02;
  COFD[1244] = -1.89544717E+01;
  COFD[1245] = 4.68595732E+00;
  COFD[1246] = -3.91842840E-01;
  COFD[1247] = 1.69262542E-02;
  COFD[1248] = -1.74984410E+01;
  COFD[1249] = 4.29676909E+00;
  COFD[1250] = -3.44085306E-01;
  COFD[1251] = 1.49671135E-02;
  COFD[1252] = -2.08812277E+01;
  COFD[1253] = 5.08859217E+00;
  COFD[1254] = -3.90525428E-01;
  COFD[1255] = 1.47376395E-02;
  COFD[1256] = -1.89616566E+01;
  COFD[1257] = 4.68595732E+00;
  COFD[1258] = -3.91842840E-01;
  COFD[1259] = 1.69262542E-02;
  COFD[1260] = -1.89685112E+01;
  COFD[1261] = 4.68595732E+00;
  COFD[1262] = -3.91842840E-01;
  COFD[1263] = 1.69262542E-02;
  COFD[1264] = -1.98646724E+01;
  COFD[1265] = 5.04367502E+00;
  COFD[1266] = -4.34153325E-01;
  COFD[1267] = 1.85956055E-02;
  COFD[1268] = -1.98075051E+01;
  COFD[1269] = 5.02169524E+00;
  COFD[1270] = -4.31582804E-01;
  COFD[1271] = 1.84953568E-02;
  COFD[1272] = -1.86157710E+01;
  COFD[1273] = 4.55689508E+00;
  COFD[1274] = -3.75937921E-01;
  COFD[1275] = 1.62703488E-02;
  COFD[1276] = -2.16802565E+01;
  COFD[1277] = 5.52918296E+00;
  COFD[1278] = -4.85360709E-01;
  COFD[1279] = 2.03448006E-02;
  COFD[1280] = -2.16379525E+01;
  COFD[1281] = 5.29019717E+00;
  COFD[1282] = -4.24502606E-01;
  COFD[1283] = 1.65197343E-02;
  COFD[1284] = -2.12121345E+01;
  COFD[1285] = 5.39823225E+00;
  COFD[1286] = -4.72294645E-01;
  COFD[1287] = 1.99340225E-02;
  COFD[1288] = -2.19327379E+01;
  COFD[1289] = 5.60638188E+00;
  COFD[1290] = -4.91272522E-01;
  COFD[1291] = 2.04396264E-02;
  COFD[1292] = -2.18273535E+01;
  COFD[1293] = 5.55753905E+00;
  COFD[1294] = -4.88136714E-01;
  COFD[1295] = 2.04294957E-02;
  COFD[1296] = -1.99081518E+01;
  COFD[1297] = 5.09311649E+00;
  COFD[1298] = -4.39965178E-01;
  COFD[1299] = 1.88238537E-02;
  COFD[1300] = -2.20453687E+01;
  COFD[1301] = 5.44448440E+00;
  COFD[1302] = -4.51529024E-01;
  COFD[1303] = 1.79698119E-02;
  COFD[1304] = -2.20546120E+01;
  COFD[1305] = 5.44448440E+00;
  COFD[1306] = -4.51529024E-01;
  COFD[1307] = 1.79698119E-02;
  COFD[1308] = -2.21885121E+01;
  COFD[1309] = 5.59472344E+00;
  COFD[1310] = -4.91421518E-01;
  COFD[1311] = 2.05117088E-02;
  COFD[1312] = -2.21933965E+01;
  COFD[1313] = 5.59472344E+00;
  COFD[1314] = -4.91421518E-01;
  COFD[1315] = 2.05117088E-02;
  COFD[1316] = -1.85864196E+01;
  COFD[1317] = 4.54915847E+00;
  COFD[1318] = -3.75000738E-01;
  COFD[1319] = 1.62324821E-02;
  COFD[1320] = -1.39924933E+01;
  COFD[1321] = 3.26384506E+00;
  COFD[1322] = -2.12947087E-01;
  COFD[1323] = 9.39743888E-03;
  COFD[1324] = -1.79345106E+01;
  COFD[1325] = 4.91373893E+00;
  COFD[1326] = -4.18747629E-01;
  COFD[1327] = 1.79856610E-02;
  COFD[1328] = -1.72556425E+01;
  COFD[1329] = 4.17889917E+00;
  COFD[1330] = -3.29752510E-01;
  COFD[1331] = 1.43850275E-02;
  COFD[1332] = -1.86424488E+01;
  COFD[1333] = 4.53572533E+00;
  COFD[1334] = -3.73386925E-01;
  COFD[1335] = 1.61678881E-02;
  COFD[1336] = -1.72753698E+01;
  COFD[1337] = 4.17889917E+00;
  COFD[1338] = -3.29752510E-01;
  COFD[1339] = 1.43850275E-02;
  COFD[1340] = -2.12661812E+01;
  COFD[1341] = 5.24930667E+00;
  COFD[1342] = -4.17435088E-01;
  COFD[1343] = 1.61434424E-02;
  COFD[1344] = -1.86499019E+01;
  COFD[1345] = 4.53572533E+00;
  COFD[1346] = -3.73386925E-01;
  COFD[1347] = 1.61678881E-02;
  COFD[1348] = -1.86570161E+01;
  COFD[1349] = 4.53572533E+00;
  COFD[1350] = -3.73386925E-01;
  COFD[1351] = 1.61678881E-02;
  COFD[1352] = -1.95552136E+01;
  COFD[1353] = 4.90255048E+00;
  COFD[1354] = -4.17368501E-01;
  COFD[1355] = 1.79287358E-02;
  COFD[1356] = -1.94823661E+01;
  COFD[1357] = 4.87333294E+00;
  COFD[1358] = -4.13769241E-01;
  COFD[1359] = 1.77802244E-02;
  COFD[1360] = -1.83538331E+01;
  COFD[1361] = 4.42828044E+00;
  COFD[1362] = -3.60417833E-01;
  COFD[1363] = 1.56455103E-02;
  COFD[1364] = -2.14326420E+01;
  COFD[1365] = 5.41729961E+00;
  COFD[1366] = -4.73400281E-01;
  COFD[1367] = 1.99269567E-02;
  COFD[1368] = -2.19399756E+01;
  COFD[1369] = 5.41841631E+00;
  COFD[1370] = -4.46818971E-01;
  COFD[1371] = 1.77127652E-02;
  COFD[1372] = -2.10944068E+01;
  COFD[1373] = 5.34286099E+00;
  COFD[1374] = -4.68100992E-01;
  COFD[1375] = 1.98731399E-02;
  COFD[1376] = -2.18273535E+01;
  COFD[1377] = 5.55753905E+00;
  COFD[1378] = -4.88136714E-01;
  COFD[1379] = 2.04294957E-02;
  COFD[1380] = -2.15746130E+01;
  COFD[1381] = 5.44803850E+00;
  COFD[1382] = -4.76610560E-01;
  COFD[1383] = 2.00355294E-02;
  COFD[1384] = -1.96408096E+01;
  COFD[1385] = 4.95923807E+00;
  COFD[1386] = -4.24176182E-01;
  COFD[1387] = 1.82020215E-02;
  COFD[1388] = -2.22159601E+01;
  COFD[1389] = 5.51722375E+00;
  COFD[1390] = -4.66081431E-01;
  COFD[1391] = 1.88044011E-02;
  COFD[1392] = -2.22255943E+01;
  COFD[1393] = 5.51722375E+00;
  COFD[1394] = -4.66081431E-01;
  COFD[1395] = 1.88044011E-02;
  COFD[1396] = -2.19982906E+01;
  COFD[1397] = 5.51276597E+00;
  COFD[1398] = -4.83701824E-01;
  COFD[1399] = 2.02915297E-02;
  COFD[1400] = -2.20033786E+01;
  COFD[1401] = 5.51276597E+00;
  COFD[1402] = -4.83701824E-01;
  COFD[1403] = 2.02915297E-02;
  COFD[1404] = -1.83249359E+01;
  COFD[1405] = 4.42045763E+00;
  COFD[1406] = -3.59451578E-01;
  COFD[1407] = 1.56056164E-02;
  COFD[1408] = -1.22004476E+01;
  COFD[1409] = 2.80725489E+00;
  COFD[1410] = -1.54291406E-01;
  COFD[1411] = 6.88290911E-03;
  COFD[1412] = -1.54460977E+01;
  COFD[1413] = 4.26819983E+00;
  COFD[1414] = -3.40766379E-01;
  COFD[1415] = 1.48393361E-02;
  COFD[1416] = -1.49500258E+01;
  COFD[1417] = 3.52327209E+00;
  COFD[1418] = -2.46286208E-01;
  COFD[1419] = 1.08285963E-02;
  COFD[1420] = -1.64169341E+01;
  COFD[1421] = 3.89309916E+00;
  COFD[1422] = -2.93528188E-01;
  COFD[1423] = 1.28463177E-02;
  COFD[1424] = -1.49718147E+01;
  COFD[1425] = 3.52327209E+00;
  COFD[1426] = -2.46286208E-01;
  COFD[1427] = 1.08285963E-02;
  COFD[1428] = -2.10440599E+01;
  COFD[1429] = 5.59806282E+00;
  COFD[1430] = -4.87109535E-01;
  COFD[1431] = 2.01370226E-02;
  COFD[1432] = -1.64255877E+01;
  COFD[1433] = 3.89309916E+00;
  COFD[1434] = -2.93528188E-01;
  COFD[1435] = 1.28463177E-02;
  COFD[1436] = -1.64338675E+01;
  COFD[1437] = 3.89309916E+00;
  COFD[1438] = -2.93528188E-01;
  COFD[1439] = 1.28463177E-02;
  COFD[1440] = -1.72828280E+01;
  COFD[1441] = 4.26063341E+00;
  COFD[1442] = -3.39848064E-01;
  COFD[1443] = 1.48021313E-02;
  COFD[1444] = -1.72316133E+01;
  COFD[1445] = 4.24011069E+00;
  COFD[1446] = -3.37339810E-01;
  COFD[1447] = 1.46996679E-02;
  COFD[1448] = -1.60261598E+01;
  COFD[1449] = 3.73312045E+00;
  COFD[1450] = -2.72579779E-01;
  COFD[1451] = 1.19290272E-02;
  COFD[1452] = -1.94485902E+01;
  COFD[1453] = 4.91446566E+00;
  COFD[1454] = -4.18837152E-01;
  COFD[1455] = 1.79893537E-02;
  COFD[1456] = -2.14303411E+01;
  COFD[1457] = 5.59268435E+00;
  COFD[1458] = -4.91232974E-01;
  COFD[1459] = 2.05064746E-02;
  COFD[1460] = -1.88646025E+01;
  COFD[1461] = 4.72476764E+00;
  COFD[1462] = -3.96306836E-01;
  COFD[1463] = 1.70964541E-02;
  COFD[1464] = -1.99081518E+01;
  COFD[1465] = 5.09311649E+00;
  COFD[1466] = -4.39965178E-01;
  COFD[1467] = 1.88238537E-02;
  COFD[1468] = -1.96408096E+01;
  COFD[1469] = 4.95923807E+00;
  COFD[1470] = -4.24176182E-01;
  COFD[1471] = 1.82020215E-02;
  COFD[1472] = -1.72414795E+01;
  COFD[1473] = 4.29808578E+00;
  COFD[1474] = -3.44235570E-01;
  COFD[1475] = 1.49727727E-02;
  COFD[1476] = -2.12621849E+01;
  COFD[1477] = 5.47935225E+00;
  COFD[1478] = -4.80056796E-01;
  COFD[1479] = 2.01607180E-02;
  COFD[1480] = -2.12736166E+01;
  COFD[1481] = 5.47935225E+00;
  COFD[1482] = -4.80056796E-01;
  COFD[1483] = 2.01607180E-02;
  COFD[1484] = -2.01223105E+01;
  COFD[1485] = 5.03101171E+00;
  COFD[1486] = -4.32665019E-01;
  COFD[1487] = 1.85372086E-02;
  COFD[1488] = -2.01283319E+01;
  COFD[1489] = 5.03101171E+00;
  COFD[1490] = -4.32665019E-01;
  COFD[1491] = 1.85372086E-02;
  COFD[1492] = -1.59884349E+01;
  COFD[1493] = 3.72220402E+00;
  COFD[1494] = -2.71150591E-01;
  COFD[1495] = 1.18665265E-02;
  COFD[1496] = -1.57035004E+01;
  COFD[1497] = 3.93614244E+00;
  COFD[1498] = -2.99111497E-01;
  COFD[1499] = 1.30888229E-02;
  COFD[1500] = -1.94688845E+01;
  COFD[1501] = 5.43830787E+00;
  COFD[1502] = -4.75472880E-01;
  COFD[1503] = 1.99909996E-02;
  COFD[1504] = -1.90883170E+01;
  COFD[1505] = 4.84384483E+00;
  COFD[1506] = -4.10265575E-01;
  COFD[1507] = 1.76414287E-02;
  COFD[1508] = -2.05184780E+01;
  COFD[1509] = 5.18417470E+00;
  COFD[1510] = -4.49491573E-01;
  COFD[1511] = 1.91438508E-02;
  COFD[1512] = -1.91102567E+01;
  COFD[1513] = 4.84384483E+00;
  COFD[1514] = -4.10265575E-01;
  COFD[1515] = 1.76414287E-02;
  COFD[1516] = -1.87383877E+01;
  COFD[1517] = 3.96926341E+00;
  COFD[1518] = -2.16412264E-01;
  COFD[1519] = 6.06012078E-03;
  COFD[1520] = -2.05272244E+01;
  COFD[1521] = 5.18417470E+00;
  COFD[1522] = -4.49491573E-01;
  COFD[1523] = 1.91438508E-02;
  COFD[1524] = -2.05355943E+01;
  COFD[1525] = 5.18417470E+00;
  COFD[1526] = -4.49491573E-01;
  COFD[1527] = 1.91438508E-02;
  COFD[1528] = -2.11606942E+01;
  COFD[1529] = 5.42846112E+00;
  COFD[1530] = -4.74321870E-01;
  COFD[1531] = 1.99459749E-02;
  COFD[1532] = -2.11309194E+01;
  COFD[1533] = 5.41773516E+00;
  COFD[1534] = -4.73414338E-01;
  COFD[1535] = 1.99258685E-02;
  COFD[1536] = -2.02922626E+01;
  COFD[1537] = 5.11106992E+00;
  COFD[1538] = -4.42047129E-01;
  COFD[1539] = 1.89042990E-02;
  COFD[1540] = -2.22116629E+01;
  COFD[1541] = 5.54251230E+00;
  COFD[1542] = -4.70946314E-01;
  COFD[1543] = 1.90785869E-02;
  COFD[1544] = -2.01015275E+01;
  COFD[1545] = 4.41511629E+00;
  COFD[1546] = -2.84086963E-01;
  COFD[1547] = 9.37586971E-03;
  COFD[1548] = -2.21065263E+01;
  COFD[1549] = 5.58360799E+00;
  COFD[1550] = -4.82701436E-01;
  COFD[1551] = 1.98437922E-02;
  COFD[1552] = -2.20453687E+01;
  COFD[1553] = 5.44448440E+00;
  COFD[1554] = -4.51529024E-01;
  COFD[1555] = 1.79698119E-02;
  COFD[1556] = -2.22159601E+01;
  COFD[1557] = 5.51722375E+00;
  COFD[1558] = -4.66081431E-01;
  COFD[1559] = 1.88044011E-02;
  COFD[1560] = -2.12621849E+01;
  COFD[1561] = 5.47935225E+00;
  COFD[1562] = -4.80056796E-01;
  COFD[1563] = 2.01607180E-02;
  COFD[1564] = -2.09002680E+01;
  COFD[1565] = 4.72895031E+00;
  COFD[1566] = -3.33332771E-01;
  COFD[1567] = 1.18431478E-02;
  COFD[1568] = -2.09118417E+01;
  COFD[1569] = 4.72895031E+00;
  COFD[1570] = -3.33332771E-01;
  COFD[1571] = 1.18431478E-02;
  COFD[1572] = -2.24554479E+01;
  COFD[1573] = 5.49330641E+00;
  COFD[1574] = -4.60498247E-01;
  COFD[1575] = 1.84639199E-02;
  COFD[1576] = -2.24615428E+01;
  COFD[1577] = 5.49330641E+00;
  COFD[1578] = -4.60498247E-01;
  COFD[1579] = 1.84639199E-02;
  COFD[1580] = -2.02646659E+01;
  COFD[1581] = 5.10426133E+00;
  COFD[1582] = -4.41256919E-01;
  COFD[1583] = 1.88737290E-02;
  COFD[1584] = -1.57045486E+01;
  COFD[1585] = 3.93614244E+00;
  COFD[1586] = -2.99111497E-01;
  COFD[1587] = 1.30888229E-02;
  COFD[1588] = -1.94694206E+01;
  COFD[1589] = 5.43830787E+00;
  COFD[1590] = -4.75472880E-01;
  COFD[1591] = 1.99909996E-02;
  COFD[1592] = -1.90946650E+01;
  COFD[1593] = 4.84384483E+00;
  COFD[1594] = -4.10265575E-01;
  COFD[1595] = 1.76414287E-02;
  COFD[1596] = -2.05284666E+01;
  COFD[1597] = 5.18417470E+00;
  COFD[1598] = -4.49491573E-01;
  COFD[1599] = 1.91438508E-02;
  COFD[1600] = -1.91168913E+01;
  COFD[1601] = 4.84384483E+00;
  COFD[1602] = -4.10265575E-01;
  COFD[1603] = 1.76414287E-02;
  COFD[1604] = -1.87452995E+01;
  COFD[1605] = 3.96926341E+00;
  COFD[1606] = -2.16412264E-01;
  COFD[1607] = 6.06012078E-03;
  COFD[1608] = -2.05373910E+01;
  COFD[1609] = 5.18417470E+00;
  COFD[1610] = -4.49491573E-01;
  COFD[1611] = 1.91438508E-02;
  COFD[1612] = -2.05459343E+01;
  COFD[1613] = 5.18417470E+00;
  COFD[1614] = -4.49491573E-01;
  COFD[1615] = 1.91438508E-02;
  COFD[1616] = -2.11667588E+01;
  COFD[1617] = 5.42846112E+00;
  COFD[1618] = -4.74321870E-01;
  COFD[1619] = 1.99459749E-02;
  COFD[1620] = -2.11372801E+01;
  COFD[1621] = 5.41773516E+00;
  COFD[1622] = -4.73414338E-01;
  COFD[1623] = 1.99258685E-02;
  COFD[1624] = -2.03014971E+01;
  COFD[1625] = 5.11106992E+00;
  COFD[1626] = -4.42047129E-01;
  COFD[1627] = 1.89042990E-02;
  COFD[1628] = -2.22235050E+01;
  COFD[1629] = 5.54251230E+00;
  COFD[1630] = -4.70946314E-01;
  COFD[1631] = 1.90785869E-02;
  COFD[1632] = -2.01111534E+01;
  COFD[1633] = 4.41511629E+00;
  COFD[1634] = -2.84086963E-01;
  COFD[1635] = 9.37586971E-03;
  COFD[1636] = -2.21153557E+01;
  COFD[1637] = 5.58360799E+00;
  COFD[1638] = -4.82701436E-01;
  COFD[1639] = 1.98437922E-02;
  COFD[1640] = -2.20546120E+01;
  COFD[1641] = 5.44448440E+00;
  COFD[1642] = -4.51529024E-01;
  COFD[1643] = 1.79698119E-02;
  COFD[1644] = -2.22255943E+01;
  COFD[1645] = 5.51722375E+00;
  COFD[1646] = -4.66081431E-01;
  COFD[1647] = 1.88044011E-02;
  COFD[1648] = -2.12736166E+01;
  COFD[1649] = 5.47935225E+00;
  COFD[1650] = -4.80056796E-01;
  COFD[1651] = 2.01607180E-02;
  COFD[1652] = -2.09118417E+01;
  COFD[1653] = 4.72895031E+00;
  COFD[1654] = -3.33332771E-01;
  COFD[1655] = 1.18431478E-02;
  COFD[1656] = -2.09236897E+01;
  COFD[1657] = 4.72895031E+00;
  COFD[1658] = -3.33332771E-01;
  COFD[1659] = 1.18431478E-02;
  COFD[1660] = -2.24668858E+01;
  COFD[1661] = 5.49330641E+00;
  COFD[1662] = -4.60498247E-01;
  COFD[1663] = 1.84639199E-02;
  COFD[1664] = -2.24731226E+01;
  COFD[1665] = 5.49330641E+00;
  COFD[1666] = -4.60498247E-01;
  COFD[1667] = 1.84639199E-02;
  COFD[1668] = -2.02739012E+01;
  COFD[1669] = 5.10426133E+00;
  COFD[1670] = -4.41256919E-01;
  COFD[1671] = 1.88737290E-02;
  COFD[1672] = -1.43129867E+01;
  COFD[1673] = 3.31177824E+00;
  COFD[1674] = -2.18945280E-01;
  COFD[1675] = 9.64764419E-03;
  COFD[1676] = -1.83539845E+01;
  COFD[1677] = 4.98756925E+00;
  COFD[1678] = -4.27526072E-01;
  COFD[1679] = 1.83341755E-02;
  COFD[1680] = -1.76774947E+01;
  COFD[1681] = 4.24719726E+00;
  COFD[1682] = -3.38206061E-01;
  COFD[1683] = 1.47350654E-02;
  COFD[1684] = -1.91121670E+01;
  COFD[1685] = 4.61801405E+00;
  COFD[1686] = -3.83535652E-01;
  COFD[1687] = 1.65862513E-02;
  COFD[1688] = -1.76992903E+01;
  COFD[1689] = 4.24719726E+00;
  COFD[1690] = -3.38206061E-01;
  COFD[1691] = 1.47350654E-02;
  COFD[1692] = -2.13847376E+01;
  COFD[1693] = 5.17440955E+00;
  COFD[1694] = -4.04678430E-01;
  COFD[1695] = 1.54706350E-02;
  COFD[1696] = -1.91208247E+01;
  COFD[1697] = 4.61801405E+00;
  COFD[1698] = -3.83535652E-01;
  COFD[1699] = 1.65862513E-02;
  COFD[1700] = -1.91291085E+01;
  COFD[1701] = 4.61801405E+00;
  COFD[1702] = -3.83535652E-01;
  COFD[1703] = 1.65862513E-02;
  COFD[1704] = -1.99803480E+01;
  COFD[1705] = 4.97875278E+00;
  COFD[1706] = -4.26485475E-01;
  COFD[1707] = 1.82931933E-02;
  COFD[1708] = -1.99235836E+01;
  COFD[1709] = 4.95514826E+00;
  COFD[1710] = -4.23691395E-01;
  COFD[1711] = 1.81828318E-02;
  COFD[1712] = -1.87684982E+01;
  COFD[1713] = 4.49191492E+00;
  COFD[1714] = -3.68041771E-01;
  COFD[1715] = 1.59498676E-02;
  COFD[1716] = -2.18590684E+01;
  COFD[1717] = 5.47368915E+00;
  COFD[1718] = -4.79424291E-01;
  COFD[1719] = 2.01372920E-02;
  COFD[1720] = -2.20947854E+01;
  COFD[1721] = 5.36053938E+00;
  COFD[1722] = -4.36434519E-01;
  COFD[1723] = 1.71484255E-02;
  COFD[1724] = -2.14323161E+01;
  COFD[1725] = 5.37331605E+00;
  COFD[1726] = -4.70491203E-01;
  COFD[1727] = 1.99134666E-02;
  COFD[1728] = -2.21885121E+01;
  COFD[1729] = 5.59472344E+00;
  COFD[1730] = -4.91421518E-01;
  COFD[1731] = 2.05117088E-02;
  COFD[1732] = -2.19982906E+01;
  COFD[1733] = 5.51276597E+00;
  COFD[1734] = -4.83701824E-01;
  COFD[1735] = 2.02915297E-02;
  COFD[1736] = -2.01223105E+01;
  COFD[1737] = 5.03101171E+00;
  COFD[1738] = -4.32665019E-01;
  COFD[1739] = 1.85372086E-02;
  COFD[1740] = -2.24554479E+01;
  COFD[1741] = 5.49330641E+00;
  COFD[1742] = -4.60498247E-01;
  COFD[1743] = 1.84639199E-02;
  COFD[1744] = -2.24668858E+01;
  COFD[1745] = 5.49330641E+00;
  COFD[1746] = -4.60498247E-01;
  COFD[1747] = 1.84639199E-02;
  COFD[1748] = -2.23842793E+01;
  COFD[1749] = 5.56066804E+00;
  COFD[1750] = -4.88405706E-01;
  COFD[1751] = 2.04357330E-02;
  COFD[1752] = -2.23903039E+01;
  COFD[1753] = 5.56066804E+00;
  COFD[1754] = -4.88405706E-01;
  COFD[1755] = 2.04357330E-02;
  COFD[1756] = -1.87434421E+01;
  COFD[1757] = 4.48550694E+00;
  COFD[1758] = -3.67277454E-01;
  COFD[1759] = 1.59194755E-02;
  COFD[1760] = -1.43135474E+01;
  COFD[1761] = 3.31177824E+00;
  COFD[1762] = -2.18945280E-01;
  COFD[1763] = 9.64764419E-03;
  COFD[1764] = -1.83542714E+01;
  COFD[1765] = 4.98756925E+00;
  COFD[1766] = -4.27526072E-01;
  COFD[1767] = 1.83341755E-02;
  COFD[1768] = -1.76808635E+01;
  COFD[1769] = 4.24719726E+00;
  COFD[1770] = -3.38206061E-01;
  COFD[1771] = 1.47350654E-02;
  COFD[1772] = -1.91174394E+01;
  COFD[1773] = 4.61801405E+00;
  COFD[1774] = -3.83535652E-01;
  COFD[1775] = 1.65862513E-02;
  COFD[1776] = -1.77028097E+01;
  COFD[1777] = 4.24719726E+00;
  COFD[1778] = -3.38206061E-01;
  COFD[1779] = 1.47350654E-02;
  COFD[1780] = -2.13884026E+01;
  COFD[1781] = 5.17440955E+00;
  COFD[1782] = -4.04678430E-01;
  COFD[1783] = 1.54706350E-02;
  COFD[1784] = -1.91261897E+01;
  COFD[1785] = 4.61801405E+00;
  COFD[1786] = -3.83535652E-01;
  COFD[1787] = 1.65862513E-02;
  COFD[1788] = -1.91345636E+01;
  COFD[1789] = 4.61801405E+00;
  COFD[1790] = -3.83535652E-01;
  COFD[1791] = 1.65862513E-02;
  COFD[1792] = -1.99835677E+01;
  COFD[1793] = 4.97875278E+00;
  COFD[1794] = -4.26485475E-01;
  COFD[1795] = 1.82931933E-02;
  COFD[1796] = -1.99269591E+01;
  COFD[1797] = 4.95514826E+00;
  COFD[1798] = -4.23691395E-01;
  COFD[1799] = 1.81828318E-02;
  COFD[1800] = -1.87733780E+01;
  COFD[1801] = 4.49191492E+00;
  COFD[1802] = -3.68041771E-01;
  COFD[1803] = 1.59498676E-02;
  COFD[1804] = -2.18653022E+01;
  COFD[1805] = 5.47368915E+00;
  COFD[1806] = -4.79424291E-01;
  COFD[1807] = 2.01372920E-02;
  COFD[1808] = -2.20998692E+01;
  COFD[1809] = 5.36053938E+00;
  COFD[1810] = -4.36434519E-01;
  COFD[1811] = 1.71484255E-02;
  COFD[1812] = -2.14369847E+01;
  COFD[1813] = 5.37331605E+00;
  COFD[1814] = -4.70491203E-01;
  COFD[1815] = 1.99134666E-02;
  COFD[1816] = -2.21933965E+01;
  COFD[1817] = 5.59472344E+00;
  COFD[1818] = -4.91421518E-01;
  COFD[1819] = 2.05117088E-02;
  COFD[1820] = -2.20033786E+01;
  COFD[1821] = 5.51276597E+00;
  COFD[1822] = -4.83701824E-01;
  COFD[1823] = 2.02915297E-02;
  COFD[1824] = -2.01283319E+01;
  COFD[1825] = 5.03101171E+00;
  COFD[1826] = -4.32665019E-01;
  COFD[1827] = 1.85372086E-02;
  COFD[1828] = -2.24615428E+01;
  COFD[1829] = 5.49330641E+00;
  COFD[1830] = -4.60498247E-01;
  COFD[1831] = 1.84639199E-02;
  COFD[1832] = -2.24731226E+01;
  COFD[1833] = 5.49330641E+00;
  COFD[1834] = -4.60498247E-01;
  COFD[1835] = 1.84639199E-02;
  COFD[1836] = -2.23903039E+01;
  COFD[1837] = 5.56066804E+00;
  COFD[1838] = -4.88405706E-01;
  COFD[1839] = 2.04357330E-02;
  COFD[1840] = -2.23964020E+01;
  COFD[1841] = 5.56066804E+00;
  COFD[1842] = -4.88405706E-01;
  COFD[1843] = 2.04357330E-02;
  COFD[1844] = -1.87483223E+01;
  COFD[1845] = 4.48550694E+00;
  COFD[1846] = -3.67277454E-01;
  COFD[1847] = 1.59194755E-02;
  COFD[1848] = -1.16906458E+01;
  COFD[1849] = 2.47469981E+00;
  COFD[1850] = -1.10436257E-01;
  COFD[1851] = 4.95273813E-03;
  COFD[1852] = -1.42894603E+01;
  COFD[1853] = 3.67490723E+00;
  COFD[1854] = -2.65114792E-01;
  COFD[1855] = 1.16092671E-02;
  COFD[1856] = -1.40756909E+01;
  COFD[1857] = 3.07549274E+00;
  COFD[1858] = -1.88889344E-01;
  COFD[1859] = 8.37152866E-03;
  COFD[1860] = -1.52414498E+01;
  COFD[1861] = 3.35922578E+00;
  COFD[1862] = -2.25181399E-01;
  COFD[1863] = 9.92132878E-03;
  COFD[1864] = -1.40949183E+01;
  COFD[1865] = 3.07549274E+00;
  COFD[1866] = -1.88889344E-01;
  COFD[1867] = 8.37152866E-03;
  COFD[1868] = -2.10643264E+01;
  COFD[1869] = 5.53614864E+00;
  COFD[1870] = -4.86046753E-01;
  COFD[1871] = 2.03659193E-02;
  COFD[1872] = -1.52486292E+01;
  COFD[1873] = 3.35922578E+00;
  COFD[1874] = -2.25181399E-01;
  COFD[1875] = 9.92132878E-03;
  COFD[1876] = -1.52554785E+01;
  COFD[1877] = 3.35922578E+00;
  COFD[1878] = -2.25181399E-01;
  COFD[1879] = 9.92132878E-03;
  COFD[1880] = -1.59633426E+01;
  COFD[1881] = 3.66853818E+00;
  COFD[1882] = -2.64346221E-01;
  COFD[1883] = 1.15784613E-02;
  COFD[1884] = -1.59327344E+01;
  COFD[1885] = 3.65620899E+00;
  COFD[1886] = -2.62933804E-01;
  COFD[1887] = 1.15253223E-02;
  COFD[1888] = -1.50031706E+01;
  COFD[1889] = 3.26223357E+00;
  COFD[1890] = -2.12746642E-01;
  COFD[1891] = 9.38912883E-03;
  COFD[1892] = -1.81432499E+01;
  COFD[1893] = 4.37565431E+00;
  COFD[1894] = -3.53906025E-01;
  COFD[1895] = 1.53760786E-02;
  COFD[1896] = -2.04833743E+01;
  COFD[1897] = 5.23112374E+00;
  COFD[1898] = -4.54967682E-01;
  COFD[1899] = 1.93570423E-02;
  COFD[1900] = -1.76002073E+01;
  COFD[1901] = 4.19171952E+00;
  COFD[1902] = -3.31354810E-01;
  COFD[1903] = 1.44520623E-02;
  COFD[1904] = -1.85864196E+01;
  COFD[1905] = 4.54915847E+00;
  COFD[1906] = -3.75000738E-01;
  COFD[1907] = 1.62324821E-02;
  COFD[1908] = -1.83249359E+01;
  COFD[1909] = 4.42045763E+00;
  COFD[1910] = -3.59451578E-01;
  COFD[1911] = 1.56056164E-02;
  COFD[1912] = -1.59884349E+01;
  COFD[1913] = 3.72220402E+00;
  COFD[1914] = -2.71150591E-01;
  COFD[1915] = 1.18665265E-02;
  COFD[1916] = -2.02646659E+01;
  COFD[1917] = 5.10426133E+00;
  COFD[1918] = -4.41256919E-01;
  COFD[1919] = 1.88737290E-02;
  COFD[1920] = -2.02739012E+01;
  COFD[1921] = 5.10426133E+00;
  COFD[1922] = -4.41256919E-01;
  COFD[1923] = 1.88737290E-02;
  COFD[1924] = -1.87434421E+01;
  COFD[1925] = 4.48550694E+00;
  COFD[1926] = -3.67277454E-01;
  COFD[1927] = 1.59194755E-02;
  COFD[1928] = -1.87483223E+01;
  COFD[1929] = 4.48550694E+00;
  COFD[1930] = -3.67277454E-01;
  COFD[1931] = 1.59194755E-02;
  COFD[1932] = -1.49828551E+01;
  COFD[1933] = 3.25781069E+00;
  COFD[1934] = -2.12199367E-01;
  COFD[1935] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = -1.44152190E-01;
  COFTD[5] = -7.99993584E-05;
  COFTD[6] = 4.89707442E-08;
  COFTD[7] = -9.14277269E-12;
  COFTD[8] = 4.06676789E-01;
  COFTD[9] = 3.84699853E-05;
  COFTD[10] = -2.54843294E-08;
  COFTD[11] = 5.86294132E-12;
  COFTD[12] = 4.26576987E-01;
  COFTD[13] = 1.20406440E-04;
  COFTD[14] = -7.67293441E-08;
  COFTD[15] = 1.52089282E-11;
  COFTD[16] = 4.12890501E-01;
  COFTD[17] = 3.90577773E-05;
  COFTD[18] = -2.58737105E-08;
  COFTD[19] = 5.95252260E-12;
  COFTD[20] = 2.27466103E-02;
  COFTD[21] = 6.73071543E-04;
  COFTD[22] = -3.40932103E-07;
  COFTD[23] = 5.48493184E-11;
  COFTD[24] = 4.28228101E-01;
  COFTD[25] = 1.20872486E-04;
  COFTD[26] = -7.70263335E-08;
  COFTD[27] = 1.52677960E-11;
  COFTD[28] = 4.29786829E-01;
  COFTD[29] = 1.21312456E-04;
  COFTD[30] = -7.73067054E-08;
  COFTD[31] = 1.53233700E-11;
  COFTD[32] = 3.31188133E-01;
  COFTD[33] = 1.81325042E-04;
  COFTD[34] = -1.11095367E-07;
  COFTD[35] = 2.07634046E-11;
  COFTD[36] = 3.39554500E-01;
  COFTD[37] = 1.79333587E-04;
  COFTD[38] = -1.10134815E-07;
  COFTD[39] = 2.06425572E-11;
  COFTD[40] = 4.30602469E-01;
  COFTD[41] = 9.35955212E-05;
  COFTD[42] = -6.03979306E-08;
  COFTD[43] = 1.23114290E-11;
  COFTD[44] = 2.93190141E-01;
  COFTD[45] = 4.01428114E-04;
  COFTD[46] = -2.30704675E-07;
  COFTD[47] = 4.05174676E-11;
  COFTD[48] = 1.22692619E-01;
  COFTD[49] = 6.21274281E-04;
  COFTD[50] = -3.29963157E-07;
  COFTD[51] = 5.47158146E-11;
  COFTD[52] = 3.05611370E-01;
  COFTD[53] = 3.24503916E-04;
  COFTD[54] = -1.89888419E-07;
  COFTD[55] = 3.38661408E-11;
  COFTD[56] = 2.49016176E-01;
  COFTD[57] = 4.29034331E-04;
  COFTD[58] = -2.42667349E-07;
  COFTD[59] = 4.20799172E-11;
  COFTD[60] = 2.74035711E-01;
  COFTD[61] = 3.96247941E-04;
  COFTD[62] = -2.26856932E-07;
  COFTD[63] = 3.97175174E-11;
  COFTD[64] = 3.86105710E-01;
  COFTD[65] = 2.28759408E-04;
  COFTD[66] = -1.39424407E-07;
  COFTD[67] = 2.58988578E-11;
  COFTD[68] = 1.59288295E-01;
  COFTD[69] = 6.02831194E-04;
  COFTD[70] = -3.24836171E-07;
  COFTD[71] = 5.43906658E-11;
  COFTD[72] = 1.59990556E-01;
  COFTD[73] = 6.05488919E-04;
  COFTD[74] = -3.26268289E-07;
  COFTD[75] = 5.46304600E-11;
  COFTD[76] = 2.71945062E-01;
  COFTD[77] = 4.30812732E-04;
  COFTD[78] = -2.45083425E-07;
  COFTD[79] = 4.26911430E-11;
  COFTD[80] = 2.72586795E-01;
  COFTD[81] = 4.31829359E-04;
  COFTD[82] = -2.45661770E-07;
  COFTD[83] = 4.27918850E-11;
  COFTD[84] = 4.31330748E-01;
  COFTD[85] = 9.20535689E-05;
  COFTD[86] = -5.94508898E-08;
  COFTD[87] = 1.21437846E-11;
  COFTD[88] = 1.44152190E-01;
  COFTD[89] = 7.99993584E-05;
  COFTD[90] = -4.89707442E-08;
  COFTD[91] = 9.14277269E-12;
  COFTD[92] = 0.00000000E+00;
  COFTD[93] = 0.00000000E+00;
  COFTD[94] = 0.00000000E+00;
  COFTD[95] = 0.00000000E+00;
  COFTD[96] = 2.35281489E-01;
  COFTD[97] = 4.65667373E-04;
  COFTD[98] = -2.60938016E-07;
  COFTD[99] = 4.49268709E-11;
  COFTD[100] = 1.79839678E-01;
  COFTD[101] = 6.01720824E-04;
  COFTD[102] = -3.26432767E-07;
  COFTD[103] = 5.49110406E-11;
  COFTD[104] = 2.37051899E-01;
  COFTD[105] = 4.69171356E-04;
  COFTD[106] = -2.62901483E-07;
  COFTD[107] = 4.52649298E-11;
  COFTD[108] = -1.74351746E-01;
  COFTD[109] = 8.62242165E-04;
  COFTD[110] = -3.79543417E-07;
  COFTD[111] = 5.60259034E-11;
  COFTD[112] = 1.80186380E-01;
  COFTD[113] = 6.02880848E-04;
  COFTD[114] = -3.27062078E-07;
  COFTD[115] = 5.50169005E-11;
  COFTD[116] = 1.80513126E-01;
  COFTD[117] = 6.03974096E-04;
  COFTD[118] = -3.27655164E-07;
  COFTD[119] = 5.51166667E-11;
  COFTD[120] = 1.00038655E-01;
  COFTD[121] = 6.50465703E-04;
  COFTD[122] = -3.41777446E-07;
  COFTD[123] = 5.62776574E-11;
  COFTD[124] = 1.05123703E-01;
  COFTD[125] = 6.50663360E-04;
  COFTD[126] = -3.42563171E-07;
  COFTD[127] = 5.64801866E-11;
  COFTD[128] = 2.00119185E-01;
  COFTD[129] = 5.64791694E-04;
  COFTD[130] = -3.09444383E-07;
  COFTD[131] = 5.24137469E-11;
  COFTD[132] = -2.00308977E-02;
  COFTD[133] = 8.50438113E-04;
  COFTD[134] = -4.21063477E-07;
  COFTD[135] = 6.67958138E-11;
  COFTD[136] = -1.61357064E-01;
  COFTD[137] = 9.05917454E-04;
  COFTD[138] = -4.07877889E-07;
  COFTD[139] = 6.10624399E-11;
  COFTD[140] = 1.63244604E-02;
  COFTD[141] = 7.90131000E-04;
  COFTD[142] = -3.98291254E-07;
  COFTD[143] = 6.38849501E-11;
  COFTD[144] = -5.08743421E-02;
  COFTD[145] = 8.54340362E-04;
  COFTD[146] = -4.15925370E-07;
  COFTD[147] = 6.53061561E-11;
  COFTD[148] = -2.72323151E-02;
  COFTD[149] = 8.39182512E-04;
  COFTD[150] = -4.13848987E-07;
  COFTD[151] = 6.54926559E-11;
  COFTD[152] = 9.86932164E-02;
  COFTD[153] = 7.20973229E-04;
  COFTD[154] = -3.77134366E-07;
  COFTD[155] = 6.19201176E-11;
  COFTD[156] = -1.41640200E-01;
  COFTD[157] = 9.21402335E-04;
  COFTD[158] = -4.23209196E-07;
  COFTD[159] = 6.41398937E-11;
  COFTD[160] = -1.41951569E-01;
  COFTD[161] = 9.23427864E-04;
  COFTD[162] = -4.24139542E-07;
  COFTD[163] = 6.42808932E-11;
  COFTD[164] = -4.05264355E-02;
  COFTD[165] = 8.65034494E-04;
  COFTD[166] = -4.23754623E-07;
  COFTD[167] = 6.67873033E-11;
  COFTD[168] = -4.05741399E-02;
  COFTD[169] = 8.66052741E-04;
  COFTD[170] = -4.24253431E-07;
  COFTD[171] = 6.68659197E-11;
  COFTD[172] = 2.01521521E-01;
  COFTD[173] = 5.62743751E-04;
  COFTD[174] = -3.08519054E-07;
  COFTD[175] = 5.22805672E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[22];
  amrex::Real SIG[22];
  amrex::Real wt[22];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: H2
  // Imported from NIST
  Tci[0] = 33.145000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (2.015880 * 2.015880 * 12.964000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (2.015880 * 12.964000);
  acentric_i[0] = -0.219000;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O2
  // Imported from NIST
  Tci[3] = 154.581000;
  ai[3] = 1e6 * 0.42748 * Rcst * Rcst * Tci[3] * Tci[3] /
          (31.998800 * 31.998800 * 50.430466);
  bi[3] = 0.08664 * Rcst * Tci[3] / (31.998800 * 50.430466);
  acentric_i[3] = 0.022200;

  // species 4: OH
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2O
  // Imported from NIST
  Tci[5] = 647.096000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (18.015340 * 18.015340 * 220.640000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (18.015340 * 220.640000);
  acentric_i[5] = 0.344300;

  // species 6: HO2
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: CH3
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: CH4
  // Imported from NIST
  Tci[9] = 190.560000;
  ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] /
          (16.043030 * 16.043030 * 45.990000);
  bi[9] = 0.08664 * Rcst * Tci[9] / (16.043030 * 45.990000);
  acentric_i[9] = 0.011000;

  // species 10: CO
  // Imported from NIST
  Tci[10] = 132.850000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (28.010000 * 28.010000 * 34.940000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (28.010000 * 34.940000);
  acentric_i[10] = 0.045000;

  // species 11: CO2
  // Imported from NIST
  Tci[11] = 304.120000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (44.009950 * 44.009950 * 73.740000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (44.009950 * 73.740000);
  acentric_i[11] = 0.225000;

  // species 12: CH2O
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: C2H2
  // Imported from NIST
  Tci[13] = 308.300000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (26.038000 * 26.038000 * 61.140000);
  bi[13] = 0.08664 * Rcst * Tci[13] / (26.038000 * 61.140000);
  acentric_i[13] = 0.189000;

  // species 14: C2H4
  // Imported from NIST
  Tci[14] = 282.340000;
  ai[14] = 1e6 * 0.42748 * Rcst * Rcst * Tci[14] * Tci[14] /
           (28.054000 * 28.054000 * 50.410000);
  bi[14] = 0.08664 * Rcst * Tci[14] / (28.054000 * 50.410000);
  acentric_i[14] = 0.087000;

  // species 15: C2H6
  // Imported from NIST
  Tci[15] = 305.320000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (30.070120 * 30.070120 * 48.720000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (30.070120 * 48.720000);
  acentric_i[15] = 0.099000;

  // species 16: HCCO
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: CH2CO
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: CH3CHO
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: aC3H5
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C3H6
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: N2
  // Imported from NIST
  Tci[21] = 126.192000;
  ai[21] = 1e6 * 0.42748 * Rcst * Rcst * Tci[21] * Tci[21] /
           (28.013400 * 28.013400 * 33.958000);
  bi[21] = 0.08664 * Rcst * Tci[21] / (28.013400 * 33.958000);
  acentric_i[21] = 0.037200;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: H2
  // Imported from NIST
  sqrtOneOverTc[0] = 1.7369646834812e-01;
  sqrtAsti[0] = 2.4824229305911e+05;
  Bi[0] = 9.1362254169923e+00;
  Fomega[0] = 1.3798618890700e-01;

  // species 1: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 7.2391579785311e-02;
  sqrtAsti[1] = 5.8451221185793e+05;
  Bi[1] = 4.4006634563410e+00;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 9.7460146948181e-02;
  sqrtAsti[2] = 4.2500156012386e+04;
  Bi[2] = 6.6930234851885e-01;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: O2
  // Imported from NIST
  sqrtOneOverTc[3] = 8.0430717653241e-02;
  sqrtAsti[3] = 3.6980081924740e+04;
  Bi[3] = 6.9005216444999e-01;
  Fomega[3] = 5.1945301904908e-01;

  // species 4: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 9.7460146948181e-02;
  sqrtAsti[4] = 3.9981183985545e+04;
  Bi[4] = 6.2963299076575e-01;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: H2O
  // Imported from NIST
  sqrtOneOverTc[5] = 3.9311140369715e-02;
  sqrtAsti[5] = 1.3145468419592e+05;
  Bi[5] = 1.1727204136223e+00;
  Fomega[5] = 1.0013577274636e+00;

  // species 6: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[6] = 8.4114315417892e-02;
  sqrtAsti[6] = 3.3657825710980e+04;
  Bi[6] = 6.4505861132042e-01;
  Fomega[6] = 4.8508000000000e-01;

  // species 7: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[7] = 8.4114315417892e-02;
  sqrtAsti[7] = 3.2660380884830e+04;
  Bi[7] = 6.2594239211036e-01;
  Fomega[7] = 4.8508000000000e-01;

  // species 8: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[8] = 7.2642504557751e-02;
  sqrtAsti[8] = 9.8558148656101e+04;
  Bi[8] = 1.8791630452967e+00;
  Fomega[8] = 4.8508000000000e-01;

  // species 9: CH4
  // Imported from NIST
  sqrtOneOverTc[9] = 7.2440948474968e-02;
  sqrtAsti[9] = 9.5215046085708e+04;
  Bi[9] = 1.8605203320660e+00;
  Fomega[9] = 5.0213035482700e-01;

  // species 10: CO
  // Imported from NIST
  sqrtOneOverTc[10] = 8.6759935530451e-02;
  sqrtAsti[10] = 4.3619324712923e+04;
  Bi[10] = 9.7786303823350e-01;
  Fomega[10] = 5.5459948367500e-01;

  // species 11: CO2
  // Imported from NIST
  sqrtOneOverTc[11] = 5.7342616962522e-02;
  sqrtAsti[11] = 4.3745610142919e+04;
  Bi[11] = 6.7506167841745e-01;
  Fomega[11] = 8.2653709187500e-01;

  // species 12: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 3.9062261583604e-02;
  sqrtAsti[12] = 8.4274889632487e+04;
  Bi[12] = 7.9341968505345e-01;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: C2H2
  // Imported from NIST
  sqrtOneOverTc[13] = 5.6952558345025e-02;
  sqrtAsti[13] = 8.2318059295808e+04;
  Bi[13] = 1.3950602011188e+00;
  Fomega[13] = 7.7293553202700e-01;

  // species 14: C2H4
  // Imported from NIST
  sqrtOneOverTc[14] = 5.9513267432530e-02;
  sqrtAsti[14] = 7.7056842134487e+04;
  Bi[14] = 1.4381805192666e+00;
  Fomega[14] = 6.1893034120300e-01;

  // species 15: C2H6
  // Imported from NIST
  sqrtOneOverTc[15] = 5.7229819101749e-02;
  sqrtAsti[15] = 7.9078494187583e+04;
  Bi[15] = 1.5012924285481e+00;
  Fomega[15] = 6.3721234098700e-01;

  // species 16: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[16] = 7.1174827921716e-02;
  sqrtAsti[16] = 1.9669985462832e+04;
  Bi[16] = 1.9608582502049e-01;
  Fomega[16] = 4.8508000000000e-01;

  // species 17: CH2CO
  // Computed from Lennard-Jones
  sqrtOneOverTc[17] = 4.1747340173827e-02;
  sqrtAsti[17] = 6.5499293944176e+04;
  Bi[17] = 7.6640249759188e-01;
  Fomega[17] = 4.8508000000000e-01;

  // species 18: CH3CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[18] = 4.1747340173827e-02;
  sqrtAsti[18] = 6.2501845947638e+04;
  Bi[18] = 7.3132957554014e-01;
  Fomega[18] = 4.8508000000000e-01;

  // species 19: aC3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 5.3367780663448e-02;
  sqrtAsti[19] = 7.3719333603301e+04;
  Bi[19] = 1.5501433096373e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 5.3367780663448e-02;
  sqrtAsti[20] = 7.1953475180922e+04;
  Bi[20] = 1.5130114815887e+00;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: N2
  // Imported from NIST
  sqrtOneOverTc[21] = 8.9019282240563e-02;
  sqrtAsti[21] = 4.2022983929562e+04;
  Bi[21] = 9.5560052221563e-01;
  Fomega[21] = 5.4259343186608e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif
